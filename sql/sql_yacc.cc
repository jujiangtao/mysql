/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <limits>
#include <type_traits>                       // for std::remove_reference
#include <utility>

#include "my_alloc.h"
#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/plugin.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/dd/info_schema/show.h"             // build_show_...
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/derror.h"
#include "sql/event_parse_data.h"
                                             // used in RESET_MASTER parsing check
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/json_dom.h"
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/log_event.h"
#include "sql/opt_explain_json.h"
#include "sql/opt_explain_traditional.h"
#include "sql/parser_yystype.h"
#include "sql/protocol.h"
#include "sql/resourcegroups/resource_group_mgr.h" // resource_group_support
#include "sql/resourcegroups/resource_group_sql_cmd.h" // Sql_cmd_*_resource_group etc.
#include "sql/rpl_filter.h"
#include "sql/rpl_msr.h"       /* multisource replication */
#include "sql/rpl_slave.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/sp_rcontext.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance,
                                               // Sql_cmd_unlock_instance
#include "sql/sql_base.h"                        // find_temporary_table
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_partition.h"                    /* mem_alloc_error */
#include "sql/sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                        // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_show_status.h"                 // build_show_session_status, ...
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql/table_function.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    DBUG_ASSERT(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 476 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_3_37170406_1575921257_28_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_3_37170406_1575921257_28_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SERVER_ID_SYM = 560,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    KEYWORD_USED_AS_IDENT = 996,
    KEYWORD_USED_AS_KEYWORD = 997,
    CONDITIONLESS_JOIN = 998,
    SUBQUERY_AS_EXPR = 999,
    EMPTY_FROM_CLAUSE = 1000
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define KEYWORD_USED_AS_IDENT 996
#define KEYWORD_USED_AS_KEYWORD 997
#define CONDITIONLESS_JOIN 998
#define SUBQUERY_AS_EXPR 999
#define EMPTY_FROM_CLAUSE 1000

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_3_37170406_1575921257_28_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2025 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  995
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   82672

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  765
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  914
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2967
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5207

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1000

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   762,     2,     2,     2,   750,   745,     2,
     754,   755,   748,   747,   759,   746,   760,   749,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   761,   757,
       2,     2,     2,     2,   758,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   751,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   763,   744,   764,   752,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   753,
     756
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1974,  1974,  1975,  1980,  1990,  2008,  2015,  2028,  2027,
    2052,  2059,  2061,  2065,  2066,  2071,  2072,  2073,  2074,  2075,
    2076,  2077,  2078,  2079,  2080,  2081,  2082,  2083,  2084,  2085,
    2086,  2087,  2088,  2089,  2090,  2091,  2092,  2093,  2094,  2095,
    2096,  2097,  2098,  2099,  2100,  2101,  2102,  2103,  2104,  2105,
    2106,  2107,  2108,  2109,  2110,  2111,  2112,  2113,  2114,  2115,
    2116,  2117,  2118,  2119,  2120,  2121,  2122,  2123,  2124,  2125,
    2126,  2127,  2128,  2129,  2130,  2131,  2132,  2133,  2134,  2135,
    2136,  2137,  2138,  2139,  2140,  2141,  2142,  2143,  2144,  2145,
    2146,  2147,  2148,  2149,  2150,  2151,  2152,  2153,  2154,  2155,
    2156,  2157,  2158,  2159,  2160,  2161,  2165,  2175,  2176,  2180,
    2200,  2207,  2218,  2217,  2228,  2230,  2234,  2235,  2239,  2252,
    2251,  2271,  2270,  2284,  2283,  2298,  2299,  2302,  2309,  2316,
    2323,  2330,  2337,  2345,  2354,  2360,  2367,  2374,  2382,  2391,
    2397,  2403,  2411,  2419,  2425,  2432,  2439,  2447,  2459,  2465,
    2472,  2479,  2487,  2497,  2498,  2502,  2506,  2510,  2514,  2518,
    2528,  2532,  2536,  2541,  2552,  2557,  2561,  2565,  2569,  2570,
    2574,  2578,  2582,  2587,  2591,  2595,  2599,  2605,  2639,  2643,
    2647,  2651,  2657,  2658,  2668,  2671,  2673,  2674,  2678,  2684,
    2690,  2699,  2704,  2712,  2716,  2732,  2736,  2747,  2751,  2766,
    2776,  2786,  2791,  2799,  2806,  2819,  2818,  2833,  2835,  2847,
    2867,  2886,  2906,  2923,  2928,  2937,  2942,  2954,  2966,  2980,
    2996,  3000,  3007,  3016,  3024,  3035,  3036,  3040,  3044,  3048,
    3052,  3056,  3061,  3065,  3073,  3072,  3104,  3103,  3112,  3121,
    3122,  3128,  3134,  3144,  3150,  3158,  3160,  3169,  3170,  3174,
    3180,  3189,  3190,  3198,  3198,  3256,  3257,  3258,  3259,  3260,
    3261,  3262,  3263,  3264,  3265,  3266,  3267,  3268,  3272,  3286,
    3305,  3306,  3310,  3311,  3316,  3318,  3320,  3322,  3324,  3326,
    3328,  3334,  3335,  3336,  3340,  3344,  3351,  3358,  3359,  3366,
    3368,  3372,  3373,  3377,  3428,  3430,  3434,  3435,  3439,  3489,
    3490,  3491,  3492,  3496,  3497,  3501,  3502,  3507,  3510,  3534,
    3633,  3651,  3650,  3729,  3725,  3801,  3802,  3807,  3809,  3814,
    3837,  3848,  3852,  3874,  3875,  3879,  3883,  3896,  3902,  3908,
    3917,  3930,  3956,  3962,  3963,  3969,  3970,  3975,  3981,  3994,
    3996,  4016,  4022,  4024,  4026,  4028,  4030,  4032,  4034,  4036,
    4038,  4040,  4042,  4044,  4049,  4063,  4080,  4081,  4083,  4088,
    4094,  4103,  4109,  4118,  4126,  4154,  4162,  4164,  4173,  4178,
    4184,  4193,  4201,  4203,  4205,  4207,  4209,  4211,  4213,  4215,
    4217,  4219,  4221,  4223,  4225,  4230,  4250,  4274,  4278,  4286,
    4287,  4288,  4289,  4290,  4291,  4292,  4293,  4294,  4295,  4296,
    4297,  4298,  4303,  4302,  4313,  4313,  4373,  4372,  4429,  4429,
    4451,  4508,  4555,  4579,  4578,  4603,  4625,  4627,  4628,  4632,
    4650,  4671,  4679,  4717,  4671,  4745,  4747,  4748,  4752,  4753,
    4758,  4768,  4757,  4820,  4819,  4833,  4834,  4838,  4839,  4844,
    4852,  4843,  4902,  4910,  4901,  4956,  4969,  4974,  4973,  5011,
    5012,  5017,  5016,  5050,  5050,  5069,  5068,  5116,  5131,  5139,
    5130,  5197,  5205,  5194,  5247,  5249,  5254,  5256,  5258,  5273,
    5274,  5281,  5282,  5289,  5290,  5294,  5300,  5309,  5310,  5311,
    5312,  5313,  5314,  5315,  5316,  5317,  5318,  5322,  5323,  5327,
    5333,  5342,  5343,  5344,  5345,  5346,  5347,  5351,  5352,  5356,
    5362,  5371,  5375,  5376,  5380,  5386,  5395,  5396,  5397,  5398,
    5399,  5400,  5401,  5405,  5406,  5410,  5416,  5425,  5426,  5427,
    5431,  5435,  5436,  5440,  5444,  5451,  5458,  5465,  5472,  5479,
    5486,  5493,  5500,  5507,  5514,  5518,  5525,  5532,  5533,  5608,
    5614,  5618,  5623,  5628,  5634,  5642,  5652,  5653,  5667,  5675,
    5679,  5683,  5687,  5691,  5695,  5702,  5703,  5708,  5709,  5727,
    5728,  5740,  5741,  5746,  5755,  5756,  5761,  5767,  5777,  5778,
    5790,  5791,  5795,  5801,  5810,  5819,  5822,  5827,  5835,  5836,
    5840,  5844,  5851,  5858,  5868,  5867,  5885,  5891,  5900,  5901,
    5906,  5907,  5911,  5917,  5926,  5933,  5934,  5938,  5944,  5953,
    5955,  5957,  5959,  5961,  5963,  5965,  5967,  5976,  5977,  5981,
    5982,  5986,  5991,  5996,  6011,  6012,  6016,  6022,  6031,  6037,
    6045,  6047,  6051,  6055,  6059,  6063,  6067,  6071,  6075,  6079,
    6083,  6087,  6091,  6095,  6099,  6103,  6107,  6124,  6128,  6132,
    6136,  6140,  6144,  6148,  6152,  6156,  6160,  6164,  6168,  6172,
    6176,  6180,  6184,  6191,  6205,  6209,  6213,  6217,  6221,  6222,
    6223,  6224,  6225,  6226,  6230,  6231,  6232,  6236,  6237,  6238,
    6239,  6243,  6249,  6258,  6259,  6263,  6270,  6271,  6279,  6285,
    6291,  6296,  6306,  6314,  6322,  6326,  6327,  6331,  6332,  6336,
    6337,  6341,  6345,  6349,  6370,  6372,  6376,  6377,  6378,  6382,
    6386,  6390,  6394,  6398,  6402,  6406,  6410,  6415,  6420,  6429,
    6438,  6442,  6446,  6451,  6460,  6464,  6487,  6491,  6495,  6499,
    6503,  6507,  6511,  6512,  6516,  6520,  6524,  6529,  6534,  6539,
    6544,  6549,  6553,  6557,  6562,  6566,  6573,  6575,  6577,  6579,
    6581,  6583,  6585,  6587,  6592,  6593,  6597,  6598,  6602,  6603,
    6604,  6605,  6606,  6610,  6611,  6612,  6613,  6614,  6618,  6623,
    6627,  6629,  6633,  6634,  6635,  6636,  6641,  6645,  6654,  6658,
    6663,  6667,  6676,  6677,  6681,  6682,  6683,  6691,  6692,  6696,
    6700,  6704,  6705,  6706,  6715,  6716,  6717,  6718,  6721,  6722,
    6727,  6731,  6735,  6736,  6740,  6759,  6778,  6782,  6786,  6790,
    6794,  6798,  6802,  6806,  6810,  6814,  6818,  6822,  6826,  6830,
    6834,  6838,  6847,  6852,  6868,  6869,  6870,  6874,  6875,  6876,
    6880,  6886,  6890,  6894,  6895,  6899,  6908,  6912,  6913,  6917,
    6926,  6930,  6931,  6935,  6941,  6945,  6946,  6950,  6951,  6956,
    6957,  6961,  6968,  6976,  6982,  6992,  6996,  7001,  7006,  7011,
    7018,  7024,  7035,  7036,  7044,  7043,  7055,  7057,  7061,  7076,
    7077,  7081,  7088,  7098,  7099,  7100,  7101,  7106,  7110,  7115,
    7120,  7126,  7135,  7136,  7137,  7138,  7139,  7143,  7144,  7148,
    7149,  7153,  7154,  7158,  7159,  7160,  7164,  7165,  7169,  7170,
    7174,  7180,  7189,  7190,  7204,  7205,  7209,  7215,  7224,  7228,
    7229,  7233,  7239,  7248,  7249,  7254,  7255,  7259,  7283,  7284,
    7285,  7289,  7290,  7294,  7295,  7299,  7300,  7304,  7305,  7306,
    7310,  7316,  7326,  7332,  7347,  7353,  7363,  7364,  7373,  7374,
    7378,  7379,  7383,  7389,  7401,  7411,  7425,  7424,  7445,  7444,
    7466,  7465,  7487,  7486,  7505,  7499,  7522,  7521,  7557,  7579,
    7598,  7618,  7626,  7648,  7672,  7683,  7685,  7700,  7714,  7720,
    7732,  7744,  7758,  7759,  7763,  7773,  7782,  7783,  7787,  7788,
    7792,  7798,  7804,  7812,  7827,  7835,  7843,  7850,  7857,  7864,
    7871,  7877,  7883,  7889,  7901,  7913,  7922,  7923,  7927,  7928,
    7932,  7938,  7944,  7950,  7959,  7973,  7974,  7975,  7976,  7980,
    7981,  7993,  7994,  7998,  7999,  8003,  8004,  8019,  8024,  8032,
    8036,  8044,  8048,  8053,  8054,  8063,  8067,  8078,  8082,  8086,
    8090,  8094,  8099,  8104,  8109,  8114,  8121,  8125,  8129,  8133,
    8138,  8143,  8148,  8153,  8157,  8164,  8165,  8169,  8173,  8180,
    8181,  8189,  8196,  8201,  8205,  8210,  8221,  8222,  8230,  8234,
    8238,  8242,  8246,  8250,  8255,  8259,  8263,  8267,  8271,  8275,
    8279,  8283,  8287,  8291,  8295,  8299,  8303,  8307,  8311,  8315,
    8319,  8323,  8329,  8333,  8340,  8345,  8350,  8358,  8359,  8364,
    8369,  8375,  8384,  8388,  8392,  8409,  8413,  8417,  8433,  8435,
    8439,  8440,  8444,  8445,  8446,  8450,  8451,  8452,  8456,  8457,
    8458,  8459,  8463,  8468,  8476,  8477,  8487,  8503,  8501,  8523,
    8540,  8543,  8550,  8554,  8561,  8565,  8569,  8576,  8581,  8584,
    8591,  8594,  8601,  8604,  8611,  8614,  8622,  8625,  8632,  8636,
    8643,  8647,  8655,  8659,  8684,  8685,  8686,  8691,  8696,  8703,
    8717,  8718,  8719,  8723,  8732,  8733,  8737,  8738,  8746,  8747,
    8748,  8752,  8762,  8763,  8782,  8787,  8794,  8804,  8812,  8820,
    8821,  8825,  8826,  8834,  8836,  8838,  8840,  8842,  8844,  8849,
    8856,  8857,  8858,  8863,  8862,  8868,  8875,  8880,  8888,  8889,
    8893,  8906,  8910,  8919,  8925,  8934,  8941,  8942,  8946,  8951,
    8958,  8964,  8973,  8980,  8987,  8988,  8998,  8999,  9003,  9007,
    9011,  9015,  9051,  9055,  9059,  9063,  9102,  9108,  9115,  9121,
    9128,  9133,  9139,  9147,  9151,  9155,  9159,  9163,  9171,  9172,
    9173,  9180,  9185,  9189,  9201,  9222,  9245,  9246,  9250,  9254,
    9255,  9259,  9265,  9274,  9281,  9293,  9296,  9300,  9305,  9309,
    9313,  9322,  9328,  9337,  9341,  9345,  9352,  9353,  9357,  9361,
    9362,  9366,  9367,  9371,  9377,  9383,  9393,  9394,  9402,  9403,
    9404,  9405,  9406,  9410,  9411,  9416,  9422,  9427,  9433,  9437,
    9441,  9445,  9449,  9453,  9457,  9461,  9465,  9469,  9473,  9477,
    9490,  9494,  9498,  9503,  9507,  9514,  9518,  9525,  9529,  9533,
    9537,  9545,  9549,  9553,  9558,  9563,  9571,  9579,  9583,  9584,
    9588,  9592,  9596,  9600,  9604,  9608,  9612,  9616,  9620,  9624,
    9628,  9632,  9636,  9640,  9644,  9648,  9649,  9653,  9654,  9661,
    9662,  9666,  9667,  9671,  9672,  9673,  9674,  9675,  9676,  9677,
    9681,  9682,  9686,  9687,  9688,  9689,  9690,  9691,  9695,  9696,
    9697,  9698,  9699,  9700,  9704,  9708,  9712,  9716,  9720,  9724,
    9725,  9729,  9733,  9737,  9741,  9745,  9749,  9753,  9757,  9761,
    9765,  9769,  9773,  9778,  9785,  9796,  9797,  9807,  9811,  9815,
    9819,  9823,  9827,  9831,  9835,  9839,  9843,  9847,  9851,  9855,
    9859,  9863,  9867,  9871,  9875,  9880,  9885,  9890,  9894,  9898,
    9902,  9906,  9911,  9915,  9934,  9938,  9942,  9946,  9950,  9955,
    9960,  9964,  9968,  9973,  9977,  9981,  9985,  9989,  9993,  9997,
   10001, 10006, 10010, 10014, 10018, 10022, 10034, 10038, 10042, 10046,
   10050, 10054, 10058, 10062, 10066, 10070, 10074, 10078, 10082, 10086,
   10090, 10094, 10098, 10102, 10106, 10110, 10114, 10118, 10122, 10126,
   10132, 10138, 10144, 10150, 10156, 10160, 10178, 10182, 10189, 10191,
   10204, 10205, 10209, 10210, 10214, 10215, 10219, 10225, 10234, 10241,
   10242, 10246, 10250, 10254, 10258, 10262, 10272, 10282, 10286, 10290,
   10294, 10298, 10307, 10311, 10315, 10319, 10323, 10327, 10331, 10335,
   10339, 10343, 10353, 10357, 10361, 10365, 10369, 10373, 10377, 10388,
   10399, 10403, 10407, 10420, 10424, 10429, 10438, 10441, 10449, 10452,
   10456, 10465, 10468, 10472, 10480, 10483, 10490, 10497, 10501, 10508,
   10515, 10522, 10543, 10546, 10554, 10557, 10565, 10568, 10576, 10579,
   10588, 10593, 10600, 10604, 10608, 10612, 10616, 10623, 10630, 10634,
   10638, 10642, 10646, 10654, 10657, 10661, 10665, 10669, 10675, 10676,
   10677, 10681, 10688, 10692, 10699, 10703, 10710, 10711, 10716, 10721,
   10725, 10726, 10730, 10735, 10745, 10752, 10759, 10778, 10786, 10793,
   10800, 10807, 10814, 10821, 10828, 10835, 10842, 10849, 10857, 10867,
   10868, 10872, 10878, 10887, 10888, 10892, 10898, 10907, 10908, 10912,
   10913, 10917, 10925, 10934, 10935, 10936, 10949, 10950, 11031, 11035,
   11040, 11044, 11048, 11058, 11065, 11066, 11067, 11071, 11072, 11073,
   11074, 11077, 11078, 11081, 11083, 11086, 11088, 11096, 11097, 11101,
   11130, 11131, 11132, 11133, 11135, 11137, 11141, 11142, 11151, 11152,
   11156, 11163, 11164, 11168, 11181, 11192, 11208, 11215, 11221, 11230,
   11234, 11244, 11251, 11254, 11262, 11266, 11271, 11276, 11281, 11289,
   11292, 11295, 11299, 11303, 11311, 11314, 11315, 11316, 11320, 11321,
   11325, 11331, 11340, 11341, 11349, 11350, 11354, 11359, 11365, 11369,
   11375, 11384, 11390, 11398, 11402, 11411, 11423, 11424, 11425, 11426,
   11427, 11428, 11429, 11430, 11431, 11432, 11433, 11434, 11438, 11439,
   11440, 11441, 11442, 11443, 11444, 11445, 11446, 11450, 11451, 11452,
   11453, 11456, 11458, 11462, 11463, 11466, 11468, 11472, 11473, 11477,
   11481, 11482, 11489, 11493, 11500, 11505, 11514, 11531, 11539, 11546,
   11552, 11562, 11565, 11572, 11578, 11587, 11601, 11602, 11609, 11614,
   11625, 11626, 11641, 11646, 11656, 11663, 11664, 11668, 11675, 11680,
   11690, 11691, 11695, 11696, 11700, 11701, 11705, 11712, 11718, 11724,
   11733, 11737, 11741, 11745, 11749, 11756, 11757, 11761, 11762, 11763,
   11764, 11765, 11766, 11770, 11771, 11772, 11773, 11774, 11778, 11779,
   11780, 11781, 11782, 11786, 11787, 11788, 11789, 11790, 11794, 11799,
   11800, 11804, 11810, 11819, 11823, 11830, 11837, 11843, 11847, 11855,
   11868, 11884, 11893, 11903, 11926, 11961, 11968, 11983, 11993, 12008,
   12017, 12028, 12048, 12070, 12093, 12101, 12108, 12115, 12121, 12130,
   12136, 12145, 12146, 12150, 12151, 12155, 12156, 12160, 12166, 12175,
   12176, 12183, 12203, 12223, 12241, 12254, 12271, 12287, 12288, 12289,
   12298, 12302, 12303, 12314, 12316, 12320, 12325, 12330, 12338, 12343,
   12348, 12356, 12362, 12371, 12378, 12379, 12383, 12387, 12388, 12392,
   12397, 12407, 12412, 12421, 12422, 12425, 12427, 12431, 12435, 12440,
   12445, 12449, 12455, 12464, 12465, 12473, 12477, 12491, 12495, 12504,
   12521, 12522, 12526, 12533, 12545, 12553, 12554, 12560, 12573, 12583,
   12596, 12598, 12602, 12603, 12607, 12608, 12609, 12613, 12619, 12621,
   12624, 12626, 12629, 12630, 12633, 12637, 12641, 12645, 12649, 12653,
   12657, 12661, 12665, 12673, 12676, 12690, 12689, 12700, 12709, 12715,
   12727, 12738, 12749, 12764, 12771, 12779, 12781, 12804, 12808, 12813,
   12812, 12823, 12822, 12832, 12850, 12857, 12865, 12873, 12881, 12889,
   12897, 12907, 12929, 12934, 12956, 12965, 12974, 12980, 12985, 12990,
   12995, 13001, 13010, 13018, 13022, 13026, 13033, 13040, 13046, 13056,
   13066, 13071, 13076, 13081, 13090, 13092, 13094, 13099, 13100, 13103,
   13105, 13109, 13110, 13114, 13115, 13119, 13120, 13124, 13125, 13126,
   13127, 13131, 13132, 13136, 13137, 13141, 13142, 13146, 13147, 13148,
   13153, 13160, 13167, 13168, 13169, 13170, 13171, 13172, 13179, 13180,
   13185, 13188, 13202, 13209, 13210, 13215, 13223, 13222, 13235, 13234,
   13248, 13252, 13253, 13266, 13265, 13288, 13289, 13294, 13296, 13298,
   13300, 13302, 13304, 13306, 13308, 13310, 13312, 13314, 13316, 13321,
   13322, 13327, 13326, 13333, 13343, 13344, 13349, 13354, 13363, 13363,
   13366, 13365, 13385, 13386, 13390, 13391, 13406, 13405, 13416, 13420,
   13424, 13438, 13450, 13451, 13452, 13458, 13469, 13508, 13509, 13513,
   13514, 13518, 13519, 13520, 13524, 13525, 13529, 13530, 13534, 13535,
   13539, 13544, 13548, 13553, 13559, 13564, 13572, 13573, 13577, 13582,
   13586, 13591, 13599, 13600, 13604, 13605, 13609, 13610, 13614, 13615,
   13616, 13620, 13626, 13635, 13636, 13643, 13644, 13648, 13656, 13676,
   13697, 13702, 13708, 13713, 13721, 13728, 13735, 13745, 13764, 13765,
   13766, 13777, 13778, 13779, 13780, 13792, 13796, 13800, 13804, 13808,
   13812, 13819, 13823, 13827, 13831, 13835, 13843, 13847, 13851, 13865,
   13866, 13870, 13874, 13883, 13890, 13897, 13901, 13905, 13909, 13913,
   13917, 13926, 13932, 13945, 13951, 13962, 13963, 13993, 14006, 14019,
   14035, 14051, 14068, 14072, 14073, 14080, 14096, 14097, 14108, 14109,
   14119, 14120, 14131, 14132, 14142, 14143, 14144, 14148, 14149, 14150,
   14154, 14159, 14167, 14171, 14185, 14190, 14198, 14222, 14223, 14224,
   14225, 14226, 14233, 14234, 14235, 14242, 14243, 14244, 14245, 14246,
   14247, 14248, 14249, 14250, 14251, 14252, 14253, 14254, 14255, 14256,
   14257, 14258, 14259, 14260, 14261, 14262, 14263, 14264, 14265, 14266,
   14267, 14268, 14269, 14270, 14271, 14272, 14273, 14274, 14275, 14276,
   14291, 14292, 14293, 14300, 14301, 14302, 14303, 14304, 14305, 14306,
   14307, 14308, 14316, 14317, 14318, 14319, 14320, 14321, 14322, 14323,
   14324, 14325, 14326, 14327, 14328, 14329, 14330, 14331, 14332, 14333,
   14334, 14335, 14336, 14337, 14338, 14339, 14340, 14341, 14342, 14343,
   14344, 14345, 14346, 14347, 14348, 14349, 14350, 14351, 14352, 14353,
   14354, 14355, 14356, 14357, 14358, 14359, 14360, 14361, 14362, 14363,
   14364, 14365, 14366, 14367, 14368, 14369, 14370, 14371, 14372, 14373,
   14374, 14375, 14376, 14377, 14378, 14379, 14380, 14381, 14382, 14383,
   14384, 14385, 14386, 14387, 14388, 14389, 14390, 14391, 14392, 14393,
   14394, 14395, 14396, 14397, 14398, 14399, 14400, 14401, 14402, 14403,
   14404, 14405, 14406, 14407, 14408, 14409, 14410, 14411, 14412, 14413,
   14414, 14415, 14416, 14417, 14418, 14419, 14420, 14421, 14422, 14423,
   14424, 14425, 14426, 14427, 14428, 14429, 14430, 14431, 14432, 14433,
   14434, 14435, 14436, 14437, 14438, 14439, 14440, 14441, 14442, 14443,
   14444, 14445, 14446, 14447, 14448, 14449, 14450, 14451, 14452, 14453,
   14454, 14455, 14456, 14457, 14458, 14459, 14460, 14461, 14462, 14463,
   14464, 14465, 14466, 14467, 14468, 14469, 14470, 14471, 14472, 14473,
   14474, 14475, 14476, 14477, 14478, 14479, 14480, 14481, 14482, 14483,
   14484, 14485, 14486, 14487, 14488, 14489, 14490, 14491, 14492, 14493,
   14494, 14495, 14496, 14497, 14498, 14499, 14500, 14501, 14502, 14503,
   14504, 14505, 14506, 14507, 14508, 14509, 14510, 14511, 14512, 14513,
   14514, 14515, 14516, 14517, 14518, 14519, 14520, 14521, 14522, 14523,
   14524, 14525, 14526, 14527, 14528, 14529, 14530, 14531, 14532, 14533,
   14534, 14535, 14536, 14537, 14538, 14539, 14540, 14541, 14542, 14543,
   14544, 14545, 14546, 14547, 14548, 14549, 14550, 14551, 14552, 14553,
   14554, 14555, 14556, 14557, 14558, 14559, 14560, 14561, 14562, 14563,
   14564, 14565, 14566, 14567, 14568, 14569, 14570, 14571, 14572, 14573,
   14574, 14575, 14576, 14577, 14578, 14579, 14580, 14581, 14582, 14583,
   14584, 14585, 14586, 14587, 14588, 14589, 14590, 14591, 14592, 14593,
   14594, 14595, 14596, 14597, 14598, 14599, 14600, 14601, 14602, 14603,
   14604, 14605, 14606, 14607, 14608, 14609, 14610, 14611, 14612, 14613,
   14614, 14615, 14616, 14617, 14618, 14619, 14620, 14621, 14622, 14623,
   14624, 14625, 14626, 14627, 14628, 14629, 14630, 14631, 14632, 14633,
   14634, 14635, 14636, 14637, 14638, 14639, 14640, 14641, 14642, 14643,
   14644, 14645, 14646, 14647, 14648, 14649, 14650, 14651, 14652, 14653,
   14654, 14655, 14656, 14657, 14658, 14659, 14660, 14661, 14662, 14663,
   14664, 14665, 14666, 14667, 14668, 14669, 14670, 14671, 14672, 14673,
   14674, 14675, 14676, 14677, 14678, 14679, 14680, 14681, 14682, 14683,
   14684, 14685, 14686, 14687, 14688, 14700, 14701, 14702, 14714, 14715,
   14716, 14717, 14726, 14727, 14728, 14729, 14730, 14741, 14750, 14754,
   14758, 14762, 14769, 14777, 14785, 14797, 14801, 14806, 14811, 14816,
   14821, 14826, 14834, 14835, 14839, 14843, 14850, 14856, 14865, 14870,
   14877, 14887, 14888, 14893, 14897, 14905, 14909, 14913, 14914, 14915,
   14916, 14917, 14921, 14922, 14923, 14924, 14928, 14929, 14930, 14931,
   14935, 14936, 14937, 14938, 14939, 14940, 14945, 14953, 14959, 14963,
   14968, 14972, 14979, 14983, 14990, 14994, 14998, 15005, 15009, 15016,
   15023, 15024, 15028, 15035, 15036, 15040, 15041, 15045, 15046, 15047,
   15048, 15052, 15053, 15054, 15058, 15062, 15066, 15070, 15080, 15079,
   15092, 15102, 15103, 15107, 15108, 15112, 15140, 15141, 15142, 15147,
   15152, 15151, 15164, 15175, 15183, 15190, 15197, 15213, 15225, 15244,
   15248, 15252, 15261, 15272, 15288, 15289, 15293, 15294, 15295, 15296,
   15300, 15301, 15302, 15303, 15304, 15310, 15315, 15331, 15330, 15349,
   15354, 15365, 15370, 15387, 15386, 15403, 15416, 15417, 15418, 15419,
   15422, 15424, 15428, 15434, 15443, 15450, 15452, 15454, 15456, 15458,
   15460, 15462, 15464, 15466, 15468, 15470, 15472, 15474, 15476, 15478,
   15480, 15482, 15487, 15489, 15503, 15505, 15507, 15509, 15511, 15513,
   15515, 15517, 15519, 15521, 15523, 15525, 15527, 15529, 15534, 15535,
   15538, 15540, 15544, 15545, 15549, 15559, 15569, 15582, 15596, 15608,
   15620, 15632, 15652, 15658, 15667, 15673, 15682, 15683, 15687, 15688,
   15691, 15702, 15713, 15724, 15737, 15751, 15763, 15774, 15788, 15806,
   15817, 15828, 15842, 15853, 15867, 15882, 15895, 15906, 15911, 15919,
   15924, 15932, 15933, 15937, 15943, 15951, 15953, 15957, 15961, 15965,
   15972, 15973, 15978, 15979, 15983, 15984, 15988, 15993, 15995, 16000,
   16001, 16009, 16008, 16018, 16019, 16024, 16025, 16026, 16031, 16032,
   16033, 16037, 16038, 16042, 16054, 16063, 16073, 16082, 16096, 16097,
   16098, 16102, 16106, 16110, 16117, 16118, 16119, 16120, 16121, 16122,
   16123, 16129, 16140, 16149, 16151, 16153, 16158, 16159, 16160, 16161,
   16162, 16166, 16167, 16168, 16169, 16170, 16171, 16181, 16182, 16187,
   16200, 16213, 16215, 16217, 16222, 16227, 16229, 16231, 16237, 16238,
   16240, 16246, 16245, 16285, 16336, 16337, 16338, 16339, 16349, 16351,
   16357, 16362, 16380, 16370, 16447, 16465, 16489, 16513, 16519, 16560,
   16486, 16627, 16647, 16652, 16660, 16625, 16681, 16686, 16691, 16696,
   16701, 16706, 16714, 16715, 16718, 16727, 16737, 16755, 16756, 16760,
   16761, 16762, 16766, 16767, 16772, 16773, 16775, 16780, 16786, 16795,
   16801, 16810, 16816, 16825, 16842, 16851, 16874, 16878, 16886, 16889,
   16893, 16900, 16901, 16906, 16912, 16916, 16923, 16933, 16940, 16953,
   16954, 16958, 16959, 16967, 16968, 16973, 16981, 16982
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "KEYWORD_USED_AS_IDENT",
  "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'",
  "'{'", "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "privilege_check_def", "master_tls_ciphersuites_def", "master_file_def",
  "opt_channel", "create_table_stmt", "create_role_stmt",
  "create_resource_group_stmt", "create", "$@6", "create_srs_stmt",
  "srs_attributes", "default_role_clause", "create_index_stmt",
  "server_options_list", "server_option", "event_tail", "$@7",
  "ev_schedule_time", "$@8", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "size_number", "opt_create_table_options_etc",
  "opt_create_partitioning_etc", "opt_duplicate_as_qe",
  "as_create_query_expression", "partition_clause", "part_type_def",
  "opt_linear", "opt_key_algo", "opt_num_parts", "opt_sub_part",
  "opt_name_list", "name_list", "opt_num_subparts", "opt_part_defs",
  "part_def_list", "part_definition", "opt_part_values", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item_list_paren",
  "$@35", "part_value_item_list", "part_value_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "opt_part_options",
  "part_option_list", "part_option", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "slave", "slave_start", "start_slave_opts", "$@43", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@44", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "opt_ll_default", "opt_null_treatment",
  "opt_from_first_last", "opt_windowing_clause", "windowing_clause",
  "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error", "opt_on_empty",
  "opt_on_error", "jt_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@45", "show_param", "$@46",
  "$@47", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "opt_extended", "opt_show_cmd_type", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where", "describe_stmt",
  "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_describe_column", "flush", "$@48",
  "flush_options", "$@49", "opt_flush_lock", "$@50", "flush_options_list",
  "flush_option", "opt_table_list", "reset", "$@51", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@52", "$@53",
  "slave_reset_options", "master_reset_options", "purge", "$@54",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "grouping_expr", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "TEXT_STRING_validated", "ident", "role_ident", "label_ident",
  "lvalue_ident", "ident_or_text", "role_ident_or_text",
  "user_ident_or_text", "user", "role", "schema", "ident_keyword",
  "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@55", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@56",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@57", "grant",
  "$@58", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password", "create_user",
  "alter_user", "create_user_list", "alter_user_list", "opt_column_list",
  "column_list", "require_clause", "grant_options", "opt_grant_option",
  "opt_with_roles", "opt_grant_as", "begin_stmt", "$@59", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_option", "row_subquery", "table_subquery",
  "subquery", "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@60",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@61", "udf_tail",
  "sf_tail", "$@62", "$@63", "$@64", "$@65", "sp_tail", "$@66", "$@67",
  "$@68", "$@69", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   124,    38,    45,    43,    42,    47,
      37,    94,   126,   999,    40,    41,  1000,    59,    64,    44,
      46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4118

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4118)))

#define YYTABLE_NINF -2771

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6430,  3385,  1778, -4118,   -82,   280, 67212,  1418,  1384,  1384,
     498,  3897, -4118, -4118, -4118, 12363,  4171, -4118, 67212,  1778,
     218, 45132, 67212, -4118,   537,  1910,   -35,  1004,   159,  1284,
    1778, 67212, -4118,   734,  1870,  1778,   269,   946, 59852, 45868,
     498, 67212,  1198, 28179, -4118, -4118, 59852,  1118,   147, 67212,
     982,   -31,  1322, 67212,  1129, 60588,  2510, 21471,  2330,  1316,
    1016,   915, -4118,  1744,  1846, -4118,  1695, -4118, -4118,  1561,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, 52492, -4118, -4118,  1398,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118,  2292,   742,   895, -4118, -4118, -4118, -4118,  1808,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
     166, -4118, -4118, -4118, -4118, -4118, 61324, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118,  1924, 67212,  2064, 67212,   751,  2016,
   67212, 58380, 67212, 67212,  1572,  2032,  2130,  2187, -4118, -4118,
    2252, -4118, -4118,  1384,   498, -4118, -4118, 67212, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118,  1639, -4118,  1652, -4118, -4118,
   -4118, -4118, -4118, -4118,  1816,  2259, -4118, -4118, 67212, 67212,
   -4118,  2464,  2234,  2272,  2311,  2081, 58380,   242, 67212, -4118,
    2020, -4118,  2234,  2234,  2386,  2383,  2058, -4118, -4118, -4118,
    2252,  2637, -4118,  1901,  1930,  1936, 21471, -4118,  1941,  1958,
    1964, 16158,  1983,  1998,  2004,  2006,  2033,  2041,  2043,  2051,
    2051,  2084,  2096,  2099,  2119,  -188,  2124, -4118,  2163,  1016,
    2169, -4118, -4118,  2172,  2179,  2181,  2197, -4118,  2200,  2228,
    2242, 16917,  2277,  2296, -4118, 38483,  2299,  2309,  2319,  2324,
    2327,  2349,  2365,  2368,  2369, -4118, -4118, 16158,  2084, -4118,
   -4118, -4118,  2370,  2387,  2392,  2406,  2409,  2414,  2426,  2434,
    2435,  2448,  2451,  2458,  2473,  2474,  2475,  2480,  2084, -4118,
    1111,  2482,  2483,  1236,  2493, -4118,  2495, -4118,   371,  2496,
    2051,  2084,  2084,  2505,  2513,  2514,  2515,  2524,  2527,  2534,
    2535,  2536,  2540,  2542,  2544,  2548,  2553,  2554,  2555,  2559,
    2561,  2568,  2586, 21471, 21471, -4118, 21471, 10086, 28915, -4118,
   67212, -4118, -4118,  1917, -4118, 48076,  4278, -4118,  3183, 21471,
    1191, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118,  2085, -4118, -4118, -4118, -4118, -4118,    29, -4118,  2595,
    1918, -4118, -4118,  2032,  2032,  2032, 67212,  2488,  2032,  2032,
    2013, 67212,  2032,  2204,  2032,  2032,  2032,  2567,  1384, -4118,
   -4118, -4118, -4118,  2683,  2401,  2384,  2998, -4118,  2237, -4118,
   -4118, -4118,  2459, -4118,  2596, -4118,  2485, -4118,  2693,  2596,
   -4118,   241,  2596,   321, -4118, -4118, -4118,  2596, -4118, -4118,
   -4118, -4118,  -263, -4118, -4118, -4118, -4118,   741, -4118,  2547,
     138, 58380,  2718, -4118, -4118, -4118,  2904, 67212,   -82, -4118,
   -4118, 16158, -4118,  2935, -4118,   282,  3000, -4118,  1384,  3021,
     331, 67212, 53228, -4118,  1384, -4118, -4118,  2989, -4118,    41,
    1164,  2649, -4118, -4118,  2790, -4118,  2401,  2906,   267,   179,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   12363,  1198, -4118, -4118,   132,  2803,  -235, -4118, -4118, 48812,
    1140, -4118,  1372, -4118, 70892, -4118,  3129, 29651, 50284, -4118,
    2591, -4118, -4118, -4118, -4118, -4118, -4118, 69420,  2597,  1086,
    7267,  2790, -4118,  1668,   -73, -4118,  1668, -4118,  2605, -4118,
   67212, 67212,   -82, -4118,  1384, -4118,  2623,  2620, -4118, 67212,
    2626, -4118,  2628, -4118,   468,   468,   468,  3294,   468, -4118,
     468,  3051,  2635,  2644,  3351,  3245,  2209,  3248, -4118,  3208,
    3295,  2652,   115,   849,  1808, -4118, -4118,  2651, 67212,  2051,
   -4118,  2658,   924, -4118, -4118,  2656, -4118,  2244, -4118,  -122,
    3215, -4118,  2805,   -83, 27443,  3169,  2292, -4118,  1746,  3371,
     402,  3144, -4118, 51020,   402,  3144, -4118,   742,   895,  1395,
    3132, -4118,  3267,  2960, 53964,  1318, -4118, -4118, 53228, -4118,
   67212, 58380, -4118, 67212, -4118,  3045,  3259,  8355, 67212,  3262,
   -4118, 67212, 67212,  2901, -4118, 67212, -4118,    67, -4118,  1885,
   16158, -4118, 67212, -4118, -4118,    65, -4118,   376,  1308,  1265,
    2246, 67212, 67212, 67212,  2916,  3244, 67212,  2729,  3433, 67212,
   53228, 73836, 67212, 67212,  2234,  1971,  1760, -4118, -4118, 16158,
   16158,   408,  3372,  3431,  3431,  3431,  1884,  2813, 16158, 16158,
   16158, 16158, 16158, 16158,   427,  2695, -4118, -4118,   705, -4118,
    2715, 16158, 16158, -4118, 16158, 16158, 67212, -4118,  4569, 16158,
   16158,  1448,  3335, 16158, 16158, 16158, 10086,  5508, 16158, 16158,
   67212,  3466,  2730, -4118,  2728,  1677, 16158, 16158,  2114, 16158,
   16158, 16158, 16158, 16158, -4118, -4118, 16158, 16158, 21471, 16158,
   16158, 16158, 16158, 16158, 16158,  2722, 16158,  3431,  3431, 16158,
   16158,  2175, -4118, -4118, 16158,  2919,  2919, -4118, 16158, 10845,
   16158, -4118, -4118, -4118,  2735, -4118, -4118, -4118, 67212,  3431,
    3431, 16158, 16158, 16158,  3431,  3431, 16158,  2737,  2739, 16158,
   16158, 16158, 16158, 16158, 21471,  2745,  2747,  2750,  3372,  3372,
    3372,   617,    78,   849,   220,   146, -4118,  3005, 16158, 16158,
   -4118, -4118, 62060, -4118, -4118, -4118, 16158, -4118, 16158, 16158,
   -4118, -4118, -4118, -4118, -4118, -4118,  1562, -4118, -4118, -4118,
   17676, 21471, 21471,  2757, 21471, 21471, -4118, -4118, 21471, 21471,
   21471,  3254,  2856, 21471, 21471, 22230, 22989, 21471, 21471, 21471,
   21471,  1131,  3372, 58380, 21471, -4118, -4118,  2085,  2085, 16158,
   41427, 67212, 67212, 67212,  3152, 67212, 67212, 58380,  2822,   970,
   67212, 67212, 53228, 67212, 73836, 67212,  2032,  2917,  3968, 31859,
   -4118, -4118, -4118, -4118, -4118,  2973, -4118, -4118, -4118, -4118,
   -4118, 67212, -4118, -4118, 53228, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, 58380, -4118,  1130, 53228, 46604,   167, -4118, 67948,
   67212, -4118,   -82, -4118,  2989,  3022, -4118,  2780,  1884,  3490,
   -4118, -4118,  3260,  3513, 67212, 67212,  -182, -4118, -4118,  3258,
   -4118, -4118,  2793,  2974, 67212, 67212, -4118, 67212, 67212, -4118,
   -4118, -4118,  2799, -4118, -4118,  2085,  4575, -4118,  2800, 53228,
   53228,  1130,  3074,  1265,   131, -4118, -4118, 72364, 67212, -4118,
   -4118, -4118, -4118,  3492, 16158, -4118, 53228,  2833,  3004,  3297,
      -5, -4118,  2818,  2820, -4118,  2923, -4118, -4118,  2828, -4118,
    2832, 67212,  1631,  1086, -4118, -4118, -4118, -4118, -4118, 67212,
    2836,  1372, -4118,  2597,  1086, 30387, -4118, 11604,  3426, -4118,
      40,  2839,  2423,    40, 54700,  3144,  1762,   227,   193,   484,
   -4118,  3404, -4118,  3056,  3037, -4118, -4118,   490,  3348, -4118,
    3436, -4118,   127, -4118,  3060,  3144,    40, -4118,  3317,  3456,
    1154,  2168,   203,   -71, -4118, -4118, -4118, -4118,  2855, -4118,
    1001,  3529, -4118,  2860, -4118,  3421, -4118, -4118,  2780, -4118,
   18435,  1129,  2626, 67212, 67212,  3602, -4118, -4118,  2868, -4118,
    3251,  3072, -4118,  2992, -4118, -4118,   116, -4118, 67212, 16158,
    2061, -4118, -4118, 53228,  3507, -4118, -4118,   195, -4118,  3489,
   -4118, -4118,  2893,  2924,  3607, 58380,  3002,  2929,   186, -4118,
     413, 53228,  3025,  3504,  3505,  3506,  3508,  3509, -4118,  3518,
   -4118,  2920,  3521, -4118,  3280, -4118, -4118,  2543,  3114,  3114,
   58380,  2930, -4118, -4118, -4118,  3195, -4118, -4118,  1746, 16158,
   -4118, -4118,  1808, -4118, -4118, -4118, -4118, -4118, -4118,   772,
   -4118, -4118,  1808, -4118,  3144,  3144, -4118, -4118, -4118, -4118,
   62796,  1395,  2904, 58380,  3604, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118,  3576, -4118, -4118,
    3336,  3393,  3705, -4118,  2962,  3609,  1086,  1086,  3609,  1086,
    1086, -4118,  3138, -4118,    52, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118,  3567,  3188,  1086,  2143,  3325,  1086,  1086,  3653,
    1086,  3327,  3328,  1086,  1086,  1086,  1086,  3149,  3597, -4118,
    1086,  3473,  1433,  2572,  3481,  1086,  3342, -4118,  1476,  3611,
    1086,  1086,  1086,  1086,  1086,  3653,  3347,  3704,  1086,  1086,
    3352,   471,  3354,  3356,  1086,  1086,  1086,  1086,  1629,  1086,
    1086,  3357,  1086,  3131,  3145,  1086, -4118, -4118,  5694, -4118,
   -4118, -4118,  2530, -4118, -4118,    57, -4118, -4118,  3009,  3010,
   -4118, -4118, -4118, -4118,  3270, -4118,  3053, -4118,  3282,  3150,
   -4118,  2901,    91, 63532, 67212, -4118, -4118,  3018,  3023,   249,
   -4118,  1884,  3024,  3032, -4118,  5891,  3548, -4118, -4118, 67212,
   -4118, -4118, -4118, -4118,  3173, -4118, -4118, -4118, -4118,  2999,
   -4118,  3727,  3345, -4118, -4118,  3633, -4118,  3429,  3802,  3094,
    3703,  3437,  2234,  3609,  3207,  3815,  3595, -4118,    70,  2832,
    3233,   993, 67212,  3626,  2234, 67212, 67212, 67212, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, 67212, -4118, -4118, -4118, -4118,
   -4118, -4118,  2901,   210,   235, -4118,  3431,  3073, 16158,  3076,
    3077,  3078, 16158,   134,  1468,   377,  1463,  1707,  1138,   225,
   16158,  3079, 13122, -4118,  3082, -4118, -4118,   259,   334,  1167,
    1317,  3084, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118,  3645, -4118,   469,  3097, -4118, -4118, -4118, -4118,
    3070, -4118, 16158,  1355,   566,   574,   230,  3102,   587,  1788,
    1848,  3099, 67212, 67212,  3431,  3109,  1411,  1432,  3431,  3110,
     818,  1489,  1860,  1903,  1926,   820,  1932,  3516,  1533,   843,
     861,  1543,   897,   927, -4118,  1597,  3119,  3122,  1103,   272,
    3431,  3125,   328,  3098,  3134,  1604, 13881, 14640, 15399,   240,
    1159, -4118,  3135, -4118,  2728,  3136,  3139,   340,   212,  1646,
    3156,  3143,  1946,  3179,  3179,  1696,  1194,  1713,  1194,  1208,
     189,  3179,  3179,  3179,   316, -4118, 16158,  3158,  3159,  3160,
   58380, 16158,   171, -4118, -4118, -4118,  2294,   204, -4118, -4118,
   -4118, -4118, -4118,  1211, -4118,  3162, -4118,  1016,  2364,  3170,
   10086, -4118,  1637,  3170,  3702,  2587,  2587, 21471, -4118,  3171,
    2148,  1922, 16917,  1301, 16917,  1301,  3170,  3170,  3170, -4118,
   21471,  3181, 21471, 21471, -4118,  3372, -4118, -4118, 48076,  3182,
    3177, -4118, -4118,  1571, -4118, -4118,  3178, 67212,   970, -4118,
   -4118,  2032, -4118, -4118, -4118,    96, -4118, -4118,   143, -4118,
    3186,   118,  2832,  3718, 67212,  3184, -4118,  3654,  3661,  3670,
    3674, -4118, -4118, -4118, -4118,  3675, -4118,  3677, -4118, -4118,
    3210, -4118, 67212, 26707, 58380, -4118,  3213, -4118,  3787, -4118,
    3562, -4118, -4118,  1956,  3384, -4118, -4118, -4118, -4118, 42168,
    -204, -4118, -4118, 67212, -4118,   106,   301,  3522,  3338, -4118,
    2780, 67212,   -82,   -82, 67212, -4118,  3743, -4118,   178,  3221,
   -4118,  3222, 58380, -4118, -4118,   205, 53228, 53228,  3223, -4118,
    3400,   300,  3585, -4118,  3405,  3976,  1164, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
    3231,  3831,  3782,  3616,  3799,  3186, 42168, -4118, 67212, -4118,
   24489,  3338, -4118,  3801,  3417,  3419,   912, -4118, 55436, -4118,
    1884,   150,  3563, -4118,  3563,    20, -4118, -4118,  3749, -4118,
    3581, -4118, 73836, -4118, 58380, 73836,  3832,  3268,  3272,  3274,
    3275,  3276, 70156, 16158, -4118, -4118, -4118, 11604,  3279, -4118,
   70156, -4118, -4118, 21471,  2163, -4118,  2435, -4118,  1884, -4118,
    3778,  2085, 16158, -4118, -4118,  3291,  2234, 67212, 67212, 67212,
   67212, 67212, 53228, 67212, -4118,  1242,  1242, -4118, -4118, -4118,
      40, 67212, -4118, 67212,    40, 53228, -4118,  1762, 67212,    40,
   -4118,  3791,  3469, -4118, -4118, -4118,  3864, -4118, -4118,  3856,
    3292, -4118,  3778, -4118,  3421,  1762, -4118, -4118, -4118, -4118,
   -4118,  1762, -4118, -4118, -4118,  1762,  1762,  1762,    40,    40,
    1668, -4118, -4118,  3540,   -73,  3995, -4118,  2163,  1884,  3305,
    3306, -4118, -4118, -4118,  1977, -4118,  1016,   468,  3659, -4118,
    3872, -4118, -4118, -4118, -4118, -4118,  1591,  1763, -4118,   121,
     141,  3665,   917,  3307,  1086, -4118, -4118, -4118, -4118,  3667,
    1221, -4118, 73100,  3668,  1336, 58380,  3497,  3501, -4118, -4118,
    3502, -4118, -4118,   515,  1584, -4118,  2322,   182,   -82,  1082,
     -82,  2663,   -82,   -82,  2137,   -82,  3421,  3915,  3950, 67212,
    3408, -4118,  1509, -4118, -4118, -4118, -4118,  2662, -4118, 31123,
    3738,  1222,  3322, -4118, -4118, -4118, 51020, 51020, -4118, -4118,
   -4118, -4118, 67212,    48, -4118,  3323, -4118, 25230, -4118,  2984,
     100, -4118, -4118, -4118, -4118,  2538,  3113,  3622,  3819,  3496,
    3113,  2621,   -82,  2756, -4118,  2506,   -82,  2756,  2506,  2506,
   67212, -4118,  2003,  1086, -4118, 67212,   249,  1778,   249, -4118,
     329, 67212, 39219, 64268, 67212, 67212, 67212, 67212,  1778,  1082,
    2663, 67212,  2663, 65004,  1778,   -82,   -82,   -82,   -82,  2662,
    1086,  2663, -4118, 65004, -4118, 67212, 67212,  3842, 67212,  3846,
   67212, 67212, -4118, 58380, 67212, 65004, -4118,  1086,  1645,  2663,
   65740,  1082,  1082, 67212,  1778, 67212,  2667,   -82,  1778, -4118,
   67212, -4118, -4118, 67212, 67212,  1778,  1778,  2419,  2667,  2667,
    3349, -4118, -4118, 67212,  2663, 65004,  3363, -4118, -4118, 56172,
   -4118,  1086,  1086,  3699, -4118, -4118,  6645,  8992,  2113,  1086,
    3403,  3733,  1683, 67212, -4118,  3450,  3452, -4118, -4118, -4118,
   -4118, -4118,   249, 65004, 66476,  3873, -4118, 16158,  3973,  3974,
    3975,  3978,  3980,  3982,  3984,  3986,  3991,  3994,  3996,  3999,
    4001,  4002,  4005,  4006,  4008,  4011,  4012,  4013,  4014,  4020,
    4021,  4025,  4026,  4027,  4028,  4029,  4050,    21, -4118, -4118,
    4051,  4053,  4055,  4056,  4058,  4059,  4060,    23, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118,   139, 67212,  3496,  3418,  3486,
   67212,  3725, -4118,  3939,  2764,  3609,   207,  3572, 53228,  3764,
    1086,  1033,  1033,  3853, -4118,  4080, 67212, 67212,  3478,  -134,
   -4118,  2216, -4118, 19194, -4118,  3480,  3179,  1884,  3179,  3179,
    3179,   464, 16158, 16158,  4083,  4035, -4118, 56908, -4118, -4118,
   -4118, 56908,  4035,  2012,  3179,  3487, -4118,  3998,  4000, -4118,
   -4118, -4118, 16158, 16158, -4118, 16158,   738, -4118, 16158, 16158,
   16158, 16158, 16158, -4118, -4118, 21471, -4118,  3484,  3491,  3179,
   -4118, -4118,  3494,  3179, 16158, -4118, -4118, -4118, -4118, 16158,
   -4118, 16158, -4118, 16158, 16158, -4118, 16158, 16158, -4118,  3179,
    3179, 19953, 16158, 16158,  3503,  3179, -4118, 16158, 16158, 16158,
   -4118, 16158,  1612, 16158,  2429, 16158,  2550, 16158, -4118, 16158,
   -4118,  3179,  3179, -4118, 16158,  2381, -4118,  2663, -4118,  3431,
    3179, -4118, 39955, -4118, -4118,    56,  1431,  3517,    56,  3523,
   21471,  3179, -4118, -4118, -4118,  2014, -4118, -4118, -4118,  3520,
    1884, -4118, -4118, -4118, -4118, -4118, -4118, 21471,   352, 21471,
    3702, 21471,  5508,  5508,  2494, 10086, -4118,  1976,  3702, -4118,
   -4118, 16158, 16158, 42909, 67212,   380, -4118,  3725,  1188, -4118,
      82, -4118, -4118, 53228, -4118, -4118, -4118, -4118, -4118,   118,
   58380,  3482, -4118, -4118, -4118, -4118, -4118,  3421, -4118,  3990,
    3222, -4118,  3684,  3685,  3696, -4118, 33331, -4118, -4118, -4118,
   -4118, 33331,   807,  1130, -4118, 67212, 53228,  3524,  3526,  3530,
    3664,  3621, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118,  3338,  3537,  3144, -4118,  3585, -4118, -4118,
    3533, -4118,  1885,  3114,  1303, 67212, -4118, 16158,   -82, -4118,
    3700, -4118, 67212, 67212, -4118, -4118, -4118, -4118,   930, -4118,
    3542,  2883, -4118,  3725, -4118, -4118,  3421, -4118,  4575, 26707,
    3909,  1130, 53228,  4100, -4118, -4118,  3544,  1016, 23748,  3568,
   -4118,  3541,  2783, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118,  3585,  2938,  4089,  3338, 73836, 73836, 73836, -4118, -4118,
   -4118,  3577,  3004,  3004,  3586,  3586,   403,  3885, -4118, -4118,
   -4118, -4118,  2832, -4118, -4118,  2984, -4118, -4118, -4118, -4118,
   -4118,  1086,  1884, -4118, 30387, -4118,   -82,  4123, -4118,  1884,
    3566, 67212, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,  3710,    40,
   -4118, -4118, -4118, -4118, -4118,  3898,  3144,  3348,  4123, -4118,
      40,    40, 67212, 67212,    40, -4118, -4118, -4118, -4118, -4118,
     -82, -4118, 18435, -4118, 67212, -4118,  3569, -4118,  3997, 67212,
    4174,  3578, 21471,  3587, 21471,  2984,  3784,  3589,  4332,  2663,
    3114, -4118,  3563,  3942, -4118, -4118,  2832, -4118,  3891,  3945,
    3586,  2431, -4118, -4118, -4118, -4118,   261,  2663,  2663,  2663,
    2663,  2322, -4118,   965,   319,  2408,  2984, -4118,   182, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118,   -82,  4190,  3946,  3598, -4118, -4118, 56908,  4283, -4118,
   -4118, -4118, -4118, -4118, -4118, 16158, -4118, -4118,   548,   385,
    1467, 25230, 67212, 43650, -4118,  -170, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118,  1086,   -82,  3825,  3826,
    3827,  3828,  3829,  3871, -4118, -4118,  3987, -4118,   -82,  1266,
     -82,   -82,   -82,   -82,  2663,   -82,   -82,  2015, -4118, -4118,
   -4118,   169, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, 58380, -4118, -4118, -4118,
   67212,   692, 67212,  3610,  4105,  4106,   249,   783, 67212,  3618,
    3759,  3783, 49548,  9355, -4118, -4118, -4118,  4017,  4017,  2087,
     909, 65004, -4118, -4118, 67212, -4118, -4118,  2999,  3627, -4118,
    2984, -4118, -4118, -4118, -4118, 51756,   -82, -4118,  3824, -4118,
   -4118, 67212,  3627, -4118, -4118,   250, -4118,  3754,  3830,   -82,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
    9355, 65004,  3634, -4118,   396, -4118, -4118, -4118, -4118, 65004,
    3812,  3814, -4118, 67212, 65004, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, 67212,
   -4118, -4118, 55436, 56908, -4118,  3766,  3967,  5694, -4118, -4118,
   -4118,  3009, -4118, -4118, -4118,   143,  4030,  1086,  2253,   567,
   -4118,  3947, -4118, -4118,  2628,  4022,  4023,  3644, -4118,  3649,
   -4118,  3651, -4118, 63532,  1884,  3658,  2663,   -82,  2663,  2663,
     -82,   -82,  2663,  2663,   -82,   -82,   -82,   -82,   -82,   -82,
     -82,   -82,  2663,  2663,   -82,  1233,   -82,  2663,   -82,   -82,
    2663, 57644,    32,  2663,  5891, -4118,  3663,  3663,  3669,  3669,
    3671,  3671,  3672,  3548, -4118, -4118,   168,  3673,  1424,  3725,
   58380,  3676, -4118,  4203,  1086,  1086,  1086,  1086, -4118,   201,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118,   143,  1369, 58380, 73836, -4118,  3025,  -190, -4118, -4118,
   -4118, -4118, -4118, 67212,  2209, -4118, 67212, -4118, 37011, -4118,
   -4118, -4118, -4118,   157,  1618, -4118,  1746,   895, -4118,   180,
    3948, -4118, -4118,  1289,  3681, -4118, -4118,   398, 16917,  1765,
    3179, -4118, -4118, -4118, -4118, -4118, 16158,  1884,  2516, -4118,
    3686,  3686,  3687, -4118,  3690,  4010,  3686, -4118,  4360, -4118,
   -4118,  4181,  3687,  4182,  3686, -4118,  3721,  3701,  3707,  3709,
    3179, -4118,  3179, 16158, 16158,  1771,   368,  1773,  4397,  3959,
    1220,  1224,   550, -4118,  1819,  3632,  3179, -4118,  3179, -4118,
    1825,  1866,  1876,  1933,  1234,  2002,  2025, -4118, -4118, 16917,
    2116,   314,   718,  3179, -4118,  2164,  1253,  1258,  2174, 16158,
    2176, 16158,  2215, 16158,  2224,  2254, -4118, -4118,  2264,  3706,
    3706,  3708,  3713, -4118, 67212, -4118, -4118, -4118, -4118,  3767,
    3771,  3179,  3712,  3712,    56,  3179,    56,   192, -4118, -4118,
   67212, -4118, -4118, -4118, 16158,  1191,   232, -4118, -4118, 21471,
     809, 21471, -4118,  3714, -4118, -4118, -4118, -4118,  4180,  4462,
   -4118, -4118,  3929, -4118, -4118, -4118,  3184, -4118, -4118,   356,
    4317,  3719, -4118, -4118, -4118, -4118, -4118, 42168, -4118,  1480,
    3734, 44391, 53228,  4103,  3144, 18435, -4118,  3852, 67212,   249,
    4254,   117,  3848,  4212, -4118, -4118, -4118,  1884, -4118, 53228,
   -4118, -4118, -4118, 67212, 67212,  1129, -4118, 34803, -4118, -4118,
   -4118, -4118,  3741, -4118, -4118,  4338, -4118,  4302, 42168,  3186,
   53228, 16158,  2938,  3744,  3752,  3757,  3761,  3762,  3763, 25230,
   25230,  4246,  4256, -4118,  4128,  1588,  4128, -4118, 37747, 25230,
   25230,  2616,  2628,  4472,  4304,  4089,  2832,  2832,  2832,  3563,
    3563, -4118,  4419, -4118, -4118, -4118, -4118, -4118, -4118,   213,
   -4118, 11604, -4118, -4118,  1082, -4118,   112, -4118, 53228, -4118,
    4150, -4118, -4118, -4118, -4118, -4118,  1762,  1762, -4118, -4118,
   -4118, -4118,  2663, -4118, -4118, 67212,  2717, 67212,  3340, -4118,
    4476,  3772, 21471,  4365,  3773,  4301, -4118,  3586,  3563,  3004,
    -120, -4118,  1015,  1371, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118,   253,  4427,  3660,  4290, -4118, -4118, -4118, -4118,
   -4118,   -82,  4377, -4118, -4118,  1281,  4260, -4118, 25230,  3585,
   43650,  -208, -4118, -4118,  3779, 67212,   -82, -4118, -4118, -4118,
    4430, -4118,  4431,  1908,  4381, -4118, -4118,   254, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
    2621, -4118,  3792,  2984,  4146,  3795, 16158, 67212, -4118, -4118,
   -4118,  3822, -4118, -4118,  3800, 40691,  1033,  1033,  2056, -4118,
   -4118, -4118,  9355, -4118,  3686,  3686,  3686, -4118, -4118,   462,
    3687, -4118, -4118,  3803, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118,   382,  1855, -4118, -4118,   382, -4118, -4118, -4118,
     306,  1950, -4118, -4118, -4118, -4118, -4118,  3804, -4118,  3686,
    3687,  3687, -4118, -4118,   382,  3686, -4118,  3686,  4112,  3409,
   -4118,   137,  3686,  3686,  3686,  3805,  3690, -4118, -4118, -4118,
   -4118, -4118,  4435,  4436, -4118,  9355, -4118, 67212, -4118,  3492,
    3492, -4118, -4118, -4118, -4118,  3989, -4118, -4118,   405, -4118,
   67212, -4118, -4118, 67212, 67212,    11,   930,  3807, -4118, -4118,
   -4118,  3818,   -19, -4118,   -55, -4118, -4118,  3718,    84,  1077,
    3983,  2363, -4118, 67212, 67212, -4118, -4118, 66476, -4118,  2663,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, 35539, -4118, -4118, 36275, -4118, -4118,  -222,
   -4118, -4118,  2135, -4118, -4118, 40691,  1086,  1086, -4118,   291,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,  4183,
   40691,  1063, 67212,   -82,  2506,  2506,  2984,  3271, -4118,  4164,
   -4118,  2442,  2832,   182, -4118, -4118,  3053,  3816, -4118, -4118,
   67212,  2066, -4118, -4118,  6605,  1746, -4118,  1289,  4191, 67212,
   -4118, -4118, -4118, -4118,  4061, -4118, -4118, -4118, -4118,  4193,
    5508, -4118, -4118,  1884, 16158,  1047, -4118, -4118,   382,  4201,
   -4118,  1472, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118,  3821, -4118, -4118, -4118, -4118,
   -4118,  5508,  5508, -4118, -4118, 16158, -4118, 16158,   468,  3823,
   16158, 16158, -4118, 16158, -4118,   286,  3833,  3943, -4118, -4118,
   -4118, -4118, -4118, -4118, 16158, -4118, -4118,  5508, -4118, 16158,
   -4118, -4118, 16158, -4118, -4118, 16158, 16158, -4118,  2273, -4118,
    2317, -4118,  2344, -4118, -4118, -4118,  2984,  3834,  3835,  2663,
    3179, -4118,  3840,  4178, -4118, -4118, -4118, 16158, -4118, -4118,
    3179, -4118,  3179,  4384, -4118,  2090, -4118, -4118, -4118, 16158,
    1191, -4118, -4118, -4118, -4118, -4118, -4118,  4149, -4118,  3780,
   33331,  4015,  4373, -4118, -4118, -4118, -4118,  1502, -4118, -4118,
    2097, 67212,  4563,  4216, -4118,   249,  4254,  4327, -4118,  4353,
   -4118, -4118, -4118, -4118,  3849,  3627,  3844, -4118,  1086,  2445,
    2111, -4118, -4118, -4118,  3841, 18435,  3850, -4118, 26707, 53228,
    4410,  3186,  1294,  2628, 25230, -4118, -4118, -4118, -4118, -4118,
    2783,  3847,  3854,  3855,  2783, -4118, -4118, -4118,  4350, -4118,
    4128,  4128,  4352,  4359, -4118,  3155,  3425,   387, -4118, 16158,
   16158,  3925,  4304,  3586,  3586,  4220,  2984, -4118, -4118,  3144,
   -4118, -4118,  3186, -4118,  3144,  3338,    40, -4118,  2126, -4118,
   -4118,  2129, -4118,  4348,  4146, -4118,  3449,  2984, 67212,  4578,
   -4118,  3586,  3586,  3004, -4118, -4118, -4118,  3586,  4225,   681,
   -4118,  2984, -4118,   107, -4118, -4118,  3688, -4118,   -82,  4582,
    4587,  4487,  4595,  1281, -4118,   -67, -4118,  -208,  3338,  1491,
   -4118,  3900, -4118,   968, -4118, -4118, -4118, -4118, -4118, -4118,
    1165, -4118, 40691, -4118, 67212,  2161, -4118, 40691,  2352,  3896,
   -4118, 40691, 16158, -4118,  2190, -4118,   151, -4118, -4118, -4118,
   49548,  4112, -4118, -4118, -4118,  4610,   219, -4118,  4617, -4118,
     382, 56908, -4118, -4118, -4118, -4118,   468, -4118,  1090, -4118,
     382, -4118, -4118,  4031, -4118, -4118, -4118,   468,   382, -4118,
   -4118, -4118, -4118,  1878, 67212,   405, -4118, -4118, 55436,  2048,
     -82,  3141,  3923, -4118,  4045, -4118,  4530,  1879,  4398,  3725,
    4598, -4118, -4118,  3545, -4118,  4460,  4405,   781, -4118,  4634,
   -4118,   382,  4634,  1878,  4298, -4118,  1878,  1878, -4118,  3527,
     405, -4118, -4118, -4118, 67212, 67212, -4118, -4118, -4118, -4118,
   -4118,  3918, -4118, -4118,  4300,  4030, -4118,  4303, -4118, -4118,
    4258, -4118, 16158, 16158,  4297, 67212,  4299, -4118,  4601,  4659,
    3627,  1531, -4118,  2207, -4118, -4118, -4118,  2213, -4118, -4118,
   -4118,  2219, -4118, -4118,  3922, -4118,  2221, -4118, -4118, -4118,
   67212, -4118,  2222,  2232,  2506,  2506,  1895,  1063,  3930,  2258,
     -82,   -82,   -82,   -82, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118,  1015,  1443, -4118,  3403, 40691,  3936,  4092, -4118,  4176,
    4205,  3941,  3935, -4118,  9355,   -82,   264, 67212,   454,  1884,
    3944,  3949,  3953,  3954, -4118,  3955,  2261, -4118,  3958,  3960,
    2366,  3938, -4118, -4118,  3179,  2376,  1374,  2263,  4356,  4438,
   -4118,  4273, -4118,  2396,  1663,  2404,  2416,  2427,  2436, -4118,
   -4118, -4118, -4118, -4118, -4118,  3957, -4118, -4118,  4657,  4326,
    1884, -4118, -4118,   252,    56, -4118,  2275,  4543,  4434, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, 53228,  4336,  4512,  4702,  3338,   145,
   67212,  4216,  4577, -4118, -4118, -4118,  4159, -4118, 67212, 18435,
   -4118, -4118,  2445, 67212, 41427,  3971,  3741, -4118,  3186, 53228,
    1492, -4118,  1223, -4118, -4118,  4469,  4470, -4118, -4118, 16158,
    3977, 16158,  3979, -4118, -4118,   249,   249, -4118,   387, -4118,
   -4118,  1884,  1055, -4118,  1884, 67212, -4118,  3925, -4118, -4118,
   -4118, -4118, -4118,  3421, -4118, -4118, -4118, 67212, -4118,  1927,
    2278, -4118, -4118,  3988,  3985,   -82, -4118, -4118,  3586, -4118,
    3586,  3004, -4118,  4612, -4118, -4118, -4118,  4614, -4118,   468,
     468,  4682,   468, -4118,  4689,  4691,   -67, -4118, -4118,  4354,
    4354, -4118,  2287,  4121, -4118,  4146,  2288, -4118, 67212,  2321,
    2440,  1013, 40691,  4374, -4118, -4118, -4118, -4118, -4118, -4118,
   56908, -4118, -4118,  4634,  2337, -4118, -4118, -4118,  2342, -4118,
   -4118, -4118, -4118, -4118,  1878, -4118,  4003, -4118,  1898, -4118,
   -4118, -4118, -4118, -4118,  3684,  3685,  3696,  1233,  1233, 16158,
   -4118, -4118, -4118, -4118,  4380,  4130, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, 55436, -4118,  4734,  4731, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118,  4004, -4118, -4118, 16158, -4118, -4118,
    2267, -4118,  4146, -4118, -4118, -4118, -4118,  1884,  5508,  4672,
   -4118, -4118,  4243,   -82,  4613,  2209,  4382, -4118, -4118,  2663,
   -4118, 67212, -4118, 67212, 67212, -4118,   -82,  4007, -4118,  4016,
     933, -4118, -4118, -4118,  2621,   190, -4118, -4118, -4118,  4532,
   -4118,  4357, -4118,  2253,  2343, -4118, -4118,   -82,  1077, -4118,
   67212,  3492, -4118, -4118, -4118, -4118,  4009,  4018, -4118, 67212,
    4568, -4118, -4118, -4118, -4118, -4118, -4118,  4394, -4118, -4118,
   -4118, 16158, -4118, -4118, 16158, -4118, -4118,  4426,  4596, -4118,
   -4118, -4118, -4118, -4118, -4118,  4019,  2663, 16158,  4724,  1391,
   -4118, -4118,  3179, -4118, -4118, -4118,  1502, -4118,  4391, 53228,
   -4118,  3144,  4216,  2628, -4118,  4515, 67212, -4118, -4118, -4118,
   -4118, -4118,  4024, -4118, -4118,  3186,  4207,   188, -4118, -4118,
   -4118,  1884, 67212,  1884, 67212,  4586,  4586, -4118, -4118, 16158,
   -4118,  4760,  4032, -4118, -4118, -4118, -4118,  4033,  4332, -4118,
   -4118,   211, -4118, -4118,  3586, -4118, -4118, -4118, -4118,   468,
   -4118,   468,   468, -4118,  4506,  4506,   933,  1850,  3311, -4118,
     190,  2361, -4118,  1013,   396,   -82,  1086, -4118,  1013, -4118,
   -4118, -4118, -4118, -4118,  4034, -4118, -4118,   382,   468,   382,
   -4118, 67212,  4477, -4118, -4118,  2470, -4118, -4118, -4118, -4118,
    4043,  2477, -4118, -4118,  2374, -4118, -4118, -4118, -4118, -4118,
    4151, -4118,  4124, -4118, -4118, -4118, -4118, -4118, 67212, 67212,
    4402,   380,   933, -4118, -4118,  2388,   380,   190, -4118, -4118,
    4753, -4118, -4118,  1013, -4118,  4297,  4329, -4118, -4118, -4118,
    1686,  9355,  4654,  4052, -4118,  2521, -4118, -4118, -4118,  4063,
    4047, 16158, -4118, -4118, -4118, -4118,  1959, -4118,  4702, -4118,
    4173, -4118, -4118, -4118,  4199,  3585,  4062,  4064,  4065,  4067,
    1962,  4069,  4070, -4118,  4072, 67212, 21471,  4073,  4677,  1268,
   -4118, -4118, -4118, -4118, -4118, -4118, 51020, -4118, -4118, -4118,
    4074,  4240,  1086,  4693,  4694,  1086,  1086,  1086,  1086,  4077,
    3311, -4118,  4674, -4118,  4112, 67212, -4118, -4118, -4118,  2663,
   -4118,   396, -4118, -4118, -4118,  2389, -4118,  1499,  4455, -4118,
   16158, -4118, -4118,  4305, -4118, 80460,  1684, -4118, -4118,  4081,
    4076,  2330, -4118, -4118, -4118, -4118, -4118,  3725,   380,  2363,
   -4118,  9355, -4118, -4118,  3492,  4355, -4118, -4118, -4118,  3322,
    3027,  4358, 16158,  4148,  4162, -4118, -4118,  4152,  4153, -4118,
    4184, -4118, 67212,  2662, 68684,  3289, -4118, -4118,  4799, -4118,
    4800, 66476, 66476, -4118, -4118,  3558, 67212,  1086,  4315, -4118,
   -4118,  4097, -4118, -4118,   -28,   -82,  1086,  1086,  3725,  3725,
    2984, 67212,  4306, -4118, -4118,  1086, -4118, -4118, -4118, -4118,
   -4118, 67212, -4118, -4118, -4118,   369, -4118,  2537, 16158,  4697,
    4219, 67212,  1469, -4118, 81932, 81932, 67212, -4118, -4118, -4118,
   -4118,  7593, -4118, -4118,  1084, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118,  4823, -4118,  4095, -4118,
   -4118, -4118, -4118,  4793,  4474,  4796, -4118, 67212, -4118, -4118,
   -4118,  4601,  3492,  2952, -4118,   881, 16158,  -242, -4118,  4843,
    1478,  1524, -4118,  5508, -4118,   234, -4118, -4118, -4118, 71628,
    3844,  4383,  4160,  2398, -4118,  9093, -4118, -4118, -4118,  4109,
    2411,  4312,  2418,  3114, -4118, -4118,  2428, -4118, 20712, -4118,
   -4118, -4118, -4118,   -82,   -82, -4118, -4118, -4118, -4118, 58380,
    2449, -4118, 58380, -4118,  1404,  1404,  1540,  1884, 16158, -4118,
   16158,  4233, -4118, -4118,  4671, 67212, -4118, -4118, -4118, -4118,
   16158, -4118, 80460, 80460, -4118, -4118, -4118, -4118,  4837,  4485,
   -4118,  4486,  4117,  4732, -4118, -4118, -4118, -4118,  4740, 80460,
   -4118, -4118, 58380, -4118,  5508, -4118,  3027, -4118, -4118,  4185,
    4396, -4118,  4189, -4118,  2923, -4118, -4118,  2832,  4653,  4283,
    1492, -4118, 68684,  4186,  3492, -4118, -4118,  2984, -4118,  4312,
    4417, -4118,  4097, -4118,  2465, -4118,  3702, -4118, -4118,  3311,
   -4118,  4306, -4118, -4118,  4877, -4118,  1023,  4507,  4508, -4118,
   -4118,  3545,  1884,  1884, -4118,   155, -4118, -4118,  4641,  4736,
   16158,  1884, 76780,  4134, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, 81196, 16158, -4118,
    1084,  4823, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   80460,  1630, -4118, -4118, -4118, -4118, -4118,  4844,  4260,   188,
   -4118, -4118,  4722, -4118, -4118, -4118, -4118, -4118, 20712, -4118,
   -4118, -4118, -4118, -4118,  4285,  4765, -4118,  4262, 16158, 80460,
   -4118,  4743, -4118,  4668,  1884,  4608,  4144, -4118,  4141,  1884,
    4779, 81932, 81932, -4118,  2952, -4118, -4118,   468,  4679, -4118,
   -4118,  4202, -4118,  1404,  1404, -4118,   370, -4118,  1884, 77516,
    4857, 67212, -4118,  4337, -4118, -4118, 16158,  4770, 59116, 78252,
    4157, -4118, -4118, -4118, 80460, -4118,  4544,  4165,  1492, -4118,
   -4118, 16158, -4118,  4764,  4346, -4118,  4163, -4118, 80460,  1884,
   80460, -4118, -4118,  4708,  5187,   416, -4118,  4167, -4118, -4118,
     101, 32595,  4424,   172,  1884,  4873, 80460, 67212, 74572,  4776,
   78988,  4737, 67212,  3492,  4738,  4739, -4118, -4118, -4118, -4118,
   -4118, 58380,  2528, -4118, -4118, 67212, -4118,  1492, -4118, -4118,
   -4118,  1537,  1537,  4556,  4368, -4118, 75308, -4118,  2759,  4480,
    4308, -4118, -4118,  4820,  3151, -4118, -4118, -4118, 34067,  4187,
   -4118,  1086,  2085, -4118,  4570, -4118,  4571,    50, 80460, 80460,
   -4118, -4118, -4118, -4118, 47340, 16158, -4118, -4118, -4118, -4118,
    1744, -4118, 67212, 18435,  4785,  4253, -4118, -4118, 76044, 79724,
   -4118, -4118, -4118, 25970, -4118, -4118, -4118,  4759, -4118,  1884,
   -4118, -4118, -4118, 47340, -4118, -4118, -4118
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1860,  2879,  1170,  2831,     0,     0,     0,     0,     0,     0,
    2833,  2879,   107,  1978,  1979,     0,  1803,     7,     0,  1170,
     356,     0,     0,   119,     0,  1817,     0,  2032,     0,     0,
    1170,     0,  2026,     0,     0,  1170,  1865,  2011,   333,     0,
    2833,     0,  1235,     0,  1895,  2693,     0,     0,     0,     0,
    1878,     0,  2690,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2694,     0,     0,     2,     8,    13,    42,     0,
      79,    62,    69,    31,    41,    39,    38,    36,    40,    37,
      30,    95,    86,    65,    25,    15,    20,    17,    27,    16,
      19,    23,    24,    22,    26,    21,     0,    66,    98,  1132,
      99,    33,    83,    28,    29,    32,    76,    82,    77,    78,
      91,  1201,  1198,  1725,  1200,  1213,  1221,  1222,  1223,  1861,
      45,    58,    49,    46,    48,    52,    51,    60,    61,    47,
      59,    56,    57,    50,    54,    55,    53,    71,    84,   103,
       0,    43,   100,    96,    44,    63,  1980,    64,    85,    80,
      73,   104,    74,    92,    94,    93,    75,   102,    97,    87,
      18,    68,    88,    67,    14,    35,    89,    90,    81,   105,
      72,   101,    70,    34,     0,  1003,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1801,     0,   944,  2877,  2878,
    2879,  1172,  1171,     0,  2833,  2129,  1157,     0,  2213,  2212,
    2215,  2217,  2218,  2219,  2220,  2221,  2222,  2165,  2224,  2225,
    2226,  2227,  2228,  2229,  2166,  2230,  2231,  2232,  2233,  2234,
    2235,  2167,  2168,  2237,  2238,  2239,  2240,  2241,  2169,  2170,
    2242,  2243,  2244,  2245,  2246,  2247,  2248,  2249,  2250,  2251,
    2172,  2252,  2173,  2253,  2254,  2256,  2257,  2287,  2258,  2259,
    2260,  2261,  2262,  2263,  2174,  2264,  2265,  2266,  2267,  2268,
    2269,  2270,  2271,  2272,  2175,  2273,  2274,  2276,  2278,  2279,
    2280,  2281,  2282,  2176,  2283,  2284,  2285,  2286,  2177,  2288,
    2290,  2291,  2292,  2294,  2293,  2295,  2296,  2203,  2297,  2298,
    2162,  2300,  2301,  2302,  2303,  2304,  2306,  2307,  2204,  2308,
    2309,  2310,  2311,  2178,  2179,  2313,  2314,  2315,  2316,  2322,
    2317,  2318,  2319,  2592,  2321,  2180,  2323,  2181,  2327,  2326,
    2328,  2125,  2329,  2126,  2330,  2182,  2332,  2333,  2334,  2335,
    2183,  2337,  2338,  2339,  2340,  2341,  2342,  2343,  2184,  2344,
    2345,  2346,  2347,  2348,  2349,  2593,  2351,  2352,  2353,  2354,
    2356,  2357,  2359,  2361,  2362,  2363,  2364,  2366,  2367,  2368,
    2378,  2369,  2370,  2371,  2373,  2372,  2374,  2375,  2376,  2379,
    2358,  2381,  2382,  2383,  2384,  2385,  2386,  2387,  2389,  2390,
    2391,  2392,  2393,  2394,  2395,  2396,  2397,  2398,  2399,  2400,
    2401,  2402,  2403,  2404,  2405,  2406,  2407,  2408,  2410,  2411,
    2412,  2413,  2205,  2185,  2415,  2417,  2418,  2419,  2422,  2423,
    2424,  2426,  2430,  2431,  2432,  2433,  2434,  2436,  2435,  2437,
    2440,  2442,  2443,  2441,  2444,  2445,  2446,  2186,  2187,  2448,
    2449,  2450,  2206,  2452,  2454,  2453,  2207,  2455,  2456,  2457,
    2459,  2460,  2461,  2462,  2463,  2465,  2466,  2467,  2468,  2469,
    2208,  2470,  2471,  2188,  2472,  2209,  2473,  2475,  2474,  2476,
    2478,  2479,  2477,  2189,  2481,  2483,  2484,  2486,  2487,  2489,
    2190,  2491,  2492,  2493,  2495,  2494,  2496,  2191,  2497,  2498,
    2503,  2504,  2505,  2506,  2596,  2507,  2508,  2164,  2192,  2509,
    2193,  2511,  2512,  2513,  2514,  2515,  2516,  2517,  2518,  2519,
    2520,  2521,  2522,  2524,  2525,  2194,  2526,  2527,  2528,  2529,
    2195,  2530,  2531,  2532,  2533,  2534,  2535,  2536,  2211,  2537,
    2538,  2539,  2540,  2541,  2542,  2543,  2544,  2545,  2546,  2547,
    2552,  2550,  2551,  2553,  2554,  2555,  2196,  2556,  2557,  2559,
    2560,  2561,  2562,  2197,  2198,  2563,  2564,  2565,  2566,  2567,
    2568,  2569,  2570,  2572,  2574,  2575,  2576,  2577,  2578,  2579,
    2580,  2581,  2199,  2582,  2583,  2584,  2594,  2490,  2216,  2336,
    2573,  2255,  2510,  2350,  2414,  2595,  2324,  2236,  2171,  2299,
    2312,  2416,  2429,  2447,  2482,  2549,  2558,  2409,  2427,  2439,
    2325,  2488,  2523,  2548,  2210,  2571,  2365,  2320,  2163,  2275,
    2277,  2428,  2464,  2214,  2331,  2223,  2388,  2425,  2501,  2499,
    2500,  2502,  2485,  2421,  2289,  2420,  2360,  2458,  2355,  2380,
    2451,  2377,  2480,  2438,  2305,   287,  2136,   269,  2137,  2158,
    2159,  2160,  2157,  2161,     0,     0,  2682,  2681,     0,     0,
    2834,  2835,   614,     0,     0,     0,     0,     0,     0,  1804,
       0,   887,   614,   614,     0,     0,     0,   207,  2862,  2862,
    2879,  2881,  2883,  2215,  2165,  2228,     0,  2098,     0,     0,
       0,  1577,     0,  2169,     0,  2246,  2248,     0,     0,  1263,
    1263,   774,     0,     0,     0,  2271,  2272,  2104,     0,     0,
       0,  2095,  2105,  2313,  2317,  2319,     0,  2097,  2328,     0,
       0,     0,     0,  2348,  2102,     0,     0,  2392,  2394,     0,
       0,  2398,  2399,  2400,  2401,  2081,  1322,     0,   774,  2094,
    2101,  2087,  2444,  2445,     0,  2455,     0,     0,  2489,     0,
       0,  2494,  2503,     0,     0,  2533,     0,     0,   774,  2080,
    2552,  2550,  2551,  2553,     0,  2096,  2196,  2103,     0,  2566,
    1263,   774,   774,     0,     0,     0,  2576,  2577,  2584,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1255,     0,     0,     0,  1321,
       0,  1402,  2853,  1779,  1254,  1258,  1275,  1280,  1297,     0,
    1314,  1333,  1334,  1336,  1438,  1335,  1341,  1459,  1342,  1460,
    1340,  2091,  1339,  1338,  2092,  2093,  1256,  1332,  2116,  2136,
    2115,  1348,  2851,  1801,  1801,  1801,     0,     0,  1801,  1801,
       0,     0,  1801,     0,  1801,  1801,  1801,     0,     0,   112,
    1986,   357,   358,     0,  2730,  2743,  2744,  2740,  2745,  2763,
    2746,  2750,     0,  2742,  2811,  2149,     0,  2749,     0,  2811,
    2747,     0,  2811,     0,  2748,  2753,  2764,  2811,  2741,  2138,
    2148,  2147,  2811,  2586,  2585,  2139,  2587,     0,  2732,     0,
    2121,     0,     0,  1819,  1820,  1818,  1090,     0,     0,  2033,
    2034,     0,  2037,     0,  2038,  2041,     0,  2678,     0,     0,
       0,     0,     0,  1173,     0,  1822,  1866,  1823,  1821,  1801,
       0,   323,   332,   334,   335,   331,  2730,     0,     0,  2835,
    2846,  2861,  2856,  2855,  2858,  2859,  2860,  1240,  2857,  2854,
       0,  1236,  1238,  1239,   824,     0,     0,  2627,  2630,  2404,
    2437,  2631,  2554,  2628,  2490,  2629,  2210,     0,     0,  2142,
    2654,  2589,  2590,  2591,  2588,  2143,  2597,     0,  2621,     0,
    1955,   335,  1102,  1126,  1110,  1103,  1126,  1234,  2121,  1879,
       0,     0,     0,  2692,     0,  2035,     0,  1233,  1842,     0,
    1702,  1705,  1707,  2927,     0,     0,     0,  2922,     0,  2928,
       0,     0,  2115,     0,     0,     0,     0,     0,  2852,     0,
       0,     0,     0,     0,     0,     1,    10,     0,     0,  1263,
    2146,  2566,     0,  2145,  2144,  2150,  2152,  2788,  2809,  2815,
       0,  1104,  1118,     0,     0,     0,  1199,  1242,  1203,     0,
    2848,  1734,  1726,     0,  2848,  1734,  1210,  1725,  1212,  1872,
    1865,  1982,  2313,  1860,  1983,     0,   936,  1004,     0,   940,
       0,     0,  2695,     0,   938,     0,  1949,  1011,     0,     0,
     965,     0,     0,  2888,   942,     0,  2832,     0,  1183,  1194,
    1569,   286,     0,   121,   123,  1140,  1797,  1159,     0,  2838,
       0,     0,     0,     0,  2884,     0,     0,     0,   469,     0,
       0,     0,     0,     0,   614,  2888,  2888,  2862,  2882,     0,
       0,  1695,  1355,  1695,  1695,  1695,  1578,     0,     0,     0,
       0,     0,     0,     0,  1695,     0,  1396,  1369,     0,  1397,
       0,     0,     0,  2106,     0,     0,     0,  1352,     0,     0,
    1569,     0,  1546,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1573,  1575,  2115,  1695,     0,     0,  1695,     0,
       0,     0,     0,     0,  1268,   820,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1695,  1695,     0,
       0,  1695,  1410,  2108,     0,     0,     0,  2107,     0,     0,
       0,  2100,  2099,  2082,     0,  1413,  1415,  1414,     0,  1695,
    1695,     0,     0,     0,  1695,  1695,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1345,  1344,
    1346,     0,     0,  2853,     0,  2636,  1542,  1544,     0,     0,
    1318,  1317,     0,  1316,  1315,  2135,     0,  1257,     0,     0,
    1262,  1261,  1323,  1324,  1325,  1326,     0,  1327,  1328,  1329,
       0,     0,     0,     0,     0,     0,  1320,  1319,     0,     0,
       0,     0,  1299,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1347,     0,     0,  2130,  2083,     0,     0,  1454,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1805,
       0,     0,     0,     0,     0,     0,  1801,   114,     0,     0,
    2731,  2723,  2761,  2760,  2765,     0,  2762,  2758,  2766,  2767,
    2751,     0,  2737,  2755,     0,  2739,  2757,  2756,  2736,  2752,
    2759,  2738,     0,  2734,  2726,     0,     0,  1691,  2700,     0,
       0,   120,     0,  1091,  1823,     0,  2941,  2938,  2031,     0,
    2042,  2043,  2039,     0,     0,     0,     0,  1948,  1947,     0,
    2027,  2847,  1175,     0,     0,     0,  1824,     0,     0,  2013,
    2020,  2018,  2012,  2015,   324,     0,     0,   354,  2717,     0,
       0,  2726,  2841,  2838,  1226,  1237,   823,     0,     0,   826,
    2653,  1843,  1844,   835,     0,   825,     0,     0,     0,     0,
       0,  2599,  2663,  2660,  2659,  2612,  2607,  2606,  2154,  2784,
    2605,     0,  2640,     0,   830,   832,   831,  2650,   829,     0,
       0,  2554,  2600,  2621,     0,     0,  2598,     0,     0,   824,
    1967,     0,     0,  1967,     0,  1734,  1951,  1956,  1954,     0,
    2633,  1927,  2634,  1947,     0,  1903,  1926,     0,  1880,  1919,
       0,  2635,     0,  1950,     0,  1734,  1967,  1896,     0,     0,
       0,     0,     0,     0,   330,  1131,  1130,  1106,  1127,  1128,
       0,     0,  1109,  1111,  1112,   197,  1877,  2939,  2940,  2691,
    1849,     0,  1703,     0,     0,     0,  2086,  2085,  2924,  2084,
    2932,  2934,  2918,     0,  2921,  2920,  2929,     3,     0,     0,
     555,     4,     6,     0,     0,  1202,  1219,     0,  1218,    11,
     106,  2153,     0,     0,     0,     0,     0,     0,     0,  2806,
       0,     0,   986,     0,     0,     0,     0,     0,  1138,     0,
    1134,  1133,     0,  1107,  1120,  1247,  1246,  1249,  2283,     0,
       0,  1778,  1772,  1775,  1774,     0,  1241,  1205,  1204,     0,
    2850,  2849,     0,  1206,  1735,  1743,  1744,  1742,  1736,  1737,
    1741,  1740,     0,  1208,  1734,  1734,  1211,  1876,  1875,  1874,
       0,  1872,  1090,     0,     0,  1972,  1973,  1974,  1975,  1976,
    1971,  1970,  1984,  1985,  2886,  2887,  2885,   837,  2880,   270,
    2697,     0,     0,   270,     0,     0,  1845,  1845,     0,  1845,
    1845,   535,     0,   534,   620,   489,   491,   492,   493,   494,
     495,   496,     0,  1088,  1845,  1088,     0,  1845,  1845,  1088,
    1845,     0,     0,  1845,  1845,  1845,  1845,     0,     0,   838,
    1845,     0,     0,  1088,     0,  1845,     0,  1072,     0,     0,
    1845,  1845,  1845,  1845,  1845,  1088,     0,     0,  1845,  1845,
       0,  1098,     0,     0,  1845,  1845,  1845,  1845,     0,  1845,
    1845,     0,  1845,     0,     0,  1845,  1033,  1034,  1044,   616,
     643,   644,     0,   934,   935,  1005,  1007,  1076,  1013,  1012,
    1041,  1046,  1074,  1075,     0,  1802,  2953,   946,     0,     0,
     945,  2888,  1154,     0,     0,   880,   879,     0,     0,  1194,
    1185,  1571,     0,  1570,   268,     0,     0,  1142,  1141,     0,
    1139,  1167,  1166,  1164,     0,  1165,  1163,  1158,  1160,  1161,
    2837,     0,     0,  2839,  2843,     0,   205,     0,     0,     0,
       0,     0,   614,     0,   471,     0,  2796,  2807,   220,   203,
       0,   911,     0,     0,   614,     0,     0,     0,  2876,  2864,
    2871,  2872,  2875,  2874,  2873,     0,  2870,  2863,  2866,  2867,
    2869,  2868,  2888,     0,     0,  1696,  1695,     0,     0,     0,
       0,     0,     0,  1579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1264,     0,   775,  1420,     0,     0,     0,
       0,     0,  1667,  1668,  1669,  1670,  1678,  1671,  1672,  1673,
    1680,  1685,  1674,  1675,  1681,  1682,  1683,  1676,  1684,  1679,
    1677,  1686,     0,  1666,     0,     0,  1690,  1687,  1689,  1688,
       0,  1547,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1695,     0,     0,     0,  1695,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1430,     0,     0,     0,     0,     0,
    1695,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1392,     0,  2118,  2117,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1493,     0,  1493,     0,
       0,     0,     0,     0,     0,  1349,     0,     0,     0,     0,
       0,     0,     0,  1253,  1260,  1259,  1266,  1265,  1267,  1271,
    1276,  1269,  1273,     0,  1330,  2222,  1278,     0,     0,  1311,
       0,  1281,  1291,  1312,  1295,  1302,  1303,     0,  1298,     0,
    1300,  1301,     0,  1305,     0,  1304,  1308,  1309,  1310,  1313,
       0,     0,     0,     0,  1337,  1343,  1363,  1364,  1258,     0,
    1455,  1456,  2111,  2119,  1782,  1789,  1784,     0,  1805,  1786,
    1794,  1801,  1809,  1810,  1791,   620,  1807,  1790,   497,  2782,
    1787,  1092,  1796,  2966,     0,     0,   113,     0,     0,     0,
       0,  2003,  2005,  2008,  2004,     0,  2007,     0,  2006,  1987,
    1990,  1996,  2009,     0,     0,   355,   359,   361,     0,   364,
       0,  2754,  2813,     0,     0,  2735,  2728,  2729,  2727,     0,
    2768,  2733,  1692,     0,  2699,  2310,  2412,     0,  1697,  2122,
    2943,     0,     0,     0,     0,  2040,     0,  2680,  1691,  2679,
    2683,  1169,     0,   109,   110,     0,     0,     0,  1174,  1178,
       0,  1144,  1607,  2017,  2024,  2022,     0,   322,   347,   342,
     350,   344,   346,   345,   351,   352,   353,   348,   343,   349,
     336,     0,     0,     0,     0,  2715,     0,  2842,     0,  2844,
       0,  1697,  1227,  1226,     0,     0,     0,  2656,     0,  2652,
    2651,     0,   962,  2132,   962,     0,  2665,  2666,     0,  2657,
       0,  2658,     0,  2611,     0,     0,  2614,     0,     0,     0,
       0,     0,     0,     0,  2655,  2620,  2619,     0,  2622,  2623,
       0,  2626,  2674,  2675,  2672,  2673,  2676,  2677,  2671,  2647,
    1963,     0,     0,  1969,  1925,     0,   614,     0,     0,     0,
       0,     0,     0,     0,  1897,     0,     0,  1918,  1961,  1962,
    1967,     0,  1960,     0,  1967,     0,  1933,  1951,     0,  1967,
    1892,     0,     0,  1884,  1889,  1885,     0,  1891,  1890,  1893,
    1881,  1882,  1963,  1908,   197,  1951,  1917,  1924,  1907,  1914,
    1922,  1951,   885,   884,   883,     0,     0,  1951,  1967,  1967,
       0,  1115,  1116,     0,     0,     0,  1105,  1854,  1853,     0,
    1850,  1852,  1841,  1704,     0,  1709,     0,     0,     0,  2919,
    2935,  2917,  2923,  2930,  2931,  2916,  2119,     0,   556,     0,
       0,   559,     0,     0,  1845,  1220,    12,     9,   994,     0,
       0,  2151,     0,     0,     0,     0,     0,     0,  2819,  2817,
       0,  2818,  2816,  2773,  2788,  2810,     0,   966,     0,     0,
       0,     0,     0,     0,     0,     0,   197,     0,  1122,     0,
       0,  1252,  1249,  1243,  1250,  2131,  1777,   827,  1773,     0,
       0,  1730,  1727,  1729,  1216,  1214,     0,     0,  1217,  1215,
    1207,  1209,     0,     0,  1799,  1870,  1873,     0,  1981,     0,
     837,   609,   612,   611,   613,     0,   941,     0,     0,     0,
     939,     0,     0,   487,  1846,     0,     0,   487,     0,     0,
       0,   621,  1949,  1845,  1089,   928,   881,  1170,   881,  1050,
       0,   928,     0,     0,     0,     0,     0,     0,  1170,     0,
       0,     0,     0,     0,  1170,     0,     0,     0,     0,     0,
    1845,     0,  1059,     0,  1015,     0,     0,     0,     0,     0,
       0,     0,  1060,     0,     0,     0,  1016,  1845,     0,     0,
       0,     0,     0,     0,  1170,     0,     0,     0,  1170,  1101,
       0,  1100,  1099,     0,     0,  1170,  1170,     0,     0,     0,
       0,   649,   650,     0,     0,     0,     0,  1037,  1038,     0,
     617,  1845,  1845,     0,  1009,  1006,   837,   837,     0,  1845,
    2961,   995,     0,     0,   943,     0,     0,  1151,  1187,  1181,
    1186,  1184,  1194,     0,  1657,     0,   288,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   197,   153,   184,
       0,     0,     0,     0,     0,     0,     0,   197,   125,  1798,
    1168,  1162,  2836,  2840,   615,   837,     0,     0,     0,     0,
       0,     0,   470,     0,   473,     0,     0,     0,     0,  2815,
    1845,     0,     0,     0,   912,   837,     0,     0,     0,   269,
    2911,     0,  2865,     0,  1416,     0,  1504,  1554,  1504,  1504,
    1504,     0,     0,     0,     0,     0,  1417,     0,  1367,  1418,
    1419,     0,     0,     0,  1504,     0,   776,     0,     0,  1370,
    1371,  1360,     0,     0,  1439,     0,  1550,  1372,     0,     0,
       0,     0,     0,  1440,  1574,     0,  1576,  2119,     0,  1504,
    1424,  1377,     0,  1504,     0,  1378,  1441,  1442,  1443,     0,
    1445,     0,  1426,     0,     0,  1429,     0,     0,  1380,  1504,
    1504,     0,     0,     0,     0,  1504,  1382,     0,     0,     0,
    1381,     0,     0,     0,     0,     0,     0,     0,  1384,     0,
    1361,  1504,  1504,  1432,     0,     0,  1434,     0,  1393,  1695,
    1504,  1541,     0,  1485,  1484,  1498,     0,     0,  1498,     0,
       0,     0,  1486,  1483,  1482,     0,  2637,  2638,  2639,   930,
    1543,  1353,  1272,  1277,  1270,  1274,  1279,     0,     0,     0,
    1290,     0,     0,     0,     0,     0,  1282,  1293,  1296,  1458,
    1446,     0,  1569,     0,     0,  1077,  1793,     0,  1949,  1792,
     498,   499,   501,     0,  1094,  1093,  1788,  2967,  1785,  1092,
       0,   115,   117,  2001,  1998,  1997,  1999,   197,  2000,     0,
    2010,  1988,  2271,  2552,  2553,   368,     0,   340,   339,   341,
     365,     0,     0,  2726,  2812,     0,     0,  2777,  2780,     0,
       0,     0,  2721,  1694,  2710,  2706,  2711,  2713,  2709,  2712,
    2714,  2707,  2708,  1697,     0,  1734,  1698,  1607,  2937,  2942,
    1189,  1190,  1194,     0,     0,     0,   111,     0,     0,  2028,
       0,  1176,     0,     0,  1149,  1148,  1150,  1143,  1145,  1146,
       0,     0,  1608,     0,  2021,  2023,   197,  2014,     0,     0,
       0,  2726,     0,     0,  2845,  1229,     0,     0,     0,     0,
    1228,  1230,  1231,  1584,  1583,  1614,  1611,  1610,  1613,  1612,
    1615,  1607,  1691,  1716,  1697,     0,     0,     0,   834,   836,
     833,     0,     0,     0,  2786,  2786,     0,     0,  2670,  2662,
    2664,  2661,  2613,  2155,  2785,     0,  2643,  2644,  2645,  2641,
    2642,     0,  2648,  2646,     0,  2625,     0,  1965,  1968,  1699,
       0,     0,  1942,  1936,  1935,  1931,  1937,  1943,  1932,  1946,
    1945,  1944,  1905,  1904,  1900,  1952,  1941,  1939,  1928,  1967,
    1940,  1938,  1886,  1887,  1888,     0,  1734,     0,  1965,  1934,
    1967,  1967,     0,     0,  1967,  1921,  1923,  1129,  1114,  1113,
       0,  1848,     0,  1708,     0,  1706,  2925,  2933,     0,     0,
       0,     0,     0,     0,     0,     0,   561,     0,   557,     0,
       0,   958,   962,     0,   959,   960,   961,  2789,  2132,     0,
    2786,  2802,  2776,  2775,  2774,  2771,     0,     0,     0,     0,
       0,   987,   989,     0,     0,     0,     0,   955,   967,   968,
     193,  2127,  1761,  1762,  1760,  1758,  1759,   194,   195,  1751,
    1752,  1748,  1749,  1747,  1750,   196,  1137,  1136,  1135,  1119,
    1108,     0,     0,  1124,  1248,  1251,  1244,     0,  2048,  1771,
    1245,  1732,  1733,  2113,  1731,     0,  1739,  1738,     0,  1691,
    2121,     0,     0,     0,  2123,     0,  1769,  1770,  1754,  1755,
    1753,  1756,  1977,  1757,  1768,   610,  1845,     0,     0,     0,
       0,     0,     0,     0,   271,   280,     0,  2696,     0,   513,
       0,     0,     0,     0,     0,     0,     0,     0,   225,   520,
     949,   620,  1764,  1766,  1763,  1765,   525,   537,  1767,   538,
     536,   950,   524,   526,   951,   490,     0,   686,   929,   882,
     928,  1017,   928,     0,     0,     0,   881,   689,   928,     0,
     908,   929,   685,     0,  1083,  1082,  1084,   687,   687,     0,
       0,     0,   632,   627,     0,   638,  1039,  1159,  1040,  1664,
       0,   629,   630,   631,   651,     0,     0,   640,     0,  1057,
    1058,     0,  1020,  1055,  1056,  1092,   622,     0,     0,     0,
     665,   666,   664,   645,   652,  1086,  1085,  1087,   625,   626,
       0,     0,  1073,  1723,  1730,   654,   633,   653,   628,     0,
       0,     0,  1067,  1028,     0,   663,   661,   658,   660,   659,
     662,   641,   634,   635,   637,   636,   648,   639,  1027,  2009,
     623,   624,     0,     0,  1010,  1088,  1088,  1045,  1042,  1043,
    1008,  1014,  1047,   521,   522,   497,     0,  1845,  2963,     0,
     997,   999,  2889,  2890,  1707,     0,     0,     0,  1660,     0,
    1661,  1658,  1659,     0,  1572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   122,     0,     0,     0,     0,
       0,     0,     0,     0,   124,   206,   837,     0,   502,     0,
       0,     0,   215,     0,  1845,  1845,  1845,  1845,   210,   620,
     475,   477,   478,   479,   480,   481,   484,   482,   485,   483,
     486,   497,     0,     0,     0,  2808,   986,     0,   917,   919,
     918,   914,   913,     0,     0,  2047,     0,  2046,   685,   200,
     540,   542,   545,   543,   620,   618,  1834,  1836,   547,     0,
       0,   234,  2906,     0,     0,   465,   464,     0,     0,     0,
    1504,  1461,  1505,  1463,  1464,  1467,     0,  1580,     0,  1357,
     788,   788,   772,  1562,   768,   760,   766,  1566,     0,   744,
     758,  1558,   772,  1560,   788,  1567,  1365,     0,     0,     0,
    1504,  1469,  1504,     0,     0,     0,     0,     0,     0,  1548,
       0,     0,     0,  1362,     0,  1450,  1504,  1473,  1504,  1471,
       0,     0,     0,     0,     0,     0,     0,  1477,  1475,     0,
       0,     0,     0,  1504,  1479,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1476,  1478,     0,     0,
       0,     0,     0,  1465,  1512,  1506,  1507,  1508,  1509,     0,
       0,     0,  1496,  1496,  1498,     0,  1498,     0,  1487,  1350,
       0,  1545,  1288,  1283,     0,  1292,     0,  1307,  1306,     0,
       0,     0,  1457,     0,  2112,  2120,  1783,  1781,  1079,  1078,
    1795,  1808,  1949,  2783,  1780,   118,     0,  2002,  1995,  1991,
       0,   360,   369,   362,   366,   367,   363,     0,  2814,  2822,
       0,     0,     0,     0,  1734,     0,  2701,     0,     0,  1194,
    1196,  2044,     0,  2686,  2687,  2685,  2684,  2030,  2029,     0,
    1179,  1180,  1147,     0,     0,  1838,  1837,     0,  1814,  1816,
    1825,  1828,     0,  2025,  2019,     0,   337,     0,     0,  2720,
       0,     0,  1691,     0,  1584,  1614,  1611,  1610,  1613,     0,
       0,     0,     0,  1597,  1605,  1603,  1605,  1600,     0,     0,
       0,  1691,  1707,     0,  1700,  1716,  2610,  2609,  2608,   962,
     962,   963,     0,  2602,  2601,  2668,  2667,  2669,  2616,   620,
    2615,     0,  2624,  1964,     0,  1909,     0,  1930,     0,  1902,
       0,  1920,  1883,  1911,  1901,  1899,  1951,  1951,  1898,   198,
    1851,  1710,     0,  2936,     5,     0,     0,     0,     0,   560,
       0,   570,     0,     0,     0,     0,  2944,  2786,   962,     0,
    2786,  2799,     0,     0,  2772,   992,   990,   991,   993,   988,
     971,   970,   972,     0,     0,     0,   985,   984,   983,   969,
    1121,     0,     0,  1117,   828,     0,  2056,  1728,     0,  1607,
       0,  1697,  1800,  1871,  1870,     0,     0,   274,   277,   275,
       0,   276,     0,     0,     0,   523,   948,   620,   515,   517,
     518,   519,   229,   228,   230,   231,   233,   232,   227,   954,
       0,   532,     0,     0,     0,     0,     0,   928,   877,   878,
     688,     0,   683,   690,     0,     0,     0,     0,     0,   671,
     673,   674,     0,   757,   711,   702,   788,   705,   704,   845,
     772,   716,   763,     0,   765,   762,   737,   736,   753,   735,
     740,   724,   845,   845,   723,   756,   845,   741,   739,   743,
       0,   744,   764,   749,   738,   742,   734,     0,   755,   788,
     772,   772,   720,   754,   845,     0,   747,   788,   676,   792,
     722,   852,     0,     0,   788,   790,   768,  1065,  1066,   916,
     915,  1064,     0,     0,  1023,     0,  1024,     0,  1026,   835,
     835,   646,  1031,  1054,  1053,     0,  1032,   647,  1095,  1022,
       0,  1724,  1021,     0,     0,     0,  1144,     0,   656,   655,
     953,  2957,  2954,  2955,     0,  2965,  2964,  2966,     0,     0,
       0,   239,  2891,     0,     0,  1193,  1195,     0,  1182,   185,
     181,   157,   161,   163,   155,   159,   160,   162,   166,   167,
     165,   169,   170,   173,   174,   171,   164,   172,   158,   177,
     175,   176,   156,   179,   180,   190,   182,   189,   192,   168,
     191,   183,   154,     0,   127,   128,     0,   129,   130,     0,
     131,   132,     0,   133,   126,     0,  1845,  1845,   209,   620,
     504,   506,   507,   508,   509,   512,   510,   511,   215,     0,
       0,   214,     0,     0,     0,     0,     0,  1949,   211,     0,
    2790,  2792,   221,   966,  2951,  2952,  2953,     0,   546,   201,
       0,     0,   541,   539,   837,  1835,   544,     0,     0,   289,
     669,   670,   668,   667,     0,  2912,   468,   466,   467,     0,
       0,  1394,  1462,  1581,     0,     0,   789,  1555,   845,     0,
    1564,     0,  1565,   770,   769,   761,   759,  1568,   767,   745,
    1559,  1563,  1561,  1557,  1366,     0,  1368,  1359,  1358,  1470,
    1468,     0,     0,  1400,  1422,     0,  1401,     0,     0,     0,
       0,     0,  1374,     0,  1376,     0,     0,  1452,  1474,  1472,
    1425,  1444,  1403,  1427,     0,  1379,  1351,     0,  1404,     0,
    1409,  1407,     0,  1480,  1383,     0,     0,  1390,     0,  1388,
       0,  1389,     0,  1391,  1431,  1433,     0,     0,     0,     0,
    1504,  1513,     0,  1514,  1500,  1499,  1490,     0,  1495,  1494,
       0,  1491,     0,  1501,   931,     0,  1287,  1289,  1285,     0,
    1294,  1447,  1081,  1080,   500,   116,  1993,     0,  1989,     0,
       0,     0,     0,  2725,  2779,  2778,  2781,  2820,  2769,  2702,
       0,     0,  1855,  1857,  1191,  1194,  1196,     0,  1192,     0,
    2045,  2688,  2689,  1177,     0,  1663,  1815,  1863,     0,     0,
       0,  1832,  2110,  2109,  2117,  1849,  1833,  1840,     0,     0,
       0,  2716,     0,  1707,     0,  1622,  1616,  1618,  1619,  1621,
       0,     0,  1584,  1583,  1232,  1599,  1598,  1606,     0,  1604,
    1605,  1605,     0,     0,  1593,  1592,     0,  1654,  1623,     0,
       0,  1711,  1700,  2786,  2786,     0,     0,  2649,  1966,  1734,
    1916,  1915,  1929,  1894,  1734,  1697,  1967,  2926,     0,   566,
     553,     0,   551,   555,     0,   548,     0,     0,   564,     0,
     957,  2786,  2786,     0,  2800,  2134,  2133,  2786,     0,  2786,
     975,     0,   974,   980,   977,   976,     0,  1123,     0,     0,
       0,     0,     0,  2049,  2051,     0,  1776,  1697,  1697,  2122,
    1868,     0,  2124,  1697,   657,   279,   278,   284,   285,  2698,
    1949,   226,     0,  1019,     0,     0,   572,     0,     0,     0,
     691,     0,     0,   926,     0,   925,  1730,   909,   910,  1049,
     685,   676,   710,   703,   721,   839,   850,   848,   842,   746,
     845,     0,   846,   847,   707,   719,     0,   730,     0,   725,
     845,   733,   729,   745,   748,   750,   752,     0,   845,   718,
     717,   727,   714,   777,     0,  1095,   677,   802,     0,     0,
       0,     0,  1319,   796,     0,   857,     0,     0,   805,     0,
       0,   813,   692,   793,   795,   694,     0,     0,   853,   852,
     709,   845,   852,   777,     0,   791,   777,   777,  1063,     0,
    1095,  1665,  1071,  1070,     0,     0,  1097,  1052,  1722,  1069,
    1068,     0,  1025,   642,     0,     0,  2959,     0,  2962,   964,
       0,   249,     0,     0,   996,     0,   242,   240,   251,     0,
    1156,  1152,  1662,     0,   186,   188,   134,     0,   136,   138,
     143,     0,   145,  2156,     0,   148,     0,   150,  2128,   152,
       0,   139,     0,     0,     0,     0,  1949,   213,     0,     0,
       0,     0,     0,     0,   472,   531,   527,   533,   530,   476,
    2791,     0,     0,   208,  2961,     0,     0,   837,   619,     0,
       0,     0,   290,   292,     0,     0,   299,     0,     0,  1582,
       0,     0,     0,     0,  1556,     0,     0,  1356,     0,     0,
       0,  1551,  1553,  1549,  1504,     0,     0,     0,     0,     0,
    1354,     0,  1448,     0,     0,     0,     0,     0,     0,  1387,
    1385,  1386,   854,  1436,  1435,     0,  1466,  1510,     0,  1516,
    1497,  1489,  1488,     0,  1498,  1284,     0,     0,     0,   377,
     372,   380,   374,   376,   375,   381,   382,   383,   384,   378,
     373,   379,   371,   370,     0,     0,     0,  2829,  1697,  1855,
       0,  1857,     0,  1813,  1188,  1197,     0,  1609,     0,     0,
    1826,  1829,     0,     0,     0,     0,     0,   338,  2719,     0,
       0,  1624,  1232,  1585,  1601,     0,     0,  1594,  1602,     0,
       0,     0,     0,  1648,  1649,     0,     0,  1652,  1655,  1656,
    1620,  2114,  1720,  1719,  1701,     0,  1225,  1711,  2604,  2603,
    2787,  2617,  1910,   197,  1913,  1906,   554,     0,   552,     0,
       0,   550,   558,     0,   565,     0,   956,  2797,  2786,  2803,
    2786,     0,  2804,     0,   981,   982,   979,     0,  1125,     0,
       0,     0,     0,  2050,     0,     0,  2057,  2059,  1869,  1725,
    1725,   516,     0,   575,  1018,     0,     0,   684,     0,     0,
       0,   899,     0,     0,   922,   672,   675,   841,   840,   844,
       0,   843,   706,   852,     0,   932,   726,   751,     0,   728,
     781,   782,   783,   715,   778,   780,   859,  1048,   808,   814,
     816,   815,   809,   807,     0,     0,     0,     0,     0,     0,
     821,   799,   822,  2088,     0,     0,   817,   818,   819,   810,
     806,   811,   812,     0,   794,     0,     0,   804,   797,   798,
     708,   712,   713,   699,     0,   700,   701,     0,  1061,  1051,
    1035,  1096,     0,  2958,  2956,  2960,   250,   238,     0,     0,
     998,  1000,     0,     0,  1001,     0,     0,  1155,   178,     0,
     135,     0,   144,     0,     0,   149,     0,     0,   140,     0,
     888,   529,   528,   505,     0,   894,   216,   217,   219,     0,
    2793,     0,  2794,  2963,     0,   202,   199,     0,     0,  2907,
       0,   835,  2905,   302,   300,   301,     0,   295,   297,     0,
       0,  1395,   786,   784,   787,   785,   773,     0,  1398,  1399,
    1423,     0,  1481,  1421,     0,  1375,  1449,     0,     0,  1428,
    1405,  1408,  1406,  1411,  1412,     0,     0,     0,     0,  1518,
    1502,  1503,     0,  1286,  1994,  1992,  2820,  2823,     0,     0,
    2722,  1734,  1857,  1707,  1811,     0,     0,  1862,  1864,  1827,
    1830,  1831,  2119,  1847,  1839,  2718,     0,     0,  1617,  1596,
    1595,  1588,     0,  1590,     0,  1644,  1644,  1653,  1721,     0,
    1717,     0,  1712,  1713,  1224,  1912,   567,     0,   557,   571,
     549,  2948,  2801,  2805,  2786,   973,   978,  2054,  2055,     0,
    2052,     0,     0,  2058,  1745,  1745,   888,     0,   595,   573,
     894,     0,   921,   899,  1730,     0,  1845,   678,   900,   901,
     903,   904,   907,   924,     0,   851,   849,   845,     0,   845,
     779,     0,   863,  2090,  2089,     0,   801,   803,   808,   695,
       0,     0,  1030,  1036,     0,   236,   241,   252,   253,   947,
    2894,  2892,     0,   187,   137,   146,   147,   151,     0,     0,
       0,  1077,   889,   890,   892,     0,  1077,   895,   896,   898,
       0,  2795,   204,   899,  2904,   247,     0,   291,   293,  2913,
     299,     0,     0,     0,  1552,     0,  1451,  1453,   855,     0,
    1515,     0,  1539,  1538,  1540,  1511,     0,  1492,  2829,  2821,
    2824,  2703,  1812,  1856,     0,  1607,     0,     0,     0,     0,
       0,     0,     0,  1718,     0,     0,     0,     0,     0,     0,
    2945,  2946,  2798,  2053,  2061,  2060,     0,  1867,  1859,   679,
       0,     0,  1845,     0,     0,  1845,  1845,  1845,  1845,   590,
     596,   598,     0,   680,     0,     0,   681,   927,   906,     0,
     902,  1730,   731,   933,   732,     0,   862,     0,   867,   800,
       0,  1062,  1029,   243,  1002,   404,     0,  2893,  1153,     0,
       0,     0,   223,   891,   212,   224,   897,     0,  1077,   239,
     248,     0,   272,   296,   835,     0,   771,  1373,  1437,  1517,
       0,     0,     0,     0,  1533,  1520,  1521,     0,     0,  2724,
       0,  2830,     0,   827,     0,  1691,  1589,  1591,     0,  1645,
       0,  1657,     0,  1715,  1714,     0,     0,  1845,     0,  2949,
    1746,   584,   577,   580,     0,     0,  1845,  1845,     0,     0,
       0,     0,     0,   574,   597,  1845,   682,   920,   905,   923,
     860,     0,   864,   865,   866,     0,   858,     0,     0,   245,
     430,  2245,   416,   402,     0,     0,  2424,   406,   254,   257,
     255,  1860,   256,   262,     0,   263,   264,   265,   266,   267,
     258,   428,   429,   261,   259,   260,     0,  2140,     0,  2141,
    2201,  2200,  2202,     0,     0,     0,   141,     0,   893,   218,
     222,   251,   835,  2914,   298,  2900,     0,     0,  1528,     0,
       0,     0,  1526,     0,  1522,     0,  1519,  1524,  1523,     0,
    1858,  2062,  2409,     0,  1627,     0,  1625,  1647,  1646,     0,
       0,   568,     0,     0,  2950,   584,     0,   582,     0,   578,
     576,   579,   606,     0,     0,   602,   603,   601,   599,     0,
       0,   592,     0,   861,     0,     0,   696,   244,     0,   237,
       0,     0,   415,   418,     0,     0,   421,   411,   410,   412,
       0,   405,   404,   404,   458,   409,   455,   454,   447,     0,
    2895,     0,     0,     0,  2908,   282,   281,   273,     0,   404,
    2898,  2899,     0,  2902,     0,  1529,     0,  1531,  1530,     0,
       0,  1535,     0,  1536,  2612,  2828,  2827,  2825,     0,  2048,
       0,  1626,     0,     0,   835,  1651,  1650,     0,   562,   568,
    2948,   581,     0,   588,     0,   586,   589,   604,   605,   595,
     591,     0,   600,   873,     0,   872,     0,   869,   868,   698,
     697,   792,   246,   431,   442,   445,   437,   417,     0,     0,
       0,   407,   404,     0,   391,   389,   390,   396,   397,   398,
     399,   400,   401,   392,   395,   393,   394,   404,     0,   307,
       0,     0,  2896,  2897,   142,   253,   272,   283,  2915,  2901,
     404,     0,  1527,  1525,  1534,  1537,  2826,     0,  2056,     0,
    1628,  1629,  1632,   569,   563,  2947,   583,   585,     0,   594,
     593,   875,   876,   874,     0,     0,   693,     0,     0,   404,
     438,     0,   413,     0,   422,     0,     0,   305,   461,   459,
     303,   449,   449,   235,  2909,  2903,  1532,     0,  2064,  1631,
    1633,     0,   587,     0,     0,   439,   445,   435,   443,   404,
       0,     0,   403,     0,   457,   306,     0,     0,     0,   404,
       0,   448,   450,   452,   404,  2063,     0,  2068,     0,   871,
     870,     0,   436,     0,     0,   434,   414,   419,   404,   462,
     404,   316,   315,     0,     0,   385,   456,     0,   308,  2910,
       0,     0,  2075,  1634,   440,     0,   404,     0,   404,     0,
     404,     0,     0,   835,     0,     0,   304,  2066,  2067,  2065,
    2070,     0,     0,  2072,  2073,     0,  2036,     0,  1641,  1642,
    1630,  1635,  1636,     0,     0,   432,   404,   420,   425,     0,
       0,   311,   386,   387,     0,   313,  2074,  2069,     0,  2076,
    2078,     0,  1643,  1637,     0,  1638,     0,     0,   404,   404,
     421,   424,   463,   460,     0,     0,   309,   310,   321,   320,
       0,  2071,     0,     0,     0,     0,  1640,  1639,   404,   404,
     426,   329,   327,   404,   317,   325,   319,     0,   326,   388,
     314,  2077,  2079,     0,   312,   328,   318
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4118, -4118, -4118, -4118, -4118, -4118,   156, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118,  1660, -4118, -4118, -4118, -4118,
   -4118, -4118,  1857,  1864, -4118, -3943, -4118, -4118,  1867, -4118,
     556,  1869, -4118,   555, -4118,  1880, -4118,   568, -4118, -4118,
    -875, -2088, -4118, -4118, -4118, -4118, -4118, -4118,  1305, -4118,
   -4118,   560,  1504,  3911, -4118,   562, -4118,   283, -4118, -4118,
   -4118, -3673,   174,     1, -4118, -4118,    27,  3438,    -2, -3687,
   -4118, -4118, -4118, -4118, -4118, -4118,   570, -4118, -4118,   391,
   -4118, -4118, -1349, -4118, -4118, -4118, -4118, -4118, -4118,  -191,
    -141,  2481, -4118, -4118, -4118,  4968, -4118,  4066, -4118, -2542,
    2328, -4118, -4118, -4118, -4118, -4118,  2393, -2483, -4118, -4118,
   -4118,  1185, -4118, -4118, -4118,  -482,   313, -4118,   318, -4118,
     322, -4118,   330, -4118,   332,   333,   335,   336, -4118,   337,
   -4118, -4118,  -151, -4118, -4118, -4118, -4118,   338, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118,   -40, -4118, -4118,    59, -4118,
   -4118,   -30,   339, -4118,   -13,   341, -4118,   345, -4118,    44,
   -4118,    51, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118,  1365,  2786,  4044,  2782, -2596, -4118,  1764, -4118,
   -4118,   945, -4118, -4118,  1096, -1405, -4118,  2640, -2377, -2288,
   -2284, -4118, -4118, -4118, -2949, -2948, -1216, -4118, -1211, -2282,
   -2170,   931,  1921,  1923,  1935,    15, -4118,  1157,   553, -4118,
   -4118, -4118, -3292,   142, -4118, -3639,   777, -4118, -4118, -4118,
   -4118, -3072, -4118, -4118,    68, -4118, -4118,   136,   140, -4118,
     415, -4118,  2675, -2085,  -541,  2746, -4118, -1803, -1596,   605,
   -1457, -1434, -4118, -4118, -4118,  1394,  1955,  1114, -4118,  1115,
   -1494,  1067, -3449, -4118, -4118,  -387, -2602, -4118, -4118, -3986,
   -4118,   -15,  1575, -4118, -4118,   173, -4118, -4118, -4118,  1544,
    1547, -1690,  1834, -1478, -4118,   765,   774, -1625, -4118,   144,
   -4118,  1071, -4118, -4118, -3704, -4118,   -41, -2366,   375, -4118,
   -4118, -2914, -3438, -1428, -4118, -4118, -3219, -2347,  1871, -4118,
   -4118,   435, -4118, -4118, -4118, -4118, -3288, -4118, -1515, -2098,
   -4118, -4118,   576, -4118,   518,   573, -4118,   517, -4117, -4118,
     569,  -368,  2180, -4118,  3420,  2171, -2287, -4118, -3980, -1168,
     810, -2139, -4118,  1116, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -1940, -4118, -4118,  1441, -4118,  2298,  2001, -4118,  2310,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,  2785,
   -4118,   750,  -492,  2787, -4118,  2791,   604, -2248,  -960, -4118,
    -993, -4118, -1470,  3606, -2303, -3546, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118,  2995, -4118, -4118, -4118, -4118,
   -4118,  4194, -4118,  2996, -4118, -4118, -4118, -4118, -4118,  1555,
   -4118,  2476, -4118, -4118, -4118, -4118, -4118,  2186,  3467, -4118,
   -4118,    72, -4118, -4118, -4118, -4118,  2486, -4118, -4118,  3493,
    2092, -4118, -4118,  1841,  2498, -1624,  1315, -1027,  5099,    10,
      35,     8,   854, -4118,  3120, -4118, -4118, -2116, -4118, -4118,
   -4118, -4118,  4244,  -937,  -988, -4118, -4118,  2942, -4118,  4247,
    3963,  3255,   618,  4869, -4118, -1158, -4118,   -56, -4118, -4118,
    -784, -4118, -4118, -4118,  -571, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118,  2575, -4118, -4118, -4118,
    3316,  1906, -2507, -4118, -2118, -1769, -4118, -2360,   521, -4118,
   -4118, -4118, -4118, -4118, -4118,   541, -4118,   256, -4118, -4118,
   -4118, -1893, -4118, -4118, -4118, -4118, -4118,  -911,  2706, -1054,
   -1064, -4118,  4049, -4118, -4118, -4118, -2823, -4118, -2485, -4118,
   -4118, -4118, -4118, -2794, -2577, -4118, -1111,  2487,  2491,  2497,
    2500, -4118, -4118,   161, -4118,   239, -4118, -4118,    42,    45,
   -2086,   667, -4118,   934, -4118, -4118, -4118,   440,  1577,   447,
   -1880, -2244, -1112,  1840, -4118, -4118, -1967,  4096, -1989, -1902,
    1300,     3,  4235,  3753, -2946, -4118,   938, -4118,   552,  1833,
     732, -4118, -4118,  1620, -1010,   -90,   580, -2922, -4118,  -996,
     -87, -4118, -2174,   668, -1928, -2626, -2136, -2371, -2152, -4118,
   -4118,  2983,  -373, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118,  -490,  -100,  -359,  5198,  3287, -4118,  2618,  4195,  4197,
   -4118, -4118,  3903,  1909,  1916, -4118, -2774, -2585, -4118, -4118,
   -4118,  -908,  -916,   984,  3786,  1358,  1920, -2753,  1020, -3876,
    4208, -4118, -3335,  1012,  4213,  4209, -3051,  3711, -4118, -4118,
   -4118, -4118, -4118,  2467, -4118, -4118, -4118, -4118, -4118, -4118,
    3142,  4295,  -943, -1979, -4118, -4118, -4118,   944,  3121,  2478,
   -1306, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118,  2632,  2225, -4118, -4118, -4118, -4118,
    3241, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118,  1937,   320, -4118,
    1307,   243, -4118,   956, -4118, -4118, -4118, -4118, -4118,   108,
   -4118, -4118,    85, -4076, -1020, -1012,  1205, -1913, -2522, -4118,
    1035, -3186, -2806,   752,  -682, -1165, -1159,    54,  2390,  3839,
   -1321, -4118,  5234,  -796, -1489, -2127,  1139,  4057,    -6, -4118,
   -3115, -4118,   485,   105,  2183,   -58,  3211, -3495, -4118,    18,
       5, -4118,   430,   268, -4118, -4118,   344, -4118, -4118, -4118,
     343, -4118, -4118, -4118, -4118,  3882, -4118,  2539,  5236, -4118,
   -4118, -4118,  3200,  5238,  -790,  3893,  3225, -4118,  3224, -4118,
   -4118, -4118, -1953, -4118, -4118,   187, -4118,  2622, -4118, -4118,
   -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118, -4118,
   -4118, -4118, -4118, -1247,  4385,  5247,  3992, -4118, -4118,  2462,
   -4118, -1899, -1275, -1063, -2421, -4118,  2852,  3806, -4118, -4118,
    1659, -4118,  2853,   808, -4118, -4118,   655, -4118, -4118,   363,
    4386,  3951, -4118, -4118, -4118, -4118, -4118,  4272, -4118,    -4,
      -1, -4118,  -339, -4118, -4118, -4118,   384,  5289,  5290, -4118,
   -4118,   170, -4118,  -866, -4118, -4118, -4118, -4118, -4118,  4217,
   -4118, -4118,  4223, -4118, -4118, -4118, -4118,  4226, -4118, -4118,
   -4118, -4118, -4118, -4118,  1699, -4118, -4118, -4118, -4118, -4118,
   -4118,   255, -4118, -4118, -4118,   355, -4118,  1610, -4118,  1238,
   -4118,  1177,   882,  1709
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    64,    65,   997,  2187,    66,    67,    68,    69,    70,
    2003,    71,  1277,  1946,  2611,  2612,    72,   871,    73,  1675,
    1676,  2417,  2418,  3654,  4097,  4098,  3663,  4112,  3657,  4101,
    4102,  3660,  4106,  4107,  2407,  2408,  4093,  4094,  3646,  3649,
    2409,  2156,    74,    75,    76,    77,  2425,    78,  3681,  2439,
      79,  2917,  2918,  1718,  3708,  4084,  4703,  4088,  4789,  4889,
    4719,  3050,  4404,  4704,  4705,  4798,  2448,  2256,  4833,  2904,
    4917,  2905,    80,  1061,  4141,  4142,  4143,  4446,  4447,  4448,
    4449,  5079,  4982,  5050,  5080,  5174,  5180,  5103,  5193,  5194,
    5195,  5178,  1345,  5196,    81,   903,   904,  1347,  2030,  2625,
    2031,    82,    83,   833,  1965,  1966,  1967,  1968,  3306,  2626,
    3301,  3302,  4212,  5104,  5176,  4983,  4984,  4896,  4985,  4801,
    4986,  4900,  4987,  4804,  4988,  4989,  4990,  4991,  5071,  4992,
    4895,  5096,  4979,  4980,  5073,  5148,  5171,  4993,  4811,  4890,
    5037,  4812,  4891,  5066,  4975,  5067,  5091,  5144,  4976,  5038,
    5094,  5041,  4994,  5000,  5081,  4995,  5001,  4996,  4816,  4907,
    4999,  4905,  4998,  5077,  5076,  5119,  3167,  3719,  1704,  2434,
    3118,  3119,  3120,  2920,  2921,  1575,  2599,  2600,  2601,  3668,
    3669,  3670,  3476,  3477,  3478,  2263,  3045,  2909,  1576,  1577,
    1578,  3124,  3672,  3673,  3125,  3126,  1579,  3128,  1580,  1581,
    2926,  3149,  3150,  3151,  3152,  3153,  2181,  2182,  3424,  2806,
    3421,  4283,  3918,  4948,  3925,  3975,  3976,  4548,  4870,  4762,
    4866,  4763,  4868,  4954,  4955,  4773,  4880,  4881,  4679,  4680,
    4681,  3105,  2250,  2251,  1071,  1638,  3154,  2272,  1639,  3006,
    1640,  1641,  2254,  3021,  2993,  3714,  3508,  3509,  3510,  4025,
    3511,  2947,  2280,  3501,  3502,  4041,  3558,  4376,  4971,  3559,
    3560,  3561,  3562,  3563,  3564,  3565,  3736,  3566,  3737,  3732,
    3733,  3730,  1109,  4343,  4344,  4345,  3726,  3727,  4056,  4042,
    4043,  4044,  4352,  4369,   781,  4361,  4001,  1363,  2868,  1386,
    1387,  2719,  2049,  1642,  4002,  4003,  4004,  4050,  3797,  4475,
    4046,  4026,  4572,  4695,  4698,  4786,  4967,  2948,  1668,  2940,
    2145,   655,  4601,  4602,  4603,  4606,  4607,  4608,  4557,  4558,
    4559,  4560,  2949,  2443,  4561,  4562,  3141,  4551,  3983,  3984,
    3985,  2950,  3271,  4334,    84,    85,  1557,    86,  1563,    87,
    1559,    88,  1661,  1053,    89,  2361,    90,    91,    92,    93,
      94,  2724,    95,    96,  2837,  2838,  2839,  2207,  2831,  2832,
    1002,  3051,  3611,  4589,  1036,  1643,  1644,  2355,  1645,  1646,
    4582,  1647,  2967,  1648,  1649,  1650,  1651,  3287,  3288,  2955,
    3289,  2996,  2282,  1314,  2606,  4067,  2334,    97,    98,    99,
    1011,  2216,   100,  1442,  1443,  1444,  1503,  1504,  2218,  2863,
    3453,  1437,  1438,  1439,  1012,  1501,   101,  1680,   102,  2677,
    2678,  2679,   103,  4407,  2367,   104,   105,  1687,  1688,  1689,
     106,   193,   107,  1334,  1332,  2008,  2009,   108,  1057,  1058,
    2369,   109,  2660,  2661,  1669,  1670,  3848,   110,   111,  3156,
     113,   782,   115,   116,  2041,  2042,  2700,  2701,   117,   118,
     920,   921,   922,  1016,  1017,  1507,  2222,  2223,  2224,   783,
     784,  1217,  1106,  1671,   786,   787,  1899,   788,  1218,  1219,
    4047,   789,  1230,  1887,   790,  3745,   791,   792,   793,   794,
     795,  3766,  3767,  4172,  1919,  1920,  1921,   796,   797,   798,
    2557,  3808,  3261,  4194,  3171,  3172,  3255,  4521,  3257,  3802,
    3803,  4189,  4479,  4635,  4734,  4838,  4736,  4839,  4846,  4636,
     799,   800,  1206,  1792,  3759,  3209,  4161,  1737,  3196,  1672,
    1673,  1131,  1132,  1097,  2464,  1743,  2702,  3881,  2703,  3368,
    3369,  3370,  3892,  3888,  2681,  2682,  2704,  2705,  2706,  2707,
    2708,  2709,  2710,  4647,  4853,  4854,  5061,  5140,  5141,  5142,
    5143,  4651,  4256,  4257,  4258,  4259,  4260,  3059,  3060,  3061,
    3854,  2968,  1782,  1783,  1790,  1983,  1984,  1738,  2655,  2093,
    3901,   994,   970,   971,  1455,  2164,  4266,  4522,  4523,  3374,
    4262,  4520,  3002,  3003,  1021,  1022,  2232,  2873,  2874,  1523,
    1524,  1528,  1529,  4667,  3007,  2892,  2847,  2927,  2893,  2894,
    1511,  1512,  1018,  1513,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,  2620,  2243,  1050,   656,  1934,  1935,  1936,   137,   138,
     876,   897,  1337,  3338,  3339,  3860,  3340,  3158,  3342,  3866,
     967,  2264,  2265,  3867,   968,  2159,  2160,  2161,  4221,  4223,
     139,   140,  3856,  3857,   898,   141,  2884,  1540,  1541,   142,
     960,  2129,  2130,  2131,  2776,   143,   950,  1427,  3909,  3914,
    2762,  1329,  1582,  2110,  1430,  1431,  1432,  2111,  2747,  3395,
    2094,   144,   145,  1550,   146,  1033,  1551,   147,  1278,  1959,
    3299,  3828,  4197,  1960,  1961,  2621,   148,   900,  1342,  1339,
    1343,  2015,  2014,  2686,  2684,   149,   890,  1330,  2669,   150,
     881,   151,   152,   885,  1996,  1322,  3849,  3159,  3456,  3953,
    3954,  3956,  4306,  4307,  4939,  5087,  5129,  5112,  5132,  5133,
    5136,  5159,  5160,   801,  1458,   802,  4362,   803,   804,   805,
    3861,   806,  2233,  4263,   807,  3858,   808,  2711,  2244,   626,
    4108,  4109,  1003,  1459,  2226,  2054,  3937,  1220,   982,   861,
    4818,   940,  1005,  1378,  1006,  1939,  1379,  2639,   628,   629,
     630,  4819,   631,   632,   865,   945,   633,   153,   946,   154,
    2063,   155,  3389,  3390,  1392,  1396,  2078,  2079,  2080,  1433,
    1870,  2072,  1393,  2081,   949,  1371,  1372,  2061,  1373,  2059,
    1374,  2729,  2089,   156,  1324,   638,  1999,  2000,  3325,   157,
     964,   158,   159,   160,  1042,   161,  1988,  2653,  2654,   162,
    2033,   163,  1970,  1979,  1281,   867,   868,  2642,  2826,  2202,
    2203,  2640,  1940,  1380,  3383,  1489,  1707,  1008,  1708,  1009,
    1292,  1973,  1492,  4217,  3833,  4741,  4490,   164,   194,   641,
    1069,  1694,  2038,   165,   166,   167,   168,  1522,   811,  2712,
     812,   923,  1085,   657,  1727,  1719,   187,   188,   189,   660,
     661,   190,  1659,  1660,  4089,  4591,  4707,  4922,  4923,  1721,
    5010,  1722,  1723,  3709,  4616,  5006,  5084,  1724,  3164,  4146,
    4722,  4919,   169,  1464,  1460,   980,  2175,  2169,  2171,   170,
     171,  1317,   172,   173,  4660,  4661,  3696,  2360,  3602,  3603,
    4078,  3048,  3607,  2608
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     627,   981,   938,   119,  1251,  1256,  1545,  1429,   114,   810,
     112,  1530,   829,  1842,  1552,  1797,   870,  1534,  1709,  1843,
    2227,  1364,  1368,  1133,  1025,   889,   863,  1026,  1516,  1533,
    1980,  2664,   905,   625,  3263,   910,  1746,  1747,  1007,  3410,
     905,  1397,  2350,   958,   863,  2375,  2779,   965,   942,   972,
    2628,  3265,  2713,  1932,  1653,  1477,   987,  3121,  1933,   988,
    3112,   941,  2876,  2877,  2982,  1799,  1785,  2820,  2281,  3457,
    2627,   993,  1886,   992,   985,  2035,   869,  1812,  1813,  1814,
    3317,  1518,  3591,  1816,  2553,  2554,  2656,  1652,  2310,  2279,
    1004,   830,  2562,  2563,  2564,  1092,  3341,  2104,  2932,  2933,
    2252,  3197,   888,   957,  2036,  3198,  2333,   894,  3612,  3388,
    4040,  1080,  1081,  2928,  2725,  2287,  2928,  2928,  3598,  2291,
    2137,  4045,  1852,  2253,  2743,  3921,   862,  1028,  2860,  2255,
    3963,  2885,  2598,  2311,  3371,  1500,  2937,  2693,  2769,  2656,
     958,  4062,  4063,  3300,   862,  2323,  3122,  3346,  1065,  1067,
    3123,  3862,  3130,  2962,  1027,  3142,  2780,  1394,  4441,  3674,
    3675,  4104,  2781,  2267,  4507,  2895,  4220,  4417,  2784,  1037,
    2604,   627,  4048,  2871,   627,  1004,  1046,   958,  3144,  3419,
    2942,   662,  1739,  1740,  1741,  2998,  2999,  2833,  1982,  1210,
    1211,   958,  3256,  1751,  2801,  2437,   639, -2016,  1068,  1982,
    1034,  3144,  1198,  1199,  1039,  1200,  1308,  1044,  -952,  3447,
    3448,  1942,  5186,  3354,  2803,  2155,   887,  2155,  1252,  1720,
    1728,   893,  1210,  1211,  1805,  1599,  3290,  1809,  1210,  1211,
    1210,  1211,  4294,  2545,  2194,  2365,  2667,  1047,  1210,  1211,
    -620,  1677,  4328,  1210,  1211,  2881,  1826,  1827,  1210,  1211,
    1831,  1059, -1806,  1210,  1211,  3132,  -937,  4071,  1210,  1211,
    1253,  4646, -2704,  1253,  1599,  1864, -1958,  4555,  1845,  1846,
     882,  1049,  1013,  1850,  1851,  3910,  2146,  1210,  1211,  2928,
    1399,   925,  2872,  2855,  2462,  4280,  1695,  3259,  1257,   864,
    1210,  1211, -2169,  1599,  2046,  -607,  1029,  5137,  2432,  4869,
   -1959, -1949,  2604,  1253,  3384,  5039,  3294,   864,  1296,  1013,
    1361,   944,  3343,  4007,  4011,  2091,  1663,  4012,  4076,  3095,
    1086,   831,  4658, -1693,  -608,  -488,  2196,  4360,  2040,  3104,
    4168,  3465,  1210,  1211,  5138,  4021,  3933,  4930,  4552,  3163,
    3173,  3174,  3175,  1490,  3578,  4494,  1210,  1211,  3145,  2133,
     195,   955,  1210,  1211,  -620,  1867,  3201,  -474,  1210,  1211,
    1440,  1014,  2963,  1015,  2965,   866,  1327,  1320,  4013, -2618,
    1210,  1211,   877,  2977,  2173,  2056,   961,  1014,  3940,  5127,
    1055,  3217, -2704,   866,  1113,  3219,  1210,  1211,  3145,  1013,
     195,  2994,  1584,  2943,   883,  1210,  1211,   895,  3588,  3431,
    1015,  3227,  3228,   909,  3648,  3995,  1982,  3234,  1171,  2107,
    -514,  4400,  3025,  3962,  4065,  1520,  3027,  3996,  2871,  1357,
    1505,  1735,  3694,  3246,  3247,  2112,  3898,  2092,  1868,  2136,
    1299,  3997,  3253,  2641,  1761,  1681,  4686,  2537,  4480,  4925,
    1735,  1014,  1883,  1399,   925,  2928,  4931,  -503,  1133,  3600,
    4844,  4080,  4556,  2726,  1261,  1262,  1263, -2705,   984,  1266,
    1267,  1916,  1917,  1270,  1350,  1272,  1273,  1274,  4594,  2522,
    4304, -1693,  2148,   943,  2727,  2073,  2674,  1076,  2196,  4347,
    1015,  3385,  1210,  1211,  1665,  3995,  2077,  1210,  1211,  1516,
     195,  1291,  2329,  3442,  1678,  1302,  4718,  3996,  3941,  4884,
    4081,  3454,  5124,  4443,  4305,  1456,  4219,  2353,  3779,  4154,
    1013,  3997,  1666,  4444,  4389,   197,  2728,  2197,  4481,  3695,
    5039,  5125,  2944,  1399,   925,  1358,  1506,  2872,  3716,  3297,
    1516,  2928,  3479,  4105,  2825,  3688,  3880,  3884,  2240,  2241,
    1338, -1693,  1521,  1712,  5139,  2330,  3895,  3896,  1736,  2017,
    3826,  3360,  1682,  2149,  2113,  2603,  1683,  1056,  1213,  3698,
    2118,  1214,   896,  3639,  1441,  1662,  1114,  1750,  1210,  1211,
    1684,  1309,  3893,  3147,  1054,  1321,  2002, -2705,  1254,  4253,
   -2770,  1254,  3353,  5128,  1210,  1211,  2834,  2174,  2605,  3360,
    1172,  4066,  1210,  1211,  4040,  3380,  3381,  1213,  3344,  1213,
    1214,  1015,  1214,  4932,   195,  1210,  1211,  1213,  3382,  3580,
    1214, -1693,  1213,  3147,  3942,  1214,  4642,  1213,  4254,  3251,
    1214,  1254,  1213,  1860,   878,  1214,  1062,  1213,   962,  -620,
    1214,  2331,   958,   958, -2169,  4724,  4284,  1491,  2057,  3717,
    1004,  4169,  1078,  1517,  1869,  1351,  1213,  1328,  3608,  1214,
      42,  2266,  1362,  2268,  2269,  4709,  4710,  4445,   956,  1213,
    4576, -1693,  1214,  1892,  3314,  1612,  1045,  3599,  2283,  2197,
    2134,  2289,  2290,    42,  2292,  2092,  4659,  2295,  2296,  2297,
    2298,  1258,  3584,  1915,  2301,  1117,  2473,  1457,   988,  2313,
    1423,  4077,  1066,  1066,  2318,  2319,  2320,  2321,  2322,  1134,
    2366,  1213,  2326,  2327,  1214,  4777,  1665,  1685,  2337,  2338,
    2339,  2340,  1932,  2343,  2344,  1213,  2346,  1933,  1214,  2349,
    2605,  1213,  2602,    49,  1214,  3375,  4865,  1213,  2486,  2675,
    1214,  3671,  3341,  2721,  1666,  4832,  1210,  1211,  3678,  1213,
    2271, -2704,  1214,  3911,  1255,  3372,    49,  2945,  1732,  5187,
    3260,  2656,  1297,  4584,   832,  1213, -1958,  3810,  1214,  3812,
    1255,  2939,  1352,  2939,  1213,  3461,  2147,  1214,  2463,  3595,
    3577, -2770,  1004, -1693,  1208,  1030,  2628,    54,  2198,  1221,
    3094,  4332,  3103,  1941,  3443,  1203, -1693,  1202,  2668,  4974,
   -1959,  4336,  3268,  2252,    55,  2364,  2627,  3292, -2016,  4339,
      54,  3492,  2565,  3495,  2764,  1686,   884,  2882,  2767,  -952,
    1264,  2271,  2656,  2771,  2200,  1269,  2253,    55,  3945,  1216,
    4329, -1693,  2255,  2195,  1679,  2455,  1664,  1210,  1211,  2438,
    4295,  1088,  4381,  1476,  1333,  2001,  1210,  1211,  1210,  1211,
    2471,  2271,  2785,  2786,  3133,  2011,  3569,  3570,  3499,  3155,
    1679,  1213,  1216, -1806,  1214,  2271,  1213,  -937,  1216,  1214,
    1216,  1210,  1211, -2704,  5019,  1004,  2452,  3973,  1216,  4944,
    1476,  1315,  3427,  1216,  3882,  2802,  1516,  1679,  1216,  1210,
    1211,  3425,  3958,  1216,  4912,  1331,  1004,  2840,  1216,  2848,
    1209,  3725, -2169,  2498,  3801,  2804,  -607,  2502,  1310,  3435,
    3436,  3437,  3438,  1025,  4228,  4323,  1026,  1216,  3962,  1426,
    3991,   986,  3459,  2676,   810,  1210,  1211,  1944,  4104,  2524,
    1216,  2835,  2836,  1004, -1693,  -608,  -488,  4241,  2271,  4014,
    4933,  1004,  1004,  2946,   986,  2571, -2705,  1213,  1535,   863,
    1214,  1536,  4720,  1173,  2561,  1210,  1211,  3813,  2199,  1300,
    2185,  4162,   942,  1213,   958,  1447,  1214,  2928,  -474,  1077,
    2271,  1213,  1216,   972,  1214,   941,  2200,  2546,  2252,  2453,
   -2618,  2547,  2271,  4060,  1213,  1865,  1216,  1214,  4885,  1866,
    1558,  2043,  1216,  3998,  2472,  1865,  3486,  3816,  1216,  2490,
    2454,  2253,  1480,  3827,   993,  2538,  1202,  2255,  3386,  2732,
    1216,  4255,  1028,  4618,  5065,  3690,  3930,  3718,  1004,  3934,
    4555,  -514,  5113,  2271,  1446,  1276,  1216,  1531,  2477,  -294,
   -1693,  2895,  1706,  3444,  3445,  1216,  1306,  2114,  1553,  1027,
    3131,  2523,  1004,  2119,  1560,  1004,   119,  1562,  3320,  3176,
    1255,   114,  1654,   112,  1087,  1656,   627,  3862,  -503,   958,
    2271,  4242,  3722,  3572,  2332,  3609,  1674,  2201, -2705,  1679,
    4128,  5162,  1483,  3998,  4324,  1696,  1697,  1698, -2770,  3780,
    1701,  2185,  4920,  1705,  1004,  1325,  1710,  1711,  1754,  1657,
    3138,  1335,  3749,  2526,  3750,  4230,   863,  2527,  3999,  3855,
    4555,   879,  1817,  2478,  3493,  2543,  4245,  4246,  3768,  2544,
    3769,   966,  4082,   872,  1517,  1213,  2674,  3273,  1214,  1066,
    1134,  3274,  1216,  1025,  4348,  3783,  1026,  1216,  5123,  1304,
    2496,  1210,  1211,  3754,  1134,  1023,  3208,  3755, -1949,  2816,
    1019,  1075,  2466,  2807,  1203,  1679,  1202,  4291,  3620,   640,
    3622,  3623, -1693,  2722,  3626,  3627,  4916,  2796,  5032,  2236,
    3500,  1449,  1484,  4378,  3636,  3637,  1210,  1211,   989,  3641,
    3004,  2431,  3644,  3458,  1910,  3651,  1843,  3674,  3675,  4150,
    4182,  1023,  1844,  2447,  3321,  1888,  1889,  1210,  1211,  1893,
    2808,  3304,  1894,  1895,  1896,  1210,  1211,  1900,  1901,  1903,
    1905,  1906,  1907,  1908,  1909,  4556,  1213,   990,  1216,  1214,
    1040,  2491,   864,   810,  2842,  1213,  1875,  1213,  1214,  4451,
    1214,   911,  1210,  1211,  1216,   944,  3725,  1448,  3127,  3987,
    3988,   891,  1216,  3129,  1530,  1530,  1210,  1211,  2483,  1891,
    1213,  1041,   988,  1214,  3935,  1216,  1974,  1019,  1210,  1211,
    1210,  1211,  1210,  1211,  2871,  4083,  1361,  1004,  1213,  3139,
    3440,  1214,  1210,  1211,  1923,  1924,   627,  1926,  3908,  1928,
     627,  1004,  1253,  1207,   627,  1938,  1004,   958,  2810,  1943,
    2843,  1210,  1211,  1969,  4231,  4556,  1210,  1211,   866,   863,
    4271,  2629,  2741,  1019,  1213,  1972,  4834,  1214,  1004,  1925,
    1394,  2034,  3305,  1929,  4921,  2748,  1004,  1937,  1107,  1004,
    1361,  4282,  3932,  1987,  1989,  3762,  3939,  2882,  2051,  3763,
    3121,   863,  1210,  1211,  1213,  4293,  3687,  1214,   958,   958,
    4297,  3426,   952,  3361,  1305,  2488,  4237,  1066,   958,   958,
    1976,   958,  2013,  2489,  1366,  1210,  1211,  4151,   912,  2858,
    1571,  2587,  3957,  1004,  1004,  1020,  2492,  3300,  4692,   864,
    4694,  3704,  2047,  2872,   938,   687,  1311,  2936,  3979,  2675,
    1004,  3309,   863,  1653,  1653,  1690,  1216,  4916,  1175,  4090,
    4091,  1178,  2844,  1210,  1211,  2066,  4902,   943,  1998,  1066,
    1911,  2151,  1932,  2074,  2976,  3873,  3307,  1933,  2010,  1066,
    2572,  2012,  1210,  1211,  4914,  5033,  1652,  1652,  1004,  3122,
     942,  2989,  1569,  3123,  3897,  3130,  1912,  4850,  3831,  3382,
    3573,   862,  3710,   941,  1365,  2183,  4120,  3349,   913,  3272,
    4152,   692,  1383,  1388, -1949,   866,  2565,  3915,  3916,  1210,
    1211,  2939,   880,  2204,  3949,  3032,  3033,  2281,  3907,  3903,
    3904,  2350,  1232,  3046,  3348,  3950,  3494,   972,  2165,  3870,
    1210,  1211,  1024,  3226,  2609,  2845,  4963,  1216,  4499,  4578,
    1755,  3362,  2176,  3399,  4862,  1962,  1216,  1004,  1216,  3409,
    3277,  3278,  3960,  3781,  3404,  3405,  4498,  3782,  3408,  1004,
    1340,  3363,  4268,  4269,  3917,  1004,  1210,  1211,  3931,  2465,
    1213,  1216,  3806,  1214,  3364,  2717,  3811,  2377,  1024,  1514,
    1306,  3114,  3741,  1569,  1004,  4379,  5022,  1210,  1211,  1216,
    4286,  4287,  1092,  -687,  4126,  4127,  4289,  1423,  4292,  3140,
    2281,  2310,  4040,   704,  3137,  1213,  1561,   886,  1214,  2759,
    2234,  2237,  2928,  2928,  2245,  1571,  3711,  1004,  3283,  4903,
    2238,  2279,   864,  2676,  3262,  1216,  1213,  4643,   959,  1214,
    1977,  1210,  1211,   687,  1213,  2751,  3728,  1214,  1571,  2656,
    1786,  1210,  1211,  1787,  3818,   963,  2311,  1990,  3819,  3743,
    4600,  3441,  2597,  1913,   864,  1216,  2140,  2504,  3365,  2509,
    1254,  1213, -1949,  2573,  1214,  2441,  3906,   195,  1362,  3569,
    3570,  1356,  2760,  3479,  4150,  1213,  3322,  4968,  1214,   899,
    1573,  2352,  2513,  2092,  1478,  2441,   720,  1213,  2442,  1213,
    1214,  1213,  1214,   966,  1214,  1210,  1211,  1481,   866,   692,
    2514,  1213,  1210,  1211,  1214,   864,  1537,  1369,  2442,   953,
    1210,  1211,  4687,  2281,  1692,  4333,  1571,  4758,  3252,  3144,
    1213,  4153,  1362,  1214,  2152,  1213,  1235,  4500,  1214,  2252,
     866,  1554,  3376,  3377,  3378,  4624,  2516,  2370,   958,  3316,
    2354,  1569,  5137,   944,  1210,  1211,  4893,  3951,  4371,  3569,
    3570,  2065,  2253,   958,  3970,  1341,  2846,  1691,  2255,  4897,
    4898,  1213,  4186,  1163,  1214,  5153,  2517,  4482,  1538,  4867,
    1735,  4095,  4871,  3480,  4518,  3846,  1978,  4782,  3481,  5138,
    3366,   866,  4380,   954,  1213,  4382,   958,  1214,  1253,  2449,
     627,   627,  1423,  1693,  1210,  1211,  3999,   984,  2372,   627,
    4904,   704,  1487,  1367,  3712,   914,   915,  4228,   916,   917,
     918,  1210,  1211,  2419,   634,  1423,  3323,  4823,  1914,  3671,
    2141,  1879,  1213,  2450,  2451,  1214,  3621,   919,  4824,  3624,
    3625,  1216,  1930,  3628,  3629,  3630,  3631,  3632,  3633,  3634,
    3635,  1213,  4151,  3638,  1214,  3640,  2445,  3642,  2341,  4779,
     986,  3650,  3367,  4964,  -543,  5089,  5090,  4121,  4122,  4123,
    3401,  1210,  1211,  1210,  1211,  2761,  1216,  1975,  3117,  1210,
    1211,  1210,  1211,  2812,  1571,  1573,  1134,  2497,  1213,  4075,
    2574,  1214,  2579,  4759,   720,  1370,  4288,  1216,  1167,  3239,
    3052,  2978,  1488,  1423,  4519,  1216,  2575,  1804,  1573,  1213,
    4590,  4632,  1214,  2988,  1539,   943,  3889,   747,   721,  2602,
    4005,  2990,  4894,  3391,  2303,  4573,  4574,  1210,  1211,  3713,
    2067,  2580,  1216,  1210,  1211,  4156,   995,   636,   715,  3145,
     637,   996,  3952,  3028,  2584,  1213,  1216,  2588,  1214,  3890,
    4019,  4020,  2521,  3666,  1004,  1164,  4116,  4532,  1216,  4533,
    1216,  4185,  1216,  4633,  4965,   635,  1213,  2315,  3995,  1214,
    5026,  3057,  1216,  2576,  1210,  1211,   988,  2928,  1555,  2106,
    3996,  3994,  3676,  2470,  1210,  1211,  1573,  3677,  1203,  4783,
    1202,  1216,  1210,  1211,  3997,  4966,  1216,  2586,  2818,  5139,
     988,  2991,  1221,  2068,  1556,  2602,  1399,  4008,  2539,  -836,
    1213,   958,  2479,  1214,  4018,  4443,  4274,  1714,  1236,  1237,
    1213,  3053,  4023,  1214,  1880,  4444,  5082,  5082,   958,  4053,
    1013,  2053,  1216,  2053,  4421,  4422,  3324,   636,  2670,  2671,
     637,  1210,  1211,  2556,  2813,  2628,   958,  1134,  1004,  2108,
    1725,  2342,  2928,  2928,  4565,  1216,  4825,  2560,  4308,  4309,
    2191,  1423,  3114,  2638,  4310,  2627,   998,  2643,  4508,  3760,
    3466,  2595,  1713,  3761,  1213,   958,  4566,  1214,   958,  3267,
    1168,  1213,  4730,  3774,  1214,  2228,  1004,  2304,  1066,  1213,
    1004,  1004,  1214,  1216,  4366,  4432,  1010,  2629,  3275,  4784,
    3276,  2109,  3785,  2656,  2992,  2053,  1066,  3786,  4367,   984,
    1210,  1211,  1216,  3667,  1788,   747,  1254,  1789,  2248,  1566,
    2638,  1015,  2694,  1213,   958,  3967,  1214,  3837,   873,   988,
    2316,  4191,  1004,  4192,  2757,  2657,  4462,  1253,  2662,  1247,
    1248,  1249,  1250,  4240,  1573,  2656,  2656,  2768,  1004,  1216,
     191,  2656,  4731,  1232,   739,  3891,  4153,   863,  4743,  2819,
     863,  3692,  2480,  4634,  3147,  3871,  2602,   942,  2467,  4445,
    1216,   687, -1870,  1213,  1035,   942,  1214,  1567,  4969,  4506,
     941,   627,   627,   627,   958,   627,  1004,   958,   941,  4670,
    1213,  -836,  3689,  1214,  3938,  2765, -1870,   627,  4138,  1004,
    2487,    42,   627,  4662,  4738,  1435,  1216,  3832,  4363,  2864,
    1665,  3817,  4671,  3912,  2752,  2753,  2754,  1735,  2756,  2069,
     874,  3604,  1569,  4464,  1210,  1211,  1048,  1216,  1714,  4216,
    2766,  3281,  2878,  4527,  4877,  2770,  4363,   692,  1666,   192,
    1213,  1881,  1213,  1214,  2755,  1214,  3968,  2758,  1213,  4927,
    1213,  1214,  2795,  1214,  4534,   988,  2500,  1882,  4406,  4970,
    4847,  1715,  3863,  4349,  4748,  1843,  4431,  2220,  1843,  2221,
    1716,  1216,  1210,  1211,    49,  4525,  2867,  2501,  1735,  1004,
    4528,  1216,  1210,  1211,  1210,  1211,  4350,   863,  3683,  3684,
    3685,  3686,  1436,   875,  4732,  4928,  1213,  2284,  4841,  1214,
    3815,  4368,  1213,  2245,  2352,  1214,  4848,  2274,  2468,  3705,
    4749,  3320,  2377,  1004,  1038,  3165, -1870,  3460,  1043,  4491,
    1531,  1531,  2285,  1210,  1211,  4351,  2880,    42,    54,  2603,
    1569,   958,  1210,  1211,  2505,  1216,   988,  3166,  3883,   704,
   -1870,  3961,  1216,  1213,  1808,    55,  1214,  3894,  2975,  3117,
    1216,  2603,  1049,  1213,  2934,  1571,  1214,  1235,  3855,  2938,
    3855,  1213,  1210,  1211,  1214,  2951,  2953,  2956,  2957,  2958,
    2959,  2960,  1210,  1211,  2070,  2964,  1667,  2969,  2512,  1232,
    3577,  1210,  1211,  1658,  1216,  3822,  2879,  2969,  2515,  2979,
    2980,    42,  2969,  2071,  2984,  2985,  1843,  1004,  2987,  2969,
      49,  5056,  1210,  1211,  2997,  1830,  2656,  3000,  3839,  1844,
    1213,  5023,  5013,  1214,  3010,  2592,  1570,  3011,   958,  3823,
     864,  2593,   720,   864,  3666,  1210,  1211,  3026,  2178,  2969,
     944,  2179,  1051,  1004,  1216,  2592,  4829,  1717,   944,  2941,
    4750,  2799,  2518,  4712,  1052,  2569,   721,   958,  4715,  2530,
    2961,  1216,  1210,  1211,    54,  1254,  2970,  2969,  3062,  1486,
    1210,  1211,   986,  1571,    49,  -543,  2235,  2271,  2286,   176,
    1706,    55,  1487,  2577,  1210,  1211,  2239,  4340,  3012,  1213,
    3605,  1716,  1214,  1060,  1210,  1211,  3001,  4875,  4876,  1063,
    3009,  2548,  2142,  2143,  4841,  3606,   866,  3013,  3014,   866,
    2491,  1216,  1062,  1216,  1210,  1211,  3249,  3054,  4470,  1216,
     958,  1216,  1210,  1211,   958,  3004,  1239,  1240,    54,  2144,
    5202,  1843,  1004,   636,  1210,  1211,   637,  1493,  1494,  3215,
    3160,   627,  1423,  3250,  1064,  1210,  1211,  1210,  1211,  2630,
    3194,  2555,  3432,  3157,  1210,  1211,  3998,  3194,  1210,  1211,
     864,  1004,  2469,  4131,  1070,  1004,  2377,  1216,  2558,  3574,
    4830,  3127,  1488,  1216,  3161,  2281,  3129,  4009,  3556,  3433,
    3107,  4095,   892,  1068,  3111,  4341,  1013,  2666,  1210,  1211,
    4132,  2180,  4760,  1235,  3667,  1210,  1211,  4113,    63,  3015,
    4086,  3016,   943,  1213,  1658,  1232,  1214,  1072,  1295,  3589,
     943,  1298,  4119,  3279,  1216,  4087,  1301,  3592,  2800,   902,
    3721,  1303,  3596,  1073,  1216,  1573,  3753,   902,  3756,  4342,
    2886,  2096,  1216,  2720,  1210,  1211,   866,  1074,  1014,  1210,
    1211,  3155,   973,  2493,  3017,  3293,  3258,  2377,  4629,  2733,
    1423,  1213,  1145,   747,  1214,  1210,  1211,   321,  1717,   323,
    3503,  1213,   986,  1213,  1214,  2928,  1214,  3018,  1210,  1211,
    3567,  3568,  1162,  4015,  3764,  4383,  4016,  1015,  4385,  4386,
    3770,  1216,  1495,  1496,  1079,  1176,  1177,  3285,  3286,   974,
    2097,  1399,   925,  1203,  4238,  1202,  2887,  1004,  1082,  1399,
     925,  2351,  1213,  2494,  1004,  1214,  3019,  1802,  4148,  2351,
    4275,  1213,  1236,  1237,  1214,  2506,  2928,  2928,  1083,  2377,
    1969,  3771,  2896,  2098,  1084,  1969,  3241,  2888,  2886,  3308,
    1004,  3772,  4648,  1573,  4649,  1232,  2305,  1982,  3195,  4158,
    4159,  1213,  2827,  2828,  1214,  3195,  2274,  2829,  2830,   174,
    1216,  1213,  1239,  1240,  1214,  1089,  4733,  1255,  2507,   958,
    1213,  2306,  2377,  1214,   975,  4174,   958,   958,  1245,  1246,
    1247,  1248,  1249,  1250,  1461,  1462,  1209,  1465,  1260,  1466,
    2821,  2508,  1843,  1134,  1090,  2377,  1004,  2510,  3773,  3157,
    1091,  2377,   958,  3352,  2887,  1093,   988,   988,  2889,  4167,
    1265,  2551,    42,   938,  1213,  2377,  1203,  1214,  1202,  1235,
    3820,  2634,  1094,  4637,  1514,  2635, -1693,  1516,  1095,  1998,
     863,   863,   863,  1399,   925,  2922,  2010,  3331,  1232,  2910,
    1268,  1213,  2793,   321,  1214,   323,  2794,  1098,  4163,  1213,
    4515,  4516,  1214,  3569,  3570,  3397,  3416,  3243,  3418,   942,
    4114,  4115,  1099,  1213,  3480,  4196,  1214,  3775,  1100,  3481,
    1101,  4778,   941,  1213,  1216,  2307,  1214,  3200,  1271,  3269,
    3489,  2377, -1693,  2377,  3490,    49,   958,   958,  4856,  1275,
    3776,  2890,  1566,  1213,  2377,  2849,  1214,  1102,  3411,  2849,
    1566,  1213,  3005,  3285,  1214,  1103,  2923,  1104,  2986,  4426,
    4427,  4428,  4429,  1213,  4312,  1105,  1214,  1665, -1693,  4316,
   -1693,  3989,  1216,  4319,  1213,  3990,  1213,  1214,  1279,  1214,
    1280,  4137,  1216,  1213,  1216,  3990,  1214,  1213, -1693,    54,
    1214,  3043,  3044, -1693,  3031,  1666,  3406,  3407,  1108,  1235,
    1567,  3114,  2911,  2099,  1290,  4195,    55, -1693,  1567,  2377,
    1110,  2850,  4218,  1111, -1693,  2850,  2792,  1213,  1232,  3020,
    1214,  1004, -1693,  1216,  1213,  1282,  4232,  1214,  1239,  1240,
    4233,  3778,  1216,  1112, -1693,   958,  2245,  3464,  1115,  2924,
     988,  4276,  2851,  3361,  4278,  4277,  2851, -1693,  4277,  4110,
    4111,  1289, -1693,  1244,  1245,  1246,  1247,  1248,  1249,  1250,
    3676, -1693,  1216,  1213,  1633,  3677,  1214,  1634,  1213,  5169,
    5170,  1214,  1216,  4272, -1949,  1312,  4314,  1116,  4273,  3784,
    4315,  1216, -1949,  1118,  1213,   976,  1119,  1214,  1307,  3787,
    1004,  3789,  1235,  1120,  2938,  1121,  2938,  1213,    42,  4486,
    1214,  3115,  2951,  3022,  3023,  4321,  3512,   977,  3116,  4322,
    4229,  1122,  1365,  2852,  1123,  2969,  1365,  2852,  3575,  1982,
    3039,  3042,  4408,   986,  4505,  1216,  4409,  4434,  4410,  1004,
    3791, -1693,  4411,  2308,  4412,  3583,  4415,  4418,  4413,  3793,
    4416,  4419,  1124,   864,   864,   864,  4335,  4420,   978,  2100,
    2309,  4322,  1216,  1569, -1693,  2969,  1125,  4335,  1239,  1240,
    1216,  1569,  2891,  2969, -1693,  1833,  1834,  2969,  2969,  3794,
    2101,    49,   944,  4425,  1216,  2912,  4454,  4322,  4465,  3795,
    4457,  3362,  2377,   958,  1216,  2913,  1004,  1004,  4179,  2897,
    4483,  1128,  2914,  4529,  2377,  2102,  2853,  4315, -1693,  1766,
    2853,  3363,  4546,  4550,  1216,  2898,  4322,  4322,  1293,   979,
    1129,  2103,  1216,  1135,  3364,  5164,  5166,  2370,  1681,   866,
     866,   866,  1235,  1136,  1216,  3335,  3336,  1025,  3863,  1843,
    1026,  1294,  4180,  1137,  1843,  1216,  4553,  1216,  1138,  1570,
    4322,  1139,    55,  1066,  1216,  1004,  4915,  1570,  1216,  2782,
    2783,  3724,  4567, -1693, -1693,  3295,  4568,  4569,  4613,  4181,
    2925,  4568,  4322,  1140,  1004,  3446,  2886,  4317,  1243,  1244,
    1245,  1246,  1247,  1248,  1249,  1250,  4684, -1693,  1216,  1141,
    4685,  4460,  1142,  1143,  1146,  1216,  1571,  1004,  3117,  4702,
    4731,  4463, -1693,  4315,  1571,  1313,  2915,   958,  3365,   863,
     958,  1147,  3512,  4714,  4780,  1770,  1148,  3490,  4781,   687,
   -1693,  4469,  3157,  4941,  1544, -1693,   993,  4942,  1202,  4471,
    1149,  3157,  3157,  1150,  1216, -1693,  4946,  3157,  1151,  1216,
    3617,  4472,  2887,  4949,   943,  1682, -1693,  4277,   667,  1683,
    1152,  1319,  4473,  4951, -1693,  1216,  2629,  4952,  1153,  1154,
    2897,  4474,  1232,  1684,  1323,  4554, -1693,  3697,  1216,   986,
    3699,    25,  1155,  2888,  4960,  1156,  2898,  1467,  4961, -1693,
    2219,  2220,  1157,  2221, -1693,   692,  1231,  2899,  1326, -1693,
    5027,  1239,  1240, -1693,  5028,  4699,  5179,  1158,  1159,  1160,
   -1693, -1693,  4701,  2916,  1161,  1336,  1165,  1166,  1243,  1244,
    1245,  1246,  1247,  1248,  1249,  1250,  5179,  1169,  3258,  1170,
    1174, -1693,  -685, -1693,  1771,  3361,  4354,  2854,  1774,  1178,
    3366,  2854,  2274,   687,  3814,  1775,  1565,  1179,  1180,  1181,
    1344,  3853,  4836,  2849,  2889,  5179,  4727,  2275,  1182,  4537,
    4538,  1183,  4540,  5157,  1349,  1566,  4585,  5158,  1184,  1185,
    1186,  1346,  4886, -1693,  1187,  2900,  1188,  1566,  1189,  4544,
    4545,  2638,  1190,  1423,  1356,  3836,  1004,  1191,  1192,  1193,
    1982,  1423,   958,  1194, -1693,  1195, -1693,   704,  1236,  1237,
     691,  2901,  1196,  1004,  1232,  3157, -1693,  2969,  1844,   692,
    1685,  3864,  3367,  1245,  1246,  1247,  1248,  1249,  1250,  2850,
    1197,  1381,  2638,  1567,  1004,   993,  1776,  1202,  3114,  1259,
    1291,  1389,  1365,   958,   958,  1567,  1395,  2890,   988,   988,
     697,  2120,   958,   958,   958,  1310,  3926,   988,   988,   988,
    2851, -1693,  3845, -1693,  4950, -1693,    42,  1450,  2899,  1451,
   -1693,  -685,  1454,  2902,  3334,  1453,  1573,  2276,  4672, -1693,
    1463,  2121,  1004,  3362,  1573,  1468,  1235,   174,  1469,  1470,
     720,  1471,   864,  1568,  1472,  1473,  1474,  1475,  1479,  3919,
    1778,  3919,  1482,  3363,  1485, -1693,    36,  1502,  1515,  1519,
    1023,  3491,  4673,  1665,   721,   896,  3364,  1543,  1686,  1564,
    -835,   704,  1233,  1655,  1658,  1699,  4027,  1700,  1702, -1693,
    1703,  2852,  2122,  1253,  1735, -1693,  2123,  1742,  3115,    49,
    1753,  1666,   958,    42,  3959,  3116,  2900,   988,  1234,  1844,
    1365,  1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250, -1949,
    1756,  2849,  3920,  -685,  3024,  1791,  1801,  1824,   866,  1283,
    4028,  1232,  2901, -1693,  4029,  2903,  4030, -1693,  1803,  1802,
    1841,  2938,  1853,   175,  1854,  4641,  1569,   715,  2275,  3986,
    1861, -1693,  1862,  3335,  3336,  1863, -1693,  1871,  1569,   718,
    3365,  1890,   176,   719,   720,  1493,  1494,  2720,  1365,  4663,
      55,  4664,  4665,  1898,  2853,  3361,    49, -1693,  1235,  1897,
    1927,  1931,  1945,  4249,  4031, -1693,  1971,  2850,  1992,  1993,
    1994, -1693,  1995,  1997,  2902,  2005,  4674, -1693,  4693,  1236,
    1237,  1779,  2006, -1693,  4997,  1239,  1240,  2007,  2016,  2032,
   -1693,  2037,  1284,  2048,   667, -1693,  2052,  1285,  2851,  1781,
    2055,  4061,  4027, -1693, -1693, -1693,  2053,  2058,  2891,  2060,
      54,  2062,  1570,  1843,  1844,   177,  2064,  4069,  4070,  2277,
    1232,  2065,  2090,  2095,  1570,  3679,  1358,    55,  2115,  2116,
    2117,  2124,  2132,  2135,  2138,  4682,  -685,  2969,  2969,  -685,
    1286,  3062,  -835,  2139,  2150,  2155,  4373,  2153,  3691,  2154,
    4029,   747,  4030,  2166,  4737,  1238,  1287,  2167,   178,  1571,
    2168,  2170,  3366,  4675,  2275,  3117, -1693,  3337,  2172,  2852,
    4689,  1571,  4354,  2184, -1693,  2186,  2903,  4099,  2188,   687,
    4103,  4676,  1288,  2189,  1530,  2190,  2192,  1232,  2193,  3986,
    1495,  1496,  2206,  3362,  2208,  2209,  2210, -1693,  2211,  2212,
    4031,   179,  -856,   901,  3986,  4677,  4124, -1693,  2213,  2214,
    2125,  2215,  2644,  3363,  2217,  1235,  2225,  1239,  1240,  2229,
    5069,  2249, -1693, -1693,   958, -1693,  3364, -1693,  2230,  1232,
    1241,  1599, -1693,  4144,  3367,  2257,   691,  2278,  2645,  2258,
    1572,  1256,  2259,   739,    63,   692,  2261,  4355,  4840,  2262,
    4356,  2270,  2853,  2646,  4837,  2273,  2288,  2274,  2293,  2294,
     745,  4929,  2299,  2300,  2302,   747,  2647,  4682,   748,  1497,
    1498,  1499,  2312,  2314,  2126,  2854,   697,  2317,  2324,  5118,
    2347,  5120,  2325,  2328,  4136,  2335,  4765,  2336,  2345,  4768,
    4769,  4770,  4771,  2359,  2348,  2511, -1693,  5146,  2356,  2357,
    4250,  2358,  2373,  1232,  2362,  1236,  4032,  2374,  2363,  2376,
    3365,  4033,  2886,  2420,  2422,  3944,  4937,  4034,  2648,  2649,
   -1693,  2377,  -685,  2423,  1235,  1243,  1244,  1245,  1246,  1247,
    1248,  1249,  1250,  4251,  2424,   180,  1423,  2426,  -856,  2427,
    2886,  2428,  5011,  4296,  2429,  2430,  2650,   704,  1423,  5188,
    5189,  2433,  2435,  2436,  1969,  2440,  2446,  4035,  2456,  2485,
    -685,  2458,  2459,  2460,  2474,  1844,  4199,  2476, -1693,  2481,
    2274,  4863,  2482,  1232,  1239,  1240,  4200,  2886,  2887,  2491,
    4873,  4874,  2484,  2495,   809,  2275,  4201,  2528,  1423,  4882,
     859,  1235,  1134,  1004,  2499,  2503,  2127,  3157,   958,  2552,
    4202,  4203,  4204,   988,  2519,  4678,  2887,  2520,   859,  2888,
    2525,  3765,   939,   715,   181,  2651,  4205,  4357,  4358,  1573,
    2540,  2541, -1693,  2529,  2542,  4359,   809,   983,  2550,   719,
     720,  1573,  3366,  1235, -1693,  1242,  4036,  2888,  2128,   174,
    2607,  1236,  4032,  2887,  4840,  2549, -1331,  4033,  2566,  2567,
    2568,  1250,  3919,  4034, -1693,  2581, -1693,  1243,  1244,  1245,
    1246,  1247,  1248,  1249,  1250,  2585,  2591,  2590,  2594,  2652,
    2633,  2613,  2610,  2854,  2922,  2603,  5134,  2632,  2614,   182,
    2889,   183,  1843,  1239,  1240,  4330,  4037,  2615,  3734,  -685,
    3738,  2616,  2617,  4035,  2618,  2276,  3986,  2636,  4313,  2619,
    5161,  3986,  2631,  2092,  3367,  3986,  1843,  1235,  2889,  2663,
    2665,  1679,  2672,  2673,  3512,   184,  2680, -1693,  2683,  2685,
    2688,  2689,  2690,  5134,  2691,  1004,  2692,   185,  2040,  1843,
    2715,  1665,  2716,  1947,  1369,   642,  2410,  2411,  2412,  2413,
    2414,  2415,  2416,  4038,  1370,  2923,  4682,  5161,   958,  2723,
    1239,  1240,  1004,  1843,   176,  1947,  2735,  2746,  2736,  1666,
    2773,  2305,  2737,  2890,  2738,  2739,  2740,  5085,  2744,  2750,
    4252,  2274,  4036,  2772, -1693,  2774, -1693,  1235, -1693,  4918,
    2775,  2777,  4604, -1693,  2788,  2790,  2306,  4609,   958,  4391,
    2791,  2890,  1239,  1240,  2797,  2792,  2798,  2805,  2809,  2822,
    3180,  2811,  2817,  2823,  2824,  2861,  2862,  2865,  4346,   627,
    2870,  2875,  2907,  2883,  1243,  1244,  1245,  1246,  1247,  1248,
    1249,  1250,  4037,   186,  2908,  3922,   643,  3181,  2924,   739,
    2906,  3144,  3034,  4355,  4099,  2981,  4356,  1587,  1588,  2983,
    3047,  3049,  4401,  3144,  4206,  4039,   745,  3029,  4390,  1587,
    1588,   747,  3063,  3055,   748,  3056,  1948,  3109,  3110,  3986,
    1949,  4207,  -886,  3065,  3066,  3067,  1239,  1240,  3068,  -687,
    3069,   958,  3070,  1590,  3071,  3157,  3072,  3182,  1948,  4038,
    3183,  3073,  1949,  5200,  3074,  1590,  3075,  1593,  3184,  3076,
    2307,  3077,  3078,  1594,  1595,  3079,  3080,  1596,  3081,  1593,
    1950,  3082,  3083,  3084,  3085,  1594,  1595,  3185,  4604,  1596,
    3086,  3087,  4609,   644,  -685,  3088,  3089,  3090,  3091,  3092,
    1951,  1598,  1950,  1243,  1244,  1245,  1246,  1247,  1248,  1249,
    1250,  4450,  1665,  1598,  4281,  1599,  1239,  1240,  1004,  1600,
    3093,  3096,  1951,  3097,  4493,  3098,  3099,  1599,  3100,  3101,
    3102,  1600,  1844,  1256,  3186,  3113,  3134,  3864,  4502,  1490,
    1666,  3143,  3162,  1004,  4604,  3170,  -543,  3179,  1605,  4609,
    3157,  3296,  3202,  3203,  2799,  3204,  3216,  3312,  -543,  3218,
    1605,  4039,  4208,  5183,  2891,  1952,  1113,  1163,  3233,  3258,
    1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1167,  4209,
    4918,  4526,  3264,  4357,  4358,  -687,  3313,  1952,  3266,   813,
    3270,  4387,  2891,  3329,  3310,  2278, -2156,   645,  3992,  3993,
    3311,  3315,  3318,  4000,  3347,  3187,  3333,  3350,  3351,  3359,
    3360,  3373,  1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,
    3379,  3145,  3986,  4861,  3382,  1609,  3986,  1256,  3387,  2925,
    3394,  3396,  1610,  3145,  1004,  3398,  3400,  1609,  3412,  4022,
    3414,  4210,  3415,  3413,  1610,  4049,  4051,  4052,   814,  3420,
    3734,  3417,  1611,  3422,  3423,    42,  3428,  3429,  4211,  3430,
    3451,  1953,  3452,  3841,  1611,  3146,  3455,  2882,  3468,  3469,
    3470,  3471,  3472,  3473,  3496,  3474,  1256,  1004,  3497,  3498,
    -685,   815,  3505,  1953,  3506,  3507,  1243,  1244,  1245,  1246,
    1247,  1248,  1249,  1250,  3500,  2309,  3577,  1954,  3582,  3188,
    5197,  3585,  3189,  3590,  3586,  3593,   646,  3594,  3610,  3615,
    3613,  3614,  1613,  3601,  3616,  4099,   816,  4103,  4596,  1954,
    3617,  1955,  3619,  3157,  1613,  3682,   647,  3653,    49,  5197,
    1614,  3707,  3739,  3656,  3735,  3659,  3662,  3665,  3740,  3742,
    3680,  4640,  1614,  1955,  4144,  3715,  1956,  5008,  1222,  1223,
    3725,  3729,  3744,  4621,  3731,  3757,  1243,  1244,  1245,  1246,
    1247,  1248,  1249,  1250,  3758,  3804,  3746,   817,  1956,  3805,
    3796,   648,  3747, -1803,  3748,  1612,   649,  3799,  3800,  3821,
    3190,  3807,  3335,  3336,  1584,  1618,  1423,  3829,  3830,  1224,
    1957,   984,  3834,  1004,  1619,  3847,  1365,  1618,  3838,    55,
     958,  3851,  1225,   984,  3852,  3865,  1619,   650,  3868,  3869,
    5046,   651,  1957,  3874,  3885,   809,  2969,  3875,  2969,   652,
     809,  1958,  3876,  2720,  3886,  5046,  3877,  3878,  3879,  3887,
    3899,  3900,  3905,  3913,  3923,  3927,  3924,  3928,  5055,  3929,
    3943,   636,  1226,  1958,   637,  3946,  3147,  3948,  3955,  3961,
     809,  3965,  3966,  3969,  3191,  1227,  3972,  3974,  3147,  3977,
    4645,   653,  3980,  4024,  3981,  4064,   809,  4006,  4017,  4054,
    4058,  4059,  4073,  1624,  4074,  4696,  4085,  4118,  4130,  4140,
    4135,  4147,  1228,    42,  4155,  1624,  4157,  4145,  4164,  4188,
    4171,  4193,  4198,  4215,  4220,    42,  -108,  5046,  4170,  4183,
    4184,   818,  4099,  4099,  4222,  4187,  4225,  5107,  4214,  4226,
    4755,  4234,  5109,  4228,  4227,   654,  3337,  4239,  4244,  4236,
    4247,  4243,   809,   809,  3192,   809,   809,  4248, -1587, -1586,
    1625,  1626,  1627,  4265,  4270,  2178,  4285,  1628,   809,  4290,
    4299,  2018,  1625,  1626,  1627,  4300,  5046,  1229,  5046,  1628,
    4301,  2019,  3193,  4302,  1629,  4327,    49,  1630,  3463,  3258,
    4318,  2020,  4331,  -688,  4364,  4365,  1629,  4337,    49,  1630,
    1531,  4370,  2943,  4375,  5046,  2021,  2022,  2023,  4377,  4048,
     819,  4384,  4392,  4393,  4396,  4399,  4395,  4402,  4403,  3986,
    4405,  2024,  4414,  1632,  4424,  1762,  1763,  1764,  1765,  1766,
     820,  4435,  4437,  4438,  4440,  1632,  4439,  4461,  4466,  4452,
      54,  4468,  2867,  4467,  4453,  4477,  5046,  5046,  4454,  4455,
    4456,  5204,    54,  4458,  4478,  4459,  4476,    55,  4484,  4485,
     809,  4487,  4488,  4489,  4495,  4496,  4503,  4509,  4510,    55,
    4539,  4512,  4535,  4514,  4536,   821,  1844,  4541,  4855,  4542,
     649,  4547,  1019,  4530,  4277,  3062,  3062,  4564,   718,  4579,
    3919,  4577,  4580,  3608,  4586,  4592,  4588,  4571,   822,   809,
    4610,  4611,  4622,  4457,  4619,  4878,  4598,  4623,  4626,  4627,
    4599,   823,  4631,   859,  4628,  4883,  4639,  4620,  4644,  1173,
    4650,  4654,  4666,   824,  2593,  4892,   939,  4656,  4706,  4691,
    4899,  4655,  1767,  1768,  1769,  1770,  4697,  4700,  4708,   825,
    4711,  4717,  4721,  4725,   119,  1635,  4519,  4726,  4742,   114,
    4740,   112,  4956,  4757,  4764,  1365,  4744,  1635,  4728,  4745,
    4746,  4099,  4747,  4751,  4752,   826,  3254,  4756,  4761,  4766,
    4767,  4772,  4775,  4785,  3148,  4827,  4826,  -543,  4849,  4835,
    4844,  4845,  4842,  4788,  4847,  4848,   986,  4857,  4858,  -543,
    4864,  4865,  4888,  -433,   863,  4906,  4908,  4909,  2720,  4910,
    4911,  4879,  4926,  4940,  4945,  4938,  4947,  4974,  4977,  -451,
    5002,  5003,  5004,  1004,  5007,  5005,  1004,  5013,  5015,   827,
    5014,  5017,  4659,  5031,   785,  5034,  5035,  5042,  5021,  4978,
    5043,  5047,  5057,  5060,  5063,  5064,  5065,  5070,  5072,   809,
    5074,  5075, -2564,  5078,  1771,  5088,  1772,  1773,  1774,  2025,
    5086,  5095,  5098,  5100,  5108,  1775,  1004,  5110,  5115,  5111,
     859,  5116,  5117,  5121,  5126,  5135,  2026,  5145,   809,   809,
    5149,  5151,  5154,  5155,  5167,  5172,  4855,   809,   809,   809,
     809,   809,   809,  5168,  5173,  5175,  5182,  5186,  5184,  5185,
     809,   809,  5187,   809,   809,  5205,  3825,  4901,   809,   809,
    3664,  3655,   809,   809,   809,   809,  3658,   809,   809,  4595,
    3661,  4597,  4956,  4821,  3652,   809,   809,  4593,   809,   809,
     809,   809,   809,  4117,  4605,   809,   809,   809,   809,   809,
     809,   809,   809,   809,  3971,   809,  1776,  1726,   809,   809,
    4615,  2260,  4831,   809,  5054,  4913,  5053,   809,   809,   809,
    4617,  4723,  5206,  5177,   951,  4213,  3345,  1434,  4799,  5190,
     809,   809,   809,  4800,  3303,   809,  5092,  4802,   809,   809,
     809,   809,   809,   809,  5040,  4803,  5093,  4805,  4806,  5083,
    4807,  4808,  4809,  4810,  4813,  5052,  4814,   809,   809,  4822,
    4815,  5051,  4129,  2931,  2935,   809,  3824,   809,   809,  1777,
    1778,  4423,  4821,  4821,  2027,  5097,  4311,  3108,  4436,   809,
     809,   809,  5105,   809,   809,  3703,  3702,   809,   809,   809,
    4279,  4657,   809,   809,   809,   809,   809,   809,   809,   809,
    1574,  5024,  4549,   809,  3706,  4774,  5062,  5030,   809,  5029,
    3106,  4139,  3037,  3701,  4325,  1844,  4326,  4372,  4010,  4570,
    4057,  5147,  4055,   859,  4374,  5036,  5152,   864,  4851,  4776,
    4713,  3798,  4669,  4683,  4716,  1004,  2028,  4690,  3504,  1844,
    3571,  2444,  4563,  4338,  4133,  4820,  3449,  3693,  4822,  4822,
    4583,  3439,  3040,  2029,  3041,   859,  2787,  3038,  2247,  2789,
    1445,  4072,  1844,  3576,  3332,  3618,  2421,  2371,  3330,  3844,
    3319,  4224,   991,  2714,  2866,  1355,  3282,  1354,  5198,  3809,
    4821,  4821,  1873,  2589,  2559,  4753,  1844,  4735,  3199,  1800,
    5059,  5020,  5012,  4652,  5165,  3355,  5163,  4821,   114,  3356,
     112,  4859,  4517,   866,  4092,  3357,   859,  5198,  3358,  4860,
    1752,  1779,  4267,   809,  1452,  4524,  2163,  4754,  3902,  4630,
    4068,  4729,  2869,  4668,   828,  2596,  3291,  1991,  1780,  1781,
    4504,  3513,  3514,  4235,  4820,  4820,  3842,  3515,  1546,  3516,
    1547,  3517,  3518,  3843,   939,  3840,   809,  2162,   196,  4492,
    4497,  1548,  1549,  1542,  3402,  1428,  4822,  4822,  2763,  3519,
    4821,  3298,  2246,  2778,  3597,   860,  3403,  2687,  3850,  5018,
    4303,  5058,  4543,  4822,  4388,  4821,  5181,  5201,  4501,  1874,
    4430,  4653,  3462,   860,  3647,  2076,  2734,  5016,  4821,   947,
    2745,   948,  2730,  3392,  2075,  2731,   908,  3326,  3434,   809,
    3135,  1348,  3136,  4739,  4638,  1353,  1532,  2205,  1981,  3520,
     658,   659,  3521,  1729,  2039,  5025,  4134,  4821,   809,  1730,
    3522,  4433,  1731,  4394,     0,  4612,  4079,     0,     0,  4821,
    4821,     0,     0,     0,     0,     0,  4822,     0,     0,  3185,
       0,     0,  4820,  4820,     0,     0,     0,  4821,     0,     0,
       0,  4822,     0,     0,     0,     0,  3523,  4821,     0,  4820,
       0,     0,  4821,     0,  4822,     0,     0,     0,   809,     0,
       0,     0,     0,     0,  4959,     0,  4821,  4962,  4821,     0,
       0,     0,     0,     0,  3524,     0,  3525,     0,     0,     0,
       0,     0,     0,  4822,  4821,     0,  4821,     0,  4821,     0,
       0,     0,  3526,  3527,     0,  4822,  4822,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5009,     0,     0,
       0,     0,  4820,  4822,  4821,     0,     0,     0,     0,     0,
       0,     0,     0,  4822,     0,     0,     0,  4820,  4822,     0,
       0,     0,     0,     0,  3528,     0,  4821,  4821,     0,     0,
    4820,     0,  4822,     0,  4822,     0,     0,  3529,     0,     0,
       0,     0,     0,     0,     0,     0,  4821,  4821,     0,     0,
    4822,  4821,  4822,     0,  4822,     0,  3530,     0,     0,  4820,
       0,     0,     0,     0,     0,  3531,  3532,     0,  3533,     0,
       0,  4820,  4820,     0,     0,     0,     0,     0,     0,     0,
    4822,     0,     0,     0,     0,     0,     0,     0,     0,  4820,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4820,
       0,     0,  4822,  4822,  4820,  3534,  3535,  3536,     0,     0,
       0,     0,     0,     0,     0,     0,  1210,  1211,  4820,     0,
    4820,     0,  4822,  4822,  3537,  3538,  3539,  4822,     0,     0,
    1096,  3540,     0,     0,  3541,     0,  4820,     0,  4820,     0,
    4820,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3542,  3543,     0,     0,     0,     0,     0,     0,
    1127,     0,     0,     0,     0,     0,  4820,   809,     0,     0,
       0,   809,     0,     0,     0,     0,  1144,     0,     0,   809,
       0,   809,     0,     0,     0,     0,  3544,  3545,  4820,  4820,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5156,     0,  4820,  4820,
       0,     0,  3190,  4820,  1762,  1763,  1764,  1765,  1766,     0,
       0,   809,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1204,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   809,   809,   809,     0,     0,
       0,     0,     0,     0,  3546,     0,     0,     0,  3547,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3548,     0,     0,     0,     0,   809,     0,     0,     0,     0,
     809,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1587,  1588,     0,     0,     0,     0,     0,     0,   809,
       0,  1767,  1768,  1769,  1770,     0,   809,     0,     0,     0,
       0,   809,     0,   809,     0,     0,     0,     0,     0,   809,
    1318,   809,   809,     0,     0,  -837,  -837,  1590,     0,     0,
    3549,     0,     0,  3550,     0,  -837,  3551,  3552,  3553,  3554,
       0,  1593,     0,     0,     0,     0,     0,  1594,  1595,     0,
       0,  1596,     0,     0,     0,     0,     0,     0,     0,   785,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1598,     0,     0,     0,  3555,
    3556,     0,     0,     0,     0,     0,     0,     0,     0,  1599,
       0,     0,     0,  1600,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3557,     0,     0,
       0,     0,     0,  1771,     0,  1772,  1773,  1774,     0,     0,
       0,     0,  1605,     0,  1775,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1213,     0,     0,  1214,     0,
       0,   859,     0,     0,   859,     0,     0,     0,     0,     0,
       0,   939,   809,     0,     0,     0,   809,     0,     0,   939,
       0,     0,   809,     0,     0,     0,     0,     0,     0,  1609,
       0,   809,     0,     0,     0,  1776,  1610,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5122,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1611,     0,  1733,  1734,
       0,     0,     0,     0,     0,     0,     0,  1744,  1745,     0,
       0,  1748,  1749,     0,     0,     0,     0,     0,     0,     0,
    1757,  1758,     0,  1759,  1760,     0,     0,     0,  1784,     0,
       0,     0,  1793,  1794,  1795,  1796,     0,  1798,  1777,  1778,
       0,     0,     0,     0,     0,  1806,  1807,     0,  1810,  1811,
       0,     0,     0,     0,     0,  1815,  1613,     0,  1818,  1819,
    1820,  1821,  1822,  1823,     0,  1825,     0,     0,  1828,  1829,
       0,   859,     0,  1832,  1614,     0,     0,  1835,  1839,  1840,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1847,  1848,  1849,     0,     0,     0,     0,     0,  1855,  1856,
    1857,  1858,  1859,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1872,   785,     0,
       0,     0,     0,     0,     0,  1876,     0,  1877,  1878,  1618,
       0,     0,     0,     0,     0,     0,     0,     0,  1619,     0,
       0,     0,     0,     0,  2929,     0,     0,  2929,  2929,     0,
       0,     0,  1316,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2378,     0,     0,     0,     0,  1918,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1779,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1216,  1780,  1781,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   860,     0,
       0,     0,     0,     0,     0,     0,     0,  1624,     0,     0,
       0,     0,     0,     0,     0,     0,  2379,  2380,  2381,  2382,
    2383,  1493,  1494,  2384,  2385,  2386,  1316,  2387,  2388,  2389,
    2390,  2391,  2392,  2393,  2394,  2395,  2396,     0,  2397,  2398,
       0,     0,     0,     0,     0,     0,   809,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2050,  1625,  1626,  1627,     0,     0,     0,
       0,  1628,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1629,     0,
       0,  1630,     0,     0,     0,     0,  2088,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   809,     0,     0,     0,     0,  1632,     0,     0,
       0,   809,   809,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   860,     0,     0,     0,  2158,
       0,   809,   809,     0,   809,     0,     0,   809,   809,   809,
     809,   809,     0,     0,   809,     0,  1495,  1496,  2177,     0,
       0,     0,     0,   809,     0,     0,     0,     0,   809,     0,
     809,     0,   809,   809,     0,   809,   809,     0,     0,     0,
     809,   809,   809,     0,     0,     0,   809,   809,   809,     0,
     809,     0,   809,     0,   809,     0,   809,     0,   809,     0,
       0,     0,     0,   809,     0,     0,     0,     0,  2231,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   809,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   809,     0,   809,  1635,
     809,     0,     0,     0,   809,     0,     0,     0,     0,     0,
     809,   809,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     1,     0,     0,     2,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     3,     0,     0,     0,     4,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       5,     6,     0,     0,     0,     0,     0,     0,     7,     0,
       0,     0,     0,     8,     9,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   809,     0,   860,    10,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     860,     0,     0,     0,     0,     0,  1316,     0,     0,     0,
       0,    12,     0,     0,   859,   859,   859,     0,     0,     0,
    2004,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    15,    16,     0,     0,     0,     0,     0,
       0,     0,     0,   939,     0,     0,    17,     0,     0,     0,
       0,   860,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,  2399,  2400,     0,     0,     0,  2457,     0,     0,
       0,  2461,     0,     0,     0,     0,     0,     0,     0,     0,
      19,  2457,     0,  2401,     0,  2402,  2403,  2404,  2405,  2406,
       0,   809,  1587,  1588,     0,     0,     0,     0,    20,     0,
      21,   809,     0,   809,     0,    22,     0,     0,    23,     0,
       0,     0,  3035,     0,     0,     0,     0,  1584,     0,  1585,
       0,     0,     0,    24,     0,     0,     0,     0,  1590,     0,
       0,    25,  1587,  1588,    26,     0,     0,     0,     0,     0,
       0,     0,  1593,     0,     0,     0,     0,     0,  1594,  1595,
       0,     0,  1596,     0,    27,     0,     0,     0,     0,     0,
       0,     0,     0,  1589,     0,  2532,  2534,  2536,  1590,     0,
       0,    28,     0,     0,   809,    29,  1598,     0,     0,     0,
       0,     0,  1593,     0,     0,     0,     0,     0,  1594,  1595,
    1599,     0,  1596,     0,  1600,     0,     0,     0,     0,     0,
    2570,  1597,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1598,     0,     0,  2578,
       0,     0,     0,  1605,     0,     0,     0,     0,     0,     0,
    1599,  2582,     0,  2583,  1600,     0,     0,     0,     0,     0,
       0,     0,  1601,     0,     0,     0,     0,     0,     0,  3036,
       0,     0,     0,     0,     0,     0,     0,  1604,     0,     0,
       0,     0,     0,  1605,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1607,     0,     0,
    1609,     0,     0,     0,     0,    31,     0,  1610,     0,     0,
       0,     0,     0,     0,     0,     0,    32,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1611,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
    1609,    34,     0,    35,     0,     0,    36,  1610,     0,     0,
       0,     0,     0,     0,     0,     0,    37,    38,     0,     0,
       0,     0,     0,     0,     0,     0,    39,  1611,    40,     0,
       0,     0,     0,     0,     0,     0,     0,    41,     0,     0,
       0,     0,     0,    42,     0,     0,     0,  1613,     0,     0,
    1612,    43,     0,     0,     0,     0,    44,    45,    46,     0,
       0,     0,  2742,     0,     0,  1614,  2088,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2749,     0,     0,     0,     0,     0,  1613,     0,    47,
       0,     0,     0,   859,     0,     0,    48,     0,     0,     0,
       0,     0,     0,     0,     0,  1614,     0,     0,     0,  1615,
       0,     0,     0,     0,     0,     0,    49,     0,     0,     0,
    1618,     0,     0,     0,     0,     0,     0,   809,     0,  1619,
       0,     0,     0,     0,     0,   809,     0,     0,     0,     0,
      50,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    51,  1617,     0,     0,    52,     0,     0,     0,
    1618,     0,   809,   809,    53,     0,     0,     0,     0,  1619,
      54,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    55,   809,     0,
       0,     0,     0,     0,     0,    56,     0,     0,   809,     0,
     809,     0,   809,     0,     0,     0,     0,     0,  1624,     0,
       0,    57,    58,    59,    60,     0,  1621,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    61,     0,     0,     0,
       0,     0,     0,   809,     0,     0,     0,     0,   809,     0,
     809,     0,     0,     0,     0,     0,     0,     0,  1624,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    62,     0,  1625,  1626,  1627,     0,     0,
       0,     0,  1628,     0,   809,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1629,
       0,     0,  1630,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    63,  1625,  1626,  1627,     0,     0,
     809,     0,  1628,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1632,  1629,
       0,     0,  1630,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2658,  2659,     0,     0,
     809,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3064,     0,  1632,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   809,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1633,     0,     0,  1634,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   860,     0,     0,   860,
       0,     0,  1327,  1398,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3169,     0,     0,     0,     0,     0,  1399,   925,
    1635,  3177,  3178,     0,     0,   809,     0,     0,     0,  1400,
   -1957,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3205,  3206,     0,  3207,     0,     0,  3210,  3211,  3212,
    3213,  3214,     0,     0,  1401,     0,  1402,     0,     0,     0,
    1635,     0,     0,  3220,     0,     0,  1403,     0,  3221,     0,
    3222,     0,  3223,  3224,     0,  3225,     0,     0,     0,     0,
    3230,  3231,  3232,     0,     0,     0,  3235,  3236,  3237,     0,
    3238,     0,  3240,     0,  3242,     0,  3244,     0,  3245,     0,
       0,     0,     0,  3248,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1949,  1404,   860,     0,     0,     0,
    1405,     0,     0,  1406,     0,     0,     0,     0,     0,     0,
       0,     0,  2841,  1407,  2841,     0,  2856,  2857,     0,  2859,
       0,     0,     0,     0,  3280,     0,     0,     0,     0,     0,
    1918,     0,     0,     0,     0,  1408,     0,  1409,     0,     0,
       0,     0,     0,     0,     0,     0,  1410,     0,  1411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2919,     0,     0,     0,
    2930,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2929,  2929,     0,     0,     0,     0,  2971,
    2972,  2973,  2974,     0,     0,     0,  3327,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3008,     0,   809,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1413,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   809,     0,   809,     0,     0,   809,
     809,     0,   809,     0,     0,     0,     0,     1,     0,     0,
       2,     0,     0,   809,     0,     0,     0,     0,   809,     0,
       0,   809,     0,     0,   809,   809,     0,     0,     0,     4,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     5,     6,     0,   809,     0,  1414,     0,
       0,     7,     0,     0,     0,     0,     8,     9,   809,     0,
       0,  2158,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    10,     0,     0,  1415,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1416,  1417,     0, -1953,
    1418,  1419,    11,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   809,     0,     0,     0,     0,     0,
       0,  1420,     0,     0,    12,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,    14,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    15,    16,   809,   809,
       0,     0,     0,     0,  2231,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,  1421,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1422,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,    21,     0,     0,     0,     0,    22,     0,
   -2632,    23,     0,     0,  1423,     0,     0,     0,     0,     0,
       0,   809,     0,     0,     0,     0,    24,     0,     0,     0,
   -1957,     0,     0,  1424,    25,     0,     0,    26,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1953,     0,     0,     0,    27,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -2632,     0,     0,     0,     0,     0,     0,  1425,     0,
       0,     0,  3328,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   809,   809,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   860,
     860,   860,     0,  2929,  2929,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
    3393,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    32,
       0,     0,     0,     0,  2841,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3720,     0,     0,
       0,    33,     0,     0,    34,  3723,    35,     0,     0,    36,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    37,
      38,     0,     0,     0,     0,     0,     0,     0,   809,    39,
       0,    40,  3751,  3752,     0,     0,     0,     0,     0,     0,
      41,     0,     0,     0,     0,     0,    42,     0,   809,     0,
     809,     0,     0,     0,    43,  3450,     0,     0,  3777,    44,
      45,    46,     0,     0,     0,     0,     0,     0,  3788,     0,
    3790,     0,  3792,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3467,    47,     0,     0,     0,     0,     0,     0,    48,
       0,     0,  3475,     0,  3482,  3483,  3484,  3485,     0,  3487,
    3488,     0,     0,     0,     0,     0,     0,     0,     0,    49,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    50,  2158,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,     0,     0,   809,    52,
       0,     0,     0,     0,     0,     0,     0,    53,     0,     0,
    3581,     0,     0,    54,     0,     0,     0,     0,     0,     0,
    3872,     0,     0,  3587,     0,     0,   809,     0,     0,     0,
      55,     0,     0,     0,     0,     0,     0,     0,    56,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2088,     0,     0,     0,     0,     0,     0,     0,     0,    61,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     809,  2841,     0,   809,  2841,  2841,    62,     0,  2841,  2841,
    2841,  2841,  2841,  2841,  2841,  2841,   809,     0,  2841,     0,
    2841,     0,  2841,  3643,     0,     0,  2841,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    63,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   809,     0,
       0,     0,  1583,     0,     0,  3978,     0,  1584,   860,  1585,
       0,     0,  1586,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1587,  1588,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1589,     0,     0,  -837,  -837,  1590,  1591,
       0,     0,     0,     0,  1592,     0,  -837,     0,     0,     0,
       0,     0,  1593,     0,     0,     0,     0,     0,  1594,  1595,
       0,     0,  1596,     0,     0,     0,     0,     0,     0,     0,
       0,  1597,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1598,     0,     0,     0,
     809,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1599,     0,     0,     0,  1600,     0,     0,     0,     0,     0,
       0,     0,  1601,  1602,     0,   809,     0,     0,     0,  1603,
       0,     0,     0,     0,     0,     0,     0,  1604,     0,     0,
       0,     0,     0,  1605,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1606,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   809,
       0,     0,     0,     0,  4817,     0,     0,  1607,     0,     0,
    4828,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   809,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1608,     0,
    1609,     0,     0,  4149,     0,     0,     0,  1610,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1611,     0,     0,
       0,     0,     0,     0,  4160,     0,  2231,   809,     0,  4165,
    4166,     0,     0,  4817,  4817,     0,     0,     0,     0,     0,
    1612,     0,     0,  4173,     0,     0,     0,     0,  4175,     0,
       0,  4176,     0,     0,  4177,  4178,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3936,     0,     0,     0,
       0,     0,     0,     0,     0,   809,  4190,  1613,     0,     0,
       0,     0,     0,     0,     0,  3947,     0,     0,   859,     0,
       0,     0,     0,     0,     0,  1614,     0,     0,     0,  1615,
    3964,     0,     0,     0,     0,     0,     0,   809,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   809,     0,   809,
       0,     0,     0,     0,  2158,     0,     0,  1616,     0,   809,
       0,  4817,  4817,  1617,     0,     0,     0,     0,     0,     0,
    1618,     0,     0,     0,     0,     0,     0,     0,  4817,  1619,
       0,     0,     0,     0,     0,     0,     0,     0,  4261,  4264,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1620,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1621,  1622,  1623,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   809,
       0,  4817,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4817,   809,  1624,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4817,
       0,  4320,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   809,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   809,  4817,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4817,  4817,     0,  2841,     0,  1625,  1626,  1627,     0,     0,
       0,     0,  1628,     0,     0,     0,     0,     0,  4817,     0,
       0,     0,     0,     0,     0,   809,     0,  4125,  4817,  1629,
       0,     0,  1630,  4817,     0,     0,     0,     0,     0,     0,
     809,     0,     0,     0,     0,     0,     0,  4817,     0,  4817,
       0,     0,     0,     0,     0,  1631,     0,     0,     0,     0,
       0,  4397,  4398,     0,     0,  4817,     0,  4817,  1632,  4817,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4817,     0,     0,     0,     0,
       0,     0,  1633,     0,     0,  1634,     0,     0,     0,  1583,
       0,     0,     0,     0,  1584,     0,  1585,  4817,  4817,  1586,
       0,     0,     0,     0,   809,     0,     0,     0,     0,  1587,
    1588,     0,   809,     0,     0,     0,     0,  4817,  4817,     0,
       0,     0,  4817,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1589,     0,     0,     0,     0,  1590,  1591,     0,     0,     0,
       0,  1592,     0,     0,     0,     0,     0,     0,     0,  1593,
       0,     0,     0,     0,     0,  1594,  1595,     0,     0,  1596,
    1635,  1636,  1637,     0,     0,     0,     0,     0,  1597,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2158,     0,
       0,     0,     0,  1598,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1599,  4511,     0,
    4513,  1600,     0,     0,     0,     0,     0,  3513,  3514,  1601,
    1602,     0,     0,  3515,     0,  3516,  1603,  3517,  3518,     0,
       0,     0,     0,     0,  1604,     0,     0,     0,     0,     0,
    1605,     0,     0,     0,     0,  3519,     0,     0,     0,     0,
       0,  1606,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4298,     0,  1607,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3520,     0,     0,  3521,     0,
       0,     0,     0,     0,     0,     0,  3522,     0,     0,     0,
       0,     0,     0,     0,     0,  1608,     0,  1609,  4575,     0,
       0,     0,     0,     0,  1610,  3185,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3523,     0,  1611,     0,  4581,     0,     0,     0,
       0,     0,     0,     0,  4353,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1612,     0,     0,
    3524,     0,  3525,     0,     0,     0,     0,  4943,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3526,  3527,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1613,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2231,     0,  1614,  4625,     0,     0,  1615,     0,     0,     0,
    3528,     0,     0,     0,     0,     0,  4261,     0,     0,     0,
       0,     0,     0,  3529,  2841,  2841,  2841,  2841,     0,     0,
       0,     0,     0,     0,     0,  3936,     0,     0,     0,     0,
       0,     0,  3530,     0,  1616,     0,     0,     0,     0,  4442,
    1617,  3531,  3532,     0,  3533,     0,     0,  1618,  4261,  3513,
    3514,     0,     0,     0,     0,  3515,  1619,  3516,     0,  3517,
    3518,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3519,     0,     0,
       0,  3534,  3535,  3536,     0,     0,     0,     0,  1620,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3537,  3538,  3539,  1621,  1622,  1623,     0,  3540,     0,     0,
    3541,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3520,  3542,  3543,
    3521,     0,     0,     0,     0,  1624,     0,     0,  3522,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3185,     0,     0,
    2231,     0,  3544,  3545,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3523,     0,     0,     0,     0,  4531,
       0,     0,     0,     0,     0,     0,     0,     0,  3190,     0,
       0,     0,  1625,  1626,  1627,     0,     0,     0,     0,  1628,
       0,     0,  3524,     0,  3525,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1629,     0,     0,  1630,
    3526,  3527,     0,     0,     0,     0,     0,     0,     0,  4787,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1631,     0,     0,     0,     0,     0,     0,     0,
    3546,     0,     0,     0,  3547,  1632,     0,     0,     0,     0,
       0,  4843,  3528,     0,     0,     0,  3548,     0,     0,     0,
       0,     0,     0,     0,     0,  3529,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1633,
       0,     0,  1634,     0,  3530,     0,     0,  4587,     0,     0,
       0,     0,     0,  3531,  3532,     0,  3533,     0,     0,     0,
    2841,     0,     0,     0,     0,     0,     0,  4887,     0,     0,
       0,     0,     0,     0,     0,     0,  3549,     0,     0,  3550,
       0,  4614,  3551,  3552,  3553,  3554,     0,     0,     0,     0,
       0,     0,     0,  3534,  3535,  3536,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3537,  3538,  3539,  4924,     0,     0,     0,  3540,
       0,     0,  3541,     0,     0,  3555,  3556,  1635,  1636,  1637,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3542,  3543,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3557,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4972,     0,  4973,
       0,     0,     0,     0,  3544,  3545,     0,     0,     0,  4981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4688,
    3190,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5044,
       0,     0,  3546,     0,     0,     0,  3547,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5049,  3548,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3549,     0,
       0,  3550,     0,     0,  3551,  3552,  3553,  3554,     0,     0,
       0,     0,     0,     0,     0,  5099,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5114,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3555,  3556,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4872,
       0,     0,     0,     0,     0,  3557,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5199,     0,     0,     0,     0,     0,
       0,     0,  2158,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   860,     0,     0,     0,     0,     0,     0,
       0,   198,   199,     0,   663,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,  4957,  4958,   664,
       0,   208,   209,   210,   211,   665,   213,     0,   214,     0,
       0,   666,   215,   667,   668,   669,   216,   670,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
     671,   672,   224,   225,     0,   226,   227,   673,   674,   229,
       0,   230,   231,   232,   233,   675,   235,     0,   676,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   677,   678,   256,     0,     0,     0,   679,   257,
     680,     0,   258,   681,   682,     0,   259,   260,   261,   683,
     684,   685,     0,     0,     0,     0,   686,   264,   687,     0,
       0,   688,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   689,     0,   291,
     292,   293,   294,   295,   690,   691,   296,   297,     0,   298,
     299,   300,   301,   302,   692,     0,   303,   304,     0,     0,
       0,   693,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   694,   311,   695,     0,   313,     0,   314,     0,   696,
       0,   315,   316,     0,   317,   697,     0,   318,   319,     0,
       0,     0,   698,   321,   322,   323,   699,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   700,   328,   329,
     330,   701,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   702,   341,   342,
       0,     0,     0,     0,     0,   703,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   704,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   705,   371,   372,   373,   374,
     706,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   707,   382,     0,     0,   708,   384,   709,   385,     0,
     386,   710,   711,   712,   713,   714,   391,   392,   393,   394,
     395,     0,   715,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   716,   717,   718,   403,   404,     0,   719,   720,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   721,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   722,   723,   426,   724,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   725,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   726,   727,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   728,     0,   729,   470,   471,   472,   473,     0,   474,
     730,   731,   476,   477,   478,   479,     0,   732,   481,    42,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     733,   734,   510,   511,     0,     0,   512,   513,   735,   515,
     516,   517,   736,   737,   518,   519,   520,   521,   738,   522,
     523,     0,    49,   524,   525,   526,   527,     0,   739,   528,
     529,     0,   740,   741,   742,   743,     0,     0,     0,     0,
       0,   534,   535,     0,   744,   745,   746,   537,   538,     0,
     747,   539,   540,   748,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   749,   549,
       0,     0,   750,   751,   752,   550,  1201,   551,     0,     0,
     552,   754,     0,   755,   553,     0,   554,   555,   756,   757,
       0,     0,     0,    55,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   758,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   759,   760,     0,   572,   573,   574,   761,   575,   576,
     577,     0,   578,   762,   763,   579,   764,   580,     0,   765,
     766,   767,   768,   769,   581,   582,     0,   770,   583,   771,
     584,   772,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,     0,     0,     0,
       0,     0,   773,   774,     0,     0,     0,     0,   776,     0,
     777,     0,     0,     0,   778,     0,     0,     0,   779,   780,
     198,   199,     0,   663,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   664,     0,
     208,   209,   210,   211,   665,   213,     0,   214,     0,     0,
     666,   215,   667,   668,   669,   216,   670,     0,   217,   218,
     219,  1836,   220,     0,   221,   222,     0,     0,   223,   671,
     672,   224,   225,     0,   226,   227,   673,   674,   229,     0,
     230,   231,   232,   233,   675,   235,     0,   676,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,   677,   678,   256,     0,     0,     0,   679,   257,   680,
       0,   258,   681,   682,     0,   259,   260,   261,   683,   684,
     685,     0,     0,     0,     0,   686,   264,   687,     0,     0,
     688,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   689,     0,   291,   292,
     293,   294,   295,   690,   691,   296,   297,     0,   298,   299,
     300,   301,   302,   692,     0,   303,   304,     0,     0,     0,
     693,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     694,   311,   695,     0,   313,     0,   314,     0,   696,     0,
     315,   316,     0,   317,   697,     0,   318,   319,     0,     0,
       0,   698,   321,   322,   323,   699,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,   700,   328,   329,   330,
     701,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,  1837,   340,     0,   702,   341,   342,     0,
       0,     0,     0,     0,   703,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,   704,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   705,   371,   372,   373,   374,   706,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     707,   382,     0,     0,   708,   384,   709,   385,     0,   386,
     710,   711,   712,   713,   714,   391,   392,   393,   394,   395,
       0,   715,   396,   397,     0,     0,   398,   399,   400,   401,
     402,   716,   717,   718,   403,   404,     0,   719,   720,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,   721,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   722,   723,   426,   724,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   725,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
     726,   727,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     728,     0,   729,   470,   471,   472,   473,     0,   474,   730,
     731,   476,   477,   478,   479,     0,   732,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,   733,
     734,   510,   511,     0,     0,   512,   513,   735,   515,   516,
     517,   736,   737,   518,   519,   520,   521,   738,   522,   523,
       0,     0,   524,   525,   526,   527,     0,   739,   528,   529,
       0,   740,   741,   742,   743,     0,     0,     0,     0,  1838,
     534,   535,     0,   744,   745,   746,   537,   538,     0,   747,
     539,   540,   748,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   749,   549,     0,
       0,   750,   751,   752,   550,   753,   551,     0,     0,   552,
     754,     0,   755,   553,     0,   554,   555,   756,   757,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   758,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
     759,   760,     0,   572,   573,   574,   761,   575,   576,   577,
       0,   578,   762,   763,   579,   764,   580,     0,   765,   766,
     767,   768,   769,   581,   582,     0,   770,   583,   771,   584,
     772,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,     0,     0,     0,     0,
       0,   773,   774,     0,     0,     0,     0,   776,     0,   777,
       0,     0,     0,   778,     0,     0,     0,   779,   780,   198,
     199,     0,   663,   201,   202,   203,   204,  2082,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   664,     0,   208,
     209,   210,   211,   665,   213,     0,   214,     0,     0,  2083,
     215,   667,   668,   669,   216,   670,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,   671,   672,
     224,   225,     0,   226,   227,   673,   674,   229,     0,   230,
     231,   232,   233,   675,   235,     0,   676,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     677,   678,   256,     0,     0,     0,   679,   257,   680,     0,
     258,   681,   682,     0,   259,   260,   261,   683,   684,   685,
       0,     0,     0,     0,   686,   264,   687,     0,     0,  2084,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   689,     0,   291,   292,   293,
     294,   295,   690,   691,   296,   297,     0,   298,   299,   300,
     301,   302,   692,     0,   303,   304,     0,     0,     0,   693,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   694,
     311,   695,     0,   313,     0,   314,     0,   696,     0,   315,
     316,     0,   317,   697,     0,   318,   319,     0,     0,     0,
     698,   321,   322,   323,   699,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   700,   328,   329,   330,   701,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,   702,   341,   342,     0,     0,
       0,     0,     0,   703,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   704,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   705,   371,   372,   373,   374,   706,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   707,
     382,     0,     0,   708,   384,   709,   385,     0,   386,   710,
     711,   712,   713,   714,   391,   392,   393,   394,   395,     0,
     715,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     716,   717,   718,   403,   404,     0,   719,   720,   405,     0,
     406,   407,  2085,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   721,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   722,   723,   426,   724,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   725,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   726,
     727,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   728,
       0,   729,   470,   471,   472,   473,     0,   474,  2086,   731,
     476,   477,   478,   479,     0,   732,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   733,   734,
     510,   511,     0,     0,   512,   513,   735,   515,   516,   517,
     736,   737,   518,   519,   520,   521,   738,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   739,   528,   529,     0,
     740,   741,   742,   743,     0,     0,     0,     0,     0,   534,
     535,     0,   744,   745,   746,   537,   538,     0,   747,   539,
     540,   748,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   749,   549,     0,     0,
     750,   751,   752,   550,   753,   551,     0,     0,   552,   754,
       0,   755,   553,     0,   554,   555,   756,   757,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   758,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   759,
     760,     0,   572,   573,   574,   761,   575,   576,   577,     0,
     578,   762,   763,   579,   764,   580,     0,   765,   766,   767,
     768,   769,   581,   582,     0,   770,   583,   771,   584,   772,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,  2087,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,     0,     0,     0,     0,     0,
     773,   774,     0,     0,     0,     0,   776,     0,   777,     0,
       0,     0,   778,     0,     0,     0,   779,   780,   198,   199,
       0,   663,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   664,     0,   208,   209,
     210,   211,   665,   213,     0,   214,     0,     0,   666,   215,
     667,   668,   669,   216,   670,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,   671,   672,   224,
     225,     0,   226,   227,   673,   674,   229,     0,   230,   231,
     232,   233,   675,   235,     0,   676,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,   677,
     678,   256,     0,     0,     0,   679,   257,   680,     0,   258,
     681,   682,     0,   259,   260,   261,   683,   684,   685,     0,
       0,     0,     0,   686,   264,   687,     0,     0,   688,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   689,     0,   291,   292,   293,   294,
     295,   690,   691,   296,   297,     0,   298,   299,   300,   301,
     302,   692,     0,   303,   304,     0,     0,     0,   693,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   694,   311,
     695,     0,   313,     0,   314,     0,   696,     0,   315,   316,
       0,   317,   697,     0,   318,   319,     0,     0,     0,   698,
     321,   322,   323,   699,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,   700,   328,   329,   330,   701,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,   702,   341,   342,     0,     0,     0,
       0,     0,   703,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,   704,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   705,   371,   372,   373,   374,   706,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   707,   382,
       0,     0,   708,   384,   709,   385,     0,   386,   710,   711,
     712,   713,   714,   391,   392,   393,   394,   395,     0,   715,
     396,   397,     0,     0,   398,   399,   400,   401,   402,   716,
     717,   718,   403,   404,     0,   719,   720,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
     721,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   722,   723,   426,   724,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     725,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,   726,   727,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   728,     0,
     729,   470,   471,   472,   473,     0,   474,   730,   731,   476,
     477,   478,   479,     0,   732,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,   733,   734,   510,
     511,     0,     0,   512,   513,   735,   515,   516,   517,   736,
     737,   518,   519,   520,   521,   738,   522,   523,     0,     0,
     524,   525,   526,   527,     0,   739,   528,   529,     0,   740,
     741,   742,   743,     0,     0,     0,     0,     0,   534,   535,
       0,   744,   745,   746,   537,   538,     0,   747,   539,   540,
     748,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   749,   549,     0,     0,   750,
     751,   752,   550,   753,   551,     0,     0,   552,   754,     0,
     755,   553,     0,   554,   555,   756,   757,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   758,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,   759,   760,
       0,   572,   573,   574,   761,   575,   576,   577,     0,   578,
     762,   763,   579,   764,   580,     0,   765,   766,   767,   768,
     769,   581,   582,     0,   770,   583,   771,   584,   772,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,     0,     0,     0,     0,     0,   773,
     774,   775,     0,     0,     0,   776,     0,   777,     0,     0,
       0,   778,     0,     0,     0,   779,   780,   198,   199,     0,
     663,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   664,     0,   208,   209,   210,
     211,   665,   213,     0,   214,     0,     0,   666,   215,   667,
     668,   669,   216,   670,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,   671,   672,   224,   225,
       0,   226,   227,   673,   674,   229,     0,   230,   231,   232,
     233,   675,   235,     0,   676,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,   677,   678,
     256,     0,     0,     0,   679,   257,   680,     0,   258,   681,
     682,     0,   259,   260,   261,   683,   684,   685,     0,     0,
       0,     0,   686,   264,   687,     0,     0,   688,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   689,     0,   291,   292,   293,   294,   295,
     690,   691,   296,   297,     0,   298,   299,   300,   301,   302,
     692,     0,   303,   304,     0,     0,     0,   693,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   694,   311,   695,
       0,   313,     0,   314,     0,   696,     0,   315,   316,     0,
     317,   697,     0,   318,   319,     0,     0,     0,   698,   321,
     322,   323,   699,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,   700,   328,   329,   330,   701,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,   702,   341,   342,     0,     0,     0,     0,
       0,   703,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,   704,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   705,   371,   372,   373,   374,   706,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   707,   382,     0,
       0,   708,   384,   709,   385,     0,   386,   710,   711,   712,
     713,   714,   391,   392,   393,   394,   395,     0,   715,   396,
     397,     0,     0,   398,   399,   400,   401,   402,   716,   717,
     718,   403,   404,     0,   719,   720,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,   721,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   722,   723,   426,   724,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   725,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,   726,   727,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   728,     0,   729,
     470,   471,   472,   473,     0,   474,   730,   731,   476,   477,
     478,   479,     0,   732,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,   733,   734,   510,   511,
       0,     0,   512,   513,   735,   515,   516,   517,   736,   737,
     518,   519,   520,   521,   738,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   739,   528,   529,     0,   740,   741,
     742,   743,     0,     0,     0,     0,     0,   534,   535,     0,
     744,   745,   746,   537,   538,     0,   747,   539,   540,   748,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   749,   549,     0,     0,   750,   751,
     752,   550,   753,   551,     0,     0,   552,   754,     0,   755,
     553,     0,   554,   555,   756,   757,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   758,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,   759,   760,     0,
     572,   573,   574,   761,   575,   576,   577,     0,   578,   762,
     763,   579,   764,   580,     0,   765,   766,   767,   768,   769,
     581,   582,     0,   770,   583,   771,   584,   772,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,     0,     0,     0,     0,     0,   773,   774,
    2475,     0,     0,     0,   776,     0,   777,     0,     0,     0,
     778,     0,     0,     0,   779,   780,   198,   199,     0,   663,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   664,     0,   208,   209,   210,   211,
     665,   213,     0,   214,     0,     0,   666,   215,   667,   668,
     669,   216,   670,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,   671,   672,   224,   225,     0,
     226,   227,   673,   674,   229,     0,   230,   231,   232,   233,
     675,   235,     0,   676,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,   677,   678,   256,
       0,     0,     0,   679,   257,   680,     0,   258,   681,   682,
       0,   259,   260,   261,   683,   684,   685,     0,     0,     0,
       0,   686,   264,   687,     0,     0,   688,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   689,     0,   291,   292,   293,   294,   295,   690,
     691,   296,   297,     0,   298,   299,   300,   301,   302,   692,
       0,   303,   304,     0,     0,     0,   693,   306,  2531,   307,
       0,     0,     0,   308,     0,   309,   694,   311,   695,     0,
     313,     0,   314,     0,   696,     0,   315,   316,     0,   317,
     697,     0,   318,   319,     0,     0,     0,   698,   321,   322,
     323,   699,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,   700,   328,   329,   330,   701,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,   702,   341,   342,     0,     0,     0,     0,     0,
     703,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,   704,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
     705,   371,   372,   373,   374,   706,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   707,   382,     0,     0,
     708,   384,   709,   385,     0,   386,   710,   711,   712,   713,
     714,   391,   392,   393,   394,   395,     0,   715,   396,   397,
       0,     0,   398,   399,   400,   401,   402,   716,   717,   718,
     403,   404,     0,   719,   720,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,   721,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     722,   723,   426,   724,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   725,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,   726,   727,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   728,     0,   729,   470,
     471,   472,   473,     0,   474,   730,   731,   476,   477,   478,
     479,     0,   732,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,   733,   734,   510,   511,     0,
       0,   512,   513,   735,   515,   516,   517,   736,   737,   518,
     519,   520,   521,   738,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   739,   528,   529,     0,   740,   741,   742,
     743,     0,     0,     0,     0,     0,   534,   535,     0,   744,
     745,   746,   537,   538,     0,   747,   539,   540,   748,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   749,   549,     0,     0,   750,   751,   752,
     550,   753,   551,     0,     0,   552,   754,     0,   755,   553,
       0,   554,   555,   756,   757,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   758,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,   759,   760,     0,   572,
     573,   574,   761,   575,   576,   577,     0,   578,   762,   763,
     579,   764,   580,     0,   765,   766,   767,   768,   769,   581,
     582,     0,   770,   583,   771,   584,   772,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,     0,     0,     0,     0,     0,   773,   774,     0,
       0,     0,     0,   776,     0,   777,     0,     0,     0,   778,
       0,     0,     0,   779,   780,   198,   199,     0,   663,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   664,     0,   208,   209,   210,   211,   665,
     213,     0,   214,     0,     0,   666,   215,   667,   668,   669,
     216,   670,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,   671,   672,   224,   225,     0,   226,
     227,   673,   674,   229,     0,   230,   231,   232,   233,   675,
     235,     0,   676,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   677,   678,   256,     0,
       0,     0,   679,   257,   680,     0,   258,   681,   682,     0,
     259,   260,   261,   683,   684,   685,     0,     0,     0,     0,
     686,   264,   687,     0,     0,   688,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   689,     0,   291,   292,   293,   294,   295,   690,   691,
     296,   297,     0,   298,   299,   300,   301,   302,   692,     0,
     303,   304,     0,     0,     0,   693,   306,  2533,   307,     0,
       0,     0,   308,     0,   309,   694,   311,   695,     0,   313,
       0,   314,     0,   696,     0,   315,   316,     0,   317,   697,
       0,   318,   319,     0,     0,     0,   698,   321,   322,   323,
     699,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   700,   328,   329,   330,   701,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   702,   341,   342,     0,     0,     0,     0,     0,   703,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     704,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   705,
     371,   372,   373,   374,   706,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   707,   382,     0,     0,   708,
     384,   709,   385,     0,   386,   710,   711,   712,   713,   714,
     391,   392,   393,   394,   395,     0,   715,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   716,   717,   718,   403,
     404,     0,   719,   720,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   721,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   722,
     723,   426,   724,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   725,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   726,   727,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   728,     0,   729,   470,   471,
     472,   473,     0,   474,   730,   731,   476,   477,   478,   479,
       0,   732,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   733,   734,   510,   511,     0,     0,
     512,   513,   735,   515,   516,   517,   736,   737,   518,   519,
     520,   521,   738,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   739,   528,   529,     0,   740,   741,   742,   743,
       0,     0,     0,     0,     0,   534,   535,     0,   744,   745,
     746,   537,   538,     0,   747,   539,   540,   748,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   749,   549,     0,     0,   750,   751,   752,   550,
     753,   551,     0,     0,   552,   754,     0,   755,   553,     0,
     554,   555,   756,   757,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     758,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   759,   760,     0,   572,   573,
     574,   761,   575,   576,   577,     0,   578,   762,   763,   579,
     764,   580,     0,   765,   766,   767,   768,   769,   581,   582,
       0,   770,   583,   771,   584,   772,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,     0,     0,     0,     0,     0,   773,   774,     0,     0,
       0,     0,   776,     0,   777,     0,     0,     0,   778,     0,
       0,     0,   779,   780,   198,   199,     0,   663,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   664,     0,   208,   209,   210,   211,   665,   213,
       0,   214,     0,     0,   666,   215,   667,   668,   669,   216,
     670,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,   671,   672,   224,   225,     0,   226,   227,
     673,   674,   229,     0,   230,   231,   232,   233,   675,   235,
       0,   676,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,   677,   678,   256,     0,     0,
       0,   679,   257,   680,     0,   258,   681,   682,     0,   259,
     260,   261,   683,   684,   685,     0,     0,     0,     0,   686,
     264,   687,     0,     0,   688,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     689,     0,   291,   292,   293,   294,   295,   690,   691,   296,
     297,     0,   298,   299,   300,   301,   302,   692,     0,   303,
     304,     0,     0,     0,   693,   306,  2535,   307,     0,     0,
       0,   308,     0,   309,   694,   311,   695,     0,   313,     0,
     314,     0,   696,     0,   315,   316,     0,   317,   697,     0,
     318,   319,     0,     0,     0,   698,   321,   322,   323,   699,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
     700,   328,   329,   330,   701,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
     702,   341,   342,     0,     0,     0,     0,     0,   703,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,   704,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   705,   371,
     372,   373,   374,   706,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   707,   382,     0,     0,   708,   384,
     709,   385,     0,   386,   710,   711,   712,   713,   714,   391,
     392,   393,   394,   395,     0,   715,   396,   397,     0,     0,
     398,   399,   400,   401,   402,   716,   717,   718,   403,   404,
       0,   719,   720,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,   721,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   722,   723,
     426,   724,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   725,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,   726,   727,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   728,     0,   729,   470,   471,   472,
     473,     0,   474,   730,   731,   476,   477,   478,   479,     0,
     732,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,   733,   734,   510,   511,     0,     0,   512,
     513,   735,   515,   516,   517,   736,   737,   518,   519,   520,
     521,   738,   522,   523,     0,     0,   524,   525,   526,   527,
       0,   739,   528,   529,     0,   740,   741,   742,   743,     0,
       0,     0,     0,     0,   534,   535,     0,   744,   745,   746,
     537,   538,     0,   747,   539,   540,   748,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   749,   549,     0,     0,   750,   751,   752,   550,   753,
     551,     0,     0,   552,   754,     0,   755,   553,     0,   554,
     555,   756,   757,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   758,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,   759,   760,     0,   572,   573,   574,
     761,   575,   576,   577,     0,   578,   762,   763,   579,   764,
     580,     0,   765,   766,   767,   768,   769,   581,   582,     0,
     770,   583,   771,   584,   772,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
       0,     0,     0,     0,     0,   773,   774,     0,     0,     0,
       0,   776,     0,   777,     0,     0,     0,   778,     0,     0,
       0,   779,   780,   198,   199,     0,   663,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   664,     0,   208,   209,   210,   211,   665,   213,     0,
     214,     0,     0,   666,   215,   667,   668,   669,   216,   670,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,   671,   672,   224,   225,     0,   226,   227,   673,
     674,   229,     0,   230,   231,   232,   233,   675,   235,     0,
     676,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,   677,   678,   256,     0,     0,     0,
     679,   257,   680,     0,   258,   681,   682,     0,   259,   260,
     261,   683,   684,   685,     0,     0,     0,     0,   686,   264,
     687,     0,     0,   688,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   689,
       0,   291,   292,   293,   294,   295,   690,   691,   296,   297,
       0,   298,   299,   300,   301,   302,   692,     0,   303,   304,
       0,     0,     0,   693,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   694,   311,   695,     0,   313,     0,   314,
       0,   696,     0,   315,   316,     0,   317,   697,     0,   318,
     319,     0,     0,     0,   698,   321,   322,   323,   699,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,   700,
     328,   329,   330,   701,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,   702,
     341,   342,     0,     0,     0,     0,     0,   703,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,   704,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   705,   371,   372,
     373,   374,   706,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   707,   382,     0,     0,   708,   384,   709,
     385,     0,   386,   710,   711,   712,   713,   714,   391,   392,
     393,   394,   395,     0,   715,   396,   397,     0,     0,   398,
     399,   400,   401,   402,   716,   717,   718,   403,   404,     0,
     719,   720,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,   721,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   722,   723,   426,
     724,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   725,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,   726,   727,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   728,     0,   729,   470,   471,   472,   473,
       0,   474,   730,   731,   476,   477,   478,   479,     0,   732,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,   733,   734,   510,   511,     0,     0,   512,   513,
     735,   515,   516,   517,   736,   737,   518,   519,   520,   521,
     738,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     739,   528,   529,     0,   740,   741,   742,   743,     0,     0,
       0,     0,     0,   534,   535,     0,   744,   745,   746,   537,
     538,     0,   747,   539,   540,   748,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     749,   549,     0,     0,   750,   751,   752,   550,   753,   551,
       0,     0,   552,   754,     0,   755,   553,     0,   554,   555,
     756,   757,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   758,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,   759,   760,     0,   572,   573,   574,   761,
     575,   576,   577,     0,   578,   762,   763,   579,   764,   580,
       0,   765,   766,   767,   768,   769,   581,   582,     0,   770,
     583,   771,   584,   772,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,     0,
       0,     0,     0,     0,   773,   774,     0,     0,     0,     0,
     776,     0,   777,     0,     0,     0,   778,     0,     0,     0,
     779,   780,   198,   199,     0,   663,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
     664,     0,   208,   209,   210,   211,   665,   213,     0,   214,
       0,     0,   666,   215,   667,   668,   669,   216,   670,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,   671,   672,   224,   225,     0,   226,   227,   673,   674,
     229,     0,   230,   231,   232,   233,   675,   235,     0,   676,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,   677,   678,   256,     0,     0,     0,   679,
     257,   680,     0,   258,   681,   682,     0,   259,   260,   261,
     683,   684,   685,     0,     0,     0,     0,   686,   264,   687,
       0,     0,   688,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   689,     0,
     291,   292,   293,   294,   295,   690,   691,   296,   297,     0,
     298,   299,   300,   301,   302,   692,     0,   303,   304,     0,
       0,     0,   693,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   694,   311,   695,     0,   313,     0,   314,     0,
     696,     0,   315,   316,     0,   317,   697,     0,   318,   319,
       0,     0,     0,   698,   321,   322,   323,   699,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,   700,   328,
     329,   330,   701,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,   702,   341,
     342,     0,     0,     0,     0,     0,   703,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,   704,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,   705,   371,   372,   373,
     374,   706,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   707,   382,     0,     0,   708,   384,   709,   385,
       0,   386,   710,   711,   712,   713,   714,   391,   392,   393,
     394,   395,     0,   715,   396,   397,     0,     0,   398,   399,
     400,   401,   402,   716,   717,   718,   403,   404,     0,   719,
     720,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,   721,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   722,   723,   426,   724,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   725,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,   726,   727,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   728,     0,   729,   470,   471,   472,   473,     0,
     474,   730,   731,   476,   477,   478,   479,     0,   732,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,   733,   734,   510,   511,     0,     0,   512,   513,   735,
     515,   516,   517,   736,   737,   518,   519,   520,   521,   738,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   739,
     528,   529,     0,   740,   741,   742,   743,     0,     0,     0,
       0,     0,   534,   535,     0,   744,   745,   746,   537,   538,
       0,   747,   539,   540,   748,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   749,
     549,     0,     0,   750,   751,   752,   550,   753,   551,     0,
       0,   552,   754,     0,   755,   553,     0,   554,   555,   756,
     757,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   758,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,   759,   760,     0,   572,   573,   574,   761,   575,
     576,   577,     0,   578,   762,   763,   579,   764,   580,     0,
     765,   766,   767,   768,   769,   581,   582,     0,   770,   583,
     771,   584,   772,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,     0,     0,
       0,     0,     0,   773,   774,     0,     0,     0,     0,   776,
       0,  1126,     0,     0,     0,   778,     0,     0,     0,   779,
     780,   198,   199,     0,   663,   201,   202,   203,   204,  1884,
       0,   205,     0,     0,     0,     0,  1885,     0,     0,   664,
       0,   208,   209,   210,   211,   665,   213,     0,   214,     0,
       0,   666,   215,   667,   668,   669,   216,   670,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
     671,   672,   224,   225,     0,   226,   227,   673,   674,   229,
       0,   230,   231,   232,   233,   675,   235,     0,   676,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   677,   678,   256,     0,     0,     0,   679,   257,
     680,     0,   258,   681,   682,     0,   259,   260,   261,   683,
     684,   685,     0,     0,     0,     0,   686,   264,   687,     0,
       0,   688,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   689,     0,   291,
     292,   293,   294,   295,   690,   691,   296,   297,     0,   298,
     299,   300,   301,   302,   692,     0,   303,   304,     0,     0,
       0,   693,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   694,   311,   695,     0,   313,     0,   314,     0,   696,
       0,   315,   316,     0,   317,   697,     0,   318,   319,     0,
       0,     0,   698,   321,   322,   323,   699,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   700,   328,   329,
     330,   701,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   702,   341,   342,
       0,     0,     0,     0,     0,   703,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   704,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   705,   371,   372,   373,   374,
     706,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   707,   382,     0,     0,   708,   384,   709,   385,     0,
     386,   710,   711,   712,   713,   714,   391,   392,   393,   394,
     395,     0,   715,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   716,     0,   718,   403,   404,     0,   719,   720,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   721,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   722,   723,   426,   724,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   725,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   726,   727,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   728,     0,   729,   470,   471,   472,   473,     0,   474,
     730,   731,   476,   477,   478,   479,     0,   732,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     733,   734,   510,   511,     0,     0,   512,   513,   735,   515,
     516,   517,   736,   737,   518,   519,   520,   521,   738,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   739,   528,
     529,     0,   740,   741,   742,   743,     0,     0,     0,     0,
       0,   534,   535,     0,   744,   745,   746,   537,   538,     0,
     747,   539,   540,   748,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   749,   549,
       0,     0,   750,   751,   752,   550,   753,   551,     0,     0,
     552,   754,     0,   755,   553,     0,   554,   555,   756,   757,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   758,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   759,   760,     0,   572,   573,   574,   761,   575,   576,
     577,     0,   578,   762,   763,   579,   764,   580,     0,   765,
     766,   767,   768,   769,   581,   582,     0,   770,   583,   771,
     584,   772,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,     0,     0,     0,
       0,     0,   773,   774,     0,     0,     0,     0,   776,     0,
     777,     0,     0,     0,   778,     0,     0,     0,   779,   780,
     198,   199,     0,   663,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   664,     0,
     208,   209,   210,   211,   665,   213,     0,   214,     0,     0,
     666,   215,   667,   668,   669,   216,   670,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,   671,
     672,   224,   225,     0,   226,   227,   673,   674,   229,     0,
     230,   231,   232,   233,   675,   235,     0,   676,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,   677,   678,   256,     0,     0,     0,   679,   257,   680,
       0,   258,   681,   682,     0,   259,   260,   261,   683,   684,
     685,     0,     0,     0,     0,   686,   264,   687,     0,     0,
    2157,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   689,     0,   291,   292,
     293,   294,   295,   690,   691,   296,   297,     0,   298,   299,
     300,   301,   302,   692,     0,   303,   304,     0,     0,     0,
     693,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     694,   311,   695,     0,   313,     0,   314,     0,   696,     0,
     315,   316,     0,   317,   697,     0,   318,   319,     0,     0,
       0,   698,   321,   322,   323,   699,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,   700,   328,   329,   330,
     701,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,   702,   341,   342,     0,
       0,     0,     0,     0,   703,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,   704,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   705,   371,   372,   373,   374,   706,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     707,   382,     0,     0,   708,   384,   709,   385,     0,   386,
     710,   711,   712,   713,   714,   391,   392,   393,   394,   395,
       0,   715,   396,   397,     0,     0,   398,   399,   400,   401,
     402,   716,   717,   718,   403,   404,     0,   719,   720,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,   721,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   722,   723,   426,   724,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   725,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
     726,   727,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     728,     0,   729,   470,   471,   472,   473,     0,   474,   730,
     731,   476,   477,   478,   479,     0,   732,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,   733,
     734,   510,   511,     0,     0,   512,   513,   735,   515,   516,
     517,   736,   737,   518,   519,   520,   521,   738,   522,   523,
       0,     0,   524,   525,   526,   527,     0,   739,   528,   529,
       0,   740,   741,   742,   743,     0,     0,     0,     0,     0,
     534,   535,     0,   744,   745,   746,   537,   538,     0,   747,
     539,   540,   748,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   749,   549,     0,
       0,   750,   751,   752,   550,   753,   551,     0,     0,   552,
     754,     0,   755,   553,     0,   554,   555,   756,   757,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   758,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
     759,   760,     0,   572,   573,   574,   761,   575,   576,   577,
       0,   578,   762,   763,   579,   764,   580,     0,   765,   766,
     767,   768,   769,   581,   582,     0,   770,   583,   771,   584,
     772,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,     0,     0,     0,     0,
       0,   773,   774,     0,     0,     0,     0,   776,     0,   777,
       0,     0,     0,   778,     0,     0,     0,   779,   780,   198,
     199,     0,   663,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   664,     0,   208,
     209,   210,   211,   665,   213,     0,   214,     0,     0,   666,
     215,   667,   668,   669,   216,   670,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,   671,   672,
     224,   225,     0,   226,   227,   673,   674,   229,     0,   230,
     231,   232,   233,   675,   235,     0,   676,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     677,   678,   256,     0,     0,     0,   679,   257,   680,     0,
     258,   681,   682,     0,   259,   260,   261,   683,   684,   685,
       0,     0,     0,     0,   686,   264,   687,     0,     0,   688,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   689,     0,   291,   292,   293,
     294,   295,   690,   691,   296,   297,     0,   298,   299,   300,
     301,   302,   692,     0,   303,   304,     0,     0,     0,   693,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   694,
     311,   695,     0,   313,     0,   314,     0,   696,     0,   315,
     316,     0,   317,   697,     0,   318,   319,     0,     0,     0,
     698,   321,   322,   323,   699,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   700,   328,   329,   330,  3168,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,   702,   341,   342,     0,     0,
       0,     0,     0,   703,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   704,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   705,   371,   372,   373,   374,   706,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   707,
     382,     0,     0,   708,   384,   709,   385,     0,   386,   710,
     711,   712,   713,   714,   391,   392,   393,   394,   395,     0,
     715,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     716,   717,   718,   403,   404,     0,   719,   720,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   721,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   722,   723,   426,   724,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   725,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   726,
     727,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   728,
       0,   729,   470,   471,   472,   473,     0,   474,   730,   731,
     476,   477,   478,   479,     0,   732,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   733,   734,
     510,   511,     0,     0,   512,   513,   735,   515,   516,   517,
     736,   737,   518,   519,   520,   521,   738,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   739,   528,   529,     0,
     740,   741,   742,   743,     0,     0,     0,     0,     0,   534,
     535,     0,   744,   745,   746,   537,   538,     0,   747,   539,
     540,   748,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   749,   549,     0,     0,
     750,   751,   752,   550,   753,   551,     0,     0,   552,   754,
       0,   755,   553,     0,   554,   555,   756,   757,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   758,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   759,
     760,     0,   572,   573,   574,   761,   575,   576,   577,     0,
     578,   762,   763,   579,   764,   580,     0,   765,   766,   767,
     768,   769,   581,   582,     0,   770,   583,   771,   584,   772,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,     0,     0,     0,     0,     0,
     773,   774,     0,     0,     0,     0,   776,     0,   777,     0,
       0,     0,   778,     0,     0,     0,   779,   780,   198,   199,
       0,   663,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   664,     0,   208,   209,
     210,   211,   665,   213,     0,   214,     0,     0,   666,   215,
     667,   668,   669,   216,   670,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,   671,   672,   224,
     225,     0,   226,   227,   673,   674,   229,     0,   230,   231,
     232,   233,   675,   235,     0,   676,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,   677,
     678,   256,     0,     0,     0,   679,   257,   680,     0,   258,
     681,   682,     0,   259,   260,   261,   683,   684,   685,     0,
       0,     0,     0,   686,   264,   687,     0,     0,   688,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   689,     0,   291,   292,   293,   294,
     295,   690,   691,   296,   297,     0,   298,   299,   300,   301,
     302,   692,     0,   303,   304,     0,     0,     0,   693,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   694,   311,
     695,     0,   313,     0,   314,     0,   696,     0,   315,   316,
       0,   317,   697,     0,   318,   319,     0,     0,     0,   698,
     321,   322,   323,   699,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,   700,   328,   329,   330,  3229,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,   702,   341,   342,     0,     0,     0,
       0,     0,   703,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,   704,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   705,   371,   372,   373,   374,   706,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   707,   382,
       0,     0,   708,   384,   709,   385,     0,   386,   710,   711,
     712,   713,   714,   391,   392,   393,   394,   395,     0,   715,
     396,   397,     0,     0,   398,   399,   400,   401,   402,   716,
     717,   718,   403,   404,     0,   719,   720,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
     721,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   722,   723,   426,   724,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     725,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,   726,   727,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   728,     0,
     729,   470,   471,   472,   473,     0,   474,   730,   731,   476,
     477,   478,   479,     0,   732,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,   733,   734,   510,
     511,     0,     0,   512,   513,   735,   515,   516,   517,   736,
     737,   518,   519,   520,   521,   738,   522,   523,     0,     0,
     524,   525,   526,   527,     0,   739,   528,   529,     0,   740,
     741,   742,   743,     0,     0,     0,     0,     0,   534,   535,
       0,   744,   745,   746,   537,   538,     0,   747,   539,   540,
     748,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   749,   549,     0,     0,   750,
     751,   752,   550,   753,   551,     0,     0,   552,   754,     0,
     755,   553,     0,   554,   555,   756,   757,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   758,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,   759,   760,
       0,   572,   573,   574,   761,   575,   576,   577,     0,   578,
     762,   763,   579,   764,   580,     0,   765,   766,   767,   768,
     769,   581,   582,     0,   770,   583,   771,   584,   772,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,     0,     0,     0,     0,     0,   773,
     774,     0,     0,     0,     0,   776,     0,   777,     0,     0,
       0,   778,     0,     0,     0,   779,   780,   198,   199,     0,
     663,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   664,     0,   208,   209,   210,
     211,   665,   213,     0,   214,     0,     0,   666,   215,   667,
     668,   669,   216,   670,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,   671,   672,   224,   225,
       0,   226,   227,   673,   674,   229,     0,   230,   231,   232,
     233,   675,   235,     0,   676,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,   677,   678,
     256,     0,     0,     0,   679,   257,   680,     0,   258,   681,
     682,     0,   259,   260,   261,   683,   684,   685,     0,     0,
       0,     0,   686,   264,   687,     0,     0,   688,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   689,     0,   291,   292,   293,   294,   295,
     690,   691,   296,   297,     0,   298,   299,   300,   301,   302,
     692,     0,   303,   304,     0,     0,     0,   693,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   694,   311,   695,
       0,   313,     0,   314,     0,   696,     0,   315,   316,     0,
     317,   697,     0,   318,   319,     0,     0,     0,   698,   321,
     322,   323,   699,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,   700,   328,   329,   330,   701,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,   702,   341,   342,     0,     0,     0,     0,
       0,   703,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,   704,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   705,   371,   372,   373,   374,   706,   375,   376,  4953,
       0,     0,     0,   377,   378,   379,   380,   707,   382,     0,
       0,   708,   384,   709,   385,     0,   386,   710,   711,   712,
     713,   714,   391,   392,   393,   394,   395,     0,   715,   396,
     397,     0,     0,   398,   399,   400,   401,   402,   716,     0,
     718,   403,   404,     0,   719,   720,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,   721,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   722,   723,   426,   724,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   725,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,   726,   727,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   728,     0,   729,
     470,   471,   472,   473,     0,   474,   730,   731,   476,   477,
     478,   479,     0,   732,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,   733,   734,   510,   511,
       0,     0,   512,   513,   735,   515,   516,   517,   736,   737,
     518,   519,   520,   521,   738,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   739,   528,   529,     0,   740,   741,
     742,   743,     0,     0,     0,     0,     0,   534,   535,     0,
     744,   745,   746,   537,   538,     0,   747,   539,   540,   748,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   749,   549,     0,     0,   750,   751,
     752,   550,   753,   551,     0,     0,   552,   754,     0,   755,
     553,     0,   554,   555,   756,   757,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   758,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,   759,   760,     0,
     572,   573,   574,   761,   575,   576,   577,     0,   578,   762,
     763,   579,   764,   580,     0,   765,   766,   767,   768,   769,
     581,   582,     0,   770,   583,   771,   584,   772,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,     0,     0,     0,     0,     0,   773,   774,
       0,     0,     0,     0,   776,     0,   777,     0,     0,     0,
     778,     0,     0,     0,   779,   780,   198,   199,     0,   663,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   664,     0,   208,   209,   210,   211,
     665,   213,     0,   214,     0,     0,   666,   215,   667,   668,
     669,   216,   670,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,   671,   672,   224,   225,     0,
     226,   227,   673,   674,   229,     0,   230,   231,   232,   233,
     675,   235,     0,   676,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,   677,   678,   256,
       0,     0,     0,   679,   257,   680,     0,   258,   681,   682,
       0,   259,   260,   261,   683,   684,   685,     0,     0,     0,
       0,   686,   264,   687,     0,     0,   688,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   689,     0,   291,   292,   293,   294,   295,   690,
     691,   296,   297,     0,   298,   299,   300,   301,   302,   692,
       0,   303,   304,     0,     0,     0,   693,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   694,   311,   695,     0,
     313,     0,   314,     0,   696,     0,   315,   316,     0,   317,
     697,     0,   318,   319,     0,     0,     0,   698,   321,   322,
     323,   699,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,   700,   328,   329,   330,   701,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,   702,   341,   342,     0,     0,     0,     0,     0,
     703,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,   704,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
     705,   371,   372,   373,   374,   706,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   707,   382,     0,     0,
     708,   384,   709,   385,     0,   386,   710,   711,   712,   713,
     714,   391,   392,   393,   394,   395,     0,   715,   396,   397,
       0,     0,   398,   399,   400,   401,   402,   716,     0,   718,
     403,   404,     0,   719,   720,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,   721,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     722,   723,   426,   724,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   725,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,   726,   727,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   728,     0,   729,   470,
     471,   472,   473,     0,   474,   730,   731,   476,   477,   478,
     479,     0,   732,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,   733,   734,   510,   511,     0,
       0,   512,   513,   735,   515,   516,   517,   736,   737,   518,
     519,   520,   521,   738,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   739,   528,   529,     0,   740,   741,   742,
     743,     0,     0,     0,     0,     0,   534,   535,     0,   744,
     745,   746,   537,   538,     0,   747,   539,   540,   748,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   749,   549,     0,     0,   750,   751,   752,
     550,   753,   551,     0,     0,   552,   754,     0,   755,   553,
       0,   554,   555,   756,   757,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   758,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,   759,   760,     0,   572,
     573,   574,   761,   575,   576,   577,     0,   578,   762,   763,
     579,   764,   580,     0,   765,   766,   767,   768,   769,   581,
     582,     0,   770,   583,   771,   584,   772,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,     0,     0,     0,     0,     0,   773,   774,     0,
       0,     0,     0,   776,     0,   777,     0,     0,     0,   778,
       0,     0,     0,   779,   780,   198,   199,     0,   663,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   664,     0,   208,   209,   210,   211,   665,
     213,     0,   214,     0,     0,   666,   215,   667,   668,   669,
     216,   670,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,   671,   672,   224,   225,     0,   226,
     227,   673,   674,   229,     0,   230,   231,   232,   233,   675,
     235,     0,   676,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   677,   678,   256,     0,
       0,     0,   679,   257,   680,     0,   258,   681,   682,     0,
     259,   260,   261,   683,   684,   685,     0,     0,     0,     0,
     686,   264,   687,     0,     0,   688,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   689,     0,   291,   292,   293,   294,   295,   690,   691,
     296,   297,     0,   298,   299,   300,   301,   302,   692,     0,
     303,   304,     0,     0,     0,   693,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   694,   311,   695,     0,   313,
       0,   314,     0,   696,     0,   315,   316,     0,   317,   697,
       0,   318,   319,     0,     0,     0,   698,   321,   322,   323,
     699,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   700,   328,   329,   330,  1902,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   702,   341,   342,     0,     0,     0,     0,     0,   703,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     704,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   705,
     371,   372,   373,   374,   706,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   707,   382,     0,     0,   708,
     384,   709,   385,     0,   386,   710,   711,   712,   713,   714,
     391,   392,   393,   394,   395,     0,   715,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   716,     0,   718,   403,
     404,     0,   719,   720,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   721,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   722,
     723,   426,   724,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   725,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   726,   727,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   728,     0,   729,   470,   471,
     472,   473,     0,   474,   730,   731,   476,   477,   478,   479,
       0,   732,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   733,   734,   510,   511,     0,     0,
     512,   513,   735,   515,   516,   517,   736,   737,   518,   519,
     520,   521,   738,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   739,   528,   529,     0,   740,   741,   742,   743,
       0,     0,     0,     0,     0,   534,   535,     0,   744,   745,
     746,   537,   538,     0,   747,   539,   540,   748,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   749,   549,     0,     0,   750,   751,   752,   550,
     753,   551,     0,     0,   552,   754,     0,   755,   553,     0,
     554,   555,   756,   757,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     758,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   759,   760,     0,   572,   573,
     574,   761,   575,   576,   577,     0,   578,   762,   763,   579,
     764,   580,     0,   765,   766,   767,   768,   769,   581,   582,
       0,   770,   583,   771,   584,   772,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,     0,     0,     0,     0,     0,   773,   774,     0,     0,
       0,     0,   776,     0,   777,     0,     0,     0,   778,     0,
       0,     0,   779,   780,   198,   199,     0,   663,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   664,     0,   208,   209,   210,   211,   665,   213,
       0,   214,     0,     0,   666,   215,   667,   668,   669,   216,
     670,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,   671,   672,   224,   225,     0,   226,   227,
     673,   674,   229,     0,   230,   231,   232,   233,   675,   235,
       0,   676,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,   677,   678,   256,     0,     0,
       0,   679,   257,   680,     0,   258,   681,   682,     0,   259,
     260,   261,   683,   684,   685,     0,     0,     0,     0,   686,
     264,   687,     0,     0,   688,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     689,     0,   291,   292,   293,   294,   295,   690,   691,   296,
     297,     0,   298,   299,   300,   301,   302,   692,     0,   303,
     304,     0,     0,     0,   693,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   694,   311,   695,     0,   313,     0,
     314,     0,   696,     0,   315,   316,     0,   317,   697,     0,
     318,   319,     0,     0,     0,   698,   321,   322,   323,   699,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
     700,   328,   329,   330,  1904,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
     702,   341,   342,     0,     0,     0,     0,     0,   703,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,   704,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   705,   371,
     372,   373,   374,   706,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   707,   382,     0,     0,   708,   384,
     709,   385,     0,   386,   710,   711,   712,   713,   714,   391,
     392,   393,   394,   395,     0,   715,   396,   397,     0,     0,
     398,   399,   400,   401,   402,   716,     0,   718,   403,   404,
       0,   719,   720,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,   721,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   722,   723,
     426,   724,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   725,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,   726,   727,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   728,     0,   729,   470,   471,   472,
     473,     0,   474,   730,   731,   476,   477,   478,   479,     0,
     732,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,   733,   734,   510,   511,     0,     0,   512,
     513,   735,   515,   516,   517,   736,   737,   518,   519,   520,
     521,   738,   522,   523,     0,     0,   524,   525,   526,   527,
       0,   739,   528,   529,     0,   740,   741,   742,   743,     0,
       0,     0,     0,     0,   534,   535,     0,   744,   745,   746,
     537,   538,     0,   747,   539,   540,   748,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   749,   549,     0,     0,   750,   751,   752,   550,   753,
     551,     0,     0,   552,   754,     0,   755,   553,     0,   554,
     555,   756,   757,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   758,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,   759,   760,     0,   572,   573,   574,
     761,   575,   576,   577,     0,   578,   762,   763,   579,   764,
     580,     0,   765,   766,   767,   768,   769,   581,   582,     0,
     770,   583,   771,   584,   772,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
       0,     0,     0,     0,     0,   773,   774,     0,     0,     0,
       0,   776,     0,   777,     0,     0,     0,   778,     0,     0,
       0,   779,   780,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,    42,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,    49,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,    54,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,    55,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,  2696,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,  2697,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,     0,
       0,     0,     0,     0,   198,   199,     0,   200,   201,   202,
     203,   204,  2698,     0,   205,     0,     0,     0,     0,   206,
       0,  2699,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,  2695,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,  2696,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,  2697,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
       0,     0,     0,     0,     0,   198,   199,     0,   200,   201,
     202,   203,   204,  2698,     0,   205,     0,     0,     0,     0,
     206,     0,  2699,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
    2696,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
    2697,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,     0,     0,     0,     0,   198,   199,     0,   200,   201,
     202,   203,   204,     0,  2698,   205,     0,     0,     0,     0,
     206,     0,     0,  2699,     0,   208,   209,   210,   211,   212,
     213,     0,  -453,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,     0,
       0,     0,     0,   223,  4790,     0,   224,   225,     0,   226,
     227,     0,     0,     0,     0,   230,   231,   232,  4791,   234,
     235,     0,   236,   237,     0,   238,   239,     0,   241,     0,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,     0,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,     0,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,     0,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
       0,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,  4792,   298,   299,   300,   301,   302,     0,     0,
       0,     0,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,     0,   316,     0,     0,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
    4793,     0,   324,     0,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,  4794,     0,     0,
     336,     0,   337,     0,     0,     0,   339,     0,     0,   340,
    4795,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,  -408,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,     0,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,  4796,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,     0,     0,     0,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,     0,   454,  -408,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,     0,     0,   464,   465,
       0,   466,   467,   468,  4797,   469,     0,     0,     0,   471,
     472,   473,     0,   474,     0,   475,   476,     0,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,     0,     0,     0,
     489,     0,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,     0,
     506,   507,   508,   509,     0,     0,     0,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
       0,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,     0,     0,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,  -408,     0,     0,     0,
     558,   559,   560,     0,   561,     0,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,     0,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,     0,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,     0,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,  5203,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,   667,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,  2622,     0,     0,     0,     0,   263,   264,   687,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,   691,   296,   297,     0,
     298,   299,   300,   301,   302,   692,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,   697,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,   704,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,   715,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,   719,
     720,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   739,
     528,   529,     0,  2623,   531,   532,  2624,     0,     0,     0,
       0,     0,   534,   535,     0,     0,   745,   536,   537,   538,
       0,   747,   539,   540,   748,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,   778,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,  1508,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,  1000,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,  1509,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,   195,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,  1510,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     924,   925,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,   926,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   927,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   928,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   929,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   930,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   931,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   932,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   933,   934,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   935,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   936,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,   937,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,  1000,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,   195,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,  1205,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,  1000,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   195,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,  1382,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   924,   925,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,  1390,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   927,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   928,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   929,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   931,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     933,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   935,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,   937,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,  1000,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,   195,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,  1510,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,  1963,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,  1964,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
    5130,   206,     0,  5131,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,  1964,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,  5131,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,    42,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,    49,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,    54,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
      55,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,   986,  3859,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,  4096,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
    4100,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
    2275,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
    2276,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,  1665,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,  1666,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,  3700,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,    42,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
    2278,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,    49,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,    54,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,    55,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,   986,     0,   206,     0,     0,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,  2696,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,  2697,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,  2698,     0,   206,     0,     0,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,  1130,     0,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,  2952,     0,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,  3254,
       0,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,  3982,     0,   206,     0,     0,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,     0,     0,
       0,     0,     0,   198,   199,  1922,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,     0,
       0,     0,     0,     0,   198,   199,  2637,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
       0,     0,     0,     0,     0,   198,   199,  3284,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,     0,     0,     0,     0,     0,   198,   199,  3463,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,     0,     0,     0,     0,     0,   198,   199,  3835,
     200,   201,   202,   203,   204,   834,   835,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,   836,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,   837,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,   838,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   839,
     288,   289,   840,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   841,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,   842,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,   843,     0,   327,
       0,     0,     0,   844,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,   845,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,   846,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,     0,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   847,   433,   434,   435,   848,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,   849,     0,   445,   446,   447,   448,   449,
       0,   850,   451,     0,   452,   453,   454,     0,     0,   851,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,   852,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,   853,   854,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     855,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,   856,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,   857,   547,   858,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
       0,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,   906,   835,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,   836,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,   837,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,   838,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   839,   288,   289,   840,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   841,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,   842,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,   843,     0,   327,     0,     0,     0,   844,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,   845,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,   846,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,     0,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   847,
     433,   434,   435,   907,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,   849,
       0,   445,   446,   447,   448,   449,     0,   850,   451,     0,
     452,   453,   454,     0,     0,   851,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,   852,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,   853,   854,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   855,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,   856,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,   857,   547,   858,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,     0,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,     0,   835,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,   836,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,   837,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,   838,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   839,   288,   289,   840,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   841,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,   842,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,   843,
       0,   327,     0,     0,     0,   844,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,   845,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,   846,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,     0,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   847,   433,   434,   435,     0,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,   849,     0,   445,   446,   447,
     448,   449,     0,   850,   451,     0,   452,   453,   454,     0,
       0,   851,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,   852,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
     853,   854,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   855,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   195,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,   856,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,   857,   547,   858,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,     0,     0,   595,   596,   597,     0,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,  2849,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,  2850,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,  2851,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
    2852,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,  1236,  1237,     0,   403,
     404,     0,     0,  2853,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,  5191,   901,  5192,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,  2854,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,  1210,  1211,   206,  1212,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,  1213,     0,     0,  1214,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,  1215,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,  1216,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,  1359,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,  1360,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,  1361,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1000,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,  1362,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,  2275,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,  2276,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,  1665,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,  1666,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,  2278,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,  1384,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,  1385,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,  1000,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   195,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
    1525,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,  1526,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   721,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,  1527,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,  1359,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  3579,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1000,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,   999,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1000,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,  1001,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,   999,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,  1000,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,  1456,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,  1457,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,  1255,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,  2105,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,  1000,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   195,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,  2718,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1000,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1000,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,  3030,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,  1359,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,  1000,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,  1000,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,  3645,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   195,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,  1000,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   195,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,  5101,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,  5102,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,   901,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,   969,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,  1031,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,  1032,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,  1215,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,  2242,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,  2368,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,  2954,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,  2966,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,  2995,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,  3058,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,  1985,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,  1986,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,  4852,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,  1390,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,     0,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,     0,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,     0,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,  1391,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,     0,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,     0,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  1390,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,     0,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,     0,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,     0,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,     0,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,     0,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,  1375,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,  1376,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,     0,
     288,   289,     0,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,     0,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,   845,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,  1377,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,     0,   433,   434,   435,     0,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,     0,   451,     0,   452,   453,   454,     0,     0,     0,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,     0,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
       0,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
       0,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,  4934,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,  4935,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,     0,   288,   289,     0,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,     0,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,   845,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,  4936,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,     0,
     433,   434,   435,     0,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,     0,   451,     0,
     452,   453,   454,     0,     0,     0,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,     0,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,     0,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,     0,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,  2044,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,     0,   288,   289,     0,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,     0,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,   845,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,  2045,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,     0,   433,   434,   435,     0,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,     0,   451,     0,   452,   453,   454,     0,
       0,     0,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,     0,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,     0,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   195,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,     0,     0,   595,   596,   597,     0,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,  2814,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,     0,   288,   289,
       0,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,   845,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,  2815,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,     0,   433,   434,   435,     0,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,     0,
     451,     0,   452,   453,   454,     0,     0,     0,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,     0,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,     0,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   195,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,     0,     0,
     595,   596,   597,     0,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,     0,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     845,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,     0,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,     0,   433,   434,
     435,     0,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,     0,   451,     0,   452,   453,
     454,     0,     0,     0,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,     0,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,     0,     0,   208,   209,   210,
     211,   212,   213,     0,  -453,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,     0,     0,     0,     0,   223,  4790,     0,   224,   225,
       0,   226,   227,     0,     0,     0,     0,   230,   231,   232,
    4791,   234,   235,     0,   236,   237,     0,   238,   239,     0,
     241,     0,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,     0,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,     0,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,  -423,  -423,   277,     0,  -423,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,     0,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,  4792,   298,   299,   300,   301,   302,
       0,     0,     0,     0,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,     0,   316,     0,
       0,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,  4793,     0,   324,     0,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,  4794,
       0,     0,   336,     0,   337,     0,     0,     0,   339,     0,
       0,   340,  4795,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,  -408,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,     0,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,  4796,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,     0,     0,     0,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,     0,   454,  -408,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,     0,     0,
     464,   465,     0,   466,   467,   468,  4797,   469,     0,     0,
       0,   471,   472,   473,     0,   474,     0,   475,   476,     0,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,     0,
       0,     0,   489,     0,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,     0,   506,   507,   508,   509,     0,     0,     0,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,     0,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,     0,     0,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,  -408,     0,
       0,     0,   558,   559,   560,     0,   561,     0,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,     0,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,     0,     0,   208,   209,   210,   211,   212,   213,     0,
    -453,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,     0,     0,     0,
       0,   223,  4790,     0,   224,   225,     0,   226,   227,     0,
       0,     0,     0,   230,   231,   232,  4791,   234,   235,     0,
     236,   237,     0,   238,   239,     0,   241,     0,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,     0,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,     0,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,  -444,     0,
     277,     0,  -444,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,     0,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
    4792,   298,   299,   300,   301,   302,     0,     0,     0,     0,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,     0,   316,     0,     0,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,  4793,     0,
     324,     0,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,     0,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,  4794,     0,     0,   336,     0,
     337,     0,     0,     0,   339,     0,     0,   340,  4795,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
    -408,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,     0,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,  4796,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,     0,     0,     0,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,     0,   454,  -408,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,     0,     0,   464,   465,     0,   466,
     467,   468,  4797,   469,     0,     0,     0,   471,   472,   473,
       0,   474,     0,   475,   476,     0,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,     0,     0,     0,   489,     0,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,     0,   506,   507,
     508,   509,     0,     0,     0,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,     0,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,     0,
       0,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,  -444,     0,  -408,     0,     0,     0,   558,   559,
     560,     0,   561,     0,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,     0,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,     0,     0,   208,
     209,   210,   211,   212,   213,     0,  -453,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,     0,     0,     0,     0,   223,  4790,     0,
     224,   225,     0,   226,   227,     0,     0,     0,     0,   230,
     231,   232,  4791,   234,   235,     0,   236,   237,     0,   238,
     239,     0,   241,     0,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,     0,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,     0,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,  -441,     0,   277,     0,  -441,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,     0,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,  4792,   298,   299,   300,
     301,   302,     0,     0,     0,     0,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,     0,
     316,     0,     0,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,  4793,     0,   324,     0,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,     0,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,  4794,     0,     0,   336,     0,   337,     0,     0,     0,
     339,     0,     0,   340,  4795,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,  -408,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,     0,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,  4796,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,     0,     0,     0,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,     0,   454,  -408,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
       0,     0,   464,   465,     0,   466,   467,   468,  4797,   469,
       0,     0,     0,   471,   472,   473,     0,   474,     0,   475,
     476,     0,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,     0,     0,     0,   489,     0,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,     0,   506,   507,   508,   509,     0,     0,
       0,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,     0,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,     0,     0,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,  -441,     0,
    -408,     0,     0,     0,   558,   559,   560,     0,   561,     0,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
       0,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,     0,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,     0,     0,   208,   209,   210,   211,   212,
     213,     0,  -453,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,     0,
       0,     0,     0,   223,  4790,     0,   224,   225,     0,   226,
     227,     0,     0,     0,     0,   230,   231,   232,  4791,   234,
     235,     0,   236,   237,     0,   238,   239,     0,   241,     0,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,     0,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,     0,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,  5045,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
       0,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,  4792,   298,   299,   300,   301,   302,     0,     0,
       0,     0,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,     0,   316,     0,     0,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
    4793,     0,   324,     0,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,  4794,     0,     0,
     336,     0,   337,     0,     0,     0,   339,     0,     0,   340,
    4795,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,  -408,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,     0,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,  4796,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,     0,     0,     0,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,     0,   454,  -408,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,     0,     0,   464,   465,
       0,   466,   467,   468,  4797,   469,     0,     0,     0,   471,
     472,   473,     0,   474,     0,   475,   476,     0,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,     0,     0,     0,
     489,     0,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,     0,
     506,   507,   508,   509,     0,     0,     0,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
       0,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,     0,     0,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,  -408,     0,     0,     0,
     558,   559,   560,     0,   561,     0,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,     0,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,     0,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -453,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4790,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4791,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
    -446,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4792,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4793,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4794,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4795,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -408,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4796,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -408,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4797,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -408,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,     0,     0,   208,   209,   210,
     211,   212,   213,     0,  -453,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,     0,     0,     0,     0,   223,  4790,     0,   224,   225,
       0,   226,   227,     0,     0,     0,     0,   230,   231,   232,
    4791,   234,   235,     0,   236,   237,     0,   238,   239,     0,
     241,     0,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,     0,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,     0,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,  5106,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,     0,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,  4792,   298,   299,   300,   301,   302,
       0,     0,     0,     0,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,     0,   316,     0,
       0,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,  4793,     0,   324,     0,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,  4794,
       0,     0,   336,     0,   337,     0,     0,     0,   339,     0,
       0,   340,  4795,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,  -408,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,     0,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,  4796,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,     0,     0,     0,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,     0,   454,  -408,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,     0,     0,
     464,   465,     0,   466,   467,   468,  4797,   469,     0,     0,
       0,   471,   472,   473,     0,   474,     0,   475,   476,     0,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,     0,
       0,     0,   489,     0,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,     0,   506,   507,   508,   509,     0,     0,     0,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,     0,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,     0,     0,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,  -408,     0,
       0,     0,   558,   559,   560,     0,   561,     0,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,     0,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,     0,     0,   208,   209,   210,   211,   212,   213,     0,
    -453,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,     0,     0,     0,
       0,   223,  4790,     0,   224,   225,     0,   226,   227,     0,
       0,     0,     0,   230,   231,   232,  4791,   234,   235,     0,
     236,   237,     0,   238,   239,     0,   241,     0,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,     0,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,     0,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,  5150,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,     0,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
    4792,   298,   299,   300,   301,   302,     0,     0,     0,     0,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,     0,   316,     0,     0,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,  4793,     0,
     324,     0,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,     0,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,  4794,     0,     0,   336,     0,
     337,     0,     0,     0,   339,     0,     0,   340,  4795,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
    -408,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,     0,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,  4796,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,     0,     0,     0,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,     0,   454,  -408,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,     0,     0,   464,   465,     0,   466,
     467,   468,  4797,   469,     0,     0,     0,   471,   472,   473,
       0,   474,     0,   475,   476,     0,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,     0,     0,     0,   489,     0,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,     0,   506,   507,
     508,   509,     0,     0,     0,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,     0,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,     0,
       0,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,  -408,     0,     0,     0,   558,   559,
     560,     0,   561,     0,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,     0,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,     0,     0,   208,
     209,   210,   211,   212,   213,     0,  -453,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,     0,     0,     0,     0,   223,  4790,     0,
     224,   225,     0,   226,   227,     0,     0,     0,     0,   230,
     231,   232,  4791,   234,   235,     0,   236,   237,     0,   238,
     239,     0,   241,     0,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,     0,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,     0,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,  -427,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,     0,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,  4792,   298,   299,   300,
     301,   302,     0,     0,     0,     0,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,     0,
     316,     0,     0,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,  4793,     0,   324,     0,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,     0,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,  4794,     0,     0,   336,     0,   337,     0,     0,     0,
     339,     0,     0,   340,  4795,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,  -408,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,     0,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,  4796,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,     0,     0,     0,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,     0,   454,  -408,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
       0,     0,   464,   465,     0,   466,   467,   468,  4797,   469,
       0,     0,     0,   471,   472,   473,     0,   474,     0,   475,
     476,     0,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,     0,     0,     0,   489,     0,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,     0,   506,   507,   508,   509,     0,     0,
       0,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,     0,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,     0,     0,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
    -408,     0,     0,     0,   558,   559,   560,     0,   561,     0,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
       0,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,     0,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,     0,     0,   208,   209,   210,   211,   212,
     213,     0,  -453,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,     0,
       0,     0,     0,   223,  4790,     0,   224,   225,     0,   226,
     227,     0,     0,     0,     0,   230,   231,   232,  4791,   234,
     235,     0,   236,   237,     0,   238,   239,     0,   241,     0,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,     0,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,     0,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,     0,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
       0,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,  4792,   298,   299,   300,   301,   302,     0,     0,
       0,     0,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,     0,   316,     0,     0,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
    4793,     0,   324,     0,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,  4794,     0,     0,
     336,     0,   337,     0,     0,     0,   339,     0,     0,   340,
    4795,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,  -408,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,     0,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,  4796,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,     0,     0,     0,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,     0,   454,  -408,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,     0,     0,   464,   465,
       0,   466,   467,   468,  4797,   469,     0,     0,     0,   471,
     472,   473,     0,   474,     0,   475,   476,     0,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,     0,     0,     0,
     489,     0,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,     0,
     506,   507,   508,   509,     0,     0,     0,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
       0,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,     0,     0,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,  -408,     0,     0,     0,
     558,   559,   560,     0,   561,     0,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,     0,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,     0,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -453,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4790,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4791,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
       0,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4792,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4793,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4794,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4795,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -408,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4796,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -408,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4797,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,  5048,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -408,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,     0,     0,   208,   209,   210,
     211,   212,   213,     0,     0,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,     0,     0,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,     0,     0,     0,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,     0,
     241,     0,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,     0,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,     0,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,     0,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,     0,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,     0,     0,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,     0,   316,     0,
       0,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,     0,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,     0,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,     0,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,     0,     0,     0,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,     0,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
       0,   471,   472,   473,     0,   474,     0,   475,   476,     0,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,     0,
       0,     0,   489,     0,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,     0,   506,   507,   508,   509,     0,     0,     0,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,     0,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,     0,     0,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,     0,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,     0,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624
};

static const yytype_int16 yycheck[] =
{
       6,    57,    43,     0,   788,   801,  1033,   950,     0,    15,
       0,  1023,    18,  1178,  1034,  1127,    22,  1027,  1081,  1178,
    1509,   929,   930,   705,   114,    31,    21,   114,  1016,  1025,
    1305,  1998,    38,     6,  2556,    41,  1100,  1101,    96,  2792,
      46,   949,  1638,    49,    39,  1669,  2134,    53,    43,    55,
    1963,  2558,  2041,  1269,  1047,   992,    60,  2434,  1269,    60,
    2431,    43,  2236,  2237,  2308,  1129,  1120,  2194,  1583,  2875,
    1963,    63,  1230,    63,    59,  1350,    22,  1141,  1142,  1143,
    2657,  1018,  3004,  1147,  1853,  1854,  1988,  1047,  1603,  1583,
      96,    19,  1861,  1862,  1863,   666,  2681,  1403,  2268,  2269,
    1557,  2467,    30,    49,  1351,  2471,  1621,    35,  3054,  2735,
    3559,   652,   653,  2265,  2054,  1585,  2268,  2269,  3032,  1589,
    1426,  3559,  1186,  1557,  2077,  3417,    21,   119,  2216,  1557,
    3465,  2247,  1935,  1603,  2711,  1010,  2275,  2036,  2117,  2041,
     146,  3579,  3580,  2626,    39,  1615,  2434,  2689,   638,   639,
    2434,  3337,  2434,  2289,   119,  2442,  2135,   947,  4144,  3108,
    3108,  3656,  2141,  1568,  4240,  2250,    21,  4110,  2147,   175,
      52,   177,    35,    22,   180,   181,   182,   183,    21,  2805,
    2278,    11,  1093,  1094,  1095,  2321,  2322,     5,    21,    18,
      19,   197,  2552,  1104,    73,   125,     9,   156,    19,    21,
     146,    21,   773,   774,   177,   776,    68,   180,   156,  2835,
    2836,  1274,   162,  2698,    73,   194,    29,   194,   789,  1085,
    1086,    34,    18,    19,  1135,   125,  2597,  1138,    18,    19,
      18,    19,   125,    21,    48,   144,    31,   183,    18,    19,
     158,   176,    23,    18,    19,   197,  1157,  1158,    18,    19,
    1161,   197,   156,    18,    19,    48,   156,   246,    18,    19,
      71,    73,   156,    71,   125,  1202,    73,    77,  1179,  1180,
     111,   230,   194,  1184,  1185,   163,    73,    18,    19,  2431,
      61,    62,   131,  2211,   150,  3924,  1070,   231,   259,    21,
      18,    19,   160,   125,  1357,   156,   130,   125,  1703,   327,
      73,   158,    52,    71,  2725,   150,  2609,    39,    67,   194,
     160,    43,  2683,  3532,  3533,   275,   249,  3536,   373,  2407,
     659,   103,   111,   156,   156,   156,    65,  4031,   197,  2417,
      44,   501,    18,    19,   162,  3554,   456,   103,  4318,   473,
    2458,  2459,  2460,   465,  2970,  4221,    18,    19,   231,   222,
     572,   204,    18,    19,   373,   209,  2474,   156,    18,    19,
     433,   246,  2290,   285,  2292,    21,    35,    85,    62,   156,
      18,    19,   407,  2301,   258,   380,   407,   246,   125,   278,
     193,  2499,   276,    39,   572,  2503,    18,    19,   231,   194,
     572,  2319,    12,    64,   235,    18,    19,   128,  3000,  2820,
     285,  2519,  2520,    40,   372,    23,    21,  2525,    37,  1405,
     156,  4084,  2340,  3464,     9,    13,  2344,    35,    22,   654,
     503,    13,   612,  2541,  2542,   198,  3372,   635,   282,  1425,
     109,    49,  2550,   637,  1116,    59,  4553,   197,   186,   681,
      13,   246,  1226,    61,    62,  2597,   212,   156,  1130,  3045,
     692,   367,   262,   433,   813,   814,   815,   156,   401,   818,
     819,  1257,  1258,   822,   197,   824,   825,   826,  4411,   197,
     537,   293,   543,    43,   454,  1383,   176,   235,    65,  4025,
     285,    78,    18,    19,   235,    23,  1394,    18,    19,  1477,
     572,   754,    21,   174,   429,   758,  4613,    35,   245,   130,
     416,  2867,    86,   239,   571,    37,  3841,   450,   194,  3728,
     194,    49,   263,   249,  4060,   235,   496,   256,   266,   709,
     150,   105,   193,    61,    62,   760,   609,   131,   130,  2617,
    1518,  2683,  2909,   755,    19,  3131,  3359,  3360,  1534,  1535,
     899,   156,   140,  1084,   372,    74,  3369,  3370,   140,  1345,
     194,   759,   176,   624,    70,   759,   180,   194,   387,  3144,
      70,   390,   293,  3085,   637,  1055,   754,   140,    18,    19,
     194,   433,  3366,   456,   190,   293,   758,   276,   389,   192,
      65,   389,  2698,   482,    18,    19,   404,   471,   470,   759,
     219,   186,    18,    19,  4043,  2722,  2723,   387,  2686,   387,
     390,   285,   390,   369,   572,    18,    19,   387,   728,  2975,
     390,   433,   387,   456,   361,   390,  4492,   387,   231,  2547,
     390,   389,   387,  1194,   659,   390,   760,   387,   659,   547,
     390,   160,   638,   639,   502,  4621,  3928,   759,   643,   241,
     646,   355,   648,  1016,   498,   378,   387,   316,    81,   390,
     493,  1567,   502,  1569,  1570,  4598,  4599,   393,   511,   387,
    4364,   276,   390,  1234,  2653,   285,   181,  3033,  1584,   256,
     543,  1587,  1588,   493,  1590,   635,   465,  1593,  1594,  1595,
    1596,   652,  2985,  1254,  1600,   689,  1750,   219,   689,  1605,
     547,   746,   638,   639,  1610,  1611,  1612,  1613,  1614,   705,
     609,   387,  1618,  1619,   390,  4685,   235,   331,  1624,  1625,
    1626,  1627,  1928,  1629,  1630,   387,  1632,  1928,   390,  1635,
     470,   387,  1938,   566,   390,  2714,   754,   387,  1792,   429,
     390,  3108,  3317,   583,   263,  4721,    18,    19,  3109,   387,
     759,   635,   390,   631,   572,  2712,   566,   418,  1087,   699,
     694,  2653,   511,  4392,   536,   387,   563,  3264,   390,  3266,
     572,  2276,   583,  2278,   387,  2881,   563,   390,   634,  3013,
     759,   256,   778,   388,   780,   609,  2689,   620,   365,   785,
     759,  4000,   759,  1273,   465,   777,   401,   777,   583,   634,
     563,  4010,  2561,  2250,   637,  1661,  2689,  2600,   757,  4018,
     620,  2940,  1866,  2942,  2110,   429,   647,   759,  2114,   757,
     816,   759,  2714,  2119,   553,   821,  2250,   637,  3444,   648,
     601,   643,  2250,   637,   759,  1736,   759,    18,    19,   759,
     723,   661,  4051,   755,   892,  1325,    18,    19,    18,    19,
     615,   759,  2148,  2149,   637,  1335,   656,   657,  2946,  2445,
     759,   387,   648,   757,   390,   759,   387,   757,   648,   390,
     648,    18,    19,   757,  4940,   871,  1732,  3493,   648,  4855,
     755,   877,  2812,   648,  3359,   754,  1864,   759,   648,    18,
      19,  2809,  3459,   648,  4827,   891,   892,  2208,   648,  2210,
     759,   754,   760,  1804,  3254,   754,   757,  1808,   760,  2827,
    2828,  2829,  2830,   993,   759,   754,   993,   648,  3959,   950,
    3512,   754,  2879,   613,   920,    18,    19,  1276,  4413,  1830,
     648,   739,   740,   929,   757,   757,   757,  3873,   759,   623,
     696,   937,   938,   604,   754,   764,   635,   387,  1028,   934,
     390,  1028,  4615,   572,   755,    18,    19,   755,   535,   628,
     755,  3757,   947,   387,   960,   961,   390,  3109,   757,   717,
     759,   387,   648,   969,   390,   947,   553,   755,  2425,   759,
     757,   759,   759,  3575,   387,   755,   648,   390,   609,   759,
    1038,  1354,   648,   601,   759,   755,  2914,   755,   648,   759,
     755,  2425,   998,   637,   986,   755,   986,  2425,   595,  2062,
     648,   614,   994,  4441,   634,  3132,  3427,   609,  1014,  3430,
      77,   757,  5088,   759,   960,   828,   648,  1023,   759,   755,
     635,  3106,  1080,   704,   705,   648,   759,   543,  1034,   994,
    2435,   759,  1038,   543,  1040,  1041,  1033,  1043,  2662,   575,
     572,  1033,  1048,  1033,   660,  1051,  1052,  4233,   757,  1055,
     759,  3874,  3170,   144,   583,   488,  1062,   644,   757,   759,
    3686,  5137,   138,   601,  3986,  1071,  1072,  1073,   553,   755,
    1076,   755,   191,  1079,  1080,   888,  1082,  1083,   373,  1052,
      47,   894,  3200,   755,  3202,  3859,  1081,   759,   626,  3333,
      77,    87,  1148,   759,   402,   755,  3890,  3891,  3216,   759,
    3218,   484,    25,   566,  1477,   387,   176,   755,   390,  1055,
    1116,   759,   648,  1203,  4028,  3233,  1203,   648,  5104,   378,
    1802,    18,    19,   755,  1130,   276,   388,   759,   158,  2192,
     388,   646,   755,   216,  1126,   759,  1126,   456,  3066,   641,
    3068,  3069,   757,  2051,  3072,  3073,  4833,  2167,   125,   377,
     367,   964,   228,   372,  3082,  3083,    18,    19,   243,  3087,
    2325,  1702,  3090,   615,    33,  3093,  2325,  4116,  4116,   122,
    3796,   276,  1178,  1714,  2663,  1231,  1232,    18,    19,  1235,
     263,   374,  1238,  1239,  1240,    18,    19,  1243,  1244,  1245,
    1246,  1247,  1248,  1249,  1250,   262,   387,   282,   648,   390,
     449,   747,   934,  1209,   122,   387,  1212,   387,   390,   755,
     390,    13,    18,    19,   648,   947,   754,   962,  2434,  3506,
    3507,   487,   648,  2434,  2236,  2237,    18,    19,   759,  1233,
     387,   480,  1233,   390,   219,   648,  1294,   388,    18,    19,
      18,    19,    18,    19,    22,   168,   160,  1253,   387,   216,
     285,   390,    18,    19,  1260,  1261,  1262,  1263,  3394,  1265,
    1266,  1267,    71,   778,  1270,  1271,  1272,  1273,  2184,  1275,
     188,    18,    19,  1279,  3859,   262,    18,    19,   934,  1274,
    3906,  1963,  2072,   388,   387,  1291,  4724,   390,  1294,  1262,
    2080,  1349,   485,  1266,   413,  2091,  1302,  1270,   680,  1305,
     160,  3927,  3429,  1309,  1310,   755,  3433,   759,  1366,   759,
    3687,  1306,    18,    19,   387,  3941,  3119,   390,  1324,  1325,
    3946,  2810,   204,   100,   583,   759,  3868,  1273,  1334,  1335,
     200,  1337,  1338,   759,   194,    18,    19,   290,   140,  2214,
     370,  1912,  3458,  1349,  1350,   603,   759,  3830,  4567,  1081,
    4569,  3154,  1358,   131,  1395,   122,   871,  2273,  3497,   429,
    1366,  2636,  1357,  2356,  2357,    57,   648,  5054,   750,  3613,
    3614,   754,   290,    18,    19,  1381,   292,   947,  1324,  1325,
     249,   380,  2598,  1389,  2300,  3352,  2633,  2598,  1334,  1335,
     179,  1337,    18,    19,  4832,   372,  2356,  2357,  1404,  3687,
    1395,  2317,   237,  3687,  3371,  3687,   275,  4742,  3307,   728,
     501,  1306,   123,  1395,   929,  1473,   353,  2692,   220,  2577,
     373,   188,   937,   938,   158,  1081,  2490,  3406,  3407,    18,
      19,  2946,   428,  1491,   153,  2351,  2352,  2952,  3391,  3379,
    3380,  3037,   141,  2359,  2691,   164,   754,  1453,  1454,  3348,
      18,    19,   603,  2517,  1944,   373,    52,   648,  4232,  4373,
     755,   238,  1468,  2769,  4756,  1278,   648,  1473,   648,  2790,
    2582,  2583,  3461,   755,  2780,  2781,  4229,   759,  2784,  1485,
     316,   258,  3903,  3904,  3412,  1491,    18,    19,  3428,    21,
     387,   648,  3261,   390,   271,   583,  3265,   759,   603,  1014,
     759,    77,  3192,   237,  1510,   724,  4944,    18,    19,   648,
    3931,  3932,  2083,   730,  3684,  3685,  3937,   547,  3939,   486,
    3035,  3036,  4971,   290,  2440,   387,  1041,   243,   390,   287,
    1522,   759,  3684,  3685,  1540,   370,   247,  1543,  2592,   455,
    1532,  3035,  1274,   613,  2556,   648,   387,  4493,   566,   390,
     420,    18,    19,   122,   387,  2096,  3181,   390,   370,  3461,
     112,    18,    19,   115,   755,   243,  3036,  1312,   759,  3194,
     637,   606,  1931,   442,  1306,   648,   422,   759,   355,   759,
     389,   387,   158,   372,   390,   592,  3389,   572,   502,   656,
     657,   501,   350,  3970,   122,   387,   293,  4885,   390,   653,
     630,  1642,   759,   635,   755,   592,   373,   387,   615,   387,
     390,   387,   390,   484,   390,    18,    19,   999,  1274,   188,
     759,   387,    18,    19,   390,  1357,   231,   255,   615,   511,
      18,    19,  4554,  3148,   369,  4001,   370,   369,  2549,    21,
     387,   594,   502,   390,   643,   387,   345,  4232,   390,  3106,
    1306,   333,  2715,  2716,  2717,  4461,   759,  1663,  1664,  2655,
    1645,   237,   125,  1395,    18,    19,   197,   386,  4039,   656,
     657,   759,  3106,  1679,  3477,   511,   594,   369,  3106,  4794,
    4795,   387,  3800,   572,   390,  5123,   759,  4194,   293,  4761,
      13,  3619,  4764,  2909,   639,  3319,   566,   198,  2909,   162,
     477,  1357,  4049,   585,   387,  4052,  1712,   390,    71,  1715,
    1716,  1717,   547,   448,    18,    19,   626,   401,  1664,  1725,
     636,   290,   138,   583,   435,   527,   528,   759,   530,   531,
     532,    18,    19,  1679,   316,   547,   433,    53,  1253,  4116,
     586,   179,   387,  1716,  1717,   390,  3067,   549,    64,  3070,
    3071,   648,  1267,  3074,  3075,  3076,  3077,  3078,  3079,  3080,
    3081,   387,   290,  3084,   390,  3086,  1712,  3088,   139,  4691,
     754,  3092,   549,   369,   156,  5063,  5064,   714,   715,   716,
    2776,    18,    19,    18,    19,   543,   648,  1302,   364,    18,
      19,    18,    19,   572,   370,   630,  1802,  1803,   387,  3602,
     589,   390,   165,   535,   373,   433,  3933,   648,   572,   197,
     127,  2303,   228,   547,   759,   648,   605,   140,   630,   387,
    4405,   430,   390,  2315,   429,  1395,   238,   594,   397,  3045,
    3520,   186,   363,  2741,   401,  4357,  4358,    18,    19,   550,
     209,  1897,   648,    18,    19,   373,     0,   563,   356,   231,
     566,   156,   571,  2345,  1910,   387,   648,  1913,   390,   271,
    3550,  3551,   759,   439,  1870,   754,  3669,  4288,   648,  4290,
     648,  3799,   648,   482,   470,   457,   387,   401,    23,   390,
    4952,  2373,   648,  1887,    18,    19,  1887,  4039,   570,  1404,
      35,  3516,  3108,   755,    18,    19,   630,  3108,  1890,   400,
    1890,   648,    18,    19,    49,   501,   648,  1911,   572,   372,
    1911,   266,  1918,   282,   596,  3131,    61,    62,   759,    21,
     387,  1927,   755,   390,  3549,   239,  3915,   167,   366,   367,
     387,   248,  3557,   390,   372,   249,  5051,  5052,  1944,  3564,
     194,   572,   648,   572,  4114,  4115,   643,   563,  2006,  2007,
     566,    18,    19,   759,   733,  3868,  1962,  1963,  1964,   197,
     200,   332,  4114,  4115,  4330,   648,   282,   759,  3957,  3958,
    1485,   547,    77,  1979,  3963,  3868,   415,  1983,   755,   759,
    2896,  1927,    11,   759,   387,  1991,  4333,   390,  1994,  2560,
     754,   387,    33,   759,   390,  1510,  2002,   564,  1944,   387,
    2006,  2007,   390,   648,   125,  4132,   608,  2689,  2579,   510,
    2581,   249,   759,  3915,   369,   572,  1962,   759,   139,   401,
      18,    19,   648,   599,   576,   594,   389,   579,  1543,    26,
    2036,   285,  2038,   387,  2040,   127,   390,  3312,   128,  2040,
     564,  3810,  2048,  3812,  2102,  1991,  4164,    71,  1994,   748,
     749,   750,   751,   759,   630,  3957,  3958,  2115,  2064,   648,
     282,  3963,   103,   141,   572,   477,   594,  2062,  4645,   733,
    2065,  3134,   755,   682,   456,  3350,  3292,  2072,   615,   393,
     648,   122,   615,   387,   160,  2080,   390,    84,   548,   597,
    2072,  2097,  2098,  2099,  2100,  2101,  2102,  2103,  2080,   249,
     387,   203,   733,   390,   733,  2111,   615,  2113,  3704,  2115,
     755,   493,  2118,  4534,  4636,   447,   648,   637,  4031,  2219,
     235,  3279,   272,  3398,  2097,  2098,  2099,    13,  2101,   498,
     220,  3047,   237,   759,    18,    19,   564,   648,   167,   637,
    2113,   165,  2242,   216,  4770,  2118,  4059,   188,   263,   371,
     387,   589,   387,   390,  2100,   390,   248,  2103,   387,   681,
     387,   390,  2166,   390,  4291,  2166,   755,   605,   637,   629,
     692,   200,  3337,   125,   212,  3334,   733,   668,  3337,   670,
     420,   648,    18,    19,   566,  4273,  2227,   755,    13,  2195,
     263,   648,    18,    19,    18,    19,   148,  2192,  3114,  3115,
    3116,  3117,   534,   293,   245,   681,   387,    64,  4730,   390,
    3274,   332,   387,  2219,  2255,   390,   692,    74,   755,  3156,
     258,  3845,   759,  2229,   160,     9,   759,   760,   212,  4218,
    2236,  2237,    89,    18,    19,   187,  2242,   493,   620,   759,
     237,  2247,    18,    19,   755,   648,  2247,    31,  3359,   290,
     759,   760,   648,   387,   140,   637,   390,  3368,  2299,   364,
     648,   759,   230,   387,  2270,   370,   390,   345,  4512,  2275,
    4514,   387,    18,    19,   390,  2281,  2282,  2283,  2284,  2285,
    2286,  2287,    18,    19,   653,  2291,   401,  2293,   755,   141,
     759,    18,    19,   533,   648,  3288,  2242,  2303,   755,  2305,
    2306,   493,  2308,   672,  2310,  2311,  3465,  2313,  2314,  2315,
     566,   681,    18,    19,  2320,   140,  4218,  2323,  3314,  2325,
     387,  4947,   692,   390,  2330,   754,   323,  2333,  2334,  3289,
    2062,   760,   373,  2065,   439,    18,    19,  2343,   277,  2345,
    2072,   280,   212,  2349,   648,   754,  4717,   587,  2080,  2277,
     388,   760,   755,  4601,   167,  1870,   397,  2363,  4606,   755,
    2288,   648,    18,    19,   620,   389,  2294,  2373,  2374,   125,
      18,    19,   754,   370,   566,   757,  1522,   759,   235,   127,
    2438,   637,   138,    19,    18,    19,  1532,   509,  2334,   387,
     137,   420,   390,   754,    18,    19,  2324,  4768,  4769,   583,
    2328,   755,   234,   235,  4926,   152,  2062,  2335,  2336,  2065,
     747,   648,   760,   648,    18,    19,    35,  2363,   755,   648,
    2426,   648,    18,    19,  2430,  3590,   504,   505,   620,   261,
    5183,  3590,  2438,   563,    18,    19,   566,   300,   301,  2495,
    2446,  2447,   547,    62,   185,    18,    19,    18,    19,  1964,
    2465,   755,    21,  2445,    18,    19,   601,  2472,    18,    19,
    2192,  2467,   755,    21,   230,  2471,   759,   648,   755,  2961,
    4718,  3687,   228,   648,  2447,  3990,  3687,   622,   623,    48,
    2426,  4409,   612,    19,  2430,   607,   194,  2002,    18,    19,
      48,   430,  4666,   345,   599,    18,    19,  3665,   754,    80,
     137,    82,  2072,   387,   533,   141,   390,   235,   849,  3001,
    2080,   852,  3680,    19,   648,   152,   857,  3009,   755,    38,
     755,   862,  3014,   212,   648,   630,   755,    46,   755,   651,
     122,   108,   648,  2048,    18,    19,  2192,   456,   246,    18,
      19,  4137,    32,   755,   125,  2603,  2552,   759,  4476,  2064,
     547,   387,   718,   594,   390,    18,    19,   227,   587,   229,
    2947,   387,   754,   387,   390,  4717,   390,   148,    18,    19,
    2957,  2958,   738,   623,   755,  4053,   626,   285,  4056,  4057,
     755,   648,   445,   446,   564,   751,   752,  2593,  2594,    79,
     167,    61,    62,  2585,  3869,  2585,   188,  2603,   212,    61,
      62,    71,   387,   755,  2610,   390,   187,   759,  3720,    71,
    3916,   387,   366,   367,   390,   755,  4768,  4769,   235,   759,
    2626,   755,    84,   200,   566,  2631,   197,   219,   122,  2635,
    2636,   755,  4512,   630,  4514,   141,    64,    21,  2465,  3751,
    3752,   387,   320,   321,   390,  2472,    74,   325,   326,    12,
     648,   387,   504,   505,   390,   754,   697,   572,   755,  2665,
     387,    89,   759,   390,   154,  3777,  2672,  2673,   746,   747,
     748,   749,   750,   751,   975,   976,   759,   978,   760,   980,
    2195,   755,  3841,  2689,   754,   759,  2692,   755,   755,  2681,
     754,   759,  2698,  2697,   188,   754,  2697,  2698,   290,  3763,
     212,   755,   493,  2744,   387,   759,  2698,   390,  2698,   345,
    3281,   755,   754,  4482,  2229,   759,   100,  3705,   754,  2665,
    2715,  2716,  2717,    61,    62,   219,  2672,  2673,   141,   108,
     717,   387,   755,   227,   390,   229,   759,   754,  3758,   387,
    4255,  4256,   390,   656,   657,  2751,  2802,   197,  2804,  2744,
    3666,  3667,   754,   387,  3970,  3819,   390,   755,   754,  3970,
     754,  4689,  2744,   387,   648,   193,   390,   755,   564,   755,
     755,   759,   156,   759,   759,   566,  2782,  2783,  4745,   212,
     755,   373,    26,   387,   759,   122,   390,   754,  2794,   122,
      26,   387,   125,  2799,   390,   754,   290,   754,  2313,  4120,
    4121,  4122,  4123,   387,  3972,   754,   390,   235,   192,  3977,
     194,   755,   648,  3981,   387,   759,   387,   390,   135,   390,
     419,   755,   648,   387,   648,   759,   390,   387,   212,   620,
     390,   718,   719,   217,  2349,   263,  2782,  2783,   754,   345,
      84,    77,   221,   420,   385,   755,   637,   231,    84,   759,
     754,   188,   755,   754,   238,   188,   759,   387,   141,   440,
     390,  2867,   246,   648,   387,   481,   755,   390,   504,   505,
     759,   755,   648,   754,   258,  2881,  2882,  2883,   754,   373,
    2881,   755,   219,   100,   755,   759,   219,   271,   759,   754,
     755,   654,   276,   745,   746,   747,   748,   749,   750,   751,
    4116,   285,   648,   387,   637,  4116,   390,   640,   387,   150,
     151,   390,   648,  3909,   158,   197,   755,   754,  3914,   755,
     759,   648,   158,   754,   387,   415,   754,   390,   381,   755,
    2936,   755,   345,   754,  2940,   754,  2942,   387,   493,  4214,
     390,   177,  2948,  2338,  2339,   755,  2952,   437,   184,   759,
    3858,   754,  2467,   290,   754,  2961,  2471,   290,  2964,    21,
    2356,  2357,   755,   754,  4239,   648,   759,  4135,   755,  2975,
     755,   355,   759,   401,   755,  2981,   755,   755,   759,   755,
     759,   759,   754,  2715,  2716,  2717,  4006,   755,   478,   566,
     418,   759,   648,   237,   378,  3001,   754,  4017,   504,   505,
     648,   237,   594,  3009,   388,  1165,  1166,  3013,  3014,   755,
     587,   566,  2744,   755,   648,   394,   755,   759,   755,   755,
     759,   238,   759,  3029,   648,   404,  3032,  3033,   755,    77,
     755,   754,   411,   755,   759,   612,   373,   759,   100,   120,
     373,   258,   755,   755,   648,    93,   759,   759,   563,   539,
     754,   628,   648,   754,   271,  5141,  5142,  3063,    59,  2715,
    2716,  2717,   345,   754,   648,   620,   621,  3157,  4233,  4228,
    3157,   378,   755,   754,  4233,   648,   755,   648,   754,   323,
     759,   754,   637,  3029,   648,  3091,   134,   323,   648,  2145,
    2146,   575,   755,   477,   156,  2610,   759,   755,   755,   755,
     594,   759,   759,   754,  3110,   697,   122,   755,   744,   745,
     746,   747,   748,   749,   750,   751,   755,   501,   648,   754,
     759,   755,   754,   754,   754,   648,   370,  3133,   364,   755,
     103,   755,   194,   759,   370,   231,   515,  3143,   355,  3134,
    3146,   754,  3148,   755,   755,   226,   754,   759,   759,   122,
     212,   755,  3144,   755,   194,   217,  3148,   759,  3148,   755,
     754,  3153,  3154,   754,   648,   549,   755,  3159,   754,   648,
     759,   755,   188,   755,  2744,   176,   238,   759,    37,   180,
     754,   246,   755,   755,   246,   648,  3868,   759,   754,   754,
      77,   755,   141,   194,   194,   755,   258,  3143,   648,   754,
    3146,   241,   754,   219,   755,   754,    93,   156,   759,   271,
     667,   668,   754,   670,   276,   188,    33,   265,   197,   603,
     755,   504,   505,   285,   759,   755,  5154,   754,   754,   754,
     614,   615,   755,   612,   754,   246,   754,   754,   744,   745,
     746,   747,   748,   749,   750,   751,  5174,   754,  3254,   754,
     754,   635,    64,   637,   335,   100,   115,   594,   339,   754,
     477,   594,    74,   122,  3270,   346,     7,   754,   754,   754,
     621,  3329,   245,   122,   290,  5203,   755,    89,   754,  4299,
    4300,   754,  4302,   755,   378,    26,  4398,   759,   754,   754,
     754,   501,   755,   355,   754,   343,   754,    26,   754,  4309,
    4310,  3307,   754,   547,   501,  3311,  3312,   754,   754,   754,
      21,   547,  3318,   754,   698,   754,   378,   290,   366,   367,
     179,   369,   754,  3329,   141,  3317,   388,  3333,  3334,   188,
     331,  3337,   549,   746,   747,   748,   749,   750,   751,   188,
     754,   212,  3348,    84,  3350,  3337,   427,  3337,    77,   754,
     754,   760,  2867,  3359,  3360,    84,   759,   373,  3359,  3360,
     219,    13,  3368,  3369,  3370,   760,  3422,  3368,  3369,  3370,
     219,   755,  3318,   757,  4863,   759,   493,   754,   265,   759,
     764,   193,   754,   431,   501,   759,   630,   199,    77,   100,
      96,    43,  3398,   238,   630,   760,   345,    12,   754,    48,
     373,   156,  3134,   144,   156,   197,   111,   755,   757,  3415,
     491,  3417,   754,   258,   758,   477,   456,   612,   249,    48,
     276,  2936,   111,   235,   397,   293,   271,   160,   429,   384,
      21,   290,   249,   171,   533,   519,    27,   193,   709,   501,
       7,   290,    94,    71,    13,   156,    98,   634,   177,   566,
     755,   263,  3458,   493,  3460,   184,   343,  3458,   275,  3465,
    2975,   744,   745,   746,   747,   748,   749,   750,   751,   158,
     755,   122,   755,    64,   125,   140,    10,   755,  3134,   481,
      71,   141,   369,   194,    75,   533,    77,   549,   760,   759,
     755,  3497,   755,   108,   755,  4491,   237,   356,    89,  3505,
     755,   212,   755,   620,   621,   755,   217,   502,   237,   368,
     355,   754,   127,   372,   373,   300,   301,  3032,  3033,  4539,
     637,  4541,  4542,   667,   373,   100,   566,   238,   345,   275,
     378,   709,   615,   378,   125,   246,   563,   188,   516,   759,
      50,   603,   282,    30,   431,   287,   235,   258,  4568,   366,
     367,   632,   759,   615,  4903,   504,   505,   583,   759,   759,
     271,   487,   564,    71,    37,   276,   733,   569,   219,   650,
     273,  3577,    27,   635,   285,   637,   572,   759,   594,   759,
     620,   658,   323,  4742,  3590,   200,   758,  3593,  3594,   401,
     141,   759,   166,   754,   323,  3110,   760,   637,   194,   543,
     563,   253,   166,   543,   287,  4548,   418,  3613,  3614,    64,
     612,  3617,   203,   157,   759,   194,    71,    88,  3133,   759,
      75,   594,    77,    21,  4636,   442,   628,   759,   243,   370,
     379,   559,   477,   322,    89,   364,   698,   754,   646,   290,
    4556,   370,   115,   136,   355,   156,   533,  3653,   755,   122,
    3656,   340,   654,   729,  4666,    48,   654,   141,   729,  3665,
     445,   446,   637,   238,   160,   160,   160,   378,   160,   160,
     125,   286,   263,   522,  3680,   364,  3682,   388,   160,   759,
     332,   160,   160,   258,   404,   345,   572,   504,   505,   759,
    5039,    87,   754,   755,  3700,   757,   271,   759,   503,   141,
     517,   125,   764,  3709,   549,   369,   179,   519,   186,   316,
     451,  4507,     7,   572,   754,   188,   754,   576,  4730,   110,
     579,   583,   373,   201,   697,   158,   401,    74,   401,   401,
     589,  4843,   583,   136,   261,   594,   214,  4680,   597,   524,
     525,   526,   261,   401,   396,   594,   219,   136,   401,  5098,
     619,  5100,    48,   401,  3700,   401,  4672,   401,   401,  4675,
    4676,  4677,  4678,   710,   619,   249,   477,  5116,   759,   759,
     615,   501,   754,   141,   492,   366,   367,   754,   628,   755,
     355,   372,   122,   610,    57,   125,  4849,   378,   266,   267,
     501,   759,   604,   448,   345,   744,   745,   746,   747,   748,
     749,   750,   751,   378,   171,   420,   547,   378,   263,     7,
     122,   717,  4924,   125,   111,   378,   294,   290,   547,  5168,
    5169,   614,     7,   228,  3830,   592,   200,   418,   755,   759,
      64,   755,   755,   755,   755,  3841,    56,   755,   549,   755,
      74,  4757,   197,   141,   504,   505,    66,   122,   188,   747,
    4766,  4767,   755,   754,    15,    89,    76,   759,   547,  4775,
      21,   345,  3868,  3869,   755,   755,   518,  3859,  3874,   690,
      90,    91,    92,  3874,   755,   564,   188,   755,    39,   219,
     755,   249,    43,   356,   499,   363,   106,   746,   747,   630,
     755,   755,   603,   759,   755,   754,    57,    58,   755,   372,
     373,   630,   477,   345,   615,   722,   497,   219,   560,    12,
     192,   366,   367,   188,  4926,   759,   754,   372,   760,   760,
     760,   751,  3928,   378,   635,   754,   637,   744,   745,   746,
     747,   748,   749,   750,   751,   754,   759,   755,   760,   417,
     378,   287,   758,   594,   219,   759,  5111,   160,   287,   564,
     290,   566,  5111,   504,   505,  3996,   547,   287,  3184,   193,
    3186,   287,   287,   418,   287,   199,  3972,   583,  3974,   759,
    5135,  3977,   759,   635,   549,  3981,  5135,   345,   290,   236,
     759,   759,   759,   583,  3990,   600,   401,   698,   583,    13,
     759,   160,   210,  5158,   378,  4001,   197,   612,   197,  5158,
     583,   235,   583,    35,   255,   108,   458,   459,   460,   461,
     462,   463,   464,   604,   433,   290,  4959,  5182,  4024,   456,
     504,   505,  4028,  5182,   127,    35,   194,   249,   760,   263,
     561,    64,   760,   373,   760,   760,   760,  5057,   759,   748,
     615,    74,   497,   252,   755,   181,   757,   345,   759,  4833,
     194,   759,  4420,   764,   514,    60,    89,  4425,  4064,  4065,
     755,   373,   504,   505,   405,   759,   194,   402,   761,   572,
      35,   404,   404,   572,   572,   160,   126,   669,  4024,  4085,
     342,   759,   263,   760,   744,   745,   746,   747,   748,   749,
     750,   751,   547,   708,   598,   755,   199,    62,   373,   572,
     478,    21,   403,   576,  4110,   263,   579,    27,    28,   263,
     707,   378,  4085,    21,   334,   706,   589,   754,  4064,    27,
      28,   594,   249,   673,   597,   673,   158,   709,   642,  4135,
     162,   351,   235,   160,   160,   160,   504,   505,   160,   730,
     160,  4147,   160,    63,   160,  4137,   160,   112,   158,   604,
     115,   160,   162,  5180,   160,    63,   160,    77,   123,   160,
     193,   160,   160,    83,    84,   160,   160,    87,   160,    77,
     202,   160,   160,   160,   160,    83,    84,   142,  4546,    87,
     160,   160,  4550,   286,   418,   160,   160,   160,   160,   160,
     222,   111,   202,   744,   745,   746,   747,   748,   749,   750,
     751,  4147,   235,   111,   755,   125,   504,   505,  4214,   129,
     160,   160,   222,   160,  4220,   160,   160,   125,   160,   160,
     160,   129,  4228,  5019,   189,   286,   654,  4233,  4234,   465,
     263,   378,   754,  4239,  4602,   755,   156,   154,   158,  4607,
    4232,   759,   755,   245,   760,   245,   755,   583,   156,   755,
     158,   706,   472,  5161,   594,   287,   572,   572,   755,  4265,
     744,   745,   746,   747,   748,   749,   750,   751,   572,   489,
    5054,  4277,   755,   746,   747,   730,   655,   287,   755,   108,
     760,   754,   594,   583,   760,   519,   760,   390,  3514,  3515,
     760,   754,   759,  3519,   385,   260,   754,   197,   754,   731,
     759,   212,   744,   745,   746,   747,   748,   749,   750,   751,
     733,   231,  4318,   755,   728,   235,  4322,  5113,   433,   594,
     197,   755,   242,   231,  4330,   615,   428,   235,   759,  3555,
     156,   551,   754,   336,   242,  3561,  3562,  3563,   167,   555,
    3566,   754,   262,   754,    12,   493,   404,   456,   568,   404,
     160,   383,   406,   501,   262,   275,    73,   759,   533,   533,
     533,   533,   533,   492,   754,   378,  5162,  4373,   263,   263,
     604,   200,   754,   383,   615,   592,   744,   745,   746,   747,
     748,   749,   750,   751,   367,   418,   759,   419,   564,   354,
    5174,   637,   357,   759,   564,   583,   499,   583,   451,   755,
     378,   378,   322,   373,   755,  4411,   235,  4413,  4414,   419,
     759,   443,   754,  4405,   322,   212,   519,   754,   566,  5203,
     340,   473,    62,   754,   414,   754,   754,   754,   247,   247,
     754,  4489,   340,   443,  4440,   754,   468,  4919,   160,   161,
     754,   754,   721,  4449,   754,    48,   744,   745,   746,   747,
     748,   749,   750,   751,   495,   688,   755,   286,   468,   688,
     754,   564,   755,   566,   755,   285,   569,   759,   755,   755,
     435,   759,   620,   621,    12,   395,   547,   160,   759,   201,
     512,   401,   748,  4489,   404,   231,  4001,   395,   385,   637,
    4496,   643,   214,   401,   282,   754,   404,   600,   160,   197,
    4982,   604,   512,   759,   258,   666,  4512,   755,  4514,   612,
     671,   543,   755,  4028,   258,  4997,   755,   755,   755,   391,
      48,   217,   103,   373,    48,   160,   754,   754,  5010,   228,
     103,   563,   254,   543,   566,   245,   456,   160,   278,   760,
     701,   111,   111,   162,   509,   267,   754,   401,   456,   754,
    4496,   654,   730,   441,   754,   566,   717,   754,   754,   754,
     125,   125,   755,   483,   746,  4571,   583,   384,   404,   378,
     754,   378,   294,   493,   373,   483,   755,   516,   755,   401,
     637,   197,   433,   210,    21,   493,   415,  5069,   755,   755,
     755,   420,  4598,  4599,   378,   755,   269,  5079,   583,   246,
    4656,   760,  5084,   759,   755,   708,   754,   197,   258,   759,
     258,   764,   773,   774,   579,   776,   777,   258,   764,   764,
     540,   541,   542,   698,   404,   277,    48,   547,   789,   404,
      48,    56,   540,   541,   542,    48,  5118,   359,  5120,   547,
     153,    66,   607,    48,   564,    35,   566,   567,   748,  4655,
     754,    76,    35,   730,   609,   125,   564,   626,   566,   567,
    4666,   263,    64,   203,  5146,    90,    91,    92,   263,    35,
     499,   373,   754,   373,   416,   378,   373,   378,    77,  4685,
      21,   106,   760,   603,   754,   116,   117,   118,   119,   120,
     519,   755,   516,   488,   759,   603,   755,   759,   342,   755,
     620,   428,  4743,   265,   755,    48,  5188,  5189,   755,   755,
     755,  5193,   620,   755,   388,   755,   759,   637,   175,   285,
     881,   385,   210,    21,   147,   566,   755,   258,   258,   637,
      48,   754,   120,   754,   120,   564,  4742,    48,  4744,    48,
     569,   620,   388,   755,   759,  4751,  4752,   373,   368,    15,
    4756,   621,    21,    81,   511,   373,   143,   754,   587,   920,
     228,   404,   194,   759,   755,  4771,   759,   373,   342,   173,
     754,   600,    48,   934,   755,  4781,   385,   759,   263,   572,
     194,    21,   276,   612,   760,  4791,   947,   754,   637,   755,
    4796,   759,   223,   224,   225,   226,   319,   754,   674,   628,
     398,    48,   473,   149,  4801,   725,   759,   755,   609,  4801,
     637,  4801,  4868,   136,   574,  4330,   754,   725,   755,   755,
     755,  4827,   755,   754,   754,   654,   754,   754,   754,   136,
     136,   754,   158,   378,   754,   759,   755,   757,   654,   484,
     692,   679,   484,   538,   692,   692,   754,    48,    48,   757,
     535,   754,   155,   634,  4849,    32,   761,    64,  4373,   385,
      64,   555,    19,   703,   755,   482,   554,   634,   197,    32,
     385,   385,   755,  4879,   134,   143,  4882,   692,   689,   708,
     484,   228,   465,     6,    15,   378,   378,   246,   702,  4895,
     154,   757,    48,   171,   609,   130,   634,   154,   230,  1060,
     292,   757,   761,   124,   335,   703,   337,   338,   339,   334,
     231,    54,   575,   143,   757,   346,  4922,   373,   154,   754,
    1081,   575,   759,   215,   757,   501,   351,    54,  1089,  1090,
     154,   194,   194,   194,   378,   455,  4942,  1098,  1099,  1100,
    1101,  1102,  1103,   575,   636,   125,   759,   162,   378,   378,
    1111,  1112,   699,  1114,  1115,   196,  3296,  4801,  1119,  1120,
    3103,  3097,  1123,  1124,  1125,  1126,  3099,  1128,  1129,  4413,
    3101,  4416,  5028,  4705,  3094,  1136,  1137,  4409,  1139,  1140,
    1141,  1142,  1143,  3678,  4424,  1146,  1147,  1148,  1149,  1150,
    1151,  1152,  1153,  1154,  3490,  1156,   427,  1086,  1159,  1160,
    4438,  1563,  4719,  1164,  5006,  4831,  5005,  1168,  1169,  1170,
    4440,  4620,  5203,  5154,    46,  3830,  2688,   951,  4705,  5170,
    1181,  1182,  1183,  4705,  2631,  1186,  5066,  4705,  1189,  1190,
    1191,  1192,  1193,  1194,  4975,  4705,  5066,  4705,  4705,  5052,
    4705,  4705,  4705,  4705,  4705,  5001,  4705,  1208,  1209,  4705,
    4705,  5000,  3687,  2267,  2272,  1216,  3292,  1218,  1219,   490,
     491,  4116,  4794,  4795,   489,  5071,  3970,  2427,  4137,  1230,
    1231,  1232,  5078,  1234,  1235,  3154,  3153,  1238,  1239,  1240,
    3923,  4528,  1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,
    1046,  4949,  4315,  1254,  3159,  4680,  5028,  4961,  1259,  4959,
    2425,  3707,  2356,  3148,  3990,  5111,  3991,  4040,  3533,  4344,
    3566,  5117,  3565,  1274,  4043,  4971,  5122,  4849,  4743,  4684,
    4602,  3250,  4546,  4550,  4607,  5131,   551,  4558,  2948,  5135,
    2959,  1711,  4322,  4017,  3693,  4705,  2838,  3136,  4794,  4795,
    4390,  2831,  2357,   568,  2357,  1306,  2150,  2356,  1542,  2154,
     956,  3596,  5158,  2967,  2678,  3063,  1689,  1664,  2672,  3318,
    2662,  3846,    63,  2043,  2222,   921,  2591,   920,  5174,  3263,
    4902,  4903,  1209,  1918,  1858,  4654,  5182,  4636,  2472,  1130,
    5019,  4942,  4926,  4516,  5142,  2698,  5141,  4919,  5180,  2698,
    5180,  4751,  4258,  4849,  3617,  2698,  1357,  5203,  2698,  4752,
    1104,   632,  3902,  1364,   969,  4267,  1453,  4655,  3375,  4477,
    3590,  4631,  2229,  4545,    16,  1928,  2598,  1314,   649,   650,
    4236,    34,    35,  3865,  4794,  4795,  3317,    40,  1033,    42,
    1033,    44,    45,  3317,  1395,  3315,  1397,  1451,     4,  4219,
    4228,  1033,  1033,  1030,  2777,   950,  4902,  4903,  2106,    62,
    4982,  2619,  1541,  2132,  3029,    21,  2778,  2016,  3321,  4939,
    3953,  5018,  4306,  4919,  4059,  4997,  5158,  5182,  4233,  1212,
    4131,  4519,  2882,    39,  3091,  1393,  2065,  4934,  5010,    43,
    2080,    43,  2058,  2744,  1391,  2060,    39,  2665,  2826,  1450,
    2438,   906,  2439,  4638,  4486,   909,  1024,  1491,  1306,   112,
      11,    11,   115,  1086,  1353,  4950,  3696,  5039,  1469,  1086,
     123,  4134,  1086,  4075,    -1,  4433,  3607,    -1,    -1,  5051,
    5052,    -1,    -1,    -1,    -1,    -1,  4982,    -1,    -1,   142,
      -1,    -1,  4902,  4903,    -1,    -1,    -1,  5069,    -1,    -1,
      -1,  4997,    -1,    -1,    -1,    -1,   159,  5079,    -1,  4919,
      -1,    -1,  5084,    -1,  5010,    -1,    -1,    -1,  1519,    -1,
      -1,    -1,    -1,    -1,  4879,    -1,  5098,  4882,  5100,    -1,
      -1,    -1,    -1,    -1,   187,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,  5039,  5116,    -1,  5118,    -1,  5120,    -1,
      -1,    -1,   205,   206,    -1,  5051,  5052,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4922,    -1,    -1,
      -1,    -1,  4982,  5069,  5146,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5079,    -1,    -1,    -1,  4997,  5084,    -1,
      -1,    -1,    -1,    -1,   247,    -1,  5168,  5169,    -1,    -1,
    5010,    -1,  5098,    -1,  5100,    -1,    -1,   260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5188,  5189,    -1,    -1,
    5116,  5193,  5118,    -1,  5120,    -1,   279,    -1,    -1,  5039,
      -1,    -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,
      -1,  5051,  5052,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5069,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5079,
      -1,    -1,  5168,  5169,  5084,   328,   329,   330,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,  5098,    -1,
    5100,    -1,  5188,  5189,   347,   348,   349,  5193,    -1,    -1,
     671,   354,    -1,    -1,   357,    -1,  5116,    -1,  5118,    -1,
    5120,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,   376,    -1,    -1,    -1,    -1,    -1,    -1,
     701,    -1,    -1,    -1,    -1,    -1,  5146,  1738,    -1,    -1,
      -1,  1742,    -1,    -1,    -1,    -1,   717,    -1,    -1,  1750,
      -1,  1752,    -1,    -1,    -1,    -1,   409,   410,  5168,  5169,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5131,    -1,  5188,  5189,
      -1,    -1,   435,  5193,   116,   117,   118,   119,   120,    -1,
      -1,  1792,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   777,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1836,  1837,  1838,    -1,    -1,
      -1,    -1,    -1,    -1,   497,    -1,    -1,    -1,   501,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     513,    -1,    -1,    -1,    -1,  1866,    -1,    -1,    -1,    -1,
    1871,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,  1890,
      -1,   223,   224,   225,   226,    -1,  1897,    -1,    -1,    -1,
      -1,  1902,    -1,  1904,    -1,    -1,    -1,    -1,    -1,  1910,
     881,  1912,  1913,    -1,    -1,    61,    62,    63,    -1,    -1,
     573,    -1,    -1,   576,    -1,    71,   579,   580,   581,   582,
      -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   920,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,   622,
     623,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,
      -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,   335,    -1,   337,   338,   339,    -1,    -1,
      -1,    -1,   158,    -1,   346,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   387,    -1,    -1,   390,    -1,
      -1,  2062,    -1,    -1,  2065,    -1,    -1,    -1,    -1,    -1,
      -1,  2072,  2073,    -1,    -1,    -1,  2077,    -1,    -1,  2080,
      -1,    -1,  2083,    -1,    -1,    -1,    -1,    -1,    -1,   235,
      -1,  2092,    -1,    -1,    -1,   427,   242,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   759,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,  1089,  1090,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1098,  1099,    -1,
      -1,  1102,  1103,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1111,  1112,    -1,  1114,  1115,    -1,    -1,    -1,  1119,    -1,
      -1,    -1,  1123,  1124,  1125,  1126,    -1,  1128,   490,   491,
      -1,    -1,    -1,    -1,    -1,  1136,  1137,    -1,  1139,  1140,
      -1,    -1,    -1,    -1,    -1,  1146,   322,    -1,  1149,  1150,
    1151,  1152,  1153,  1154,    -1,  1156,    -1,    -1,  1159,  1160,
      -1,  2192,    -1,  1164,   340,    -1,    -1,  1168,  1169,  1170,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1181,  1182,  1183,    -1,    -1,    -1,    -1,    -1,  1189,  1190,
    1191,  1192,  1193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1208,  1209,    -1,
      -1,    -1,    -1,    -1,    -1,  1216,    -1,  1218,  1219,   395,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,    -1,
      -1,    -1,    -1,    -1,  2265,    -1,    -1,  2268,  2269,    -1,
      -1,    -1,   878,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,  1259,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   648,   649,   650,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   934,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   962,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
      -1,    -1,    -1,    -1,    -1,    -1,  2377,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1364,   540,   541,   542,    -1,    -1,    -1,
      -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,    -1,
      -1,   567,    -1,    -1,    -1,    -1,  1397,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2453,    -1,    -1,    -1,    -1,   603,    -1,    -1,
      -1,  2462,  2463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1081,    -1,    -1,    -1,  1450,
      -1,  2482,  2483,    -1,  2485,    -1,    -1,  2488,  2489,  2490,
    2491,  2492,    -1,    -1,  2495,    -1,   445,   446,  1469,    -1,
      -1,    -1,    -1,  2504,    -1,    -1,    -1,    -1,  2509,    -1,
    2511,    -1,  2513,  2514,    -1,  2516,  2517,    -1,    -1,    -1,
    2521,  2522,  2523,    -1,    -1,    -1,  2527,  2528,  2529,    -1,
    2531,    -1,  2533,    -1,  2535,    -1,  2537,    -1,  2539,    -1,
      -1,    -1,    -1,  2544,    -1,    -1,    -1,    -1,  1519,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2560,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2577,    -1,  2579,   725,
    2581,    -1,    -1,    -1,  2585,    -1,    -1,    -1,    -1,    -1,
    2591,  2592,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    14,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      50,    51,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,
      -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2667,    -1,  1274,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1306,    -1,    -1,    -1,    -1,    -1,  1312,    -1,    -1,    -1,
      -1,   121,    -1,    -1,  2715,  2716,  2717,    -1,    -1,    -1,
    1326,   131,   132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   143,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2744,    -1,    -1,   156,    -1,    -1,    -1,
      -1,  1357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     170,    -1,   711,   712,    -1,    -1,    -1,  1738,    -1,    -1,
      -1,  1742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,  1752,    -1,   732,    -1,   734,   735,   736,   737,   738,
      -1,  2792,    27,    28,    -1,    -1,    -1,    -1,   208,    -1,
     210,  2802,    -1,  2804,    -1,   215,    -1,    -1,   218,    -1,
      -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,    14,
      -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    63,    -1,
      -1,   241,    27,    28,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,  1836,  1837,  1838,    63,    -1,
      -1,   281,    -1,    -1,  2875,   285,   111,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
     125,    -1,    87,    -1,   129,    -1,    -1,    -1,    -1,    -1,
    1871,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,  1890,
      -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
     125,  1902,    -1,  1904,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,
     235,    -1,    -1,    -1,    -1,   415,    -1,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   426,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   448,    -1,
     235,   451,    -1,   453,    -1,    -1,   456,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,   467,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   476,   262,   478,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,    -1,    -1,
      -1,    -1,    -1,   493,    -1,    -1,    -1,   322,    -1,    -1,
     285,   501,    -1,    -1,    -1,    -1,   506,   507,   508,    -1,
      -1,    -1,  2073,    -1,    -1,   340,  2077,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2092,    -1,    -1,    -1,    -1,    -1,   322,    -1,   539,
      -1,    -1,    -1,  3134,    -1,    -1,   546,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,   344,
      -1,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,    -1,
     395,    -1,    -1,    -1,    -1,    -1,    -1,  3168,    -1,   404,
      -1,    -1,    -1,    -1,    -1,  3176,    -1,    -1,    -1,    -1,
     590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   602,   388,    -1,    -1,   606,    -1,    -1,    -1,
     395,    -1,  3203,  3204,   614,    -1,    -1,    -1,    -1,   404,
     620,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,  3229,    -1,
      -1,    -1,    -1,    -1,    -1,   645,    -1,    -1,  3239,    -1,
    3241,    -1,  3243,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,   661,   662,   663,   664,    -1,   451,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   676,    -1,    -1,    -1,
      -1,    -1,    -1,  3274,    -1,    -1,    -1,    -1,  3279,    -1,
    3281,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   713,    -1,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,  3315,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,
      -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   754,   540,   541,   542,    -1,    -1,
    3351,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,   564,
      -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1992,  1993,    -1,    -1,
    3391,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2377,    -1,   603,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3422,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2062,    -1,    -1,  2065,
      -1,    -1,    35,    36,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2453,    -1,    -1,    -1,    -1,    -1,    61,    62,
     725,  2462,  2463,    -1,    -1,  3496,    -1,    -1,    -1,    72,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2482,  2483,    -1,  2485,    -1,    -1,  2488,  2489,  2490,
    2491,  2492,    -1,    -1,    97,    -1,    99,    -1,    -1,    -1,
     725,    -1,    -1,  2504,    -1,    -1,   109,    -1,  2509,    -1,
    2511,    -1,  2513,  2514,    -1,  2516,    -1,    -1,    -1,    -1,
    2521,  2522,  2523,    -1,    -1,    -1,  2527,  2528,  2529,    -1,
    2531,    -1,  2533,    -1,  2535,    -1,  2537,    -1,  2539,    -1,
      -1,    -1,    -1,  2544,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   157,   158,  2192,    -1,    -1,    -1,
     163,    -1,    -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2208,   176,  2210,    -1,  2212,  2213,    -1,  2215,
      -1,    -1,    -1,    -1,  2585,    -1,    -1,    -1,    -1,    -1,
    2591,    -1,    -1,    -1,    -1,   198,    -1,   200,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2262,    -1,    -1,    -1,
    2266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3684,  3685,    -1,    -1,    -1,    -1,  2295,
    2296,  2297,  2298,    -1,    -1,    -1,  2667,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2327,    -1,  3724,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   316,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3755,    -1,  3757,    -1,    -1,  3760,
    3761,    -1,  3763,    -1,    -1,    -1,    -1,    14,    -1,    -1,
      17,    -1,    -1,  3774,    -1,    -1,    -1,    -1,  3779,    -1,
      -1,  3782,    -1,    -1,  3785,  3786,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    51,    -1,  3807,    -1,   381,    -1,
      -1,    58,    -1,    -1,    -1,    -1,    63,    64,  3819,    -1,
      -1,  2792,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    79,    -1,    -1,   408,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   419,   420,    -1,   422,
     423,   424,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3865,    -1,    -1,    -1,    -1,    -1,
      -1,   444,    -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   143,   144,  3899,  3900,
      -1,    -1,    -1,    -1,  2875,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   170,    -1,   498,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   511,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,   210,    -1,    -1,    -1,    -1,   215,    -1,
     543,   218,    -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,
      -1,  3982,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
     563,    -1,    -1,   566,   241,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   586,    -1,    -1,    -1,   264,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   281,    -1,    -1,    -1,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,    -1,
      -1,    -1,  2668,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4082,  4083,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2715,
    2716,  2717,    -1,  4114,  4115,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   382,    -1,    -1,    -1,    -1,
    2746,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   415,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   426,
      -1,    -1,    -1,    -1,  2790,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3168,    -1,    -1,
      -1,   448,    -1,    -1,   451,  3176,   453,    -1,    -1,   456,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
     467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4229,   476,
      -1,   478,  3203,  3204,    -1,    -1,    -1,    -1,    -1,    -1,
     487,    -1,    -1,    -1,    -1,    -1,   493,    -1,  4249,    -1,
    4251,    -1,    -1,    -1,   501,  2861,    -1,    -1,  3229,   506,
     507,   508,    -1,    -1,    -1,    -1,    -1,    -1,  3239,    -1,
    3241,    -1,  3243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2897,   539,    -1,    -1,    -1,    -1,    -1,    -1,   546,
      -1,    -1,  2908,    -1,  2910,  2911,  2912,  2913,    -1,  2915,
    2916,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   566,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   590,  3315,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,  4359,   606,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   614,    -1,    -1,
    2976,    -1,    -1,   620,    -1,    -1,    -1,    -1,    -1,    -1,
    3351,    -1,    -1,  2989,    -1,    -1,  4387,    -1,    -1,    -1,
     637,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   645,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3391,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   676,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4461,  3067,    -1,  4464,  3070,  3071,   713,    -1,  3074,  3075,
    3076,  3077,  3078,  3079,  3080,  3081,  4477,    -1,  3084,    -1,
    3086,    -1,  3088,  3089,    -1,    -1,  3092,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4519,    -1,
      -1,    -1,     7,    -1,    -1,  3496,    -1,    12,  3134,    14,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    61,    62,    63,    64,
      -1,    -1,    -1,    -1,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
    4631,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,   138,    -1,  4656,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4700,
      -1,    -1,    -1,    -1,  4705,    -1,    -1,   192,    -1,    -1,
    4711,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4732,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
     235,    -1,    -1,  3724,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,  3755,    -1,  3757,  4788,    -1,  3760,
    3761,    -1,    -1,  4794,  4795,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,  3774,    -1,    -1,    -1,    -1,  3779,    -1,
      -1,  3782,    -1,    -1,  3785,  3786,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3432,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4836,  3807,   322,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3451,    -1,    -1,  4849,    -1,
      -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,   344,
    3466,    -1,    -1,    -1,    -1,    -1,    -1,  4868,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4888,    -1,  4890,
      -1,    -1,    -1,    -1,  3865,    -1,    -1,   382,    -1,  4900,
      -1,  4902,  4903,   388,    -1,    -1,    -1,    -1,    -1,    -1,
     395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4919,   404,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3899,  3900,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,   452,   453,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4980,
      -1,  4982,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4997,  4998,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5010,
      -1,  3982,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5028,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5038,  5039,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5051,  5052,    -1,  3659,    -1,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,  5069,    -1,
      -1,    -1,    -1,    -1,    -1,  5076,    -1,  3683,  5079,   564,
      -1,    -1,   567,  5084,    -1,    -1,    -1,    -1,    -1,    -1,
    5091,    -1,    -1,    -1,    -1,    -1,    -1,  5098,    -1,  5100,
      -1,    -1,    -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,
      -1,  4082,  4083,    -1,    -1,  5116,    -1,  5118,   603,  5120,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5146,    -1,    -1,    -1,    -1,
      -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,     7,
      -1,    -1,    -1,    -1,    12,    -1,    14,  5168,  5169,    17,
      -1,    -1,    -1,    -1,  5175,    -1,    -1,    -1,    -1,    27,
      28,    -1,  5183,    -1,    -1,    -1,    -1,  5188,  5189,    -1,
      -1,    -1,  5193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,
      -1,    69,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,
     725,   726,   727,    -1,    -1,    -1,    -1,    -1,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4229,    -1,
      -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,  4249,    -1,
    4251,   129,    -1,    -1,    -1,    -1,    -1,    34,    35,   137,
     138,    -1,    -1,    40,    -1,    42,   144,    44,    45,    -1,
      -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,
     158,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,
      -1,   169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3948,    -1,   192,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,    -1,   235,  4359,    -1,
      -1,    -1,    -1,    -1,   242,   142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   159,    -1,   262,    -1,  4387,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4030,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,
     187,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   322,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4461,    -1,   340,  4464,    -1,    -1,   344,    -1,    -1,    -1,
     247,    -1,    -1,    -1,    -1,    -1,  4477,    -1,    -1,    -1,
      -1,    -1,    -1,   260,  4120,  4121,  4122,  4123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4131,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,   382,    -1,    -1,    -1,    -1,  4145,
     388,   288,   289,    -1,   291,    -1,    -1,   395,  4519,    34,
      35,    -1,    -1,    -1,    -1,    40,   404,    42,    -1,    44,
      45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,
      -1,   328,   329,   330,    -1,    -1,    -1,    -1,   436,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     347,   348,   349,   451,   452,   453,    -1,   354,    -1,    -1,
     357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,   375,   376,
     115,    -1,    -1,    -1,    -1,   483,    -1,    -1,   123,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,
    4631,    -1,   409,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,    -1,  4285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,
      -1,    -1,   540,   541,   542,    -1,    -1,    -1,    -1,   547,
      -1,    -1,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   564,    -1,    -1,   567,
     205,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4700,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,    -1,    -1,    -1,   501,   603,    -1,    -1,    -1,    -1,
      -1,  4732,   247,    -1,    -1,    -1,   513,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,
      -1,    -1,   640,    -1,   279,    -1,    -1,  4403,    -1,    -1,
      -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,    -1,
    4416,    -1,    -1,    -1,    -1,    -1,    -1,  4788,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,   576,
      -1,  4437,   579,   580,   581,   582,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   328,   329,   330,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   347,   348,   349,  4836,    -1,    -1,    -1,   354,
      -1,    -1,   357,    -1,    -1,   622,   623,   725,   726,   727,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     375,   376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4888,    -1,  4890,
      -1,    -1,    -1,    -1,   409,   410,    -1,    -1,    -1,  4900,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4555,
     435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4980,
      -1,    -1,   497,    -1,    -1,    -1,   501,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4998,   513,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5038,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,
      -1,   576,    -1,    -1,   579,   580,   581,   582,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5076,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5091,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   622,   623,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4765,
      -1,    -1,    -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5183,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4849,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,  4873,  4874,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,   566,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,    -1,    -1,    -1,
      -1,    -1,   746,   747,    -1,    -1,    -1,    -1,   752,    -1,
     754,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,   763,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,   268,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,   584,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,    -1,    -1,    -1,    -1,
      -1,   746,   747,    -1,    -1,    -1,    -1,   752,    -1,   754,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,   763,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,    -1,    -1,    -1,    -1,    -1,
     746,   747,    -1,    -1,    -1,    -1,   752,    -1,   754,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,   763,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,    -1,    -1,    -1,    -1,    -1,   746,
     747,   748,    -1,    -1,    -1,   752,    -1,   754,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,   763,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,    -1,    -1,    -1,    -1,    -1,   746,   747,
     748,    -1,    -1,    -1,   752,    -1,   754,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,   763,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,    -1,    -1,    -1,   746,   747,    -1,
      -1,    -1,    -1,   752,    -1,   754,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,   763,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,    -1,    -1,    -1,    -1,    -1,   746,   747,    -1,    -1,
      -1,    -1,   752,    -1,   754,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,   763,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
      -1,    -1,    -1,    -1,    -1,   746,   747,    -1,    -1,    -1,
      -1,   752,    -1,   754,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,   763,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,    -1,
      -1,    -1,    -1,    -1,   746,   747,    -1,    -1,    -1,    -1,
     752,    -1,   754,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,   763,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,    -1,    -1,
      -1,    -1,    -1,   746,   747,    -1,    -1,    -1,    -1,   752,
      -1,   754,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,
     763,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,    -1,    -1,    -1,
      -1,    -1,   746,   747,    -1,    -1,    -1,    -1,   752,    -1,
     754,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,   763,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,    -1,    -1,    -1,    -1,
      -1,   746,   747,    -1,    -1,    -1,    -1,   752,    -1,   754,
      -1,    -1,    -1,   758,    -1,    -1,    -1,   762,   763,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,    -1,    -1,    -1,    -1,    -1,
     746,   747,    -1,    -1,    -1,    -1,   752,    -1,   754,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,   763,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,    -1,    -1,    -1,    -1,    -1,   746,
     747,    -1,    -1,    -1,    -1,   752,    -1,   754,    -1,    -1,
      -1,   758,    -1,    -1,    -1,   762,   763,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,    -1,    -1,    -1,    -1,    -1,   746,   747,
      -1,    -1,    -1,    -1,   752,    -1,   754,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,   763,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,    -1,    -1,    -1,   746,   747,    -1,
      -1,    -1,    -1,   752,    -1,   754,    -1,    -1,    -1,   758,
      -1,    -1,    -1,   762,   763,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,    -1,    -1,    -1,    -1,    -1,   746,   747,    -1,    -1,
      -1,    -1,   752,    -1,   754,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,   763,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
      -1,    -1,    -1,    -1,    -1,   746,   747,    -1,    -1,    -1,
      -1,   752,    -1,   754,    -1,    -1,    -1,   758,    -1,    -1,
      -1,   762,   763,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,   566,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,   620,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,   637,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,   754,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   763,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,   145,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,   754,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   763,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,   754,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,   763,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   759,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    37,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   758,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   392,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   758,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   758,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   758,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   758,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   758,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   758,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   758,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     755,    20,    -1,   758,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   758,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   758,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,   493,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,   620,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
     637,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,   754,   755,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   755,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     755,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
     199,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,   275,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,   493,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,   620,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,   637,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,   754,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,   754,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,   754,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,   754,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,   754,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,   754,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,    -1,    -1,
      -1,    -1,    -1,     5,     6,   748,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,    -1,
      -1,    -1,    -1,    -1,     5,     6,   748,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
      -1,    -1,    -1,    -1,    -1,     5,     6,   748,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,    -1,    -1,    -1,    -1,    -1,     5,     6,   748,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,    -1,    -1,    -1,     5,     6,   748,
       8,     9,    10,    11,    12,    13,    14,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,   285,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,   506,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,   587,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,   609,   610,   611,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
      -1,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,   210,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,   506,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,   587,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,   609,   610,   611,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,    -1,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    14,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,   493,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
     506,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,   587,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,   609,   610,   611,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,    -1,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,    -1,    -1,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,   521,   522,   523,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,   594,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    18,    19,    20,    21,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,   387,    -1,    -1,   390,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,   648,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,   502,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,   519,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,   594,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,   104,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,   372,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,   372,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    95,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,   522,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,   660,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,   418,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,    -1,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,    -1,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,    -1,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,    -1,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,    -1,   422,   423,   424,    -1,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,   452,   453,   454,    -1,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
      -1,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
      -1,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,
     422,   423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
     452,   453,   454,    -1,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,    -1,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,    -1,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,    -1,   422,   423,   424,    -1,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,   452,   453,   454,    -1,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,    -1,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,    -1,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,    -1,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,   150,   151,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,   634,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,   150,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,   634,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   566,
     590,   602,   606,   614,   620,   637,   645,   661,   662,   663,
     664,   676,   713,   754,   766,   767,   770,   771,   772,   773,
     774,   776,   781,   783,   807,   808,   809,   810,   812,   815,
     837,   859,   866,   867,  1099,  1100,  1102,  1104,  1106,  1109,
    1111,  1112,  1113,  1114,  1115,  1117,  1118,  1152,  1153,  1154,
    1157,  1171,  1173,  1177,  1180,  1181,  1185,  1187,  1192,  1196,
    1202,  1203,  1204,  1205,  1206,  1207,  1208,  1213,  1214,  1336,
    1369,  1370,  1371,  1372,  1373,  1374,  1375,  1376,  1377,  1378,
    1379,  1380,  1381,  1382,  1383,  1384,  1385,  1393,  1394,  1415,
    1416,  1420,  1424,  1430,  1446,  1447,  1449,  1452,  1461,  1470,
    1474,  1476,  1477,  1542,  1544,  1546,  1568,  1574,  1576,  1577,
    1578,  1580,  1584,  1586,  1612,  1618,  1619,  1620,  1621,  1657,
    1664,  1665,  1667,  1668,    12,   108,   127,   200,   243,   286,
     420,   499,   564,   566,   600,   612,   708,  1631,  1632,  1633,
    1636,   282,   371,  1186,  1613,   572,  1517,   235,     5,     6,
       8,     9,    10,    11,    12,    15,    20,    23,    25,    26,
      27,    28,    29,    30,    32,    36,    40,    43,    44,    45,
      47,    49,    50,    53,    56,    57,    59,    60,    61,    63,
      65,    66,    67,    68,    69,    70,    72,    73,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    87,
      88,    90,    91,    92,    93,    94,    98,   103,   106,   110,
     111,   112,   115,   120,   121,   126,   127,   129,   135,   136,
     137,   138,   139,   143,   146,   147,   148,   152,   154,   155,
     157,   158,   159,   162,   163,   165,   166,   167,   168,   169,
     170,   173,   174,   175,   176,   177,   180,   181,   183,   184,
     185,   186,   187,   190,   191,   195,   196,   198,   202,   204,
     205,   206,   207,   209,   211,   215,   216,   218,   221,   222,
     226,   227,   228,   229,   232,   233,   234,   237,   242,   243,
     244,   248,   252,   253,   255,   256,   260,   262,   265,   266,
     269,   272,   273,   279,   280,   282,   284,   286,   287,   295,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   316,   317,
     318,   320,   321,   322,   323,   325,   326,   331,   332,   333,
     334,   335,   336,   339,   340,   342,   344,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   357,   358,   361,   362,
     363,   364,   365,   369,   370,   374,   376,   377,   379,   380,
     381,   384,   394,   395,   396,   398,   400,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   413,   415,   416,
     417,   419,   421,   422,   423,   424,   425,   427,   428,   429,
     432,   436,   437,   439,   440,   443,   444,   445,   446,   447,
     449,   450,   452,   453,   454,   457,   458,   459,   460,   461,
     462,   463,   464,   466,   468,   469,   471,   472,   473,   475,
     478,   479,   480,   481,   483,   485,   486,   487,   488,   489,
     491,   492,   496,   497,   498,   499,   503,   507,   509,   510,
     511,   512,   514,   515,   516,   517,   518,   524,   525,   526,
     528,   531,   534,   536,   538,   539,   540,   541,   542,   543,
     546,   547,   550,   551,   552,   553,   554,   555,   558,   559,
     560,   561,   563,   564,   567,   568,   569,   570,   573,   574,
     576,   577,   578,   579,   585,   586,   590,   591,   592,   595,
     596,   598,   599,   601,   602,   605,   608,   610,   612,   613,
     619,   621,   624,   628,   630,   631,   632,   633,   640,   641,
     642,   644,   645,   646,   647,   650,   653,   654,   655,   656,
     657,   659,   668,   669,   670,   672,   673,   674,   676,   679,
     681,   688,   689,   692,   694,   696,   697,   701,   702,   703,
     704,   705,   706,   707,   708,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   831,  1514,  1523,  1533,  1534,
    1535,  1537,  1538,  1541,   316,   457,   563,   566,  1570,  1570,
     641,  1614,   108,   199,   286,   390,   499,   519,   564,   569,
     600,   604,   612,   654,   708,  1076,  1389,  1628,  1632,  1633,
    1634,  1635,  1636,     8,    23,    29,    35,    37,    38,    39,
      41,    54,    55,    61,    62,    69,    72,    96,    97,   102,
     104,   107,   108,   113,   114,   115,   120,   122,   125,   171,
     178,   179,   188,   195,   205,   207,   213,   219,   226,   230,
     241,   245,   271,   279,   290,   319,   324,   335,   339,   341,
     345,   346,   347,   348,   349,   356,   366,   367,   368,   372,
     373,   397,   409,   410,   412,   427,   455,   456,   475,   477,
     484,   485,   491,   544,   545,   552,   556,   557,   562,   572,
     576,   577,   578,   579,   588,   589,   590,   594,   597,   612,
     616,   617,   618,   620,   625,   627,   632,   633,   650,   665,
     666,   671,   677,   678,   680,   683,   684,   685,   686,   687,
     691,   693,   695,   746,   747,   748,   752,   754,   758,   762,
     763,  1049,  1206,  1224,  1225,  1228,  1229,  1230,  1232,  1236,
    1239,  1241,  1242,  1243,  1244,  1245,  1252,  1253,  1254,  1275,
    1276,  1498,  1500,  1502,  1503,  1504,  1506,  1509,  1511,  1514,
    1523,  1623,  1625,   108,   167,   200,   235,   286,   420,   499,
     519,   564,   587,   600,   612,   628,   654,   708,  1389,  1523,
    1186,   103,   536,   868,    13,    14,    99,   130,   144,   167,
     170,   183,   210,   235,   241,   274,   285,   421,   425,   441,
     449,   457,   493,   506,   507,   558,   587,   609,   611,  1514,
    1517,  1524,  1528,  1535,  1538,  1539,  1541,  1590,  1591,  1512,
    1523,   782,   566,   128,   220,   293,  1395,   407,   659,    87,
     428,  1475,   111,   235,   647,  1478,   243,  1570,  1186,  1523,
    1471,   487,   612,  1570,  1186,   128,   293,  1396,  1419,   653,
    1462,   522,   856,   860,   861,  1523,    13,   425,  1590,  1614,
    1523,    13,   140,   220,   527,   528,   530,   531,   532,   549,
    1215,  1216,  1217,  1626,    61,    62,   125,   209,   282,   352,
     404,   498,   585,   653,   654,   672,   708,   758,  1051,  1514,
    1526,  1534,  1535,  1537,  1538,  1540,  1543,  1553,  1558,  1559,
    1431,   860,   204,   511,   585,   204,   511,  1512,  1523,   566,
    1425,   407,   659,   243,  1575,  1523,   484,  1405,  1409,   660,
    1337,  1338,  1523,    32,    79,   154,   415,   437,   478,   539,
    1660,  1232,  1523,  1514,   401,   970,   754,  1624,  1625,   243,
     282,  1203,  1204,  1206,  1336,     0,   156,   768,   415,   104,
     274,   612,  1125,  1517,  1523,  1527,  1529,  1530,  1602,  1604,
     608,  1155,  1169,   194,   246,   285,  1218,  1219,  1367,   388,
     603,  1349,  1350,   276,   603,  1350,  1355,  1205,  1206,   130,
     609,    17,   195,  1450,  1512,   160,  1129,  1523,   160,   831,
     449,   480,  1579,   212,   831,  1527,  1523,  1512,   564,   230,
    1388,   212,   167,  1108,  1631,  1570,  1614,  1193,  1194,  1512,
     754,   838,   760,   583,   185,  1386,  1512,  1386,    19,  1615,
     230,   999,   235,   212,   456,  1527,   235,   717,  1523,   564,
     999,   999,   212,   235,   566,  1627,  1627,  1631,  1636,   754,
     754,   754,  1239,   754,   754,   754,  1228,  1288,   754,   754,
     754,   754,   754,   754,   754,   754,  1227,  1227,   754,  1037,
     754,   754,   754,   572,   754,   754,   754,  1624,   754,   754,
     754,   754,   754,   754,   754,   754,   754,  1228,   754,   754,
     754,  1286,  1287,  1509,  1523,   754,   754,   754,   754,   754,
     754,   754,   754,   754,  1228,  1037,   754,   754,   754,   754,
     754,   754,   754,   754,   754,   754,   754,   754,   754,   754,
     754,   754,  1037,   572,   754,   754,   754,   572,   754,   754,
     754,    37,   219,   572,   754,  1227,  1037,  1037,   754,   754,
     754,   754,   754,   754,   754,   754,   754,   754,   754,   754,
     754,   754,   754,   754,   754,   754,   754,   754,  1239,  1239,
    1239,   620,  1204,  1206,  1228,   758,  1277,  1527,  1523,   759,
      18,    19,    21,   387,   390,   572,   648,  1226,  1233,  1234,
    1522,  1523,   160,   161,   201,   214,   254,   267,   294,   359,
    1237,    33,   141,   249,   275,   345,   366,   367,   442,   504,
     505,   517,   722,   744,   745,   746,   747,   748,   749,   750,
     751,  1235,  1239,    71,   389,   572,  1518,   259,   652,   754,
     760,  1388,  1388,  1388,  1523,   212,  1388,  1388,   717,  1523,
    1388,   564,  1388,  1388,  1388,   212,  1570,   777,  1453,   135,
     419,  1589,   481,   481,   564,   569,   612,   628,   654,   654,
     385,   754,  1605,   563,   378,  1605,    67,   511,  1605,   109,
     628,  1605,   758,  1605,   378,   583,   759,   381,    68,   433,
     760,  1527,   197,   231,  1148,  1523,  1517,  1666,  1228,   246,
      85,   293,  1480,   194,  1569,  1570,   197,    35,   316,  1436,
    1472,  1523,  1189,  1530,  1188,  1570,   246,  1397,  1388,  1464,
     316,   511,  1463,  1465,   621,   857,   501,   862,  1589,   378,
     197,   378,   583,  1615,  1224,  1217,   501,   654,   760,    35,
     125,   160,   502,  1052,  1406,  1527,   194,   583,  1406,   255,
     433,  1560,  1561,  1563,  1565,    13,   125,   365,  1528,  1531,
    1598,   212,   758,  1527,    35,   125,  1054,  1055,  1527,   760,
     125,   585,  1549,  1557,  1559,   759,  1550,  1406,    36,    61,
      72,    97,    99,   109,   158,   163,   166,   176,   198,   200,
     209,   211,   282,   316,   381,   408,   419,   420,   423,   424,
     444,   498,   511,   547,   566,   631,  1051,  1432,  1436,  1437,
    1439,  1440,  1441,  1554,   862,   447,   534,  1166,  1167,  1168,
     433,   637,  1158,  1159,  1160,  1166,  1512,  1523,  1666,  1570,
     754,   759,  1337,   759,   754,  1339,    37,   219,  1499,  1518,
    1659,  1659,  1659,    96,  1658,  1659,  1659,   156,   760,   754,
      48,   156,   156,   197,   111,   755,   755,  1218,   755,   757,
    1523,  1227,   754,   138,   228,   758,   125,   138,   228,  1600,
     465,   759,  1607,   300,   301,   445,   446,   524,   525,   526,
     805,  1170,   612,  1161,  1162,   503,   609,  1220,   146,   392,
     758,  1365,  1366,  1368,  1527,   249,  1219,  1367,  1218,    48,
      13,   140,  1622,  1354,  1355,   290,   373,   594,  1356,  1357,
    1500,  1523,  1622,  1354,  1349,  1350,  1355,   231,   293,   429,
    1422,  1423,  1419,   160,   194,  1202,  1393,  1394,  1415,  1420,
    1448,  1451,  1499,  1523,   333,   570,   596,  1101,  1530,  1105,
    1523,  1527,  1523,  1103,   384,     7,    26,    84,   144,   237,
     323,   370,   451,   630,   939,   940,   953,   954,   955,   961,
     963,   964,  1437,     7,    12,    14,    17,    27,    28,    58,
      63,    64,    69,    77,    83,    84,    87,    96,   111,   125,
     129,   137,   138,   144,   152,   158,   169,   192,   233,   235,
     242,   262,   285,   322,   340,   344,   382,   388,   395,   404,
     436,   451,   452,   453,   483,   540,   541,   542,   547,   564,
     567,   590,   603,   637,   640,   725,   726,   727,  1000,  1003,
    1005,  1006,  1058,  1130,  1131,  1133,  1134,  1136,  1138,  1139,
    1140,  1141,  1143,  1145,  1523,   171,  1523,   831,   533,  1637,
    1638,  1107,  1386,   249,   759,   235,   263,   401,  1073,  1199,
    1200,  1228,  1284,  1285,  1523,   784,   785,   176,   429,   759,
    1172,    59,   176,   180,   194,   331,   429,  1182,  1183,  1184,
      57,   369,   369,   448,  1616,  1235,  1523,  1523,  1523,   519,
     193,  1523,   709,     7,   933,  1523,  1530,  1601,  1603,  1598,
    1523,  1523,   999,    11,   167,   200,   420,   587,   818,  1630,
    1638,  1644,  1646,  1647,  1652,   200,   818,  1629,  1638,  1644,
    1647,  1652,  1627,  1228,  1228,    13,   140,  1282,  1332,  1282,
    1282,  1282,   634,  1290,  1228,  1228,  1285,  1285,  1228,  1228,
     140,  1282,  1332,   755,   373,   755,   755,  1228,  1228,  1228,
    1228,  1509,   116,   117,   118,   119,   120,   223,   224,   225,
     226,   335,   337,   338,   339,   346,   427,   490,   491,   632,
     649,   650,  1327,  1328,  1228,  1284,   112,   115,   576,   579,
    1329,   140,  1278,  1228,  1228,  1228,  1228,  1327,  1228,  1285,
    1287,    10,   759,   760,   140,  1282,  1228,  1228,   140,  1282,
    1228,  1228,  1285,  1285,  1285,  1228,  1285,  1232,  1228,  1228,
    1228,  1228,  1228,  1228,   755,  1228,  1282,  1282,  1228,  1228,
     140,  1282,  1228,  1328,  1328,  1228,    46,   268,   584,  1228,
    1228,   755,  1510,  1511,  1523,  1282,  1282,  1228,  1228,  1228,
    1282,  1282,  1285,   755,   755,  1228,  1228,  1228,  1228,  1228,
    1239,   755,   755,   755,  1218,   755,   759,   209,   282,   498,
    1555,   502,  1228,  1225,  1522,  1523,  1228,  1228,  1228,   179,
     372,   589,   605,  1235,    13,    20,  1230,  1238,  1232,  1232,
     754,  1624,  1239,  1232,  1232,  1232,  1232,   275,   667,  1231,
    1232,  1232,   245,  1232,   245,  1232,  1232,  1232,  1232,  1232,
      33,   249,   275,   442,  1527,  1239,  1518,  1518,  1228,  1249,
    1250,  1251,   748,  1523,  1523,   831,  1523,   378,  1523,   831,
    1527,   709,   961,   963,  1390,  1391,  1392,   831,  1523,  1530,
    1597,  1386,  1598,  1523,  1388,   615,   778,    35,   158,   162,
     202,   222,   287,   383,   419,   443,   468,   512,   543,  1454,
    1458,  1459,  1570,    86,   758,   869,   870,   871,   872,  1523,
    1587,   563,  1523,  1606,  1530,  1527,   200,   420,   566,  1588,
    1597,  1591,    21,  1330,  1331,   186,   363,  1523,  1581,  1523,
    1666,  1397,   516,   759,    50,   282,  1479,    30,  1512,  1571,
    1572,  1386,   758,   775,  1517,   287,   759,   583,  1190,  1191,
    1512,  1386,  1512,  1523,  1467,  1466,   759,  1518,    56,    66,
      76,    90,    91,    92,   106,   334,   351,   489,   551,   568,
     863,   865,   759,  1585,  1530,  1597,  1588,   487,  1617,  1616,
     197,  1209,  1210,  1367,    13,   365,  1598,  1523,    71,  1057,
    1228,  1530,   733,   572,  1520,   273,   380,   643,   759,  1564,
     759,  1562,   658,  1545,   758,   759,  1523,   209,   282,   498,
     653,   672,  1556,  1406,  1523,  1560,  1550,  1406,  1551,  1552,
    1553,  1558,    13,    35,   125,   378,   484,   709,  1228,  1567,
     166,   275,   635,  1334,  1445,   754,   108,   167,   200,   420,
     566,   587,   612,   628,  1445,    13,  1527,  1354,   197,   249,
    1438,  1442,   198,    70,   543,   194,   543,   563,    70,   543,
      13,    43,    94,    98,   253,   332,   396,   518,   560,  1426,
    1427,  1428,   166,   222,   543,   543,  1354,  1445,   287,   157,
     422,   586,   234,   235,   261,  1075,    73,   563,   543,   624,
     759,   380,   643,    88,   759,   194,   806,   125,  1228,  1410,
    1411,  1412,  1409,  1338,  1340,  1523,    21,   759,   379,  1662,
     559,  1663,   646,   258,   471,  1661,  1523,  1228,   277,   280,
     430,   971,   972,  1530,   136,   755,   156,   769,   755,   729,
      48,  1527,   654,   729,    48,   637,    65,   256,   365,   535,
     553,   644,  1594,  1595,  1530,  1602,   637,  1122,   160,   160,
     160,   160,   160,   160,   759,   160,  1156,   404,  1163,   667,
     668,   670,  1221,  1222,  1223,   572,  1519,  1519,  1527,   759,
     503,  1228,  1351,  1507,  1206,  1207,   377,   759,  1206,  1207,
    1354,  1354,   197,  1387,  1513,  1523,  1422,  1148,  1527,    87,
     997,   998,  1005,  1006,  1007,  1058,   832,   369,   316,     7,
     832,   754,   110,   950,  1406,  1407,  1407,   950,  1407,  1407,
     583,   759,  1002,   158,    74,    89,   199,   401,   519,  1015,
    1017,  1073,  1147,  1407,    64,    89,   235,  1147,   401,  1407,
    1407,  1147,  1407,   401,   401,  1407,  1407,  1407,  1407,   583,
     136,  1407,   261,   401,   564,    64,    89,   193,   401,   418,
    1073,  1147,   261,  1407,   401,   401,   564,   136,  1407,  1407,
    1407,  1407,  1407,  1147,   401,    48,  1407,  1407,   401,    21,
      74,   160,   583,  1073,  1151,   401,   401,  1407,  1407,  1407,
    1407,   139,   332,  1407,  1407,   401,  1407,   619,   619,  1407,
    1003,    71,  1051,   450,   970,  1132,   759,   759,   501,   710,
    1672,  1110,   492,   628,  1638,   144,   609,  1179,   125,  1195,
    1523,  1194,  1512,   754,   754,  1200,   755,   759,   232,   295,
     296,   297,   298,   299,   302,   303,   304,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   317,   318,   711,
     712,   732,   734,   735,   736,   737,   738,   799,   800,   805,
     458,   459,   460,   461,   462,   463,   464,   786,   787,  1512,
     610,  1183,    57,   448,   171,   811,   378,     7,   717,   111,
     378,   999,   950,   614,   934,     7,   228,   125,   759,   814,
     592,   592,   615,  1088,  1089,  1512,   200,   999,   831,  1523,
     831,   831,  1638,   759,   755,  1282,   755,  1228,   755,   755,
     755,  1228,   150,   634,  1289,    21,   755,   615,   755,   755,
     755,   615,   759,  1285,   755,   748,   755,   759,   759,   755,
     755,   755,   197,   759,   755,   759,  1285,   755,   759,   759,
     759,   747,   759,   755,   755,   754,  1509,  1523,  1282,   755,
     755,   755,  1282,   755,   759,   755,   755,   755,   755,   759,
     755,   249,   755,   759,   759,   755,   759,   759,   755,   755,
     755,   759,   197,   759,  1282,   755,   755,   759,   759,   759,
     755,   197,  1228,   197,  1228,   197,  1228,   197,   755,   759,
     755,   755,   755,   755,   759,    21,   755,   759,   755,   759,
     755,   755,   690,  1260,  1260,   755,   759,  1255,   755,  1255,
     759,   755,  1260,  1260,  1260,  1285,   760,   760,   760,  1527,
    1228,   764,   179,   372,   589,   605,  1624,    19,  1228,   165,
    1232,   754,  1228,  1228,  1232,   754,  1624,  1239,  1232,  1226,
     755,   759,   754,   760,   760,  1512,  1390,  1388,  1002,   941,
     942,   943,   961,   759,    52,   470,  1149,   192,  1678,  1386,
     758,   779,   780,   287,   287,   287,   287,   287,   287,   759,
    1386,  1460,   115,   576,   579,   864,   874,  1276,  1502,  1509,
    1527,   759,   160,   378,   755,   759,   583,   748,  1523,  1532,
    1596,   637,  1592,  1523,   160,   186,   201,   214,   266,   267,
     294,   363,   417,  1582,  1583,  1333,  1334,  1512,  1517,  1517,
    1197,  1198,  1512,   236,  1331,   759,  1527,    31,   583,  1473,
    1530,  1530,   759,   583,   176,   429,   613,  1174,  1175,  1176,
     401,  1299,  1300,   583,  1469,    13,  1468,  1465,   759,   160,
     210,   378,   197,  1596,  1523,   145,   700,   720,   754,   763,
    1211,  1212,  1291,  1293,  1301,  1302,  1303,  1304,  1305,  1306,
    1307,  1512,  1624,  1333,  1209,   583,   583,   583,    35,  1056,
    1527,   583,  1406,   456,  1116,  1116,   433,   454,   496,  1566,
    1563,  1561,  1598,  1527,  1531,   194,   760,   760,   760,   760,
     760,  1559,  1228,  1567,   759,  1557,   249,  1443,  1518,  1228,
     748,   999,   831,   831,   831,  1512,   831,  1530,  1512,   287,
     350,   543,  1435,  1435,  1445,  1523,   831,  1445,  1530,  1438,
     831,  1445,   252,   561,   181,   194,  1429,   759,  1443,   806,
    1438,  1438,  1442,  1442,  1438,  1445,  1445,  1168,   514,  1160,
      60,   755,   759,   755,   759,  1624,  1499,   405,   194,   760,
     755,    73,   754,    73,   754,   402,   974,   216,   263,   761,
    1407,   404,   572,   733,    13,   365,  1598,   404,   572,   733,
    1520,  1527,   572,   572,   572,    19,  1593,   320,   321,   325,
     326,  1123,  1124,     5,   404,   739,   740,  1119,  1120,  1121,
    1515,  1517,   122,   188,   290,   373,   594,  1361,  1515,   122,
     188,   219,   290,   373,   594,  1359,  1517,  1517,   805,  1517,
     806,   160,   126,  1164,  1387,   669,  1222,  1051,  1053,  1366,
     342,    22,   131,  1352,  1353,   759,  1357,  1357,  1387,  1512,
    1523,   197,   759,   760,  1421,  1212,   122,   188,   219,   290,
     373,   594,  1360,  1363,  1364,   998,    84,    77,    93,   265,
     343,   369,   431,   533,   834,   836,   478,   263,   598,   952,
     108,   221,   394,   404,   411,   515,   612,   816,   817,  1517,
     938,   939,   219,   290,   373,   594,   965,  1362,  1363,  1514,
    1517,   938,   965,   965,  1523,   940,  1407,  1096,  1523,  1073,
    1074,  1186,  1074,    64,   193,   418,   604,  1016,  1072,  1087,
    1096,  1523,   754,  1523,   125,  1144,  1523,  1523,  1523,  1523,
    1523,  1186,  1361,  1359,  1523,  1359,    13,  1137,  1326,  1523,
    1186,  1517,  1517,  1517,  1517,  1051,  1407,  1359,  1137,  1523,
    1523,   263,  1326,   263,  1523,  1523,  1527,  1523,  1137,  1407,
     186,   266,   369,  1009,  1359,   125,  1146,  1523,  1361,  1361,
    1523,  1186,  1347,  1348,  1510,   125,  1004,  1359,  1517,  1186,
    1523,  1523,  1512,  1186,  1186,    80,    82,   125,   148,   187,
     440,  1008,  1004,  1004,   125,  1359,  1523,  1359,  1137,   754,
     372,  1527,  1407,  1407,   403,     7,   144,  1000,  1140,  1141,
    1134,  1138,  1141,   718,   719,   951,  1407,   707,  1676,   378,
     826,  1126,   127,   248,  1512,   673,   673,  1137,   418,  1322,
    1323,  1324,  1523,   249,  1228,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   759,   806,   160,   160,   160,   160,
     160,   160,   160,   759,   806,   996,   997,  1512,   952,   709,
     642,  1512,  1362,   286,    77,   177,   184,   364,   935,   936,
     937,   953,   954,   955,   956,   959,   960,   961,   962,   963,
     964,   950,    48,   637,   654,  1601,  1607,  1407,    47,   216,
     486,  1091,  1091,   378,    21,   231,   275,   456,   754,   966,
     967,   968,   969,   970,  1001,  1003,  1204,  1206,  1402,  1482,
    1523,   831,   754,   473,  1653,     9,    31,   931,   245,  1228,
     755,  1259,  1260,  1259,  1259,  1259,   575,  1228,  1228,   154,
      35,    62,   112,   115,   123,   142,   189,   260,   354,   357,
     435,   509,   579,   607,  1026,  1030,  1283,  1052,  1052,  1283,
     755,  1259,   755,   245,   245,  1228,  1228,  1228,   388,  1280,
    1228,  1228,  1228,  1228,  1228,  1232,   755,  1259,   755,  1259,
    1228,  1228,  1228,  1228,  1228,  1228,  1285,  1259,  1259,   245,
    1228,  1228,  1228,   755,  1259,  1228,  1228,  1228,  1228,   197,
    1228,   197,  1228,   197,  1228,  1228,  1259,  1259,  1228,    35,
      62,  1359,  1282,  1259,   754,  1261,  1262,  1263,  1523,   231,
     694,  1257,  1500,  1503,   755,  1257,   755,  1239,  1260,   755,
     760,  1097,  1230,   755,   759,  1239,  1239,  1327,  1327,    19,
    1228,   165,  1251,  1284,   748,  1523,  1523,  1142,  1143,  1145,
    1362,  1392,  1002,  1530,  1149,  1527,   759,   806,  1459,  1455,
     872,   875,   876,   871,   374,   485,   873,  1588,  1523,  1597,
     760,   760,   583,   655,  1333,   754,  1354,  1299,   759,  1199,
    1200,  1519,   293,   433,   643,  1573,  1572,  1228,  1517,   583,
    1191,  1512,  1176,   754,   501,   620,   621,   754,  1398,  1399,
    1401,  1402,  1403,  1362,   806,   865,   864,   385,  1588,  1597,
     197,   754,  1624,  1212,  1293,  1302,  1303,  1304,  1305,   731,
     759,   100,   238,   258,   271,   355,   477,   549,  1294,  1295,
    1296,  1299,  1331,   212,  1344,  1333,  1598,  1598,  1598,   733,
    1520,  1520,   728,  1599,  1599,    78,   595,   433,  1360,  1547,
    1548,  1406,  1552,  1517,   197,  1444,   755,  1523,   615,  1445,
     428,  1354,  1428,  1444,  1445,  1445,  1512,  1512,  1445,  1515,
    1412,  1523,   759,   336,   156,   754,  1232,   754,  1232,  1360,
     555,   975,   754,    12,   973,  1359,  1519,  1116,   404,   456,
     404,  1599,    21,    48,  1594,  1359,  1359,  1359,  1359,  1124,
     285,   606,   174,   465,   704,   705,   697,  1360,  1360,  1121,
    1517,   160,   406,  1165,  1052,    73,  1483,  1507,   615,  1331,
     760,  1212,  1513,   748,  1523,   501,  1407,  1517,   533,   533,
     533,   533,   533,   492,   378,  1517,   947,   948,   949,   953,
     961,   963,  1517,  1517,  1517,  1517,  1359,  1517,  1517,   755,
     759,  1527,  1096,   402,   754,  1096,   754,   263,   263,  1074,
     367,  1018,  1019,  1020,  1087,   754,   615,   592,  1011,  1012,
    1013,  1015,  1523,    34,    35,    40,    42,    44,    45,    62,
     112,   115,   123,   159,   187,   189,   205,   206,   247,   260,
     279,   288,   289,   291,   328,   329,   330,   347,   348,   349,
     354,   357,   375,   376,   409,   410,   497,   501,   513,   573,
     576,   579,   580,   581,   582,   622,   623,   650,  1021,  1024,
    1025,  1026,  1027,  1028,  1029,  1030,  1032,  1020,  1020,   656,
     657,  1090,   144,   501,  1137,  1523,  1182,   759,  1360,   125,
    1052,  1517,   564,  1523,  1149,   637,   564,  1517,  1021,  1137,
     759,  1352,  1137,   583,   583,  1326,  1137,  1460,  1056,  1052,
     941,   373,  1673,  1674,  1407,   137,   152,  1677,    81,   488,
     451,  1127,  1339,   378,   378,   755,   755,   759,  1195,   754,
    1359,  1515,  1359,  1359,  1515,  1515,  1359,  1359,  1515,  1515,
    1515,  1515,  1515,  1515,  1515,  1515,  1359,  1359,  1515,  1503,
    1515,  1359,  1515,  1517,  1359,   372,   803,  1529,   372,   804,
    1515,  1359,   800,   754,   788,   788,   754,   793,   793,   754,
     796,   796,   754,   791,   787,   754,   439,   599,   944,   945,
     946,   953,   957,   958,   959,   960,   961,   963,  1362,  1527,
     754,   813,   212,  1407,  1407,  1407,  1407,  1002,   941,   733,
    1520,  1527,  1598,  1122,   612,   709,  1671,  1512,  1402,  1512,
     275,  1011,   968,   967,  1002,  1218,   969,   473,   819,  1648,
     123,   247,   435,   550,  1010,   754,   130,   241,   609,   932,
    1228,   755,  1259,  1228,   575,   754,  1041,  1042,  1042,   754,
    1036,   754,  1034,  1035,  1041,   414,  1031,  1033,  1041,    62,
     247,  1036,   247,  1042,   721,  1240,   755,   755,   755,  1259,
    1259,  1228,  1228,   755,   755,   759,   755,    48,   495,  1279,
     759,   759,   755,   759,   755,   249,  1246,  1247,  1259,  1259,
     755,   755,   755,   755,   759,   755,   755,  1228,   755,   194,
     755,   755,   759,  1259,   755,   759,   759,   755,  1228,   755,
    1228,   755,  1228,   755,   755,   755,   754,  1063,  1063,   759,
     755,  1262,  1264,  1265,   688,   688,  1260,   759,  1256,  1256,
    1257,  1260,  1257,   755,  1523,  1285,   755,  1230,   755,   759,
    1239,   755,  1145,  1143,   943,   780,   194,   637,  1456,   160,
     759,  1596,   637,  1609,   748,   748,  1523,  1597,   385,  1354,
    1411,   501,  1398,  1399,  1198,  1512,  1200,   231,  1201,  1481,
    1482,   643,   282,  1530,  1325,  1326,  1417,  1418,  1510,   755,
    1400,  1505,  1506,  1510,  1523,   754,  1404,  1408,   160,   197,
    1596,  1597,  1228,  1331,   759,   755,   755,   755,   755,   755,
    1291,  1292,  1293,  1301,  1291,   258,   258,   391,  1298,   238,
     271,   477,  1297,  1298,  1301,  1291,  1291,  1331,  1339,    48,
     217,  1335,  1344,  1116,  1116,   103,  1002,  1567,  1361,  1433,
     163,   631,  1597,   373,  1434,  1438,  1438,  1359,   977,  1523,
     755,   977,   755,    48,   754,   979,  1232,   160,   754,   228,
    1599,  1116,  1520,   456,  1599,   219,  1517,  1521,   733,  1520,
     125,   245,   361,   103,   125,  1360,   245,  1517,   160,   153,
     164,   386,   571,  1484,  1485,   278,  1486,  1212,  1299,  1523,
    1333,   760,  1421,  1417,  1517,   111,   111,   127,   248,   162,
    1002,   817,   754,  1360,   401,   980,   981,   754,  1228,  1096,
     730,   754,   754,  1093,  1094,  1095,  1523,  1091,  1091,   755,
     759,  1021,  1041,  1041,  1042,    23,    35,    49,   601,   626,
    1041,  1051,  1059,  1060,  1061,  1036,   754,  1061,    62,   622,
    1027,  1061,  1061,    62,   623,   623,   626,   754,  1042,  1036,
    1036,  1061,  1041,  1042,   441,  1014,  1066,    27,    71,    75,
      77,   125,   367,   372,   378,   418,   497,   547,   604,   706,
    1017,  1020,  1044,  1045,  1046,  1057,  1065,  1235,    35,  1041,
    1062,  1041,  1041,  1042,   754,  1035,  1043,  1034,   125,   125,
    1021,  1523,  1057,  1057,   566,     9,   186,  1150,  1348,  1523,
    1523,   246,  1174,   755,   746,  1002,   373,   746,  1675,  1678,
     367,   416,    25,   168,   820,   583,   137,   152,   822,  1639,
    1326,  1326,  1323,   801,   802,  1359,   755,   789,   790,  1523,
     755,   794,   795,  1523,  1532,   755,   797,   798,  1515,  1516,
     754,   755,   792,  1094,  1407,  1407,  1002,   813,   384,  1094,
     353,   714,   715,   716,  1523,  1517,   965,   965,  1360,   937,
     404,    21,    48,  1119,  1672,   754,  1512,   755,  1003,  1010,
     378,   839,   840,   841,  1523,   516,  1654,   378,  1327,  1228,
     122,   290,   373,   594,  1061,   373,   373,   755,  1327,  1327,
    1228,  1281,  1507,  1499,   755,  1228,  1228,  1285,    44,   355,
     755,   637,  1248,  1228,  1327,  1228,  1228,  1228,  1228,   755,
     755,   755,  1360,   755,   755,  1359,  1259,   755,   401,  1266,
    1228,  1260,  1260,   197,  1258,   755,  1285,  1457,   433,    56,
      66,    76,    90,    91,    92,   106,   334,   351,   472,   489,
     551,   568,   877,   876,   583,   210,   637,  1608,   755,  1417,
      21,  1413,   378,  1414,  1201,   269,   246,   755,   759,  1406,
    1401,  1402,   755,   759,   760,  1410,   759,   864,  1597,   197,
     759,  1339,  1291,   764,   258,  1298,  1298,   258,   258,   378,
     615,   378,   615,   192,   231,   614,  1317,  1318,  1319,  1320,
    1321,  1228,  1345,  1508,  1228,   698,  1341,  1335,  1599,  1599,
     404,  1360,  1354,  1354,  1333,  1445,   755,   759,   755,   972,
     980,   755,  1360,   976,   977,    48,  1599,  1599,  1520,  1599,
     404,   456,  1599,  1360,   125,   723,   125,  1360,  1517,    48,
      48,   153,    48,  1485,   537,   571,  1487,  1488,  1333,  1333,
    1333,   949,  1094,  1523,   755,   759,  1094,   755,   754,  1094,
    1228,   755,   759,   754,  1352,  1012,  1014,    35,    23,   601,
    1051,    35,  1061,  1052,  1098,  1499,  1061,   626,  1098,  1061,
     509,   607,   651,  1038,  1039,  1040,  1512,  1150,  1056,   125,
     148,   187,  1047,  1517,   115,   576,   579,   746,   747,   754,
    1049,  1050,  1501,  1502,   609,   125,   125,   139,   332,  1048,
     263,  1362,  1016,    71,  1046,   203,  1022,   263,   372,   724,
    1062,  1061,  1062,  1038,   373,  1038,  1038,   754,  1501,  1150,
    1512,  1523,   754,   373,  1674,   373,   416,  1228,  1228,   378,
     826,   831,   378,    77,   827,    21,   637,  1178,   755,   759,
     755,   759,   755,   759,   760,   755,   759,   790,   755,   759,
     755,   965,   965,   946,   754,   755,  1515,  1515,  1515,  1515,
    1521,   733,  1520,  1676,  1094,   755,   966,   516,   488,   755,
     759,  1024,  1517,   239,   249,   393,   842,   843,   844,   845,
    1512,   755,   755,   755,   755,   755,   755,   759,   755,   755,
     755,   759,  1259,   755,   759,   755,   342,   265,   428,   755,
     755,   755,   755,   755,   755,  1064,   759,    48,   388,  1267,
     186,   266,  1257,   755,   175,   285,  1597,   385,   210,    21,
    1611,  1333,  1413,  1523,  1414,   147,   566,  1418,  1412,  1401,
    1402,  1505,  1523,   755,  1408,  1597,   597,  1498,   755,   258,
     258,  1228,   754,  1228,   754,  1073,  1073,  1318,   639,   759,
    1346,  1262,  1342,  1343,  1341,   806,  1523,   216,   263,   755,
     755,  1517,  1599,  1599,  1520,   120,   120,  1499,  1499,    48,
    1499,    48,    48,  1488,  1349,  1349,   755,   620,   982,   981,
     755,  1092,  1093,   755,   755,    77,   262,  1083,  1084,  1085,
    1086,  1089,  1090,  1095,   373,  1052,  1062,   755,   759,   755,
    1040,   754,  1067,  1503,  1503,  1228,  1049,   621,  1056,    15,
      21,  1228,  1135,  1136,   980,  1327,   511,  1517,   143,  1128,
    1402,  1640,   373,   802,   790,   795,  1523,   798,   759,   754,
     637,  1077,  1078,  1079,  1086,   816,  1080,  1081,  1082,  1086,
     228,   404,  1677,   755,  1517,   820,  1649,   841,  1057,   755,
     759,  1523,   194,   373,  1507,  1228,   342,   173,   755,  1359,
    1345,    48,   430,   482,   682,  1268,  1274,  1260,  1608,   385,
    1530,  1354,  1414,  1339,   263,  1512,    73,  1308,  1325,  1325,
     194,  1316,  1316,  1508,    21,   759,   754,   973,   111,   465,
    1669,  1670,  1599,  1499,  1499,  1499,   276,  1358,  1358,  1077,
     249,   272,    77,   111,   235,   322,   340,   364,   564,   993,
     994,   995,  1437,  1080,   755,   759,  1083,  1352,  1517,  1407,
    1085,   755,  1061,  1499,  1061,  1068,  1523,   319,  1069,   755,
     754,   755,   755,   821,   828,   829,   637,  1641,   674,   790,
     790,   398,  1142,  1079,   755,  1142,  1082,    48,  1083,   825,
     826,   473,  1655,   844,  1024,   149,   755,   755,   755,  1351,
      33,   103,   245,   697,  1269,  1270,  1271,  1500,  1503,  1611,
     637,  1610,   609,  1299,   754,   755,   755,   755,   212,   258,
     388,   754,   754,  1263,  1343,  1232,   754,   136,   369,   535,
    1357,   754,   984,   986,   574,  1407,   136,   136,  1407,  1407,
    1407,  1407,   754,   990,   995,   158,  1066,  1093,  1359,  1352,
     755,   759,   198,   400,   510,   378,  1070,  1228,   538,   823,
      54,    68,   182,   230,   257,   270,   381,   474,   830,   881,
     883,   884,   885,   887,   888,   889,   890,   891,   892,   894,
     902,   903,   906,   917,   920,   922,   923,  1514,  1525,  1536,
    1537,  1538,  1541,    53,    64,   282,   755,   759,  1514,  1362,
    1142,   822,  1024,   833,  1057,   484,   245,   697,  1270,  1272,
    1500,  1503,   484,  1228,   692,   679,  1273,   692,   692,   654,
    1417,  1053,   701,  1309,  1310,  1523,  1331,    48,    48,  1322,
    1324,   755,   977,  1407,   535,   754,   985,   986,   987,   327,
     983,   986,  1517,  1407,  1407,  1362,  1362,  1360,  1523,   555,
     991,   992,  1407,  1523,   130,   609,   755,  1228,   155,   824,
     904,   907,  1523,   197,   363,   895,   882,  1525,  1525,  1523,
     886,   771,   292,   455,   636,   926,    32,   924,   761,    64,
     385,    64,   790,   827,  1057,   134,   834,   835,  1235,  1656,
     191,   413,  1642,  1643,  1228,   681,    19,   681,   681,  1327,
     103,   212,   369,   696,    13,   125,   365,  1598,   482,  1489,
     703,   755,   759,   194,  1024,   755,   755,   554,   978,   755,
    1519,   755,   759,   327,   988,   989,  1232,  1517,  1517,  1527,
     755,   759,  1527,    52,   369,   470,   501,  1071,  1071,   548,
     629,  1023,  1228,  1228,   634,   909,   913,   197,  1523,   897,
     898,  1228,   847,   880,   881,   883,   885,   887,   889,   890,
     891,   892,   894,   902,   917,   920,   922,   847,   927,   925,
     918,   921,   385,   385,   755,   143,  1650,   134,   880,  1527,
    1645,  1327,  1272,   692,   484,   689,  1545,   228,  1483,  1498,
    1310,   702,  1057,  1360,   978,  1670,   986,   755,   759,   993,
     992,     6,   125,   372,   378,   378,  1044,   905,   914,   150,
     913,   916,   246,   154,  1228,   154,   880,   757,   608,  1228,
     848,   926,   924,   828,   833,   880,   681,    48,  1486,  1308,
     171,  1311,   989,   609,   130,   634,   908,   910,  1228,   847,
     154,   893,   230,   899,   292,   757,   929,   928,   124,   846,
     849,   919,  1525,   919,  1651,  1499,   231,  1490,   703,  1071,
    1071,   911,   910,   916,   915,    54,   896,  1523,   575,  1228,
     143,    95,   172,   852,   878,  1523,   154,   880,   757,   880,
     373,   754,  1492,  1498,  1228,   154,   575,   759,   847,   930,
     847,   215,   759,  1024,    86,   105,   757,   278,   482,  1491,
     755,   758,  1493,  1494,  1510,   501,  1495,   125,   162,   372,
    1312,  1313,  1314,  1315,   912,    54,   847,  1523,   900,   154,
     154,   194,  1523,  1057,   194,   194,  1527,   755,   759,  1496,
    1497,  1510,  1498,  1314,  1315,  1313,  1315,   378,   575,   150,
     151,   901,   455,   636,   850,   125,   879,   855,   856,  1359,
     851,  1494,   759,  1406,   378,   378,   162,   699,   847,   847,
     897,   521,   523,   853,   854,   855,   858,  1235,  1523,  1228,
    1202,  1497,  1412,   759,   880,   196,   854
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   765,   766,   766,   766,   766,   766,   767,   768,   767,
     767,   769,   769,   770,   770,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   772,   773,   773,   774,
     775,   775,   777,   776,   778,   778,   779,   779,   780,   782,
     781,   784,   783,   785,   783,   786,   786,   787,   787,   787,
     787,   787,   787,   787,   788,   788,   789,   789,   790,   791,
     791,   792,   792,   793,   793,   794,   794,   795,   796,   796,
     797,   797,   798,   799,   799,   800,   800,   800,   800,   800,
     800,   800,   800,   800,   800,   800,   800,   800,   800,   800,
     800,   800,   800,   800,   800,   800,   800,   800,   800,   800,
     800,   800,   800,   800,   800,   801,   801,   801,   802,   803,
     803,   804,   804,   805,   805,   805,   805,   806,   806,   807,
     807,   807,   807,   808,   809,   811,   810,   810,   810,   810,
     810,   810,   810,   812,   812,   813,   813,   813,   813,   813,
     814,   814,   815,   815,   815,   816,   816,   817,   817,   817,
     817,   817,   817,   817,   819,   818,   821,   820,   820,   822,
     822,   822,   822,   823,   823,   824,   824,   825,   825,   826,
     826,   827,   827,   829,   828,   830,   830,   830,   830,   830,
     830,   830,   830,   830,   830,   830,   830,   830,   831,   831,
     832,   832,   833,   833,   834,   834,   834,   834,   834,   834,
     834,   835,   835,   835,   836,   836,   837,   838,   838,   839,
     839,   840,   840,   841,   842,   842,   843,   843,   844,   845,
     845,   845,   845,   846,   846,   847,   847,   848,   848,   849,
     849,   850,   849,   851,   849,   852,   852,   853,   853,   854,
     855,   855,   856,   857,   857,   858,   858,   858,   858,   858,
     859,   860,   860,   861,   861,   862,   862,   863,   863,   864,
     864,   864,   865,   865,   865,   865,   865,   865,   865,   865,
     865,   865,   865,   865,   866,   867,   868,   868,   868,   869,
     869,   870,   870,   871,   872,   872,   873,   873,   874,   875,
     875,   876,   877,   877,   877,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   878,   878,   879,   879,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   882,   881,   884,   883,   886,   885,   888,   887,
     889,   890,   891,   893,   892,   894,   895,   895,   895,   896,
     896,   898,   899,   900,   897,   901,   901,   901,   902,   902,
     904,   905,   903,   907,   906,   908,   908,   909,   909,   911,
     912,   910,   914,   915,   913,   916,   916,   918,   917,   919,
     919,   921,   920,   923,   922,   925,   924,   926,   927,   928,
     926,   929,   930,   926,   931,   931,   932,   932,   932,   933,
     933,   934,   934,   935,   935,   936,   936,   937,   937,   937,
     937,   937,   937,   937,   937,   937,   937,   938,   938,   939,
     939,   940,   940,   940,   940,   940,   940,   941,   941,   942,
     942,   943,   944,   944,   945,   945,   946,   946,   946,   946,
     946,   946,   946,   947,   947,   948,   948,   949,   949,   949,
     950,   951,   951,   952,   953,   954,   955,   956,   957,   958,
     959,   960,   961,   962,   963,   963,   964,   965,   965,   966,
     966,   967,   967,   968,   968,   968,   969,   969,   970,   971,
     971,   971,   971,   971,   971,   972,   972,   973,   973,   974,
     974,   975,   975,   975,   976,   976,   977,   977,   978,   978,
     979,   979,   980,   980,   981,   982,   982,   982,   983,   983,
     984,   984,   985,   985,   987,   986,   988,   988,   989,   989,
     990,   990,   991,   991,   992,   993,   993,   994,   994,   995,
     995,   995,   995,   995,   995,   995,   995,   996,   996,   997,
     997,   998,   998,   998,   999,   999,  1000,  1000,  1001,  1001,
    1002,  1002,  1003,  1003,  1003,  1003,  1003,  1003,  1003,  1003,
    1003,  1003,  1003,  1003,  1003,  1003,  1003,  1003,  1003,  1003,
    1003,  1003,  1003,  1003,  1003,  1003,  1003,  1003,  1003,  1003,
    1003,  1003,  1003,  1004,  1004,  1005,  1006,  1007,  1008,  1008,
    1008,  1008,  1008,  1008,  1009,  1009,  1009,  1010,  1010,  1010,
    1010,  1011,  1011,  1012,  1012,  1013,  1014,  1014,  1015,  1015,
    1015,  1015,  1015,  1015,  1016,  1017,  1017,  1018,  1018,  1019,
    1019,  1020,  1021,  1021,  1022,  1022,  1023,  1023,  1023,  1024,
    1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,
    1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,
    1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,  1024,
    1024,  1024,  1024,  1024,  1024,  1024,  1025,  1025,  1025,  1025,
    1025,  1025,  1025,  1025,  1026,  1026,  1027,  1027,  1028,  1028,
    1028,  1028,  1028,  1029,  1029,  1029,  1029,  1029,  1030,  1030,
    1031,  1031,  1032,  1032,  1032,  1032,  1033,  1033,  1034,  1034,
    1034,  1035,  1036,  1036,  1037,  1037,  1037,  1038,  1038,  1039,
    1039,  1040,  1040,  1040,  1041,  1041,  1041,  1041,  1042,  1042,
    1043,  1043,  1044,  1044,  1045,  1045,  1046,  1046,  1046,  1046,
    1046,  1046,  1046,  1046,  1046,  1046,  1046,  1046,  1046,  1046,
    1046,  1046,  1046,  1046,  1047,  1047,  1047,  1048,  1048,  1048,
    1049,  1050,  1050,  1051,  1051,  1052,  1052,  1053,  1053,  1054,
    1054,  1055,  1055,  1056,  1056,  1057,  1057,  1058,  1058,  1059,
    1059,  1059,  1060,  1060,  1060,  1061,  1061,  1061,  1061,  1061,
    1061,  1061,  1062,  1062,  1064,  1063,  1065,  1065,  1066,  1067,
    1067,  1068,  1068,  1069,  1069,  1069,  1069,  1070,  1070,  1070,
    1070,  1070,  1071,  1071,  1071,  1071,  1071,  1072,  1072,  1073,
    1073,  1074,  1074,  1075,  1075,  1075,  1076,  1076,  1077,  1077,
    1078,  1078,  1079,  1079,  1080,  1080,  1081,  1081,  1082,  1083,
    1083,  1084,  1084,  1085,  1085,  1086,  1086,  1086,  1087,  1087,
    1087,  1088,  1088,  1089,  1089,  1090,  1090,  1091,  1091,  1091,
    1092,  1092,  1093,  1093,  1094,  1094,  1095,  1095,  1096,  1096,
    1097,  1097,  1098,  1098,  1099,  1099,  1101,  1100,  1103,  1102,
    1105,  1104,  1107,  1106,  1108,  1106,  1110,  1109,  1111,  1112,
    1112,  1112,  1112,  1113,  1114,  1115,  1115,  1115,  1115,  1115,
    1115,  1115,  1116,  1116,  1117,  1118,  1119,  1119,  1120,  1120,
    1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,
    1121,  1121,  1121,  1121,  1121,  1121,  1122,  1122,  1123,  1123,
    1124,  1124,  1124,  1124,  1125,  1126,  1126,  1126,  1126,  1127,
    1127,  1128,  1128,  1129,  1129,  1130,  1130,  1131,  1131,  1132,
    1132,  1133,  1133,  1133,  1133,  1134,  1134,  1134,  1134,  1134,
    1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,
    1134,  1134,  1134,  1134,  1134,  1135,  1135,  1136,  1136,  1137,
    1137,  1138,  1138,  1138,  1138,  1138,  1139,  1139,  1140,  1140,
    1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,
    1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,
    1140,  1140,  1140,  1140,  1141,  1141,  1141,  1142,  1142,  1142,
    1142,  1142,  1143,  1144,  1144,  1145,  1146,  1146,  1147,  1147,
    1148,  1148,  1149,  1149,  1149,  1150,  1150,  1150,  1151,  1151,
    1151,  1151,  1152,  1152,  1153,  1153,  1154,  1156,  1155,  1157,
    1158,  1158,  1159,  1159,  1160,  1160,  1160,  1161,  1162,  1162,
    1163,  1163,  1164,  1164,  1165,  1165,  1166,  1166,  1167,  1167,
    1168,  1168,  1169,  1169,  1170,  1170,  1170,  1170,  1170,  1171,
    1172,  1172,  1172,  1173,  1174,  1174,  1175,  1175,  1176,  1176,
    1176,  1177,  1178,  1178,  1179,  1179,  1179,  1180,  1181,  1182,
    1182,  1183,  1183,  1184,  1184,  1184,  1184,  1184,  1184,  1185,
    1186,  1186,  1186,  1188,  1187,  1187,  1189,  1189,  1190,  1190,
    1191,  1192,  1192,  1193,  1193,  1194,  1195,  1195,  1196,  1196,
    1197,  1197,  1198,  1199,  1200,  1200,  1201,  1201,  1202,  1202,
    1202,  1202,  1203,  1203,  1203,  1203,  1204,  1204,  1204,  1204,
    1204,  1204,  1204,  1205,  1205,  1205,  1205,  1205,  1206,  1206,
    1206,  1207,  1207,  1207,  1208,  1208,  1209,  1209,  1210,  1211,
    1211,  1212,  1212,  1213,  1214,  1215,  1215,  1216,  1216,  1217,
    1217,  1218,  1218,  1219,  1219,  1219,  1220,  1220,  1221,  1222,
    1222,  1223,  1223,  1224,  1224,  1224,  1225,  1225,  1226,  1226,
    1226,  1226,  1226,  1227,  1227,  1228,  1228,  1228,  1228,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1229,  1229,  1229,  1229,
    1229,  1230,  1230,  1230,  1230,  1230,  1230,  1230,  1230,  1230,
    1230,  1230,  1230,  1230,  1230,  1230,  1230,  1230,  1231,  1231,
    1232,  1232,  1232,  1232,  1232,  1232,  1232,  1232,  1232,  1232,
    1232,  1232,  1232,  1232,  1232,  1233,  1233,  1234,  1234,  1235,
    1235,  1236,  1236,  1237,  1237,  1237,  1237,  1237,  1237,  1237,
    1238,  1238,  1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,
    1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,
    1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,  1239,
    1239,  1239,  1239,  1239,  1239,  1240,  1240,  1241,  1241,  1241,
    1241,  1241,  1241,  1241,  1241,  1241,  1241,  1241,  1241,  1241,
    1241,  1241,  1241,  1241,  1241,  1241,  1241,  1241,  1241,  1241,
    1241,  1241,  1241,  1241,  1242,  1242,  1242,  1242,  1242,  1242,
    1242,  1242,  1242,  1242,  1242,  1242,  1242,  1242,  1242,  1242,
    1242,  1242,  1242,  1242,  1242,  1242,  1243,  1243,  1243,  1243,
    1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,
    1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,  1244,
    1244,  1244,  1244,  1244,  1244,  1244,  1245,  1245,  1246,  1246,
    1247,  1247,  1248,  1248,  1249,  1249,  1250,  1250,  1251,  1252,
    1252,  1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,
    1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,
    1253,  1253,  1254,  1254,  1254,  1254,  1254,  1254,  1254,  1254,
    1254,  1254,  1254,  1255,  1255,  1255,  1256,  1256,  1257,  1257,
    1257,  1258,  1258,  1258,  1259,  1259,  1260,  1261,  1261,  1262,
    1263,  1264,  1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,
    1269,  1269,  1270,  1270,  1270,  1270,  1270,  1271,  1272,  1272,
    1272,  1272,  1272,  1273,  1273,  1273,  1273,  1273,  1274,  1274,
    1274,  1275,  1276,  1277,  1277,  1277,  1278,  1278,  1279,  1279,
    1280,  1280,  1281,  1281,  1282,  1283,  1283,  1283,  1283,  1283,
    1283,  1283,  1283,  1283,  1283,  1283,  1283,  1283,  1283,  1284,
    1284,  1285,  1285,  1286,  1286,  1287,  1287,  1288,  1288,  1289,
    1289,  1290,  1290,  1291,  1291,  1291,  1292,  1292,  1293,  1293,
    1293,  1293,  1293,  1293,  1294,  1294,  1294,  1295,  1295,  1295,
    1295,  1296,  1296,  1297,  1297,  1298,  1298,  1299,  1299,  1300,
    1301,  1301,  1301,  1301,  1301,  1301,  1302,  1302,  1303,  1303,
    1304,  1305,  1305,  1306,  1306,  1307,  1308,  1309,  1309,  1310,
    1310,  1310,  1311,  1311,  1312,  1312,  1312,  1312,  1312,  1313,
    1314,  1315,  1315,  1315,  1316,  1316,  1316,  1316,  1317,  1317,
    1318,  1318,  1319,  1319,  1320,  1320,  1321,  1322,  1322,  1323,
    1323,  1324,  1324,  1325,  1326,  1326,  1327,  1327,  1327,  1327,
    1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,  1328,  1328,
    1328,  1328,  1328,  1328,  1328,  1328,  1328,  1329,  1329,  1329,
    1329,  1330,  1330,  1331,  1331,  1332,  1332,  1333,  1333,  1334,
    1335,  1335,  1336,  1336,  1337,  1337,  1338,  1339,  1339,  1340,
    1340,  1341,  1341,  1342,  1342,  1343,  1344,  1344,  1345,  1345,
    1346,  1346,  1347,  1347,  1348,  1349,  1349,  1350,  1351,  1351,
    1352,  1352,  1353,  1353,  1354,  1354,  1355,  1356,  1356,  1356,
    1357,  1357,  1357,  1357,  1357,  1358,  1358,  1359,  1359,  1359,
    1359,  1359,  1359,  1360,  1360,  1360,  1360,  1360,  1361,  1361,
    1361,  1361,  1361,  1362,  1362,  1362,  1362,  1362,  1363,  1364,
    1364,  1365,  1365,  1366,  1366,  1367,  1368,  1368,  1368,  1369,
    1370,  1371,  1372,  1373,  1373,  1374,  1375,  1376,  1377,  1378,
    1379,  1380,  1381,  1382,  1383,  1384,  1385,  1386,  1386,  1387,
    1387,  1388,  1388,  1389,  1389,  1390,  1390,  1391,  1391,  1392,
    1392,  1393,  1393,  1393,  1394,  1394,  1394,  1395,  1395,  1395,
    1395,  1396,  1396,  1397,  1397,  1398,  1398,  1398,  1399,  1399,
    1399,  1400,  1400,  1401,  1402,  1402,  1402,  1403,  1403,  1404,
    1404,  1405,  1405,  1406,  1406,  1407,  1407,  1408,  1409,  1410,
    1410,  1411,  1411,  1412,  1412,  1413,  1413,  1414,  1414,  1415,
    1416,  1416,  1417,  1417,  1418,  1419,  1419,  1420,  1420,  1420,
    1421,  1421,  1422,  1422,  1423,  1423,  1423,  1424,  1425,  1425,
    1426,  1426,  1427,  1427,  1428,  1428,  1428,  1428,  1428,  1428,
    1428,  1428,  1428,  1429,  1429,  1431,  1430,  1432,  1432,  1432,
    1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1433,
    1432,  1434,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,
    1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,
    1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,
    1432,  1432,  1432,  1432,  1435,  1435,  1435,  1436,  1436,  1437,
    1437,  1438,  1438,  1439,  1439,  1440,  1440,  1441,  1441,  1441,
    1441,  1442,  1442,  1443,  1443,  1444,  1444,  1445,  1445,  1445,
    1446,  1447,  1448,  1448,  1448,  1448,  1448,  1448,  1449,  1449,
    1450,  1450,  1450,  1451,  1451,  1451,  1453,  1452,  1455,  1454,
    1454,  1456,  1456,  1457,  1456,  1458,  1458,  1459,  1459,  1459,
    1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1460,
    1460,  1462,  1461,  1461,  1463,  1463,  1464,  1464,  1466,  1465,
    1467,  1465,  1468,  1468,  1469,  1469,  1471,  1470,  1472,  1473,
    1473,  1474,  1475,  1475,  1475,  1476,  1477,  1478,  1478,  1479,
    1479,  1480,  1480,  1480,  1481,  1481,  1482,  1482,  1483,  1483,
    1484,  1484,  1485,  1485,  1485,  1485,  1486,  1486,  1487,  1487,
    1488,  1488,  1489,  1489,  1490,  1490,  1491,  1491,  1492,  1492,
    1492,  1493,  1493,  1494,  1494,  1495,  1495,  1496,  1496,  1497,
    1498,  1498,  1498,  1498,  1499,  1499,  1499,  1500,  1501,  1501,
    1501,  1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,
    1502,  1503,  1503,  1503,  1503,  1503,  1504,  1504,  1504,  1505,
    1505,  1506,  1506,  1507,  1508,  1509,  1509,  1510,  1510,  1511,
    1511,  1512,  1512,  1513,  1513,  1514,  1514,  1515,  1516,  1517,
    1518,  1519,  1520,  1521,  1521,  1522,  1523,  1523,  1524,  1524,
    1525,  1525,  1526,  1526,  1527,  1527,  1527,  1528,  1528,  1528,
    1529,  1529,  1530,  1530,  1531,  1531,  1532,  1533,  1533,  1533,
    1533,  1533,  1534,  1534,  1534,  1535,  1535,  1535,  1535,  1535,
    1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,
    1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,
    1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,  1535,
    1536,  1536,  1536,  1537,  1537,  1537,  1537,  1537,  1537,  1537,
    1537,  1537,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,  1538,
    1538,  1538,  1538,  1538,  1538,  1539,  1539,  1539,  1540,  1540,
    1540,  1540,  1541,  1541,  1541,  1541,  1541,  1542,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1544,  1544,  1544,  1544,  1544,
    1544,  1544,  1545,  1545,  1546,  1546,  1547,  1547,  1548,  1549,
    1549,  1550,  1550,  1551,  1551,  1552,  1552,  1553,  1553,  1553,
    1553,  1553,  1554,  1554,  1554,  1554,  1555,  1555,  1555,  1555,
    1556,  1556,  1556,  1556,  1556,  1556,  1557,  1558,  1558,  1558,
    1558,  1558,  1558,  1558,  1559,  1559,  1559,  1560,  1560,  1561,
    1562,  1562,  1563,  1564,  1564,  1565,  1565,  1566,  1566,  1566,
    1566,  1567,  1567,  1567,  1567,  1567,  1567,  1567,  1569,  1568,
    1568,  1570,  1570,  1571,  1571,  1572,  1573,  1573,  1573,  1573,
    1575,  1574,  1574,  1576,  1577,  1578,  1579,  1579,  1579,  1580,
    1580,  1580,  1580,  1580,  1581,  1581,  1582,  1582,  1582,  1582,
    1583,  1583,  1583,  1583,  1583,  1584,  1584,  1585,  1584,  1584,
    1584,  1586,  1586,  1587,  1586,  1586,  1588,  1588,  1588,  1588,
    1589,  1589,  1590,  1590,  1591,  1591,  1591,  1591,  1591,  1591,
    1591,  1591,  1591,  1591,  1591,  1591,  1591,  1591,  1591,  1591,
    1591,  1591,  1591,  1591,  1591,  1591,  1591,  1591,  1591,  1591,
    1591,  1591,  1591,  1591,  1591,  1591,  1591,  1591,  1592,  1592,
    1593,  1593,  1594,  1594,  1595,  1595,  1595,  1596,  1596,  1596,
    1596,  1596,  1597,  1597,  1598,  1598,  1599,  1599,  1600,  1600,
    1601,  1601,  1601,  1601,  1601,  1601,  1601,  1602,  1602,  1602,
    1602,  1602,  1602,  1602,  1602,  1602,  1602,  1603,  1603,  1604,
    1604,  1605,  1605,  1606,  1606,  1607,  1607,  1607,  1607,  1607,
    1608,  1608,  1609,  1609,  1610,  1610,  1610,  1610,  1610,  1611,
    1611,  1613,  1612,  1614,  1614,  1615,  1615,  1615,  1616,  1616,
    1616,  1617,  1617,  1618,  1619,  1619,  1620,  1621,  1622,  1622,
    1622,  1623,  1624,  1625,  1626,  1626,  1626,  1626,  1626,  1626,
    1626,  1626,  1627,  1628,  1628,  1628,  1629,  1629,  1629,  1629,
    1629,  1630,  1630,  1630,  1630,  1630,  1630,  1631,  1631,  1632,
    1633,  1634,  1634,  1634,  1635,  1636,  1636,  1636,  1637,  1637,
    1637,  1639,  1638,  1640,  1641,  1641,  1641,  1641,  1642,  1642,
    1643,  1643,  1645,  1644,  1646,  1646,  1648,  1649,  1650,  1651,
    1647,  1653,  1654,  1655,  1656,  1652,  1657,  1657,  1657,  1657,
    1657,  1657,  1658,  1658,  1659,  1659,  1659,  1660,  1660,  1661,
    1661,  1661,  1662,  1662,  1663,  1663,  1663,  1664,  1664,  1665,
    1665,  1666,  1666,  1667,  1668,  1668,  1669,  1669,  1670,  1670,
    1670,  1671,  1671,  1672,  1672,  1673,  1673,  1674,  1674,  1675,
    1675,  1676,  1676,  1677,  1677,  1677,  1678,  1678
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     4,
       1,     2,     0,     4,     0,     2,     3,     1,     2,     0,
       3,     0,     6,     0,     6,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     3,     1,     3,     1,     2,
       3,     5,     7,     2,     3,     1,     3,     3,     2,     3,
       1,     3,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     5,     3,
       3,     3,     3,     3,     1,     0,     1,     3,     1,     1,
       1,     1,     1,     3,     3,     3,     3,     0,     3,     9,
       6,     7,     9,     4,    10,     0,     6,     2,     8,     7,
       6,     7,    11,     8,     7,     0,     3,     3,     6,     3,
       0,     3,    12,    11,    11,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     0,    12,     0,     6,     2,     0,
       1,     3,     1,     0,     2,     0,     2,     0,     1,     3,
       4,     0,     2,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       0,     2,     0,     2,     2,     2,     2,     2,     3,     3,
       1,     1,     1,     2,     3,     3,     3,     0,     3,     0,
       1,     3,     1,     3,     0,     1,     3,     1,     4,     0,
       1,     1,     1,     0,     3,     2,     3,     0,     3,     5,
       5,     0,     7,     0,     6,     1,     1,     1,     3,     1,
       1,     1,     3,     0,     1,     1,     1,     1,     2,     1,
       3,     1,     1,     0,     1,     0,     2,     3,     5,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     4,     0,     1,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     5,     0,     2,     0,     3,     0,     2,
       2,     2,     2,     0,     6,     2,     0,     2,     1,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     1,     1,
       0,     0,     8,     0,     6,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     5,     0,
       1,     0,     5,     0,     2,     0,     5,     4,     0,     0,
       8,     0,     0,     8,     1,     1,     1,     1,     1,     0,
       2,     0,     4,     0,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     1,     0,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     1,     1,     1,
       2,     1,     1,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     4,     3,     1,     1,     3,     1,     1,     2,
       1,     2,     1,     0,     2,     1,     2,     1,     6,     6,
       5,     4,     5,     4,     5,     0,     1,     0,     3,     0,
       2,     0,     8,     9,     0,     1,     1,     3,     0,     2,
       0,     3,     1,     3,     5,     0,     4,     3,     1,     1,
       1,     3,     1,     3,     0,     4,     1,     3,     1,     1,
       0,     3,     1,     3,     3,     0,     1,     2,     1,     3,
       4,     3,     3,     3,     4,     4,     3,     0,     1,     1,
       2,     1,     1,     1,     0,     3,     1,     2,     1,     3,
       0,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     5,     1,     1,     3,     4,     4,     3,     2,
       2,     3,     3,     1,     1,     4,     4,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     3,     0,     1,     6,     7,
       7,     7,     8,     3,     4,     0,     2,     0,     1,     0,
       1,     2,     2,     9,     0,     2,     0,     1,     1,     3,
       3,     3,     1,     2,     1,     1,     3,     2,     3,     2,
       2,     1,     3,     3,     2,     3,     1,     2,     2,     2,
       1,     2,     1,     1,     1,     2,     3,     2,     3,     2,
       2,     5,     5,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     2,     1,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     2,
       0,     1,     1,     1,     1,     1,     0,     1,     0,     1,
       1,     5,     0,     3,     0,     2,     3,     0,     1,     2,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     1,
       0,     1,     0,     1,     2,     1,     1,     2,     2,     2,
       4,     3,     1,     3,     2,     1,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       2,     1,     1,     2,     1,     1,     1,     0,     2,     1,
       1,     1,     1,     1,     1,     0,     2,     0,     1,     1,
       2,     2,     1,     2,     2,     0,     1,     1,     1,     3,
       1,     3,     0,     1,     0,     4,     0,     1,     5,     0,
       3,     3,     1,     0,     2,     2,     2,     0,     3,     3,
       6,     6,     1,     1,     2,     2,     2,     2,     2,     1,
       1,     0,     1,     1,     1,     1,     0,     1,     0,     1,
       1,     2,     1,     3,     0,     1,     1,     2,     1,     0,
       1,     1,     2,     1,     1,     3,     2,     1,     1,     3,
       3,     0,     1,     2,     2,     1,     1,     1,     1,     1,
       3,     1,     2,     5,     3,     1,     1,     4,     0,     1,
       0,     2,     1,     3,     4,     4,     0,     5,     0,     5,
       0,     5,     0,     5,     0,     4,     0,    10,     7,     6,
       6,     6,     4,     7,     7,     5,     8,     7,     5,     5,
       5,     5,     0,     2,     8,     3,     0,     1,     1,     2,
       2,     2,     2,     5,     3,     3,     3,     3,     5,     4,
       3,     4,     4,     2,     2,     2,     0,     2,     2,     1,
       2,     2,     2,     2,     3,     0,     3,     1,     4,     0,
       3,     0,     2,     0,     1,     1,     2,     1,     3,     1,
       2,     0,     1,     1,     3,     2,     2,     3,     6,     5,
       3,     4,     4,     4,     4,     5,     4,     3,     3,     8,
       7,     4,     4,     1,     1,     0,     1,     2,     2,     1,
       1,     1,     3,     3,     1,     3,     1,     3,     6,     5,
       2,     6,     5,     4,     4,     3,     3,     3,     3,     2,
       2,     6,     8,     5,     4,     4,     4,     3,     5,     5,
       5,     5,     1,     3,     1,     1,     1,     0,     1,     1,
       2,     2,     3,     1,     1,     3,     1,     1,     0,     1,
       0,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     2,     2,     2,     4,     3,     0,     4,     3,
       0,     1,     1,     3,     3,     2,     2,     4,     0,     3,
       0,     3,     0,     3,     0,     3,     0,     1,     1,     3,
       1,     1,     0,     2,     1,     3,     3,     3,     1,     4,
       0,     1,     1,     5,     0,     1,     1,     2,     1,     1,
       1,     5,     0,     3,     0,     5,     4,     2,     4,     0,
       1,     1,     2,     1,     1,     1,     1,     1,     2,     4,
       0,     1,     1,     0,     4,     3,     3,     5,     1,     3,
       3,     5,     7,     1,     3,     2,     1,     1,     8,     5,
       1,     3,     3,     4,     0,     4,     0,     2,     1,     2,
       1,     1,     3,     2,     3,     3,     3,     4,     3,     4,
       2,     3,     2,     1,     4,     4,     4,     4,     3,     3,
       4,     1,     1,     1,     9,     8,     0,     1,     2,     1,
       1,     1,     3,     2,     2,     0,     1,     2,     1,     1,
       1,     2,     1,     3,     4,     4,     1,     1,     2,     0,
       1,     2,     1,     3,     1,     1,     1,     2,     0,     2,
       2,     1,     1,     0,     2,     3,     3,     3,     2,     3,
       4,     3,     4,     3,     4,     1,     3,     4,     3,     4,
       1,     3,     4,     5,     7,     6,     8,     6,     5,     6,
       4,     3,     5,     4,     6,     3,     4,     1,     1,     0,
       3,     3,     3,     3,     3,     3,     5,     5,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     3,     2,     2,     2,     2,     1,     3,
       5,     6,     2,     4,     7,     2,     7,     5,     6,     6,
       4,     4,     5,     3,     3,     0,     1,     4,     6,     2,
       4,     4,     4,    10,     6,     8,     6,     4,     4,     6,
       4,     4,     4,     6,     4,     7,     7,     7,     6,     6,
       6,     6,     3,     4,     6,     8,     2,     2,     8,     8,
       6,     6,     1,     6,     6,     8,     8,     6,     8,     6,
       2,     8,     8,     2,     2,     2,     4,     4,     4,     4,
       3,     8,     6,     8,     4,     6,     4,     6,     8,     4,
       3,     6,     4,     6,     4,     7,     7,    10,     1,     4,
       4,     4,     4,     4,     6,     4,     4,     6,     2,     3,
       0,     4,     0,     3,     0,     1,     1,     3,     2,     1,
       1,     5,     6,     5,     5,     5,     7,     5,     6,     5,
       6,     5,     6,     5,     6,     5,     5,     5,     5,     5,
       6,     8,     4,     4,     4,     4,     4,     5,     7,     7,
       6,     6,     9,     0,     3,     3,     0,     2,     0,     2,
       2,     0,     2,     2,     0,     1,     2,     1,     1,     1,
       3,     4,     0,     1,     0,     3,     0,     3,     0,     3,
       1,     1,     2,     2,     2,     4,     2,     4,     1,     2,
       2,     2,     4,     0,     3,     2,     2,     3,     1,     1,
       1,     4,     2,     3,     1,     4,     0,     1,     0,     2,
       0,     3,     3,     1,     2,     2,     3,     2,     1,     2,
       1,     2,     1,     2,     2,     2,     1,     1,     2,     0,
       1,     1,     3,     1,     3,     1,     3,     0,     1,     0,
       2,     4,     5,     1,     1,     4,     1,     1,     5,     7,
       5,     7,     3,     3,     3,     4,     4,     1,     2,     2,
       1,     3,     3,     0,     1,     0,     1,     0,     1,     4,
       1,     1,     1,     1,     1,     1,     3,     5,     3,     3,
       4,     3,     3,     3,     4,     8,     4,     1,     3,     3,
       7,     4,     0,     1,     0,     1,     1,     2,     2,     3,
       3,     1,     1,     2,     0,     2,     3,     3,     1,     1,
       6,     6,     1,     2,     0,     1,     1,     0,     1,     1,
       1,     1,     3,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     0,     1,     2,
       0,     2,     2,     3,     3,     1,     4,     0,     3,     1,
       3,     0,     2,     1,     3,     3,     0,     4,     3,     1,
       0,     1,     3,     1,     2,     0,     1,     3,     3,     1,
       0,     1,     1,     1,     0,     1,     2,     1,     3,     3,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     2,     1,     2,     5,     2,     1,     2,
       6,     6,     4,     6,     4,     5,     4,     4,     5,     4,
       4,     4,     5,     5,     4,     6,     4,     1,     3,     1,
       3,     0,     2,     0,     1,     0,     1,     1,     3,     1,
       1,     9,    10,     8,     6,     7,     6,     0,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     4,     1,     3,
       4,     3,     1,     2,     1,     2,     1,     1,     1,     3,
       1,     3,     1,     1,     1,     0,     1,     3,     4,     0,
       1,     3,     1,     1,     1,     0,     3,     0,     5,    10,
       0,     1,     3,     1,     3,     0,     1,    10,     7,     8,
       0,     2,     0,     2,     1,     1,     1,     3,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     0,     3,     2,     4,     4,
       3,     4,     4,     1,     3,     3,     6,     2,     2,     0,
       6,     0,     7,     6,     2,     5,     5,     2,     2,     1,
       4,     3,     2,     3,     2,     2,     1,     1,     3,     5,
       4,     3,     3,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     0,
       1,     0,     2,     0,     1,     0,     1,     0,     1,     1,
       2,     1,     1,     0,     2,     0,     2,     0,     2,     1,
       3,     3,     1,     1,     1,     1,     1,     3,     1,     1,
       0,     3,     1,     0,     1,     1,     0,     4,     0,     4,
       1,     0,     3,     0,     3,     3,     1,     2,     2,     2,
       2,     2,     3,     1,     1,     1,     1,     1,     1,     0,
       1,     0,     3,     3,     3,     1,     0,     2,     0,     4,
       0,     3,     0,     1,     0,     2,     0,     3,     3,     2,
       2,     3,     0,     1,     1,     2,    18,     1,     1,     0,
       1,     0,     1,     1,     0,     1,     1,     1,     0,     2,
       2,     1,     3,     4,     3,     3,     0,     2,     2,     1,
       3,     3,     0,     4,     0,     3,     1,     1,     0,     3,
       2,     3,     1,     1,     2,     0,     2,     3,     1,     3,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     2,     2,     2,     1,
       1,     3,     5,     2,     1,     1,     1,     1,     1,     3,
       5,     1,     3,     2,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     2,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     5,     5,     7,     7,     3,     3,     3,     6,     6,
       6,     4,     0,     2,     4,     6,     1,     3,     1,     2,
       2,     0,     2,     1,     3,     2,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     1,     0,     2,     2,     2,
       0,     2,     2,     2,     2,     2,     3,     3,     4,     6,
       2,     3,     3,     2,     1,     3,     3,     2,     2,     1,
       0,     2,     3,     0,     2,     2,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       4,     1,     1,     1,     3,     3,     1,     1,     2,     2,
       0,     3,     2,     1,     1,     3,     4,     2,     6,     4,
       3,     6,     7,    10,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     7,     0,     9,     8,
       6,     5,     9,     0,    11,     7,     0,     1,     1,     1,
       0,     1,     1,     3,     2,     3,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     2,     2,     2,     0,     3,
       0,     1,     3,     1,     2,     2,     2,     1,     3,     3,
       1,     3,     1,     3,     1,     3,     0,     3,     0,     3,
       4,     5,     4,     6,     6,     7,     1,     7,     9,     5,
       6,     8,     4,     7,     7,     8,     2,     1,     3,     1,
       3,     0,     3,     1,     3,     0,     2,     2,     2,     2,
       0,     3,     0,     3,     0,     3,     4,     3,     3,     0,
       3,     0,     3,     0,     1,     0,     3,     2,     0,     1,
       2,     0,     1,     4,     4,     5,     2,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     3,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     1,     2,     1,     2,     3,     3,     3,     0,     3,
       3,     0,     7,     2,     0,     3,     4,     4,     1,     1,
       0,     2,     0,    12,     7,     6,     0,     0,     0,     0,
      14,     0,     0,     0,     0,    11,     4,     4,     3,     4,
       3,     3,     0,     2,     1,     3,     5,     1,     1,     0,
       1,     1,     0,     2,     0,     1,     3,     5,     3,     3,
       3,     1,     3,     4,     6,    10,     1,     5,     0,     2,
       3,     1,     1,     0,     3,     1,     3,     1,     3,     1,
       2,     0,     3,     0,     1,     1,     0,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 1976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 22956 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 1981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 22970 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 1991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 22992 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 23000 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 23016 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 23043 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 10:
#line 2053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 23052 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 13:
#line 2065 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 23058 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 15:
#line 2071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23064 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23070 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23076 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 19:
#line 2075 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23082 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2076 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23088 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 22:
#line 2078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23094 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2079 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23100 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23106 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 26:
#line 2082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23112 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2083 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23118 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 29:
#line 2085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23124 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 31:
#line 2087 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23130 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 33:
#line 2089 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23136 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23142 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2091 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23148 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2092 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23154 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 42:
#line 2098 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23160 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 46:
#line 2102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23166 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23172 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23178 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 50:
#line 2106 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23184 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23190 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 54:
#line 2110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23196 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 56:
#line 2112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23202 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23208 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23214 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23220 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23226 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23232 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23238 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 64:
#line 2120 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23244 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23250 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23256 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2123 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23262 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 2125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23268 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23274 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23280 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23286 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23292 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23298 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23304 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23310 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23316 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23322 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23328 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 2144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23334 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23340 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23346 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 23352 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23358 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23364 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23370 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23376 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23382 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23388 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23394 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2161 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23400 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23411 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 23432 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 110:
#line 2201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 23443 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 23454 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23465 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2225 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23471 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 23482 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 119:
#line 2252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 23494 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 23504 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 23519 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2282 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23525 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 23539 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2294 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23545 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 23556 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 23567 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 23578 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 23589 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 23600 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 23612 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 23623 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 23633 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 23641 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 23652 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 23661 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 23672 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 23682 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 23690 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 23702 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 23712 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 23722 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 23730 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 23741 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 23750 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 23763 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 23773 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 23781 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 23792 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 23801 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 23812 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 23820 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 23828 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 23836 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 23844 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 23858 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 23866 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 23874 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 23883 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 23898 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 23907 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 23915 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 23923 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 23931 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 23939 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 23947 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 23955 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 23964 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 23972 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 23980 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 23988 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 23998 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24036 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 24044 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 24052 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 24060 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24070 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) != 0 && (yyvsp[0].ulong_num) != 1) {
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
            else {
              Lex->mi.require_row_format = (yyvsp[0].ulong_num);
            }
          }
#line 24084 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 24092 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 24102 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 24112 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 24121 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 24130 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24138 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 24158 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24166 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 24177 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2747 "sql_yacc.yy" /* yacc.c:1646  */
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
#line 24186 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2752 "sql_yacc.yy" /* yacc.c:1646  */
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[0].lexer.lex_str).str);
         Lex->mi.channel= (yyvsp[0].lexer.lex_str).str;
         Lex->mi.for_channel= true;
       }
#line 24202 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24215 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24228 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 24236 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 24244 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 24252 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 24262 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 24274 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24285 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2834 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24291 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-3].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24305 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24328 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24350 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24373 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 24390 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 24398 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 24406 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 24416 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24432 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24448 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 24465 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24481 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 24489 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 24497 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24508 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24519 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24530 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 24538 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 24546 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 24554 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 24562 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 24571 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 24579 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 24587 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 24607 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 24619 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 24630 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 24640 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 24646 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 24656 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 24666 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 24676 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 24687 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 24697 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 24707 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 24713 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 3175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 24723 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 24733 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3189 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 24739 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 3191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 24748 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 24798 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 24812 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 24830 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 24850 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3305 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24856 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3306 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24862 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3310 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24868 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3311 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24874 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3317 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 24880 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3319 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 24886 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3321 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 24892 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3323 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 24898 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3325 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 24904 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3327 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 24910 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3329 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24916 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3334 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 24922 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3335 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 24928 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3336 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 24934 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 24942 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 24950 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 24958 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 24964 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3360 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 24972 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
#line 25024 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
#line 25075 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3489 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25081 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25087 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 25093 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 25099 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3496 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25105 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3501 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25111 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25119 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 25144 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3539 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.maybe_null= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25243 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 25264 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 25309 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 25347 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3729 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 25360 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3738 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 25425 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3801 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 25431 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 25437 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3808 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25443 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3810 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 25449 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 25473 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3838 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25488 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3853 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25511 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3874 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25517 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3875 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25523 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 25531 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 25548 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25558 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25568 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25578 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25592 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 25622 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 25628 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 25634 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3964 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 25640 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 25646 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3971 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 25652 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 25662 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 25672 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3995 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 25678 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 25702 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 4017 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 25708 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 4023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 25714 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 4025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 25720 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 4027 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 25726 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 4029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 25732 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 4031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 25738 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 4033 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 25744 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 4035 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 25750 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 4037 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 25756 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 4039 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 25762 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 4041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 25768 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 4043 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 25774 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 4045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 25780 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 4050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25795 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25812 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 25818 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 25824 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 25830 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 25840 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 25850 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 25860 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 25870 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 25880 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 25912 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 25921 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 25927 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 25933 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 25939 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 25949 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 25959 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 25969 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4202 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 25975 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 25981 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4206 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 25987 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4208 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 25993 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 25999 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4212 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 26005 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 26011 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4216 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 26017 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4218 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 26023 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 26029 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4222 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 26035 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 26041 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4226 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 26047 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 26071 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 4251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 26095 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 26104 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 26113 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 4303 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 26119 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 4305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 26129 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 4313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 26142 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 405:
#line 4322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26194 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 4373 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26206 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 4381 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26256 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 4429 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 26271 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 26284 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26342 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26390 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26414 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26438 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4599 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26444 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26468 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 26490 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 26512 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4671 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26524 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4679 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26565 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4717 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 26587 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4735 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 26600 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4758 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 26614 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4768 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26660 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4813 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 26668 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 26676 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 26684 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4844 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26696 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4852 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26741 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4894 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 26750 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4902 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26762 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4910 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26803 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4948 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 26812 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26830 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 26852 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 26873 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 5011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 26879 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 5012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 26885 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 26905 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 26924 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 5050 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 26939 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 26948 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5069 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 26965 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 5084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 26999 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27016 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5131 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27028 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5139 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27070 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5180 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 27089 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5197 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27101 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5205 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 27143 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 5248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 27149 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5250 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 27155 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 5255 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 27161 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 5257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 27167 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 5259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 27173 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 5273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27179 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 5275 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 27187 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 5281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27193 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 5283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 27201 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 5289 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27207 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 5295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27217 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 5301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27227 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 5322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27233 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 5328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27243 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 5334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27253 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 5351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27259 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 5357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27269 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 5363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27279 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 5375 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27285 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 5381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27295 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 5387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27305 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 5405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27311 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 5411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27321 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 5417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27331 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27337 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 27343 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5436 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 27349 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5440 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27355 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 27363 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 27371 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 27379 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 27387 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27395 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27403 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 27411 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 27419 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 27427 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 27435 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 27443 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 27451 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 27459 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 27465 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 27515 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 27524 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 27533 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 27544 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 27555 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 27566 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 27572 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5653 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 27578 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 27586 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 27594 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 27602 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 27610 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 27618 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 27626 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 27634 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 27640 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 27646 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 27652 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 27670 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5727 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 27676 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 27689 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5740 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 27695 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 27703 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 27711 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 27717 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 27727 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 27737 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5777 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 27743 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 27756 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 27762 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 27768 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 27778 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 27788 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 27797 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 27805 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 27814 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 27823 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 27829 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 27837 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 27845 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 27856 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 27866 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 27881 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 27889 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 27899 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 27909 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5900 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 27915 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5901 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 27921 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5906 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 27927 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 27933 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 27943 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 27953 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 27961 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5933 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 27967 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 5939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27977 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 5945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27987 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 27993 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 5956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 27999 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 28005 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5960 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 28011 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 5962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 28017 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 5964 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 28023 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 5966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 28029 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 5968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 28035 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 5976 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28041 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 5977 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28047 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 5981 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28053 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5982 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28059 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 5987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28068 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28077 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 28093 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 6011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28099 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 6012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28105 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28115 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 6023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28125 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28135 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28145 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 6052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28153 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 6056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 28161 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 6060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28169 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 6064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28177 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 6068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28185 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 6072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 28193 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 6076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28201 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 28209 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 6084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
	  }
#line 28217 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	  }
#line 28225 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 28233 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 28241 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 28249 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 28257 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 28278 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 28286 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28294 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28302 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 28310 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 28318 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 28326 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 28334 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 28342 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 28350 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28358 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28366 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28374 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 28382 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 28390 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 28398 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 28406 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 28424 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6205 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 28430 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 28436 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6213 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 28442 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 28448 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 28454 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6222 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 28460 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 28466 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 28472 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 28478 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6226 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 28484 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6230 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 28490 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6231 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 28496 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6232 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 28502 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6236 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 28508 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6237 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 28514 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6238 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 28520 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6239 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 28526 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 28536 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 28546 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6258 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 28552 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 28558 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 28566 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 28572 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 28581 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28590 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28599 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28607 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28620 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 28632 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 28641 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 28647 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 28653 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 28659 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28665 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28671 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28677 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 28683 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 28689 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 28697 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 28718 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 28724 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 28730 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 28736 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 28744 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 28752 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 28760 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 28768 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 28776 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 28784 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 28792 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 28801 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 28810 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 28823 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 28836 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 28844 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 28852 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 28861 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 28874 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 28882 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 28909 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 28917 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 28925 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 28933 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 28941 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 28949 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 28957 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 28965 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 28973 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 28981 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 28990 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 28999 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29008 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29017 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29026 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29034 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29042 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29051 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 29059 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 29067 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6574 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 29073 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6576 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 29079 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 29085 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 29091 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 29097 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6584 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 29103 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6586 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 29109 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 29115 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6592 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29121 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6593 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29127 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6597 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29133 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6598 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29139 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6602 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29145 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6603 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29151 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6604 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29157 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6605 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29163 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6606 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29169 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 29175 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6611 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 29181 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 29187 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6613 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 29193 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 29199 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 29208 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 29214 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 29220 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29226 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29232 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6636 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29238 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 29247 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 29256 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 29265 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 29274 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 29283 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 29289 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29295 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29301 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29307 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6684 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 29316 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6691 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29322 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 29330 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6704 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29336 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6705 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 29342 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 29353 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6715 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29359 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6716 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29365 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6717 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29371 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29377 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6721 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 29383 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 29392 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6735 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 29398 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 29421 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 29441 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 29449 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 29457 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 29465 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 29473 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 29481 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 29489 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 29497 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 29505 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 29513 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 29521 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 29529 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29537 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 29545 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format));
          }
#line 29553 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 29561 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 29574 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 29582 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 29590 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6868 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 29596 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 29602 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6870 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 29608 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 6874 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 29614 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 29620 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 29626 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 29634 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 29642 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 29655 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6908 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 29661 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6912 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 29667 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6913 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 29673 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 29686 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6926 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 29692 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 29698 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 29704 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 29714 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 6941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 29720 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 6945 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 29726 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 29732 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6950 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29738 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6951 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29744 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 29750 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 29759 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 29768 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 29780 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 29790 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 6983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 29800 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 29809 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 29818 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 29827 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 29836 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 29847 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 29857 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 29869 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7035 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29875 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 29884 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7044 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 29896 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 29902 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 29914 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7076 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 29920 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7077 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 29926 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 29937 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 29948 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7098 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 29954 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7099 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 29960 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7100 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 29966 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 29972 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 29981 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 29990 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 29999 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30008 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 30017 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 30023 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 30029 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 30035 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 30041 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7139 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 30047 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 30053 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 30059 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7148 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30065 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7149 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30071 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7153 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30077 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7158 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30083 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7159 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30089 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7160 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30095 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 30101 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 30107 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30113 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30123 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30133 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30148 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30154 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30164 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30174 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7228 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30180 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30190 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30200 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30206 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30212 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 30218 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30226 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 30234 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 30240 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30246 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30252 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7289 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 30258 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30264 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30270 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 30276 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 30282 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 30288 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7305 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 30294 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 30300 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 30310 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 30321 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30331 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 30347 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 30357 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 30368 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30378 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 30384 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 30390 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7379 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30396 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 30406 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 30415 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 30429 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 30443 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 30455 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 30468 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 30483 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 30494 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 30509 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 30520 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 30535 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7498 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30541 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 30557 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7517 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30563 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 30583 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 30600 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30623 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30645 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30668 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30680 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30703 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30727 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 30739 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 30757 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 30774 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 30784 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 30800 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 30816 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 30831 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7758 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 30837 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 30843 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 30852 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 30862 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7782 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30868 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 30878 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 30888 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 30900 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 30919 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 30931 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 30943 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 30954 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 30965 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 30976 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 30987 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 30997 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 31007 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 31017 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 31033 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 31049 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 31059 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7922 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31065 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7927 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31071 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7928 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31077 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 31087 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 31097 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 31107 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 31117 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 31132 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31138 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31144 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31150 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7976 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31156 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31162 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 31175 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7993 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31181 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31187 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 31193 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31199 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 8005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31215 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 8020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31224 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 8025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31233 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 8033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 31241 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 8037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 31249 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 8044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 31258 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 8049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 31267 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 8055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 31277 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 8064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 31285 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 8068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 31293 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 8079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 31301 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 8083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 31309 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 8087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 31317 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 8091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 31325 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 8096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31333 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 8101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31341 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 8106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31349 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 8110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31358 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 8117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31367 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 31375 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 31383 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 31391 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 8135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 31399 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 8140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 31407 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 8145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 31415 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 31423 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 8154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 31431 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 31439 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 31445 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 8170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 31453 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 31461 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 31467 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31478 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 8197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31487 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 31495 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 31504 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 31516 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 31525 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 31533 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 31541 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 31549 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 31557 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 31565 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 31574 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 31582 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 31590 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 31598 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 31606 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 31614 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 31622 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 31630 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 31638 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 31646 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 31654 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 31662 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 31670 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 31678 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 31686 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 31694 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 31702 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 31710 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 31720 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 31728 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 31736 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 31745 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 31754 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 31763 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 31769 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 31778 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 31787 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 31797 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 31807 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 31813 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 31821 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 31839 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 31845 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 31853 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 31871 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 31877 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8440 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31883 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8444 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 31889 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 31895 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 31901 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8450 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 31907 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 31913 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 31919 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8456 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31925 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8457 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31931 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8458 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31937 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8459 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31943 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8464 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
#line 31952 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8469 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
#line 31961 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8476 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31967 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8478 "sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[-1].num);
        }
#line 31978 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 31993 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 32014 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 32031 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32039 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32047 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32055 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32063 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 32071 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 32079 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 32087 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32095 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 32103 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32111 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 32120 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32128 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 32136 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32144 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 32152 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32160 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32168 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32176 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32184 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 32192 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 32200 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 32209 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 32235 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 32244 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 32253 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 32261 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 32276 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8717 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32282 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 32288 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 32294 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32303 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8732 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 32309 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 32318 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 32324 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8747 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 32330 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8748 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 32336 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 32346 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 32352 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 32371 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 32381 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 32392 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 32403 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 32412 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32421 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 32427 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 32436 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 32442 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8837 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 32448 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 32454 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8841 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 32460 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 32466 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 32472 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 32480 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8856 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 32486 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32492 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32498 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 32506 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8867 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32512 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 32520 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 32529 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 32538 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 32552 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 32560 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 32569 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 32579 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 32589 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 32597 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 32603 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8942 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 32609 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 32617 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 32625 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 32635 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 32645 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 32653 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 32661 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 8987 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 32667 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 8989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 32678 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 8998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32684 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 8999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 32690 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 32698 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)));
          }
#line 32706 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 32714 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 32722 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 32730 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination));
          }
#line 32738 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 32746 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 32754 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 32762 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 32770 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 32778 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 32786 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 32794 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 32802 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 32810 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 32818 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 32826 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 32834 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 32842 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 32848 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 32854 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 32862 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 32871 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 32879 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            if (item_list == nullptr ||
                item_list->push_back(
                  NEW_PTN Item_field((yyloc), nullptr, nullptr, "*")))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 32892 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows)); // windows
          }
#line 32909 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows)); // windows
          }
#line 32926 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 32932 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9250 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 32938 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 32944 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 32954 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 32964 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 32972 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 32984 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 32992 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 33001 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 33009 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 9314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 33019 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33029 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33039 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 33047 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 33055 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 33063 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 33069 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 33075 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 33081 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 33087 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 33093 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 33099 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 33109 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 33119 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 33130 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9393 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33136 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33144 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9402 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 33150 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9403 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33156 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33162 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33168 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33174 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9410 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33180 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9411 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33186 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33196 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33205 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33215 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 33223 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 33231 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 33239 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 33247 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 33255 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 33263 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 33271 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 33279 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 33287 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 33295 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 33312 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 33320 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 33329 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 33337 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 33348 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 33356 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 33367 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 33375 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 33383 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 33391 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 33403 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item), nullptr);
          }
#line 33411 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33419 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item), nullptr);
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 33428 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 33437 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 33449 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 33461 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33469 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33477 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33485 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33493 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33501 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33509 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 33517 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 33525 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33533 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 33541 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 33549 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 33557 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33565 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33573 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9655 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 33581 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9666 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 33587 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9671 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 33593 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9672 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 33599 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9673 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 33605 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9674 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 33611 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9675 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 33617 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 33623 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 33629 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 33635 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 33641 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 33649 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 33655 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33663 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 9705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 33671 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 33679 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 33687 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 33695 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 33703 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9724 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 33709 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 33717 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 33725 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 33733 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 33741 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 33749 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 33757 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), &(yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 33765 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 33773 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), &(yyvsp[-1].cast_type));
          }
#line 33781 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 33789 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 33797 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 33805 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 33813 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 33824 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 33836 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9796 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 33842 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9797 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 33848 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 33856 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 33864 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 33872 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 33880 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 33888 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 33896 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 33904 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 33912 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 33920 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 9844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 33928 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 9848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 33936 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 9852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 33944 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 33952 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 9860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 33960 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 9864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 33968 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 9868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 33976 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 9872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 33984 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 9876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 33993 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 9881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 34002 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 34011 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 9891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 34019 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 9895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 34027 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 9899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 34035 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 9903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 34043 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 9907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 34052 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 9912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 34060 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 9916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 34068 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 9935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 34076 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 9939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34084 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 9943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 34092 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 9947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34100 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 9952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34108 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 9957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34116 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 9961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 34124 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 9965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 34132 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 9969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34141 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 9974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 34149 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 9978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 34157 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 9982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34165 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 9986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34173 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 9990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34181 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 9994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34189 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 9998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34197 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34206 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 34214 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 34222 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 34230 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34238 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34246 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 34254 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 34262 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 34270 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 34278 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 34286 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34294 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34302 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34310 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 34318 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34326 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 34334 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34342 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34350 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 34358 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 34366 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 34374 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 34382 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34390 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 34398 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 34406 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 34414 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 34422 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 34432 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 34442 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 34452 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 34462 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 34472 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34480 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 34490 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 34498 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 34506 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 34512 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 34526 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 34532 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10205 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 34538 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 34544 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 34550 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 34556 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10215 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 34562 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 34572 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 34582 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 34590 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 34598 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 34606 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 10255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34614 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34622 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 34636 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 34650 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34658 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 34666 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34674 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 34682 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34690 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34698 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34706 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34714 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 34722 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 34730 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 34738 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 34746 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 10336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 34754 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 10340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 34762 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 34770 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 10354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 34778 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 34786 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 10362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 34794 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 10366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 34802 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 34810 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 10374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34818 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 34833 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 34848 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 34856 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 34864 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 34877 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 34886 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item_num);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 34895 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].param_marker);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 34904 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 34912 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 34920 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 34928 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 34936 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 34944 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 34952 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 34960 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 34968 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 34976 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 34984 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 34992 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 35000 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35008 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 35016 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 35024 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10526 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 35042 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 35050 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 35058 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35066 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35074 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35082 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35090 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 35098 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 35106 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 35115 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 35123 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 35131 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 35139 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 35147 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35155 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 35163 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 35171 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 35179 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 35187 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 35195 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 35203 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35211 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 35219 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 35227 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 35235 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 35243 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10670 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 35250 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10675 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 35256 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 35262 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 35268 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 35276 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10688 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35282 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 35293 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 35301 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 35309 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10710 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 35315 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10711 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 35321 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 35331 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10721 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 35337 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10725 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 35343 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10726 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 35349 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 35358 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 35369 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 35377 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 35388 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 35411 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 35423 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35434 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35445 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35456 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35467 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35478 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 35489 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 35500 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 35511 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35522 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 35534 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 35545 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 35551 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35561 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35571 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 35577 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 35583 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35593 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35603 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 35609 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10908 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35615 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10912 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 35621 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10913 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35627 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 35639 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 35649 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10934 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 35655 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 35661 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 35675 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 35681 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 35687 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 11032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 35695 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 11037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 35703 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 11041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 35711 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 11045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 35719 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 11050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 35732 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 35740 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 35746 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 35752 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 35758 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 35764 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 35770 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 35776 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11074 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 35782 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11077 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 35788 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 35794 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11096 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 35800 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 35808 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 35814 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 35820 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 35826 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 35832 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 35838 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35848 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 35854 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 35860 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 35868 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 35874 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 35880 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 35897 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 35909 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 35925 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 35933 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 35943 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 35953 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 35961 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].jt_on_error_or_empty).error.type, (yyvsp[0].jt_on_error_or_empty).error.default_string,
                (yyvsp[0].jt_on_error_or_empty).empty.type, (yyvsp[0].jt_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 35974 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 35982 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 35990 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 35998 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = {enum_jtc_on::JTO_IMPLICIT, nullptr};
            (yyval.jt_on_error_or_empty).error = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36007 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = (yyvsp[0].jt_on_response);
            (yyval.jt_on_error_or_empty).error = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36016 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error = (yyvsp[0].jt_on_response);
            (yyval.jt_on_error_or_empty).empty = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36025 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = (yyvsp[-1].jt_on_response);
            (yyval.jt_on_error_or_empty).error = (yyvsp[0].jt_on_response);
          }
#line 36034 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error = (yyvsp[-1].jt_on_response);
            (yyval.jt_on_error_or_empty).empty = (yyvsp[0].jt_on_response);
          }
#line 36043 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11289 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 36049 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11292 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 36055 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_ERROR, nullptr};
          }
#line 36063 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_NULL, nullptr};
          }
#line 36071 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_DEFAULT, (yyvsp[0].text_literal)};
          }
#line 36079 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 36087 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 36093 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 36099 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 36105 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 36111 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 36117 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36126 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36135 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 36144 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 36150 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 36161 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36171 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36181 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36191 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36200 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 36213 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 36226 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11423 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36232 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11424 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 36238 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 36244 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11426 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 36250 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11427 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 36256 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11428 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 36262 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11429 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 36268 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11430 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 36274 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 36280 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11432 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 36286 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 36292 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11434 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 36298 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 36304 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 36310 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11440 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 36316 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11441 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 36322 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11442 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 36328 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 36334 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11444 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 36340 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 36346 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 36352 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11450 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 36358 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11451 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 36364 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11452 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 36370 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11453 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 36376 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 36382 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 36388 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11472 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 36394 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11477 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 36400 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11481 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36406 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 36414 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 36422 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 36430 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 36439 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 36449 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).raw.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).raw.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).raw.start - YYLIP->get_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 36466 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 36479 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 36487 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 36497 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 36507 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 36515 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 36523 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 36533 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 36543 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 36554 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11601 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 36560 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 36568 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 36577 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36588 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11625 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 36594 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11626 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 36600 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36609 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36620 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 36628 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 36634 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 36642 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 36651 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36662 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11690 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 36668 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11695 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 36674 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 36680 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11700 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 36686 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 36694 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 36704 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 36714 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 36724 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)), (yylsp[0]).raw);
          }
#line 36732 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 36740 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 36748 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 36756 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 36764 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36770 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36776 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11761 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36782 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 36788 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11763 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36794 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11764 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36800 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11765 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36806 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11766 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36812 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11770 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36818 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 36824 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11772 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36830 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11773 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36836 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11774 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 36842 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11778 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36848 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11779 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36854 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11780 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36860 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11781 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36866 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11782 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36872 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11786 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36878 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 36884 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11788 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36890 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11789 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 36896 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11790 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 36902 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11795 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 36908 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 36918 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 36928 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 36936 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 36944 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 36952 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 36960 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 36968 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11847 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 36974 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 36984 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37001 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 37011 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 37022 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37049 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37085 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 37093 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 37109 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11984 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 37120 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37136 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 37146 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 37158 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37180 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37203 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37226 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 37235 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12102 "sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
	  }
#line 37243 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 37251 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 37261 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 37271 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 37281 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 37291 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 37297 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 37303 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 37309 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 37315 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 37321 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 37331 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 37341 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 37357 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 37372 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 37384 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37396 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37411 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37423 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 37429 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12288 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 37435 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12290 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 37448 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 37454 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 37460 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12304 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 37473 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 37482 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 37491 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 37500 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 37509 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 37518 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 37527 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37537 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37547 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 37555 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 37561 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 37569 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 37575 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 37584 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 37594 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 37603 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 37613 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 37619 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 37625 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 37635 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37645 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37655 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 37663 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 37672 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 37686 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 37695 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 37703 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 37712 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12521 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 37718 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12522 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 37724 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 37735 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 37748 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 37757 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 37763 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12554 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 37769 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 37777 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 37785 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 37793 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 37799 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 37805 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 37811 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 37817 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12609 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 37823 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 37831 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12634 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 37839 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12638 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 37847 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12642 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 37855 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12646 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 37863 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12650 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 37871 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12654 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 37879 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12658 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 37887 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12662 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 37895 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12666 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 37903 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12673 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->show_profile_query_id= 0;
    }
#line 37911 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12677 "sql_yacc.yy" /* yacc.c:1646  */
    {
      int error;
      Lex->show_profile_query_id=
        static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
#line 37923 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 37934 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12701 "sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 37947 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12710 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);

             MAKE_CMD(p);
           }
#line 37957 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12716 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[-3].is_not_empty);
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 37973 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12728 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 37988 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12739 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[0].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
#line 38003 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->set_wild((yyvsp[0].wild_or_where).wild)) {
              MYSQL_YYABORT; // OOM
            }
            if ((yyvsp[0].wild_or_where).where != nullptr) {
              ITEMIZE((yyvsp[0].wild_or_where).where, &(yyvsp[0].wild_or_where).where);
              Select->set_where_cond((yyvsp[0].wild_or_where).where);
            }
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 38022 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 38033 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, to_lex_cstring((yyvsp[-1].lexer.lex_str)), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
#line 38045 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12780 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info->db_type= NULL; }
#line 38051 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            Item *where= (yyvsp[0].wild_or_where).where;
            LEX_STRING wild= (yyvsp[0].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
#line 38073 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 38081 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 38089 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 38098 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));
          }
#line 38107 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 38116 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[-1].limit_clause));
          }
#line 38125 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
#line 38142 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 38153 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38165 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38177 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
#line 38189 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
#line 38201 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 38213 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 38227 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 38253 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[-1].is_not_empty);
          }
#line 38262 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 38288 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38301 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38314 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
#line 38324 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0);
            MAKE_CMD(tmp);
          }
#line 38333 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0);
            MAKE_CMD(tmp);
          }
#line 38342 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 38351 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 38361 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 13002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
#line 38374 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 13011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 38386 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 13019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 38394 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 13023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 38402 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 13027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 38413 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 13034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 38424 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 13041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 38434 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 13047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38448 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 13057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38462 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 13067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 38471 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 13072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 38480 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 13077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 38489 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 13082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[0].lex_user);
          }
#line 38499 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 13091 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 38505 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 13093 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 38511 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 13095 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 38517 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 13109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 38523 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 13110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 38529 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 13114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 38535 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 38541 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 38547 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13120 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 38553 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 38559 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 38565 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 38571 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 38577 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13136 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 38583 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13137 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str; }
#line 38589 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13141 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 38595 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13142 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 38601 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 38607 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 38613 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 38619 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 38627 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 38635 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 38643 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
          }
#line 38651 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 38669 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
          }
#line 38677 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 38683 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 38692 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 38703 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13230 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38709 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 38726 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13247 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38732 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13252 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38738 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 38754 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 38766 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 38782 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13290 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38788 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13295 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 38794 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13297 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 38800 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13299 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 38806 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13301 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 38812 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13303 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 38818 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13305 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 38824 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13307 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 38830 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13309 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 38836 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13311 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 38842 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13313 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 38848 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13315 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 38854 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13317 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 38860 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 38866 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 13327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 38875 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13332 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38881 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 38892 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 38902 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 38912 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13363 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 38918 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 38938 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13385 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 38944 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13386 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 38950 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13390 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38956 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 38971 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 38981 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13412 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38987 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 38995 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 39008 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 39021 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13450 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39027 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13451 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39033 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13452 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 39039 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 39049 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 39072 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 39078 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 39084 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39090 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39096 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 39102 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13519 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 39108 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 39114 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 39120 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13529 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 39126 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 39132 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 39138 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13535 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 39144 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 39153 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 39162 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 39172 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 39181 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 39190 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13572 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 39196 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13573 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 39202 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 39211 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 39220 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 39229 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 39235 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 39241 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 39247 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 39253 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 39259 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 39265 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 39271 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 39281 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 39291 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39299 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13643 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 39305 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 39311 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 39323 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 39344 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 39364 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 39373 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 39383 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 39392 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 39401 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 39412 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 39423 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 39434 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 39454 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 39460 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 39471 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13777 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 39477 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13778 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 39483 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 39499 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 39507 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 39515 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39523 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39531 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 39539 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 39547 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39555 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39563 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39571 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 39579 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39587 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 39595 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 39603 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 39611 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[-2].lexer.lex_str).str);
          }
#line 39619 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str);
          }
#line 39629 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 39637 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 39645 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 39653 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39661 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 39669 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 39679 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 39689 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 39703 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 39713 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 39725 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 39731 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 39762 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 39776 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 14007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 39790 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 14020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 39807 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 14036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 39824 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 14052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 39842 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 39850 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 39867 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 14096 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 39873 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 39885 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 39896 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 39902 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 39914 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 39925 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 39931 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 39937 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 39943 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 39952 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 39961 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 39969 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 39984 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 39993 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 40002 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 40012 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 14742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 40020 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 14751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 40028 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2599:
#line 14755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 40036 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2600:
#line 14759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 40044 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2601:
#line 14763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 40055 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2602:
#line 14770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 40067 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2603:
#line 14778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 40079 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2604:
#line 14786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 40092 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2605:
#line 14798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 40100 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 14802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40109 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 14807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40118 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 14812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 40127 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 14817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 40136 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 14822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 40145 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 14827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40154 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2612:
#line 14834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 40160 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2613:
#line 14835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 40166 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 14840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 40174 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 14844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 40182 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2616:
#line 14851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 40192 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 14857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 40202 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 14865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 40208 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2619:
#line 14871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 40219 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 14878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 40229 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 14887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 40235 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 14888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 40241 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 14894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 40249 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 14898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 40257 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2625:
#line 14906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 40265 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2626:
#line 14909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 40271 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2627:
#line 14913 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40277 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2628:
#line 14914 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 40283 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 14915 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 40289 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 14916 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40295 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2631:
#line 14917 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40301 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2632:
#line 14921 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40307 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2633:
#line 14922 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40313 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2634:
#line 14923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40319 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2635:
#line 14924 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40325 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 14928 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 40331 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 14929 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40337 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 14930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40343 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2639:
#line 14931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40349 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2640:
#line 14935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 40355 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2641:
#line 14936 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 40361 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2642:
#line 14937 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 40367 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 14938 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40373 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 14939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40379 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 14940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40385 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 14946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 40393 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 14956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 40401 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 14960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 40409 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 14965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 40417 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 14969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 40425 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 14973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 40436 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 14980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 40444 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 14984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 40452 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 14991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40460 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 14995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40468 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 14999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 40476 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 40484 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 40492 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 40500 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 40506 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15024 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 40512 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 15029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 40520 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 15035 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 40526 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 15036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 40532 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 40538 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 40544 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 40550 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 40556 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15047 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 40562 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 15048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 40568 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 15053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 40574 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 15055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 40582 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 40590 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 40598 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 40606 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 40614 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 15080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 40629 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 15091 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40635 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 15093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 40646 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 40675 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 40681 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 40687 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 15143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 40696 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 15147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 40702 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 15152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 40717 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 15163 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40723 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 15165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 40734 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 40743 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 40751 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= NEW_PTN PT_alter_instance((yyvsp[0].alter_instance_action));
          }
#line 40760 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_action)= ROTATE_BINLOG_MASTER_KEY;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 40780 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
          }
#line 40796 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 15226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-4].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-4]));
              MYSQL_YYABORT;
            }
          }
#line 40812 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 15245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 40820 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 40828 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 15258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 40836 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 15268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 40845 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 15280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 40855 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 15288 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 40861 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 15289 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 40867 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 15293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 40873 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 15294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 40879 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 15295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 40885 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 15296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 40891 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 15300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 40897 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 15301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 40903 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 15302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 40909 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 15303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 40915 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 15304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 40921 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 15311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 40930 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 15316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 40949 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 15331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 40958 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 15336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 40976 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 15350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 40985 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 15355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 40997 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 15366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 41006 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 15372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41025 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 15387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 41034 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 15392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41050 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 15404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 41064 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 15416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41070 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 15417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41076 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2728:
#line 15418 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 41082 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 15419 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 41088 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 15429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 41098 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2733:
#line 15435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 41108 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 15444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 41119 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 15451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 41125 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 15453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41131 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 15455 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41137 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2738:
#line 15457 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41143 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2739:
#line 15459 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41149 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2740:
#line 15461 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 41155 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2741:
#line 15463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 41161 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2742:
#line 15465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 41167 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 15467 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 41173 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 15469 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 41179 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 15471 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 41185 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 15473 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 41191 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 15475 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 41197 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 15477 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 41203 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 15479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 41209 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 15481 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 41215 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 15483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 41224 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 15488 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 41230 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 15490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 41248 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 15504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 41254 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 15506 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 41260 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 15508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 41266 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2757:
#line 15510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 41272 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2758:
#line 15512 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 41278 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 15514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 41284 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 15516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 41290 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 15518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 41296 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 15520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 41302 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 15522 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 41308 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 15524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 41314 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2765:
#line 15526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 41320 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 15528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 41326 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 15530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 41332 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 15534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41338 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 15535 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41344 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2774:
#line 15550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 41358 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2775:
#line 15560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 41372 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2776:
#line 15570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 41386 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2777:
#line 15583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41404 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2778:
#line 15597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41420 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2779:
#line 15609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41436 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2780:
#line 15621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 41452 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2781:
#line 15633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *tmp;
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 41473 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2782:
#line 15653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41483 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2783:
#line 15659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41493 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2784:
#line 15668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41503 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 15674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41513 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 15682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41519 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 15683 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41525 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2788:
#line 15687 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41531 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2789:
#line 15688 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41537 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 15692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 41552 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 15703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 41567 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2792:
#line 15714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 41582 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2793:
#line 15725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 41599 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2794:
#line 15738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 41617 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2795:
#line 15752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 41633 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 15764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 41645 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 15775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 41663 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2798:
#line 15790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 41684 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 15807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 41699 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 15818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 41714 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2801:
#line 15829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 41732 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2802:
#line 15843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 41747 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2803:
#line 15855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 41764 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2804:
#line 15869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 41782 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 15884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 41798 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 15896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 41810 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 15907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41819 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 15912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41828 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 15920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 41837 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 15925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41846 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 15932 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 41852 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 15933 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 41858 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 41868 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 41878 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 15954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 41886 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 15958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 41894 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 15962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 41902 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 41910 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 15972 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41916 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15974 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 41922 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 15978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41928 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41934 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15983 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 41940 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15985 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 41948 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 41957 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15994 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 41963 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15996 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 41969 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 16000 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 41975 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 16002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 41984 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 16009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 41994 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 16014 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42000 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 16018 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42006 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 16019 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42012 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 16024 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42018 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 16025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42024 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 16026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42030 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 16031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42036 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 16032 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42042 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 16033 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42048 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 16037 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42054 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 16038 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42060 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 16043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42073 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 16055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42086 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 16065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42096 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 16074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42106 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 16083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42116 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 16096 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 42122 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 16097 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 42128 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 16098 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 42134 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 16111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 42142 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 16117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 42148 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 16118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 42154 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 16119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 42160 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 16120 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 42166 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 16121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 42172 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 16122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 42178 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 16123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 42189 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 16129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 42195 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 16140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 42206 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 16150 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42212 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 16152 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42218 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 16154 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42224 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 16187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 42239 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 16201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 42247 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 16214 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42253 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 16216 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42259 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 16218 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42265 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 16223 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 42271 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 16228 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 42277 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 16230 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 42283 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 16232 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 42289 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 16237 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 42295 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 16239 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 42301 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 16241 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 42307 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 16246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 42347 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 42399 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 42405 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 42411 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 16338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 42417 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 16339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 42423 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 16350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 42429 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 16352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 42435 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16357 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 42444 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 16363 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 42453 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16380 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 42489 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16412 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 42520 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 42541 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 42562 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16489 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 42589 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16513 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 42597 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16519 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 42642 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16560 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 42654 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 42713 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16627 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 42737 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16647 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 42745 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16652 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 42757 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16660 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 42769 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16668 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 42782 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 42791 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 42800 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 42809 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 42818 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 42827 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 42836 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42842 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16715 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42848 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 42861 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 42875 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 42894 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16755 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42900 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16756 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42906 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 42912 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 42918 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 42924 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 42930 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16767 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 42936 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 42942 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16774 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 42948 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16776 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 42954 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 42964 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 42974 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42984 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 42994 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43004 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43014 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 43027 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43038 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43060 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 43068 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 43076 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 43084 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 43092 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 43100 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16900 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 43106 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16901 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 43112 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 43123 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16912 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 43129 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 43140 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 43151 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 43162 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 43176 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 43182 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 43188 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 43194 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 43203 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 43209 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 43218 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 43227 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 43233 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 43239 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 43243 "/export/home/pb2/build/sb_3-37170406-1575921257.28/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
