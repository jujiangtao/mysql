
/* A Bison parser, made by GNU Bison 2.4.1.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C
   
      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.4.1"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yylval          MYSQLlval
#define yychar          MYSQLchar
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs
#define yylloc          MYSQLlloc

/* Copy the first part of user declarations.  */

/* Line 189 of yacc.c  */
#line 24 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "partition_info.h"                   /* partition_info */
#include "sql_partition.h"                    /* mem_alloc_error */
#include "auth_common.h"                      /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype */
#include "rpl_slave.h"
#include "rpl_msr.h"       /* multisource replication */
#include "rpl_filter.h"
#include "log_event.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_servers.h"
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"
#include "rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql_show_status.h"                 // build_show_session_status, ...
#include "parse_location.h"
#include "parse_tree_helpers.h"
#include "lex_token.h"
#include "item_cmpfunc.h"
#include "item_geofunc.h"
#include "item_json_func.h"
#include "sql_plugin.h"                      // plugin_is_ready
#include "parse_tree_hints.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, (char*) (A));      \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_syntax_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYTHD->mem_root)


/**
  Parse_tree_node::contextualize_() function call wrapper
*/
#define TMP_CONTEXTUALIZE(x)        \
  do                                \
  {                                 \
    Parse_context pc(YYTHD, Select);\
    if ((x)->contextualize_(&pc))   \
      MYSQL_YYABORT;                \
  } while(0)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    Parse_context pc(YYTHD, Select);                    \
    if (YYTHD->is_error() || (x)->contextualize(&pc))   \
      MYSQL_YYABORT;                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                  \
  do                                                   \
  {                                                    \
    Parse_context pc(YYTHD, Select);                   \
    if (YYTHD->is_error() || (x)->itemize(&pc, (y)))   \
      MYSQL_YYABORT;                                   \
  } while(0)

/**
  PT_statement::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                     \
  do                                                    \
  {                                                     \
    if (YYTHD->is_error())                              \
      MYSQL_YYABORT;                                    \
    Lex->m_sql_cmd= (x)->make_cmd(YYTHD);               \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use my_syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(YYLTYPE *, THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_syntax_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select()->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_UPGRADABLE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= Alter_info::ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated,
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}

/**
  Compare a LEX_USER against the current user as defined by the exact user and
  host used during authentication.

  @param user A pointer to a user which needs to be matched against the
              current.

  @see SET PASSWORD rules

  @retval true The specified user is the authorized user
  @retval false The user doesn't match
*/

bool match_authorized_user(Security_context *ctx, LEX_USER *user)
{
  if(user->user.str && my_strcasecmp(system_charset_info,
                                     ctx->priv_user().str,
                                     user->user.str) == 0)
  {
    /*
      users match; let's compare hosts.
      1. first compare with the host we actually authorized,
      2. then see if we match the host mask of the priv_host
    */
    if (user->host.str && my_strcasecmp(system_charset_info,
                                        user->host.str,
                                        ctx->priv_host().str) == 0)
    {
      /* specified user exactly match the authorized user */
      return true;
    }
  }
  return false;
}

static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "parse_tree_nodes.h"
#include "parse_tree_items.h"



/* Line 189 of yacc.c  */
#line 509 "/export/home/pb2/build/sb_0-16729399-1444630353.38/dist_GPL/sql/sql_yacc.cc"

/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACCOUNT_SYM = 260,
     ACTION = 261,
     ADD = 262,
     ADDDATE_SYM = 263,
     AFTER_SYM = 264,
     AGAINST = 265,
     AGGREGATE_SYM = 266,
     ALGORITHM_SYM = 267,
     ALL = 268,
     ALTER = 269,
     ALWAYS_SYM = 270,
     ANALYSE_SYM = 271,
     ANALYZE_SYM = 272,
     AND_AND_SYM = 273,
     AND_SYM = 274,
     ANY_SYM = 275,
     AS = 276,
     ASC = 277,
     ASCII_SYM = 278,
     ASENSITIVE_SYM = 279,
     AT_SYM = 280,
     AUTOEXTEND_SIZE_SYM = 281,
     AUTO_INC = 282,
     AVG_ROW_LENGTH = 283,
     AVG_SYM = 284,
     BACKUP_SYM = 285,
     BEFORE_SYM = 286,
     BEGIN_SYM = 287,
     BETWEEN_SYM = 288,
     BIGINT = 289,
     BINARY = 290,
     BINLOG_SYM = 291,
     BIN_NUM = 292,
     BIT_AND = 293,
     BIT_OR = 294,
     BIT_SYM = 295,
     BIT_XOR = 296,
     BLOB_SYM = 297,
     BLOCK_SYM = 298,
     BOOLEAN_SYM = 299,
     BOOL_SYM = 300,
     BOTH = 301,
     BTREE_SYM = 302,
     BY = 303,
     BYTE_SYM = 304,
     CACHE_SYM = 305,
     CALL_SYM = 306,
     CASCADE = 307,
     CASCADED = 308,
     CASE_SYM = 309,
     CAST_SYM = 310,
     CATALOG_NAME_SYM = 311,
     CHAIN_SYM = 312,
     CHANGE = 313,
     CHANGED = 314,
     CHANNEL_SYM = 315,
     CHARSET = 316,
     CHAR_SYM = 317,
     CHECKSUM_SYM = 318,
     CHECK_SYM = 319,
     CIPHER_SYM = 320,
     CLASS_ORIGIN_SYM = 321,
     CLIENT_SYM = 322,
     CLOSE_SYM = 323,
     COALESCE = 324,
     CODE_SYM = 325,
     COLLATE_SYM = 326,
     COLLATION_SYM = 327,
     COLUMNS = 328,
     COLUMN_SYM = 329,
     COLUMN_FORMAT_SYM = 330,
     COLUMN_NAME_SYM = 331,
     COMMENT_SYM = 332,
     COMMITTED_SYM = 333,
     COMMIT_SYM = 334,
     COMPACT_SYM = 335,
     COMPLETION_SYM = 336,
     COMPRESSED_SYM = 337,
     COMPRESSION_SYM = 338,
     CONCURRENT = 339,
     CONDITION_SYM = 340,
     CONNECTION_SYM = 341,
     CONSISTENT_SYM = 342,
     CONSTRAINT = 343,
     CONSTRAINT_CATALOG_SYM = 344,
     CONSTRAINT_NAME_SYM = 345,
     CONSTRAINT_SCHEMA_SYM = 346,
     CONTAINS_SYM = 347,
     CONTEXT_SYM = 348,
     CONTINUE_SYM = 349,
     CONVERT_SYM = 350,
     COUNT_SYM = 351,
     CPU_SYM = 352,
     CREATE = 353,
     CROSS = 354,
     CUBE_SYM = 355,
     CURDATE = 356,
     CURRENT_SYM = 357,
     CURRENT_USER = 358,
     CURSOR_SYM = 359,
     CURSOR_NAME_SYM = 360,
     CURTIME = 361,
     DATABASE = 362,
     DATABASES = 363,
     DATAFILE_SYM = 364,
     DATA_SYM = 365,
     DATETIME = 366,
     DATE_ADD_INTERVAL = 367,
     DATE_SUB_INTERVAL = 368,
     DATE_SYM = 369,
     DAY_HOUR_SYM = 370,
     DAY_MICROSECOND_SYM = 371,
     DAY_MINUTE_SYM = 372,
     DAY_SECOND_SYM = 373,
     DAY_SYM = 374,
     DEALLOCATE_SYM = 375,
     DECIMAL_NUM = 376,
     DECIMAL_SYM = 377,
     DECLARE_SYM = 378,
     DEFAULT = 379,
     DEFAULT_AUTH_SYM = 380,
     DEFINER_SYM = 381,
     DELAYED_SYM = 382,
     DELAY_KEY_WRITE_SYM = 383,
     DELETE_SYM = 384,
     DESC = 385,
     DESCRIBE = 386,
     DES_KEY_FILE = 387,
     DETERMINISTIC_SYM = 388,
     DIAGNOSTICS_SYM = 389,
     DIRECTORY_SYM = 390,
     DISABLE_SYM = 391,
     DISCARD = 392,
     DISK_SYM = 393,
     DISTINCT = 394,
     DIV_SYM = 395,
     DOUBLE_SYM = 396,
     DO_SYM = 397,
     DROP = 398,
     DUAL_SYM = 399,
     DUMPFILE = 400,
     DUPLICATE_SYM = 401,
     DYNAMIC_SYM = 402,
     EACH_SYM = 403,
     ELSE = 404,
     ELSEIF_SYM = 405,
     ENABLE_SYM = 406,
     ENCLOSED = 407,
     END = 408,
     ENDS_SYM = 409,
     END_OF_INPUT = 410,
     ENGINES_SYM = 411,
     ENGINE_SYM = 412,
     ENUM = 413,
     EQ = 414,
     EQUAL_SYM = 415,
     ERROR_SYM = 416,
     ERRORS = 417,
     ESCAPED = 418,
     ESCAPE_SYM = 419,
     EVENTS_SYM = 420,
     EVENT_SYM = 421,
     EVERY_SYM = 422,
     EXCHANGE_SYM = 423,
     EXECUTE_SYM = 424,
     EXISTS = 425,
     EXIT_SYM = 426,
     EXPANSION_SYM = 427,
     EXPIRE_SYM = 428,
     EXPORT_SYM = 429,
     EXTENDED_SYM = 430,
     EXTENT_SIZE_SYM = 431,
     EXTRACT_SYM = 432,
     FALSE_SYM = 433,
     FAST_SYM = 434,
     FAULTS_SYM = 435,
     FETCH_SYM = 436,
     FILE_SYM = 437,
     FILE_BLOCK_SIZE_SYM = 438,
     FILTER_SYM = 439,
     FIRST_SYM = 440,
     FIXED_SYM = 441,
     FLOAT_NUM = 442,
     FLOAT_SYM = 443,
     FLUSH_SYM = 444,
     FOLLOWS_SYM = 445,
     FORCE_SYM = 446,
     FOREIGN = 447,
     FOR_SYM = 448,
     FORMAT_SYM = 449,
     FOUND_SYM = 450,
     FROM = 451,
     FULL = 452,
     FULLTEXT_SYM = 453,
     FUNCTION_SYM = 454,
     GE = 455,
     GENERAL = 456,
     GENERATED = 457,
     GROUP_REPLICATION = 458,
     GEOMETRYCOLLECTION = 459,
     GEOMETRY_SYM = 460,
     GET_FORMAT = 461,
     GET_SYM = 462,
     GLOBAL_SYM = 463,
     GRANT = 464,
     GRANTS = 465,
     GROUP_SYM = 466,
     GROUP_CONCAT_SYM = 467,
     GT_SYM = 468,
     HANDLER_SYM = 469,
     HASH_SYM = 470,
     HAVING = 471,
     HELP_SYM = 472,
     HEX_NUM = 473,
     HIGH_PRIORITY = 474,
     HOST_SYM = 475,
     HOSTS_SYM = 476,
     HOUR_MICROSECOND_SYM = 477,
     HOUR_MINUTE_SYM = 478,
     HOUR_SECOND_SYM = 479,
     HOUR_SYM = 480,
     IDENT = 481,
     IDENTIFIED_SYM = 482,
     IDENT_QUOTED = 483,
     IF = 484,
     IGNORE_SYM = 485,
     IGNORE_SERVER_IDS_SYM = 486,
     IMPORT = 487,
     INDEXES = 488,
     INDEX_SYM = 489,
     INFILE = 490,
     INITIAL_SIZE_SYM = 491,
     INNER_SYM = 492,
     INOUT_SYM = 493,
     INSENSITIVE_SYM = 494,
     INSERT = 495,
     INSERT_METHOD = 496,
     INSTALL_SYM = 497,
     INTERVAL_SYM = 498,
     INTO = 499,
     INT_SYM = 500,
     INVOKER_SYM = 501,
     IN_SYM = 502,
     IO_AFTER_GTIDS = 503,
     IO_BEFORE_GTIDS = 504,
     IO_SYM = 505,
     IPC_SYM = 506,
     IS = 507,
     ISOLATION = 508,
     ISSUER_SYM = 509,
     ITERATE_SYM = 510,
     JOIN_SYM = 511,
     JSON_SEPARATOR_SYM = 512,
     JSON_SYM = 513,
     KEYS = 514,
     KEY_BLOCK_SIZE = 515,
     KEY_SYM = 516,
     KILL_SYM = 517,
     LANGUAGE_SYM = 518,
     LAST_SYM = 519,
     LE = 520,
     LEADING = 521,
     LEAVES = 522,
     LEAVE_SYM = 523,
     LEFT = 524,
     LESS_SYM = 525,
     LEVEL_SYM = 526,
     LEX_HOSTNAME = 527,
     LIKE = 528,
     LIMIT = 529,
     LINEAR_SYM = 530,
     LINES = 531,
     LINESTRING = 532,
     LIST_SYM = 533,
     LOAD = 534,
     LOCAL_SYM = 535,
     LOCATOR_SYM = 536,
     LOCKS_SYM = 537,
     LOCK_SYM = 538,
     LOGFILE_SYM = 539,
     LOGS_SYM = 540,
     LONGBLOB = 541,
     LONGTEXT = 542,
     LONG_NUM = 543,
     LONG_SYM = 544,
     LOOP_SYM = 545,
     LOW_PRIORITY = 546,
     LT = 547,
     MASTER_AUTO_POSITION_SYM = 548,
     MASTER_BIND_SYM = 549,
     MASTER_CONNECT_RETRY_SYM = 550,
     MASTER_DELAY_SYM = 551,
     MASTER_HOST_SYM = 552,
     MASTER_LOG_FILE_SYM = 553,
     MASTER_LOG_POS_SYM = 554,
     MASTER_PASSWORD_SYM = 555,
     MASTER_PORT_SYM = 556,
     MASTER_RETRY_COUNT_SYM = 557,
     MASTER_SERVER_ID_SYM = 558,
     MASTER_SSL_CAPATH_SYM = 559,
     MASTER_SSL_CA_SYM = 560,
     MASTER_SSL_CERT_SYM = 561,
     MASTER_SSL_CIPHER_SYM = 562,
     MASTER_SSL_CRL_SYM = 563,
     MASTER_SSL_CRLPATH_SYM = 564,
     MASTER_SSL_KEY_SYM = 565,
     MASTER_SSL_SYM = 566,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 567,
     MASTER_SYM = 568,
     MASTER_USER_SYM = 569,
     MASTER_HEARTBEAT_PERIOD_SYM = 570,
     MATCH = 571,
     MAX_CONNECTIONS_PER_HOUR = 572,
     MAX_QUERIES_PER_HOUR = 573,
     MAX_ROWS = 574,
     MAX_SIZE_SYM = 575,
     MAX_SYM = 576,
     MAX_UPDATES_PER_HOUR = 577,
     MAX_USER_CONNECTIONS_SYM = 578,
     MAX_VALUE_SYM = 579,
     MEDIUMBLOB = 580,
     MEDIUMINT = 581,
     MEDIUMTEXT = 582,
     MEDIUM_SYM = 583,
     MEMORY_SYM = 584,
     MERGE_SYM = 585,
     MESSAGE_TEXT_SYM = 586,
     MICROSECOND_SYM = 587,
     MIGRATE_SYM = 588,
     MINUTE_MICROSECOND_SYM = 589,
     MINUTE_SECOND_SYM = 590,
     MINUTE_SYM = 591,
     MIN_ROWS = 592,
     MIN_SYM = 593,
     MODE_SYM = 594,
     MODIFIES_SYM = 595,
     MODIFY_SYM = 596,
     MOD_SYM = 597,
     MONTH_SYM = 598,
     MULTILINESTRING = 599,
     MULTIPOINT = 600,
     MULTIPOLYGON = 601,
     MUTEX_SYM = 602,
     MYSQL_ERRNO_SYM = 603,
     NAMES_SYM = 604,
     NAME_SYM = 605,
     NATIONAL_SYM = 606,
     NATURAL = 607,
     NCHAR_STRING = 608,
     NCHAR_SYM = 609,
     NDBCLUSTER_SYM = 610,
     NE = 611,
     NEG = 612,
     NEVER_SYM = 613,
     NEW_SYM = 614,
     NEXT_SYM = 615,
     NODEGROUP_SYM = 616,
     NONE_SYM = 617,
     NOT2_SYM = 618,
     NOT_SYM = 619,
     NOW_SYM = 620,
     NO_SYM = 621,
     NO_WAIT_SYM = 622,
     NO_WRITE_TO_BINLOG = 623,
     NULL_SYM = 624,
     NUM = 625,
     NUMBER_SYM = 626,
     NUMERIC_SYM = 627,
     NVARCHAR_SYM = 628,
     OFFSET_SYM = 629,
     ON = 630,
     ONE_SYM = 631,
     ONLY_SYM = 632,
     OPEN_SYM = 633,
     OPTIMIZE = 634,
     OPTIMIZER_COSTS_SYM = 635,
     OPTIONS_SYM = 636,
     OPTION = 637,
     OPTIONALLY = 638,
     OR2_SYM = 639,
     ORDER_SYM = 640,
     OR_OR_SYM = 641,
     OR_SYM = 642,
     OUTER = 643,
     OUTFILE = 644,
     OUT_SYM = 645,
     OWNER_SYM = 646,
     PACK_KEYS_SYM = 647,
     PAGE_SYM = 648,
     PARAM_MARKER = 649,
     PARSER_SYM = 650,
     PARSE_GCOL_EXPR_SYM = 651,
     PARTIAL = 652,
     PARTITION_SYM = 653,
     PARTITIONS_SYM = 654,
     PARTITIONING_SYM = 655,
     PASSWORD = 656,
     PHASE_SYM = 657,
     PLUGIN_DIR_SYM = 658,
     PLUGIN_SYM = 659,
     PLUGINS_SYM = 660,
     POINT_SYM = 661,
     POLYGON = 662,
     PORT_SYM = 663,
     POSITION_SYM = 664,
     PRECEDES_SYM = 665,
     PRECISION = 666,
     PREPARE_SYM = 667,
     PRESERVE_SYM = 668,
     PREV_SYM = 669,
     PRIMARY_SYM = 670,
     PRIVILEGES = 671,
     PROCEDURE_SYM = 672,
     PROCESS = 673,
     PROCESSLIST_SYM = 674,
     PROFILE_SYM = 675,
     PROFILES_SYM = 676,
     PROXY_SYM = 677,
     PURGE = 678,
     QUARTER_SYM = 679,
     QUERY_SYM = 680,
     QUICK = 681,
     RANGE_SYM = 682,
     READS_SYM = 683,
     READ_ONLY_SYM = 684,
     READ_SYM = 685,
     READ_WRITE_SYM = 686,
     REAL = 687,
     REBUILD_SYM = 688,
     RECOVER_SYM = 689,
     REDOFILE_SYM = 690,
     REDO_BUFFER_SIZE_SYM = 691,
     REDUNDANT_SYM = 692,
     REFERENCES = 693,
     REGEXP = 694,
     RELAY = 695,
     RELAYLOG_SYM = 696,
     RELAY_LOG_FILE_SYM = 697,
     RELAY_LOG_POS_SYM = 698,
     RELAY_THREAD = 699,
     RELEASE_SYM = 700,
     RELOAD = 701,
     REMOVE_SYM = 702,
     RENAME = 703,
     REORGANIZE_SYM = 704,
     REPAIR = 705,
     REPEATABLE_SYM = 706,
     REPEAT_SYM = 707,
     REPLACE = 708,
     REPLICATION = 709,
     REPLICATE_DO_DB = 710,
     REPLICATE_IGNORE_DB = 711,
     REPLICATE_DO_TABLE = 712,
     REPLICATE_IGNORE_TABLE = 713,
     REPLICATE_WILD_DO_TABLE = 714,
     REPLICATE_WILD_IGNORE_TABLE = 715,
     REPLICATE_REWRITE_DB = 716,
     REQUIRE_SYM = 717,
     RESET_SYM = 718,
     RESIGNAL_SYM = 719,
     RESOURCES = 720,
     RESTORE_SYM = 721,
     RESTRICT = 722,
     RESUME_SYM = 723,
     RETURNED_SQLSTATE_SYM = 724,
     RETURNS_SYM = 725,
     RETURN_SYM = 726,
     REVERSE_SYM = 727,
     REVOKE = 728,
     RIGHT = 729,
     ROLLBACK_SYM = 730,
     ROLLUP_SYM = 731,
     ROUTINE_SYM = 732,
     ROWS_SYM = 733,
     ROW_FORMAT_SYM = 734,
     ROW_SYM = 735,
     ROW_COUNT_SYM = 736,
     RTREE_SYM = 737,
     SAVEPOINT_SYM = 738,
     SCHEDULE_SYM = 739,
     SCHEMA_NAME_SYM = 740,
     SECOND_MICROSECOND_SYM = 741,
     SECOND_SYM = 742,
     SECURITY_SYM = 743,
     SELECT_SYM = 744,
     SENSITIVE_SYM = 745,
     SEPARATOR_SYM = 746,
     SERIALIZABLE_SYM = 747,
     SERIAL_SYM = 748,
     SESSION_SYM = 749,
     SERVER_SYM = 750,
     SERVER_OPTIONS = 751,
     SET = 752,
     SET_VAR = 753,
     SHARE_SYM = 754,
     SHIFT_LEFT = 755,
     SHIFT_RIGHT = 756,
     SHOW = 757,
     SHUTDOWN = 758,
     SIGNAL_SYM = 759,
     SIGNED_SYM = 760,
     SIMPLE_SYM = 761,
     SLAVE = 762,
     SLOW = 763,
     SMALLINT = 764,
     SNAPSHOT_SYM = 765,
     SOCKET_SYM = 766,
     SONAME_SYM = 767,
     SOUNDS_SYM = 768,
     SOURCE_SYM = 769,
     SPATIAL_SYM = 770,
     SPECIFIC_SYM = 771,
     SQLEXCEPTION_SYM = 772,
     SQLSTATE_SYM = 773,
     SQLWARNING_SYM = 774,
     SQL_AFTER_GTIDS = 775,
     SQL_AFTER_MTS_GAPS = 776,
     SQL_BEFORE_GTIDS = 777,
     SQL_BIG_RESULT = 778,
     SQL_BUFFER_RESULT = 779,
     SQL_CACHE_SYM = 780,
     SQL_CALC_FOUND_ROWS = 781,
     SQL_NO_CACHE_SYM = 782,
     SQL_SMALL_RESULT = 783,
     SQL_SYM = 784,
     SQL_THREAD = 785,
     SSL_SYM = 786,
     STACKED_SYM = 787,
     STARTING = 788,
     STARTS_SYM = 789,
     START_SYM = 790,
     STATS_AUTO_RECALC_SYM = 791,
     STATS_PERSISTENT_SYM = 792,
     STATS_SAMPLE_PAGES_SYM = 793,
     STATUS_SYM = 794,
     STDDEV_SAMP_SYM = 795,
     STD_SYM = 796,
     STOP_SYM = 797,
     STORAGE_SYM = 798,
     STORED_SYM = 799,
     STRAIGHT_JOIN = 800,
     STRING_SYM = 801,
     SUBCLASS_ORIGIN_SYM = 802,
     SUBDATE_SYM = 803,
     SUBJECT_SYM = 804,
     SUBPARTITIONS_SYM = 805,
     SUBPARTITION_SYM = 806,
     SUBSTRING = 807,
     SUM_SYM = 808,
     SUPER_SYM = 809,
     SUSPEND_SYM = 810,
     SWAPS_SYM = 811,
     SWITCHES_SYM = 812,
     SYSDATE = 813,
     TABLES = 814,
     TABLESPACE_SYM = 815,
     TABLE_REF_PRIORITY = 816,
     TABLE_SYM = 817,
     TABLE_CHECKSUM_SYM = 818,
     TABLE_NAME_SYM = 819,
     TEMPORARY = 820,
     TEMPTABLE_SYM = 821,
     TERMINATED = 822,
     TEXT_STRING = 823,
     TEXT_SYM = 824,
     THAN_SYM = 825,
     THEN_SYM = 826,
     TIMESTAMP = 827,
     TIMESTAMP_ADD = 828,
     TIMESTAMP_DIFF = 829,
     TIME_SYM = 830,
     TINYBLOB = 831,
     TINYINT = 832,
     TINYTEXT = 833,
     TO_SYM = 834,
     TRAILING = 835,
     TRANSACTION_SYM = 836,
     TRIGGERS_SYM = 837,
     TRIGGER_SYM = 838,
     TRIM = 839,
     TRUE_SYM = 840,
     TRUNCATE_SYM = 841,
     TYPES_SYM = 842,
     TYPE_SYM = 843,
     UDF_RETURNS_SYM = 844,
     ULONGLONG_NUM = 845,
     UNCOMMITTED_SYM = 846,
     UNDEFINED_SYM = 847,
     UNDERSCORE_CHARSET = 848,
     UNDOFILE_SYM = 849,
     UNDO_BUFFER_SIZE_SYM = 850,
     UNDO_SYM = 851,
     UNICODE_SYM = 852,
     UNINSTALL_SYM = 853,
     UNION_SYM = 854,
     UNIQUE_SYM = 855,
     UNKNOWN_SYM = 856,
     UNLOCK_SYM = 857,
     UNSIGNED = 858,
     UNTIL_SYM = 859,
     UPDATE_SYM = 860,
     UPGRADE_SYM = 861,
     USAGE = 862,
     USER = 863,
     USE_FRM = 864,
     USE_SYM = 865,
     USING = 866,
     UTC_DATE_SYM = 867,
     UTC_TIMESTAMP_SYM = 868,
     UTC_TIME_SYM = 869,
     VALIDATION_SYM = 870,
     VALUES = 871,
     VALUE_SYM = 872,
     VARBINARY = 873,
     VARCHAR = 874,
     VARIABLES = 875,
     VARIANCE_SYM = 876,
     VARYING = 877,
     VAR_SAMP_SYM = 878,
     VIEW_SYM = 879,
     VIRTUAL_SYM = 880,
     WAIT_SYM = 881,
     WARNINGS = 882,
     WEEK_SYM = 883,
     WEIGHT_STRING_SYM = 884,
     WHEN_SYM = 885,
     WHERE = 886,
     WHILE_SYM = 887,
     WITH = 888,
     WITH_CUBE_SYM = 889,
     WITH_ROLLUP_SYM = 890,
     WITHOUT_SYM = 891,
     WORK_SYM = 892,
     WRAPPER_SYM = 893,
     WRITE_SYM = 894,
     X509_SYM = 895,
     XA_SYM = 896,
     XID_SYM = 897,
     XML_SYM = 898,
     XOR = 899,
     YEAR_MONTH_SYM = 900,
     YEAR_SYM = 901,
     ZEROFILL = 902
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define ANALYSE_SYM 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT 289
#define BINARY 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND 293
#define BIT_OR 294
#define BIT_SYM 295
#define BIT_XOR 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define CONCURRENT 339
#define CONDITION_SYM 340
#define CONNECTION_SYM 341
#define CONSISTENT_SYM 342
#define CONSTRAINT 343
#define CONSTRAINT_CATALOG_SYM 344
#define CONSTRAINT_NAME_SYM 345
#define CONSTRAINT_SCHEMA_SYM 346
#define CONTAINS_SYM 347
#define CONTEXT_SYM 348
#define CONTINUE_SYM 349
#define CONVERT_SYM 350
#define COUNT_SYM 351
#define CPU_SYM 352
#define CREATE 353
#define CROSS 354
#define CUBE_SYM 355
#define CURDATE 356
#define CURRENT_SYM 357
#define CURRENT_USER 358
#define CURSOR_SYM 359
#define CURSOR_NAME_SYM 360
#define CURTIME 361
#define DATABASE 362
#define DATABASES 363
#define DATAFILE_SYM 364
#define DATA_SYM 365
#define DATETIME 366
#define DATE_ADD_INTERVAL 367
#define DATE_SUB_INTERVAL 368
#define DATE_SYM 369
#define DAY_HOUR_SYM 370
#define DAY_MICROSECOND_SYM 371
#define DAY_MINUTE_SYM 372
#define DAY_SECOND_SYM 373
#define DAY_SYM 374
#define DEALLOCATE_SYM 375
#define DECIMAL_NUM 376
#define DECIMAL_SYM 377
#define DECLARE_SYM 378
#define DEFAULT 379
#define DEFAULT_AUTH_SYM 380
#define DEFINER_SYM 381
#define DELAYED_SYM 382
#define DELAY_KEY_WRITE_SYM 383
#define DELETE_SYM 384
#define DESC 385
#define DESCRIBE 386
#define DES_KEY_FILE 387
#define DETERMINISTIC_SYM 388
#define DIAGNOSTICS_SYM 389
#define DIRECTORY_SYM 390
#define DISABLE_SYM 391
#define DISCARD 392
#define DISK_SYM 393
#define DISTINCT 394
#define DIV_SYM 395
#define DOUBLE_SYM 396
#define DO_SYM 397
#define DROP 398
#define DUAL_SYM 399
#define DUMPFILE 400
#define DUPLICATE_SYM 401
#define DYNAMIC_SYM 402
#define EACH_SYM 403
#define ELSE 404
#define ELSEIF_SYM 405
#define ENABLE_SYM 406
#define ENCLOSED 407
#define END 408
#define ENDS_SYM 409
#define END_OF_INPUT 410
#define ENGINES_SYM 411
#define ENGINE_SYM 412
#define ENUM 413
#define EQ 414
#define EQUAL_SYM 415
#define ERROR_SYM 416
#define ERRORS 417
#define ESCAPED 418
#define ESCAPE_SYM 419
#define EVENTS_SYM 420
#define EVENT_SYM 421
#define EVERY_SYM 422
#define EXCHANGE_SYM 423
#define EXECUTE_SYM 424
#define EXISTS 425
#define EXIT_SYM 426
#define EXPANSION_SYM 427
#define EXPIRE_SYM 428
#define EXPORT_SYM 429
#define EXTENDED_SYM 430
#define EXTENT_SIZE_SYM 431
#define EXTRACT_SYM 432
#define FALSE_SYM 433
#define FAST_SYM 434
#define FAULTS_SYM 435
#define FETCH_SYM 436
#define FILE_SYM 437
#define FILE_BLOCK_SIZE_SYM 438
#define FILTER_SYM 439
#define FIRST_SYM 440
#define FIXED_SYM 441
#define FLOAT_NUM 442
#define FLOAT_SYM 443
#define FLUSH_SYM 444
#define FOLLOWS_SYM 445
#define FORCE_SYM 446
#define FOREIGN 447
#define FOR_SYM 448
#define FORMAT_SYM 449
#define FOUND_SYM 450
#define FROM 451
#define FULL 452
#define FULLTEXT_SYM 453
#define FUNCTION_SYM 454
#define GE 455
#define GENERAL 456
#define GENERATED 457
#define GROUP_REPLICATION 458
#define GEOMETRYCOLLECTION 459
#define GEOMETRY_SYM 460
#define GET_FORMAT 461
#define GET_SYM 462
#define GLOBAL_SYM 463
#define GRANT 464
#define GRANTS 465
#define GROUP_SYM 466
#define GROUP_CONCAT_SYM 467
#define GT_SYM 468
#define HANDLER_SYM 469
#define HASH_SYM 470
#define HAVING 471
#define HELP_SYM 472
#define HEX_NUM 473
#define HIGH_PRIORITY 474
#define HOST_SYM 475
#define HOSTS_SYM 476
#define HOUR_MICROSECOND_SYM 477
#define HOUR_MINUTE_SYM 478
#define HOUR_SECOND_SYM 479
#define HOUR_SYM 480
#define IDENT 481
#define IDENTIFIED_SYM 482
#define IDENT_QUOTED 483
#define IF 484
#define IGNORE_SYM 485
#define IGNORE_SERVER_IDS_SYM 486
#define IMPORT 487
#define INDEXES 488
#define INDEX_SYM 489
#define INFILE 490
#define INITIAL_SIZE_SYM 491
#define INNER_SYM 492
#define INOUT_SYM 493
#define INSENSITIVE_SYM 494
#define INSERT 495
#define INSERT_METHOD 496
#define INSTALL_SYM 497
#define INTERVAL_SYM 498
#define INTO 499
#define INT_SYM 500
#define INVOKER_SYM 501
#define IN_SYM 502
#define IO_AFTER_GTIDS 503
#define IO_BEFORE_GTIDS 504
#define IO_SYM 505
#define IPC_SYM 506
#define IS 507
#define ISOLATION 508
#define ISSUER_SYM 509
#define ITERATE_SYM 510
#define JOIN_SYM 511
#define JSON_SEPARATOR_SYM 512
#define JSON_SYM 513
#define KEYS 514
#define KEY_BLOCK_SIZE 515
#define KEY_SYM 516
#define KILL_SYM 517
#define LANGUAGE_SYM 518
#define LAST_SYM 519
#define LE 520
#define LEADING 521
#define LEAVES 522
#define LEAVE_SYM 523
#define LEFT 524
#define LESS_SYM 525
#define LEVEL_SYM 526
#define LEX_HOSTNAME 527
#define LIKE 528
#define LIMIT 529
#define LINEAR_SYM 530
#define LINES 531
#define LINESTRING 532
#define LIST_SYM 533
#define LOAD 534
#define LOCAL_SYM 535
#define LOCATOR_SYM 536
#define LOCKS_SYM 537
#define LOCK_SYM 538
#define LOGFILE_SYM 539
#define LOGS_SYM 540
#define LONGBLOB 541
#define LONGTEXT 542
#define LONG_NUM 543
#define LONG_SYM 544
#define LOOP_SYM 545
#define LOW_PRIORITY 546
#define LT 547
#define MASTER_AUTO_POSITION_SYM 548
#define MASTER_BIND_SYM 549
#define MASTER_CONNECT_RETRY_SYM 550
#define MASTER_DELAY_SYM 551
#define MASTER_HOST_SYM 552
#define MASTER_LOG_FILE_SYM 553
#define MASTER_LOG_POS_SYM 554
#define MASTER_PASSWORD_SYM 555
#define MASTER_PORT_SYM 556
#define MASTER_RETRY_COUNT_SYM 557
#define MASTER_SERVER_ID_SYM 558
#define MASTER_SSL_CAPATH_SYM 559
#define MASTER_SSL_CA_SYM 560
#define MASTER_SSL_CERT_SYM 561
#define MASTER_SSL_CIPHER_SYM 562
#define MASTER_SSL_CRL_SYM 563
#define MASTER_SSL_CRLPATH_SYM 564
#define MASTER_SSL_KEY_SYM 565
#define MASTER_SSL_SYM 566
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 567
#define MASTER_SYM 568
#define MASTER_USER_SYM 569
#define MASTER_HEARTBEAT_PERIOD_SYM 570
#define MATCH 571
#define MAX_CONNECTIONS_PER_HOUR 572
#define MAX_QUERIES_PER_HOUR 573
#define MAX_ROWS 574
#define MAX_SIZE_SYM 575
#define MAX_SYM 576
#define MAX_UPDATES_PER_HOUR 577
#define MAX_USER_CONNECTIONS_SYM 578
#define MAX_VALUE_SYM 579
#define MEDIUMBLOB 580
#define MEDIUMINT 581
#define MEDIUMTEXT 582
#define MEDIUM_SYM 583
#define MEMORY_SYM 584
#define MERGE_SYM 585
#define MESSAGE_TEXT_SYM 586
#define MICROSECOND_SYM 587
#define MIGRATE_SYM 588
#define MINUTE_MICROSECOND_SYM 589
#define MINUTE_SECOND_SYM 590
#define MINUTE_SYM 591
#define MIN_ROWS 592
#define MIN_SYM 593
#define MODE_SYM 594
#define MODIFIES_SYM 595
#define MODIFY_SYM 596
#define MOD_SYM 597
#define MONTH_SYM 598
#define MULTILINESTRING 599
#define MULTIPOINT 600
#define MULTIPOLYGON 601
#define MUTEX_SYM 602
#define MYSQL_ERRNO_SYM 603
#define NAMES_SYM 604
#define NAME_SYM 605
#define NATIONAL_SYM 606
#define NATURAL 607
#define NCHAR_STRING 608
#define NCHAR_SYM 609
#define NDBCLUSTER_SYM 610
#define NE 611
#define NEG 612
#define NEVER_SYM 613
#define NEW_SYM 614
#define NEXT_SYM 615
#define NODEGROUP_SYM 616
#define NONE_SYM 617
#define NOT2_SYM 618
#define NOT_SYM 619
#define NOW_SYM 620
#define NO_SYM 621
#define NO_WAIT_SYM 622
#define NO_WRITE_TO_BINLOG 623
#define NULL_SYM 624
#define NUM 625
#define NUMBER_SYM 626
#define NUMERIC_SYM 627
#define NVARCHAR_SYM 628
#define OFFSET_SYM 629
#define ON 630
#define ONE_SYM 631
#define ONLY_SYM 632
#define OPEN_SYM 633
#define OPTIMIZE 634
#define OPTIMIZER_COSTS_SYM 635
#define OPTIONS_SYM 636
#define OPTION 637
#define OPTIONALLY 638
#define OR2_SYM 639
#define ORDER_SYM 640
#define OR_OR_SYM 641
#define OR_SYM 642
#define OUTER 643
#define OUTFILE 644
#define OUT_SYM 645
#define OWNER_SYM 646
#define PACK_KEYS_SYM 647
#define PAGE_SYM 648
#define PARAM_MARKER 649
#define PARSER_SYM 650
#define PARSE_GCOL_EXPR_SYM 651
#define PARTIAL 652
#define PARTITION_SYM 653
#define PARTITIONS_SYM 654
#define PARTITIONING_SYM 655
#define PASSWORD 656
#define PHASE_SYM 657
#define PLUGIN_DIR_SYM 658
#define PLUGIN_SYM 659
#define PLUGINS_SYM 660
#define POINT_SYM 661
#define POLYGON 662
#define PORT_SYM 663
#define POSITION_SYM 664
#define PRECEDES_SYM 665
#define PRECISION 666
#define PREPARE_SYM 667
#define PRESERVE_SYM 668
#define PREV_SYM 669
#define PRIMARY_SYM 670
#define PRIVILEGES 671
#define PROCEDURE_SYM 672
#define PROCESS 673
#define PROCESSLIST_SYM 674
#define PROFILE_SYM 675
#define PROFILES_SYM 676
#define PROXY_SYM 677
#define PURGE 678
#define QUARTER_SYM 679
#define QUERY_SYM 680
#define QUICK 681
#define RANGE_SYM 682
#define READS_SYM 683
#define READ_ONLY_SYM 684
#define READ_SYM 685
#define READ_WRITE_SYM 686
#define REAL 687
#define REBUILD_SYM 688
#define RECOVER_SYM 689
#define REDOFILE_SYM 690
#define REDO_BUFFER_SIZE_SYM 691
#define REDUNDANT_SYM 692
#define REFERENCES 693
#define REGEXP 694
#define RELAY 695
#define RELAYLOG_SYM 696
#define RELAY_LOG_FILE_SYM 697
#define RELAY_LOG_POS_SYM 698
#define RELAY_THREAD 699
#define RELEASE_SYM 700
#define RELOAD 701
#define REMOVE_SYM 702
#define RENAME 703
#define REORGANIZE_SYM 704
#define REPAIR 705
#define REPEATABLE_SYM 706
#define REPEAT_SYM 707
#define REPLACE 708
#define REPLICATION 709
#define REPLICATE_DO_DB 710
#define REPLICATE_IGNORE_DB 711
#define REPLICATE_DO_TABLE 712
#define REPLICATE_IGNORE_TABLE 713
#define REPLICATE_WILD_DO_TABLE 714
#define REPLICATE_WILD_IGNORE_TABLE 715
#define REPLICATE_REWRITE_DB 716
#define REQUIRE_SYM 717
#define RESET_SYM 718
#define RESIGNAL_SYM 719
#define RESOURCES 720
#define RESTORE_SYM 721
#define RESTRICT 722
#define RESUME_SYM 723
#define RETURNED_SQLSTATE_SYM 724
#define RETURNS_SYM 725
#define RETURN_SYM 726
#define REVERSE_SYM 727
#define REVOKE 728
#define RIGHT 729
#define ROLLBACK_SYM 730
#define ROLLUP_SYM 731
#define ROUTINE_SYM 732
#define ROWS_SYM 733
#define ROW_FORMAT_SYM 734
#define ROW_SYM 735
#define ROW_COUNT_SYM 736
#define RTREE_SYM 737
#define SAVEPOINT_SYM 738
#define SCHEDULE_SYM 739
#define SCHEMA_NAME_SYM 740
#define SECOND_MICROSECOND_SYM 741
#define SECOND_SYM 742
#define SECURITY_SYM 743
#define SELECT_SYM 744
#define SENSITIVE_SYM 745
#define SEPARATOR_SYM 746
#define SERIALIZABLE_SYM 747
#define SERIAL_SYM 748
#define SESSION_SYM 749
#define SERVER_SYM 750
#define SERVER_OPTIONS 751
#define SET 752
#define SET_VAR 753
#define SHARE_SYM 754
#define SHIFT_LEFT 755
#define SHIFT_RIGHT 756
#define SHOW 757
#define SHUTDOWN 758
#define SIGNAL_SYM 759
#define SIGNED_SYM 760
#define SIMPLE_SYM 761
#define SLAVE 762
#define SLOW 763
#define SMALLINT 764
#define SNAPSHOT_SYM 765
#define SOCKET_SYM 766
#define SONAME_SYM 767
#define SOUNDS_SYM 768
#define SOURCE_SYM 769
#define SPATIAL_SYM 770
#define SPECIFIC_SYM 771
#define SQLEXCEPTION_SYM 772
#define SQLSTATE_SYM 773
#define SQLWARNING_SYM 774
#define SQL_AFTER_GTIDS 775
#define SQL_AFTER_MTS_GAPS 776
#define SQL_BEFORE_GTIDS 777
#define SQL_BIG_RESULT 778
#define SQL_BUFFER_RESULT 779
#define SQL_CACHE_SYM 780
#define SQL_CALC_FOUND_ROWS 781
#define SQL_NO_CACHE_SYM 782
#define SQL_SMALL_RESULT 783
#define SQL_SYM 784
#define SQL_THREAD 785
#define SSL_SYM 786
#define STACKED_SYM 787
#define STARTING 788
#define STARTS_SYM 789
#define START_SYM 790
#define STATS_AUTO_RECALC_SYM 791
#define STATS_PERSISTENT_SYM 792
#define STATS_SAMPLE_PAGES_SYM 793
#define STATUS_SYM 794
#define STDDEV_SAMP_SYM 795
#define STD_SYM 796
#define STOP_SYM 797
#define STORAGE_SYM 798
#define STORED_SYM 799
#define STRAIGHT_JOIN 800
#define STRING_SYM 801
#define SUBCLASS_ORIGIN_SYM 802
#define SUBDATE_SYM 803
#define SUBJECT_SYM 804
#define SUBPARTITIONS_SYM 805
#define SUBPARTITION_SYM 806
#define SUBSTRING 807
#define SUM_SYM 808
#define SUPER_SYM 809
#define SUSPEND_SYM 810
#define SWAPS_SYM 811
#define SWITCHES_SYM 812
#define SYSDATE 813
#define TABLES 814
#define TABLESPACE_SYM 815
#define TABLE_REF_PRIORITY 816
#define TABLE_SYM 817
#define TABLE_CHECKSUM_SYM 818
#define TABLE_NAME_SYM 819
#define TEMPORARY 820
#define TEMPTABLE_SYM 821
#define TERMINATED 822
#define TEXT_STRING 823
#define TEXT_SYM 824
#define THAN_SYM 825
#define THEN_SYM 826
#define TIMESTAMP 827
#define TIMESTAMP_ADD 828
#define TIMESTAMP_DIFF 829
#define TIME_SYM 830
#define TINYBLOB 831
#define TINYINT 832
#define TINYTEXT 833
#define TO_SYM 834
#define TRAILING 835
#define TRANSACTION_SYM 836
#define TRIGGERS_SYM 837
#define TRIGGER_SYM 838
#define TRIM 839
#define TRUE_SYM 840
#define TRUNCATE_SYM 841
#define TYPES_SYM 842
#define TYPE_SYM 843
#define UDF_RETURNS_SYM 844
#define ULONGLONG_NUM 845
#define UNCOMMITTED_SYM 846
#define UNDEFINED_SYM 847
#define UNDERSCORE_CHARSET 848
#define UNDOFILE_SYM 849
#define UNDO_BUFFER_SIZE_SYM 850
#define UNDO_SYM 851
#define UNICODE_SYM 852
#define UNINSTALL_SYM 853
#define UNION_SYM 854
#define UNIQUE_SYM 855
#define UNKNOWN_SYM 856
#define UNLOCK_SYM 857
#define UNSIGNED 858
#define UNTIL_SYM 859
#define UPDATE_SYM 860
#define UPGRADE_SYM 861
#define USAGE 862
#define USER 863
#define USE_FRM 864
#define USE_SYM 865
#define USING 866
#define UTC_DATE_SYM 867
#define UTC_TIMESTAMP_SYM 868
#define UTC_TIME_SYM 869
#define VALIDATION_SYM 870
#define VALUES 871
#define VALUE_SYM 872
#define VARBINARY 873
#define VARCHAR 874
#define VARIABLES 875
#define VARIANCE_SYM 876
#define VARYING 877
#define VAR_SAMP_SYM 878
#define VIEW_SYM 879
#define VIRTUAL_SYM 880
#define WAIT_SYM 881
#define WARNINGS 882
#define WEEK_SYM 883
#define WEIGHT_STRING_SYM 884
#define WHEN_SYM 885
#define WHERE 886
#define WHILE_SYM 887
#define WITH 888
#define WITH_CUBE_SYM 889
#define WITH_ROLLUP_SYM 890
#define WITHOUT_SYM 891
#define WORK_SYM 892
#define WRAPPER_SYM 893
#define WRITE_SYM 894
#define X509_SYM 895
#define XA_SYM 896
#define XID_SYM 897
#define XML_SYM 898
#define XOR 899
#define YEAR_MONTH_SYM 900
#define YEAR_SYM 901
#define ZEROFILL 902




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED

# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 264 of yacc.c  */
#line 1857 "/export/home/pb2/build/sb_0-16729399-1444630353.38/dist_GPL/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  655
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   62998

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  667
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  915
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2718
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4642

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   902

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   660,     2,     2,     2,   654,   649,     2,
     657,   658,   652,   651,   659,   650,   665,   653,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   666,   663,
       2,     2,     2,     2,   664,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   655,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   661,   648,   662,   656,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   125,   127,   129,   131,   135,   137,   139,   144,
     146,   149,   150,   155,   156,   159,   163,   165,   168,   169,
     173,   174,   181,   182,   188,   190,   194,   198,   202,   206,
     210,   214,   218,   222,   225,   229,   231,   235,   237,   240,
     244,   250,   258,   261,   265,   267,   271,   275,   278,   282,
     284,   288,   290,   292,   296,   300,   304,   308,   312,   316,
     320,   324,   328,   332,   336,   340,   344,   348,   352,   356,
     360,   364,   368,   374,   378,   380,   381,   383,   387,   389,
     393,   397,   401,   405,   406,   410,   411,   419,   420,   421,
     436,   437,   438,   453,   454,   455,   470,   471,   478,   479,
     483,   492,   497,   501,   513,   515,   519,   522,   525,   528,
     531,   534,   537,   540,   541,   554,   555,   562,   565,   566,
     568,   572,   574,   575,   578,   579,   582,   583,   585,   589,
     594,   595,   598,   599,   602,   604,   606,   608,   610,   612,
     614,   616,   618,   620,   622,   624,   626,   628,   630,   631,
     635,   637,   638,   641,   642,   645,   648,   651,   654,   657,
     661,   665,   667,   669,   671,   674,   678,   682,   683,   688,
     689,   693,   694,   696,   700,   702,   703,   705,   709,   711,
     712,   716,   717,   719,   723,   725,   730,   731,   733,   735,
     737,   738,   742,   745,   749,   750,   754,   755,   761,   767,
     768,   776,   777,   784,   786,   788,   790,   794,   796,   798,
     800,   804,   805,   807,   809,   811,   813,   816,   818,   822,
     824,   826,   827,   829,   830,   833,   837,   843,   845,   847,
     849,   851,   853,   855,   857,   859,   861,   863,   865,   867,
     869,   871,   873,   877,   882,   883,   885,   887,   889,   893,
     895,   899,   903,   905,   908,   910,   912,   914,   916,   920,
     924,   926,   928,   930,   932,   934,   936,   938,   940,   942,
     944,   946,   948,   950,   952,   956,   957,   958,   962,   964,
     966,   968,   970,   972,   974,   976,   978,   980,   982,   984,
     986,   988,   989,   995,   996,   999,  1000,  1004,  1005,  1008,
    1011,  1014,  1017,  1018,  1025,  1028,  1029,  1032,  1034,  1036,
    1040,  1041,  1042,  1043,  1051,  1052,  1055,  1058,  1060,  1062,
    1063,  1064,  1073,  1074,  1081,  1083,  1086,  1088,  1091,  1092,
    1093,  1100,  1101,  1102,  1109,  1110,  1113,  1114,  1120,  1121,
    1123,  1124,  1130,  1131,  1134,  1135,  1141,  1146,  1147,  1148,
    1157,  1158,  1159,  1168,  1170,  1172,  1174,  1176,  1178,  1181,
    1186,  1192,  1193,  1198,  1203,  1208,  1212,  1216,  1219,  1222,
    1223,  1226,  1228,  1231,  1235,  1237,  1239,  1241,  1242,  1244,
    1246,  1249,  1253,  1255,  1257,  1259,  1261,  1263,  1265,  1267,
    1269,  1271,  1272,  1274,  1276,  1279,  1283,  1285,  1287,  1289,
    1291,  1293,  1294,  1296,  1298,  1301,  1305,  1307,  1309,  1311,
    1313,  1315,  1317,  1319,  1320,  1322,  1324,  1327,  1331,  1333,
    1335,  1337,  1340,  1343,  1346,  1348,  1350,  1352,  1354,  1357,
    1361,  1365,  1369,  1373,  1377,  1381,  1385,  1389,  1394,  1398,
    1400,  1402,  1404,  1406,  1409,  1413,  1416,  1421,  1427,  1428,
    1434,  1435,  1436,  1442,  1443,  1451,  1453,  1454,  1456,  1457,
    1461,  1462,  1466,  1472,  1479,  1480,  1485,  1488,  1491,  1494,
    1497,  1498,  1500,  1501,  1505,  1506,  1508,  1510,  1514,  1516,
    1521,  1525,  1529,  1530,  1533,  1534,  1535,  1543,  1544,  1555,
    1557,  1561,  1563,  1565,  1566,  1569,  1570,  1574,  1576,  1580,
    1581,  1588,  1590,  1591,  1592,  1598,  1599,  1604,  1606,  1608,
    1610,  1614,  1616,  1620,  1621,  1622,  1628,  1630,  1634,  1636,
    1638,  1639,  1643,  1645,  1649,  1650,  1655,  1657,  1658,  1660,
    1663,  1665,  1669,  1674,  1678,  1682,  1686,  1691,  1696,  1700,
    1705,  1706,  1708,  1709,  1711,  1713,  1716,  1718,  1720,  1721,
    1723,  1725,  1728,  1730,  1731,  1735,  1736,  1738,  1740,  1743,
    1745,  1748,  1752,  1756,  1760,  1764,  1768,  1772,  1776,  1780,
    1784,  1788,  1792,  1796,  1800,  1804,  1808,  1812,  1816,  1820,
    1824,  1828,  1832,  1833,  1840,  1842,  1844,  1848,  1853,  1858,
    1862,  1865,  1868,  1872,  1876,  1881,  1886,  1888,  1890,  1892,
    1894,  1896,  1898,  1900,  1902,  1904,  1906,  1908,  1910,  1912,
    1914,  1916,  1918,  1920,  1924,  1926,  1928,  1931,  1934,  1942,
    1951,  1960,  1969,  1978,  1981,  1982,  1984,  1989,  1990,  1992,
    1995,  1996,  2000,  2003,  2013,  2014,  2017,  2018,  2020,  2023,
    2025,  2027,  2030,  2033,  2036,  2039,  2040,  2042,  2044,  2049,
    2051,  2055,  2059,  2063,  2065,  2068,  2070,  2072,  2076,  2079,
    2083,  2086,  2089,  2091,  2095,  2099,  2102,  2106,  2108,  2111,
    2114,  2117,  2119,  2122,  2124,  2126,  2128,  2131,  2135,  2138,
    2142,  2145,  2148,  2152,  2156,  2160,  2161,  2168,  2169,  2176,
    2179,  2181,  2183,  2185,  2187,  2189,  2191,  2193,  2195,  2197,
    2199,  2201,  2203,  2206,  2209,  2211,  2214,  2216,  2219,  2223,
    2226,  2228,  2230,  2232,  2234,  2236,  2238,  2240,  2243,  2244,
    2246,  2248,  2254,  2255,  2259,  2260,  2263,  2267,  2268,  2270,
    2273,  2275,  2277,  2279,  2281,  2285,  2289,  2293,  2297,  2298,
    2300,  2301,  2303,  2304,  2306,  2309,  2311,  2313,  2316,  2319,
    2323,  2325,  2329,  2332,  2334,  2337,  2340,  2343,  2346,  2349,
    2352,  2355,  2358,  2361,  2364,  2367,  2369,  2371,  2374,  2376,
    2378,  2380,  2382,  2384,  2385,  2388,  2390,  2392,  2394,  2396,
    2398,  2399,  2402,  2403,  2406,  2408,  2410,  2411,  2413,  2415,
    2418,  2421,  2423,  2426,  2429,  2430,  2432,  2434,  2436,  2440,
    2442,  2446,  2447,  2449,  2450,  2455,  2457,  2459,  2461,  2462,
    2464,  2467,  2469,  2471,  2474,  2476,  2480,  2484,  2486,  2488,
    2489,  2492,  2493,  2495,  2501,  2502,  2506,  2510,  2512,  2513,
    2516,  2519,  2522,  2523,  2527,  2531,  2538,  2545,  2547,  2549,
    2552,  2555,  2558,  2560,  2563,  2566,  2568,  2570,  2571,  2573,
    2575,  2577,  2579,  2580,  2582,  2584,  2586,  2587,  2589,  2592,
    2593,  2595,  2596,  2598,  2599,  2601,  2603,  2606,  2608,  2611,
    2613,  2616,  2619,  2622,  2626,  2629,  2631,  2633,  2635,  2637,
    2641,  2643,  2645,  2647,  2652,  2655,  2657,  2662,  2663,  2665,
    2666,  2669,  2671,  2675,  2676,  2682,  2683,  2689,  2697,  2698,
    2704,  2705,  2711,  2712,  2718,  2719,  2724,  2725,  2736,  2740,
    2745,  2749,  2753,  2761,  2767,  2773,  2778,  2779,  2781,  2783,
    2786,  2789,  2792,  2794,  2799,  2802,  2805,  2809,  2810,  2813,
    2816,  2818,  2821,  2824,  2827,  2830,  2834,  2835,  2839,  2841,
    2846,  2847,  2851,  2852,  2855,  2856,  2858,  2859,  2862,  2865,
    2868,  2871,  2873,  2875,  2877,  2881,  2886,  2887,  2894,  2899,
    2900,  2906,  2907,  2914,  2919,  2923,  2925,  2933,  2938,  2943,
    2944,  2946,  2949,  2952,  2955,  2957,  2959,  2960,  2966,  2967,
    2971,  2974,  2975,  2981,  2982,  2983,  2990,  2992,  2996,  2998,
    3000,  3004,  3007,  3011,  3014,  3019,  3020,  3027,  3028,  3029,
    3037,  3042,  3047,  3051,  3055,  3058,  3061,  3068,  3074,  3078,
    3084,  3090,  3092,  3094,  3096,  3098,  3100,  3103,  3105,  3106,
    3108,  3110,  3113,  3116,  3120,  3124,  3128,  3132,  3133,  3135,
    3136,  3138,  3139,  3141,  3143,  3144,  3147,  3149,  3150,  3152,
    3154,  3156,  3159,  3162,  3165,  3170,  3174,  3175,  3180,  3184,
    3185,  3187,  3189,  3193,  3197,  3200,  3203,  3208,  3209,  3213,
    3214,  3218,  3219,  3223,  3224,  3228,  3229,  3231,  3233,  3237,
    3239,  3241,  3242,  3245,  3247,  3251,  3255,  3259,  3261,  3262,
    3268,  3269,  3271,  3273,  3274,  3281,  3282,  3284,  3286,  3289,
    3291,  3293,  3295,  3296,  3302,  3305,  3306,  3312,  3313,  3315,
    3317,  3320,  3322,  3324,  3326,  3328,  3330,  3333,  3334,  3340,
    3341,  3343,  3345,  3346,  3351,  3356,  3360,  3366,  3368,  3372,
    3376,  3377,  3384,  3386,  3388,  3390,  3394,  3397,  3401,  3403,
    3405,  3406,  3413,  3415,  3417,  3419,  3423,  3427,  3432,  3433,
    3439,  3441,  3442,  3447,  3448,  3451,  3453,  3457,  3462,  3465,
    3469,  3473,  3477,  3482,  3486,  3498,  3499,  3503,  3512,  3515,
    3516,  3518,  3520,  3522,  3523,  3525,  3528,  3530,  3532,  3534,
    3536,  3537,  3540,  3545,  3549,  3551,  3553,  3555,  3558,  3559,
    3562,  3565,  3567,  3569,  3570,  3573,  3577,  3581,  3585,  3588,
    3592,  3597,  3601,  3606,  3610,  3615,  3617,  3621,  3626,  3630,
    3637,  3639,  3645,  3652,  3658,  3666,  3673,  3682,  3688,  3695,
    3700,  3705,  3711,  3715,  3720,  3722,  3726,  3730,  3734,  3738,
    3742,  3746,  3752,  3758,  3762,  3766,  3770,  3774,  3778,  3782,
    3784,  3786,  3788,  3790,  3792,  3794,  3796,  3798,  3800,  3802,
    3804,  3806,  3808,  3810,  3812,  3814,  3816,  3818,  3820,  3822,
    3824,  3826,  3828,  3832,  3834,  3836,  3838,  3840,  3844,  3847,
    3850,  3853,  3856,  3860,  3864,  3870,  3877,  3882,  3887,  3895,
    3898,  3905,  3911,  3918,  3925,  3930,  3935,  3941,  3945,  3950,
    3957,  3960,  3965,  3970,  3975,  3986,  3993,  4002,  4009,  4014,
    4019,  4026,  4031,  4036,  4041,  4048,  4053,  4061,  4069,  4077,
    4084,  4091,  4098,  4105,  4109,  4114,  4121,  4130,  4133,  4136,
    4145,  4154,  4161,  4168,  4170,  4177,  4184,  4193,  4202,  4209,
    4218,  4225,  4228,  4237,  4246,  4249,  4252,  4255,  4260,  4265,
    4270,  4275,  4279,  4288,  4295,  4304,  4309,  4316,  4321,  4326,
    4333,  4342,  4347,  4351,  4358,  4363,  4370,  4376,  4385,  4393,
    4404,  4406,  4413,  4418,  4423,  4428,  4433,  4438,  4445,  4450,
    4455,  4462,  4465,  4469,  4470,  4475,  4476,  4480,  4481,  4483,
    4485,  4489,  4492,  4497,  4503,  4508,  4513,  4518,  4524,  4529,
    4535,  4540,  4546,  4551,  4557,  4562,  4567,  4572,  4577,  4582,
    4588,  4596,  4599,  4603,  4605,  4610,  4611,  4613,  4614,  4617,
    4618,  4622,  4626,  4628,  4631,  4634,  4638,  4641,  4643,  4646,
    4648,  4651,  4653,  4656,  4659,  4662,  4664,  4665,  4667,  4669,
    4673,  4675,  4679,  4681,  4685,  4686,  4688,  4689,  4692,  4697,
    4703,  4705,  4707,  4709,  4711,  4716,  4718,  4722,  4726,  4730,
    4736,  4742,  4750,  4755,  4763,  4773,  4780,  4788,  4798,  4805,
    4807,  4810,  4813,  4814,  4816,  4821,  4826,  4831,  4836,  4839,
    4844,  4845,  4849,  4851,  4852,  4854,  4855,  4858,  4862,  4866,
    4868,  4870,  4877,  4884,  4886,  4889,  4890,  4892,  4894,  4895,
    4897,  4899,  4901,  4903,  4907,  4909,  4913,  4915,  4917,  4919,
    4921,  4923,  4925,  4927,  4929,  4931,  4933,  4935,  4937,  4939,
    4941,  4943,  4945,  4947,  4949,  4951,  4953,  4955,  4957,  4959,
    4961,  4963,  4964,  4966,  4968,  4969,  4972,  4973,  4975,  4976,
    4979,  4980,  4983,  4986,  4987,  4988,  4993,  4997,  4999,  5000,
    5002,  5004,  5008,  5012,  5014,  5017,  5018,  5020,  5024,  5028,
    5030,  5031,  5033,  5035,  5036,  5038,  5041,  5043,  5047,  5051,
    5053,  5055,  5057,  5059,  5061,  5062,  5065,  5067,  5069,  5071,
    5073,  5075,  5077,  5079,  5081,  5083,  5085,  5087,  5089,  5091,
    5093,  5095,  5097,  5099,  5101,  5103,  5105,  5107,  5109,  5111,
    5112,  5118,  5119,  5121,  5125,  5127,  5131,  5133,  5136,  5138,
    5139,  5141,  5144,  5150,  5153,  5155,  5159,  5160,  5161,  5169,
    5170,  5171,  5180,  5185,  5192,  5197,  5202,  5208,  5209,  5216,
    5221,  5226,  5231,  5237,  5242,  5244,  5248,  5250,  5252,  5256,
    5257,  5260,  5261,  5263,  5264,  5266,  5268,  5271,  5275,  5277,
    5279,  5288,  5298,  5307,  5314,  5322,  5329,  5330,  5332,  5334,
    5336,  5338,  5340,  5341,  5343,  5345,  5349,  5354,  5356,  5360,
    5365,  5369,  5371,  5374,  5377,  5382,  5384,  5386,  5390,  5392,
    5394,  5396,  5397,  5399,  5403,  5404,  5406,  5410,  5412,  5414,
    5416,  5417,  5423,  5433,  5437,  5439,  5443,  5444,  5446,  5455,
    5462,  5470,  5471,  5474,  5475,  5478,  5480,  5482,  5484,  5485,
    5490,  5491,  5493,  5494,  5496,  5498,  5502,  5504,  5506,  5509,
    5512,  5515,  5517,  5519,  5521,  5523,  5524,  5528,  5529,  5533,
    5536,  5541,  5546,  5550,  5555,  5560,  5562,  5566,  5570,  5577,
    5580,  5583,  5584,  5591,  5592,  5600,  5606,  5609,  5611,  5617,
    5623,  5626,  5629,  5631,  5636,  5640,  5643,  5647,  5650,  5653,
    5655,  5659,  5664,  5668,  5672,  5675,  5679,  5683,  5687,  5691,
    5695,  5699,  5703,  5707,  5711,  5716,  5718,  5720,  5722,  5724,
    5726,  5727,  5729,  5730,  5733,  5734,  5736,  5738,  5740,  5741,
    5744,  5745,  5748,  5749,  5752,  5755,  5756,  5759,  5762,  5763,
    5768,  5769,  5774,  5776,  5778,  5780,  5782,  5784,  5788,  5790,
    5792,  5793,  5795,  5797,  5801,  5802,  5804,  5806,  5807,  5812,
    5813,  5814,  5820,  5822,  5823,  5827,  5828,  5832,  5836,  5838,
    5841,  5844,  5847,  5850,  5853,  5857,  5860,  5862,  5864,  5866,
    5868,  5870,  5872,  5874,  5875,  5877,  5878,  5882,  5886,  5888,
    5889,  5894,  5896,  5899,  5900,  5902,  5903,  5907,  5911,  5914,
    5917,  5921,  5922,  5924,  5926,  5929,  5930,  5931,  5932,  5933,
    5956,  5958,  5960,  5961,  5963,  5964,  5966,  5968,  5969,  5971,
    5973,  5974,  5977,  5980,  5982,  5986,  5991,  5995,  5999,  6000,
    6003,  6006,  6008,  6012,  6016,  6017,  6022,  6023,  6027,  6029,
    6031,  6032,  6036,  6039,  6043,  6045,  6047,  6050,  6051,  6054,
    6058,  6060,  6064,  6066,  6068,  6071,  6074,  6076,  6078,  6080,
    6082,  6084,  6087,  6090,  6092,  6094,  6096,  6098,  6100,  6102,
    6104,  6106,  6109,  6112,  6114,  6116,  6118,  6120,  6122,  6125,
    6128,  6131,  6133,  6135,  6139,  6145,  6148,  6150,  6152,  6154,
    6156,  6160,  6165,  6171,  6173,  6179,  6183,  6186,  6188,  6192,
    6195,  6198,  6203,  6205,  6207,  6209,  6211,  6213,  6215,  6217,
    6219,  6221,  6223,  6225,  6227,  6229,  6231,  6233,  6235,  6239,
    6242,  6244,  6246,  6248,  6250,  6252,  6254,  6256,  6258,  6260,
    6262,  6264,  6266,  6268,  6270,  6272,  6274,  6276,  6278,  6280,
    6282,  6284,  6286,  6288,  6290,  6292,  6294,  6296,  6298,  6300,
    6302,  6304,  6306,  6308,  6310,  6312,  6314,  6316,  6318,  6320,
    6322,  6324,  6326,  6328,  6330,  6332,  6334,  6336,  6338,  6340,
    6342,  6344,  6346,  6348,  6350,  6352,  6354,  6356,  6358,  6360,
    6362,  6364,  6366,  6368,  6370,  6372,  6374,  6376,  6378,  6380,
    6382,  6384,  6386,  6388,  6390,  6392,  6394,  6396,  6398,  6400,
    6402,  6404,  6406,  6408,  6410,  6412,  6414,  6416,  6418,  6420,
    6422,  6424,  6426,  6428,  6430,  6432,  6434,  6436,  6438,  6440,
    6442,  6444,  6446,  6448,  6450,  6452,  6454,  6456,  6458,  6460,
    6462,  6464,  6466,  6468,  6470,  6472,  6474,  6476,  6478,  6480,
    6482,  6484,  6486,  6488,  6490,  6492,  6494,  6496,  6498,  6500,
    6502,  6504,  6506,  6508,  6510,  6512,  6514,  6516,  6518,  6520,
    6522,  6524,  6526,  6528,  6530,  6532,  6534,  6536,  6538,  6540,
    6542,  6544,  6546,  6548,  6550,  6552,  6554,  6556,  6558,  6560,
    6562,  6564,  6566,  6568,  6570,  6572,  6574,  6576,  6578,  6580,
    6582,  6584,  6586,  6588,  6590,  6592,  6594,  6596,  6598,  6600,
    6602,  6604,  6606,  6608,  6610,  6612,  6614,  6616,  6618,  6620,
    6622,  6624,  6626,  6628,  6630,  6632,  6634,  6636,  6638,  6640,
    6642,  6644,  6646,  6648,  6650,  6652,  6654,  6656,  6658,  6660,
    6662,  6664,  6666,  6668,  6670,  6672,  6674,  6676,  6678,  6680,
    6682,  6684,  6686,  6688,  6690,  6692,  6694,  6696,  6698,  6700,
    6702,  6704,  6706,  6708,  6710,  6712,  6714,  6716,  6718,  6720,
    6722,  6724,  6726,  6728,  6730,  6732,  6734,  6736,  6738,  6740,
    6742,  6744,  6746,  6748,  6750,  6752,  6754,  6756,  6758,  6760,
    6762,  6764,  6766,  6768,  6770,  6772,  6774,  6776,  6778,  6780,
    6782,  6784,  6786,  6788,  6790,  6792,  6794,  6796,  6798,  6800,
    6802,  6804,  6806,  6808,  6810,  6812,  6814,  6816,  6818,  6820,
    6822,  6824,  6826,  6828,  6830,  6832,  6834,  6836,  6838,  6840,
    6842,  6844,  6846,  6848,  6850,  6852,  6854,  6856,  6858,  6860,
    6862,  6864,  6866,  6868,  6870,  6872,  6874,  6876,  6878,  6880,
    6882,  6884,  6886,  6888,  6890,  6892,  6894,  6896,  6898,  6900,
    6902,  6904,  6906,  6908,  6910,  6912,  6914,  6916,  6918,  6920,
    6922,  6924,  6926,  6928,  6930,  6932,  6934,  6936,  6938,  6940,
    6942,  6944,  6946,  6948,  6950,  6952,  6954,  6956,  6958,  6960,
    6962,  6964,  6966,  6968,  6970,  6972,  6974,  6976,  6978,  6980,
    6982,  6984,  6986,  6988,  6991,  6994,  6997,  7000,  7004,  7011,
    7017,  7026,  7029,  7032,  7033,  7036,  7038,  7042,  7045,  7047,
    7049,  7051,  7053,  7054,  7056,  7058,  7060,  7061,  7064,  7067,
    7070,  7074,  7078,  7083,  7090,  7093,  7097,  7101,  7103,  7107,
    7111,  7114,  7117,  7119,  7120,  7123,  7127,  7128,  7131,  7134,
    7137,  7140,  7143,  7146,  7148,  7150,  7152,  7154,  7156,  7158,
    7160,  7161,  7166,  7168,  7170,  7172,  7176,  7180,  7182,  7184,
    7187,  7190,  7191,  7195,  7197,  7202,  7206,  7207,  7215,  7217,
    7220,  7222,  7224,  7226,  7228,  7230,  7232,  7233,  7239,  7241,
    7243,  7245,  7247,  7249,  7250,  7255,  7262,  7269,  7276,  7284,
    7290,  7291,  7296,  7305,  7314,  7323,  7330,  7331,  7333,  7335,
    7338,  7339,  7341,  7343,  7347,  7348,  7352,  7353,  7357,  7358,
    7362,  7363,  7367,  7369,  7371,  7373,  7375,  7377,  7379,  7381,
    7383,  7385,  7387,  7389,  7392,  7395,  7397,  7401,  7404,  7407,
    7410,  7413,  7416,  7419,  7422,  7425,  7427,  7429,  7432,  7433,
    7435,  7439,  7441,  7444,  7447,  7450,  7452,  7456,  7460,  7462,
    7464,  7468,  7470,  7474,  7479,  7485,  7490,  7497,  7504,  7506,
    7507,  7511,  7515,  7517,  7519,  7520,  7523,  7526,  7529,  7532,
    7533,  7536,  7537,  7541,  7544,  7546,  7549,  7552,  7555,  7558,
    7561,  7562,  7566,  7567,  7569,  7570,  7574,  7577,  7578,  7580,
    7583,  7584,  7586,  7591,  7596,  7602,  7605,  7609,  7610,  7612,
    7616,  7617,  7619,  7621,  7622,  7624,  7626,  7629,  7631,  7632,
    7634,  7636,  7640,  7645,  7647,  7652,  7653,  7656,  7657,  7659,
    7662,  7664,  7666,  7668,  7670,  7672,  7674,  7676,  7678,  7680,
    7683,  7686,  7690,  7692,  7694,  7696,  7698,  7700,  7702,  7704,
    7706,  7708,  7710,  7712,  7714,  7716,  7717,  7721,  7723,  7726,
    7728,  7731,  7735,  7739,  7743,  7744,  7748,  7752,  7753,  7761,
    7762,  7766,  7768,  7772,  7773,  7777,  7778,  7782,  7787,  7788,
    7791,  7795,  7796,  7800,  7801,  7805,  7810,  7815,  7817,  7819,
    7820,  7823,  7824,  7837,  7845,  7852,  7853,  7854,  7855,  7856,
    7857,  7872,  7873,  7874,  7875,  7876,  7888,  7893,  7898,  7902,
    7907,  7911,  7915,  7916,  7919,  7921,  7925,  7931,  7933,  7935,
    7936,  7938,  7940,  7941,  7944,  7945,  7947,  7951,  7957
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     668,     0,    -1,   155,    -1,    -1,   671,   669,   663,   670,
      -1,   671,   155,    -1,    -1,   155,    -1,   672,    -1,  1510,
      -1,  1064,    -1,  1143,    -1,  1145,    -1,   739,    -1,   684,
      -1,  1146,    -1,  1135,    -1,  1516,    -1,   706,    -1,   673,
      -1,  1334,    -1,  1360,    -1,  1296,    -1,  1298,    -1,   677,
      -1,  1367,    -1,   774,    -1,  1116,    -1,  1483,    -1,  1473,
      -1,   682,    -1,  1311,    -1,  1580,    -1,  1387,    -1,  1390,
      -1,  1464,    -1,  1151,    -1,  1159,    -1,   976,    -1,   893,
      -1,  1166,    -1,   675,    -1,  1383,    -1,  1519,    -1,  1154,
      -1,  1138,    -1,  1312,    -1,  1377,    -1,   773,    -1,  1480,
      -1,  1517,    -1,  1518,    -1,  1177,    -1,  1443,    -1,   766,
      -1,  1345,    -1,  1472,    -1,  1117,    -1,  1121,    -1,  1338,
      -1,  1581,    -1,  1470,    -1,  1330,    -1,  1389,    -1,  1573,
      -1,   674,   412,  1437,    -1,   120,    -1,   143,    -1,   412,
    1437,   196,   676,    -1,  1434,    -1,   664,  1439,    -1,    -1,
     169,  1437,   678,   679,    -1,    -1,   611,   680,    -1,   680,
     659,   681,    -1,   681,    -1,   664,  1439,    -1,    -1,   217,
     683,  1439,    -1,    -1,    58,   313,   579,   685,   700,   705,
      -1,    -1,    58,   454,   184,   686,   687,    -1,   688,    -1,
     687,   659,   688,    -1,   455,   159,   689,    -1,   456,   159,
     689,    -1,   457,   159,   694,    -1,   458,   159,   694,    -1,
     459,   159,   697,    -1,   460,   159,   697,    -1,   461,   159,
     692,    -1,   657,   658,    -1,   657,   690,   658,    -1,   691,
      -1,   690,   659,   691,    -1,  1437,    -1,   657,   658,    -1,
     657,   693,   658,    -1,   657,   691,   659,   691,   658,    -1,
     693,   659,   657,   691,   659,   691,   658,    -1,   657,   658,
      -1,   657,   695,   658,    -1,   696,    -1,   695,   659,   696,
      -1,  1437,   665,  1437,    -1,   657,   658,    -1,   657,   698,
     658,    -1,   699,    -1,   698,   659,   699,    -1,  1433,    -1,
     701,    -1,   700,   659,   701,    -1,   297,   159,  1432,    -1,
     294,   159,  1432,    -1,   314,   159,  1432,    -1,   300,   159,
    1432,    -1,   301,   159,  1282,    -1,   295,   159,  1282,    -1,
     302,   159,  1282,    -1,   296,   159,  1282,    -1,   311,   159,
    1282,    -1,   305,   159,  1432,    -1,   304,   159,  1432,    -1,
     306,   159,  1432,    -1,   307,   159,  1432,    -1,   310,   159,
    1432,    -1,   312,   159,  1282,    -1,   308,   159,  1432,    -1,
     309,   159,  1432,    -1,   315,   159,  1419,    -1,   231,   159,
     657,   702,   658,    -1,   293,   159,  1282,    -1,   704,    -1,
      -1,   703,    -1,   702,   659,   703,    -1,  1282,    -1,   298,
     159,  1432,    -1,   299,   159,  1284,    -1,   442,   159,  1432,
      -1,   443,   159,  1282,    -1,    -1,   193,    60,  1432,    -1,
      -1,    98,   943,   562,   946,  1428,   707,   883,    -1,    -1,
      -1,    98,  1042,   234,  1437,  1046,   375,  1428,   708,   657,
    1059,   658,  1047,   709,  1108,    -1,    -1,    -1,    98,  1043,
     234,  1437,  1045,   375,  1428,   710,   657,  1059,   658,  1048,
     711,  1108,    -1,    -1,    -1,    98,  1044,   234,  1437,  1045,
     375,  1428,   712,   657,  1059,   658,  1049,   713,  1108,    -1,
      -1,    98,   107,   946,  1437,   714,   940,    -1,    -1,    98,
     715,  1534,    -1,    98,   608,   946,   731,  1500,  1505,  1077,
    1073,    -1,    98,   284,   211,   846,    -1,    98,   560,   843,
      -1,    98,   495,  1439,   192,   110,   638,  1439,   381,   657,
     716,   658,    -1,   717,    -1,   716,   659,   717,    -1,   608,
    1434,    -1,   220,  1434,    -1,   107,  1434,    -1,   391,  1434,
      -1,   401,  1434,    -1,   511,  1434,    -1,   408,  1282,    -1,
      -1,   166,   946,   733,   719,   375,   484,   720,   725,   722,
     727,   142,   728,    -1,    -1,   167,  1196,  1258,   721,   723,
     724,    -1,    25,  1196,    -1,    -1,   151,    -1,   136,   375,
     507,    -1,   136,    -1,    -1,   534,  1196,    -1,    -1,   154,
    1196,    -1,    -1,   726,    -1,   375,    81,   413,    -1,   375,
      81,   364,   413,    -1,    -1,    77,  1434,    -1,    -1,   729,
     730,    -1,   791,    -1,   793,    -1,   789,    -1,   810,    -1,
     828,    -1,   830,    -1,   825,    -1,   795,    -1,   797,    -1,
     798,    -1,   799,    -1,   800,    -1,   802,    -1,   732,    -1,
      -1,  1437,   665,  1437,    -1,  1437,    -1,    -1,   734,   736,
      -1,    -1,   735,   737,    -1,    77,  1434,    -1,   263,   529,
      -1,   366,   529,    -1,    92,   529,    -1,   428,   529,   110,
      -1,   340,   529,   110,    -1,   738,    -1,   736,    -1,   133,
      -1,  1202,   133,    -1,   529,   488,   126,    -1,   529,   488,
     246,    -1,    -1,    51,   733,   740,   741,    -1,    -1,   657,
     742,   658,    -1,    -1,   743,    -1,   743,   659,  1196,    -1,
    1196,    -1,    -1,   745,    -1,   745,   659,   747,    -1,   747,
      -1,    -1,  1437,   746,  1001,    -1,    -1,   749,    -1,   749,
     659,   750,    -1,   750,    -1,   751,   746,  1437,  1001,    -1,
      -1,   247,    -1,   390,    -1,   238,    -1,    -1,   752,   788,
     663,    -1,   788,   663,    -1,   753,   788,   663,    -1,    -1,
     754,   755,   663,    -1,    -1,   123,   785,   756,  1001,   786,
      -1,   123,  1437,    85,   193,   762,    -1,    -1,   123,   759,
     214,   193,   757,   760,   788,    -1,    -1,   123,  1437,   104,
     193,   758,  1177,    -1,   171,    -1,    94,    -1,   761,    -1,
     760,   659,   761,    -1,   765,    -1,  1282,    -1,   763,    -1,
     518,   764,  1435,    -1,    -1,   617,    -1,   762,    -1,  1437,
      -1,   519,    -1,  1202,   195,    -1,   517,    -1,   504,   767,
     769,    -1,  1437,    -1,   763,    -1,    -1,   767,    -1,    -1,
     497,   770,    -1,   772,   159,   771,    -1,   770,   659,   772,
     159,   771,    -1,  1418,    -1,  1219,    -1,  1424,    -1,    66,
      -1,   547,    -1,    89,    -1,    91,    -1,    90,    -1,    56,
      -1,   485,    -1,   564,    -1,    76,    -1,   105,    -1,   331,
      -1,   348,    -1,   464,   768,   769,    -1,   207,   775,   134,
     776,    -1,    -1,   102,    -1,   532,    -1,   777,    -1,    85,
     781,   782,    -1,   778,    -1,   777,   659,   778,    -1,   779,
     159,   780,    -1,  1437,    -1,   664,  1439,    -1,   371,    -1,
     481,    -1,   771,    -1,   783,    -1,   782,   659,   783,    -1,
     779,   159,   784,    -1,    66,    -1,   547,    -1,    89,    -1,
      91,    -1,    90,    -1,    56,    -1,   485,    -1,   564,    -1,
      76,    -1,   105,    -1,   331,    -1,   348,    -1,   469,    -1,
    1437,    -1,   785,   659,  1437,    -1,    -1,    -1,   124,   787,
    1196,    -1,   791,    -1,   793,    -1,   789,    -1,   810,    -1,
     828,    -1,   830,    -1,   825,    -1,   795,    -1,   797,    -1,
     798,    -1,   799,    -1,   800,    -1,   802,    -1,    -1,   229,
     790,   805,   153,   229,    -1,    -1,   792,   672,    -1,    -1,
     471,   794,  1196,    -1,    -1,   796,   834,    -1,   268,  1438,
      -1,   255,  1438,    -1,   378,  1437,    -1,    -1,   181,   803,
    1437,   244,   801,   804,    -1,    68,  1437,    -1,    -1,   360,
     196,    -1,   196,    -1,  1437,    -1,   804,   659,  1437,    -1,
      -1,    -1,    -1,   806,  1196,   807,   571,   753,   808,   809,
      -1,    -1,   150,   805,    -1,   149,   753,    -1,   811,    -1,
     814,    -1,    -1,    -1,    54,   812,  1196,   813,   816,   824,
     153,    54,    -1,    -1,    54,   815,   817,   824,   153,    54,
      -1,   818,    -1,   816,   818,    -1,   821,    -1,   817,   821,
      -1,    -1,    -1,   630,   819,  1196,   820,   571,   753,    -1,
      -1,    -1,   630,   822,  1196,   823,   571,   753,    -1,    -1,
     149,   753,    -1,    -1,  1438,   666,   826,   834,   827,    -1,
      -1,  1438,    -1,    -1,  1438,   666,   829,   832,   827,    -1,
      -1,   831,   832,    -1,    -1,    32,   833,   754,   752,   153,
      -1,   290,   753,   153,   290,    -1,    -1,    -1,   632,   835,
    1196,   836,   142,   753,   153,   632,    -1,    -1,    -1,   452,
     753,   604,   837,  1196,   838,   153,   452,    -1,    31,    -1,
       9,    -1,   240,    -1,   605,    -1,   129,    -1,   868,   870,
      -1,   868,    58,   865,   849,    -1,   868,     7,   865,   844,
     853,    -1,    -1,   610,   284,   211,  1437,    -1,   868,     7,
     865,   856,    -1,   868,   143,   865,   856,    -1,   869,   848,
     859,    -1,   869,   848,   862,    -1,     7,   866,    -1,     7,
     867,    -1,    -1,   850,   851,    -1,   852,    -1,   851,   852,
      -1,   851,   659,   852,    -1,   871,    -1,   872,    -1,   873,
      -1,    -1,   854,    -1,   855,    -1,   854,   855,    -1,   854,
     659,   855,    -1,   871,    -1,   872,    -1,   873,    -1,   874,
      -1,   877,    -1,   879,    -1,   881,    -1,   878,    -1,   880,
      -1,    -1,   857,    -1,   858,    -1,   857,   858,    -1,   857,
     659,   858,    -1,   871,    -1,   872,    -1,   873,    -1,   879,
      -1,   881,    -1,    -1,   860,    -1,   861,    -1,   860,   861,
      -1,   860,   659,   861,    -1,   871,    -1,   875,    -1,   876,
      -1,   877,    -1,   879,    -1,   881,    -1,   878,    -1,    -1,
     863,    -1,   864,    -1,   863,   864,    -1,   863,   659,   864,
      -1,   871,    -1,   879,    -1,   881,    -1,   109,  1434,    -1,
     594,  1434,    -1,   435,  1434,    -1,  1437,    -1,  1437,    -1,
     429,    -1,   431,    -1,   364,     4,    -1,   236,  1324,   882,
      -1,    26,  1324,   882,    -1,   320,  1324,   882,    -1,   176,
    1324,   882,    -1,   595,  1324,   882,    -1,   436,  1324,   882,
      -1,   361,  1324,  1283,    -1,    77,  1324,  1434,    -1,  1352,
     157,  1324,   954,    -1,   183,  1324,   882,    -1,   626,    -1,
     367,    -1,  1285,    -1,  1431,    -1,   657,   884,    -1,   947,
     889,   886,    -1,   273,  1428,    -1,   657,   273,  1428,   658,
      -1,   959,   658,   947,   889,   886,    -1,    -1,   889,   938,
     658,   885,  1522,    -1,    -1,    -1,  1398,   939,   938,   887,
    1520,    -1,    -1,  1398,   939,   657,   938,   658,   888,  1522,
      -1,   890,    -1,    -1,   891,    -1,    -1,   398,   892,   895,
      -1,    -1,   398,   894,   895,    -1,    48,   896,   906,   907,
     914,    -1,   898,   261,   899,   657,   900,   658,    -1,    -1,
     898,   215,   897,   904,    -1,   427,   904,    -1,   427,   903,
      -1,   278,   904,    -1,   278,   903,    -1,    -1,   275,    -1,
      -1,    12,   159,  1283,    -1,    -1,   901,    -1,   902,    -1,
     901,   659,   902,    -1,  1437,    -1,    73,   657,   900,   658,
      -1,   657,   912,   658,    -1,   657,   912,   658,    -1,    -1,
     399,  1283,    -1,    -1,    -1,   551,    48,   898,   215,   905,
     908,   913,    -1,    -1,   551,    48,   898,   261,   899,   657,
     910,   658,   909,   913,    -1,   911,    -1,   910,   659,   911,
      -1,  1437,    -1,  1199,    -1,    -1,   550,  1283,    -1,    -1,
     657,   915,   658,    -1,   916,    -1,   915,   659,   916,    -1,
      -1,   398,   917,   918,   919,   935,   930,    -1,  1437,    -1,
      -1,    -1,   616,   270,   570,   920,   922,    -1,    -1,   616,
     247,   921,   923,    -1,   324,    -1,   925,    -1,   925,    -1,
     657,   924,   658,    -1,   925,    -1,   924,   659,   925,    -1,
      -1,    -1,   657,   926,   928,   927,   658,    -1,   929,    -1,
     928,   659,   929,    -1,   324,    -1,  1199,    -1,    -1,   657,
     931,   658,    -1,   932,    -1,   931,   659,   932,    -1,    -1,
     551,   933,   934,   935,    -1,  1439,    -1,    -1,   936,    -1,
     936,   937,    -1,   937,    -1,   560,  1324,  1437,    -1,  1352,
     157,  1324,   954,    -1,   361,  1324,  1283,    -1,   319,  1324,
    1285,    -1,   337,  1324,  1285,    -1,   110,   135,  1324,  1434,
      -1,   234,   135,  1324,  1434,    -1,    77,  1324,  1434,    -1,
     489,  1188,  1192,  1184,    -1,    -1,    21,    -1,    -1,   941,
      -1,   942,    -1,   941,   942,    -1,   953,    -1,   952,    -1,
      -1,   944,    -1,   945,    -1,   945,   944,    -1,   565,    -1,
      -1,   229,  1202,   170,    -1,    -1,   949,    -1,   950,    -1,
     950,   948,    -1,   950,    -1,   950,   949,    -1,   950,   659,
     949,    -1,   157,  1324,   954,    -1,   319,  1324,  1284,    -1,
     337,  1324,  1284,    -1,    28,  1324,  1282,    -1,   401,  1324,
    1434,    -1,    77,  1324,  1434,    -1,    83,  1324,  1434,    -1,
      27,  1324,  1284,    -1,   392,  1324,  1282,    -1,   392,  1324,
     124,    -1,   536,  1324,  1282,    -1,   536,  1324,   124,    -1,
     537,  1324,  1282,    -1,   537,  1324,   124,    -1,   538,  1324,
    1282,    -1,   538,  1324,   124,    -1,    63,  1324,  1282,    -1,
     563,  1324,  1282,    -1,   128,  1324,  1282,    -1,   479,  1324,
     956,    -1,    -1,   599,  1324,   951,   657,  1376,   658,    -1,
     952,    -1,   953,    -1,   241,  1324,   957,    -1,   110,   135,
    1324,  1434,    -1,   234,   135,  1324,  1434,    -1,   560,  1324,
    1437,    -1,   543,   138,    -1,   543,   329,    -1,    86,  1324,
    1434,    -1,   260,  1324,  1282,    -1,  1014,  1004,  1324,  1006,
      -1,  1014,    71,  1324,  1013,    -1,  1439,    -1,  1439,    -1,
     124,    -1,   186,    -1,   147,    -1,    82,    -1,   437,    -1,
      80,    -1,   366,    -1,   185,    -1,   264,    -1,   546,    -1,
     432,    -1,   122,    -1,   245,    -1,   960,    -1,   961,    -1,
     960,   659,   961,    -1,   962,    -1,   963,    -1,   968,   964,
      -1,   968,  1031,    -1,  1037,  1061,  1046,   657,  1059,   658,
    1047,    -1,  1043,  1040,  1061,  1045,   657,  1059,   658,  1048,
      -1,  1044,  1040,  1061,  1045,   657,  1059,   658,  1049,    -1,
     966,  1038,  1061,  1046,   657,  1059,   658,  1047,    -1,   966,
     192,   261,  1061,   657,  1059,   658,  1031,    -1,   966,   965,
      -1,    -1,   965,    -1,    64,   657,  1196,   658,    -1,    -1,
     967,    -1,    88,  1061,    -1,    -1,  1427,   969,   970,    -1,
     978,   998,    -1,   978,  1012,   971,    21,   657,   977,   658,
     975,   972,    -1,    -1,   202,    15,    -1,    -1,   973,    -1,
     973,   974,    -1,   974,    -1,   600,    -1,   600,   261,    -1,
      77,  1434,    -1,  1202,   369,    -1,  1030,   261,    -1,    -1,
     625,    -1,   544,    -1,   396,   657,   977,   658,    -1,  1196,
      -1,   986,   996,   992,    -1,   987,   997,   992,    -1,   188,
     988,   992,    -1,    40,    -1,    40,   995,    -1,    45,    -1,
      44,    -1,   982,   995,  1017,    -1,   982,  1017,    -1,   983,
     995,  1018,    -1,   983,  1018,    -1,    35,   995,    -1,    35,
      -1,   984,   995,  1017,    -1,   985,   995,  1018,    -1,   618,
     995,    -1,   646,   996,   992,    -1,   114,    -1,   575,   990,
      -1,   572,   990,    -1,   111,   990,    -1,   576,    -1,    42,
     996,    -1,   981,    -1,   325,    -1,   286,    -1,   289,   618,
      -1,   289,   984,  1017,    -1,   578,  1017,    -1,   569,   996,
    1017,    -1,   327,  1017,    -1,   287,  1017,    -1,   122,   988,
     992,    -1,   372,   988,   992,    -1,   186,   988,   992,    -1,
      -1,   158,   979,   657,  1063,   658,  1017,    -1,    -1,   497,
     980,   657,  1063,   658,  1017,    -1,   289,  1017,    -1,   493,
      -1,   258,    -1,   205,    -1,   204,    -1,   406,    -1,   345,
      -1,   277,    -1,   344,    -1,   407,    -1,   346,    -1,    62,
      -1,   354,    -1,   351,    62,    -1,   982,   622,    -1,   619,
      -1,   351,   619,    -1,   373,    -1,   354,   619,    -1,   351,
      62,   622,    -1,   354,   622,    -1,   245,    -1,   577,    -1,
     509,    -1,   326,    -1,    34,    -1,   432,    -1,   141,    -1,
     141,   411,    -1,    -1,   995,    -1,   989,    -1,   657,   370,
     659,   370,   658,    -1,    -1,   657,   370,   658,    -1,    -1,
     657,   658,    -1,   657,   370,   658,    -1,    -1,   993,    -1,
     993,   994,    -1,   994,    -1,   505,    -1,   603,    -1,   647,
      -1,   657,   288,   658,    -1,   657,   590,   658,    -1,   657,
     121,   658,    -1,   657,   370,   658,    -1,    -1,   995,    -1,
      -1,   989,    -1,    -1,   999,    -1,   999,  1000,    -1,  1000,
      -1,   369,    -1,  1202,   369,    -1,   124,  1003,    -1,   375,
     605,  1002,    -1,    27,    -1,   493,   124,   617,    -1,  1030,
     261,    -1,   600,    -1,   600,   261,    -1,    77,  1434,    -1,
      71,  1010,    -1,    75,   124,    -1,    75,   186,    -1,    75,
     147,    -1,   543,   124,    -1,   543,   138,    -1,   543,   329,
      -1,   978,  1011,    -1,   365,   991,    -1,  1002,    -1,  1417,
      -1,    62,   497,    -1,    61,    -1,  1439,    -1,    35,    -1,
    1005,    -1,   124,    -1,    -1,  1004,  1006,    -1,  1439,    -1,
      35,    -1,  1008,    -1,   124,    -1,  1439,    -1,    -1,    71,
    1013,    -1,    -1,    71,  1010,    -1,  1010,    -1,   124,    -1,
      -1,   124,    -1,    23,    -1,    35,    23,    -1,    23,    35,
      -1,   597,    -1,   597,    35,    -1,    35,   597,    -1,    -1,
    1015,    -1,  1016,    -1,    49,    -1,  1004,  1005,  1018,    -1,
      35,    -1,    35,  1004,  1005,    -1,    -1,    35,    -1,    -1,
     657,  1283,  1020,   658,    -1,    22,    -1,   130,    -1,   472,
      -1,    -1,  1021,    -1,  1021,  1022,    -1,  1022,    -1,  1283,
      -1,  1024,  1023,    -1,  1025,    -1,  1026,   659,  1025,    -1,
    1024,   650,  1024,    -1,  1026,    -1,  1027,    -1,    -1,   271,
    1028,    -1,    -1,   415,    -1,   438,  1428,  1032,  1034,  1035,
      -1,    -1,   657,  1033,   658,    -1,  1033,   659,  1437,    -1,
    1437,    -1,    -1,   316,   197,    -1,   316,   397,    -1,   316,
     506,    -1,    -1,   375,   605,  1036,    -1,   375,   129,  1036,
      -1,   375,   605,  1036,   375,   129,  1036,    -1,   375,   129,
    1036,   375,   605,  1036,    -1,   467,    -1,    52,    -1,   497,
     369,    -1,   366,     6,    -1,   497,   124,    -1,  1039,    -1,
     415,   261,    -1,   600,  1040,    -1,   261,    -1,   234,    -1,
      -1,  1039,    -1,   259,    -1,   234,    -1,   233,    -1,    -1,
     600,    -1,   198,    -1,   515,    -1,    -1,  1045,    -1,  1045,
    1053,    -1,    -1,  1050,    -1,    -1,  1052,    -1,    -1,  1051,
      -1,  1055,    -1,  1050,  1055,    -1,  1056,    -1,  1051,  1056,
      -1,  1057,    -1,  1052,  1057,    -1,   611,  1058,    -1,   588,
    1058,    -1,   260,  1324,  1282,    -1,    77,  1434,    -1,  1054,
      -1,  1053,    -1,  1054,    -1,  1054,    -1,   633,   395,  1431,
      -1,    47,    -1,   482,    -1,   215,    -1,  1059,   659,  1060,
    1276,    -1,  1060,  1276,    -1,  1437,    -1,  1437,   657,   370,
     658,    -1,    -1,  1427,    -1,    -1,   665,  1437,    -1,  1415,
      -1,  1063,   659,  1415,    -1,    -1,    14,   562,  1428,  1065,
    1085,    -1,    -1,    14,   107,  1084,  1066,   941,    -1,    14,
     107,  1437,   606,   110,   135,   350,    -1,    -1,    14,   417,
     733,  1067,   734,    -1,    -1,    14,   199,   733,  1068,   734,
      -1,    -1,    14,  1542,  1537,  1069,  1544,    -1,    -1,    14,
    1537,  1070,  1544,    -1,    -1,    14,  1537,   166,   733,  1071,
    1081,  1082,   722,   727,  1083,    -1,    14,   560,   845,    -1,
      14,   284,   211,   847,    -1,    14,   560,   842,    -1,    14,
     560,   841,    -1,    14,   495,  1439,   381,   657,   716,   658,
      -1,  1072,  1500,  1505,  1077,  1073,    -1,  1072,  1080,   227,
      48,   568,    -1,    14,   608,  1306,   731,    -1,    -1,  1074,
      -1,  1075,    -1,  1074,  1075,    -1,     5,   602,    -1,     5,
     283,    -1,  1076,    -1,  1076,   243,  1283,   119,    -1,  1076,
     358,    -1,  1076,   124,    -1,   401,   173,   732,    -1,    -1,
     633,  1078,    -1,  1078,  1079,    -1,  1079,    -1,   318,  1282,
      -1,   322,  1282,    -1,   317,  1282,    -1,   323,  1282,    -1,
     608,   657,   658,    -1,    -1,   375,   484,   720,    -1,   726,
      -1,   375,   484,   720,   726,    -1,    -1,   448,   579,   733,
      -1,    -1,   142,   728,    -1,    -1,  1437,    -1,    -1,   137,
     560,    -1,   232,   560,    -1,  1102,   890,    -1,  1102,  1091,
      -1,  1091,    -1,   891,    -1,  1093,    -1,   143,   398,  1100,
      -1,   433,   398,  1153,  1092,    -1,    -1,   379,   398,  1153,
    1092,  1086,  1153,    -1,    17,   398,  1153,  1092,    -1,    -1,
      64,   398,  1092,  1087,  1148,    -1,    -1,   450,   398,  1153,
    1092,  1088,  1140,    -1,    69,   398,  1153,  1283,    -1,   586,
     398,  1092,    -1,  1096,    -1,   168,   398,  1101,   633,   562,
    1428,  1089,    -1,   137,   398,  1092,   560,    -1,   232,   398,
    1092,   560,    -1,    -1,  1090,    -1,   633,   615,    -1,   636,
     615,    -1,   447,   400,    -1,    13,    -1,  1100,    -1,    -1,
       7,   398,  1153,  1094,  1095,    -1,    -1,   657,   915,   658,
      -1,   399,  1283,    -1,    -1,   449,   398,  1153,  1097,  1098,
      -1,    -1,    -1,  1100,  1099,   244,   657,   915,   658,    -1,
    1101,    -1,  1100,   659,  1101,    -1,  1437,    -1,  1104,    -1,
    1102,   659,  1104,    -1,     7,  1111,    -1,  1103,   962,  1114,
      -1,     7,   963,    -1,  1103,   657,   959,   658,    -1,    -1,
      58,  1111,  1427,  1105,   968,  1114,    -1,    -1,    -1,   341,
    1111,  1427,  1106,   970,  1107,  1114,    -1,   143,  1111,  1427,
    1113,    -1,   143,   192,   261,  1427,    -1,   143,   415,   261,
      -1,   143,  1039,  1427,    -1,   136,   259,    -1,   151,   259,
      -1,    14,  1111,  1427,   497,   124,  1417,    -1,    14,  1111,
    1427,   143,   124,    -1,   448,  1115,  1428,    -1,   448,  1039,
    1427,   579,  1427,    -1,    95,   579,  1004,  1006,  1011,    -1,
     948,    -1,   191,    -1,  1270,    -1,  1109,    -1,  1110,    -1,
     606,   400,    -1,  1090,    -1,    -1,  1110,    -1,  1109,    -1,
    1110,  1109,    -1,  1109,  1110,    -1,    12,  1324,   124,    -1,
      12,  1324,  1437,    -1,   283,  1324,   124,    -1,   283,  1324,
    1437,    -1,    -1,    74,    -1,    -1,   230,    -1,    -1,   467,
      -1,    52,    -1,    -1,     9,  1437,    -1,   185,    -1,    -1,
     579,    -1,   159,    -1,    21,    -1,   535,   203,    -1,   542,
     203,    -1,  1118,  1119,    -1,   542,   507,  1130,   705,    -1,
     535,   507,  1130,    -1,    -1,  1133,  1125,  1120,   705,    -1,
     535,   581,  1122,    -1,    -1,  1123,    -1,  1124,    -1,  1123,
     659,  1124,    -1,   633,    87,   510,    -1,   430,   377,    -1,
     430,   639,    -1,  1126,  1127,  1128,  1129,    -1,    -1,   608,
     159,  1434,    -1,    -1,   401,   159,  1434,    -1,    -1,   125,
     159,  1434,    -1,    -1,   403,   159,  1434,    -1,    -1,  1131,
      -1,  1132,    -1,  1131,   659,  1132,    -1,   530,    -1,   444,
      -1,    -1,   604,  1134,    -1,   704,    -1,  1134,   659,   704,
      -1,   522,   159,  1434,    -1,   520,   159,  1434,    -1,   521,
      -1,    -1,    63,  1466,  1136,  1303,  1137,    -1,    -1,   426,
      -1,   175,    -1,    -1,   450,  1153,  1466,  1139,  1303,  1140,
      -1,    -1,  1141,    -1,  1142,    -1,  1142,  1141,    -1,   426,
      -1,   175,    -1,   609,    -1,    -1,    17,  1153,  1466,  1144,
    1303,    -1,    36,  1434,    -1,    -1,    64,  1466,  1147,  1303,
    1148,    -1,    -1,  1149,    -1,  1150,    -1,  1150,  1149,    -1,
     426,    -1,   179,    -1,   328,    -1,   175,    -1,    59,    -1,
     193,   606,    -1,    -1,   379,  1153,  1466,  1152,  1303,    -1,
      -1,   368,    -1,   280,    -1,    -1,   448,  1466,  1155,  1157,
      -1,   448,   608,   731,  1156,    -1,  1440,   579,  1440,    -1,
    1156,   659,  1440,   579,  1440,    -1,  1158,    -1,  1157,   659,
    1158,    -1,  1428,   579,  1428,    -1,    -1,    50,   234,  1160,
    1161,   247,  1165,    -1,  1162,    -1,  1164,    -1,  1163,    -1,
    1162,   659,  1163,    -1,  1428,  1174,    -1,  1428,  1172,  1174,
      -1,  1437,    -1,   124,    -1,    -1,   279,   234,   244,    50,
    1167,  1168,    -1,  1171,    -1,  1169,    -1,  1170,    -1,  1169,
     659,  1170,    -1,  1428,  1174,  1176,    -1,  1428,  1172,  1174,
    1176,    -1,    -1,   398,  1173,   657,  1092,   658,    -1,  1175,
      -1,    -1,  1039,   657,  1254,   658,    -1,    -1,   230,   267,
      -1,  1178,    -1,   489,  1181,  1520,    -1,   657,  1179,   658,
    1522,    -1,   489,  1181,    -1,   657,  1179,   658,    -1,   489,
    1244,  1184,    -1,   657,  1180,   658,    -1,  1182,  1273,  1277,
    1191,    -1,  1182,  1294,  1191,    -1,  1182,  1293,  1185,  1264,
    1267,  1265,  1273,  1277,  1288,  1293,  1191,    -1,    -1,  1183,
    1188,  1192,    -1,  1186,  1264,  1267,  1265,  1273,  1277,  1288,
    1191,    -1,   196,  1187,    -1,    -1,  1185,    -1,  1235,    -1,
     144,    -1,    -1,  1189,    -1,  1189,  1190,    -1,  1190,    -1,
    1533,    -1,   527,    -1,   525,    -1,    -1,   193,   605,    -1,
     283,   247,   499,   339,    -1,  1192,   659,  1193,    -1,  1193,
      -1,   652,    -1,  1422,    -1,  1196,  1194,    -1,    -1,    21,
    1437,    -1,    21,  1434,    -1,  1437,    -1,  1434,    -1,    -1,
     657,   658,    -1,  1196,  1200,  1196,    -1,  1196,   644,  1196,
      -1,  1196,  1201,  1196,    -1,   364,  1196,    -1,  1197,   252,
     585,    -1,  1197,   252,  1202,   585,    -1,  1197,   252,   178,
      -1,  1197,   252,  1202,   178,    -1,  1197,   252,   601,    -1,
    1197,   252,  1202,   601,    -1,  1197,    -1,  1197,   252,   369,
      -1,  1197,   252,  1202,   369,    -1,  1197,  1204,  1198,    -1,
    1197,  1204,  1205,   657,  1529,   658,    -1,  1198,    -1,  1199,
     247,   657,  1529,   658,    -1,  1199,  1202,   247,   657,  1529,
     658,    -1,  1199,   247,   657,  1196,   658,    -1,  1199,   247,
     657,  1196,   659,  1228,   658,    -1,  1199,  1202,   247,   657,
    1196,   658,    -1,  1199,  1202,   247,   657,  1196,   659,  1228,
     658,    -1,  1199,    33,  1199,    19,  1198,    -1,  1199,  1202,
      33,  1199,    19,  1198,    -1,  1199,   513,   273,  1199,    -1,
    1199,   273,  1206,  1266,    -1,  1199,  1202,   273,  1206,  1266,
      -1,  1199,   439,  1199,    -1,  1199,  1202,   439,  1199,    -1,
    1199,    -1,  1199,   648,  1199,    -1,  1199,   649,  1199,    -1,
    1199,   500,  1199,    -1,  1199,   501,  1199,    -1,  1199,   651,
    1199,    -1,  1199,   650,  1199,    -1,  1199,   651,   243,  1196,
    1258,    -1,  1199,   650,   243,  1196,  1258,    -1,  1199,   652,
    1199,    -1,  1199,   653,  1199,    -1,  1199,   654,  1199,    -1,
    1199,   140,  1199,    -1,  1199,   342,  1199,    -1,  1199,   655,
    1199,    -1,  1206,    -1,   387,    -1,   384,    -1,    19,    -1,
      18,    -1,   364,    -1,   363,    -1,   660,    -1,   363,    -1,
     159,    -1,   160,    -1,   200,    -1,   213,    -1,   265,    -1,
     292,    -1,   356,    -1,    13,    -1,    20,    -1,  1424,    -1,
    1207,    -1,  1208,    -1,  1211,    -1,  1209,    -1,  1206,    71,
    1439,    -1,  1418,    -1,  1416,    -1,  1219,    -1,  1218,    -1,
    1206,   386,  1206,    -1,   651,  1206,    -1,   650,  1206,    -1,
     656,  1206,    -1,  1203,  1206,    -1,   657,  1529,   658,    -1,
     657,  1196,   658,    -1,   657,  1196,   659,  1228,   658,    -1,
     480,   657,  1196,   659,  1228,   658,    -1,   170,   657,  1529,
     658,    -1,   661,  1437,  1196,   662,    -1,   316,  1229,    10,
     657,  1199,  1212,   658,    -1,    35,  1206,    -1,    55,   657,
    1196,    21,  1226,   658,    -1,    54,  1231,  1233,  1232,   153,
      -1,    95,   657,  1196,   659,  1226,   658,    -1,    95,   657,
    1196,   611,  1005,   658,    -1,   124,   657,  1424,   658,    -1,
     616,   657,  1425,   658,    -1,   243,  1196,  1258,   651,  1196,
      -1,  1424,   257,  1435,    -1,    62,   657,  1228,   658,    -1,
      62,   657,  1228,   611,  1005,   658,    -1,   103,  1195,    -1,
     114,   657,  1196,   658,    -1,   119,   657,  1196,   658,    -1,
     225,   657,  1196,   658,    -1,   240,   657,  1196,   659,  1196,
     659,  1196,   659,  1196,   658,    -1,   243,   657,  1196,   659,
    1196,   658,    -1,   243,   657,  1196,   659,  1196,   659,  1228,
     658,    -1,   269,   657,  1196,   659,  1196,   658,    -1,   336,
     657,  1196,   658,    -1,   343,   657,  1196,   658,    -1,   474,
     657,  1196,   659,  1196,   658,    -1,   487,   657,  1196,   658,
      -1,   575,   657,  1196,   658,    -1,   572,   657,  1196,   658,
      -1,   572,   657,  1196,   659,  1196,   658,    -1,   584,   657,
    1196,   658,    -1,   584,   657,   266,  1196,   196,  1196,   658,
      -1,   584,   657,   580,  1196,   196,  1196,   658,    -1,   584,
     657,    46,  1196,   196,  1196,   658,    -1,   584,   657,   266,
     196,  1196,   658,    -1,   584,   657,   580,   196,  1196,   658,
      -1,   584,   657,    46,   196,  1196,   658,    -1,   584,   657,
    1196,   196,  1196,   658,    -1,   608,   657,   658,    -1,   646,
     657,  1196,   658,    -1,     8,   657,  1196,   659,  1196,   658,
      -1,     8,   657,  1196,   659,   243,  1196,  1258,   658,    -1,
     101,  1195,    -1,   106,   991,    -1,   112,   657,  1196,   659,
     243,  1196,  1258,   658,    -1,   113,   657,  1196,   659,   243,
    1196,  1258,   658,    -1,   177,   657,  1258,   196,  1196,   658,
      -1,   206,   657,  1260,   659,  1196,   658,    -1,  1002,    -1,
     409,   657,  1199,   247,  1196,   658,    -1,   548,   657,  1196,
     659,  1196,   658,    -1,   548,   657,  1196,   659,   243,  1196,
    1258,   658,    -1,   552,   657,  1196,   659,  1196,   659,  1196,
     658,    -1,   552,   657,  1196,   659,  1196,   658,    -1,   552,
     657,  1196,   196,  1196,   193,  1196,   658,    -1,   552,   657,
    1196,   196,  1196,   658,    -1,   558,   991,    -1,   573,   657,
    1259,   659,  1196,   659,  1196,   658,    -1,   574,   657,  1259,
     659,  1196,   659,  1196,   658,    -1,   612,  1195,    -1,   614,
     991,    -1,   613,   991,    -1,    23,   657,  1196,   658,    -1,
      61,   657,  1196,   658,    -1,    69,   657,  1228,   658,    -1,
      72,   657,  1196,   658,    -1,   107,   657,   658,    -1,   229,
     657,  1196,   659,  1196,   659,  1196,   658,    -1,   194,   657,
    1196,   659,  1196,   658,    -1,   194,   657,  1196,   659,  1196,
     659,  1196,   658,    -1,   332,   657,  1196,   658,    -1,   342,
     657,  1196,   659,  1196,   658,    -1,   401,   657,  1196,   658,
      -1,   424,   657,  1196,   658,    -1,   452,   657,  1196,   659,
    1196,   658,    -1,   453,   657,  1196,   659,  1196,   659,  1196,
     658,    -1,   472,   657,  1196,   658,    -1,   481,   657,   658,
      -1,   586,   657,  1196,   659,  1196,   658,    -1,   628,   657,
    1196,   658,    -1,   628,   657,  1196,   659,  1196,   658,    -1,
     629,   657,  1196,  1029,   658,    -1,   629,   657,  1196,    21,
      62,  1019,  1029,   658,    -1,   629,   657,  1196,    21,    35,
    1019,   658,    -1,   629,   657,  1196,   659,  1282,   659,  1282,
     659,  1282,   658,    -1,  1210,    -1,    92,   657,  1196,   659,
    1196,   658,    -1,   204,   657,  1227,   658,    -1,   277,   657,
    1228,   658,    -1,   344,   657,  1228,   658,    -1,   345,   657,
    1228,   658,    -1,   346,   657,  1228,   658,    -1,   406,   657,
    1196,   659,  1196,   658,    -1,   407,   657,  1228,   658,    -1,
    1431,   657,  1215,   658,    -1,  1437,   665,  1437,   657,  1227,
     658,    -1,  1213,  1214,    -1,   247,    44,   339,    -1,    -1,
     247,   352,   263,   339,    -1,    -1,   633,   425,   172,    -1,
      -1,  1216,    -1,  1217,    -1,  1216,   659,  1217,    -1,  1196,
    1194,    -1,    29,   657,  1225,   658,    -1,    29,   657,   139,
    1225,   658,    -1,    38,   657,  1225,   658,    -1,    39,   657,
    1225,   658,    -1,    41,   657,  1225,   658,    -1,    96,   657,
    1263,   652,   658,    -1,    96,   657,  1225,   658,    -1,    96,
     657,   139,  1228,   658,    -1,   338,   657,  1225,   658,    -1,
     338,   657,   139,  1225,   658,    -1,   321,   657,  1225,   658,
      -1,   321,   657,   139,  1225,   658,    -1,   541,   657,  1225,
     658,    -1,   621,   657,  1225,   658,    -1,   540,   657,  1225,
     658,    -1,   623,   657,  1225,   658,    -1,   553,   657,  1225,
     658,    -1,   553,   657,   139,  1225,   658,    -1,   212,   657,
    1221,  1228,  1223,  1222,   658,    -1,   664,  1220,    -1,  1439,
     498,  1196,    -1,  1439,    -1,   664,  1451,  1439,  1062,    -1,
      -1,   139,    -1,    -1,   491,  1415,    -1,    -1,   385,    48,
    1224,    -1,  1224,   659,  1423,    -1,  1423,    -1,  1263,  1196,
      -1,    35,   996,    -1,    62,   996,  1017,    -1,   354,   996,
      -1,   505,    -1,   505,   245,    -1,   603,    -1,   603,   245,
      -1,   114,    -1,   575,   990,    -1,   111,   990,    -1,   122,
     988,    -1,   258,    -1,    -1,  1228,    -1,  1196,    -1,  1228,
     659,  1196,    -1,  1230,    -1,   657,  1230,   658,    -1,  1424,
      -1,  1230,   659,  1424,    -1,    -1,  1196,    -1,    -1,   149,
    1196,    -1,   630,  1196,   571,  1196,    -1,  1233,   630,  1196,
     571,  1196,    -1,  1242,    -1,  1238,    -1,  1237,    -1,  1234,
      -1,   661,  1437,  1234,   662,    -1,  1236,    -1,  1237,   659,
    1236,    -1,  1234,  1239,  1234,    -1,  1234,   545,  1242,    -1,
    1234,  1239,  1234,   375,  1196,    -1,  1234,   545,  1242,   375,
    1196,    -1,  1234,  1239,  1234,   611,   657,  1257,   658,    -1,
    1234,   352,   256,  1242,    -1,  1234,   269,  1247,   256,  1234,
     375,  1196,    -1,  1234,   269,  1247,   256,  1242,   611,   657,
    1257,   658,    -1,  1234,   352,   269,  1247,   256,  1242,    -1,
    1234,   474,  1247,   256,  1234,   375,  1196,    -1,  1234,   474,
    1247,   256,  1242,   611,   657,  1257,   658,    -1,  1234,   352,
     474,  1247,   256,  1242,    -1,   256,    -1,   237,   256,    -1,
      99,   256,    -1,    -1,  1241,    -1,   398,   657,  1257,   658,
      -1,  1428,  1240,  1262,  1253,    -1,   489,  1188,  1192,  1184,
      -1,   657,  1243,   658,  1262,    -1,  1246,  1523,    -1,  1243,
     599,  1526,  1527,    -1,    -1,  1245,  1531,  1192,    -1,  1237,
      -1,    -1,   388,    -1,    -1,   193,   256,    -1,   193,   385,
      48,    -1,   193,   211,    48,    -1,   191,    -1,   230,    -1,
    1249,  1039,  1248,   657,  1256,   658,    -1,   610,  1039,  1248,
     657,  1254,   658,    -1,  1250,    -1,  1251,  1250,    -1,    -1,
    1251,    -1,  1252,    -1,    -1,  1256,    -1,  1437,    -1,   415,
      -1,  1255,    -1,  1256,   659,  1255,    -1,  1437,    -1,  1257,
     659,  1437,    -1,  1259,    -1,   115,    -1,   116,    -1,   117,
      -1,   118,    -1,   222,    -1,   223,    -1,   224,    -1,   334,
      -1,   335,    -1,   486,    -1,   645,    -1,   119,    -1,   628,
      -1,   225,    -1,   336,    -1,   343,    -1,   424,    -1,   487,
      -1,   332,    -1,   646,    -1,   114,    -1,   575,    -1,   572,
      -1,   111,    -1,    -1,    21,    -1,   159,    -1,    -1,  1261,
    1437,    -1,    -1,    13,    -1,    -1,   631,  1196,    -1,    -1,
     216,  1196,    -1,   164,  1206,    -1,    -1,    -1,   211,    48,
    1268,  1269,    -1,  1268,   659,  1423,    -1,  1423,    -1,    -1,
     634,    -1,   635,    -1,   385,    48,  1271,    -1,  1271,   659,
    1272,    -1,  1272,    -1,  1425,  1276,    -1,    -1,  1274,    -1,
     385,    48,  1275,    -1,  1275,   659,  1423,    -1,  1423,    -1,
      -1,    22,    -1,   130,    -1,    -1,  1278,    -1,   274,  1279,
      -1,  1280,    -1,  1280,   659,  1280,    -1,  1280,   374,  1280,
      -1,  1437,    -1,  1416,    -1,   590,    -1,   288,    -1,   370,
      -1,    -1,   274,  1280,    -1,   370,    -1,   218,    -1,   288,
      -1,   590,    -1,   121,    -1,   187,    -1,   370,    -1,   218,
      -1,   288,    -1,   590,    -1,  1286,    -1,   370,    -1,   590,
      -1,   288,    -1,   121,    -1,   187,    -1,   370,    -1,   590,
      -1,   288,    -1,  1286,    -1,  1287,    -1,   121,    -1,   187,
      -1,    -1,   417,    16,   657,  1289,   658,    -1,    -1,  1290,
      -1,  1290,   659,  1290,    -1,   370,    -1,  1291,   659,  1292,
      -1,  1292,    -1,   664,  1439,    -1,  1439,    -1,    -1,  1294,
      -1,   244,  1295,    -1,   389,  1436,  1007,  1399,  1402,    -1,
     145,  1436,    -1,  1291,    -1,   142,  1297,  1192,    -1,    -1,
      -1,   143,  1307,  1466,  1306,  1299,  1303,  1113,    -1,    -1,
      -1,   143,   234,  1437,   375,  1428,  1300,  1301,  1108,    -1,
     143,   107,  1306,  1437,    -1,   143,   199,  1306,  1437,   665,
    1437,    -1,   143,   199,  1306,  1437,    -1,   143,   417,  1306,
     733,    -1,   143,   608,  1306,   731,  1499,    -1,    -1,   143,
     624,  1306,  1302,  1303,  1113,    -1,   143,   166,  1306,   733,
      -1,   143,   583,  1306,   733,    -1,   143,   560,   868,  1308,
      -1,   143,   284,   211,   869,  1308,    -1,   143,   495,  1306,
    1439,    -1,  1304,    -1,  1303,   659,  1304,    -1,  1428,    -1,
    1429,    -1,  1305,   659,  1429,    -1,    -1,   229,   170,    -1,
      -1,   565,    -1,    -1,  1309,    -1,  1310,    -1,  1309,  1310,
      -1,  1308,   659,  1310,    -1,   879,    -1,   881,    -1,   240,
    1313,  1112,  1315,  1428,  1240,  1316,  1329,    -1,   240,  1313,
    1112,  1315,  1428,  1240,   497,  1331,  1329,    -1,   240,  1313,
    1112,  1315,  1428,  1240,  1317,  1329,    -1,   453,  1314,  1315,
    1428,  1240,  1316,    -1,   453,  1314,  1315,  1428,  1240,   497,
    1331,    -1,   453,  1314,  1315,  1428,  1240,  1317,    -1,    -1,
     291,    -1,   127,    -1,   219,    -1,  1333,    -1,   127,    -1,
      -1,   244,    -1,  1319,    -1,   657,   658,  1319,    -1,   657,
    1318,   658,  1319,    -1,  1320,    -1,   657,   658,  1320,    -1,
     657,  1318,   658,  1320,    -1,  1318,   659,  1421,    -1,  1421,
      -1,  1321,  1322,    -1,   938,  1520,    -1,   657,   938,   658,
    1522,    -1,   617,    -1,   616,    -1,  1322,   659,  1325,    -1,
    1325,    -1,   159,    -1,   498,    -1,    -1,  1323,    -1,   657,
    1326,   658,    -1,    -1,  1327,    -1,  1327,   659,  1328,    -1,
    1328,    -1,  1196,    -1,   124,    -1,    -1,   375,   146,   261,
     605,  1331,    -1,   605,  1333,  1112,  1235,   497,  1331,  1264,
    1273,  1281,    -1,  1331,   659,  1332,    -1,  1332,    -1,  1425,
    1323,  1328,    -1,    -1,   291,    -1,   129,  1336,   196,  1428,
    1240,  1264,  1273,  1281,    -1,   129,  1336,  1305,   196,  1235,
    1264,    -1,   129,  1336,   196,  1305,   611,  1235,  1264,    -1,
      -1,   665,   652,    -1,    -1,  1337,  1336,    -1,   426,    -1,
     291,    -1,   230,    -1,    -1,   586,  1340,  1339,  1304,    -1,
      -1,   562,    -1,    -1,  1342,    -1,  1343,    -1,  1342,   659,
    1343,    -1,    97,    -1,   329,    -1,    43,   250,    -1,    93,
     557,    -1,   393,   180,    -1,   251,    -1,   556,    -1,   514,
      -1,    13,    -1,    -1,   193,   425,   370,    -1,    -1,   502,
    1346,  1347,    -1,   108,  1358,    -1,  1354,   559,  1353,  1358,
      -1,  1354,   582,  1353,  1358,    -1,   165,  1353,  1358,    -1,
     562,   539,  1353,  1358,    -1,   378,   559,  1353,  1358,    -1,
     405,    -1,   157,   955,  1350,    -1,   157,    13,  1350,    -1,
    1354,    73,  1355,  1428,  1353,  1358,    -1,  1351,   285,    -1,
     507,   221,    -1,    -1,    36,   165,  1356,  1357,  1348,  1277,
      -1,    -1,   441,   165,  1356,  1357,  1349,  1277,   705,    -1,
    1041,  1355,  1428,  1353,  1264,    -1,  1352,   156,    -1,   416,
      -1,    96,   657,   652,   658,   627,    -1,    96,   657,   652,
     658,   162,    -1,   627,  1277,    -1,   162,  1277,    -1,   421,
      -1,   420,  1341,  1344,  1277,    -1,  1450,   539,  1359,    -1,
    1354,   419,    -1,  1450,   620,  1359,    -1,  1004,  1358,    -1,
      72,  1358,    -1,   210,    -1,   210,   193,  1440,    -1,    98,
     107,   946,  1437,    -1,    98,   562,  1428,    -1,    98,   624,
    1428,    -1,   313,   539,    -1,   507,   539,   705,    -1,    98,
     417,   733,    -1,    98,   199,   733,    -1,    98,   583,   733,
      -1,   417,   539,  1358,    -1,   199,   539,  1358,    -1,   417,
      70,   733,    -1,   199,    70,   733,    -1,    98,   166,   733,
      -1,    98,   608,   731,  1440,    -1,   539,    -1,   347,    -1,
     285,    -1,   313,    -1,    35,    -1,    -1,   543,    -1,    -1,
    1355,  1437,    -1,    -1,   197,    -1,   196,    -1,   247,    -1,
      -1,   247,  1434,    -1,    -1,   196,  1284,    -1,    -1,   273,
    1434,    -1,   631,  1196,    -1,    -1,   273,  1434,    -1,   631,
    1196,    -1,    -1,  1364,  1428,  1361,  1366,    -1,    -1,  1364,
    1365,  1362,  1363,    -1,  1177,    -1,  1311,    -1,  1312,    -1,
    1330,    -1,  1334,    -1,   193,    86,  1283,    -1,   130,    -1,
     131,    -1,    -1,   175,    -1,   399,    -1,   194,   159,  1439,
      -1,    -1,  1415,    -1,  1437,    -1,    -1,   189,  1153,  1368,
    1369,    -1,    -1,    -1,  1466,  1370,  1376,  1371,  1372,    -1,
    1374,    -1,    -1,   633,   430,   283,    -1,    -1,   193,  1373,
     174,    -1,  1374,   659,  1375,    -1,  1375,    -1,   161,   285,
      -1,   157,   285,    -1,   201,   285,    -1,   508,   285,    -1,
      35,   285,    -1,   440,   285,   705,    -1,   425,    50,    -1,
     221,    -1,   416,    -1,   285,    -1,   539,    -1,   132,    -1,
     465,    -1,   380,    -1,    -1,  1303,    -1,    -1,   463,  1378,
    1379,    -1,  1379,   659,  1380,    -1,  1380,    -1,    -1,   507,
    1381,  1382,   705,    -1,   313,    -1,   425,    50,    -1,    -1,
      13,    -1,    -1,   423,  1384,  1385,    -1,  1351,   285,  1386,
      -1,   579,  1434,    -1,    31,  1196,    -1,   262,  1388,  1196,
      -1,    -1,    86,    -1,   425,    -1,   610,  1437,    -1,    -1,
      -1,    -1,    -1,   279,  1395,  1391,  1397,  1396,   235,  1436,
    1392,  1398,   244,   562,  1428,  1240,  1393,  1007,  1394,  1405,
    1399,  1402,  1406,  1408,  1411,    -1,   110,    -1,   643,    -1,
      -1,   280,    -1,    -1,    84,    -1,   291,    -1,    -1,   453,
      -1,   230,    -1,    -1,    73,  1400,    -1,  1400,  1401,    -1,
    1401,    -1,   567,    48,  1415,    -1,   383,   152,    48,  1415,
      -1,   152,    48,  1415,    -1,   163,    48,  1415,    -1,    -1,
     276,  1403,    -1,  1403,  1404,    -1,  1404,    -1,   567,    48,
    1415,    -1,   533,    48,  1415,    -1,    -1,   478,   227,    48,
    1415,    -1,    -1,   230,   370,  1407,    -1,   276,    -1,   478,
      -1,    -1,   657,  1409,   658,    -1,   657,   658,    -1,  1409,
     659,  1410,    -1,  1410,    -1,  1425,    -1,   664,  1439,    -1,
      -1,   497,  1412,    -1,  1412,   659,  1413,    -1,  1413,    -1,
    1425,  1323,  1328,    -1,   568,    -1,   353,    -1,   593,   568,
      -1,  1414,  1435,    -1,  1435,    -1,   218,    -1,    37,    -1,
     394,    -1,  1418,    -1,   651,  1419,    -1,   650,  1419,    -1,
    1414,    -1,  1419,    -1,  1420,    -1,   369,    -1,   178,    -1,
     585,    -1,   218,    -1,    37,    -1,   593,   218,    -1,   593,
      37,    -1,   370,    -1,   288,    -1,   590,    -1,   121,    -1,
     187,    -1,   114,   568,    -1,   575,   568,    -1,   572,   568,
      -1,  1425,    -1,  1422,    -1,  1437,   665,   652,    -1,  1437,
     665,  1437,   665,   652,    -1,  1196,  1276,    -1,  1437,    -1,
    1426,    -1,  1437,    -1,  1426,    -1,  1437,   665,  1437,    -1,
     665,  1437,   665,  1437,    -1,  1437,   665,  1437,   665,  1437,
      -1,  1437,    -1,  1437,   665,  1437,   665,  1437,    -1,  1437,
     665,  1437,    -1,   665,  1437,    -1,  1437,    -1,  1437,   665,
    1437,    -1,   665,  1437,    -1,  1437,  1335,    -1,  1437,   665,
    1437,  1335,    -1,  1437,    -1,   226,    -1,   228,    -1,  1434,
      -1,  1432,    -1,   568,    -1,   568,    -1,   568,    -1,  1431,
      -1,  1441,    -1,  1431,    -1,  1442,    -1,  1437,    -1,  1434,
      -1,   272,    -1,  1439,    -1,  1439,   664,  1439,    -1,   103,
    1195,    -1,  1442,    -1,     5,    -1,    23,    -1,    15,    -1,
      30,    -1,    32,    -1,    49,    -1,    50,    -1,    61,    -1,
      63,    -1,    68,    -1,    77,    -1,    79,    -1,    92,    -1,
     120,    -1,   142,    -1,   153,    -1,   169,    -1,   189,    -1,
     190,    -1,   194,    -1,   203,    -1,   214,    -1,   217,    -1,
     220,    -1,   242,    -1,   263,    -1,   366,    -1,   378,    -1,
     381,    -1,   391,    -1,   395,    -1,   396,    -1,   408,    -1,
     410,    -1,   412,    -1,   447,    -1,   450,    -1,   463,    -1,
     466,    -1,   475,    -1,   483,    -1,   488,    -1,   495,    -1,
     503,    -1,   505,    -1,   511,    -1,   507,    -1,   512,    -1,
     535,    -1,   542,    -1,   586,    -1,   597,    -1,   598,    -1,
     638,    -1,   641,    -1,   606,    -1,     6,    -1,     8,    -1,
       9,    -1,    10,    -1,    11,    -1,    12,    -1,    16,    -1,
      20,    -1,    25,    -1,    27,    -1,    26,    -1,    28,    -1,
      29,    -1,    36,    -1,    40,    -1,    43,    -1,    45,    -1,
      44,    -1,    47,    -1,    53,    -1,    56,    -1,    57,    -1,
      59,    -1,    60,    -1,    65,    -1,    67,    -1,    66,    -1,
      69,    -1,    70,    -1,    72,    -1,    76,    -1,    75,    -1,
      73,    -1,    78,    -1,    80,    -1,    81,    -1,    82,    -1,
      83,    -1,    84,    -1,    86,    -1,    87,    -1,    89,    -1,
      91,    -1,    90,    -1,    93,    -1,    97,    -1,   100,    -1,
     102,    -1,   105,    -1,   110,    -1,   109,    -1,   111,    -1,
     114,    -1,   119,    -1,   125,    -1,   126,    -1,   128,    -1,
     132,    -1,   134,    -1,   135,    -1,   136,    -1,   137,    -1,
     138,    -1,   145,    -1,   146,    -1,   147,    -1,   154,    -1,
     158,    -1,   157,    -1,   156,    -1,   161,    -1,   162,    -1,
     164,    -1,   166,    -1,   165,    -1,   167,    -1,   168,    -1,
     172,    -1,   173,    -1,   174,    -1,   175,    -1,   176,    -1,
     180,    -1,   179,    -1,   195,    -1,   151,    -1,   197,    -1,
     182,    -1,   183,    -1,   184,    -1,   185,    -1,   186,    -1,
     201,    -1,   205,    -1,   204,    -1,   206,    -1,   210,    -1,
     208,    -1,   215,    -1,   221,    -1,   225,    -1,   227,    -1,
     231,    -1,   246,    -1,   232,    -1,   233,    -1,   236,    -1,
     250,    -1,   251,    -1,   253,    -1,   254,    -1,   241,    -1,
     258,    -1,   260,    -1,   264,    -1,   267,    -1,   270,    -1,
     271,    -1,   277,    -1,   278,    -1,   280,    -1,   282,    -1,
     284,    -1,   285,    -1,   319,    -1,   313,    -1,   315,    -1,
     297,    -1,   301,    -1,   298,    -1,   299,    -1,   314,    -1,
     300,    -1,   303,    -1,   295,    -1,   302,    -1,   296,    -1,
     311,    -1,   305,    -1,   304,    -1,   306,    -1,   307,    -1,
     308,    -1,   309,    -1,   310,    -1,   293,    -1,   317,    -1,
     318,    -1,   320,    -1,   322,    -1,   323,    -1,   328,    -1,
     329,    -1,   330,    -1,   331,    -1,   332,    -1,   333,    -1,
     336,    -1,   337,    -1,   341,    -1,   339,    -1,   343,    -1,
     344,    -1,   345,    -1,   346,    -1,   347,    -1,   348,    -1,
     350,    -1,   349,    -1,   351,    -1,   354,    -1,   355,    -1,
     358,    -1,   360,    -1,   359,    -1,   367,    -1,   361,    -1,
     362,    -1,   371,    -1,   373,    -1,   374,    -1,   376,    -1,
     377,    -1,   392,    -1,   393,    -1,   397,    -1,   400,    -1,
     399,    -1,   401,    -1,   402,    -1,   403,    -1,   404,    -1,
     405,    -1,   406,    -1,   407,    -1,   413,    -1,   414,    -1,
     416,    -1,   418,    -1,   419,    -1,   420,    -1,   421,    -1,
     422,    -1,   424,    -1,   425,    -1,   426,    -1,   429,    -1,
     433,    -1,   434,    -1,   436,    -1,   435,    -1,   437,    -1,
     440,    -1,   441,    -1,   442,    -1,   443,    -1,   444,    -1,
     446,    -1,   449,    -1,   451,    -1,   454,    -1,   455,    -1,
     456,    -1,   457,    -1,   458,    -1,   459,    -1,   460,    -1,
     461,    -1,   465,    -1,   468,    -1,   469,    -1,   470,    -1,
     472,    -1,   476,    -1,   477,    -1,   478,    -1,   481,    -1,
     479,    -1,   480,    -1,   482,    -1,   484,    -1,   485,    -1,
     487,    -1,   493,    -1,   492,    -1,   494,    -1,   506,    -1,
     499,    -1,   508,    -1,   510,    -1,   513,    -1,   514,    -1,
     520,    -1,   521,    -1,   522,    -1,   525,    -1,   524,    -1,
     527,    -1,   530,    -1,   532,    -1,   534,    -1,   536,    -1,
     537,    -1,   538,    -1,   539,    -1,   543,    -1,   546,    -1,
     547,    -1,   548,    -1,   549,    -1,   551,    -1,   550,    -1,
     554,    -1,   555,    -1,   556,    -1,   557,    -1,   564,    -1,
     559,    -1,   563,    -1,   560,    -1,   565,    -1,   566,    -1,
     569,    -1,   570,    -1,   581,    -1,   582,    -1,   572,    -1,
     573,    -1,   574,    -1,   575,    -1,   587,    -1,   588,    -1,
     589,    -1,   199,    -1,   591,    -1,   592,    -1,   595,    -1,
     594,    -1,   601,    -1,   604,    -1,   608,    -1,   609,    -1,
     615,    -1,   620,    -1,   624,    -1,   617,    -1,   627,    -1,
     626,    -1,   628,    -1,   636,    -1,   637,    -1,   629,    -1,
     640,    -1,   642,    -1,   643,    -1,   646,    -1,   497,  1444,
      -1,  1453,  1446,    -1,   581,  1455,    -1,  1449,  1445,    -1,
     401,  1323,  1462,    -1,   401,  1323,   401,   657,  1462,   658,
      -1,   401,   193,  1440,  1323,  1462,    -1,   401,   193,  1440,
    1323,   401,   657,  1462,   658,    -1,  1452,  1446,    -1,   581,
    1455,    -1,    -1,   659,  1447,    -1,  1448,    -1,  1447,   659,
    1448,    -1,  1449,  1452,    -1,  1453,    -1,   208,    -1,   280,
      -1,   494,    -1,    -1,   208,    -1,   280,    -1,   494,    -1,
      -1,   208,   665,    -1,   280,   665,    -1,   494,   665,    -1,
    1454,  1323,  1463,    -1,  1454,  1323,  1463,    -1,   664,  1439,
    1323,  1196,    -1,   664,   664,  1451,  1454,  1323,  1463,    -1,
    1004,  1009,    -1,   349,  1323,  1196,    -1,   349,  1006,  1011,
      -1,  1437,    -1,  1437,   665,  1437,    -1,   124,   665,  1437,
      -1,  1456,  1459,    -1,  1458,  1457,    -1,  1460,    -1,    -1,
     659,  1456,    -1,   253,   271,  1461,    -1,    -1,   659,  1458,
      -1,   430,   377,    -1,   430,   639,    -1,   430,   591,    -1,
     430,    78,    -1,   451,   430,    -1,   492,    -1,   568,    -1,
    1196,    -1,   124,    -1,   375,    -1,    13,    -1,    35,    -1,
      -1,   283,  1466,  1465,  1467,    -1,   562,    -1,   559,    -1,
    1468,    -1,  1467,   659,  1468,    -1,  1428,  1262,  1469,    -1,
     430,    -1,   639,    -1,   291,   639,    -1,   430,   280,    -1,
      -1,   602,  1471,  1466,    -1,   503,    -1,   214,  1428,   378,
    1262,    -1,   214,  1430,    68,    -1,    -1,   214,  1430,   430,
    1474,  1475,  1264,  1277,    -1,  1476,    -1,  1437,  1477,    -1,
     185,    -1,   360,    -1,   185,    -1,   360,    -1,   414,    -1,
     264,    -1,    -1,  1479,  1478,   657,  1327,   658,    -1,   159,
      -1,   200,    -1,   265,    -1,   213,    -1,   292,    -1,    -1,
     473,   731,  1481,  1482,    -1,  1487,   375,  1486,  1498,   196,
    1499,    -1,  1487,   375,   199,  1498,   196,  1499,    -1,  1487,
     375,   417,  1498,   196,  1499,    -1,    13,  1488,   659,   209,
     382,   196,  1499,    -1,   422,   375,  1440,   196,  1499,    -1,
      -1,   209,   731,  1484,  1485,    -1,  1487,   375,  1486,  1498,
     579,  1500,  1505,  1506,    -1,  1487,   375,   199,  1498,   579,
    1500,  1505,  1506,    -1,  1487,   375,   417,  1498,   579,  1500,
    1505,  1506,    -1,   422,   375,  1440,   579,  1500,  1507,    -1,
      -1,   562,    -1,  1489,    -1,    13,  1488,    -1,    -1,   416,
      -1,  1490,    -1,  1489,   659,  1490,    -1,    -1,   489,  1491,
    1502,    -1,    -1,   240,  1492,  1502,    -1,    -1,   605,  1493,
    1502,    -1,    -1,   438,  1494,  1502,    -1,   129,    -1,   607,
      -1,   234,    -1,    14,    -1,    98,    -1,   143,    -1,   169,
      -1,   446,    -1,   503,    -1,   418,    -1,   182,    -1,   209,
     382,    -1,   502,   108,    -1,   554,    -1,    98,   565,   559,
      -1,   283,   559,    -1,   454,   507,    -1,   454,    67,    -1,
      98,   624,    -1,   502,   624,    -1,    98,   477,    -1,    14,
     477,    -1,    98,   608,    -1,   166,    -1,   583,    -1,    98,
     560,    -1,    -1,    19,    -1,  1497,  1495,  1496,    -1,  1497,
      -1,   549,   568,    -1,   254,   568,    -1,    65,   568,    -1,
     652,    -1,  1437,   665,   652,    -1,   652,   665,   652,    -1,
    1428,    -1,  1440,    -1,  1499,   659,  1440,    -1,  1501,    -1,
    1500,   659,  1501,    -1,  1440,   227,    48,   568,    -1,  1440,
     227,    48,   401,   568,    -1,  1440,   227,   633,  1439,    -1,
    1440,   227,   633,  1439,    21,  1434,    -1,  1440,   227,   633,
    1439,    48,  1434,    -1,  1440,    -1,    -1,   657,  1503,   658,
      -1,  1503,   659,  1504,    -1,  1504,    -1,  1437,    -1,    -1,
     462,  1496,    -1,   462,   531,    -1,   462,   640,    -1,   462,
     362,    -1,    -1,   633,  1508,    -1,    -1,   633,   209,   382,
      -1,  1508,  1509,    -1,  1509,    -1,   209,   382,    -1,   318,
    1282,    -1,   322,  1282,    -1,   317,  1282,    -1,   323,  1282,
      -1,    -1,    32,  1511,  1512,    -1,    -1,   637,    -1,    -1,
      19,   366,    57,    -1,    19,    57,    -1,    -1,   445,    -1,
     366,   445,    -1,    -1,   483,    -1,    79,  1512,  1513,  1514,
      -1,   475,  1512,  1513,  1514,    -1,   475,  1512,   579,  1515,
    1437,    -1,   483,  1437,    -1,   445,   483,  1437,    -1,    -1,
    1521,    -1,   599,  1526,  1178,    -1,    -1,  1521,    -1,  1524,
      -1,    -1,  1524,    -1,  1525,    -1,  1274,  1277,    -1,  1278,
      -1,    -1,   139,    -1,    13,    -1,   489,  1244,  1184,    -1,
     657,  1180,   658,  1523,    -1,  1527,    -1,  1528,   599,  1526,
    1527,    -1,    -1,  1530,  1528,    -1,    -1,  1532,    -1,  1532,
    1533,    -1,  1533,    -1,   545,    -1,   219,    -1,   139,    -1,
     528,    -1,   523,    -1,   524,    -1,   526,    -1,    13,    -1,
    1539,  1535,    -1,  1538,  1536,    -1,  1540,  1537,  1544,    -1,
    1544,    -1,  1559,    -1,  1568,    -1,  1562,    -1,   718,    -1,
    1544,    -1,  1559,    -1,  1568,    -1,  1562,    -1,  1561,    -1,
     718,    -1,  1538,    -1,  1539,    -1,    -1,   126,   159,  1440,
      -1,  1541,    -1,  1541,  1542,    -1,  1542,    -1,   387,   453,
      -1,    12,   159,   592,    -1,    12,   159,   330,    -1,    12,
     159,   566,    -1,    -1,   529,   488,   126,    -1,   529,   488,
     246,    -1,    -1,  1543,   624,  1428,  1545,  1546,    21,  1548,
      -1,    -1,   657,  1547,   658,    -1,  1437,    -1,  1547,   659,
    1437,    -1,    -1,  1549,  1550,  1556,    -1,    -1,  1554,  1551,
    1520,    -1,   657,  1552,   658,  1522,    -1,    -1,  1553,  1554,
      -1,   657,  1552,   658,    -1,    -1,   489,  1555,  1181,    -1,
      -1,   633,    64,   382,    -1,   633,    53,    64,   382,    -1,
     633,   280,    64,   382,    -1,   190,    -1,   410,    -1,    -1,
    1557,  1439,    -1,    -1,   583,   733,   839,   840,   375,  1428,
     193,   148,   480,  1558,  1560,   788,    -1,    11,   199,  1437,
     470,   958,   512,  1434,    -1,   199,  1437,   470,   958,   512,
    1434,    -1,    -1,    -1,    -1,    -1,    -1,   199,   733,   657,
    1563,   744,   658,  1564,   470,  1565,  1001,  1566,   735,  1567,
     788,    -1,    -1,    -1,    -1,    -1,   417,   733,  1569,   657,
    1570,   748,   658,  1571,   735,  1572,   788,    -1,   641,  1576,
    1575,  1577,    -1,   641,   153,  1575,  1579,    -1,   641,   412,
    1575,    -1,   641,    79,  1575,  1578,    -1,   641,   475,  1575,
      -1,   641,   434,  1574,    -1,    -1,    95,   642,    -1,  1415,
      -1,  1415,   659,  1415,    -1,  1415,   659,  1415,   659,  1282,
      -1,    32,    -1,   535,    -1,    -1,   256,    -1,   468,    -1,
      -1,   376,   402,    -1,    -1,   555,    -1,   555,   193,   333,
      -1,   242,   404,  1437,   512,  1434,    -1,   598,   404,  1437,
      -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1582,  1582,  1595,  1594,  1619,  1626,  1628,  1632,  1633,
    1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,
    1648,  1649,  1650,  1651,  1652,  1653,  1654,  1655,  1656,  1657,
    1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,
    1668,  1669,  1670,  1671,  1672,  1673,  1674,  1675,  1676,  1677,
    1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,
    1688,  1689,  1690,  1691,  1692,  1696,  1706,  1707,  1711,  1731,
    1738,  1749,  1748,  1759,  1761,  1765,  1766,  1770,  1783,  1782,
    1802,  1801,  1815,  1814,  1829,  1830,  1833,  1840,  1847,  1854,
    1861,  1868,  1876,  1885,  1891,  1898,  1905,  1913,  1923,  1929,
    1935,  1943,  1951,  1957,  1964,  1971,  1979,  1992,  1998,  2005,
    2012,  2020,  2031,  2032,  2036,  2040,  2044,  2048,  2058,  2062,
    2066,  2071,  2082,  2087,  2091,  2095,  2099,  2103,  2107,  2112,
    2116,  2121,  2154,  2159,  2166,  2169,  2171,  2172,  2176,  2182,
    2186,  2202,  2206,  2217,  2221,  2239,  2238,  2284,  2289,  2283,
    2296,  2301,  2294,  2308,  2313,  2306,  2319,  2318,  2331,  2330,
    2338,  2345,  2349,  2353,  2365,  2366,  2370,  2374,  2378,  2382,
    2386,  2391,  2395,  2403,  2402,  2434,  2433,  2442,  2451,  2452,
    2458,  2464,  2474,  2480,  2488,  2490,  2499,  2500,  2504,  2510,
    2519,  2520,  2528,  2528,  2586,  2587,  2588,  2589,  2590,  2591,
    2592,  2593,  2594,  2595,  2596,  2597,  2598,  2602,  2620,  2630,
    2644,  2663,  2664,  2668,  2669,  2674,  2676,  2678,  2680,  2682,
    2684,  2686,  2692,  2693,  2694,  2698,  2702,  2710,  2709,  2722,
    2724,  2727,  2729,  2733,  2739,  2748,  2750,  2754,  2755,  2760,
    2779,  2809,  2811,  2815,  2816,  2820,  2849,  2850,  2851,  2852,
    2856,  2857,  2861,  2862,  2867,  2870,  2898,  2896,  2981,  2999,
    2998,  3078,  3074,  3152,  3153,  3158,  3160,  3165,  3188,  3199,
    3203,  3225,  3226,  3230,  3234,  3247,  3253,  3259,  3268,  3281,
    3307,  3313,  3314,  3320,  3321,  3326,  3332,  3345,  3347,  3367,
    3373,  3375,  3377,  3379,  3381,  3383,  3385,  3387,  3389,  3391,
    3393,  3395,  3400,  3414,  3431,  3432,  3434,  3439,  3445,  3454,
    3460,  3469,  3477,  3505,  3513,  3515,  3524,  3529,  3535,  3544,
    3552,  3554,  3556,  3558,  3560,  3562,  3564,  3566,  3568,  3570,
    3572,  3574,  3576,  3581,  3601,  3625,  3627,  3626,  3637,  3638,
    3639,  3640,  3641,  3642,  3643,  3644,  3645,  3646,  3647,  3648,
    3649,  3654,  3653,  3664,  3664,  3720,  3719,  3778,  3778,  3800,
    3859,  3909,  3934,  3933,  3959,  3982,  3984,  3985,  3989,  4007,
    4028,  4037,  4076,  4028,  4105,  4107,  4108,  4112,  4113,  4118,
    4129,  4117,  4182,  4181,  4195,  4196,  4200,  4201,  4206,  4215,
    4205,  4266,  4275,  4265,  4321,  4334,  4339,  4338,  4376,  4377,
    4382,  4381,  4415,  4415,  4434,  4433,  4483,  4500,  4509,  4499,
    4568,  4577,  4565,  4620,  4622,  4627,  4629,  4631,  4648,  4653,
    4659,  4666,  4667,  4675,  4681,  4690,  4696,  4702,  4703,  4707,
    4707,  4712,  4713,  4714,  4718,  4719,  4720,  4723,  4725,  4729,
    4730,  4731,  4735,  4736,  4737,  4738,  4739,  4740,  4741,  4742,
    4743,  4746,  4748,  4752,  4753,  4754,  4758,  4759,  4760,  4761,
    4762,  4765,  4767,  4771,  4772,  4773,  4777,  4778,  4779,  4780,
    4781,  4782,  4783,  4786,  4788,  4792,  4793,  4794,  4798,  4799,
    4800,  4805,  4813,  4821,  4829,  4841,  4853,  4858,  4863,  4871,
    4879,  4887,  4895,  4903,  4911,  4919,  4932,  4945,  4959,  4973,
    4978,  4991,  4992,  5043,  5044,  5047,  5062,  5080,  5085,  5083,
    5097,  5099,  5098,  5109,  5108,  5121,  5158,  5159,  5164,  5163,
    5182,  5181,  5198,  5202,  5210,  5209,  5212,  5214,  5216,  5218,
    5223,  5224,  5230,  5231,  5248,  5249,  5253,  5254,  5258,  5277,
    5287,  5303,  5317,  5318,  5334,  5336,  5335,  5340,  5338,  5349,
    5350,  5354,  5372,  5390,  5391,  5407,  5422,  5444,  5445,  5450,
    5449,  5473,  5483,  5505,  5504,  5522,  5521,  5541,  5563,  5567,
    5596,  5608,  5609,  5614,  5625,  5613,  5650,  5651,  5655,  5668,
    5691,  5704,  5730,  5731,  5736,  5735,  5772,  5777,  5778,  5782,
    5783,  5787,  5789,  5795,  5797,  5799,  5801,  5803,  5805,  5814,
    5821,  5822,  5826,  5827,  5831,  5832,  5836,  5837,  5841,  5842,
    5846,  5847,  5851,  5855,  5856,  5859,  5861,  5865,  5866,  5870,
    5871,  5872,  5876,  5881,  5886,  5891,  5896,  5901,  5906,  5911,
    5916,  5931,  5937,  5952,  5957,  5972,  5978,  5996,  6001,  6006,
    6011,  6016,  6022,  6021,  6047,  6048,  6049,  6054,  6059,  6064,
    6069,  6071,  6073,  6079,  6087,  6105,  6122,  6148,  6166,  6167,
    6168,  6169,  6170,  6171,  6175,  6176,  6177,  6181,  6182,  6183,
    6184,  6189,  6196,  6197,  6201,  6202,  6206,  6207,  6214,  6219,
    6225,  6231,  6237,  6256,  6262,  6264,  6268,  6276,  6277,  6281,
    6286,  6285,  6310,  6311,  6328,  6330,  6333,  6335,  6339,  6340,
    6344,  6350,  6356,  6357,  6358,  6366,  6368,  6369,  6376,  6392,
    6423,  6428,  6434,  6440,  6445,  6450,  6455,  6460,  6467,  6474,
    6481,  6488,  6494,  6500,  6507,  6514,  6520,  6536,  6538,  6543,
    6567,  6572,  6577,  6583,  6589,  6594,  6599,  6604,  6610,  6616,
    6623,  6629,  6635,  6641,  6647,  6654,  6653,  6662,  6661,  6669,
    6675,  6681,  6689,  6690,  6691,  6697,  6698,  6699,  6700,  6701,
    6705,  6709,  6710,  6714,  6715,  6719,  6720,  6721,  6722,  6723,
    6727,  6728,  6729,  6730,  6731,  6735,  6740,  6742,  6748,  6752,
    6757,  6761,  6770,  6771,  6775,  6776,  6777,  6785,  6786,  6790,
    6791,  6795,  6796,  6797,  6801,  6802,  6803,  6804,  6807,  6808,
    6813,  6817,  6821,  6822,  6826,  6827,  6831,  6836,  6837,  6838,
    6846,  6847,  6853,  6859,  6865,  6871,  6872,  6885,  6891,  6897,
    6903,  6908,  6913,  6922,  6943,  6949,  6956,  6961,  6962,  6966,
    6974,  6978,  6979,  6983,  6984,  6988,  6997,  7001,  7002,  7006,
    7014,  7015,  7019,  7020,  7024,  7025,  7029,  7030,  7035,  7036,
    7037,  7041,  7049,  7054,  7063,  7067,  7072,  7077,  7082,  7087,
    7092,  7100,  7101,  7106,  7105,  7118,  7119,  7123,  7126,  7127,
    7128,  7129,  7133,  7141,  7148,  7149,  7153,  7163,  7164,  7168,
    7169,  7172,  7174,  7178,  7190,  7191,  7195,  7202,  7215,  7216,
    7218,  7220,  7226,  7231,  7237,  7243,  7250,  7260,  7261,  7262,
    7263,  7264,  7268,  7272,  7273,  7277,  7278,  7282,  7283,  7287,
    7288,  7289,  7293,  7294,  7298,  7302,  7309,  7321,  7322,  7326,
    7327,  7331,  7332,  7336,  7337,  7341,  7342,  7346,  7347,  7351,
    7352,  7356,  7357,  7361,  7363,  7367,  7368,  7372,  7376,  7377,
    7391,  7392,  7393,  7397,  7398,  7402,  7408,  7422,  7423,  7427,
    7428,  7432,  7433,  7441,  7440,  7480,  7479,  7493,  7507,  7506,
    7525,  7524,  7543,  7542,  7561,  7555,  7575,  7574,  7607,  7612,
    7617,  7622,  7627,  7635,  7637,  7647,  7656,  7657,  7661,  7662,
    7666,  7672,  7678,  7684,  7698,  7704,  7711,  7715,  7716,  7720,
    7721,  7725,  7731,  7737,  7743,  7752,  7766,  7767,  7768,  7769,
    7773,  7774,  7786,  7787,  7791,  7792,  7795,  7797,  7805,  7813,
    7815,  7817,  7818,  7826,  7827,  7831,  7840,  7838,  7852,  7866,
    7865,  7879,  7877,  7891,  7898,  7909,  7910,  7936,  7945,  7956,
    7958,  7962,  7966,  7974,  7981,  7985,  7990,  7989,  8005,  8007,
    8012,  8020,  8019,  8035,  8039,  8038,  8050,  8051,  8055,  8075,
    8076,  8080,  8089,  8093,  8098,  8100,  8099,  8110,  8120,  8109,
    8136,  8145,  8154,  8163,  8172,  8178,  8184,  8193,  8202,  8232,
    8242,  8263,  8273,  8277,  8282,  8283,  8284,  8288,  8291,  8293,
    8294,  8295,  8296,  8299,  8304,  8315,  8320,  8331,  8332,  8336,
    8337,  8341,  8342,  8343,  8347,  8348,  8353,  8361,  8362,  8363,
    8364,  8368,  8373,  8381,  8382,  8392,  8408,  8406,  8428,  8445,
    8448,  8455,  8459,  8466,  8470,  8474,  8481,  8486,  8489,  8496,
    8499,  8506,  8509,  8516,  8519,  8527,  8530,  8537,  8541,  8548,
    8552,  8560,  8564,  8590,  8591,  8592,  8597,  8602,  8610,  8609,
    8621,  8622,  8623,  8628,  8627,  8649,  8650,  8654,  8655,  8659,
    8660,  8661,  8666,  8665,  8687,  8696,  8695,  8722,  8723,  8727,
    8728,  8732,  8733,  8734,  8735,  8736,  8737,  8742,  8741,  8763,
    8764,  8765,  8770,  8769,  8775,  8782,  8787,  8795,  8796,  8800,
    8814,  8813,  8826,  8827,  8831,  8832,  8836,  8846,  8856,  8857,
    8862,  8861,  8872,  8873,  8877,  8878,  8882,  8892,  8903,  8902,
    8910,  8914,  8915,  8926,  8927,  8936,  8944,  8948,  8955,  8959,
    8964,  8968,  8977,  8985,  8990,  9020,  9020,  9034,  9048,  9052,
    9053,  9057,  9061,  9070,  9074,  9078,  9083,  9087,  9092,  9101,
    9113,  9114,  9120,  9129,  9135,  9141,  9151,  9152,  9160,  9161,
    9162,  9163,  9164,  9168,  9169,  9174,  9180,  9185,  9191,  9195,
    9199,  9203,  9207,  9211,  9215,  9219,  9223,  9227,  9231,  9235,
    9248,  9252,  9256,  9261,  9265,  9272,  9276,  9283,  9287,  9291,
    9299,  9303,  9310,  9314,  9319,  9323,  9327,  9331,  9335,  9339,
    9343,  9347,  9351,  9355,  9359,  9363,  9367,  9371,  9375,  9379,
    9383,  9384,  9388,  9389,  9393,  9394,  9398,  9399,  9403,  9404,
    9405,  9406,  9407,  9408,  9409,  9413,  9414,  9418,  9419,  9420,
    9421,  9422,  9423,  9427,  9428,  9429,  9430,  9431,  9435,  9439,
    9443,  9447,  9451,  9455,  9457,  9461,  9465,  9469,  9473,  9477,
    9481,  9485,  9489,  9493,  9497,  9501,  9505,  9510,  9526,  9530,
    9534,  9538,  9542,  9546,  9550,  9554,  9558,  9562,  9566,  9570,
    9574,  9578,  9582,  9586,  9590,  9594,  9599,  9604,  9609,  9613,
    9617,  9621,  9625,  9630,  9634,  9653,  9657,  9661,  9665,  9669,
    9674,  9679,  9683,  9687,  9692,  9696,  9700,  9704,  9708,  9712,
    9716,  9720,  9725,  9729,  9733,  9737,  9741,  9753,  9757,  9761,
    9765,  9769,  9773,  9777,  9781,  9785,  9789,  9793,  9797,  9801,
    9805,  9809,  9813,  9817,  9821,  9825,  9829,  9833,  9838,  9843,
    9847,  9851,  9857,  9863,  9869,  9875,  9881,  9887,  9891,  9909,
    9913,  9920,  9922,  9927,  9928,  9932,  9933,  9937,  9938,  9942,
    9948,  9957,  9964,  9968,  9972,  9976,  9980,  9984,  9988,  9992,
    9996, 10005, 10009, 10013, 10017, 10021, 10025, 10029, 10033, 10037,
   10041, 10051, 10055, 10059, 10063, 10070, 10071, 10076, 10081, 10085,
   10086, 10090, 10095, 10105, 10112, 10120, 10128, 10136, 10144, 10152,
   10160, 10168, 10176, 10184, 10192, 10200, 10211, 10212, 10216, 10222,
   10231, 10232, 10236, 10242, 10251, 10252, 10256, 10257, 10261, 10269,
   10280, 10281, 10288, 10302, 10303, 10309, 10310, 10330, 10334, 10338,
   10344, 10350, 10356, 10362, 10368, 10373, 10379, 10385, 10390, 10397,
   10398, 10399, 10407, 10408, 10412, 10427, 10431, 10453, 10480, 10484,
   10492, 10492, 10506, 10513, 10514, 10519, 10522, 10523, 10524, 10528,
   10529, 10533, 10539, 10548, 10549, 10557, 10558, 10562, 10567, 10573,
   10577, 10583, 10592, 10598, 10606, 10617, 10630, 10631, 10632, 10633,
   10634, 10635, 10636, 10637, 10638, 10639, 10640, 10641, 10645, 10646,
   10647, 10648, 10649, 10650, 10651, 10652, 10653, 10657, 10658, 10659,
   10660, 10663, 10665, 10666, 10670, 10671, 10679, 10681, 10685, 10686,
   10693, 10694, 10701, 10702, 10710, 10711, 10718, 10723, 10733, 10734,
   10742, 10757, 10761, 10762, 10766, 10785, 10786, 10790, 10797, 10802,
   10812, 10813, 10814, 10818, 10819, 10823, 10830, 10836, 10842, 10851,
   10855, 10859, 10863, 10867, 10874, 10875, 10879, 10880, 10881, 10882,
   10883, 10884, 10888, 10889, 10890, 10891, 10892, 10896, 10897, 10898,
   10899, 10900, 10904, 10905, 10906, 10907, 10911, 10916, 10917, 10921,
   10922, 10931, 10935, 10940, 10948, 10961, 10967, 10976, 10980, 10987,
   10988, 10992, 10999, 11005, 11009, 11017, 11029, 11041, 11040, 11051,
   11052, 11051, 11068, 11075, 11098, 11130, 11142, 11149, 11148, 11158,
   11164, 11171, 11176, 11181, 11190, 11191, 11195, 11206, 11212, 11221,
   11222, 11226, 11227, 11230, 11232, 11235, 11236, 11237, 11241, 11242,
   11249, 11263, 11281, 11298, 11310, 11326, 11341, 11342, 11343, 11352,
   11356, 11357, 11368, 11370, 11374, 11379, 11384, 11392, 11397, 11402,
   11410, 11416, 11425, 11432, 11436, 11443, 11444, 11448, 11453, 11463,
   11464, 11468, 11469, 11473, 11478, 11483, 11487, 11493, 11502, 11503,
   11511, 11515, 11524, 11540, 11547, 11559, 11567, 11568, 11574, 11585,
   11594, 11606, 11608, 11612, 11613, 11617, 11618, 11619, 11624, 11623,
   11642, 11644, 11647, 11649, 11652, 11653, 11656, 11660, 11664, 11668,
   11672, 11676, 11680, 11684, 11688, 11696, 11699, 11712, 11711, 11720,
   11727, 11735, 11743, 11751, 11759, 11767, 11774, 11776, 11778, 11787,
   11791, 11796, 11795, 11806, 11805, 11815, 11832, 11839, 11844, 11850,
   11856, 11864, 11872, 11880, 11890, 11921, 11923, 11954, 11961, 11968,
   11978, 11985, 11991, 12000, 12008, 12012, 12016, 12023, 12030, 12036,
   12043, 12050, 12055, 12060, 12065, 12074, 12076, 12078, 12083, 12084,
   12087, 12089, 12093, 12094, 12098, 12099, 12103, 12104, 12108, 12109,
   12113, 12114, 12117, 12119, 12126, 12136, 12138, 12145, 12173, 12172,
   12189, 12188, 12196, 12197, 12198, 12199, 12200, 12201, 12215, 12216,
   12221, 12225, 12231, 12237, 12258, 12259, 12260, 12275, 12274, 12287,
   12296, 12286, 12298, 12302, 12303, 12315, 12314, 12336, 12337, 12342,
   12344, 12346, 12348, 12350, 12352, 12354, 12356, 12358, 12360, 12362,
   12364, 12366, 12368, 12373, 12374, 12379, 12378, 12388, 12389, 12393,
   12393, 12395, 12396, 12400, 12401, 12406, 12405, 12416, 12420, 12424,
   12438, 12450, 12451, 12452, 12458, 12470, 12482, 12492, 12510, 12469,
   12521, 12522, 12526, 12527, 12531, 12532, 12533, 12537, 12538, 12539,
   12543, 12544, 12548, 12553, 12557, 12562, 12568, 12573, 12581, 12582,
   12586, 12591, 12595, 12600, 12608, 12609, 12612, 12614, 12622, 12624,
   12628, 12629, 12630, 12634, 12636, 12641, 12642, 12651, 12652, 12656,
   12657, 12661, 12684, 12689, 12694, 12699, 12707, 12715, 12722, 12732,
   12740, 12741, 12742, 12753, 12754, 12755, 12756, 12769, 12773, 12777,
   12781, 12785, 12789, 12796, 12800, 12804, 12808, 12812, 12820, 12824,
   12828, 12842, 12843, 12847, 12851, 12858, 12865, 12869, 12873, 12877,
   12881, 12885, 12889, 12896, 12897, 12913, 12923, 12927, 12933, 12943,
   12953, 12959, 12969, 12979, 12980, 13010, 13023, 13036, 13052, 13068,
   13085, 13086, 13097, 13098, 13109, 13110, 13111, 13115, 13143, 13180,
   13195, 13196, 13197, 13198, 13199, 13200, 13201, 13202, 13203, 13204,
   13205, 13206, 13207, 13208, 13209, 13210, 13211, 13212, 13213, 13214,
   13215, 13216, 13217, 13218, 13219, 13220, 13221, 13222, 13223, 13224,
   13225, 13226, 13227, 13228, 13229, 13230, 13231, 13232, 13233, 13234,
   13235, 13236, 13237, 13238, 13239, 13240, 13241, 13242, 13243, 13244,
   13245, 13246, 13247, 13248, 13249, 13250, 13251, 13261, 13262, 13263,
   13264, 13265, 13266, 13267, 13268, 13269, 13270, 13271, 13272, 13273,
   13274, 13275, 13276, 13277, 13278, 13279, 13280, 13281, 13282, 13283,
   13284, 13285, 13286, 13287, 13288, 13289, 13290, 13291, 13292, 13293,
   13294, 13295, 13296, 13297, 13298, 13299, 13300, 13301, 13302, 13303,
   13304, 13305, 13306, 13307, 13312, 13313, 13314, 13315, 13316, 13317,
   13318, 13319, 13320, 13321, 13322, 13323, 13324, 13325, 13326, 13327,
   13328, 13329, 13330, 13331, 13332, 13333, 13334, 13335, 13336, 13337,
   13338, 13339, 13340, 13341, 13342, 13343, 13344, 13345, 13346, 13347,
   13348, 13349, 13350, 13351, 13352, 13353, 13354, 13355, 13356, 13357,
   13358, 13359, 13360, 13361, 13362, 13363, 13364, 13365, 13366, 13367,
   13368, 13369, 13370, 13371, 13372, 13373, 13374, 13375, 13376, 13377,
   13378, 13379, 13380, 13381, 13382, 13383, 13384, 13385, 13386, 13387,
   13388, 13389, 13390, 13391, 13392, 13393, 13394, 13395, 13396, 13397,
   13398, 13399, 13400, 13401, 13402, 13403, 13404, 13405, 13406, 13407,
   13408, 13409, 13410, 13411, 13412, 13413, 13414, 13415, 13416, 13417,
   13418, 13419, 13420, 13421, 13422, 13423, 13424, 13425, 13426, 13427,
   13428, 13429, 13430, 13431, 13432, 13433, 13434, 13435, 13436, 13437,
   13438, 13439, 13440, 13441, 13442, 13443, 13444, 13445, 13446, 13447,
   13448, 13449, 13450, 13451, 13452, 13453, 13454, 13455, 13456, 13457,
   13458, 13459, 13460, 13461, 13462, 13463, 13464, 13465, 13466, 13467,
   13468, 13469, 13470, 13471, 13472, 13473, 13474, 13475, 13476, 13477,
   13478, 13479, 13480, 13481, 13482, 13483, 13484, 13485, 13486, 13487,
   13488, 13489, 13490, 13491, 13492, 13493, 13494, 13495, 13496, 13497,
   13498, 13499, 13500, 13501, 13502, 13503, 13504, 13505, 13506, 13507,
   13508, 13509, 13510, 13511, 13512, 13513, 13514, 13515, 13516, 13517,
   13518, 13519, 13520, 13521, 13522, 13523, 13524, 13525, 13526, 13527,
   13528, 13529, 13530, 13531, 13532, 13533, 13534, 13535, 13536, 13537,
   13538, 13539, 13540, 13541, 13542, 13543, 13544, 13545, 13546, 13547,
   13548, 13549, 13550, 13551, 13552, 13553, 13554, 13555, 13556, 13557,
   13558, 13559, 13560, 13561, 13562, 13563, 13564, 13565, 13566, 13567,
   13568, 13569, 13570, 13571, 13572, 13573, 13574, 13575, 13576, 13577,
   13578, 13579, 13580, 13591, 13600, 13604, 13608, 13612, 13616, 13623,
   13627, 13640, 13647, 13657, 13658, 13663, 13667, 13675, 13679, 13683,
   13684, 13685, 13689, 13690, 13691, 13692, 13696, 13697, 13698, 13699,
   13704, 13712, 13718, 13722, 13726, 13730, 13737, 13744, 13748, 13752,
   13759, 13763, 13770, 13777, 13778, 13782, 13789, 13790, 13794, 13795,
   13799, 13800, 13801, 13802, 13806, 13815, 13816, 13817, 13821, 13825,
   13835, 13834, 13850, 13851, 13855, 13856, 13860, 13888, 13889, 13890,
   13895, 13900, 13899, 13916, 13928, 13944, 13963, 13960, 14010, 14011,
   14015, 14016, 14020, 14021, 14022, 14023, 14025, 14024, 14037, 14038,
   14039, 14040, 14041, 14047, 14047, 14052, 14057, 14067, 14077, 14081,
   14090, 14090, 14095, 14101, 14112, 14123, 14131, 14133, 14137, 14144,
   14151, 14153, 14157, 14158, 14163, 14162, 14166, 14165, 14169, 14168,
   14172, 14171, 14174, 14175, 14176, 14177, 14178, 14179, 14180, 14181,
   14182, 14183, 14184, 14185, 14186, 14187, 14188, 14189, 14190, 14191,
   14192, 14193, 14194, 14195, 14196, 14197, 14198, 14199, 14203, 14204,
   14208, 14209, 14213, 14223, 14233, 14246, 14261, 14274, 14287, 14299,
   14304, 14312, 14317, 14325, 14333, 14348, 14356, 14366, 14377, 14386,
   14390, 14394, 14395, 14399, 14426, 14428, 14432, 14436, 14440, 14447,
   14448, 14452, 14453, 14457, 14458, 14462, 14463, 14469, 14475, 14481,
   14491, 14490, 14500, 14501, 14506, 14507, 14508, 14513, 14514, 14515,
   14519, 14520, 14524, 14536, 14545, 14555, 14564, 14578, 14579, 14583,
   14590, 14591, 14592, 14596, 14597, 14601, 14608, 14612, 14616, 14617,
   14618, 14622, 14626, 14634, 14635, 14643, 14643, 14656, 14657, 14661,
   14665, 14669, 14670, 14671, 14672, 14673, 14674, 14675, 14676, 14686,
   14688, 14690, 14695, 14696, 14697, 14698, 14699, 14703, 14704, 14705,
   14706, 14707, 14708, 14718, 14719, 14724, 14737, 14750, 14752, 14754,
   14759, 14764, 14766, 14768, 14774, 14775, 14777, 14783, 14782, 14800,
   14801, 14805, 14810, 14818, 14818, 14843, 14842, 14863, 14871, 14871,
   14879, 14884, 14883, 14897, 14898, 14900, 14902, 14913, 14915, 14921,
   14927, 14945, 14935, 15028, 15046, 15070, 15094, 15098, 15107, 15130,
   15067, 15197, 15217, 15222, 15230, 15195, 15251, 15256, 15261, 15266,
   15271, 15276, 15284, 15285, 15288, 15297, 15307, 15325, 15326, 15330,
   15331, 15332, 15336, 15337, 15342, 15343, 15345, 15350, 15359
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "ANALYSE_SYM", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM", "AS",
  "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM", "AUTOEXTEND_SIZE_SYM",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM",
  "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM",
  "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM",
  "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM", "COUNT_SYM", "CPU_SYM",
  "CREATE", "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_SYM", "CURRENT_USER",
  "CURSOR_SYM", "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT",
  "DEFAULT_AUTH_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DELETE_SYM", "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM", "FILTER_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM", "FLUSH_SYM",
  "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM", "FUNCTION_SYM", "GE",
  "GENERAL", "GENERATED", "GROUP_REPLICATION", "GEOMETRYCOLLECTION",
  "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM", "GLOBAL_SYM", "GRANT", "GRANTS",
  "GROUP_SYM", "GROUP_CONCAT_SYM", "GT_SYM", "HANDLER_SYM", "HASH_SYM",
  "HAVING", "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY", "HOST_SYM",
  "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES",
  "INDEX_SYM", "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM",
  "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM",
  "LOGS_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM", "MASTER_BIND_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM", "MASTER_SERVER_ID_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEVER_SYM", "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM",
  "NO_WRITE_TO_BINLOG", "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM",
  "NVARCHAR_SYM", "OFFSET_SYM", "ON", "ONE_SYM", "ONLY_SYM", "OPEN_SYM",
  "OPTIMIZE", "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY",
  "OR2_SYM", "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE",
  "OUT_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER",
  "PARSER_SYM", "PARSE_GCOL_EXPR_SYM", "PARTIAL", "PARTITION_SYM",
  "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM",
  "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "REBUILD_SYM",
  "RECOVER_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD",
  "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPEAT_SYM", "REPLACE", "REPLICATION", "REPLICATE_DO_DB",
  "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE", "REPLICATE_IGNORE_TABLE",
  "REPLICATE_WILD_DO_TABLE", "REPLICATE_WILD_IGNORE_TABLE",
  "REPLICATE_REWRITE_DB", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM",
  "RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM",
  "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM",
  "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS",
  "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM",
  "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD", "SSL_SYM", "STACKED_SYM",
  "STARTING", "STARTS_SYM", "START_SYM", "STATS_AUTO_RECALC_SYM",
  "STATS_PERSISTENT_SYM", "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM",
  "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM", "STORED_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE_SYM", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB",
  "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'", "'}'", "';'", "'@'",
  "'.'", "':'", "$accept", "query", "$@1", "opt_end_of_input",
  "verb_clause", "statement", "deallocate", "deallocate_or_drop",
  "prepare", "prepare_src", "execute", "$@2", "execute_using",
  "execute_var_list", "execute_var_ident", "help", "$@3", "change", "$@4",
  "$@5", "filter_defs", "filter_def", "opt_filter_db_list",
  "filter_db_list", "filter_db_ident", "opt_filter_db_pair_list",
  "filter_db_pair_list", "opt_filter_table_list", "filter_table_list",
  "filter_table_ident", "opt_filter_string_list", "filter_string_list",
  "filter_string", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "master_file_def", "opt_channel", "create", "$@6",
  "$@7", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14",
  "server_options_list", "server_option", "event_tail", "$@15",
  "ev_schedule_time", "$@16", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@17", "ev_sql_stmt_inner", "clear_privileges",
  "clear_password_expire_options", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@18",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_init_param", "sp_fdparam", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "$@19", "$@20", "$@21",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "$@22", "sp_proc_stmt",
  "sp_proc_stmt_if", "$@23", "sp_proc_stmt_statement", "$@24",
  "sp_proc_stmt_return", "$@25", "sp_proc_stmt_unlabeled", "$@26",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@27", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@28", "$@29", "$@30", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@31", "$@32",
  "searched_case_stmt", "$@33", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@34", "$@35",
  "searched_when_clause", "$@36", "$@37", "else_clause_opt",
  "sp_labeled_control", "$@38", "sp_opt_label", "sp_labeled_block", "$@39",
  "sp_unlabeled_block", "$@40", "sp_block_content", "$@41",
  "sp_unlabeled_control", "$@42", "$@43", "$@44", "$@45",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@46", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_file_block_size", "ts_wait", "size_number",
  "create2", "create2a", "$@47", "create3", "$@48", "$@49",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@50",
  "partition_entry", "$@51", "partition", "part_type_def", "$@52",
  "opt_linear", "opt_key_algo", "part_field_list", "part_field_item_list",
  "part_field_item", "part_column_list", "part_func", "sub_part_func",
  "opt_num_parts", "opt_sub_part", "$@53", "$@54", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@55", "part_name",
  "opt_part_values", "$@56", "$@57", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@58", "$@59",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@60", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "$@61", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "udf_type", "create_field_list",
  "field_list", "field_list_item", "column_def", "key_def",
  "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "$@62", "field_def", "opt_generated_always",
  "opt_gcol_attribute_list", "gcol_attribute_list", "gcol_attribute",
  "opt_stored_attribute", "parse_gcol_expr", "generated_column_func",
  "type", "$@63", "$@64", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "opt_collate_explicit",
  "collation_name_or_default", "opt_default", "ascii", "unicode",
  "opt_binary", "opt_bin_mod", "ws_nweights", "$@65", "ws_level_flag_desc",
  "ws_level_flag_reverse", "ws_level_flags", "ws_level_number",
  "ws_level_list_item", "ws_level_list", "ws_level_range",
  "ws_level_list_or_range", "opt_ws_levels", "opt_primary", "references",
  "opt_ref_list", "ref_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "normal_key_type", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "fulltext", "spatial", "init_key_options", "key_alg",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "key_using_alg", "all_key_opt", "normal_key_opt", "spatial_key_opt",
  "fulltext_key_opt", "btree_or_rtree", "key_list", "key_part",
  "opt_ident", "opt_component", "string_list", "alter", "$@66", "$@67",
  "$@68", "$@69", "$@70", "$@71", "$@72", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "password_expire",
  "connect_options", "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@73", "$@74", "$@75",
  "opt_validation", "alter_opt_validation", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@76",
  "add_part_extra", "reorg_partition_rule", "$@77", "reorg_parts_rule",
  "$@78", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "$@79", "$@80", "$@81",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "group_replication", "slave", "slave_start",
  "start_slave_opts", "$@82", "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_connection_opts", "slave_user_name_opt", "slave_user_pass_opt",
  "slave_plugin_auth_opt", "slave_plugin_dir_opt",
  "opt_slave_thread_option_list", "slave_thread_option_list",
  "slave_thread_option", "slave_until", "slave_until_opts", "checksum",
  "$@83", "opt_checksum_type", "repair", "$@84", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "analyze", "$@85",
  "binlog_base64_event", "check", "$@86", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "optimize", "$@87",
  "opt_no_write_to_binlog", "rename", "$@88", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@89",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@90",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@91", "cache_keys_spec",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_part2",
  "select_options_and_item_list", "$@92", "table_expression",
  "from_clause", "opt_from_clause", "table_reference_list",
  "select_options", "select_option_list", "select_option",
  "opt_select_lock_type", "select_item_list", "select_item",
  "select_alias", "optional_braces", "expr", "bool_pri", "predicate",
  "bit_expr", "or", "and", "not", "not2", "comp_op", "all_or_any",
  "simple_expr", "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr", "sum_expr", "variable",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_ref", "join_table_list", "esc_table_ref",
  "derived_table_list", "join_table", "normal_join", "opt_use_partition",
  "use_partition", "table_factor", "select_derived_union",
  "select_part2_derived", "$@93", "select_derived", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition",
  "index_hints_list", "opt_index_hints_list", "opt_key_definition",
  "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias", "opt_all", "opt_where_clause",
  "opt_having_clause", "opt_escape", "opt_group_clause", "group_list",
  "olap_opt", "alter_order_clause", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list", "order_dir",
  "opt_limit_clause", "limit_clause", "limit_options", "limit_option",
  "opt_simple_limit", "ulong_num", "real_ulong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num",
  "opt_procedure_analyse_clause", "opt_procedure_analyse_params",
  "procedure_analyse_param", "select_var_list", "select_var_ident",
  "opt_into", "into", "into_destination", "do_stmt",
  "empty_select_options", "drop", "$@94", "$@95", "$@96", "$@97",
  "table_list", "table_name", "table_alias_ref_list", "if_exists",
  "opt_temporary", "drop_ts_options_list", "drop_ts_options",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_from_subquery", "fields", "insert_values",
  "insert_query_expression", "value_or_values", "values_list", "equal",
  "opt_equal", "row_value", "opt_values", "values", "expr_or_default",
  "opt_insert_update_list", "update_stmt", "update_list", "update_elem",
  "opt_low_priority", "delete_stmt", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@98", "opt_table_sym",
  "opt_profile_defs", "profile_defs", "profile_def", "opt_profile_args",
  "show", "$@99", "show_param", "$@100", "$@101", "show_engine_param",
  "master_or_binary", "opt_storage", "opt_db", "opt_full", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where",
  "opt_wild_or_where_for_show", "describe", "$@102", "$@103",
  "explainable_command", "describe_command", "opt_extended_describe",
  "opt_describe_column", "flush", "$@104", "flush_options", "$@105",
  "$@106", "opt_flush_lock", "$@107", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@108", "reset_options", "reset_option",
  "$@109", "slave_reset_options", "purge", "$@110", "purge_options",
  "purge_option", "kill", "kill_option", "use", "load", "$@111", "$@112",
  "$@113", "$@114", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "opt_field_term", "field_term_list", "field_term",
  "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident", "label_ident", "ident_or_text",
  "user", "keyword", "keyword_sp", "set", "start_option_value_list",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "option_value_following_option_type", "option_value_no_option_type",
  "internal_variable_name", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types", "password",
  "set_expr_or_default", "lock", "$@115", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@116",
  "shutdown_stmt", "handler", "$@117", "handler_read_or_scan",
  "handler_scan_function", "handler_rkey_function", "$@118",
  "handler_rkey_mode", "revoke", "$@119", "revoke_command", "grant",
  "$@120", "grant_command", "opt_table", "grant_privileges",
  "opt_privileges", "object_privilege_list", "object_privilege", "$@121",
  "$@122", "$@123", "$@124", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "grant_list",
  "grant_user", "opt_column_list", "column_list", "column_list_id",
  "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin", "$@125", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "opt_union_clause", "union_list", "union_opt",
  "opt_union_order_or_limit", "union_order_or_limit", "order_or_limit",
  "union_option", "query_specification", "query_expression_body",
  "subselect", "$@126", "opt_query_spec_options", "query_spec_option_list",
  "query_spec_option", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@127", "view_list_opt", "view_list",
  "view_select", "$@128", "view_select_aux", "$@129",
  "create_view_select_paren", "$@130", "create_view_select", "$@131",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@132", "udf_tail",
  "sf_tail", "$@133", "$@134", "$@135", "$@136", "$@137", "sp_tail",
  "$@138", "$@139", "$@140", "$@141", "xa", "opt_convert_xid", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "install", "uninstall", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   124,    38,
      45,    43,    42,    47,    37,    94,   126,    40,    41,    44,
      33,   123,   125,    59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   667,   668,   669,   668,   668,   670,   670,   671,   671,
     672,   672,   672,   672,   672,   672,   672,   672,   672,   672,
     672,   672,   672,   672,   672,   672,   672,   672,   672,   672,
     672,   672,   672,   672,   672,   672,   672,   672,   672,   672,
     672,   672,   672,   672,   672,   672,   672,   672,   672,   672,
     672,   672,   672,   672,   672,   672,   672,   672,   672,   672,
     672,   672,   672,   672,   672,   673,   674,   674,   675,   676,
     676,   678,   677,   679,   679,   680,   680,   681,   683,   682,
     685,   684,   686,   684,   687,   687,   688,   688,   688,   688,
     688,   688,   688,   689,   689,   690,   690,   691,   692,   692,
     693,   693,   694,   694,   695,   695,   696,   697,   697,   698,
     698,   699,   700,   700,   701,   701,   701,   701,   701,   701,
     701,   701,   701,   701,   701,   701,   701,   701,   701,   701,
     701,   701,   701,   701,   701,   702,   702,   702,   703,   704,
     704,   704,   704,   705,   705,   707,   706,   708,   709,   706,
     710,   711,   706,   712,   713,   706,   714,   706,   715,   706,
     706,   706,   706,   706,   716,   716,   717,   717,   717,   717,
     717,   717,   717,   719,   718,   721,   720,   720,   722,   722,
     722,   722,   723,   723,   724,   724,   725,   725,   726,   726,
     727,   727,   729,   728,   730,   730,   730,   730,   730,   730,
     730,   730,   730,   730,   730,   730,   730,   731,   732,   733,
     733,   734,   734,   735,   735,   736,   736,   736,   736,   736,
     736,   736,   737,   737,   737,   738,   738,   740,   739,   741,
     741,   742,   742,   743,   743,   744,   744,   745,   745,   746,
     747,   748,   748,   749,   749,   750,   751,   751,   751,   751,
     752,   752,   753,   753,   754,   754,   756,   755,   755,   757,
     755,   758,   755,   759,   759,   760,   760,   761,   762,   762,
     763,   764,   764,   765,   765,   765,   765,   765,   766,   767,
     767,   768,   768,   769,   769,   770,   770,   771,   771,   771,
     772,   772,   772,   772,   772,   772,   772,   772,   772,   772,
     772,   772,   773,   774,   775,   775,   775,   776,   776,   777,
     777,   778,   779,   779,   780,   780,   781,   782,   782,   783,
     784,   784,   784,   784,   784,   784,   784,   784,   784,   784,
     784,   784,   784,   785,   785,   786,   787,   786,   788,   788,
     788,   788,   788,   788,   788,   788,   788,   788,   788,   788,
     788,   790,   789,   792,   791,   794,   793,   796,   795,   797,
     798,   799,   801,   800,   802,   803,   803,   803,   804,   804,
     806,   807,   808,   805,   809,   809,   809,   810,   810,   812,
     813,   811,   815,   814,   816,   816,   817,   817,   819,   820,
     818,   822,   823,   821,   824,   824,   826,   825,   827,   827,
     829,   828,   831,   830,   833,   832,   834,   835,   836,   834,
     837,   838,   834,   839,   839,   840,   840,   840,   841,   842,
     843,   844,   844,   845,   845,   846,   847,   848,   848,   850,
     849,   851,   851,   851,   852,   852,   852,   853,   853,   854,
     854,   854,   855,   855,   855,   855,   855,   855,   855,   855,
     855,   856,   856,   857,   857,   857,   858,   858,   858,   858,
     858,   859,   859,   860,   860,   860,   861,   861,   861,   861,
     861,   861,   861,   862,   862,   863,   863,   863,   864,   864,
     864,   865,   866,   867,   868,   869,   870,   870,   870,   871,
     872,   873,   874,   875,   876,   877,   878,   879,   880,   881,
     881,   882,   882,   883,   883,   883,   883,   884,   885,   884,
     886,   887,   886,   888,   886,   889,   890,   890,   892,   891,
     894,   893,   895,   896,   897,   896,   896,   896,   896,   896,
     898,   898,   899,   899,   900,   900,   901,   901,   902,   903,
     904,   905,   906,   906,   907,   908,   907,   909,   907,   910,
     910,   911,   912,   913,   913,   914,   914,   915,   915,   917,
     916,   918,   919,   920,   919,   921,   919,   922,   922,   923,
     923,   924,   924,   926,   927,   925,   928,   928,   929,   929,
     930,   930,   931,   931,   933,   932,   934,   935,   935,   936,
     936,   937,   937,   937,   937,   937,   937,   937,   937,   938,
     939,   939,   940,   940,   941,   941,   942,   942,   943,   943,
     944,   944,   945,   946,   946,   947,   947,   948,   948,   949,
     949,   949,   950,   950,   950,   950,   950,   950,   950,   950,
     950,   950,   950,   950,   950,   950,   950,   950,   950,   950,
     950,   950,   951,   950,   950,   950,   950,   950,   950,   950,
     950,   950,   950,   950,   952,   953,   954,   955,   956,   956,
     956,   956,   956,   956,   957,   957,   957,   958,   958,   958,
     958,   959,   960,   960,   961,   961,   962,   962,   963,   963,
     963,   963,   963,   963,   964,   964,   965,   966,   966,   967,
     969,   968,   970,   970,   971,   971,   972,   972,   973,   973,
     974,   974,   974,   974,   974,   975,   975,   975,   976,   977,
     978,   978,   978,   978,   978,   978,   978,   978,   978,   978,
     978,   978,   978,   978,   978,   978,   978,   978,   978,   978,
     978,   978,   978,   978,   978,   978,   978,   978,   978,   978,
     978,   978,   978,   978,   978,   979,   978,   980,   978,   978,
     978,   978,   981,   981,   981,   981,   981,   981,   981,   981,
     982,   983,   983,   984,   984,   985,   985,   985,   985,   985,
     986,   986,   986,   986,   986,   987,   987,   987,   988,   988,
     988,   989,   990,   990,   991,   991,   991,   992,   992,   993,
     993,   994,   994,   994,   995,   995,   995,   995,   996,   996,
     997,   997,   998,   998,   999,   999,  1000,  1000,  1000,  1000,
    1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
    1000,  1000,  1000,  1001,  1002,  1003,  1003,  1004,  1004,  1005,
    1005,  1006,  1006,  1007,  1007,  1008,  1008,  1009,  1009,  1010,
    1011,  1011,  1012,  1012,  1013,  1013,  1014,  1014,  1015,  1015,
    1015,  1016,  1016,  1016,  1017,  1017,  1017,  1017,  1017,  1017,
    1017,  1018,  1018,  1020,  1019,  1021,  1021,  1022,  1023,  1023,
    1023,  1023,  1024,  1025,  1026,  1026,  1027,  1028,  1028,  1029,
    1029,  1030,  1030,  1031,  1032,  1032,  1033,  1033,  1034,  1034,
    1034,  1034,  1035,  1035,  1035,  1035,  1035,  1036,  1036,  1036,
    1036,  1036,  1037,  1038,  1038,  1039,  1039,  1040,  1040,  1041,
    1041,  1041,  1042,  1042,  1043,  1044,  1045,  1046,  1046,  1047,
    1047,  1048,  1048,  1049,  1049,  1050,  1050,  1051,  1051,  1052,
    1052,  1053,  1053,  1054,  1054,  1055,  1055,  1056,  1057,  1057,
    1058,  1058,  1058,  1059,  1059,  1060,  1060,  1061,  1061,  1062,
    1062,  1063,  1063,  1065,  1064,  1066,  1064,  1064,  1067,  1064,
    1068,  1064,  1069,  1064,  1070,  1064,  1071,  1064,  1064,  1064,
    1064,  1064,  1064,  1064,  1064,  1072,  1073,  1073,  1074,  1074,
    1075,  1075,  1075,  1075,  1075,  1075,  1076,  1077,  1077,  1078,
    1078,  1079,  1079,  1079,  1079,  1080,  1081,  1081,  1081,  1081,
    1082,  1082,  1083,  1083,  1084,  1084,  1085,  1085,  1085,  1085,
    1085,  1085,  1085,  1085,  1085,  1085,  1086,  1085,  1085,  1087,
    1085,  1088,  1085,  1085,  1085,  1085,  1085,  1085,  1085,  1089,
    1089,  1090,  1090,  1091,  1092,  1092,  1094,  1093,  1095,  1095,
    1095,  1097,  1096,  1098,  1099,  1098,  1100,  1100,  1101,  1102,
    1102,  1103,  1104,  1104,  1104,  1105,  1104,  1106,  1107,  1104,
    1104,  1104,  1104,  1104,  1104,  1104,  1104,  1104,  1104,  1104,
    1104,  1104,  1104,  1104,  1104,  1104,  1104,  1104,  1108,  1108,
    1108,  1108,  1108,  1109,  1109,  1110,  1110,  1111,  1111,  1112,
    1112,  1113,  1113,  1113,  1114,  1114,  1114,  1115,  1115,  1115,
    1115,  1116,  1116,  1117,  1117,  1118,  1120,  1119,  1121,  1122,
    1122,  1123,  1123,  1124,  1124,  1124,  1125,  1126,  1126,  1127,
    1127,  1128,  1128,  1129,  1129,  1130,  1130,  1131,  1131,  1132,
    1132,  1133,  1133,  1134,  1134,  1134,  1134,  1134,  1136,  1135,
    1137,  1137,  1137,  1139,  1138,  1140,  1140,  1141,  1141,  1142,
    1142,  1142,  1144,  1143,  1145,  1147,  1146,  1148,  1148,  1149,
    1149,  1150,  1150,  1150,  1150,  1150,  1150,  1152,  1151,  1153,
    1153,  1153,  1155,  1154,  1154,  1156,  1156,  1157,  1157,  1158,
    1160,  1159,  1161,  1161,  1162,  1162,  1163,  1164,  1165,  1165,
    1167,  1166,  1168,  1168,  1169,  1169,  1170,  1171,  1173,  1172,
    1174,  1175,  1175,  1176,  1176,  1177,  1178,  1178,  1179,  1179,
    1180,  1180,  1181,  1181,  1181,  1183,  1182,  1184,  1185,  1186,
    1186,  1187,  1187,  1188,  1188,  1189,  1189,  1190,  1190,  1190,
    1191,  1191,  1191,  1192,  1192,  1192,  1193,  1193,  1194,  1194,
    1194,  1194,  1194,  1195,  1195,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1197,  1197,  1197,  1197,
    1197,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1199,  1199,  1199,  1199,  1199,
    1199,  1199,  1199,  1199,  1199,  1199,  1199,  1199,  1199,  1199,
    1200,  1200,  1201,  1201,  1202,  1202,  1203,  1203,  1204,  1204,
    1204,  1204,  1204,  1204,  1204,  1205,  1205,  1206,  1206,  1206,
    1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,
    1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,
    1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1208,  1208,  1208,  1208,  1208,
    1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,
    1208,  1208,  1208,  1208,  1208,  1208,  1208,  1209,  1209,  1209,
    1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,
    1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,
    1209,  1210,  1210,  1210,  1210,  1210,  1210,  1210,  1210,  1211,
    1211,  1212,  1212,  1213,  1213,  1214,  1214,  1215,  1215,  1216,
    1216,  1217,  1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,
    1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,  1218,
    1218,  1219,  1220,  1220,  1220,  1221,  1221,  1222,  1222,  1223,
    1223,  1224,  1224,  1225,  1226,  1226,  1226,  1226,  1226,  1226,
    1226,  1226,  1226,  1226,  1226,  1226,  1227,  1227,  1228,  1228,
    1229,  1229,  1230,  1230,  1231,  1231,  1232,  1232,  1233,  1233,
    1234,  1234,  1235,  1236,  1236,  1237,  1237,  1238,  1238,  1238,
    1238,  1238,  1238,  1238,  1238,  1238,  1238,  1238,  1238,  1239,
    1239,  1239,  1240,  1240,  1241,  1242,  1242,  1242,  1243,  1243,
    1245,  1244,  1246,  1247,  1247,  1248,  1248,  1248,  1248,  1249,
    1249,  1250,  1250,  1251,  1251,  1252,  1252,  1253,  1254,  1254,
    1255,  1255,  1256,  1256,  1257,  1257,  1258,  1258,  1258,  1258,
    1258,  1258,  1258,  1258,  1258,  1258,  1258,  1258,  1259,  1259,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1260,  1260,  1260,
    1260,  1261,  1261,  1261,  1262,  1262,  1263,  1263,  1264,  1264,
    1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,  1269,  1269,
    1269,  1270,  1271,  1271,  1272,  1273,  1273,  1274,  1275,  1275,
    1276,  1276,  1276,  1277,  1277,  1278,  1279,  1279,  1279,  1280,
    1280,  1280,  1280,  1280,  1281,  1281,  1282,  1282,  1282,  1282,
    1282,  1282,  1283,  1283,  1283,  1283,  1283,  1284,  1284,  1284,
    1284,  1284,  1285,  1285,  1285,  1285,  1286,  1287,  1287,  1288,
    1288,  1289,  1289,  1289,  1290,  1291,  1291,  1292,  1292,  1293,
    1293,  1294,  1295,  1295,  1295,  1296,  1297,  1299,  1298,  1300,
    1301,  1298,  1298,  1298,  1298,  1298,  1298,  1302,  1298,  1298,
    1298,  1298,  1298,  1298,  1303,  1303,  1304,  1305,  1305,  1306,
    1306,  1307,  1307,  1308,  1308,  1309,  1309,  1309,  1310,  1310,
    1311,  1311,  1311,  1312,  1312,  1312,  1313,  1313,  1313,  1313,
    1314,  1314,  1315,  1315,  1316,  1316,  1316,  1317,  1317,  1317,
    1318,  1318,  1319,  1320,  1320,  1321,  1321,  1322,  1322,  1323,
    1323,  1324,  1324,  1325,  1326,  1326,  1327,  1327,  1328,  1328,
    1329,  1329,  1330,  1331,  1331,  1332,  1333,  1333,  1334,  1334,
    1334,  1335,  1335,  1336,  1336,  1337,  1337,  1337,  1339,  1338,
    1340,  1340,  1341,  1341,  1342,  1342,  1343,  1343,  1343,  1343,
    1343,  1343,  1343,  1343,  1343,  1344,  1344,  1346,  1345,  1347,
    1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1348,  1347,  1349,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1347,  1347,  1350,  1350,  1350,  1351,  1351,
    1352,  1352,  1353,  1353,  1354,  1354,  1355,  1355,  1356,  1356,
    1357,  1357,  1358,  1358,  1358,  1359,  1359,  1359,  1361,  1360,
    1362,  1360,  1363,  1363,  1363,  1363,  1363,  1363,  1364,  1364,
    1365,  1365,  1365,  1365,  1366,  1366,  1366,  1368,  1367,  1370,
    1371,  1369,  1369,  1372,  1372,  1373,  1372,  1374,  1374,  1375,
    1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,  1375,
    1375,  1375,  1375,  1376,  1376,  1378,  1377,  1379,  1379,  1381,
    1380,  1380,  1380,  1382,  1382,  1384,  1383,  1385,  1386,  1386,
    1387,  1388,  1388,  1388,  1389,  1391,  1392,  1393,  1394,  1390,
    1395,  1395,  1396,  1396,  1397,  1397,  1397,  1398,  1398,  1398,
    1399,  1399,  1400,  1400,  1401,  1401,  1401,  1401,  1402,  1402,
    1403,  1403,  1404,  1404,  1405,  1405,  1406,  1406,  1407,  1407,
    1408,  1408,  1408,  1409,  1409,  1410,  1410,  1411,  1411,  1412,
    1412,  1413,  1414,  1414,  1414,  1414,  1415,  1415,  1415,  1416,
    1417,  1417,  1417,  1418,  1418,  1418,  1418,  1418,  1418,  1418,
    1418,  1418,  1418,  1419,  1419,  1419,  1419,  1419,  1420,  1420,
    1420,  1421,  1421,  1422,  1422,  1423,  1424,  1424,  1425,  1425,
    1426,  1426,  1426,  1427,  1427,  1427,  1427,  1428,  1428,  1428,
    1429,  1429,  1430,  1431,  1431,  1432,  1433,  1434,  1435,  1436,
    1437,  1437,  1438,  1438,  1439,  1439,  1439,  1440,  1440,  1440,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1443,  1444,  1444,  1444,  1444,  1444,  1444,
    1444,  1445,  1445,  1446,  1446,  1447,  1447,  1448,  1448,  1449,
    1449,  1449,  1450,  1450,  1450,  1450,  1451,  1451,  1451,  1451,
    1452,  1453,  1453,  1453,  1453,  1453,  1453,  1454,  1454,  1454,
    1455,  1455,  1456,  1457,  1457,  1458,  1459,  1459,  1460,  1460,
    1461,  1461,  1461,  1461,  1462,  1463,  1463,  1463,  1463,  1463,
    1465,  1464,  1466,  1466,  1467,  1467,  1468,  1469,  1469,  1469,
    1469,  1471,  1470,  1472,  1473,  1473,  1474,  1473,  1475,  1475,
    1476,  1476,  1477,  1477,  1477,  1477,  1478,  1477,  1479,  1479,
    1479,  1479,  1479,  1481,  1480,  1482,  1482,  1482,  1482,  1482,
    1484,  1483,  1485,  1485,  1485,  1485,  1486,  1486,  1487,  1487,
    1488,  1488,  1489,  1489,  1491,  1490,  1492,  1490,  1493,  1490,
    1494,  1490,  1490,  1490,  1490,  1490,  1490,  1490,  1490,  1490,
    1490,  1490,  1490,  1490,  1490,  1490,  1490,  1490,  1490,  1490,
    1490,  1490,  1490,  1490,  1490,  1490,  1490,  1490,  1495,  1495,
    1496,  1496,  1497,  1497,  1497,  1498,  1498,  1498,  1498,  1499,
    1499,  1500,  1500,  1501,  1501,  1501,  1501,  1501,  1501,  1502,
    1502,  1503,  1503,  1504,  1505,  1505,  1505,  1505,  1505,  1506,
    1506,  1507,  1507,  1508,  1508,  1509,  1509,  1509,  1509,  1509,
    1511,  1510,  1512,  1512,  1513,  1513,  1513,  1514,  1514,  1514,
    1515,  1515,  1516,  1517,  1517,  1518,  1519,  1520,  1520,  1521,
    1522,  1522,  1522,  1523,  1523,  1524,  1525,  1525,  1526,  1526,
    1526,  1527,  1527,  1528,  1528,  1530,  1529,  1531,  1531,  1532,
    1532,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1534,
    1534,  1534,  1535,  1535,  1535,  1535,  1535,  1536,  1536,  1536,
    1536,  1536,  1536,  1537,  1537,  1538,  1539,  1540,  1540,  1540,
    1541,  1542,  1542,  1542,  1543,  1543,  1543,  1545,  1544,  1546,
    1546,  1547,  1547,  1549,  1548,  1551,  1550,  1550,  1553,  1552,
    1552,  1555,  1554,  1556,  1556,  1556,  1556,  1557,  1557,  1558,
    1558,  1560,  1559,  1561,  1561,  1563,  1564,  1565,  1566,  1567,
    1562,  1569,  1570,  1571,  1572,  1568,  1573,  1573,  1573,  1573,
    1573,  1573,  1574,  1574,  1575,  1575,  1575,  1576,  1576,  1577,
    1577,  1577,  1578,  1578,  1579,  1579,  1579,  1580,  1581
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     4,     1,
       2,     0,     4,     0,     2,     3,     1,     2,     0,     3,
       0,     6,     0,     5,     1,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     3,     1,     3,     1,     2,     3,
       5,     7,     2,     3,     1,     3,     3,     2,     3,     1,
       3,     1,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     5,     3,     1,     0,     1,     3,     1,     3,
       3,     3,     3,     0,     3,     0,     7,     0,     0,    14,
       0,     0,    14,     0,     0,    14,     0,     6,     0,     3,
       8,     4,     3,    11,     1,     3,     2,     2,     2,     2,
       2,     2,     2,     0,    12,     0,     6,     2,     0,     1,
       3,     1,     0,     2,     0,     2,     0,     1,     3,     4,
       0,     2,     0,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     3,
       1,     0,     2,     0,     2,     2,     2,     2,     2,     3,
       3,     1,     1,     1,     2,     3,     3,     0,     4,     0,
       3,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       3,     0,     1,     3,     1,     4,     0,     1,     1,     1,
       0,     3,     2,     3,     0,     3,     0,     5,     5,     0,
       7,     0,     6,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     3,     1,
       1,     0,     1,     0,     2,     3,     5,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     4,     0,     1,     1,     1,     3,     1,
       3,     3,     1,     2,     1,     1,     1,     1,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     0,     0,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     5,     0,     2,     0,     3,     0,     2,     2,
       2,     2,     0,     6,     2,     0,     2,     1,     1,     3,
       0,     0,     0,     7,     0,     2,     2,     1,     1,     0,
       0,     8,     0,     6,     1,     2,     1,     2,     0,     0,
       6,     0,     0,     6,     0,     2,     0,     5,     0,     1,
       0,     5,     0,     2,     0,     5,     4,     0,     0,     8,
       0,     0,     8,     1,     1,     1,     1,     1,     2,     4,
       5,     0,     4,     4,     4,     3,     3,     2,     2,     0,
       2,     1,     2,     3,     1,     1,     1,     0,     1,     1,
       2,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     0,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     2,     3,     1,     1,
       1,     2,     2,     2,     1,     1,     1,     1,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     4,     3,     1,
       1,     1,     1,     2,     3,     2,     4,     5,     0,     5,
       0,     0,     5,     0,     7,     1,     0,     1,     0,     3,
       0,     3,     5,     6,     0,     4,     2,     2,     2,     2,
       0,     1,     0,     3,     0,     1,     1,     3,     1,     4,
       3,     3,     0,     2,     0,     0,     7,     0,    10,     1,
       3,     1,     1,     0,     2,     0,     3,     1,     3,     0,
       6,     1,     0,     0,     5,     0,     4,     1,     1,     1,
       3,     1,     3,     0,     0,     5,     1,     3,     1,     1,
       0,     3,     1,     3,     0,     4,     1,     0,     1,     2,
       1,     3,     4,     3,     3,     3,     4,     4,     3,     4,
       0,     1,     0,     1,     1,     2,     1,     1,     0,     1,
       1,     2,     1,     0,     3,     0,     1,     1,     2,     1,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     0,     6,     1,     1,     3,     4,     4,     3,
       2,     2,     3,     3,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     2,     2,     7,     8,
       8,     8,     8,     2,     0,     1,     4,     0,     1,     2,
       0,     3,     2,     9,     0,     2,     0,     1,     2,     1,
       1,     2,     2,     2,     2,     0,     1,     1,     4,     1,
       3,     3,     3,     1,     2,     1,     1,     3,     2,     3,
       2,     2,     1,     3,     3,     2,     3,     1,     2,     2,
       2,     1,     2,     1,     1,     1,     2,     3,     2,     3,
       2,     2,     3,     3,     3,     0,     6,     0,     6,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     2,     1,     2,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     2,     0,     1,
       1,     5,     0,     3,     0,     2,     3,     0,     1,     2,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     1,
       0,     1,     0,     1,     2,     1,     1,     2,     2,     3,
       1,     3,     2,     1,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     1,     1,     2,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       0,     2,     0,     2,     1,     1,     0,     1,     1,     2,
       2,     1,     2,     2,     0,     1,     1,     1,     3,     1,
       3,     0,     1,     0,     4,     1,     1,     1,     0,     1,
       2,     1,     1,     2,     1,     3,     3,     1,     1,     0,
       2,     0,     1,     5,     0,     3,     3,     1,     0,     2,
       2,     2,     0,     3,     3,     6,     6,     1,     1,     2,
       2,     2,     1,     2,     2,     1,     1,     0,     1,     1,
       1,     1,     0,     1,     1,     1,     0,     1,     2,     0,
       1,     0,     1,     0,     1,     1,     2,     1,     2,     1,
       2,     2,     2,     3,     2,     1,     1,     1,     1,     3,
       1,     1,     1,     4,     2,     1,     4,     0,     1,     0,
       2,     1,     3,     0,     5,     0,     5,     7,     0,     5,
       0,     5,     0,     5,     0,     4,     0,    10,     3,     4,
       3,     3,     7,     5,     5,     4,     0,     1,     1,     2,
       2,     2,     1,     4,     2,     2,     3,     0,     2,     2,
       1,     2,     2,     2,     2,     3,     0,     3,     1,     4,
       0,     3,     0,     2,     0,     1,     0,     2,     2,     2,
       2,     1,     1,     1,     3,     4,     0,     6,     4,     0,
       5,     0,     6,     4,     3,     1,     7,     4,     4,     0,
       1,     2,     2,     2,     1,     1,     0,     5,     0,     3,
       2,     0,     5,     0,     0,     6,     1,     3,     1,     1,
       3,     2,     3,     2,     4,     0,     6,     0,     0,     7,
       4,     4,     3,     3,     2,     2,     6,     5,     3,     5,
       5,     1,     1,     1,     1,     1,     2,     1,     0,     1,
       1,     2,     2,     3,     3,     3,     3,     0,     1,     0,
       1,     0,     1,     1,     0,     2,     1,     0,     1,     1,
       1,     2,     2,     2,     4,     3,     0,     4,     3,     0,
       1,     1,     3,     3,     2,     2,     4,     0,     3,     0,
       3,     0,     3,     0,     3,     0,     1,     1,     3,     1,
       1,     0,     2,     1,     3,     3,     3,     1,     0,     5,
       0,     1,     1,     0,     6,     0,     1,     1,     2,     1,
       1,     1,     0,     5,     2,     0,     5,     0,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     0,     5,     0,
       1,     1,     0,     4,     4,     3,     5,     1,     3,     3,
       0,     6,     1,     1,     1,     3,     2,     3,     1,     1,
       0,     6,     1,     1,     1,     3,     3,     4,     0,     5,
       1,     0,     4,     0,     2,     1,     3,     4,     2,     3,
       3,     3,     4,     3,    11,     0,     3,     8,     2,     0,
       1,     1,     1,     0,     1,     2,     1,     1,     1,     1,
       0,     2,     4,     3,     1,     1,     1,     2,     0,     2,
       2,     1,     1,     0,     2,     3,     3,     3,     2,     3,
       4,     3,     4,     3,     4,     1,     3,     4,     3,     6,
       1,     5,     6,     5,     7,     6,     8,     5,     6,     4,
       4,     5,     3,     4,     1,     3,     3,     3,     3,     3,
       3,     5,     5,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     3,     2,     2,
       2,     2,     3,     3,     5,     6,     4,     4,     7,     2,
       6,     5,     6,     6,     4,     4,     5,     3,     4,     6,
       2,     4,     4,     4,    10,     6,     8,     6,     4,     4,
       6,     4,     4,     4,     6,     4,     7,     7,     7,     6,
       6,     6,     6,     3,     4,     6,     8,     2,     2,     8,
       8,     6,     6,     1,     6,     6,     8,     8,     6,     8,
       6,     2,     8,     8,     2,     2,     2,     4,     4,     4,
       4,     3,     8,     6,     8,     4,     6,     4,     4,     6,
       8,     4,     3,     6,     4,     6,     5,     8,     7,    10,
       1,     6,     4,     4,     4,     4,     4,     6,     4,     4,
       6,     2,     3,     0,     4,     0,     3,     0,     1,     1,
       3,     2,     4,     5,     4,     4,     4,     5,     4,     5,
       4,     5,     4,     5,     4,     4,     4,     4,     4,     5,
       7,     2,     3,     1,     4,     0,     1,     0,     2,     0,
       3,     3,     1,     2,     2,     3,     2,     1,     2,     1,
       2,     1,     2,     2,     2,     1,     0,     1,     1,     3,
       1,     3,     1,     3,     0,     1,     0,     2,     4,     5,
       1,     1,     1,     1,     4,     1,     3,     3,     3,     5,
       5,     7,     4,     7,     9,     6,     7,     9,     6,     1,
       2,     2,     0,     1,     4,     4,     4,     4,     2,     4,
       0,     3,     1,     0,     1,     0,     2,     3,     3,     1,
       1,     6,     6,     1,     2,     0,     1,     1,     0,     1,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     0,     2,     0,     1,     0,     2,
       0,     2,     2,     0,     0,     4,     3,     1,     0,     1,
       1,     3,     3,     1,     2,     0,     1,     3,     3,     1,
       0,     1,     1,     0,     1,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       5,     0,     1,     3,     1,     3,     1,     2,     1,     0,
       1,     2,     5,     2,     1,     3,     0,     0,     7,     0,
       0,     8,     4,     6,     4,     4,     5,     0,     6,     4,
       4,     4,     5,     4,     1,     3,     1,     1,     3,     0,
       2,     0,     1,     0,     1,     1,     2,     3,     1,     1,
       8,     9,     8,     6,     7,     6,     0,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     4,     1,     3,     4,
       3,     1,     2,     2,     4,     1,     1,     3,     1,     1,
       1,     0,     1,     3,     0,     1,     3,     1,     1,     1,
       0,     5,     9,     3,     1,     3,     0,     1,     8,     6,
       7,     0,     2,     0,     2,     1,     1,     1,     0,     4,
       0,     1,     0,     1,     1,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     0,     3,     0,     3,     2,
       4,     4,     3,     4,     4,     1,     3,     3,     6,     2,
       2,     0,     6,     0,     7,     5,     2,     1,     5,     5,
       2,     2,     1,     4,     3,     2,     3,     2,     2,     1,
       3,     4,     3,     3,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     4,     1,     1,     1,     1,     1,
       0,     1,     0,     2,     0,     1,     1,     1,     0,     2,
       0,     2,     0,     2,     2,     0,     2,     2,     0,     4,
       0,     4,     1,     1,     1,     1,     1,     3,     1,     1,
       0,     1,     1,     3,     0,     1,     1,     0,     4,     0,
       0,     5,     1,     0,     3,     0,     3,     3,     1,     2,
       2,     2,     2,     2,     3,     2,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     0,     3,     3,     1,     0,
       4,     1,     2,     0,     1,     0,     3,     3,     2,     2,
       3,     0,     1,     1,     2,     0,     0,     0,     0,    22,
       1,     1,     0,     1,     0,     1,     1,     0,     1,     1,
       0,     2,     2,     1,     3,     4,     3,     3,     0,     2,
       2,     1,     3,     3,     0,     4,     0,     3,     1,     1,
       0,     3,     2,     3,     1,     1,     2,     0,     2,     3,
       1,     3,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     2,     2,
       2,     1,     1,     3,     5,     2,     1,     1,     1,     1,
       3,     4,     5,     1,     5,     3,     2,     1,     3,     2,
       2,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     2,     2,     3,     6,     5,
       8,     2,     2,     0,     2,     1,     3,     2,     1,     1,
       1,     1,     0,     1,     1,     1,     0,     2,     2,     2,
       3,     3,     4,     6,     2,     3,     3,     1,     3,     3,
       2,     2,     1,     0,     2,     3,     0,     2,     2,     2,
       2,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       0,     4,     1,     1,     1,     3,     3,     1,     1,     2,
       2,     0,     3,     1,     4,     3,     0,     7,     1,     2,
       1,     1,     1,     1,     1,     1,     0,     5,     1,     1,
       1,     1,     1,     0,     4,     6,     6,     6,     7,     5,
       0,     4,     8,     8,     8,     6,     0,     1,     1,     2,
       0,     1,     1,     3,     0,     3,     0,     3,     0,     3,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     2,     1,     1,     2,     0,     1,
       3,     1,     2,     2,     2,     1,     3,     3,     1,     1,
       3,     1,     3,     4,     5,     4,     6,     6,     1,     0,
       3,     3,     1,     1,     0,     2,     2,     2,     2,     0,
       2,     0,     3,     2,     1,     2,     2,     2,     2,     2,
       0,     3,     0,     1,     0,     3,     2,     0,     1,     2,
       0,     1,     4,     4,     5,     2,     3,     0,     1,     3,
       0,     1,     1,     0,     1,     1,     2,     1,     0,     1,
       1,     3,     4,     1,     4,     0,     2,     0,     1,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     1,     2,     1,
       2,     3,     3,     3,     0,     3,     3,     0,     7,     0,
       3,     1,     3,     0,     3,     0,     3,     4,     0,     2,
       3,     0,     3,     0,     3,     4,     4,     1,     1,     0,
       2,     0,    12,     7,     6,     0,     0,     0,     0,     0,
      14,     0,     0,     0,     0,    11,     4,     4,     3,     4,
       3,     3,     0,     2,     1,     3,     5,     1,     1,     0,
       1,     1,     0,     2,     0,     1,     3,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2645,  1169,  2580,     0,     0,     0,     0,     0,     0,
    2582,   158,    66,  1743,  1848,  1849,  1656,  1681,     2,     0,
    1169,   304,   208,     0,    78,  1696,     0,  1901,     0,     0,
    1169,     0,   520,     0,  1895,     0,     0,  1169,  1736,  1885,
     281,   208,  2582,     0,  1215,     0,  1767,  2463,     0,     0,
       0,  1750,     0,  2461,  1736,     0,     0,     0,     0,     3,
       8,    19,     0,    41,    24,    30,    14,    18,    13,    54,
      48,    26,    39,    38,    10,     0,    27,    57,  1131,    58,
      16,    45,    11,    12,    15,    36,    44,    37,    40,    52,
    1205,    22,    23,    31,    46,    62,    20,    59,    55,    21,
    1850,    25,    47,    42,    33,    63,    34,    53,    35,    61,
      56,    29,    49,    28,     9,    17,    50,    51,    43,    64,
      32,    60,     0,  1004,     0,     0,     0,     0,     0,     0,
       0,  1679,   964,  2643,  2644,  2645,  1171,  1170,     0,  2582,
    2007,  1154,  1180,  2021,  2077,  2078,  2079,  2080,  2081,  2082,
    2023,  2083,  2084,  2022,  2085,  2087,  2086,  2088,  2089,  2024,
    2025,  2090,  2091,  2092,  2094,  2093,  2095,  2026,  2027,  2096,
    2097,  2098,  2099,  2100,  2028,  2029,  2101,  2103,  2102,  2030,
    2104,  2105,  2106,  2109,  2108,  2107,  2031,  2110,  2032,  2111,
    2112,  2113,  2114,  2115,  2116,  2117,  2118,  2120,  2119,  2033,
    2121,  2122,  2123,  2124,  2125,  2127,  2126,  2128,  2129,  2130,
    2034,  2131,  2132,  2133,  2134,  2135,  2136,  2137,  2138,  2139,
    2035,  2140,  2141,  2142,  2162,  2036,  2143,  2146,  2145,  2144,
    2147,  2148,  2149,  2151,  2150,  2152,  2153,  2037,  2154,  2155,
    2156,  2157,  2158,  2160,  2159,  2164,  2165,  2166,  2167,  2168,
    2038,  2039,  2040,  2161,  2163,  2370,  2169,  2041,  2171,  2170,
    2172,  2174,  2173,  2042,  2175,  2043,  2044,  2176,  2177,  2003,
    2178,  2004,  2179,  2181,  2182,  2183,  2188,  2045,  2180,  2184,
    2185,  2186,  2187,  2189,  2190,  2046,  2191,  2192,  2193,  2194,
    2195,  2196,  2197,  2198,  2199,  2200,  2222,  2211,  2213,  2204,
    2206,  2207,  2209,  2205,  2212,  2210,  2216,  2215,  2217,  2218,
    2219,  2220,  2221,  2214,  2202,  2208,  2203,  2223,  2224,  2201,
    2225,  2226,  2227,  2228,  2229,  2230,  2231,  2232,  2233,  2234,
    2235,  2237,  2236,  2238,  2239,  2240,  2241,  2242,  2243,  2245,
    2244,  2246,  2247,  2248,  2249,  2251,  2250,  2253,  2254,  2047,
    2252,  2255,  2256,  2257,  2258,  2259,  2048,  2049,  2050,  2260,
    2261,  2051,  2052,  2262,  2264,  2263,  2265,  2266,  2267,  2268,
    2269,  2270,  2271,  2053,  2054,  2055,  2272,  2273,  2274,  2275,
    2276,  2277,  2278,  2279,  2280,  2281,  2282,  2283,  2284,  2285,
    2287,  2286,  2288,  2289,  2290,  2291,  2292,  2293,  2294,  2056,
    2295,  2057,  2296,  2297,  2298,  2299,  2300,  2301,  2302,  2303,
    2304,  2058,  2305,  2059,  2306,  2307,  2308,  2309,  2060,  2310,
    2311,  2312,  2314,  2315,  2313,  2316,  2061,  2317,  2318,  2319,
    2062,  2321,  2320,  2322,  2063,  2324,  2064,  2065,  2323,  2067,
    2325,  2326,  2066,  2068,  2327,  2328,  2329,  2330,  2331,  2333,
    2332,  2334,  2335,  2336,  2337,  2069,  2338,  2339,  2340,  2341,
    2070,  2342,  2343,  2344,  2345,  2346,  2348,  2347,  2349,  2350,
    2351,  2352,  2354,  2356,  2355,  2353,  2357,  2358,  2359,  2360,
    2363,  2364,  2365,  2366,  2361,  2362,  2071,  2367,  2368,  2369,
    2371,  2372,  2374,  2373,  2072,  2073,  2375,  2376,  2076,  2377,
    2378,  2379,  2382,  2380,  2381,  2384,  2383,  2385,  2388,  2386,
    2387,  2074,  2389,  2075,  2390,  2391,  2392,   227,  2010,   210,
    2011,  2020,     0,     0,  2453,  2452,  1138,  1155,  2583,  2584,
     613,   914,     0,     0,   915,     0,   612,   913,   613,  2645,
       0,   609,   610,     0,     0,     0,  1747,  1746,  1745,     0,
    1743,     0,  1679,  1679,  1679,     0,     0,  1679,  1679,     0,
    1682,  1679,  1679,  1679,     0,    71,  1857,   305,   306,     0,
    2490,   207,     0,     0,     0,  2002,     0,  1698,  1699,  1697,
    1089,     0,  1902,  1903,     0,  1910,     0,  1911,  1905,  2450,
       0,     0,     0,     0,     0,     0,   208,  1172,     0,  1701,
    1737,  1702,  1700,     0,   271,   280,   282,   283,   279,  2483,
    2584,  2595,  2597,  1595,  1223,   828,     0,     0,  2409,  2410,
    2245,  2265,  2411,  2361,     0,     0,  2427,  2393,     0,  2403,
       0,  1824,   283,  1101,  1125,  1109,  1102,  1125,  1751,  1748,
       0,     0,  1089,  1904,  2707,     0,     0,     0,  2702,     0,
    2708,     0,  1215,     0,     0,     1,     5,     0,     0,  1243,
    2016,  2377,     0,  2015,  2014,  2017,  2558,  2564,  2551,     0,
    1103,  1117,  2157,  2040,  2264,  1840,  1838,  1997,     0,   955,
    1005,     0,   960,     0,   958,     0,   971,   970,   968,     0,
     484,   953,     0,   208,     0,  2654,   962,  1152,  2581,     0,
     229,     0,    80,    82,     0,     0,     0,  2587,     0,     0,
       0,     0,   162,     0,   208,     0,   159,  2654,  2654,  2645,
    2647,  2649,   613,   611,     0,     0,     0,     0,     0,  1677,
    1741,  1744,  2078,  2022,  2089,     0,  1970,     0,     0,     0,
    1484,     0,  2028,     0,  2104,  2106,  2033,     0,     0,  1243,
    1243,   784,     0,     0,     0,  2129,  2130,  1976,     0,     0,
       0,  1967,  1977,  2040,  2171,  2172,     0,  1969,  2177,     0,
       0,     0,     0,  2195,  1974,     0,     0,  2232,  2234,     0,
       0,  2238,  2239,  2240,  2241,  1953,  1297,     0,   784,  1966,
    1973,  1959,  2265,  2270,  2271,     0,  2280,     0,     0,  2309,
       0,  2315,  2313,  2319,     0,     0,  2345,     0,     0,   784,
    1952,  2363,  2364,  2365,  2366,     0,  1968,  2071,  1975,     0,
    2377,  1243,   784,   784,     0,     0,     0,  2385,  2388,  2392,
       0,     0,  1235,     0,  2615,  1296,     0,     0,     0,  1373,
    1655,  1234,  1238,  1255,  1260,  1274,     0,  1289,  1308,  1309,
    1311,  1410,  1310,  1316,  1315,  1963,  1314,  1313,  1964,  1965,
    1236,  1307,  1987,  2010,  1986,     0,     0,     0,     0,     0,
       0,     0,  1683,     0,   208,  1667,  1679,    73,     0,     0,
       0,  1999,  1571,  2465,  2466,     0,    79,  1090,  1702,     0,
    1900,  1986,     0,  1914,     0,  1167,     0,   709,   530,   521,
       0,  1819,  1818,     0,  1896,  2596,     0,     0,  1143,  1703,
       0,  1891,     0,  1889,  1886,  1888,   272,     0,     0,   302,
       0,  2590,  2587,  2608,  1206,  2598,     0,     0,  1603,  1596,
       0,  1230,  2628,  2623,  2622,  2625,  2626,  1229,  2627,  1228,
    2624,  2621,     0,  1224,  1226,  1227,   827,     0,   830,   832,
    1719,  1720,   831,   840,     0,   829,     0,     0,     0,     0,
    2395,  2436,  2433,  2432,  2416,     0,   836,   838,   837,  2424,
     835,     0,  2361,  2396,  2403,     0,     0,  2394,     0,     0,
     828,  1832,     0,     0,  1832,     0,  1603,  1822,  1825,     0,
    2413,  1799,   911,   910,   909,  2414,  1818,     0,  1775,  1787,
       0,  1752,  1792,     0,  2415,     0,  1821,     0,  1603,  1832,
       0,  1768,     0,     0,     0,     0,   278,  1130,  1129,  1105,
    1126,  1127,     0,     0,  1108,  1110,  1111,   143,     0,  2718,
    2462,     0,  1958,  1957,  2008,  2704,  1956,  2712,  2714,  2698,
       0,  2701,  2700,  2709,  1208,     0,  2600,     6,    65,     0,
    2019,     0,     0,     0,     0,     0,     0,   987,     0,     0,
       0,     0,     0,  1137,     0,  1133,  1132,     0,  1106,  1119,
       0,     0,  1854,  2652,  2653,  2651,   846,     0,  2646,   211,
     969,     0,   485,   211,     0,     0,     0,     0,     0,   486,
     487,   418,   846,  1680,   975,   966,     0,     0,   965,  2654,
       0,     0,  1182,  1184,  1183,  1201,   231,   228,   209,     0,
       0,  1140,  1674,  1676,  1157,  2586,     0,     0,  2588,  2592,
    1295,  1294,     0,   156,   161,     0,     0,     0,     0,  2650,
       0,   613,     0,     0,     0,  2642,  2630,  2637,  2638,  2641,
    2640,  2639,     0,  2636,  2629,  2632,  2633,  2635,  2634,  2654,
    2648,     0,   916,   916,   916,     0,  1512,  1997,     0,     0,
       0,  2000,     0,     0,  1576,  1329,  1576,  1576,  1576,  1485,
       0,     0,     0,     0,     0,     0,     0,     0,  1576,  1367,
    1340,     0,  1368,     0,     0,     0,  1978,     0,     0,     0,
    2615,     0,     0,  1476,     0,  1455,     0,     0,     0,  2615,
       0,     0,     0,     0,     0,  1480,  1482,  1986,  1576,     0,
       0,  1576,     0,     0,     0,     0,     0,  1248,   824,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1576,  1576,     0,     0,  1576,  1381,  1980,     0,     0,
       0,  1979,     0,     0,     0,  1972,  1971,  1954,     0,  1384,
    1386,  1385,     0,  1576,  1576,     0,     0,     0,  1319,  1318,
    1320,     0,     0,     0,     0,  2416,  1451,  1453,     0,     0,
    1293,  1292,     0,  1291,  1290,     0,  1237,     0,     0,  1242,
    1241,  1298,  1299,  1300,  1301,     0,  1302,  1303,  1304,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1321,     0,
       0,  1955,     0,  1427,     0,  1662,  1669,  1664,     0,  1683,
    1665,  1673,   500,   499,  1688,  1689,  1671,  1684,  1685,     0,
    1670,     0,     0,  1657,     0,    72,     0,  1880,     0,     0,
       0,  1876,  1878,  1882,  1877,     0,     0,  1881,     0,  1879,
    1858,  1862,  1868,  1859,     0,     0,   303,   307,   309,     0,
     312,  2500,  2515,  2516,  2512,  2517,  2535,  2518,  2522,     0,
    2514,  2506,     0,  2521,     0,  2510,  2519,     0,  2504,     0,
    2520,  2525,  2536,  2508,  2513,  2491,     0,  2498,  2502,  1572,
    1573,     0,  2464,     0,  1998,     0,     0,     0,  1190,  1915,
    1916,  1912,  1571,  2451,  2454,     0,   708,   531,     0,     0,
     542,     0,     0,    68,    69,     0,  1174,     0,  1173,  1177,
       0,     0,  1512,  1892,  1893,     0,   270,   295,   290,   298,
     292,   294,   293,   299,   300,   301,   296,   291,   297,   284,
       0,  2500,     0,  2484,     0,  2591,     0,  2593,  2610,  2609,
       0,  2140,     0,     0,  1654,  1646,  1651,  1648,     0,     0,
    1230,  1604,     0,  1578,     0,     0,  1213,  1216,  1225,  2429,
       0,  2426,  2425,     0,     0,  2444,  2397,     0,  2438,  2439,
       0,  2430,     0,  2431,     0,     0,     0,     0,     0,  2428,
    2402,  2401,     0,  2404,  2405,     0,  2408,  2448,  2449,  2446,
    2447,  2445,  2421,  1828,     0,     0,  1798,     0,   613,     0,
       0,     0,     0,     0,   208,     0,  1769,     0,     0,   657,
    1791,  1826,  1827,  1832,     0,     0,  1832,     0,  1804,  1822,
       0,  1832,  1764,     0,     0,  1756,  1761,  1757,     0,  1763,
    1762,  1765,  1753,  1754,  1828,  1780,   143,  1822,  1790,  1797,
       0,  1779,  1786,     0,  1795,  1822,  1822,  1835,  1835,     0,
    1114,  1115,     0,     0,     0,  1104,  1749,  1223,     0,     0,
    1493,     0,  1495,  1492,  1491,  1490,  1512,     0,     0,  2699,
    2715,  2697,  2703,  2710,  2711,  2696,  1209,  1603,  2607,  2601,
    1207,  2602,  2605,     7,     4,  1244,   995,     0,  2018,     0,
       0,     0,     0,  2568,  2566,     0,  2567,  2565,  2541,  2552,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
     143,     0,  1121,  1853,     0,  1842,  1843,  1844,  1845,  1846,
    1841,  1839,  1855,  1856,   847,   846,   604,   607,   606,     0,
       0,   961,     0,   473,   959,     0,     0,   451,   429,   451,
     488,  1087,  1721,  1087,     0,  1721,  1721,  1087,  1721,     0,
       0,  1721,  1721,  1721,     0,     0,  1721,     0,     0,  1087,
       0,  1721,     0,  1072,     0,     0,  1721,  1721,  1721,  1721,
    1721,  1087,     0,     0,  1721,   518,  1721,     0,     0,  1097,
       0,     0,  1721,  1721,  1721,  1721,     0,  1721,  1721,     0,
    1721,     0,     0,     0,  1012,  1071,   617,   644,   645,   954,
    1077,  1011,  1013,  1025,   516,     0,  1049,  1074,  1075,  1073,
     996,     0,     0,   963,  1153,     0,     0,   906,   905,  1198,
       0,  1201,  1186,  1200,     0,   232,   234,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   143,   112,   134,
       0,     0,     0,     0,     0,     0,     0,    83,    84,  1142,
    1141,     0,  1139,  1165,  1164,  1162,     0,  1163,  1161,  1156,
    1158,  1159,  2585,  2589,   614,   846,   461,     0,   421,  2564,
       0,     0,     0,   210,  2691,     0,  2631,   145,   917,     0,
       0,     0,     0,     0,  1578,  1513,     0,  1578,  1678,  1742,
    1741,     0,     0,  1577,  1576,     0,     0,     0,     0,     0,
       0,  1486,     0,     0,  1478,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   785,  1391,     0,     0,     0,     0,
       0,     0,  1547,  1548,  1549,  1550,  1558,  1551,  1552,  1553,
    1560,  1565,  1554,  1555,  1561,  1562,  1563,  1556,  1564,  1559,
    1557,  1566,     0,  1546,     0,     0,  1477,  1570,  1567,  1569,
    1568,     0,  1456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1576,     0,     0,     0,  1576,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1402,     0,     0,     0,
       0,     0,  1576,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1363,     0,  1989,  1988,     0,     0,     0,
     879,     0,  1323,     0,  1322,  1520,     0,  2613,  2616,     0,
       0,     0,     0,  1233,  1240,  1239,  1246,  1245,  1247,  1251,
    1256,  1249,  1253,     0,  1305,  2084,  1258,     0,     0,  1286,
    2615,  1583,  1287,  1272,  1277,  1278,     0,  1275,  1276,     0,
    1280,     0,  1279,  1283,  1284,  1285,  1288,     0,     0,     0,
       0,  1312,  1317,  1337,  1238,     0,  1428,  1429,  1983,  1990,
       0,  1659,  1672,  1820,  1686,  1721,  2549,  1666,  1091,     0,
       0,    74,    76,  1873,  1870,  1869,  1871,  1875,   143,  1872,
       0,  1883,  2129,  2363,  2366,   316,     0,   288,   287,   289,
     313,     0,     0,  2501,  2499,  2533,  2532,  2537,     0,  2534,
    2530,  2523,  2559,  2527,     0,  2559,  2529,  2528,  2559,  2524,
    2531,  2559,  2496,     0,  1575,  2167,  2250,     0,  1578,  2468,
    1512,  2717,  1990,     0,  1913,     0,     0,     0,  1168,     0,
       0,   529,   528,   527,   526,     0,   544,   524,   532,    70,
       0,     0,  1897,     0,     0,     0,     0,  1145,     0,  1894,
     143,  1887,     0,     0,  2499,     0,  2496,  2594,  2599,  2009,
    1653,   833,  1647,     0,  1600,  1597,  1599,  1612,  1613,  1611,
    1605,  1606,  1610,  1609,  1212,  1222,  1218,  1221,     0,  1584,
    1231,     0,   845,   844,   841,   839,     0,     0,     0,     0,
    2443,  2435,  2437,  2434,  2417,  2418,  2419,     0,  2422,  2420,
       0,  2407,     0,  1830,  1833,  1834,     0,     0,  1813,  1807,
    1806,  1802,  1808,     0,  1803,  1817,  1816,  1815,  1777,  1776,
    1772,  1823,  1812,  1810,  1800,  1832,  1811,  1809,  1758,  1759,
    1760,     0,  1603,     0,  1830,  1805,  1832,  1822,     0,  1832,
    1832,     0,     0,  1794,  1796,  1128,  1113,  1112,     0,     0,
    1522,     0,  2603,     0,     0,     0,  1509,  1523,     0,  1523,
       0,     0,     0,     0,  1571,  2705,  2713,     0,  2606,   974,
       0,  2553,  2555,  2544,  2543,  2542,  2539,     0,     0,     0,
       0,     0,   988,   990,     0,     0,   973,   977,   978,   982,
     139,  2005,  1630,  1631,  1629,  1627,  1628,   140,   141,  1620,
    1621,  1617,  1618,  1616,  1619,   142,  1136,  1135,  1134,  1118,
    1107,     0,     0,  1123,     0,   605,  1721,  1721,     0,     0,
       0,     0,     0,     0,     0,     0,   212,   221,     0,     0,
     427,   428,  1721,   426,   474,   475,   478,   479,   480,     0,
       0,     0,     0,     0,     0,     0,     0,   164,   481,  1721,
    1721,   423,   452,   453,   456,   457,   458,   459,   460,   419,
       0,   424,  1088,   947,  1169,  1053,     0,   688,   947,   902,
     907,   907,  1051,  1722,     0,     0,  1169,     0,     0,     0,
       0,     0,  1169,     0,     0,     0,     0,  1721,     0,  1064,
       0,  1007,     0,     0,     0,     0,     0,  1065,     0,     0,
       0,  1008,  1721,     0,     0,     0,     0,     0,     0,  1169,
       0,     0,     0,     0,  1169,  1033,  1100,  1099,  1098,     0,
       0,  1169,  1169,     0,     0,     0,     0,   650,   651,     0,
       0,     0,   642,  1076,  1031,  1032,   618,   846,  1009,   517,
    1010,   687,     0,  1094,   684,   690,  1993,     0,   998,  1000,
    2655,  2656,  2657,  1189,  1181,  1188,  1185,  1201,     0,  1538,
    1187,   230,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    81,     0,     0,     0,     0,     0,
       0,     0,     0,  1675,  1166,  1160,   157,   846,  1721,  1721,
    1721,  1721,   425,   462,   463,   466,   467,   468,   469,   472,
     470,   471,     0,     0,   437,   987,     0,   173,  2685,     0,
       0,   414,   413,     0,   615,     0,     0,   918,     0,     0,
       0,  1578,     0,  1595,  1998,  1739,     0,  2001,     0,  1387,
       0,  1432,  1463,  1434,  1435,  1436,     0,     0,     0,     0,
       0,  1388,     0,  1338,     0,  1389,  1390,     0,     0,     0,
       0,  1438,     0,   786,     0,     0,  1341,  1342,  1334,  1326,
       0,     0,  1412,     0,  1459,  1343,     0,     0,     0,     0,
       0,  1413,  1481,     0,  1483,  1990,     0,  1442,  1395,  1348,
       0,  1440,     0,  1349,  1414,  1415,  1416,  1397,     0,  1418,
       0,  1398,     0,     0,  1401,     0,     0,  1351,  1446,  1444,
       0,     0,     0,     0,  1448,  1353,     0,     0,     0,  1352,
       0,     0,     0,     0,     0,     0,     0,  1355,     0,  1335,
    1445,  1447,  1404,     0,     0,     0,     0,     0,  1364,     0,
    1219,  2617,  1520,     0,     0,  2608,  1327,   949,  1452,  1991,
    1252,  1257,  1250,  1254,  2615,     0,     0,     0,     0,  1270,
    1269,     0,     0,     0,  2615,  1583,  1273,  1431,  1419,     0,
    1476,     0,  1663,  1660,  1687,     0,     0,  1093,  1092,  1668,
    1091,    77,     0,  1874,  1867,  1884,  1860,     0,   308,   317,
     310,   314,   315,   311,  2526,     0,  2507,     0,  2511,  2505,
    2509,     0,     0,  2497,     0,  2503,  2478,  2472,  2479,  2481,
    2475,  2480,  2482,  2473,  2474,  2469,  2476,  1603,     0,     0,
    1191,  1193,  1194,  1192,  1201,     0,     0,  2457,  2458,  2456,
    2455,   534,     0,   552,  1637,  1638,  1623,  1624,  1622,  1625,
     543,  1626,  1636,     0,   555,     0,     0,     0,  1899,  1898,
       0,  1175,  1178,  1179,  1150,  1149,  1151,  1144,  1146,  1147,
    1223,     0,  1716,  1715,     0,  2597,  1693,  1695,  1704,  1707,
       0,  1890,     0,   285,     0,     0,     0,     0,     0,     0,
    1920,  1645,  1601,  1602,  1985,     0,     0,     0,  1579,     0,
    1580,     0,     0,  2399,     0,  2441,  2440,  2442,     0,  2406,
    1829,     0,  1781,     0,  1801,  1814,  1774,     0,  1793,  1755,
    1783,  1773,  1578,  1822,  1770,  1771,  1836,  1837,   144,  1219,
    2608,  1571,  1518,  2604,     0,  1511,  1510,  1524,     0,     0,
    1523,  1523,     0,  1498,  1497,  1578,  1734,     0,  1496,  1535,
       0,  2716,  2554,     0,     0,  2540,   993,   991,   992,   994,
     989,   981,   980,   208,   979,   985,     0,   984,  1120,     0,
       0,  1116,  1847,     0,     0,   957,   215,   218,   216,     0,
     217,     0,     0,   483,   482,     0,  1820,   476,   168,   167,
     169,   170,   172,   171,   166,   972,     0,     0,     0,  1820,
     454,   430,   431,   434,   435,   436,   689,   948,  1036,     0,
       0,     0,   907,   683,   947,   916,   908,   947,   947,  1083,
    1084,     0,     0,   629,   625,  1055,   638,  1034,  1019,  1035,
    1046,  1048,     0,   627,   628,   652,     0,     0,   640,     0,
       0,  1014,  1062,  1063,  1091,   622,   656,     0,     0,     0,
     665,   666,   664,   646,   653,  1085,  1086,   623,   624,  1057,
       0,  1591,  1593,  1600,   631,   630,   519,   626,     0,     0,
    1068,  1041,     0,   663,   661,   658,   660,   659,   662,   641,
     633,   632,   635,   634,   637,   636,   649,   639,  1024,     0,
    1087,  1087,  1050,     0,   671,   672,   674,   675,  1996,     0,
    1096,  1052,     0,   676,   685,   677,     0,     0,     0,     0,
       0,   178,  2659,     0,  1541,     0,  1542,  1539,  1540,   233,
     135,   133,   115,   119,   121,   114,   117,   118,   120,   124,
     123,   125,   126,   129,   130,   127,   122,   128,   116,   131,
     113,     0,    86,    87,     0,    88,    89,     0,    90,    91,
       0,    92,    85,     0,     0,     0,     0,  1820,   464,     0,
       0,  1721,  1721,   420,   438,   439,   442,   443,   444,   445,
     446,   449,   447,   450,   448,   976,     0,     0,   235,   669,
     670,   668,   667,     0,  2692,   417,   415,   416,     0,     0,
     687,   146,   516,   616,   619,   940,   942,   941,   932,   931,
     147,   150,   153,  1740,     0,  1544,  1614,     0,     0,  1433,
       0,  1487,     0,  1331,   798,   798,   782,  1471,   778,  1475,
     798,  1467,   782,  1469,     0,     0,  1479,     0,     0,     0,
    1439,  1437,     0,     0,     0,     0,     0,     0,  1457,     0,
       0,     0,  1336,     0,  1423,  1443,  1441,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1449,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   868,   874,   877,   878,   880,   872,     0,
    1406,  1324,  2611,  1220,  1578,     0,  2618,  2620,  1219,     0,
    2603,     0,     0,  1454,     0,  1267,  1263,     0,  1261,  1582,
    1282,  1281,     0,     0,     0,  1271,  1430,     0,  1984,  1992,
    1078,   497,  2550,  1658,    75,  1863,     0,     0,  2563,     0,
    2562,     0,  2545,  2548,  1997,     0,     0,     0,     0,  2467,
       0,  1730,  1730,     0,  1201,  1203,  1906,  2459,  2460,     0,
     535,   536,   538,   540,   530,     0,   522,   525,     0,   534,
       0,  1148,     0,  1694,     0,     0,     0,  1711,  1982,  1981,
    1988,  1713,  1724,  1712,  1718,     0,     0,     0,     0,     0,
       0,   834,     0,  1928,  1598,  1608,  1607,     0,     0,  1595,
    1232,     0,  2398,  2423,  1831,  1603,  1789,  1788,  1766,  1603,
    1785,  1832,  1516,     0,  1517,  1494,     0,  1502,     0,     0,
       0,     0,     0,     0,     0,  1595,     0,  1529,  1530,     0,
       0,  1533,  1536,  1537,  1515,  2706,  2556,  2557,   986,     0,
    1122,     0,   655,   654,   220,   219,   225,   226,  1634,  1632,
    1633,   489,   501,  1635,   502,   477,   165,   490,   491,   455,
       0,   432,  1038,     0,   947,   903,   904,   916,     0,   916,
     916,     0,     0,  1018,     0,  1157,     0,  1023,   840,   647,
    1027,  1061,  1060,     0,  1028,   648,     0,  1016,     0,  1594,
    1015,     0,  1043,  1021,  1883,  1054,   687,  1095,   884,   774,
     722,   713,   798,   716,   715,   760,   782,   727,   778,   776,
     745,   778,   778,   753,   752,   770,   751,   756,   735,   854,
     854,   734,   773,   854,   757,   755,   759,     0,   761,   778,
     766,   754,   758,   775,   750,   747,   772,   798,   782,   782,
     731,   771,   854,     0,   764,   798,   691,   802,   733,   854,
     861,     0,     0,   798,   800,  1995,     0,   188,     0,     0,
     997,     0,   181,   179,   190,     0,     0,     0,  1202,     0,
       0,   136,   138,    93,     0,    95,    97,   102,     0,   104,
       0,   107,     0,   109,  2006,   111,     0,    98,     0,   496,
     495,   494,   493,   465,     0,     0,     0,     0,  1820,   440,
     160,     0,     0,     0,   236,   238,   239,     0,   246,     0,
     505,     0,   503,     0,   515,     0,  1917,   846,   620,     0,
       0,     0,  1514,     0,     0,  1738,     0,  1365,  1488,     0,
       0,   799,  1464,   854,     0,  1473,     0,  1474,   780,   779,
    1466,  1468,  1472,  1470,  1330,  1339,  1411,  1333,  1332,     0,
       0,  1371,  1393,     0,  1372,     0,     0,     0,     0,     0,
    1345,     0,  1347,     0,     0,  1425,  1396,  1417,  1374,  1399,
       0,  1350,  1325,     0,  1375,     0,  1380,  1378,     0,  1354,
       0,     0,  1361,     0,  1359,     0,  1360,     0,  1362,  1403,
    1405,     0,     0,   879,   865,   866,   867,     0,   869,   871,
     873,     0,     0,  1584,  1521,  2619,  1210,  1211,  2612,  2614,
     950,  1259,     0,  1268,  1265,     0,  1262,  1420,  1661,  1080,
    1079,  1865,     0,  1861,   325,   320,   328,   322,   324,   323,
     329,   330,   331,   332,   326,   321,   327,   319,   318,  2560,
       0,  2571,     0,     0,     0,     0,     0,     0,  1730,     0,
    1690,  1692,  1195,  1201,  1203,     0,  1196,  1917,   539,     0,
       0,   559,     0,   557,   533,     0,  1176,  1219,     0,  1705,
    1708,  2600,     0,     0,     0,  1729,  1728,     0,  1725,  1727,
       0,   286,     0,  2489,     0,     0,     0,     0,     0,     0,
       0,  1921,  1923,     0,  1652,  1588,  1587,  1581,  1603,     0,
    1782,   143,  1778,  1519,     0,  1490,     0,     0,     0,  1490,
    1500,  1499,     0,  1733,  1614,  1735,  1525,  1525,  1534,   983,
    1124,   433,     0,     0,  1037,     0,     0,     0,     0,     0,
       0,  1067,     0,  1094,  1020,  1047,  1070,     0,  1058,  1169,
    1592,  1069,  1042,  1044,  1145,     0,   673,     0,   888,   721,
     714,   732,   730,   787,   777,     0,   787,   787,   848,   859,
     857,   851,     0,   855,   856,   741,   760,   736,     0,   854,
     749,   740,   762,   765,   767,   769,   787,     0,   854,   729,
     728,   738,   725,   787,   810,     0,     0,     0,     0,   806,
       0,   882,     0,     0,   813,   692,   803,   805,   694,     0,
       0,   763,   854,   718,   862,   861,   720,   854,   861,   787,
       0,   801,   787,     0,   189,   177,     0,     0,   999,  1001,
       0,     0,  1002,  2661,     0,  2663,  1199,  1543,   132,     0,
      94,     0,   103,     0,     0,   108,     0,     0,    99,     0,
       0,   422,   492,   498,   441,     0,     0,  2686,     0,     0,
    2684,   249,   247,   248,     0,   242,   244,   239,     0,     0,
       0,   615,  1919,  1918,   504,   600,   621,     0,     0,     0,
    1545,  1615,     0,  1489,     0,     0,     0,     0,  1465,     0,
       0,     0,     0,     0,  1460,  1462,  1458,  1450,     0,     0,
       0,     0,     0,  1328,     0,  1421,     0,     0,     0,     0,
       0,     0,  1358,  1356,  1357,   863,  1408,     0,   876,   870,
     868,   875,     0,  1580,  1264,     0,  1082,  1081,     0,     0,
    2561,     0,  2495,  2547,  2546,  2564,  2564,  2564,     0,  1691,
       0,  1197,  1204,     0,   537,     0,   532,     0,   556,     0,
     523,   599,  1714,  1706,  1709,  1710,  1990,  1723,     0,  1717,
       0,  2486,  2487,  2485,     0,     0,     0,     0,  1922,     0,
       0,  1929,  1931,  1589,  1590,     0,  1585,  1639,  2400,  1784,
       0,     0,  1505,  1508,     0,     0,     0,  1732,     0,     0,
       0,  1040,     0,   686,     0,     0,     0,  1600,   945,     0,
       0,     0,     0,     0,     0,     0,  1066,  1960,  1056,  1029,
    1094,  1017,     0,  1022,   643,     0,   887,     0,   892,   791,
     792,   793,   742,   788,   790,     0,   744,   712,   850,   849,
     853,     0,   852,   861,   737,   768,   743,     0,   739,   726,
     816,   817,   819,   818,   815,   825,   808,   826,     0,     0,
     820,   821,   822,   814,     0,   804,     0,     0,   812,   807,
     717,   719,   723,   724,   710,     0,   711,  1994,   175,   180,
     191,   192,   967,  2660,     0,  2658,     0,   137,    96,   105,
     106,   110,     0,     0,     0,  2683,   186,     0,   237,   840,
     240,  2693,   246,     0,     0,   506,   508,   516,   601,     0,
       0,     0,     0,  1366,   796,   794,   797,   795,   783,     0,
    1369,  1370,  1394,     0,  1392,     0,  1346,  1422,     0,     0,
    1400,  1376,  1379,  1377,  1382,  1383,     0,  1407,     0,  1595,
    1266,  1866,  1864,     0,  2569,  2569,  2569,  2477,     0,     0,
       0,   545,     0,   562,   561,   558,  1726,  2488,  1926,  1927,
       0,  1924,     0,     0,  1930,  1586,     0,  1649,  1503,     0,
    1506,     0,  1501,     0,  1526,     0,  1538,     0,  1039,     0,
       0,   919,     0,   944,     0,     0,     0,  1962,  1961,  1026,
    1030,  1059,     0,   885,     0,   889,   890,   891,     0,   883,
     789,     0,   951,   860,   858,     0,   809,   811,   816,   695,
       0,   182,  1003,   353,  2662,  2671,  2668,  2673,  2665,     0,
       0,   163,   178,   187,  2687,   823,   213,   243,     0,     0,
    2600,  1917,     0,   511,   919,   921,   923,     0,  1461,     0,
    1424,  1426,   864,     0,  1603,  2572,     0,  2493,  2494,  2492,
       0,     0,     0,   553,     0,     0,   587,  1925,  1933,  1932,
       0,  1230,  1650,     0,     0,  1528,  1527,     0,     0,     0,
     919,     0,  1721,   678,   920,   936,   935,   925,  1600,     0,
     921,   923,     0,   886,     0,     0,   854,     0,   854,     0,
       0,   184,   379,     0,   365,   351,     0,     0,     0,   355,
     193,   196,   194,     0,   195,   201,     0,   202,   203,   204,
     205,   206,   197,   377,   378,   200,   198,   199,     0,  2012,
       0,  2013,  1215,  2668,     0,     0,     0,  2664,  2597,   100,
       0,   190,     0,  2694,   245,  2679,   509,   507,     0,  2597,
     148,     0,   151,   922,   938,   929,   154,   924,   937,   927,
     781,  1344,  1409,  1639,     0,     0,     0,     0,     0,  2570,
    2574,  1731,  1512,   541,     0,   546,     0,   549,   551,   565,
       0,  1721,     0,     0,  1721,  1721,  1721,  1721,   580,   588,
     590,     0,  1641,  1214,  1504,  1507,  1532,  1531,   682,   681,
     934,     0,   926,   943,   946,   679,   680,     0,   898,     0,
     897,     0,   894,   893,   746,   952,   748,     0,   183,     0,
     176,     0,     0,   364,   367,     0,     0,   370,   360,   359,
     361,     0,   354,   353,   353,   407,   358,   404,   403,   396,
    2672,     0,  2600,  2669,     0,     0,     0,  2666,     0,     0,
    2688,   223,   222,   214,     0,   353,  2677,  2678,     0,  2681,
     513,   512,  1078,     0,  1078,   930,  1078,   928,  1230,  2575,
    2578,  2576,  2577,  2579,  2573,  1907,   554,   547,     0,     0,
     563,     0,  1721,  1721,     0,     0,     0,     0,     0,   560,
     589,  1721,  1644,     0,  1642,   933,  1045,   900,   901,   899,
       0,     0,   705,   185,   380,   391,   394,   386,   366,     0,
       0,     0,   356,   353,     0,   340,   338,   339,   345,   346,
     347,   348,   349,   350,   341,   344,   342,   343,   353,     0,
     254,     0,     0,  2670,  2667,     0,  2674,     0,   101,   192,
     213,   224,  2695,  2680,   353,  2600,   149,   939,   152,   155,
    1217,   833,   553,   550,   573,   566,   569,     0,   598,     0,
       0,   594,   595,   593,   591,   584,     0,   582,     0,  1640,
       0,     0,     0,   707,   706,   696,     0,     0,   353,   387,
       0,   362,     0,   371,     0,     0,   252,   410,   408,   250,
     398,   398,  2675,  2676,   174,  2689,  2682,   514,  1908,   548,
     573,     0,   571,     0,   567,   564,   568,   596,   597,     0,
     581,     0,   592,  1643,   896,   895,     0,   700,   693,   697,
     699,     0,     0,   388,   394,   384,   392,   353,     0,     0,
     352,     0,   406,   253,     0,     0,     0,   353,     0,   397,
     399,   401,   353,  1934,   570,     0,   578,   574,   576,   579,
     587,   586,   583,   702,   701,   698,   704,   703,     0,   385,
       0,     0,   383,   363,   368,   353,   411,   353,   264,   263,
       0,   256,   333,   405,     0,   255,  2690,     0,  1920,   572,
       0,     0,   585,   389,     0,   353,     0,   353,     0,   353,
       0,     0,     0,     0,     0,   251,     0,  1928,   577,   575,
       0,   381,   353,   369,   374,     0,     0,   259,   334,   335,
       0,   261,     0,  1936,   353,   353,   370,   373,   412,   409,
       0,   336,   257,   258,   269,   268,     0,  1935,     0,  1940,
     353,   353,   375,   277,   275,   353,   265,   273,   267,     0,
     274,     0,   262,     0,     0,  1947,     0,   260,   276,   337,
    1938,  1939,  1937,  1942,     0,     0,  1944,  1945,     0,  1909,
     266,  1946,  1941,     0,  1948,  1950,     0,  1943,     0,     0,
    1949,  1951
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    58,   657,  1594,    59,    60,    61,    62,    63,  1413,
      64,   877,  1335,  2001,  2002,    65,   576,    66,  1109,  1110,
    1767,  1768,  2962,  3374,  3375,  2971,  3388,  2965,  3378,  3379,
    2968,  3382,  3383,  1757,  1758,  3370,  3371,  1759,  1565,    67,
    2454,  3419,  4332,  3420,  4334,  3421,  4336,  1785,   539,  2276,
    2277,  1135,  2997,  3360,  4091,  3364,  4171,  4290,  4102,  2378,
    3722,  4092,  4093,  4180,   570,   571,  1792,  1641,  4213,  2256,
    4323,  2257,    68,   700,  1107,  1734,  1735,  3403,  3404,  3749,
    3405,  3754,  3755,  3756,  3757,  4507,  4383,  4459,  4508,  4562,
    4590,  4596,  4540,  4605,  4606,  4607,  4594,   917,  4608,    69,
     606,   607,   919,  1439,  2015,  1440,    70,    71,   569,  1356,
    1357,  1358,  1359,  2623,  2016,  2618,  2619,  3537,  4541,  4592,
    4611,  4384,  4385,  4297,  4386,  4183,  4387,  4301,  4388,  4186,
    4389,  4390,  4391,  4392,  4499,  4393,  4296,  4533,  4380,  4381,
    4501,  4574,  4587,  4394,  4193,  4291,  4446,  4194,  4292,  4494,
    4376,  4495,  4528,  4570,  4377,  4447,  4531,  4450,  4395,  4401,
    4509,  4396,  4402,  4397,  4198,  4308,  4400,  4306,  4399,  4505,
    4504,  4558,  2453,  3008,   686,   687,   712,  2444,   688,  1124,
    1080,  1643,  2289,  2290,  2821,  2822,  2983,  2984,  2985,  2281,
    2282,  2283,  2432,  2433,  2434,  2263,  2264,  2265,  1647,  2260,
    2261,   689,  1081,  1091,  2284,  2285,  2286,  2989,  2436,  2437,
    2438,  2439,  1324,  2993,  1325,  3251,  3011,  3412,  4110,  3764,
    4219,  4415,  3413,  3414,  2369,  2342,    72,   592,   899,  1410,
    2675,  1411,  2677,  3159,  3160,  3161,  2061,  2062,  4031,  2066,
    2674,  4133,  4422,  4246,  4247,  2662,  4245,  3166,  3562,  3563,
    3837,  4033,  4136,  4427,  4349,  4475,  4425,  4471,  4426,  4473,
    4551,  4517,  4518,  4359,  4436,  4437,  4479,  4520,  4258,  4259,
    4260,  2695,  3989,  2426,  1635,  1636,   540,   541,   542,   709,
    3012,  1705,  3013,  3014,  2909,  1707,  1708,  2865,  1518,  2899,
    2873,  3003,  2913,  2914,  2915,  2916,  2917,  2923,  2833,  2296,
    2297,  2374,  2926,  3346,  3947,  4488,  4489,  4490,  4445,    73,
     896,  3979,  3655,  3677,  3348,  3349,  3350,  3351,  3352,  3353,
    3354,  3437,  3438,  3435,  1182,  3912,  3913,  3914,  3431,  3432,
    3712,  3695,  3696,  3697,  3980,   839,  3936,  3662,   952,   953,
    2710,   968,   969,  2113,  1471,  3698,  2114,  1639,  3663,  3664,
    3665,  3706,  3492,  4016,  3498,  3499,  3500,  3093,  3094,  3095,
    3096,  3097,  2567,  3699,  2925,  3648,  3905,  3908,  4079,  4282,
    2298,  2834,  1730,  2837,  1010,   543,  2300,  2301,  1798,  1799,
    4153,  4222,  4226,  4154,  4227,  4223,  4155,  4156,  4157,  4229,
    4225,  3018,  3886,  3887,  2826,  3113,  4081,    74,  1092,  1076,
    1083,  1079,  1099,   695,  1720,    75,  2216,  2217,  2218,  2219,
    1611,  2212,  2213,   662,  2379,  2931,  3962,   679,  1709,  3639,
    3275,  3644,  4069,  1710,  1711,  2848,  1712,  3262,  3624,  1713,
    3292,  3642,  3902,  2849,  2850,  1714,  1715,  1716,  3274,  3286,
    3900,  3518,  3519,  3520,  2302,   888,  2609,  2921,  2350,    76,
      77,    78,   670,  1620,    79,  1024,  1025,  1026,  1068,  1069,
    1622,  2243,  2791,  1019,  1020,  1021,   671,  1066,    80,   704,
    1772,    81,  1421,  2687,  2688,  2689,    82,  1100,    83,    84,
     705,  1779,  1780,  1781,    85,  1405,   138,    86,   907,  1416,
    1418,  1419,    87,   699,  1101,  1102,  1103,  1104,  2384,    88,
    2053,  2650,  2651,  2652,  2653,  1731,  2388,  1732,  1733,  3556,
      89,    90,   654,  2574,   612,   613,   614,  3102,  3103,  3104,
    2106,   942,   943,   944,  1466,   840,   841,  1276,  1050,  1824,
     843,   844,   845,  1277,  1278,  3700,   846,  1289,  1957,   847,
     848,   849,   850,   851,   852,  3464,  3465,  3795,  1985,  1986,
    1987,   853,   854,  1266,  1873,  3457,  3058,  3784,  1815,  3044,
    1865,  1866,  1204,  1205,  1170,  2479,  1821,  1570,  1571,  1572,
    1573,  1574,  2191,  1804,  1805,  1575,  2181,  2570,  2571,  2182,
    2758,  3879,  3230,  3231,  3232,  3233,  3234,  2935,  2936,  2937,
    3024,  1862,  1863,  1871,  1391,  1392,  1816,  2109,  3199,  2589,
    2720,  3595,  3866,  1719,  2881,  2882,   928,  1587,  2095,  2714,
    1460,  1461,  2100,  2101,  3425,  4595,  3098,  2227,  3252,  2671,
    2672,  4047,  4363,  4364,  1454,  1455,   930,   931,  1456,    91,
     551,    92,  1999,  2603,  3130,  1332,  2615,  1112,   728,   693,
     564,  1326,  1327,  1328,    93,    94,   580,   601,   910,  2696,
    2697,  3176,  2698,  2699,  2700,  3183,  2303,  2304,  3184,  3577,
    3578,  3579,  3550,    95,  2765,  2766,   602,    96,  1161,   549,
     550,    97,  1028,   639,  1541,  1542,  1543,  2162,    98,   631,
    1011,  3205,  3209,  2148,   903,  1329,  1523,  1014,  1524,  2133,
    2732,  1506,  2173,    99,  1072,  1071,  1630,   100,   675,  1631,
     101,   878,  1350,  2011,  3135,  3523,  3818,  1351,  1352,  2616,
     102,   603,   914,   915,  1424,  2080,   103,   594,   904,  2072,
     104,   584,   105,   106,   893,  3557,  4421,  4513,   588,  2055,
    1401,  3765,  3193,  3591,  3592,  3594,  3861,  3862,  4548,  4599,
    4622,  4615,  4625,  4626,  4629,  4634,  4635,   855,  1035,   856,
    3896,   857,   858,   859,  3177,   860,  2096,   861,  2767,   862,
    2827,  1576,   729,   574,   518,  3384,  3385,   663,  1036,  2090,
     891,  4200,   665,   666,   520,   521,   107,   627,   973,   977,
    1493,  1494,  1495,  1015,  1487,   974,  1496,   630,   960,   961,
    1483,   962,  1481,   963,  2121,  1476,  1502,   108,   894,   526,
    1403,  1404,  2659,   109,   641,   110,   111,  1393,  2048,  2049,
    2645,  3148,  2646,   112,   920,  1443,   113,   880,  1385,  2634,
    1386,  2024,  1387,  1388,  2038,  2032,  2041,  2035,  2207,  1607,
    1608,  3145,  1997,   667,   668,  2626,  3139,  3140,  1057,  4127,
    3822,  4239,  4240,   114,   139,   529,   707,  1119,  1446,   115,
     116,   117,   118,   924,  1589,  1590,  2752,  1591,  1592,  1450,
    1937,  1938,  1262,  1263,  3105,  3106,   945,   716,  1144,  1136,
     132,   133,   134,   719,   720,   135,  1097,  1098,  2932,  3366,
    3724,  3965,  3966,  4097,  4208,  4204,  4205,  4098,  4202,  4207,
    4328,  4329,  1138,  4414,  1139,  1140,  2998,  3977,  4212,  4410,
    4512,  1141,  2450,  3408,  4106,  4325,   119,  1041,  1037,   651,
    1585,  1579,  1581,   120,   121
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -4017
static const int yypact[] =
{
    4836,  2199,   155, -4017,  -111,   878, 55323,    60,   602,   602,
    -166,  1591, -4017,   960, -4017, -4017, -4017,  3257, -4017, 55323,
     155,   294, -4017, 27800, -4017,   251,   775,   176,   160,   602,
     155,   542, -4017, 55323, -4017,   823,  1354,   155,  1339, -4017,
   48933, -4017,  -166, 55323, -4017, 31014, -4017, -4017, 48933,    64,
      74,   649,   957, -4017,  1154, 55323,  2435,   -96,  1500,  1451,
   -4017, -4017,  1102, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, 43821, -4017, -4017,  1037, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   28443, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017,  1473, 55323,  1596, 55323,  1572, 55323, 47655, 55323,
   27800,  1574,  1716, -4017, -4017,  1762, -4017, -4017,   602,  -166,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,  1227,
   -4017, -4017,  1328,  1746, -4017, -4017, -4017, -4017, -4017,  1926,
    1725, -4017,  1790, 47655, -4017, 55323, -4017, -4017,  1725,   524,
    1411, -4017,  1442,  1775,  1795,  1799, -4017, -4017, -4017, 49572,
     960, 10155,  1574,  1574,  1574, 55323,  1838,  1574,  1574, 55323,
   -4017,  1574,  1574,  1574,   602, -4017, -4017, -4017, -4017,  1919,
   -4017, -4017, 55323,  1687,   219,   600, 47655, -4017, -4017, -4017,
    1841, 55323, -4017, -4017, 13460, -4017,  1855, -4017, -4017, -4017,
     602, 13460,  2034,  1938,   270, 55323, -4017, -4017,   602, -4017,
   -4017,  1865, -4017,  1367,  1506, -4017, -4017,  1647, -4017, -4017,
     161, -4017,  1547,  1499,  2206,    95,  1672,  1509,   203,   466,
   41265,   117,   712,   854, 31656, 41904,  1511, -4017, 50211,  1512,
     105,  5862,  1647, -4017,   -19,   667, -4017,   -19, -4017, -4017,
   55323,   602,  1841, -4017, -4017,   173,   173,   173,  2095,   173,
   -4017,   173, -4017,   -96,  1569, -4017, -4017,  1529, 55323,  1581,
   -4017,  1587,  2022, -4017, -4017,  1590,  2024,  -113, -4017,  2197,
   -4017,  1650,  2157,  2104,  2452, -4017, -4017,  1611,  1086, -4017,
    1703, 44460, -4017, 55323, -4017,  1897, -4017, -4017, -4017,  2147,
   -4017, -4017,  2114, -4017, 55323,  1789, -4017, -4017, -4017, 27800,
    1637, 55323, -4017, -4017, 27800, 27800,   236,   697,  1675, 55323,
   55323,  2129, -4017,  2320, -4017,  1878, -4017,  1106,  1430,  1762,
    2327, -4017,  1725, -4017, 55323, 55323, 55323, 27800,   199, -4017,
    1683, -4017,  1700,  1711,  1714, 18087, -4017,  1724,  1770,  1792,
   13460,  1794,  1798,  1801,  1803,  1809,  1811,  1821,  1852,  1581,
    1581,  1863,  1867,  1870,  1876,   527,  1888, -4017,  1891,  1896,
    1898, -4017, -4017,  1912,  1918,  1920,  1930, -4017,  1939,  1945,
    1948, 14121,  1950,  1960, -4017, 25223,  1976,  1978,  1984,  1995,
    1997,  2007,  2027,  2030,  2032, -4017, -4017, 13460,  1863, -4017,
   -4017, -4017,  2036,  2047,  2052,  2055,  2059,  2065,  2071,  2079,
    2107,  2139,  2144,  2154,  2162,  2170,  2176,  2178,  2182,  1863,
   -4017,   566,  2184,  2195,  1202,  2214, -4017,  2230, -4017,   259,
    2232,  1581,  1863,  1863,  2234,  2238,  2247,  2250,  2252,  2262,
   18087, 18087, -4017, 18087, 13460, -4017, 55323, 32298, 55323, -4017,
    1692, -4017, 40623,  3677, -4017,  2587, 18087,   955, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017,  1805, -4017, -4017, -4017, -4017,
   -4017,  2118, -4017,  2263,  1754, 55323, 55323, 55323,  2010, 55323,
   55323, 47655,   549, 55323, -4017, -4017,  1574,  1780,  3786, 34224,
    3673, -4017,   139, -4017, -4017, 55323, -4017, -4017,  1865,  1910,
     589,  1767,  2462,   250, 27800, -4017,  1873,   589,  1416, -4017,
    -145, -4017, -4017,  2298, -4017, -4017, 44460, 27800, -4017, -4017,
   27800, -4017,  2571, -4017,  1991, -4017, -4017,  1805,  3654, -4017,
    4501,  2208,   697,   367, -4017, -4017, 30372,  2614,  2408, -4017,
    2556,   238, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, 10155,  2206, -4017, -4017, -4017, 55323, -4017, -4017,
   -4017, -4017, -4017,  2687, 13460, -4017, 44460,   -37,  2500,   642,
   -4017,  2145,  2264, -4017,   133,   105, -4017, -4017, -4017, -4017,
   -4017, 55323,   854, -4017,  1512,   105, 32940, -4017,  9494,  2757,
   -4017,   -14,  2267,  1833,   -14, 45099,  2408,   944, -4017,   260,
   -4017,  2735, -4017, -4017, -4017, -4017,  2397,  2372, -4017, -4017,
     341,  1729, -4017,  2773, -4017,   728, -4017,  2403,  2408,   -14,
     944, -4017,  2661,  2793,   422,   584, -4017, -4017, -4017, -4017,
    2293, -4017,   804,  2875, -4017,  2307, -4017,  2778, 27800, -4017,
   -4017, 22642, -4017, -4017, -4017,  2310, -4017,  2598,  2421, -4017,
    2340, -4017, -4017,    48, -4017,  2325,    14,  2834, -4017,  2332,
   -4017,  2333,  2945, 47655,   128,   138, 44460,  2362,  2837,  2842,
    2846,  2851,  2852, -4017,  2853, -4017,  2348,  2856, -4017,  2618,
   47655,  2619, 45738, -4017, -4017, -4017,  2906,  2930, -4017, -4017,
   -4017,  3043, -4017, -4017,  2394,  2943,  2943,  2943,  3052, -4017,
   -4017, -4017,  4551, -4017, -4017, -4017,  2574,  2439, -4017,  1789,
   27800,  2820,  2409, -4017, -4017,  1217, 13460, -4017, -4017,  5233,
    3234,   235, -4017, -4017,   268, -4017,  3013,  2626, -4017, -4017,
   -4017, -4017,  2905, -4017, -4017,  3043,  2967,  2943, 44460, -4017,
    2881,  1725, 55323, 55323, 55323, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, 55323, -4017, -4017, -4017, -4017, -4017, -4017,  1789,
   -4017, 27800, -4017, -4017, -4017,  -155,  2683,  1298, 22642, 55323,
   37428, -4017, 13460, 13460,   387,  3018,  3071,  3071,  3071,   589,
    2461, 13460, 13460, 13460, 13460, 13460, 13460, 13460,  1074, -4017,
   -4017,   622, -4017,  2437, 13460, 13460, -4017, 13460, 13460, 29086,
   -4017,  3475, 13460, 13460,   391,  2954, 13460, 13460, 13460, 13460,
    2474, 13460, 13460, 29086,  3086,  2444, -4017,  2449,  1671, 13460,
   13460,  1721, 13460, 13460, 13460, 13460, 13460, -4017, -4017, 13460,
   13460, 13460, 18087, 13460, 13460, 13460, 13460, 13460, 13460,  2465,
   13460,  3071,  3071, 13460, 13460,  1744, -4017, -4017, 13460,  2686,
    2686, -4017, 13460,  8833, 13460, -4017, -4017, -4017,  2470, -4017,
   -4017, -4017, 29086,  3071,  3071, 13460, 13460, 13460,  3018,  3018,
    3018,   189,  2476,   548, 13460,   133, -4017,  2639,  2473, 13460,
   -4017, -4017, 50850, -4017, -4017, 13460, -4017, 13460, 13460, -4017,
   -4017, -4017, -4017, -4017, -4017,   739, -4017, -4017, -4017, 14782,
   18087, 18087,  2482, 18087, 18087, 18087, 18087, 18087,  2867, 18087,
   18087, 18748, 19409, 18087, 18087, 18087, 18087,  1458,  3018, 47655,
   18087, -4017,  1805, 13460, 38067, -4017, -4017,  2483, 27800,   549,
   -4017, -4017, -4017, -4017, -4017, -4017,  2491,   549, -4017,  2995,
   -4017, 44460, 27800, -4017,  2489, -4017,  2869, -4017,  2871,  2872,
    2874, -4017, -4017, -4017, -4017,  3112,  2880, -4017,  2883, -4017,
   -4017,  2512, -4017, -4017, 20070, 47655, -4017,  2515, -4017,  3016,
   -4017,  2760,  2701,  1796, -4017, -4017, -4017, -4017, -4017,  2798,
   -4017, -4017,  2623, -4017,  2810, -4017, -4017,   172, -4017,   228,
   -4017, -4017, -4017, -4017, -4017, -4017,  2811,  2528, -4017, -4017,
   -4017, 55323, -4017, 55962, -4017, 27800,  -111, 55323, -4017, -4017,
   -4017,  2909,   200,  2531, -4017, 27800, -4017, -4017,   108,   108,
    2796,   213, 47655, -4017, -4017,   184,  2533,  2622,  2534, -4017,
    2624, 27800,  2683, -4017,  3185,  1367, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,  2543,
    3045,  2760,  2830, -4017,  2832, -4017, 55323, -4017, -4017, -4017,
     564,  2640,  2640, 47655,  2553, -4017, -4017, -4017, 13460, 42543,
    1534, -4017, 21999,  2582,  2610,  2969, -4017,  1692, -4017, -4017,
   46377, -4017,   589,   105,  2560, -4017, -4017,  1493, -4017, -4017,
    2966, -4017,  2790, -4017,  2558,  2562,  2563, 51489, 13460, -4017,
   -4017, -4017,  9494,  2572, -4017, 51489, -4017, -4017, 18087,  1891,
   -4017,   589, -4017,  2974,  -111, 13460, -4017,  2581,  1725, 55323,
   55323, 55323, 27800, 55323, -4017, 27800, -4017,  1028,  1028, -4017,
   -4017, -4017, -4017,   -14, 55323, 55323,   -14, 44460, -4017,   944,
   55323,   -14, -4017,  2984,  2698, -4017, -4017, -4017,  3063, -4017,
   -4017,  3051,  2594, -4017,  2974, -4017,  2778,   944, -4017, -4017,
   27800, -4017, -4017,   944, -4017,   944,   944,    13,    13,   -19,
   -4017, -4017,  2746,   667,  3197, -4017, -4017,  2206, 22642, 55323,
    2848,  2762, -4017,  2602, -4017, -4017,  2683,   173,  2860, -4017,
    3074, -4017, -4017, -4017, -4017, -4017, -4017,  2408, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017,  2703, -4017,   724,
   47655,  2709,  2713, -4017, -4017,  2716, -4017, -4017,   232, -4017,
    2163,   520,  -111,  1418,  -111,  1576,  -111,  -111,  1968,  -111,
    2778,  3128,  3166, -4017,  3206, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017,   129, -4017, -4017, -4017,  1964,
    3158,  2613,   751,    83,  2613,  2364,  -111,  1880, -4017,  1880,
   -4017,  2935,   105,  3224,  2902,   105,   105,  3224,   105,  2904,
    2907,   105,   105,   105,  2722,  3174,   105,  3056,   737,  2882,
    3057,   105,  2919, -4017,   791,  3186,   105,   105,   105,   105,
     105,  3224,  2932,  3290,   105, -4017,   105,  2941,  2940,   169,
    2944,  2947,   105,   105,   105,   105,   195,   105,   105,  2949,
     105,  2952,  2728,  2734, -4017, -4017,  5927, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017,   -81, 25866, -4017, -4017, -4017, -4017,
    2978,  1391, 27800, -4017,  2697, 52128, 27800, -4017, -4017, -4017,
    2708,   206, -4017, -4017,  2700,  2711,   589,  3201,  3208,  3209,
    3212,  3213,  3215,  3216,  3217,  3218,  3219,  3220,  3223,  3225,
    3226,  3232,  3235,  3237,  3240,  3247,  3251,   178, -4017, -4017,
    3253,  3254,  3256,  3263,  3265,  3266,  3271,  2733, -4017, -4017,
   -4017, 27800, -4017, -4017, -4017, -4017,  2781, -4017, -4017, -4017,
   -4017,  2429, -4017, -4017, -4017,   137,  2382,  2799,  2806,  -113,
   55323, 55323,  2774,  -115, -4017,  1545, -4017, -4017,   608,  3061,
    3064,  3066, 22642,  2775,  2582, -4017, 37428,  2582, -4017, -4017,
    2786,   365,  1241, -4017,  3071,  2785, 13460,  2795,  2800,  2802,
   13460,    42,   400,  1256,   589,  1387,  1404,  1260,   370,   198,
   13460,  2804, 10816,  2805, -4017, -4017,   544,   714,  1275,  1309,
    2807,  2808, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017,  3261, -4017,   798,  2812,  2822, -4017, -4017, -4017,
   -4017,  2823, -4017, 13460,  1316,   831,   884,   211,  2801,   915,
    1434,  1438,  2839, 29086, 55323,  3071,  2840,  1337,  1346,  3071,
    2841,   920,  1348,  1520,  1522,  1535,  1390,   927,  1559,  2383,
    1417,   934,   936,  1436,   975,   987, -4017,  1440,  2844,  2849,
     992,   255,  3071,  2854,   237,  2838,  2845,  1467, 11477, 12138,
   12799,  1151,  1014, -4017,  2858, -4017,  2449,  2859,  2861,   271,
     181,  1474, -4017, 13460, -4017, -4017,   903, -4017,  2865,   151,
   47655, 13460, 55323, -4017, -4017, -4017,  2101,   167, -4017, -4017,
   -4017, -4017, -4017,   793, -4017,  2843, -4017,  2857,  2017,  2814,
   13460,   208,  2814,  2825,  1015,  1015, 18087,  2597,  2794, 14121,
     336, 14121,   336,  2814,  2814,  2814, -4017, 18087,  2866, 18087,
   18087, -4017,  3018, -4017, 40623,  2864,  2847, -4017, -4017,  -199,
   55323, -4017,  2491,   847, -4017,   105, -4017,  2850,   142, 27800,
   47655,  2873, -4017, -4017, -4017, -4017, -4017, -4017,  2778, -4017,
    3780, 27800,  2950,  2958,  2963, -4017, 34866, -4017, -4017, -4017,
   -4017, 34866,   761, -4017, -4017, -4017, -4017, -4017,  2977, -4017,
   -4017, -4017,  2885, -4017, 44460,  2885, -4017, -4017,  2885, -4017,
   -4017,  2885,    58,  4883, -4017,   354,   863,  3454,  2582, -4017,
    2683, -4017,   454, 27800, -4017,  3276,   757, 27800,  2697,  2889,
   18087, -4017, -4017, -4017, -4017,  1800,  2997, -4017,  3537, -4017,
   13460,  -111, -4017, 44460, 44460, 27800, 27800,   284,  1213, -4017,
    2778, -4017,  3654, 20070,  2891, 44460,    76, -4017, -4017, -4017,
   -4017,  2067, -4017, 33582,   339,  2892, -4017, -4017, -4017, -4017,
   -4017,   656, -4017, -4017, -4017, -4017, -4017, -4017, 13460,  3341,
   -4017,  3055, -4017, -4017, -4017, -4017,   770,  2987,   134,  3129,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017,   105,   589, -4017,
   32940, -4017,  -111,  3364, -4017,   589,  2911, 55323, -4017, -4017,
   -4017, -4017, -4017, 44460, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017,   -14, -4017, -4017, -4017, -4017,
   -4017,  3136,  2408,  1729,  3364, -4017,   -14,   944, 27800,   -14,
     -14,  -111, 13460, -4017, -4017, -4017, -4017, -4017,  -111, 10155,
    2602,  -175,   116, 23285,  3307,  3308, -4017,  3187,   939,  3187,
   23285, 23285, 29086, 22642,  2809,  2915, -4017,  3248, -4017, -4017,
    3014, -4017,   424, -4017, -4017, -4017, -4017,   377,  1576,  1576,
    1576,  1576,  2163, -4017,   -23,  3410, -4017,   520, -4017,  1076,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017,  -111,  3425,  3182,  1800, -4017,   105,   105,  3238,  -111,
    3058,  3069,  3070,  3075,  3078,  3107, -4017, -4017,  -111,  -111,
   -4017, -4017,   105, -4017,  1557, -4017, -4017, -4017, -4017,  -111,
    -111,  -111,  -111,  1576,  -111,  -111,  1566, -4017, -4017,   105,
     105, -4017,   292, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
     321, -4017, -4017, 29729,   155, -4017,   245, -4017, 29729, -4017,
     206,   206, -4017, -4017, 52767, 29729,   155,  1418,  1576, 29729,
    1576, 53406,   155,  -111,  -111,  -111,  2067,   105,  1576, -4017,
   53406, -4017,  3348, 55323,  3349, 29729, 29729, -4017, 47655, 55323,
   53406, -4017,   105,  1487,  1576, 54045,  1418,  1418, 29729,   155,
   29086,  1437,  2034,  -111,   155, -4017, -4017, -4017, -4017, 29729,
   27800,   155,   155,  2456,  2903,  2937,  3274, -4017, -4017, 55323,
    1576, 53406, -4017, -4017, -4017, -4017, -4017,  5184, -4017, -4017,
   -4017, 21356, 55323,  1040,   510, -4017,  2946,   190, -4017,  3167,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017,   206,  2959, 54684,
   -4017, -4017, 13460,  2960,  1576,  -111,  1576,  1576,  -111,  -111,
    1576,  1576,  -111,  -111,  -111,  -111,  -111,  -111,  -111,  1576,
    1576,  -111,  1470,  5233, -4017,  2962,  2962,  2964,  2964,  2968,
    2968,  2972,  3234, -4017, -4017, -4017, -4017,   144,   105,   105,
     105,   105, -4017,  2143, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, 47655,  3336,  2286,  2362,  3153, -4017, -4017,   949,
    2973, -4017, -4017,   277,  4703,   948,   948, -4017, 27800, 27800,
   27800,  2582, 55323,  3239,  1318, -4017,  2980, -4017, 15443, -4017,
    2976, -4017,   589, -4017, -4017, -4017,  1158, 13460, 13460,  3473,
    2759, -4017, 47016, -4017, 13460, -4017, -4017, 13460, 47016,  2759,
    1573, -4017,  2982, -4017,  3392,  3400, -4017, -4017, -4017, -4017,
   13460, 13460, -4017, 13460,  -104, -4017, 13460, 13460, 13460, 13460,
   13460, -4017, -4017, 18087, -4017,  2986,  2989, -4017, -4017, -4017,
    2994, -4017, 13460, -4017, -4017, -4017, -4017, -4017, 13460, -4017,
   13460, -4017, 13460, 13460, -4017, 13460, 13460, -4017, -4017, -4017,
   16104, 13460, 13460,  3000, -4017, -4017, 13460, 13460, 13460, -4017,
   13460,  1602, 13460,  2012, 13460,  2037, 13460, -4017, 13460, -4017,
   -4017, -4017, -4017, 13460,  1583,  1800,  1576,  3001, -4017,  1577,
    2556,  2521, -4017,   903,  3004,   367, -4017,  2990,   589, -4017,
   -4017, -4017, -4017, -4017, -4017, 18087,   383,  3005, 18087, -4017,
    2825,  2474,  2474,  2025, 13460,   208,  2825, -4017, -4017, 13460,
   13460, 38706, -4017, -4017, -4017, 47655, 44460, -4017, -4017, -4017,
     142, -4017,  2489, -4017, -4017,  2697, -4017,  3486,  3006, -4017,
   -4017, -4017, -4017, -4017, -4017, 55323, -4017,  3087, -4017, -4017,
   -4017, 26509, 26509, -4017, 26509, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017,  2408,  1359, 55323,
   -4017,  3009, -4017, -4017,  1217,  2640,  3025,  3391, -4017, -4017,
   -4017, 55323,  3015,  2825, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017,  3624,  3020,  3023,  3522,  3026,   589, -4017,
    3103, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,    72,
    2206, 29086, -4017, -4017, 23928,  1547, -4017, -4017, -4017, -4017,
    3027, -4017,  3526, -4017,  3479,  3505, 26509, 26509, 26509, 43182,
    3630, -4017, -4017, -4017, -4017, 13460, 42543, 42543,   589,  3656,
    3489,  3367,  3054, -4017,  3050, -4017, -4017, -4017,  9494, -4017,
   -4017,  1418, -4017,    62, -4017, -4017, -4017,  3339, -4017, -4017,
   -4017, -4017,  2582,   944, -4017, -4017, -4017,   589, -4017,   231,
     367,  2914, -4017, -4017,  1094, -4017, -4017, -4017,  3456, 23285,
    3187,  3187,  3457,  3340,   826,   916, -4017,   105, -4017,    55,
    1576, -4017, -4017,  -111,  -111, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017,  1800, -4017, -4017,  -111,
    3558, -4017, -4017, 46377, 43182, -4017, -4017, -4017, -4017,  3612,
   -4017,  3613,  1462, -4017, -4017,  2261,   922, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017,  2364,  2261,  2261,   202,
   -4017,   162, -4017, -4017, -4017, -4017, -4017, -4017, -4017,  3076,
    3470,  3471,   206, -4017, 29729, -4017, -4017, 29729, 29729, -4017,
   -4017,   873, 53406, -4017, -4017, -4017, -4017, -4017, -4017,  3079,
   -4017, -4017,  1800, -4017, -4017, -4017, 43182,  -111, -4017,  3177,
   29729,  3079, -4017, -4017,   197, -4017, -4017,  3101,  3179,  -111,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   53406,  3082, -4017,   355, -4017, -4017, -4017, -4017, 53406,  3169,
   -4017, -4017, 53406, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,  3093,
    2696,  1874, -4017,  3095,  3092, -4017, -4017, -4017, -4017, 55323,
   -4017, -4017, 27800, -4017, -4017, -4017,  5763, 55323,    77,   345,
    3175,  1735,  3098, 53406, -4017,  3099, -4017,  3097, -4017,   589,
    1576, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, 35508, -4017, -4017, 36147, -4017, -4017,  -164, -4017, -4017,
    1612, -4017, -4017,  -111,  1800,  2261,  2261,  2277, -4017,  3377,
    3554,   105,   105, -4017,  2606, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017,   520,   949,  3393, 55323, -4017,
   -4017, -4017, -4017,  3255, -4017, -4017, -4017, -4017,  3397, 27800,
   20713, -4017,  3368, -4017,  3764, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017,  1638, -4017,  3499, 14121,  1514, -4017,
   13460,   589,  1604, -4017,  3117,  3117,  3118, -4017,  3120, -4017,
    3117,  3533,  3118,  3535,  3123,  3124,   589,  1538,  3125,  3127,
   -4017, -4017, 13460, 13460,  1554,   396,  1563,  3740,  3298,  1016,
    1020,   678, -4017,  1565,  2835, -4017, -4017,  1571,  1582,  1584,
    1595,  1027,  1630,  1657, 14121,  1635,   363,   825, -4017,  1694,
    1033,  1138,  1718, 13460,  1720, 13460,  1726, 13460,  1728,  1730,
    1743,  3137,  3137,   165, -4017,  3134, -4017, -4017, -4017,  3138,
   -4017, -4017, -4017, -4017,  2582, 10155,  2521, -4017,  2556,  3140,
     116,   548, 55323, -4017,  3141, -4017, -4017, 13460, -4017,   955,
   -4017, -4017, 18087,   857,  3142, -4017, -4017,  3143, -4017, -4017,
     323, -4017, -4017, -4017, -4017,    50,  3439, 34866, -4017,  1677,
   -4017, 44460,  3130, -4017,  3131,  3227,  3229,  3241,  3146, -4017,
   29086,  3429,  3429, 27800,   206,  3575, -4017, -4017, -4017,  3155,
    3164, -4017, -4017, -4017,  3549,  3430, -4017, -4017,  1800, 55323,
   44460, -4017, 10155,  3170,   993,  3172,  1688, -4017, -4017, -4017,
    3173, -4017, 16765,  3184, -4017, 20070,  3452, 44460,  3649,  3653,
    3655, -4017,   904,  3576, -4017, -4017, -4017, 13460, 13460,  3239,
   -4017,  2987, -4017, -4017, -4017,  2408, -4017, -4017, -4017,  2408,
   -4017,   -14, -4017,   548, -4017, -4017, 23285, -4017,  3597,  3598,
   23285, 13460, 13460,  3199, 29086,  3239, 16765, -4017, -4017,   206,
     206, -4017,    55, -4017, -4017, -4017, -4017, -4017, -4017,  3738,
   -4017,  -111, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
     321, -4017,   -85, 13460, 29729, -4017, -4017, -4017,  3202, -4017,
   -4017,  3734,  3736, -4017, 29729,  2429, 55323, -4017,  2687, -4017,
   -4017, -4017, -4017,  3299, -4017, -4017,  5763, -4017, 29086, -4017,
   -4017, 29729, 55323, -4017, 27800, -4017, 21356, -4017,  3205, -4017,
    3117,  3117,  3117, -4017, -4017, -4017,  3118, -4017,  3120,  3455,
   -4017,  3120,  3120, -4017, -4017, -4017, -4017, -4017, -4017,   174,
    1215, -4017, -4017,   174, -4017, -4017, -4017,   111,  1342,  3120,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017,  3117,  3118,  3118,
   -4017, -4017,   174,  3117, -4017,  3117, -4017,  3233, -4017,   325,
     136,  3117,  3117,  3117,  3210,  3198,  3459, -4017, 13460, 13460,
    3494, 55323,  3495, -4017,  3796, 55323,  3854,  3231, -4017, 54684,
    1747, -4017, -4017, -4017,  1755, -4017, -4017, -4017,  1779, -4017,
    3211, -4017,  1781, -4017, -4017, -4017, 55323, -4017,  1839, -4017,
   -4017, -4017, -4017, -4017,  3230, 55323,  2261,  2261,  1734, -4017,
   -4017,  3379,  3409,  3242,  3243, -4017, -4017,  -111,   883, 27800,
   -4017, 27800, -4017,  3407, -4017,  3252,   848,  5852, -4017,  3244,
    3249,  3259, -4017, 55323, 42543, -4017,  2474, -4017,   589, 13460,
     836, -4017, -4017,   174,  3527, -4017,   940, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,  2474,
    2474, -4017, -4017, 13460, -4017, 13460,   173,  3262, 13460, 13460,
   -4017, 13460, -4017,   258,  3264,  3281, -4017, -4017, -4017, -4017,
   13460, -4017, -4017,  2474, -4017, 13460, -4017, -4017, 13460, -4017,
   13460, 13460, -4017,  1749, -4017,  1768, -4017,  1817, -4017, -4017,
   -4017,  1800,  3267,  3627, -4017, -4017, -4017,  1800,  3445, -4017,
   -4017,  1800,  1576,  3341,  1692, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017,  1882, -4017, -4017, 13460, -4017, -4017, -4017,  3640,
    3914, -4017,  3497, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   55323,  -170,  3279, 39345, 44460, 44460, 44460, 16765,   725,  3782,
   -4017, -4017, -4017,   206,  3575,  3667, -4017,   114, -4017, 55323,
    1626, -4017,  1885, -4017, -4017,  3278, -4017,   231,  3407, -4017,
   -4017,    14,   993, 29086, 38067,  1891,   589,  3282,  3280, -4017,
    3027, -4017,  3748,  2850, 44460, 44460, 44460,  3897,  3898,  3797,
    3900,   904, -4017,  1246, -4017,  1362, -4017,   589,  2408,  3292,
   -4017,  2778, -4017, -4017,  2392,  3342, 23285, 23285,  2510,  3343,
     589,   589, 55323, -4017,  3499, -4017,  3758,  3758, -4017, -4017,
   -4017, -4017,  1800,  3430, -4017,  1819,  3302,  3315, 55323,  3316,
    3317, -4017,  3085,  1040, -4017, -4017, -4017, 27800, -4017,   155,
   -4017, -4017, -4017,  3079,    72,  3306, -4017, 55323,  3659, -4017,
   -4017, -4017, -4017,  1112, -4017,  3319,  1112,  1112,  3930,   221,
   -4017,  3943, 47016, -4017, -4017, -4017,  1672, -4017,  3357,   174,
   -4017, -4017,  3361, -4017, -4017, -4017,  1112,  3327,   174, -4017,
   -4017, -4017, -4017,  1112, -4017, 47655,  1765,  -111,  2776, -4017,
    3383, -4017,  3865,  1461,  3730, -4017,  2679, -4017,  3790,  3732,
    3625, -4017,   174, -4017, -4017,  3960, -4017,   174,  3960,  1112,
    3636, -4017,  1112, 55323, -4017,   589,  2474,  3919, -4017, -4017,
    3501,  -111,  3870, -4017,  1901, -4017, -4017, -4017, -4017,  1576,
   -4017, 55323, -4017, 55323, 55323, -4017,  -111,  3354, -4017,  3359,
    2364, -4017, -4017, -4017, -4017,  -111,   345, -4017, 55323,  5763,
   -4017, -4017, -4017, -4017,  3356,  3360, -4017, -4017,  3825,  3362,
    3363,  5927, -4017, -4017, -4017,  4001, -4017, 55323, 55323, 55323,
   -4017, -4017,  1157,   589,  3365,  3370,  3371,  3372, -4017,  3373,
    1913,  3374,  3378,  1826,  3366, -4017, -4017, -4017,  1850,  1147,
    1915,  3696,  3776, -4017,  3615, -4017,  1872,  1170,  1877,  1884,
    1924,  1993, -4017, -4017, -4017, -4017, -4017,  3386, -4017, -4017,
     220, -4017,  3382,  3489, -4017,  1927, -4017, -4017,  3872,  3765,
   -4017,  3838, -4017, -4017, -4017,  -113,  -113,  -113,  1953, -4017,
    3791, -4017, -4017,  3809, -4017,  3403,  3537, 55323, -4017,  3430,
   -4017, -4017, -4017, -4017, -4017, -4017,  3389, -4017, 16765, -4017,
   44460,  2850,  2850,  2850,   173,   173,  4015,   173, -4017,  4016,
    4018,  1246, -4017, -4017, -4017, 13460, -4017,  3650, -4017, -4017,
   13460,  3413, -4017, -4017, 13460,  3415,  1955, -4017,  1341,  3416,
    3422, -4017,  1965, -4017, 55323, 55323,  2000,   355,  3423, 55323,
   55323,  2950,  2958,  2963,  1470,  1470, -4017, -4017, -4017,  1407,
    1040, -4017,  3837, -4017, -4017,  2049, -4017,   946,  3707, -4017,
   -4017, -4017, -4017,  1112, -4017,   173, -4017, -4017, -4017, -4017,
   -4017, 47016, -4017,  3960, -4017, -4017, -4017,   173, -4017, -4017,
     342, -4017, -4017, -4017, -4017, -4017, -4017, -4017,  3719,  3468,
   -4017, -4017, -4017, -4017, 47655, -4017,  4071,  4066, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017,  3431, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, 55323, -4017,   930, -4017, -4017, -4017,
   -4017, -4017, 55323, 55323,  2056, -4017,  3494,  3618, -4017,  2687,
   -4017, -4017,  1503, 55323,  3941, -4017, -4017,  3368, -4017,   999,
    2083,  2087,  2115, -4017, -4017, -4017, -4017, -4017, -4017,  3722,
   -4017, -4017, -4017, 13460, -4017, 13460, -4017, -4017,  3755,  3924,
   -4017, -4017, -4017, -4017, -4017, -4017,  3441, -4017,  1576,  3239,
   -4017, -4017, -4017,  3715,  3467,  3467,  3467, -4017,  3502,  3540,
   18087, -4017,  3447,  3490, -4017, -4017, -4017,  2850, -4017, -4017,
     173, -4017,   173,   173, -4017, -4017,  4092,  3866,   589, 55323,
     589, 55323, -4017,  4065, -4017,  4068, 54684, 54684, -4017,  2117,
    2119,   331, 55323, -4017,  3744,  2122,  2127, -4017, -4017, -4017,
   -4017, -4017,  3461, -4017, 55323, -4017, -4017, -4017,    97, -4017,
   -4017,  2132, -4017, -4017, -4017,  2164, -4017, -4017, -4017, -4017,
    3465,  3589, -4017, 61713, -4017, -4017,  3469,  3496, -4017,  3474,
    3472, -4017,  1735, -4017, -4017, -4017, -4017, -4017,  5763,  3657,
      14,   848,  3407, -4017,   331,   157,   274,  3476, -4017,  2005,
   -4017, -4017, -4017,  3477,  2408, -4017,  2526, -4017, -4017, -4017,
   29086, 27800,  3478,  3583, 55323,  1658,  1722, -4017, -4017, -4017,
    3481,  1534, -4017,  2166,  2179, -4017, -4017,  3482,  2187,  3703,
     331,  -111,   105, -4017,   331, -4017, -4017, -4017,   355,  3484,
     157,   274,  3430, -4017,   621,   621,   174,   173,   174, 13460,
   13460,  3989,  3514, 55323,  1314, -4017,  8028,  8028, 55323, -4017,
   -4017, -4017, -4017,  3507, -4017, -4017,   -32, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,  4113, -4017,
    3483, -4017, -4017,  3469,  3492,  3658,  1396, -4017,  1547, -4017,
   55323,  3796,  5763,  3569, -4017,   130, -4017, -4017,  3493,  1547,
   -4017,  3757, -4017,   157, -4017, -4017, -4017,   274, -4017, -4017,
   -4017, -4017, -4017,  3650,  3771,  1576,  1576,  1576,  1576,  2526,
   -4017,  3170,  2683, -4017,  1800, -4017,  2198, -4017, -4017, -4017,
    3584,   105,  4020,  4022,   105,   105,   105,   105,  3504,  1722,
   -4017,  4002,  3788, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017,  1576, -4017, -4017, -4017, -4017, -4017,  2205, -4017,  4157,
   -4017,  1043,  3793,  3794, -4017, -4017, -4017,  3513,   589, 13460,
   -4017, 13460,  3543, -4017, -4017,  3978, 55323, -4017, -4017, -4017,
   -4017, 13460, -4017, 61713, 61713, -4017, -4017, -4017, -4017,  4145,
   -4017,  3520,    14, -4017,  4115,  3798,  4117, -4017,  3525,  4042,
   -4017, -4017, -4017, -4017,  4052, 61713, -4017, -4017, 47655, -4017,
   -4017, -4017,   323,  1709,   323, -4017,   323, -4017,  1534, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, 55323,  3529,
   -4017,  -111,   105,   105,  2369,  2369,  1800, 55323,  3637, -4017,
   -4017,   105, -4017,  3531,  3528, -4017, -4017, -4017, -4017, -4017,
    3585,  4062,  -118,   589,   589, -4017,    82, -4017, -4017,  3948,
    4040, 13460,   589, 58518,  3532, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, 62352, 13460,
   -4017,   -32,  4113, -4017, -4017,  3812, -4017,  3815, -4017, -4017,
   -4017, -4017, -4017, -4017, 61713,    14, -4017, -4017, -4017, -4017,
   -4017,  2067,  3583, -4017,  3541, -4017, -4017,   -52, -4017,  -111,
    -111, -4017, -4017, -4017, -4017, -4017,  2209, -4017, 47655, -4017,
    3788,   621,   621, -4017, -4017,   124,  3570, 13460, 61713, -4017,
    4046, -4017,  3974,   589,  3917,  3545, -4017,  3544,   589,  4086,
    8028,  8028, -4017, -4017, -4017,  3569, -4017, -4017, -4017, -4017,
   -4017,  2219, -4017, 17426, -4017, -4017, -4017, -4017, -4017, 47655,
   -4017,  3637, -4017, -4017, -4017, -4017,  -111,  3951, -4017,   124,
   -4017,  3952,  3845, -4017,   248, -4017,   589, 59157,  4161, 55323,
   -4017,  3645, -4017, -4017, 13460,  4075, 48294, 59796,  3556, -4017,
   -4017, -4017, 61713,  3743, -4017,  3541, -4017,  3563, -4017,  2825,
    1722, -4017, -4017, -4017, -4017, -4017, -4017, -4017, 13460, -4017,
    4072,  3660, -4017,  3565, -4017, 61713,   589, 61713, -4017, -4017,
    4014,  3571,   361, -4017,  3572, -4017, -4017,  4005,  3630, -4017,
   17426,  3578, -4017,   589,  4179, 61713, 55323, 56601,  4081, 60435,
    4044, 55323,  5763,  4045,  4047, -4017,  4193,  3576, -4017, -4017,
    3671, -4017, 57240, -4017,  2253,  3795,  3614, -4017, -4017,  4124,
    1632, -4017,   173,  4019, 61713, 61713, -4017, -4017, -4017, -4017,
   39984, -4017, -4017, -4017, -4017, -4017,   564, -4017,  3880,  3595,
   57879, 61074, -4017, -4017, -4017, 36786, -4017, -4017, -4017,  4058,
   -4017, 13460, -4017,    99, 24572,  3760, 39984, -4017, -4017,   589,
   -4017, -4017, -4017, -4017, 47655,  2221, -4017, -4017, 29086, -4017,
   -4017, -4017, -4017, 27157,  3599, -4017,   105, -4017, 29086, 16765,
   -4017, -4017
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4017, -4017, -4017, -4017, -4017,    71, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017,  1648, -4017, -4017, -4017, -4017, -4017,
   -4017,  1837,  1845, -4017, -3235, -4017, -4017,  1844, -4017,   530,
    1846, -4017,   528, -4017,  1856, -4017,   536,  -549, -1516, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,   531,
    1452,  3552, -4017,   521, -4017,   170, -4017, -4017, -4017, -3194,
      63,  -136, -4017, -4017,    15,  1492,    40,  3193,  -133, -3177,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,   522,
     533, -4017, -4017,   300, -4017, -4017, -2396, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017,  -333,  -296,  1832, -4017, -4017, -4017,
    4237, -4017,  3661, -4017, -1978,  2204, -4017, -4017, -4017, -4017,
   -4017,  2266, -1908, -4017, -4017, -4017,  1155, -4017, -4017, -4017,
   -4017,  -268,   204, -4017,   205, -4017,   210, -4017,   212, -4017,
     215,   216,   218,   222, -4017,   223, -4017, -4017,  -291, -4017,
   -4017, -4017, -4017,   224, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017,  -198, -4017, -4017,   -77, -4017, -4017,  -188,   225, -4017,
    -149,   227, -4017,   230, -4017,   -89, -4017,   -87, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017,  3196, -4017, -4017, -4017, -2576, -4017, -4017, -2732,  2677,
   -4017, -2084, -4017, -4017, -2250, -4017, -4017, -2051,   845, -4017,
   -4017,  1380,   859, -4017, -1559, -2178, -2164, -4017, -4017, -4017,
   -2328, -2313, -1582, -4017, -1536, -2622, -4017, -4017, -4017,   217,
   -4017, -4017, -2906,  2615,  3246, -4017, -4017, -4017,  1988, -4017,
   -4017,  1167,   499,  1171, -4017,   777,  2934, -1331, -4017, -4017,
   -4017, -4017, -4017, -4017,    -9,   311,   -78, -4017, -3418,   507,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -2658, -4017,
   -4017, -4017,  -203, -4017, -4017,  -132, -4017, -4017,  -168, -4017,
      91, -2636, -4017, -4017,  2568, -1487, -4017,  3813, -4017,  -409,
     593,  2650, -2494, -1021, -4017, -1000,  -999, -2562, -4017, -4017,
   -4017,  1361,  1349, -4017,  1062,  2645, -1578, -4017,  1987, -4017,
   -4017,  1088, -4017,  1078, -4017, -4017, -4017,  -123, -4017, -4017,
     201, -2657, -4017, -4017, -4017,  1047, -4017,  1048, -4017, -4017,
   -4017,  -714,  1017, -1621,  1338,  -597, -4017,   456,   726,  -838,
   -4017, -4017, -4017,   676, -3664, -2608, -4017,   -41, -2422,  -945,
     -48, -4017, -4017, -2556, -3133, -4017,  1585, -4017, -4017, -4017,
   -3170, -2473,  1282, -4017, -4017,   877, -4017, -1655,   875, -4017,
   -4017, -4017,   886, -4016,   233, -4017, -4017, -4017, -4017, -2760,
   -4017, -4017, -1542, -2090, -4017, -4017,  4366,  4370, -1106, -2597,
   -2410,   226,   234, -4017, -4017, -4017,  2585,  -886,   239,   158,
     164,  1928,  -456,   326, -2123, -4017,   462, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017,  1397, -4017,  2177, -4017,
    1951, -4017,  2185, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017,   508,  2684, -1181, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -2213, -2204, -4017, -4017,  2041, -4017, -4017,
   -4017, -2194, -1076, -1069, -1539,  3767, -2278, -2661, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017,  2855, -4017, -4017,
   -4017, -4017, -4017,  3773, -4017,  2863, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017,   767,  1739, -4017, -4017, -4017, -4017, -4017,
   -4017,  1139,  2636, -4017, -4017, -4017,   -11, -4017, -4017, -4017,
   -4017,  2344, -4017, -4017, -4017, -4017,  2705, -4017, -4017, -4017,
   -4017, -4017, -4017,  1280, -4017,  1782, -4017, -1680, -4017,   880,
   -1063,  2985,  3792,  1866,  -646, -4017, -4017, -2611,  3516, -4017,
   -4017, -1464, -4017,  3517, -1446,  -910,  3188,  2475,  1031,  4403,
   -4017, -1256, -1204, -4017, -4017,  -705, -4017, -4017, -4017,  -694,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
    1864, -4017, -1304, -4017, -4017, -4017, -4017, -4017,  -799,  1975,
    1868,  -996, -4017,  3272, -4017, -4017, -4017, -2048,  -994,  2272,
    2899, -4017, -4017, -1402, -4017, -2127, -4017,  1902, -4017, -4017,
   -1877,   852, -4017,  1244, -4017, -4017, -4017,   421,  1109,   423,
   -3082, -1169,  1678, -4017, -4017, -1322,  3301, -1722,   668,  1887,
     983, -4017, -4017, -4017, -4017,  1199, -2411,  -598, -4017, -2804,
    -964, -1034, -4017, -2558,   874, -1250, -2030, -1674, -1440, -2743,
   -4017,   256, -4017,    51, -4017,  2401,   443,   448, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017,  -616,  -884,  3769,  2766,
   -4017,  3180, -4017, -1170,  3427,  3433, -4017, -4017,  3619,  1853,
    1860, -4017, -2926, -2896, -4017, -4017,  -619, -1355,   929, -4017,
     964, -3162, -2564,  3442, -2632,  1278,  4458,  3449, -1654,  3966,
   -4017, -4017, -4017, -4017, -4017, -4017,  2363, -4017, -4017, -4017,
   -4017, -4017, -4017,  3017,  3905,  -626, -1401, -4017,  -817,  2993,
    2375,  -939,  2988, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,  2530,  1248,
   -4017, -4017, -4017,  3119, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017,   986,    -3, -4017,   956,   -18, -4017,   687, -4017, -4017,
   -4017, -4017, -4017,   -80, -4017, -4017,   -86, -4017, -1062, -1421,
     866, -1330, -2358, -4017,   984, -2560, -2643,  -750, -1231, -1224,
   -1658,    92,  3401, -4017,  3228, -1150, -4017,   159,  -407, -1369,
      -6, -2738,   -73,  -641, -4017,   855, -4017, -4017, -4017,  3582,
   -4017,  2431,  4514, -4017,  3297,  3072,  4519,  -487,  3594,  3088,
   -4017,  3089, -4017, -4017, -4017, -1984, -1411, -4017, -4017,   153,
   -4017,  2514, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017, -4017,  2486,
    3662,  3132, -4017,  2532, -4017, -4017, -4017, -4017, -4017,  2367,
   -4017, -2227, -3026, -1099,  3521,   272, -4017,  1036, -1753, -1210,
   -4017, -4017,   344, -4017, -4017,   374,  3970,  3663, -4017, -4017,
   -4017, -4017, -4017, -2642,  -605, -3403,  1471, -2033, -4017, -2153,
   -2735, -4017, -1122, -4017, -4017, -4017, -2334, -4017, -4017, -4017,
      49,  4048,  4051, -4017, -4017,  -187, -4017,   397, -4017, -4017,
   -4017, -4017, -4017, -4017, -4017,   388, -4017,   381, -4017, -4017,
   -4017, -4017,  3874, -4017, -4017,  3875, -4017, -4017, -4017, -4017,
   -4017,  3876, -4017, -4017, -4017, -4017, -4017, -4017,  1854, -4017,
   -4017, -4017, -4017, -4017, -4017
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2539
static const yytype_int16 yytable[] =
{
     519,   954,   957,  1122,   625,  1013,  1044,   925,  1625,   566,
    1632,   978,  1588,   565,  2104,   929,  1717,   575,  1899,   590,
    2078,  1924,  1520,  1718,  2018,  1206,   598,   593,  1925,  1789,
    2165,  1878,  1467,  1956,   608,  2670,  2445,   611,  2102,   626,
    1078,  1165,   608,  3131,  1548,  1516,   517,  1800,  1801,   643,
    2017,  2390,  3026,  3181,  2959,   685,   609,  2375,  3175,  3173,
    3045,  2267,  3253,  2763,  3615,  2287,  3048,  2287,  1841,   664,
    1549,  1706,  3194,  2295,  3253,  3253,  1637,  1638,  2064,  3289,
    2056,  2129,  2463,  2091,  2266,  2465,  1958,  1959,  1111,  1114,
    1962,  1963,  1964,  1965,   677,  1967,  1968,  1970,  1972,  1973,
    1974,  1975,  1976,  2179,  2240,  2703,  3416,  2268,  2617,  2299,
    2861,  2288,  2824,  2288,  2305,   573,  2990,   680,  2309,   519,
    1065,   519,   664,   690,   677,  2867,  2825,  2325,  2155,   714,
    2326,  2991,  2723,  2724,  3178,  2754,  1258,  1259,  3212,  1260,
    1307,   975,  2338,  2764,  1566,  3636,  2166,  2349,  2245,  2753,
    3670,  3737,  1308,  3671,  2169,  2170,  2467,  1994,  3195,  3196,
    1389,  3583,   527,   141,  1807,   682,  3718,   684,  3842,  1270,
    1271,  3704,  3681,  3672,  2194,  2835,  1599,  1825,  1826,  3703,
     706,  2059,   589,  2978,   696,  1270,  1271,  3494,  2279,   597,
    2346,  2477,   676,  1550,  2607,  3257,  3258,  3658,  2820,  1270,
    1271,  4486,  2564,  1601,  2440,  3882,  1880,  1270,  1271,  3659,
    1032,  2838,  2725,  2807,  2792,  2070,  1270,  1271,  1893,  1894,
    1895,  1389,   691,  3660,  3206,  1898,  4164,  2435,  2279,  1270,
    1271,  4448,  3253,  3253,  4151,   980,   616,  3107,  3268,  2036,
   -1820,  2414,  3494,  3521,  3919,  3261,  3227,  2684,  3569,  2607,
    2441,  2206,  3399,  1634, -2028,  1270,  1271,  2631,  4303,  1504,
    2781,  1634,   582,  3778,   950,  1417,  2987,   633,  1634,  3347,
     585,  2928,  4474,  1270,  1271,  2706,   950,   636,  3570,  1309,
    2988,  3057,   980,   616,  -956,  3228,  2171,   883,  1459,  1270,
    1271,   697,  -602,  1115, -1574,  3495,  1245, -2538,  1390,  -603,
    2307,  2308,  3791,  2310,  1583,   901,  2313,  2314,  2315,  2829,
     956,  2318,  2762,  1151,  3622,  1473,  2328,  1685,  2279,  2262,
    4326,  2333,  2334,  2335,  2336,  2337,  2647,  1773,  2347,  2341,
    1525,  2343,  3133,  2357,  1399,  1652,  2039,  2353,  2354,  2355,
    2356,  1484,  2359,  2360,  3762,  2362,  1488,  2279,  3658,  1055,
    3495,  4151,   721,  3391,  3392,  2449,  1492,  1270,  1271,  1390,
    3659,  2712, -2174,  -843,  1474,  2235,  1688,  1817,  1818,  1819,
    3358,  1564,  2588,   522,  3660,  4620,  3509,  2712,   577,  1831,
    1448,  1270,  1271,  1270,  1271,  -881,   980,   616,  1270,  1271,
    1459,  1033,  1602,   652,   586,  1158,   567,  4448,  2262,   927,
    1813,  1270,  1271,  1727,   140,  3146,  3005,  3147,  4151,  1886,
    1769,  1530,  1890,  1485,  1270,  1271,   610,  4152,  1270,  1271,
    4304,  2480,  3111,   140,  2750,  1017,  4443,  1462,  2067,  4491,
    1728,  1464,  1908,  1909, -1650,   136,  1913,  2830,  2262,  1840,
    1727,  3356,  1601,  1774,  4214,  2773,  4563,  1775,  1311, -1820,
    1322,  2541,  2565,  1206,  1927,  1928,  1802,   140,  2600,  2684,
     711,  1776,  2220,  3821,  2228,  4564,  2601,  1728,  2107,  2713,
     578,   528,  2774,  4491,  2068,  2632,  1291,  1246,  3603,  3188,
    3189,  3190,  2280,  2751,  1724,  2713, -2538,  1120,  1121,  1056,
    3357, -1574,  2613,  2707,  3381,  1553,  3968,  3506,  2685,  3924,
    1603,   927,  1867,   886,  1159,  1868,  1449,  4444,  3928, -2470,
    1426,  1018,  3359,   698,   523,  2195,  1584,  3006,  3548,  1412,
    3418,  1465,  2280,   137,  2358,  2214,  1814,   664,  2262,   690,
    3876,  1475,  3950,  1150,  4152,  1273,   122,  3952,  1274,  3691,
    4327,  1400,   579,   730,  -843,   864,  1056,   955,  4320,   868,
     701,   965,   970,   690,  3596,  2484,  3475,  2262,  3851,  3852,
    3853,   653,  1270,  1271,  2701,  1273,   881,  3763,  1274,  1322,
     664,   634,  3623,  1273,  2829,   889,  1274,  4621,  2367,  2782,
    1953,   637,  1273,   902,  2150,  1274,  3282,  2153,  3551,   905,
    1009,  4152,  2157, -2028,  1310,  1273,  1777,  3213,  1274,  1961,
    4305,   583,  1116,   951,  2019,  4470,  1678,  1270,  1271,  2608,
    3792,   906,  2280,   923,   664,   951,  1982,  1505,   664,   664,
    2633,  1273,   626,  2198,  1274, -2197,  1006,  1486, -2470,  3347,
   -1574,  1602,  3217,  2843,  1029,  1637,  1638,  3496,  2633,  1273,
    2605,  2280,  1274,  2824,  2172,   635,  3843,  2841,  2648,   884,
     124,  2845,  1048,  3253,  3253,  1273,  2990,  2825,  1274,  1322,
    2831,  1770,  2877,  2878,  2608,  3229,  3744,  2863,  2864,  1604,
    3627,  2991,  2478,  4278,  2929,   664,  3844,  1082,  1294,  2037,
    2879,  2686,  2267,  3522,  3621,  1706,  4036,  1605,   519,  3207,
    1996,  2889,  3496,   677,  1778,  1108,  1270,  1271,   677,   677,
    2287, -2174,  4165,  1123,  1082,  2266, -1820,  4216,  1094,  1323,
    2685,  3267,  4375,  2375,  3269,  3270,  1998,   876,  1152,  1153,
    1154,  1157,  1791,  1273,  4487,  2726,  1274,  3393,  2268,  1128,
    3673,  2823,  1270,  1271,  1095,  3259,  2168,  4099,  4100,  3023,
     921,  1034,  3266,   895,  4277,  1006,  2288,  1273,  2348,  1273,
    1274,   908,  1274,  2018,  1273,  3255,  3239,  1274,  2836,  2836,
   -2028,  1600,  2590,  2071,  1267,  2060,  2742,  1273,  1149,  1207,
    1274,  3661,  3505,  2593,  3742,  3743,  2596,  3760,  1606,  2017,
    1273, -2538,  4103,  1274,  1273,  1637,  1638,  1274,  3598,  2058,
    4221,  1105,  -956,  3430,  1030,  1275,  1113,  1113,  1321,  1526,
    -602,  1771, -1574,   587,  1165,  2077,  2987,  -603,  2461,  2488,
    2467,  1275,  3785,  2576,  3614,  3497,  1270,  1271,  3920,  1156,
    2988,  3260,  3277,  2604,  4037,  1275,   568,  1247,  1323,  2299,
    1264,   664,  1268,  1275,  2490,  1006,  1280,  2413,  2587, -1574,
    2566,  1554,  1275,  1270,  1271,  2832,  4105,  1932,  1933,  1270,
    1271,  2440,  2040,  1457,  2116,  1275,  2663,  2489,  1159,  1315,
     519,  1317,  2992,  1082,   519,   664,  3771,   519, -2174,  1932,
    2508, -2322,  2769,  1360,  2435,  1270,  1271,  2504,  4493,  1394,
    1531,  1275,  3007,  3218,  3219,  2986,  2154,  2423,   677,  1331,
    1269,  2793,  2794,  2686,  1771,  2545,  2546,  2441,  4579,  1275,
     664,   677,  1270,  1271,   677,  1983,  1316,  2805,  2994,  4404,
    1320,   715,  1519,  1330,  2542,  1275,  1322,  1949,  1323,  2455,
     664,  2215,  3661,  3766,  2817,  2818,  1605,  1771,  1273,  2562,
    2563,  1274,  3175,  1270,  1271,   625,   864,  2569,  1270,  1271,
    2245,  1469,  2456,  1771,  3390,  1270,  1271,  3701,  2922,  1545,
     664,  2819,  1270,  1271,  1270,  1271,  3841,  3774,  2776,  2777,
    2778,  2779,  2857,  1869, -2197,  1489,  1870,  4143,  1925,  4144,
     626,  2580,  3898,  1273,  3155,  4318,  1274,  2869, -1997,   664,
    1598,  1555,  3430,  1275,  3829, -2470,  1402,  4279,  1303,  1304,
    1305,  1306,  1833,  1270,  1271,  3015,  4284,  1623,  4286,  1420,
    2127,  1279,  1422,  -510,  1556,  1270,  1271,  1275,   975,  1275,
    1270,  1271,  4467,  3178,  1275,  2470,  3271, -2470, -2471,  1478,
    3210,  3476,   677,  2812,  2468,   677,  1309,  1275,  2748,  2487,
    2716,  1353,  1270,  1271,  1270,  1271,  4322,  1935,  1270,  1271,
    1275,  3116,  3117,  3225,  1275,  1270,  1271,   664,  2656,  2919,
     664,  1270,  1271,    44,  3452,  3453,  3587,  3204,  2844,  1414,
    2846,  3774,  1273,  1117,   664,  1274,  1633,  3588,  2858,  2238,
    2990,  2999,  3635,  2973,  2974,  2975,  2976,  2753,  3762,  3643,
    3935,  4111,  2824,  4063,  2874,  2991,  2516,  1813,  4280,  3605,
    2520,  2885,  1006,  3609,   677,  1186,  2825,  1022,  1273,  2137,
    3549,  1274,  1120,  1121,  2901,  2903,  2905,   958,  1950,  2883,
    2907,  2600,   142,  2543,  1137,  1145,  1925,  1130,  4281,  2649,
    1113,  3751,   664,  1557,  3775,  2200,  1793,   519,   519,  3930,
    3752, -2197,  2621,  2514,  1237,  2320,   519, -2471,  3564,  2859,
    1521,  3626,  1118,  4075,  2941,   677,  2943,  2944,  1588,  2868,
    2947,  2948,   677,   730,  1810,  1291,  1270,  1271,  2262,  2956,
    2957,   524,  2581,  3016,   525,  1270,  1271,  4368,  3604,  1270,
    1271,  2722,  3608,  1794,  1795,  1323,  1270,  1271,  2188,   581,
    2908,  1560,  1273,  1207,  1187,  1274,  2258,  2657,  1275,  2330,
     546,  1522,  1113,  2184,  3000,  2759,  2455,  1207,  2738,   591,
    2785,  3222,  3281,  2494,  1558,  1936,  3776,  3581,  2760,  1273,
   -2322,   638,  1274,  1830,  1322,  1273,  2736,  3599,  1274,  2456,
    2987,    57,  4045,  1238,  2267,  2920,  3172,  2741,  3775,  2617,
    2744,  2745,  3951,  1275,  2988,  3953,  1981,  2287,  3658,  4071,
    3923,  1273,  2622,  1797,  1274,  2942,  1926,  2266,  2945,  2946,
    3659,   547,  2949,  2950,  2951,  2952,  2953,  2954,  2955,  1270,
    1271,  2958,  2823,   864,  3660,   885,  1945,  1546,  1273,  2749,
    2268,  1274,  1131,  3753,  1270,  1271,   980,  3666,  1270,  1271,
    1834,  1479,  2020,  2288,   959,  2595,  3156,  3589,  4322,  1322,
    2836,  1717,  2201,  1270,  1271,  2102,  2102,  2321,  1718,  1273,
    1023,  3763,  1274,   664,  1273,  1132,   595,  1274,  1989,  3064,
    3780,  1273,   677,  2145,  1274,  2717,  3099,  3203,  1273,  2786,
    1273,  1274,  1275,  1274,  1951,   664,   677,  1270,  1271,  3115,
    4086,  2185,  2295,  2019,  1270,  1271,  3460,  3461,  1475,  2069,
    1952,  1310,  3211,  4076,  3167,  2259,  1706,  2556,  1207,   664,
    2186,  2331,  2375,  4113,  4273,  1270,  1271,  1294,  1275,  1273,
    4118,   640,  1274,  2187,  1270,  1271,  1270,  1271,  2299,  2325,
    3272,  1273,  2326,  2495,  1274,  2146,  1273, -2322,  2582,  1274,
    2092,  3001,  3503,  2610,  3224,  2044,   548,  2047,  4088,   677,
    1006,  2052,  2572,  2627,  2583,  2440,  2658,  2115,  1273,   677,
    1273,  1274,  2992,  1274,  1273,  4283,   664,  1274,  1270,  1271,
    1991,  1273,  4369,  2761,  1274,   677,  1073,  1273,  2435,  4095,
    1274,  3442,  3120,  3121,  1113,  2986,  3777,  1637,  1638,  3214,
    3017,  1944,  2680,  2681,  2787,  1270,  1271,  3223,  4298,  4299,
    2087,  2441,  1275,  1561,  2705,   600,  2188,   664,  2994,  4314,
    4084,  1727,  4077,  2103,  1270,  1271,   677,  2501,  1270,  1271,
    4315,  3805,  3114,  3179,   664,  1006,   599,  1925,  2299,  1275,
    1925,  3590,  3124,  1323,  3554,  1275,  4218,  4641,  1728,  3872,
    3873,   626,  2690,  3477,  3478,  1270,  1271,  2050,  2690,   626,
    2506,  1977,  1270,  1271, -2471,  3002,  1723,  1113,  4241,  4083,
     655,  1275,  2735,   519,   519,   519,   677,   519,  2728,   677,
    4294,  -510,  2569,  1113,   658,  3514,  3515,  2380,  2151,   519,
    3235,   664,  1273,  1133,   519,  1274, -2471,  2202,  1275,  2143,
    3777,  1273,  1270,  1271,  1274,  1273,  4067,  4068,  1274,  2222,
    3073,  -241,  1273,  2507,   677,  1274,  1796,  2108,  1323,  2138,
    2139,  2140,  4053,  2142,  2451,  2051,  1270,  1271,  2229,  1275,
    2573,  2884,   677,  2183,  1275,  2152,  4317,  2147,  2189,  1125,
    2156,  1275,  1270,  1271,  2510,  3224,  2452,  4331,  1275,  2522,
    1275,  1270,  1271,  1270,  1271,  3940,  2528,  4096,  3246,  1270,
    1271,   757,  3881,  2532,   664,  2533,  1131,  4054,  2247,  3941,
    1270,  1271,  1270,  1271,  2141,  2223,   656,  2144,  4124,  2692,
    2693,  3253,  3253,  1270,  1271,  1729,  2375,  3909,  3091,  1275,
    1270,  1271,  1270,  1271,  2230,  1273,  3396,  3397,  1274,  1142,
     600,  1275,   678,  3641,  2535,  1096,  1275,  2381,  2375,  2190,
    1273,   669,  2167,  1274,  1273,  3092,  2536,  1274,  1270,  1271,
    3568,  2540,  1074,  1270,  1271,  2231,  4112,   762,  1275,  1273,
    1275,  3273,  1274,  2134,  1275,  1301,  1302,  1303,  1304,  1305,
    1306,  1275,  2870,  2558,  4295,  3458,  4316,  1275,  1075,  3459,
     911,  4484,  4485,  3149,  1813,  3652,  3470,  3616,  3617,  1134,
    3372,  1407,  3480,  1273,  1408, -1649,  1274,  2229,   530,  3287,
    1273,  2823,  2690,  1274,  4220,  1978,  2224,  3290,  3247,  2376,
    2691,  3293,  1270,  1271, -1820,  3910,   677,  3679,  3680,  2385,
     677,  1273,  4510,  4510,  1274,  2232,  4055,  1464,  1319,  3030,
    1273,  1979,  1273,  1274,  1813,  1274,  1270,  1271,  1270,  1271,
    4269,  3751,  1532,   926,  1270,  1271,  1270,  1271,  1270,  1271,
    3752,  2871,  3367,  2229,  2299,   681,  3215,  1813,   774,  3911,
    2279,  1270,  1271,  2230,  3191,   677,  4472,  1270,  1271,  4476,
    1241,  2221,  1533,  2221,  1273,  2236,  2237,  1274,  2239,  3859,
    1179,  1180,  1275,   683,  2446,   519,  1270,  1271,  2225,   531,
    3942,  1275,   912,  2262,  2231,  1275,   677,  3481,  3083,  4251,
    2464,  1273,  1275,   692,  1274,  2278,  4005,  2233,  2509,  2557,
    1885,  2428,  3661,  3860,  2382,  3993,  2992,  1465,  2387,  2230,
    1273,  2509,  1534,  1274,  1273,  -912,  1535,  1274,  4011,  2692,
    2693,  2447,  4252,  3667,  3344,  1270,  1271,  1270,  1271,  2986,
     790,  3835,  3808,  1409,  1270,  1271,  3810,  1133,  2690,  3243,
    2231,  1273,  1249,  2872,  1274,  2018,  3150,  4549,  1273,  1242,
    1889,  1274,  2994,  1113,  2232,   929,  3513,  2577,  1270,  1271,
    2694,  3362,   605,  3155,   913,   532,  4482,  1207,  2515, -1820,
     605,  2017,   694,  1912,   927,  1275,  3363,  3836,   124,  3931,
    1270,  1271,   701,  3753,  3119,  1270,  1271,  1980,  1273,  2469,
    1275,  1274,  1270,  1271,  1275,  4249,  2279,   702,  4398, -1741,
    2981,  3278,  3932,   524,  2481,   713,   525,  2982,  2486,  1275,
    2232,  2664,  1273,  2118,  1322,  1274,  1925,  2611,  4250, -1741,
     703,  1648,  1649,  2496,   664,   269,  2579,   271,  1273,   872,
    1508,  1274,  1270,  1271,  2119,   706,  2233,  1273,  2292,  1273,
    1274,  3933,  1274,  1275,   708,  1273,  4253, -1741,  1274,  1096,
    1275,  3674,   596,  1806,  3675,  3132,  1273,  2497,  1273,  1274,
    2262,  1274,  1788,   722,  2505,  2692,  2693, -1741,  1280,  1273,
    1536,  1275,  1274,  2466,  2602,  2120,  1273,  2665,  1273,  1274,
    1275,  1274,  1275,   677,   664,  2518,  3863,  3864,  2482,  1509,
    1925,   710,  2233,  2102,  2519,   677,  2523,   536,  2226,   724,
    1360,  1270,  1271,  1134,  1273,  1360,  2694,  1274,  2666,  1273,
    1457,  3865,  1274,  1270,  1271,   980,   616,  2234,   664,   725,
    1270,  1271,  1510,   726,  1275,  2246,  2585, -1820,  1120,  1121,
    1702,  4254,  3541,  1703,  3122,  2483,  2484,   677,  2527,   869,
    2709,   677,  4497,   879,  2280,  1270,  1271,  2883,  1537,  4255,
     818,  1275,  2485,  2484,  1925,   882,  2322,   664,   664,   677,
     677,   887,  4024,  4025,  4026,  2531,  1588,  1207,  1273,   664,
    1275,  1274,   898,  4256,  1275,  3869,   533,   664,  2667,   625,
     925,  1113,  2511,  2484,  2534,  2429,  2512,  1883,  2537,   892,
    1006,  1322,  1273,  1113,  1273,  1274,   534,  1274,  1727,   909,
    1273,  1275,  1273,  1274,  1273,  1274,  2262,  1274,  1275,  1270,
    1271,  3512,  1538,   916,   626,  2549,  1218,  1273,   980,   616,
    1274,  2734,  2568,  1273,   900,  1728,  1274,   664,  4416,  4557,
    4418,  4559,  4419,  1279,   918,  2654,   923,  1236,  3226,  1402,
     604,   535,  1273,  -608,  1085,  1274,   536,  1291,  1275,  4572,
    1250,  1251,   677,  3629,  3630,  1291,  2234,  1420,  2683,   946,
    2668,   976,  3427,   864,   947,  3429,   971,   677,  2524,  2484,
    2525,  2484,  1275,  1323,   677,   677,  1926,   677,  4600,  4601,
    1040,   537,  1047,  2526,  2484,  3504,  3446,  3433,  1275,   538,
    2280,  1273,  3440,  1273,  1274,  1086,  1274,  1275,  3085,  1275,
    1273,   122,  3451,  1274,  4346,  1275,  2806,  2529,  2484,   932,
    2428,  3454,  2234,  3462,  2815,  2816,  1275,  1046,  1275,  3466,
    2679,  3050,  2484,  3087,  1273,  3101,  2484,  1274,  1049,  1275,
    3467,  3600,  3468,  1539,  1051,  3601,  1275,  1322,  1275,  1052,
    1511,  1054,  3812,  3469,  1053,  2866,  1273,  3772,  1067,  1274,
    2743,  1273,  3567,  1070,  1274,  1006,  1058,  1059,  1273,  3386,
    3387,  1274,  3602,  2026,  1275,  2856,   885,  1006,  1084,  1275,
    3781,  3782,  4257,  2828,  1093,  1540, -1851,  2376,  3471,  2324,
    1087,  2730,  2376,  3474,  1106,  2842,  3422,  3423,  2840,  2376,
   -1820,  2852,  3897,  2376,  3797,  2851,   123,  2628,  1273,  1077,
    2629,  1274,  2279,  2630,  2851,  3472,  2484,  2851,  1096,  2376,
    2376,  1126,   664,  2851,  2851,   124,  4433,  1127,  2880,  2876,
    2746,  1129,  2376,  2888,  1926,  3539,  3540,  2221,  1275,   122,
    2891,  2892,  3179,  2376,   677,   933,  3572,  3573,  1160,  1925,
   -1851,  1269,  3479,  2906,  2428,  2851,  2027,  1162,  3897,  1294,
    1323,  2028,  1275,  2428,  1275,  2376,  2918,  1294,  1163,  2979,
    1275,  1164,  1275,  1034,  1275,  1312,  3482,  1273,  3484,  2262,
    1274,  1166,  2664,  2938,  3486,  1318,  3488,  1275,  3489,  1273,
    2669,  1334,  1274,  1275,  3786,  1512,  1273, -1851,   125,  1274,
    2788,  3490,  4585,  4586,  2029,  3728,  3729,  3802,  2796,   955,
    1060,  1061,  1275,  3730,  3731,   955,  1513,  2803,  2804,  1314,
    2030,  1273,  1396,  1006,  1274,   934,  3803,  1167,  2808,  2809,
    2810,  2811,  1397,  2813,  2814,  2019,   664,  3732,  3733,  3735,
    3736,  1514,  2890, -1820,  3817,  3825,  3826,  3827,  2665,  1168,
    3816,  1171,   677,   677,   677,  1172,  3025,  1515,  1173,  2428,
    1174,  1275,  2981,  1275,  3651,  3790,  1175,   644,  1176,  2982,
    1275,  2269,  2853,  2854,  2855,  3804,   664,  3883,  1177,  3372,
    2208,  2209,   664,   126,  4002,  2210,  2211,   269,  1773,   271,
    2664,  2184,  1270,  1271,  1275,  1058,  1059,  3738,  3739,  3678,
    1038,  1039,  2887,  1042,  2429,  1043,  1323,  3683,  4004,  1178,
    1322,  1088,  1398,  2262,   645,  3709,  1275,  1296,  1297,  3815,
    1181,  1275,  2262,  1291,  1183,  1296,  1297,  1184,  1275,  3566,
    4010,  1406,  2866,  1185,   932,  4012,  2893,  1588,  2894, -1820,
    3814,  2484,  4013,  3838,  3839,  1188,  1996,  3958,  1189,  3248,
    3020,  3021,  3022,  1190,  2221,  1191,  2665,  2221,  2221,  3963,
    3964,  2221,  2221,  2221,  2221,  2221,  2221,  2221,  1275,  1192,
    2221,  3996,  3999,  4006,  2484,  1193,  1089,  1194,  1090,  2430,
    2895, -1852,  4014,  1415,  2270,  4020,  2484,  1195,   646,  1842,
    1843,  1844,  1845,  1846,  3653,  3129,  1196,  3656,  3657,   664,
     664,   929,  1197,  2896,  1774,  1198,  2280,  1201,  1775,  2184,
   -1851,  4027,  3848,  4052,  3423,  3676,   127,  1202,  2262,  3138,
    1290,  1423,  1776,  4058,  3839,  3144,  3144,   929,  3144,  2185,
    2530,  3249,  2279,  1208,  3867,  1209,   955,  1275,  2429,  1060,
    1061,  1210,  2897,  3129,  1322, -1852, -1851,  2429,  2186,  1275,
    1425,  4015,  1211,  1322,  1212,  3162,  1275,  3248,  4061,  4062,
     933,  2187,  1458,  4231,  1213,  1299,  1300,  1301,  1302,  1303,
    1304,  1305,  1306,  1299,  1300,  1301,  1302,  1303,  1304,  1305,
    1306,  1275,  1459,  2428,  1214,  1926,  1006,  1215,  3180,  1216,
    2249,  1445, -1852,  1219,   128,  4263,  1847,  1848,  1849,  1850,
    3144,  3144,  3144,   664,  1220,  2250,  3684,  4073,  4074,  1221,
    2103,  2103,  1222,  2430,  4101,  2816,  1223,  1062,  1063,  1064,
    2115,   955,  1224,  3143,  3143,  1294,  3143,  1291,  1225,   935,
     936,   937,   938,   939,   940,  4234,  1226,  1291,  2431,  3249,
     934,  4114,  4062,  2429,  2188,  4115,  4062,  2185,    13,  1322,
    3944,   941,  1462,   677,  3686,  2271,  3687,  1777,  1470,   129,
    -687,   130, -1851, -1820,  1227,  2272,  2186,  3870,  4123,  1323,
    2292,  1477,  2273,  4116,  4062,  4149,  4062,  4150,  4062,  2187,
    4160,  4062,  2981,   955,  2293,  4161,  4062,   664,   664,  2982,
    4166,  4167,  4038,  4039,  3034,  4041,  1228,  4271,  3143,  3143,
    3143,  1229,  2977,  3688,  1480,  1846,  1851,   131,  1852,  1853,
    1854,  1230,  1624,   736, -1851,  4128,  4129,  1855,  2430,  1231,
    1006,  3035,  4168,  4167,  4264,  3423,  2663,  1232,  2376,  1006,
    1389,  2376,  2376,  1233,  1292,  1234,  2851,  4265,  3423,  1235,
    4345,  1239,  2262,  4235,  4236,  4267,  3369,   647,  4237,  4238,
     664,  3250,  1240,  4082,  2376,  1778,  4347,  4348,  1273,    25,
    1293,  1274,  2188,  4366,  3839,  4082,  2189,  4480,  4481,   648,
    3036,  1243,  2431,  3037,  2851,  2274,  2251,  4514,  4515,  4632,
    4633,  3038,  2851,  1296,  1297,  3874,  2851,  1244,  -687,  1248,
    3891,  1252,  4420,  2898,   531,  1253,  4351,   757,  1856,  4354,
    4355,  4356,  4357,  1323,  1254, -1852,  1925,  1255, -1574,  1256,
     649,  1850,  1323,  3297,  4431,  4432,   677,  1915,  1916,  1257,
    1313,  3355,  1503,  1482,  1507,  1006,  2280,  2851,  1527,  1294,
    1727,  1529,  3236,  3237,  1291,  1389,  1528,  2190,  1544,  1294,
    -881, -1852,  1547,  1996,  1996,  1996,  1551,  2184,  3240,  1552,
    1120,  1121,  1559,  2252,   761,  3376,  2292,  1728,  3380,  3250,
    1857,  1858,  1562,   762, -1574,  1291,  1563,  2429,  1390,  1577,
     650,  1564,  2275,  1322,  1578,  1291,  1580,  2431,  4137,  2253,
    4138,  4139,  1582,  1586,  2189,  4340,  4341,  4342,  4343,  1593,
    1595,  1596,  3406,  1597,   767,  1610,  1612,  4429,  4430,  -687,
   -1574,  1613, -1574,   677,  2376,  1614,  4438,  1618,  1323,  2292,
    1615,  1616,  1617, -1574,  3298,  1619,  3279,  3039,  1851,  1621,
   -1574,  4365,  1854,  2293,  2229, -1574,  1295,  2900,  3285,  1855,
    1634,  1299,  1300,  1301,  1302,  1303,  1304,  1305,  1306, -1574,
    1640,  2254,  1120,  1121,   935,   936, -1574,   938,  3689,   940,
    1642,  1645,  1646, -1574,  3690,  2190,  1650, -1852,  2229,  3916,
    3917,  2902,  1721,  1722,   774, -1574,   941,  1725,  1726, -1574,
    1782,  1783,    38,  1390,  2322,  1784,  1588,  1787, -1574,  3926,
    1790,  1803,  3463, -1574,  1813,  2185,  3929,  1296,  1297,  1309,
    2230,  1820, -1574,  1872,  3691,  1835,  1882,  1296,  1297,   864,
    1298,  3410,  1859,  1883,  2186,  4285,  3510, -1574,    44, -1852,
    1856,  -687,  3954,  3040,  1884,  3956,  1727,  2187,  1275,  1860,
    1861,  2231,   736,  1906,  2230, -1574,  2221,  -687,  1923,   785,
   -1574,  1360,  3389,   531,  1934,   664,  1294,  1941,  1942,  1960,
    1966,   788,  2255,  1728,  1926,   789,   790,   677,  1990,  1006,
    1993, -1574,  1995,  2000,  2003,  2231,  2004,  2005, -1574,  2006,
    4233, -1574,  2007,  3162,   664,  2008,   864,  1294,  2009,  1727,
   -1574,  2010,  3692,  1858,  2021,  2022,  2023,  1294,  2025,  1207,
    2031,   664,  2033, -1574, -1574,  2034,  2042,  2043, -1574,  2054,
    2057,  2232,  2073,  2075, -1574,  2065,  1728, -1574,  2079,  3891,
    2188,  2074,  2082,  2076,  2083,  2085,   757,  2086,  2089,  1996,
     677,   534,  2093,  2108,   677,  2110,  2111,  2117,  1926,   958,
     959,  2132,  3693,  2124,    54,  2232, -1574,  2125,  2126,  4224,
    4228,  2130,  1323,  2136,  2158,  1299,  1300,  1301,  1302,  1303,
    1304,  1305,  1306,  2160,  2161,  3553,  1300,  1301,  1302,  1303,
    1304,  1305,  1306,  2163,  -842,  2159,  2176,  2178,  2376,  2192,
    3684,  2193,  2196,   761,  3041,  3398, -1574,  2197,  2376,  4519,
    2851,  2199,   762,  2233,  4224,  4228,    57,  2203,  1588,  3694,
    2323,  2204,  1926, -1574,  2205,  2376,  2851,  2241,   677, -1574,
    2376,  2242,  2244,  2248,  1296,  1297,  -687,  2324,  2292, -1574,
    2306,  2316,  2311,   767,  3685,  2312, -1574,  2233,  3686,  2317,
    3687,  3990,  3991,  3992,  1859,  2319,  2327,  2329,   865,   866,
     867,  2332,  2189,   870,   871,  1296,  1297,   873,   874,   875,
    2339, -1574,  1861,  2294,  3042,  1296,  1297,  4224,  2340,  2344,
    2345,  4228,  2351,  2364,   810,  2352,  4519,  2361,  3892,  2365,
    -687,  3893,  2363,  2377, -1574,   519,  1771,  3688,  2391,  3723,
    2393,   816,  3043,  2938,   552,  2389,   818,  2394,  2395,   819,
    2392,  2396,  2397,   774,  2398,  2399,  2400,  2401,  2402,  2403,
    3376,  1588,  2404,  4627,  2405,  2406,  1113,  2424, -1574,  3741,
    1925,  2407,  2422,  2190,  2408,  2229,  2409,  4636,  2904,  2410,
    3620,  3719,  4627,   677,  1925,   677,  2411,  4636, -1574,  1925,
    2412, -1574,  2415,  2416,  1925,  2417,  2443,  3770,  2103, -1574,
   -1574,   929,  2418,   553,  2419,  2420,  3894,  3895,  4059,  4060,
    2421,  2448,  2462,  4065,  4066,  -842,  2458,  2442,   785,  2459,
   -1574,  2460, -1574,  2471,  1301,  1302,  1303,  1304,  1305,  1306,
     534,  2466,  2509,  2473,   789,   790,   554,  2500,  2474, -1574,
    2475,  2230,  2491,  2493,  2575,  2498,  2499, -1574, -1574,  1306,
    2502, -1574, -1574,  1299,  1300,  1301,  1302,  1303,  1304,  1305,
    1306,  2484,  2503,  1299,  1300,  1301,  1302,  1303,  1304,  1305,
    1306,   555,  2231,  2234,  -881,  3524,  2513,  2547,  2517,  2521,
   -1306,  3758,  2538,  3759,  2548,  3525,  2599,  2539,  4324,  2606,
    4261,  2655,  2544, -1574,  2584,  3526,  2559,  2560,  1186,  2561,
    4597,     1,  2598,  2594,     2, -1574,  1237,  2234,  3527,  3528,
    3529,  1241,  2612,  4612,  3138,  -687,  2624,  1394,   664,   664,
     664,   556,  2625,     4,  3530, -1574,  2661, -1574,  2673,  2676,
    2704,  2715,  2719,  3162,  2721,  1475,  4310,     5,     6,  2727,
    2731,  2737,  2232,  2755,  2756,     7,  3750,  3180,  3846,  2733,
       8,     9, -1574, -1574,  2770,  2757, -1574, -1574,   664,   664,
     664,  2771,  2772,  2783,  2789,  2790,    10,  2797,  2795,   955,
    1842,  1843,  1844,  1845,  1846,  2802,  1120,  1121,  2798,  2799,
     677,   677,  3689,   925,  2800,    11,  3025,  2801,  3690,  2860,
    2862,  2927,  2115,  2636,   925,  2930,  2933,  2940,  3921,  2961,
    2980,  2964,  3888,  2996,   927,  2967,  3033,    12,  3901,  2970,
    3004,   677,  1809,  4261,  3029,  3052,    13,    14,    15,  2637,
    3051,  3906,  1333,  3053,  2233,  3136,  2249,  3065,  3691,    16,
      17,  2649,  3066,   810,  2638,  3112,   664,  3892,  3078,  3100,
    3893,  2250,  3110,  3118,  3157,  3137,  3141,  2639,  3153,   -67,
     816,  3158,  3164,  3163,   557,   818,    19,  3165,   819,   664,
    2060,  3168,  3170,  3169,  3182,  3185,  1361,  1362,  3186,  1760,
    1761,  1762,  1763,  1764,  1765,  1766,    20,  1847,  1848,  1849,
    1850,  3187,  4321,  3192,  3197,  3198,  3200,  3957,  3202,  3208,
    1427,  3201,  3216,  3220,    21,  3221,    22,  3241,  2640,  2641,
    1428,    23,  3244,  3245,    24,  3376,  3692,  3380,  3970,  3899,
    1429,  3264,  3265,  3263,  3283,  3894,  3895,  3280,  3276,  3284,
    4492,  3288,  3406,  1430,  1431,  1432,  2642,    25,  3291,    26,
    3294,  3296,   558,  3295,  3361,  3365,  3369,  3368,  3394,  1433,
    4324,  3888,  3888,  3888,  3439,  3395,  1685,  3407,  3402,    27,
    3531,  1363,  3409,  3424,  3430,  3434,  3693,  3436,  3441,   863,
    3443,  3444,  3445,  3447,  4492,  3448,    28,  3532,  3455,  3456,
      29,  1655,  1656,  3501,  3491,  3542,  3543,  3502,  3507,  3511,
    3516,  3517,  1364,  3547,  3549,  3555,  3544,  1851,  3545,  1852,
    1853,  1854,   863,  3558,  2643,  1336,  1365,   559,  1855,   863,
    3546,  1336,   560,  3559,  1407,  -846,  -846,  1658,  3561,  3224,
    3571,  4034,  2251,  3694,  3582,  -846,  1281,  1282,  3574,  1366,
     561,  1661,  1367,  3580,   664,  3584,  3934,  1662,   955,  3585,
    1663,  3586,  3593,  3606,  3607,  1368,  3612,  3619,  3631,  3628,
    3632,  3637,  3647,  3713,  2234,   562,  3654,  3710,  2644,  3717,
    3720,  2115,  3714,  3721,  1665,  3725,  3734,  1283,  3888,  3888,
    3960,   563,  1369,  3888,  3888,  4609,    30,  3740,  1634,  3726,
    1284,  3745,  1666,  3746,  4261,  2221,  2690,  3779,  2565,  1856,
    3747,  3767,  3748,    31,  3975,    32,  3768,  1370,  3533,  2252,
    3761,  4609,  1337,  1371,  3794,   664,  3769,  3496,  1337,    33,
    3787,  1671,  3793,  1678,  3534,  3806,  1652,  3819,  3830,  1285,
      34,  3823,  1120,  1121,  3832,  2253,  3840,  1338,   664,  3848,
    3847,  1339,  1286,  1338,  3850,  3854,  3855,  1339,  3857,  3856,
    3868,  3878,    35,  3871,  3875,    36,  1372,    37,  4094,  3884,
      38,  1857,  1858,   863,  3904,  3918,  3376,  3376,   863,  1287,
      39,    40,  3885,  3889,  3890,  3907,  3915,  4108,  3922,  3701,
      41,  1340,    42,  3925,  3927,  1434,  3535,  1340,  3938,  3939,
      43,  3943,  3946,  3948,  3949,  3704,    44,  2254,  1675,   863,
    2928,  1341,  1435,  3536,    45,  1676,  3955,  1341,  3959,    46,
      47,    48,  3961,  3972,  3981,   863,  3973,  4639,  3984,  3982,
    3985,  3986,  3988,  3994,  1677,  4003,  3649,  3650,  3995,  3996,
    3997,  3998,  4000,  1288,  3439,  4007,  4001,  3439,  3439,  4008,
    4009,  4018,    49,  3025,  4017,  3025,  4021,  4023,  4022,    50,
    2938,  2938,  4028,  4029,  2601,  3439,  3888,  4412,   863,   863,
    4030,   863,   863,  4040,  4042,  1342,  4043,  4046,  4163,  3682,
    4049,  1342,  4051,  4056,   863,  3702,  3705,  3707,  3708,  4057,
    4064,  4072,  4078,  1679,   788,  4087,  4089,  4090,  4104,  4109,
    3999,  1373,  4117,    51,  4120,  1374,  4121,  4125,  2255,  4122,
    4126,  1680,  4131,  1859,  4134,    52,  4135,  4130,  4140,    53,
     926,  1375,    54,  4145,  4159,  4455,  4146,    55,  4162,  1376,
    1860,  1861,  4169,  4170,  1926,   677,  4203,  1377,  4248,  4206,
    4455,  4210,  4209,  4244,  4230,  4232,  4243,  4215,  4262,  1436,
    4266,  2922,  4274,  4289,  -382,  4307,  4466,  4095,    56,  4309,
    4312,  4330,  4333,  4339,  4350,  4352,  1684,  4353,  4362,  4361,
    1343,  4358,  1378,  4367,    57,  1686,  1343,  4293,  4370,  4371,
     863,  4372,  4300,  4375,  4378,  1379,  1380,  -400,  4403,  4405,
    4406,  4407,   863,  4408,  4409,  4411,  4424,  4440,  4435,  4439,
    4441,  4442,  4451,  4452,  4462,  4456,  1344,  4463,  4470,  4498,
    4493,  1437,  1344,  4500,  3376,  1345,   863,  4502,  4503,  4506,
   -2376,  1345,  4524,  4526,  4527,  4532,  4535,  4537,  1438,  4545,
    1346,  4547,  4550,  4242,  4556,  4554,  1346,  1381,  4560,  4455,
    4561,  4555,  4566,  4571,  4575,  4565,  4569,  4577,  4580,  4544,
    4581,  4582,  4584,  1692,  4546,  1347,  4589,  4588,  4591,  4598,
    4613,  1347,  4614,  4618,  4302,  4413,  1382,  4628,  4638,  2972,
    3134,  2963,  2966,  3969,  3971,  3967,  2969,  3976,  3256,  2960,
    1143,  3974,  4211,  4464,  4319,  3238,  1644,  4465,  1383,  3983,
    1384,  3978,  4107,  4630,  4593,   632,  2702,  2620,  1348,  4455,
    4379,  4455,  3538,  1016,  1348,  4602,  4529,  4181,  4182,  4449,
    1693,  1694,  1695,  4184,  4455,  4185,  4530,  1696,  4187,  4188,
    4270,  4189,  4511,  4461,  4460,  4190,  4191,  4192,  4195,  1349,
    4196,  1786,   664,  4197,  1697,  1349,  2291,  1698,  4217,  2368,
    2886,  3560,  4455,  4455,   863,  4032,  3834,  4617,  1704,  4423,
    3565,  4132,  4248,  2063,  4469,   524,  4035,  4568,   525,  4522,
    4360,  4434,  4552,  2427,  3987,   723,  2366,  3401,  3646,  3415,
    2373,  2924,  3633,  1700,  3638,  2866,  4525,  3668,  3669,  4080,
    4287,  3711,  3945,  4468,  3493,  3809,  3811,   544,  3242,  3807,
    2709,   545,  4268,  2457,  3019,  4337,  4275,  4335,  4158,  4085,
     863,   863,  3400,  4272,  2784,  4276,  2995,  2780,  2370,   863,
     863,   863,   863,   863,   863,   863,  4521,  4070,  2912,  1031,
    1027,  3903,   863,   863,  3634,   863,   863,  2425,  2177,  2682,
     863,   863,  2175,  3417,   863,   863,   863,   863,  3171,   863,
     863,  2386,   664,  3552,  3831,  2088,  3154,   863,   863,  3109,
     863,   863,   863,   863,   863,  1045,  1463,   863,   863,   863,
     863,   863,   863,   863,   863,   863,   863,  1943,   863,  2597,
    1468,   863,   863,  3126,  3049,  2768,   863,  2180,  3127,  3880,
     863,   863,   863,   664,  3108,  1881,  3618,  4147,  3727,  1832,
    4148,  4019,  3125,   863,   863,   863,  3813,  3640,  3877,  4338,
    4141,  4483,   863,  4534,  2711,  4142,  1155,   863,  1626,  1992,
    4542,  3151,  3613,   863,  1627,   863,   863,  1395,  3152,  3849,
    4428,  3828,   642,  1628,  1441,  1362,   731,   863,   863,   863,
    1629,   863,   863,   863,   863,   863,  2739,   863,   863,   863,
     863,   863,   863,   863,   863,  2149,  1012,  2164,   863,  2740,
    2614,   863,  3645,  3833,  2081,  4567,  2174,  3858,  4044,  4583,
    4573,  4631,  4640,  4637,  3937,  4578,  1491,  3845,  1651,   628,
    1808,  2729,  1940,  1652,   629,  1653,  1490,  2131,  1654,  2122,
    2123,  2660,  2708,  2084,  2775,  2635,  3820,  1609,  1655,  1656,
     922,  3508,  1444,  4344,  4610,  1447,  4313,   717,  4477,  4478,
     718,  4311,  1146,  1147,  1148,     0,     0,     0,     0,  1363,
       0,     0,     0,     0,     0,     0,     0,     0,  1926,  1657,
    4610,     0,     0,     0,  1658,  1659,     0,     0,   664,     0,
    1660,     0,  1926,     0,     0,     0,     0,  1926,  1661,     0,
    1364,     0,  1926,     0,  1662,     0,     0,  1663,     0,     0,
       0,     0,     0,     0,  1365,  4523,  1664,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1665,     0,     0,     0,     0,     0,  1366,     0,     0,
    1367,     0,     0,     0,     0,  1634,     0,     0,     0,  1666,
       0,     0,     0,  1368,     0,     0,   863,  1667,  1668,     0,
       0,     0,     0,     0,  1669,     0,     0,     0,     0,     0,
       0,     0,  1670,     0,     0,     0, -1006,     0,  1671,     0,
    1369,     0,     0,     0,     0,     0,   863,     0,     0,  1672,
     863,     0,     0,     0,     0,     0,   863,     0,     0,     0,
    1655,  1656,     0,   863,     0,  1370,     0,     0,     0,     0,
       0,  1371,  1673,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  -846,  -846,  1658,     0,     0,     0,
       0,     0,     0,     0,  -846,     0,     0,     0,     0,     0,
    1661,     0,     0,  1674,  1372,  1675,  1662,     0,     0,  1663,
       0,     0,  1676,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1677,     0,  1665,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1634,     0,     0,
       0,  1666,     0,     0,  1678,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       1,     0,     0,     2,     0,     0,     0,     0,     0,     0,
    1671,     0,     0,     0,     0,     0,     0,     0,     3,     0,
    1679,     0,     4,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     5,     6,  1680,     0,
       0,     0,  1681,     0,     7,     0,     0,  1362,     0,     8,
       9,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    10,     0,     0,     0,  1373,
       0,     0,     0,  1442,     0,     0,     0,     0,     0,     0,
    1682,     0,     0,     0,    11,     0,  1683,  1675,     0,  1375,
       0,     0,     0,  1684,  1676,     0,     0,  1376,  4201,  1685,
       0,     0,  1686,     0,   842,  1377,    12,     0,     0,     0,
       0,     0,     0,  1677,     0,    13,    14,    15,     0,     0,
       0,     0,     0,     0,     0,     0,  3009,     0,    16,    17,
       0,  1363,     0,     0,  1687,     0,     0,   890,     0,     0,
    1378,    18,     0,     0,   897,     0,     0,     0,  1688,  1689,
    1690,  1691,     0,  1379,  1380,    19,     0,     0,     0,     0,
       0,     0,  1364,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1679,     0,     0,    20,  1365,     0,     0,     0,
    1692,  4201,  4201,     0,     0,     0,     0,     0,     0,     0,
    1680,     0,     0,    21,   863,    22,     0,     0,   863,  1366,
      23,     0,  1367,    24,     0,  1381,     0,     0,   863,     0,
     863,     0,     0,     0,     0,  1368,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    25,     0,    26,     0,
       0,     0,     0,     0,  1382,     0,     0,  1693,  1694,  1695,
       0,     0,  1369,     0,  1696,  1684,     0,     0,    27,     0,
       0,   863,     0,     0,  1686,     0,  1383,     0,  1384,     0,
       0,  1697,     0,     0,  1698,    28,     0,  1370,     0,    29,
       0,     0,     0,  1371,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1699,     0,     0,
       0,     0,     0,  1169,     0,     0,   863,   863,   863,     0,
    1700,     0,     0,     0,     0,     0,     0,  1701,  4201,  4201,
       0,   863,     0,     0,     0,     0,  1372,     0,     0,   863,
       0,     0,     0,     0,  1200,     0,     0,     0,     0,     0,
    4201,     0,  1692,     0,  1702,     0,     0,  1703,   863,     0,
    1217,  2910,     0,     0,   863,     0,  1652,   863,  1653,   863,
       0,     0,     0,     0,     0,   863,     0,   863,   863,     0,
       0,  1655,  1656,     0, -1006,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,    32,     0,     0,  1261,  4201,  1693,
    1694,  1695,  1657,     0,     0,     0,  1696,  1658,    33,     0,
       0,     0,     0,  4201,     0,     0,     0,     0,     0,    34,
       0,  1661,     0,  1697,     0,     0,  1698,  1662,     0,  4201,
    1663,     0,     0,     0,     0,     0,     0,     0,     0,  1664,
       0,    35,     0,     0,    36,     0,    37,     0,   863,    38,
       0,     0,     0,     0,  1665,     0,     0,     0,   863,    39,
      40,  1373,  1700,  4201,     0,     0,     0,     0,  1634,    41,
       0,    42,  1666,     0,     0,  4201,  4201,     0,     0,    43,
    1667,  1375,     0,     0,     0,    44,     0,  2911,     0,  1376,
       0,     0,     0,    45,     0,  1670,   863,  1377,    46,    47,
      48,  1671,     0,     0,     0,   842,     0,     0,     0,     0,
       0,     0,  4201,     0,     0,     0,     0,  1472,     0,     0,
    3010,     0,  4201,     0,     0,     0,     0,  4201,     0,     0,
       0,    49,  1378,     0,     0,  1673,     0,     0,    50,     0,
       0,  1501,     0,     0,     0,  1379,  1380,     0,     0,     0,
    4201,     0,  4201,     0,     0,     0,     0,     0,     0,     0,
     863,     0,     0,     0,     0,     0,     0,   863,     0,     0,
    4201,     0,  4201,     0,  4201,     0,     0,     0,  1675,     0,
       0,     0,    51,     0,     0,  1676,     0,  4201,     0,     0,
       0,     0,     0,     0,    52,     0,     0,  1381,    53,  4201,
    4201,    54,     0,     0,  1677,     0,    55,     0,     0,     0,
       0,     0,     0,     0,     0,  4201,  4201,     0,     0,     0,
    4201,     0,     0,     0,  1737,     0,  1382,  1678,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    56,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1383,     0,
    1384,     0,     0,    57,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1679,     0,     0,     0,     0,     0,  1736,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1680,     0,     0,     0,  1681,  1738,  1739,  1740,  1741,
    1742,  1058,  1059,  1743,  1744,  1745,     0,  1746,  1747,  1748,
    1749,  1750,  1751,  1752,  1753,  1754,     0,  1755,  1756,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1811,  1812,     0,     0,  1683,
       0,     0,     0,     0,  1822,  1823,  1684,     0,  1827,  1828,
    1829,     0,     0,     0,     0,  1686,     0,  1836,  1837,     0,
    1838,  1839,     0,     0,     0,  1864,     0,     0,     0,  1874,
    1875,  1876,  1877,     0,  1879,     0,     0,     0,     0,     0,
       0,     0,  1887,  1888,     0,  1891,  1892,     0,     0,     0,
     863,     0,  1896,  1897,     0,     0,  1900,  1901,  1902,  1903,
    1904,  1905,  1689,  1907,     0,     0,  1910,  1911,     0,     0,
       0,  1914,     0,     0,     0,  1917,  1921,  1922,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1929,  1930,
    1931,     0,     0,  1692,     0,     0,     0,  1939,     0,     0,
       0,     0,   842,     0,     0,  1060,  1061,     0,  1946,     0,
    1947,  1948,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   863,     0,     0,     0,
       0,     0,     0,     0,     0,   863,   863,     0,     0,     0,
       0,     0,   863,     0,     0,   863,  1984,     0,     0,     0,
    1693,  1694,  1695,     0,     0,     0,     0,  1696,   863,   863,
       0,   863,     0,     0,   863,   863,   863,   863,   863,     0,
       0,   863,     0,     0,  1697,     0,     0,  1698,     0,     0,
     863,     0,     0,     0,     0,     0,   863,     0,   863,     0,
     863,   863,     0,   863,   863,     0,     0,     0,   863,   863,
     863,     0,     0,     0,   863,   863,   863,     0,   863,     0,
     863,     0,   863,  1700,   863,     0,   863,     0,     0,     0,
    1701,   863,     0,     0,     0,     0,     0,  3299,  3300,     0,
       0,     0,     0,  3301,     0,  3302,     0,  3303,  3304,     0,
       0,     0,     0,   863,     0,     0,   863,  1702,     0,     0,
    1703,     0,   863,     0,     0,  3305,     0,   863,   863,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2094,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3306,     0,     0,  3307,     0,  1655,
    1656,     0,     0,     0,     0,  3308,     0,     0,     0,     0,
       0,  2128,     0,     0,     0,  1501,     0,   901,   979,     0,
       0,     0,     0,     0,  3309,     0,     0,     0,  2135,     0,
       0,     0,     0,     0,     0,  1658,     0,     0,     0,     0,
       0,  3310,     0,   980,   616,     0,     0,     0,     0,  1661,
       0,     0,     0,     0,   981,  1662,     0,     0,  1663,     0,
       0,     0,     0,   863,     0,     0,     0,     0,     0,  3311,
       0,  3312,     0,     0,  1655,  1656,   863,     0,   982,     0,
     983,     0,  1665,     0,     0,     0,     0,  3313,  3314,     0,
     984,     0,     0,     0,     0,     0,  1634,     0,     0,     0,
    1666,     0,     0,     0,     0,     0,     0,     0,  -846,  -846,
    1658,     0,     0,     0,     0,     0,     0,     0,  -846,     0,
       0,     0,     0,     0,  1661,     0,     0,     0,  3315,  1671,
    1662,     0,     0,  1663,     0,     0,     0,     0, -1820,   985,
       0,  3316,     0,     0,   986,     0,     0,   987,     0,     0,
       0,     0,     0,  3254,     0,     0,     0,  1665,     0,     0,
    3317,     0,     0,     0,     0,  3254,  3254,     0,     0,  3318,
    3319,  1634,  3320,     0,     0,  1666,     0,     0,     0,   988,
       0,   989,     0,     0,     0,     0,     0,     0,     0,     0,
     990,     0,   991,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1671,     0,  1675,     0,  3321,  3322,
    3323,     0,     0,  1676,     0,   992,   993,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3324,  3325,  3326,
       0,     0,  1677,     0,  3327,     0,     0,  3328,     0,     0,
       0,   994,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3329,  3330,     0,     0,     0,
       0,     0,   995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1675,     0,     0,     0,     0,     0,     0,  1676,  3331,
    3332,  1679,     0,     0,     0,   996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1677,     0,  1680,
       0,     0,     0,     0,     0,  3333,     0,     0,     0,     0,
       0,     0,     0,  3254,  3254,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2472,
       0,     0,     0,  2476,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2472,     0,     0,     0,     0,
     997,     0,     0,     0,  1684,     0,  1679,     0,     0,     0,
       0,     0,     0,  1686,     0,   863,  3334,     0,   863,     0,
    3335,     0,     0,     0,  1680,     0,     0,   998,     0,     0,
       0,     0,  3336,     0,     0,     0,     0,     0,   999,  1000,
     863,   863,  1001,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   863,  1003,     0,     0,     0,     0,     0,     0,
       0,   863,     0,   863,     0,   863,     0,     0,     0,  1684,
       0,  2551,  2553,  2555,     0,     0,     0,     0,  1686,     0,
       0,  1692,  3337,   863,     0,  3338,     0,     0,  3339,  3340,
    3341,  3342,     0,     0,  2578,   863,     0,     0,     0,     0,
     863,     0,     0,     0,     0,     0,  1004,     0,     0,     0,
       0,     0,     0,  2586,     0,     0,     0,     0,     0,  1005,
       0,     0,  2591,     0,  2592,     0,     0,     0,     0,     0,
       0,  3343,  3344,     0,     0,     0,     0,     0,  1693,  1694,
    1695,     0,     0,     0,     0,  1696,     0,     0,     0,     0,
     863, -2412,     0,     0,     0,  1006,  1692,     0,     0,  3345,
     863,     0,  1697,     0,     0,  1698,     0,     0,     0,     0,
       0,     0,     0,     0,  1007,   863,   863,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   863,
     863,  1700,     0,     0,   863,     0,     0,     0,     0,     0,
       0,     0,     0,  1693,  1694,  1695,     0,     0,     0,     0,
    1696,     0,     0,  2678,     0,     0,     0,     0,     0,     0,
       0,     0, -2412,     0,     0,     0,     0,  1697,     0,  1008,
    1698,   863,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2718,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1700,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2747,     0,     0,     0,     0,
       0,     0,   842,     0,     0,     0,   863,   863,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3254,  3254,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   863,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   863,     0,   863,     0,     0,   863,   863,     0,   863,
       0,     0,     0,     0,     0,     0,     0,     0,   863,     0,
       0,     0,     0,   863,     0,     0,   863,     0,   863,   863,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   863,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   863,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2939,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3028,     0,     0,     0,     0,     0,     0,     0,     0,
    3031,  3032,     0,     0,     0,     0,     0,  3046,     0,     0,
    3047,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3054,  3055,     0,  3056,     0,     0,  3059,
    3060,  3061,  3062,  3063,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3067,     0,     0,     0,     0,
       0,  3068,     0,  3069,     0,  3070,  3071,     0,  3072,     0,
       0,     0,     0,  3075,  3076,  3077,     0,     0,     0,  3079,
    3080,  3081,     0,  3082,     0,  3084,     0,  3086,     0,  3088,
       0,  3089,     0,     0,     0,     0,  3090,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3123,     0,     0,
       0,     0,  1984,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   863,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   863,     0,     0,     0,     0,   863,     0,
       0,     0,   863,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2094,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1501,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   863,     0,   863,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   863,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4199,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   863,   863,     0,
       0,     0,     0,     0,  4199,  4199,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3426,     0,     0,  3428,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3449,  3450,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3473,     0,     0,
       0,     0,     0,     0,     0,     0,  3483,     0,  3485,     0,
    3487,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   842,     0,
       0,     0,     0,     0,     0,     0,     0,   863,     0,   863,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   863,
       0,  4199,  4199,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4199,     0,     0,     0,     0,     0,     0,
       0,  4417,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   842,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3576,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2094,  3597,     0,     0,     0,     0,     0,     0,     0,   863,
       0,  4199,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3610,  3611,  4199,   863,     0,  3576,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4199,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3625,     0,     0,     0,
       0,     0,     0,     0,     0,   863,  4199,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4199,  4199,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   863,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4199,     0,     0,     0,     0,
       0,     0,   863,     0,     0,  4199,     0,     0,     0,     0,
    4199,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   863,     0,     0,     0,
       0,  3715,  3716,  4199,     0,  4199,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   863,     0,
       0,     0,     0,  4199,     0,  4199,     0,  4199,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4199,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4199,  4199,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4199,  4199,
       0,     0,  3773,  4199,     0,     0,     0,     0,     0,   863,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3783,     0,  2094,     0,
       0,  3788,  3789,     0,     0,     0,     0,   863,     0,     0,
       0,     0,     0,  3796,     0,     0,     0,     0,  3798,     0,
       0,  3799,     0,  3800,  3801,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3576,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   144,     0,   145,   146,   147,   148,
     149,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,     0,     0,   154,   155,   156,   157,   158,     0,     0,
       0,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,     0,     0,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,     0,
       0,     0,     0,   176,   177,   178,     0,   180,   181,     0,
     182,   183,     0,   184,   185,     0,   187,     0,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
       0,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,     0,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
       0,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,     0,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,     0,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,     0,     0,     0,
       0,     0,     0,   253,     0,   254,     0,   255,     0,   256,
       0,     0,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,     0,   264,     0,     0,     0,     0,     0,   267,
       0,  3576,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,  2094,   276,
       0,     0,     0,  4048,   278,     0,     0,  4050,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,     0,   286,     0,     0,   287,     0,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,     0,   317,   318,   319,   320,     0,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,   331,     0,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,   350,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,  2094,     0,  4119,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     359,   360,     0,     0,     0,   363,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,     0,     0,     0,
       0,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,     0,     0,   400,     0,   402,
       0,     0,   403,   404,   405,   406,   407,   408,   409,   410,
       0,     0,     0,   412,     0,     0,   414,   415,   416,     0,
     417,     0,     0,     0,   419,   420,   421,   422,   423,   424,
     425,     0,   427,   428,     0,   429,     0,     0,     0,     0,
     431,   432,   433,     0,     0,     0,     0,   435,     0,     0,
       0,     0,     0,     0,   438,     0,   440,     0,   441,     0,
       0,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,     0,   456,   457,   458,   459,     0,     0,
       0,   461,   897,  4288,   462,   463,   464,   465,   466,   467,
       0,     0,   468,   469,   470,   471,     0,   472,   473,     0,
       0,   474,   475,   476,   477,     0,     0,   478,   479,     0,
     480,   481,   482,   483,     0,     0,     0,     0,     0,   484,
     485,     0,     0,     0,     0,   487,   488,   489,     0,   490,
     491,     0,   492,   493,     0,     0,     0,     0,     0,   496,
       0,     0,   497,     0,     0,     0,   499,   500,     0,     0,
       0,     0,     0,   501,     0,   502,     0,     0,   503,     0,
       0,     0,   504,     0,   505,   506,   507,   508,     0,     0,
       0,     0,     0,     0,   509,   510,     0,     0,   512,     0,
     514,   515,     0,     0,   516,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4373,     0,  4374,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4382,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4453,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4458,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   143,   144,
       0,   732,   146,   147,   148,   149,     0,     0,   150,   151,
    4496,     0,     0,   152,     0,     0,   733,     0,   154,   155,
     156,   157,   734,   159,     0,   160,     0,     0,   735,   161,
     736,   737,   738,   162,   739,     0,   163,   164,   165,  1918,
     166,     0,   167,   168,     0,     0,   169,   740,   741,   170,
     171,     0,   172,   173,   742,   743,   175,     0,   176,   177,
     178,   179,   744,   181,     0,   745,   183,  4536,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   746,   200,     0,   747,   748,
     201,  4553,     0,   202,   749,   203,   750,     0,   204,   751,
     752,     0,   205,   206,   207,   753,   754,   755,     0,     0,
       0,     0,   756,   210,   757,     0,     0,   758,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   759,     0,   238,   239,   240,   241,   242,
     760,   761,   243,   244,  4619,   245,   246,   247,   248,   249,
     762,     0,   250,   251,     0,     0,     0,   763,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   764,   259,   765,
       0,   261,  3576,   262,     0,   766,     0,   263,   264,     0,
     265,   767,     0,   266,   267,     0,     0,     0,   768,   269,
     270,   271,   769,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,   770,   276,   277,   771,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,  1919,
     287,     0,   772,   288,   289,     0,     0,     0,     0,     0,
     773,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,   774,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   775,
     317,   318,   319,   320,   776,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   777,   328,     0,     0,   778,
     330,   779,   331,     0,   332,   780,   781,   782,   783,   784,
     337,   338,   339,   340,   341,     0,   785,   342,   343,     0,
       0,   344,   345,   346,   347,   348,   786,   787,   788,   349,
     350,     0,   789,   790,   351,     0,   352,   353,     0,   354,
     355,   356,     0,     0,   357,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   358,   359,   360,   791,   361,   362,
     363,     0,   364,   365,   792,   367,   368,   369,   370,   793,
     794,   373,   795,   374,     0,   375,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   796,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
     399,     0,   400,   401,   402,   797,   798,   403,   404,   405,
     406,   407,   408,   409,   410,     0,   411,     0,   412,   413,
       0,   414,   415,   416,     0,   799,     0,   800,   418,   419,
     420,   421,   422,   801,   802,   425,   426,   427,   428,     0,
     803,   430,     0,     0,     0,   431,   432,   433,   434,     0,
       0,     0,   435,     0,     0,     0,   436,     0,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,     0,     0,
       0,     0,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,   455,   456,
     457,   458,   459,   804,   805,   460,   461,     0,     0,   462,
     463,   806,   465,   466,   467,   807,   808,   468,   469,   470,
     471,   809,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   810,   478,   479,     0,   811,   812,   813,   814,     0,
       0,     0,     0,  1920,   484,   485,     0,   815,   816,   817,
     487,   488,   489,   818,   490,   491,   819,   492,   493,     0,
     494,   495,     0,     0,   496,     0,     0,   497,     0,   498,
       0,   820,   500,     0,     0,   821,   822,   823,   501,   824,
     502,     0,     0,   503,   825,     0,   826,   504,     0,   505,
     506,   827,   828,     0,     0,     0,     0,     0,     0,   509,
     510,   511,     0,   512,   513,   514,   515,     0,     0,   829,
       0,     0,     0,   830,   831,     0,     0,     0,     0,   833,
     834,     0,     0,   835,   836,     0,     0,   837,   838,   143,
     144,     0,   732,   146,   147,   148,   149,  1497,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   733,     0,   154,
     155,   156,   157,   734,   159,     0,   160,     0,     0,  1498,
     161,   736,   737,   738,   162,   739,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,   740,   741,
     170,   171,     0,   172,   173,   742,   743,   175,     0,   176,
     177,   178,   179,   744,   181,     0,   745,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   746,   200,     0,   747,
     748,   201,     0,     0,   202,   749,   203,   750,     0,   204,
     751,   752,     0,   205,   206,   207,   753,   754,   755,     0,
       0,     0,     0,   756,   210,   757,     0,     0,  1499,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   759,     0,   238,   239,   240,   241,
     242,   760,   761,   243,   244,     0,   245,   246,   247,   248,
     249,   762,     0,   250,   251,     0,     0,     0,   763,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   764,   259,
     765,     0,   261,     0,   262,     0,   766,     0,   263,   264,
       0,   265,   767,     0,   266,   267,     0,     0,     0,   768,
     269,   270,   271,   769,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,   770,   276,   277,   771,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,   772,   288,   289,     0,     0,     0,     0,
       0,   773,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,   774,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     775,   317,   318,   319,   320,   776,   321,   322,     0,     0,
       0,     0,   323,   324,   325,   326,   777,   328,     0,     0,
     778,   330,   779,   331,     0,   332,   780,   781,   782,   783,
     784,   337,   338,   339,   340,   341,     0,   785,   342,   343,
       0,     0,   344,   345,   346,   347,   348,   786,   787,   788,
     349,   350,     0,   789,   790,   351,     0,   352,   353,  1500,
     354,   355,   356,     0,     0,   357,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   358,   359,   360,   791,   361,
     362,   363,     0,   364,   365,   792,   367,   368,   369,   370,
     793,   794,   373,   795,   374,     0,   375,   376,   377,     0,
     378,     0,   379,   380,   381,   382,   383,     0,   796,   385,
     386,     0,     0,   387,     0,     0,     0,   388,   389,   390,
     391,   392,     0,     0,   393,   394,   395,   396,   397,     0,
     398,   399,     0,   400,   401,   402,   797,   798,   403,   404,
     405,   406,   407,   408,   409,   410,     0,   411,     0,   412,
     413,     0,   414,   415,   416,     0,   799,     0,   800,   418,
     419,   420,   421,   422,   801,   802,   425,   426,   427,   428,
       0,   803,   430,     0,     0,     0,   431,   432,   433,   434,
       0,     0,     0,   435,     0,     0,     0,   436,     0,   437,
     438,   439,   440,     0,   441,   442,   443,   444,   445,     0,
       0,     0,     0,     0,   446,   447,   448,     0,   449,   450,
       0,   451,     0,     0,   452,     0,   453,     0,   454,   455,
     456,   457,   458,   459,   804,   805,   460,   461,     0,     0,
     462,   463,   806,   465,   466,   467,   807,   808,   468,   469,
     470,   471,   809,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   810,   478,   479,     0,   811,   812,   813,   814,
       0,     0,     0,     0,     0,   484,   485,     0,   815,   816,
     817,   487,   488,   489,   818,   490,   491,   819,   492,   493,
       0,   494,   495,     0,     0,   496,     0,     0,   497,     0,
     498,     0,   820,   500,     0,     0,   821,   822,   823,   501,
     824,   502,     0,     0,   503,   825,     0,   826,   504,     0,
     505,   506,   827,   828,     0,     0,     0,     0,     0,     0,
     509,   510,   511,     0,   512,   513,   514,   515,     0,     0,
     829,     0,     0,     0,   830,   831,     0,     0,     0,     0,
     833,   834,     0,     0,   835,   836,     0,     0,   837,   838,
     143,   144,     0,   732,   146,   147,   148,   149,     0,     0,
     150,   151,     0,     0,     0,   152,     0,     0,   733,     0,
     154,   155,   156,   157,   734,   159,     0,   160,     0,     0,
     735,   161,   736,   737,   738,   162,   739,     0,   163,   164,
     165,     0,   166,     0,   167,   168,     0,     0,   169,   740,
     741,   170,   171,     0,   172,   173,   742,   743,   175,     0,
     176,   177,   178,   179,   744,   181,     0,   745,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,   195,     0,   196,   197,   198,   746,   200,     0,
     747,   748,   201,     0,     0,   202,   749,   203,   750,     0,
     204,   751,   752,     0,   205,   206,   207,   753,   754,   755,
       0,     0,     0,     0,   756,   210,   757,     0,     0,   758,
     211,   212,     0,   213,     0,     0,     0,   214,     0,   215,
     216,   217,   218,   219,     0,     0,     0,   220,     0,     0,
     221,   222,   223,     0,     0,     0,   224,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   759,     0,   238,   239,   240,
     241,   242,   760,   761,   243,   244,     0,   245,   246,   247,
     248,   249,   762,     0,   250,   251,     0,     0,     0,   763,
     253,     0,   254,     0,   255,     0,   256,     0,   257,   764,
     259,   765,     0,   261,     0,   262,     0,   766,     0,   263,
     264,     0,   265,   767,     0,   266,   267,     0,     0,     0,
     768,   269,   270,   271,   769,     0,   272,   273,   274,     0,
       0,   275,     0,     0,     0,   770,   276,   277,   771,     0,
       0,   278,     0,     0,     0,   279,   280,     0,   281,   282,
       0,     0,     0,   283,     0,   284,     0,     0,   285,   286,
       0,     0,   287,     0,   772,   288,   289,     0,     0,     0,
       0,     0,   773,   291,     0,   292,     0,   293,     0,   294,
     295,     0,     0,   774,     0,     0,     0,     0,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   775,   317,   318,   319,   320,   776,   321,   322,     0,
       0,     0,     0,   323,   324,   325,   326,   777,   328,     0,
       0,   778,   330,   779,   331,     0,   332,   780,   781,   782,
     783,   784,   337,   338,   339,   340,   341,     0,   785,   342,
     343,     0,     0,   344,   345,   346,   347,   348,   786,   787,
     788,   349,   350,     0,   789,   790,   351,     0,   352,   353,
       0,   354,   355,   356,     0,     0,   357,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   358,   359,   360,   791,
     361,   362,   363,     0,   364,   365,   792,   367,   368,   369,
     370,   793,   794,   373,   795,   374,     0,   375,   376,   377,
       0,   378,     0,   379,   380,   381,   382,   383,     0,   796,
     385,   386,     0,     0,   387,     0,     0,     0,   388,   389,
     390,   391,   392,     0,     0,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,   401,   402,   797,   798,   403,
     404,   405,   406,   407,   408,   409,   410,     0,   411,     0,
     412,   413,     0,   414,   415,   416,     0,   799,     0,   800,
     418,   419,   420,   421,   422,   801,   802,   425,   426,   427,
     428,     0,   803,   430,     0,     0,     0,   431,   432,   433,
     434,     0,     0,     0,   435,     0,     0,     0,   436,     0,
     437,   438,   439,   440,     0,   441,   442,   443,   444,   445,
       0,     0,     0,     0,     0,   446,   447,   448,     0,   449,
     450,     0,   451,     0,     0,   452,     0,   453,     0,   454,
     455,   456,   457,   458,   459,   804,   805,   460,   461,     0,
       0,   462,   463,   806,   465,   466,   467,   807,   808,   468,
     469,   470,   471,   809,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   810,   478,   479,     0,   811,   812,   813,
     814,     0,     0,     0,     0,     0,   484,   485,     0,   815,
     816,   817,   487,   488,   489,   818,   490,   491,   819,   492,
     493,     0,   494,   495,     0,     0,   496,     0,     0,   497,
       0,   498,     0,   820,   500,     0,     0,   821,   822,   823,
     501,   824,   502,     0,     0,   503,   825,     0,   826,   504,
       0,   505,   506,   827,   828,     0,     0,     0,     0,     0,
       0,   509,   510,   511,     0,   512,   513,   514,   515,     0,
       0,   829,     0,     0,     0,   830,   831,   832,     0,     0,
       0,   833,   834,     0,     0,   835,   836,     0,     0,   837,
     838,   143,   144,     0,   732,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,     0,   733,
       0,   154,   155,   156,   157,   734,   159,     0,   160,     0,
       0,   735,   161,   736,   737,   738,   162,   739,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
     740,   741,   170,   171,     0,   172,   173,   742,   743,   175,
       0,   176,   177,   178,   179,   744,   181,     0,   745,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   746,   200,
       0,   747,   748,   201,     0,     0,   202,   749,   203,   750,
       0,   204,   751,   752,     0,   205,   206,   207,   753,   754,
     755,     0,     0,     0,     0,   756,   210,   757,     0,     0,
     758,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   759,     0,   238,   239,
     240,   241,   242,   760,   761,   243,   244,     0,   245,   246,
     247,   248,   249,   762,     0,   250,   251,     0,     0,     0,
     763,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     764,   259,   765,     0,   261,     0,   262,     0,   766,     0,
     263,   264,     0,   265,   767,     0,   266,   267,     0,     0,
       0,   768,   269,   270,   271,   769,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,   770,   276,   277,   771,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,   772,   288,   289,     0,     0,
       0,     0,     0,   773,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,   774,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   775,   317,   318,   319,   320,   776,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   777,   328,
       0,     0,   778,   330,   779,   331,     0,   332,   780,   781,
     782,   783,   784,   337,   338,   339,   340,   341,     0,   785,
     342,   343,     0,     0,   344,   345,   346,   347,   348,   786,
     787,   788,   349,   350,     0,   789,   790,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
     791,   361,   362,   363,     0,   364,   365,   792,   367,   368,
     369,   370,   793,   794,   373,   795,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     796,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,   797,   798,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   799,     0,
     800,   418,   419,   420,   421,   422,   801,   802,   425,   426,
     427,   428,     0,   803,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,   804,   805,   460,   461,
       0,     0,   462,   463,   806,   465,   466,   467,   807,   808,
     468,   469,   470,   471,   809,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   810,   478,   479,     0,   811,   812,
     813,   814,     0,     0,     0,     0,     0,   484,   485,     0,
     815,   816,   817,   487,   488,   489,   818,   490,   491,   819,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   820,   500,     0,     0,   821,   822,
     823,   501,   824,   502,     0,     0,   503,   825,     0,   826,
     504,     0,   505,   506,   827,   828,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
       0,     0,   829,     0,     0,     0,   830,   831,  2492,     0,
       0,     0,   833,   834,     0,     0,   835,   836,     0,     0,
     837,   838,   143,   144,     0,   732,   146,   147,   148,   149,
       0,     0,   150,   151,     0,     0,     0,   152,     0,     0,
     733,     0,   154,   155,   156,   157,   734,   159,     0,   160,
       0,     0,   735,   161,   736,   737,   738,   162,   739,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,   740,   741,   170,   171,     0,   172,   173,   742,   743,
     175,     0,   176,   177,   178,   179,   744,   181,     0,   745,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   746,
     200,     0,   747,   748,   201,     0,     0,   202,   749,   203,
     750,     0,   204,   751,   752,     0,   205,   206,   207,   753,
     754,   755,     0,     0,     0,     0,   756,   210,   757,     0,
       0,   758,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   759,     0,   238,
     239,   240,   241,   242,   760,   761,   243,   244,     0,   245,
     246,   247,   248,   249,   762,     0,   250,   251,     0,     0,
       0,   763,   253,  2550,   254,     0,   255,     0,   256,     0,
     257,   764,   259,   765,     0,   261,     0,   262,     0,   766,
       0,   263,   264,     0,   265,   767,     0,   266,   267,     0,
       0,     0,   768,   269,   270,   271,   769,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,   770,   276,   277,
     771,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,   772,   288,   289,     0,
       0,     0,     0,     0,   773,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,   774,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   775,   317,   318,   319,   320,   776,   321,
     322,     0,     0,     0,     0,   323,   324,   325,   326,   777,
     328,     0,     0,   778,   330,   779,   331,     0,   332,   780,
     781,   782,   783,   784,   337,   338,   339,   340,   341,     0,
     785,   342,   343,     0,     0,   344,   345,   346,   347,   348,
     786,   787,   788,   349,   350,     0,   789,   790,   351,     0,
     352,   353,     0,   354,   355,   356,     0,     0,   357,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   358,   359,
     360,   791,   361,   362,   363,     0,   364,   365,   792,   367,
     368,   369,   370,   793,   794,   373,   795,   374,     0,   375,
     376,   377,     0,   378,     0,   379,   380,   381,   382,   383,
       0,   796,   385,   386,     0,     0,   387,     0,     0,     0,
     388,   389,   390,   391,   392,     0,     0,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,   401,   402,   797,
     798,   403,   404,   405,   406,   407,   408,   409,   410,     0,
     411,     0,   412,   413,     0,   414,   415,   416,     0,   799,
       0,   800,   418,   419,   420,   421,   422,   801,   802,   425,
     426,   427,   428,     0,   803,   430,     0,     0,     0,   431,
     432,   433,   434,     0,     0,     0,   435,     0,     0,     0,
     436,     0,   437,   438,   439,   440,     0,   441,   442,   443,
     444,   445,     0,     0,     0,     0,     0,   446,   447,   448,
       0,   449,   450,     0,   451,     0,     0,   452,     0,   453,
       0,   454,   455,   456,   457,   458,   459,   804,   805,   460,
     461,     0,     0,   462,   463,   806,   465,   466,   467,   807,
     808,   468,   469,   470,   471,   809,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   810,   478,   479,     0,   811,
     812,   813,   814,     0,     0,     0,     0,     0,   484,   485,
       0,   815,   816,   817,   487,   488,   489,   818,   490,   491,
     819,   492,   493,     0,   494,   495,     0,     0,   496,     0,
       0,   497,     0,   498,     0,   820,   500,     0,     0,   821,
     822,   823,   501,   824,   502,     0,     0,   503,   825,     0,
     826,   504,     0,   505,   506,   827,   828,     0,     0,     0,
       0,     0,     0,   509,   510,   511,     0,   512,   513,   514,
     515,     0,     0,   829,     0,     0,     0,   830,   831,     0,
       0,     0,     0,   833,   834,     0,     0,   835,   836,     0,
       0,   837,   838,   143,   144,     0,   732,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
       0,   733,     0,   154,   155,   156,   157,   734,   159,     0,
     160,     0,     0,   735,   161,   736,   737,   738,   162,   739,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,   740,   741,   170,   171,     0,   172,   173,   742,
     743,   175,     0,   176,   177,   178,   179,   744,   181,     0,
     745,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     746,   200,     0,   747,   748,   201,     0,     0,   202,   749,
     203,   750,     0,   204,   751,   752,     0,   205,   206,   207,
     753,   754,   755,     0,     0,     0,     0,   756,   210,   757,
       0,     0,   758,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   759,     0,
     238,   239,   240,   241,   242,   760,   761,   243,   244,     0,
     245,   246,   247,   248,   249,   762,     0,   250,   251,     0,
       0,     0,   763,   253,  2552,   254,     0,   255,     0,   256,
       0,   257,   764,   259,   765,     0,   261,     0,   262,     0,
     766,     0,   263,   264,     0,   265,   767,     0,   266,   267,
       0,     0,     0,   768,   269,   270,   271,   769,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,   770,   276,
     277,   771,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,   772,   288,   289,
       0,     0,     0,     0,     0,   773,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,   774,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   775,   317,   318,   319,   320,   776,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     777,   328,     0,     0,   778,   330,   779,   331,     0,   332,
     780,   781,   782,   783,   784,   337,   338,   339,   340,   341,
       0,   785,   342,   343,     0,     0,   344,   345,   346,   347,
     348,   786,   787,   788,   349,   350,     0,   789,   790,   351,
       0,   352,   353,     0,   354,   355,   356,     0,     0,   357,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   358,
     359,   360,   791,   361,   362,   363,     0,   364,   365,   792,
     367,   368,   369,   370,   793,   794,   373,   795,   374,     0,
     375,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   796,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,   399,     0,   400,   401,   402,
     797,   798,   403,   404,   405,   406,   407,   408,   409,   410,
       0,   411,     0,   412,   413,     0,   414,   415,   416,     0,
     799,     0,   800,   418,   419,   420,   421,   422,   801,   802,
     425,   426,   427,   428,     0,   803,   430,     0,     0,     0,
     431,   432,   433,   434,     0,     0,     0,   435,     0,     0,
       0,   436,     0,   437,   438,   439,   440,     0,   441,   442,
     443,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,   455,   456,   457,   458,   459,   804,   805,
     460,   461,     0,     0,   462,   463,   806,   465,   466,   467,
     807,   808,   468,   469,   470,   471,   809,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   810,   478,   479,     0,
     811,   812,   813,   814,     0,     0,     0,     0,     0,   484,
     485,     0,   815,   816,   817,   487,   488,   489,   818,   490,
     491,   819,   492,   493,     0,   494,   495,     0,     0,   496,
       0,     0,   497,     0,   498,     0,   820,   500,     0,     0,
     821,   822,   823,   501,   824,   502,     0,     0,   503,   825,
       0,   826,   504,     0,   505,   506,   827,   828,     0,     0,
       0,     0,     0,     0,   509,   510,   511,     0,   512,   513,
     514,   515,     0,     0,   829,     0,     0,     0,   830,   831,
       0,     0,     0,     0,   833,   834,     0,     0,   835,   836,
       0,     0,   837,   838,   143,   144,     0,   732,   146,   147,
     148,   149,     0,     0,   150,   151,     0,     0,     0,   152,
       0,     0,   733,     0,   154,   155,   156,   157,   734,   159,
       0,   160,     0,     0,   735,   161,   736,   737,   738,   162,
     739,     0,   163,   164,   165,     0,   166,     0,   167,   168,
       0,     0,   169,   740,   741,   170,   171,     0,   172,   173,
     742,   743,   175,     0,   176,   177,   178,   179,   744,   181,
       0,   745,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,   195,     0,   196,   197,
     198,   746,   200,     0,   747,   748,   201,     0,     0,   202,
     749,   203,   750,     0,   204,   751,   752,     0,   205,   206,
     207,   753,   754,   755,     0,     0,     0,     0,   756,   210,
     757,     0,     0,   758,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,   220,     0,     0,   221,   222,   223,     0,     0,     0,
     224,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   759,
       0,   238,   239,   240,   241,   242,   760,   761,   243,   244,
       0,   245,   246,   247,   248,   249,   762,     0,   250,   251,
       0,     0,     0,   763,   253,  2554,   254,     0,   255,     0,
     256,     0,   257,   764,   259,   765,     0,   261,     0,   262,
       0,   766,     0,   263,   264,     0,   265,   767,     0,   266,
     267,     0,     0,     0,   768,   269,   270,   271,   769,     0,
     272,   273,   274,     0,     0,   275,     0,     0,     0,   770,
     276,   277,   771,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,     0,     0,     0,   283,     0,   284,
       0,     0,   285,   286,     0,     0,   287,     0,   772,   288,
     289,     0,     0,     0,     0,     0,   773,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,   774,     0,     0,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   775,   317,   318,   319,   320,
     776,   321,   322,     0,     0,     0,     0,   323,   324,   325,
     326,   777,   328,     0,     0,   778,   330,   779,   331,     0,
     332,   780,   781,   782,   783,   784,   337,   338,   339,   340,
     341,     0,   785,   342,   343,     0,     0,   344,   345,   346,
     347,   348,   786,   787,   788,   349,   350,     0,   789,   790,
     351,     0,   352,   353,     0,   354,   355,   356,     0,     0,
     357,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     358,   359,   360,   791,   361,   362,   363,     0,   364,   365,
     792,   367,   368,   369,   370,   793,   794,   373,   795,   374,
       0,   375,   376,   377,     0,   378,     0,   379,   380,   381,
     382,   383,     0,   796,   385,   386,     0,     0,   387,     0,
       0,     0,   388,   389,   390,   391,   392,     0,     0,   393,
     394,   395,   396,   397,     0,   398,   399,     0,   400,   401,
     402,   797,   798,   403,   404,   405,   406,   407,   408,   409,
     410,     0,   411,     0,   412,   413,     0,   414,   415,   416,
       0,   799,     0,   800,   418,   419,   420,   421,   422,   801,
     802,   425,   426,   427,   428,     0,   803,   430,     0,     0,
       0,   431,   432,   433,   434,     0,     0,     0,   435,     0,
       0,     0,   436,     0,   437,   438,   439,   440,     0,   441,
     442,   443,   444,   445,     0,     0,     0,     0,     0,   446,
     447,   448,     0,   449,   450,     0,   451,     0,     0,   452,
       0,   453,     0,   454,   455,   456,   457,   458,   459,   804,
     805,   460,   461,     0,     0,   462,   463,   806,   465,   466,
     467,   807,   808,   468,   469,   470,   471,   809,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   810,   478,   479,
       0,   811,   812,   813,   814,     0,     0,     0,     0,     0,
     484,   485,     0,   815,   816,   817,   487,   488,   489,   818,
     490,   491,   819,   492,   493,     0,   494,   495,     0,     0,
     496,     0,     0,   497,     0,   498,     0,   820,   500,     0,
       0,   821,   822,   823,   501,   824,   502,     0,     0,   503,
     825,     0,   826,   504,     0,   505,   506,   827,   828,     0,
       0,     0,     0,     0,     0,   509,   510,   511,     0,   512,
     513,   514,   515,     0,     0,   829,     0,     0,     0,   830,
     831,     0,     0,     0,     0,   833,   834,     0,     0,   835,
     836,     0,     0,   837,   838,   143,   144,     0,   732,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   733,     0,   154,   155,   156,   157,   734,
     159,     0,   160,     0,     0,   735,   161,   736,   737,   738,
     162,   739,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,   740,   741,   170,   171,     0,   172,
     173,   742,   743,   175,     0,   176,   177,   178,   179,   744,
     181,     0,   745,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   746,   200,     0,   747,   748,   201,     0,     0,
     202,   749,   203,   750,     0,   204,   751,   752,     0,   205,
     206,   207,   753,   754,   755,     0,     0,     0,     0,   756,
     210,   757,     0,     0,   758,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     759,     0,   238,   239,   240,   241,   242,   760,   761,   243,
     244,     0,   245,   246,   247,   248,   249,   762,     0,   250,
     251,     0,     0,     0,   763,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   764,   259,   765,     0,   261,     0,
     262,     0,   766,     0,   263,   264,     0,   265,   767,     0,
     266,   267,     0,     0,     0,   768,   269,   270,   271,   769,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
     770,   276,   277,   771,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,   772,
     288,   289,     0,     0,     0,     0,     0,   773,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,   774,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   775,   317,   318,   319,
     320,   776,   321,   322,     0,     0,     0,     0,   323,   324,
     325,   326,   777,   328,     0,     0,   778,   330,   779,   331,
       0,   332,   780,   781,   782,   783,   784,   337,   338,   339,
     340,   341,     0,   785,   342,   343,     0,     0,   344,   345,
     346,   347,   348,   786,   787,   788,   349,   350,     0,   789,
     790,   351,     0,   352,   353,     0,   354,   355,   356,     0,
       0,   357,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   358,   359,   360,   791,   361,   362,   363,     0,   364,
     365,   792,   367,   368,   369,   370,   793,   794,   373,   795,
     374,     0,   375,   376,   377,     0,   378,     0,   379,   380,
     381,   382,   383,     0,   796,   385,   386,     0,     0,   387,
       0,     0,     0,   388,   389,   390,   391,   392,     0,     0,
     393,   394,   395,   396,   397,     0,   398,   399,     0,   400,
     401,   402,   797,   798,   403,   404,   405,   406,   407,   408,
     409,   410,     0,   411,     0,   412,   413,     0,   414,   415,
     416,     0,   799,     0,   800,   418,   419,   420,   421,   422,
     801,   802,   425,   426,   427,   428,     0,   803,   430,     0,
       0,     0,   431,   432,   433,   434,     0,     0,     0,   435,
       0,     0,     0,   436,     0,   437,   438,   439,   440,     0,
     441,   442,   443,   444,   445,     0,     0,     0,     0,     0,
     446,   447,   448,     0,   449,   450,     0,   451,     0,     0,
     452,     0,   453,     0,   454,   455,   456,   457,   458,   459,
     804,   805,   460,   461,     0,     0,   462,   463,   806,   465,
     466,   467,   807,   808,   468,   469,   470,   471,   809,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   810,   478,
     479,     0,   811,   812,   813,   814,     0,     0,     0,     0,
       0,   484,   485,     0,   815,   816,   817,   487,   488,   489,
     818,   490,   491,   819,   492,   493,     0,   494,   495,     0,
       0,   496,     0,     0,   497,     0,   498,     0,   820,   500,
       0,     0,   821,   822,   823,   501,   824,   502,     0,     0,
     503,   825,     0,   826,   504,     0,   505,   506,   827,   828,
       0,     0,     0,     0,     0,     0,   509,   510,   511,     0,
     512,   513,   514,   515,     0,     0,   829,     0,     0,     0,
     830,   831,     0,     0,     0,     0,   833,   834,     0,     0,
     835,   836,     0,     0,   837,   838,   143,   144,     0,   732,
     146,   147,   148,   149,     0,     0,   150,   151,     0,     0,
       0,   152,     0,     0,   733,     0,   154,   155,   156,   157,
     734,   159,     0,   160,     0,     0,   735,   161,   736,   737,
     738,   162,   739,     0,   163,   164,   165,     0,   166,     0,
     167,   168,     0,     0,   169,   740,   741,   170,   171,     0,
     172,   173,   742,   743,   175,     0,   176,   177,   178,   179,
     744,   181,     0,   745,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,   195,     0,
     196,   197,   198,   746,   200,     0,   747,   748,   201,     0,
       0,   202,   749,   203,   750,     0,   204,   751,   752,     0,
     205,   206,   207,   753,   754,   755,     0,     0,     0,     0,
     756,   210,   757,     0,     0,   758,   211,   212,     0,   213,
       0,     0,     0,   214,     0,   215,   216,   217,   218,   219,
       0,     0,     0,   220,     0,     0,   221,   222,   223,     0,
       0,     0,   224,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   759,     0,   238,   239,   240,   241,   242,   760,   761,
     243,   244,     0,   245,   246,   247,   248,   249,   762,     0,
     250,   251,     0,     0,     0,   763,   253,     0,   254,     0,
     255,     0,   256,     0,   257,   764,   259,   765,     0,   261,
       0,   262,     0,   766,     0,   263,   264,     0,   265,   767,
       0,   266,   267,     0,     0,     0,   768,   269,   270,   271,
     769,     0,   272,   273,   274,     0,     0,   275,     0,     0,
       0,   770,   276,   277,   771,     0,     0,   278,     0,     0,
       0,   279,   280,     0,   281,   282,     0,     0,     0,   283,
       0,   284,     0,     0,   285,   286,     0,     0,   287,     0,
     772,   288,   289,     0,     0,     0,     0,     0,   773,   291,
       0,   292,     0,   293,     0,   294,   295,     0,     0,   774,
       0,     0,     0,     0,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   775,   317,   318,
     319,   320,   776,   321,   322,     0,     0,     0,     0,   323,
     324,   325,   326,   777,   328,     0,     0,   778,   330,   779,
     331,     0,   332,   780,   781,   782,   783,   784,   337,   338,
     339,   340,   341,     0,   785,   342,   343,     0,     0,   344,
     345,   346,   347,   348,   786,   787,   788,   349,   350,     0,
     789,   790,   351,     0,   352,   353,     0,   354,   355,   356,
       0,     0,   357,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   358,   359,   360,   791,   361,   362,   363,     0,
     364,   365,   792,   367,   368,   369,   370,   793,   794,   373,
     795,   374,     0,   375,   376,   377,     0,   378,     0,   379,
     380,   381,   382,   383,     0,   796,   385,   386,     0,     0,
     387,     0,     0,     0,   388,   389,   390,   391,   392,     0,
       0,   393,   394,   395,   396,   397,     0,   398,   399,     0,
     400,   401,   402,   797,   798,   403,   404,   405,   406,   407,
     408,   409,   410,     0,   411,     0,   412,   413,     0,   414,
     415,   416,     0,   799,     0,   800,   418,   419,   420,   421,
     422,   801,   802,   425,   426,   427,   428,     0,   803,   430,
       0,     0,     0,   431,   432,   433,   434,     0,     0,     0,
     435,     0,     0,     0,   436,     0,   437,   438,   439,   440,
       0,   441,   442,   443,   444,   445,     0,     0,     0,     0,
       0,   446,   447,   448,     0,   449,   450,     0,   451,     0,
       0,   452,     0,   453,     0,   454,   455,   456,   457,   458,
     459,   804,   805,   460,   461,     0,     0,   462,   463,   806,
     465,   466,   467,   807,   808,   468,   469,   470,   471,   809,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   810,
     478,   479,     0,   811,   812,   813,   814,     0,     0,     0,
       0,     0,   484,   485,     0,   815,   816,   817,   487,   488,
     489,   818,   490,   491,   819,   492,   493,     0,   494,   495,
       0,     0,   496,     0,     0,   497,     0,   498,     0,   820,
     500,     0,     0,   821,   822,   823,   501,   824,   502,     0,
       0,   503,   825,     0,   826,   504,     0,   505,   506,   827,
     828,     0,     0,     0,     0,     0,     0,   509,   510,   511,
       0,   512,   513,   514,   515,     0,     0,   829,     0,     0,
       0,   830,   831,     0,     0,     0,     0,   833,  1199,     0,
       0,   835,   836,     0,     0,   837,   838,   143,   144,     0,
     732,   146,   147,   148,   149,  1954,     0,   150,   151,     0,
       0,     0,  1955,     0,     0,   733,     0,   154,   155,   156,
     157,   734,   159,     0,   160,     0,     0,   735,   161,   736,
     737,   738,   162,   739,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,   740,   741,   170,   171,
       0,   172,   173,   742,   743,   175,     0,   176,   177,   178,
     179,   744,   181,     0,   745,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   746,   200,     0,   747,   748,   201,
       0,     0,   202,   749,   203,   750,     0,   204,   751,   752,
       0,   205,   206,   207,   753,   754,   755,     0,     0,     0,
       0,   756,   210,   757,     0,     0,   758,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   759,     0,   238,   239,   240,   241,   242,   760,
     761,   243,   244,     0,   245,   246,   247,   248,   249,   762,
       0,   250,   251,     0,     0,     0,   763,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   764,   259,   765,     0,
     261,     0,   262,     0,   766,     0,   263,   264,     0,   265,
     767,     0,   266,   267,     0,     0,     0,   768,   269,   270,
     271,   769,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,   770,   276,   277,   771,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,   772,   288,   289,     0,     0,     0,     0,     0,   773,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
     774,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   775,   317,
     318,   319,   320,   776,   321,   322,     0,     0,     0,     0,
     323,   324,   325,   326,   777,   328,     0,     0,   778,   330,
     779,   331,     0,   332,   780,   781,   782,   783,   784,   337,
     338,   339,   340,   341,     0,   785,   342,   343,     0,     0,
     344,   345,   346,   347,   348,   786,     0,   788,   349,   350,
       0,   789,   790,   351,     0,   352,   353,     0,   354,   355,
     356,     0,     0,   357,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   358,   359,   360,   791,   361,   362,   363,
       0,   364,   365,   792,   367,   368,   369,   370,   793,   794,
     373,   795,   374,     0,   375,   376,   377,     0,   378,     0,
     379,   380,   381,   382,   383,     0,   796,   385,   386,     0,
       0,   387,     0,     0,     0,   388,   389,   390,   391,   392,
       0,     0,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,   401,   402,   797,   798,   403,   404,   405,   406,
     407,   408,   409,   410,     0,   411,     0,   412,   413,     0,
     414,   415,   416,     0,   799,     0,   800,   418,   419,   420,
     421,   422,   801,   802,   425,   426,   427,   428,     0,   803,
     430,     0,     0,     0,   431,   432,   433,   434,     0,     0,
       0,   435,     0,     0,     0,   436,     0,   437,   438,   439,
     440,     0,   441,   442,   443,   444,   445,     0,     0,     0,
       0,     0,   446,   447,   448,     0,   449,   450,     0,   451,
       0,     0,   452,     0,   453,     0,   454,   455,   456,   457,
     458,   459,   804,   805,   460,   461,     0,     0,   462,   463,
     806,   465,   466,   467,   807,   808,   468,   469,   470,   471,
     809,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     810,   478,   479,     0,   811,   812,   813,   814,     0,     0,
       0,     0,     0,   484,   485,     0,   815,   816,   817,   487,
     488,   489,   818,   490,   491,   819,   492,   493,     0,   494,
     495,     0,     0,   496,     0,     0,   497,     0,   498,     0,
     820,   500,     0,     0,   821,   822,   823,   501,   824,   502,
       0,     0,   503,   825,     0,   826,   504,     0,   505,   506,
     827,   828,     0,     0,     0,     0,     0,     0,   509,   510,
     511,     0,   512,   513,   514,   515,     0,     0,   829,     0,
       0,     0,   830,   831,     0,     0,     0,     0,   833,   834,
       0,     0,   835,   836,     0,     0,   837,   838,   143,   144,
       0,   732,   146,   147,   148,   149,     0,     0,   150,   151,
       0,     0,     0,   152,     0,     0,   733,     0,   154,   155,
     156,   157,   734,   159,     0,   160,     0,     0,   735,   161,
     736,   737,   738,   162,   739,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,   740,   741,   170,
     171,     0,   172,   173,   742,   743,   175,     0,   176,   177,
     178,   179,   744,   181,     0,   745,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   746,   200,     0,   747,   748,
     201,     0,     0,   202,   749,   203,   750,     0,   204,   751,
     752,     0,   205,   206,   207,   753,   754,   755,     0,     0,
       0,     0,   756,   210,   757,     0,     0,   758,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   759,     0,   238,   239,   240,   241,   242,
     760,   761,   243,   244,     0,   245,   246,   247,   248,   249,
     762,     0,   250,   251,     0,     0,     0,   763,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   764,   259,   765,
       0,   261,     0,   262,     0,   766,     0,   263,   264,     0,
     265,   767,     0,   266,   267,     0,     0,     0,   768,   269,
     270,   271,   769,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,   770,   276,   277,  3027,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,     0,
     287,     0,   772,   288,   289,     0,     0,     0,     0,     0,
     773,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,   774,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   775,
     317,   318,   319,   320,   776,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   777,   328,     0,     0,   778,
     330,   779,   331,     0,   332,   780,   781,   782,   783,   784,
     337,   338,   339,   340,   341,     0,   785,   342,   343,     0,
       0,   344,   345,   346,   347,   348,   786,   787,   788,   349,
     350,     0,   789,   790,   351,     0,   352,   353,     0,   354,
     355,   356,     0,     0,   357,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   358,   359,   360,   791,   361,   362,
     363,     0,   364,   365,   792,   367,   368,   369,   370,   793,
     794,   373,   795,   374,     0,   375,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   796,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
     399,     0,   400,   401,   402,   797,   798,   403,   404,   405,
     406,   407,   408,   409,   410,     0,   411,     0,   412,   413,
       0,   414,   415,   416,     0,   799,     0,   800,   418,   419,
     420,   421,   422,   801,   802,   425,   426,   427,   428,     0,
     803,   430,     0,     0,     0,   431,   432,   433,   434,     0,
       0,     0,   435,     0,     0,     0,   436,     0,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,     0,     0,
       0,     0,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,   455,   456,
     457,   458,   459,   804,   805,   460,   461,     0,     0,   462,
     463,   806,   465,   466,   467,   807,   808,   468,   469,   470,
     471,   809,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   810,   478,   479,     0,   811,   812,   813,   814,     0,
       0,     0,     0,     0,   484,   485,     0,   815,   816,   817,
     487,   488,   489,   818,   490,   491,   819,   492,   493,     0,
     494,   495,     0,     0,   496,     0,     0,   497,     0,   498,
       0,   820,   500,     0,     0,   821,   822,   823,   501,   824,
     502,     0,     0,   503,   825,     0,   826,   504,     0,   505,
     506,   827,   828,     0,     0,     0,     0,     0,     0,   509,
     510,   511,     0,   512,   513,   514,   515,     0,     0,   829,
       0,     0,     0,   830,   831,     0,     0,     0,     0,   833,
     834,     0,     0,   835,   836,     0,     0,   837,   838,   143,
     144,     0,   732,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   733,     0,   154,
     155,   156,   157,   734,   159,     0,   160,     0,     0,   735,
     161,   736,   737,   738,   162,   739,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,   740,   741,
     170,   171,     0,   172,   173,   742,   743,   175,     0,   176,
     177,   178,   179,   744,   181,     0,   745,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   746,   200,     0,   747,
     748,   201,     0,     0,   202,   749,   203,   750,     0,   204,
     751,   752,     0,   205,   206,   207,   753,   754,   755,     0,
       0,     0,     0,   756,   210,   757,     0,     0,   758,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   759,     0,   238,   239,   240,   241,
     242,   760,   761,   243,   244,     0,   245,   246,   247,   248,
     249,   762,     0,   250,   251,     0,     0,     0,   763,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   764,   259,
     765,     0,   261,     0,   262,     0,   766,     0,   263,   264,
       0,   265,   767,     0,   266,   267,     0,     0,     0,   768,
     269,   270,   271,   769,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,   770,   276,   277,  3074,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,   772,   288,   289,     0,     0,     0,     0,
       0,   773,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,   774,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     775,   317,   318,   319,   320,   776,   321,   322,     0,     0,
       0,     0,   323,   324,   325,   326,   777,   328,     0,     0,
     778,   330,   779,   331,     0,   332,   780,   781,   782,   783,
     784,   337,   338,   339,   340,   341,     0,   785,   342,   343,
       0,     0,   344,   345,   346,   347,   348,   786,   787,   788,
     349,   350,     0,   789,   790,   351,     0,   352,   353,     0,
     354,   355,   356,     0,     0,   357,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   358,   359,   360,   791,   361,
     362,   363,     0,   364,   365,   792,   367,   368,   369,   370,
     793,   794,   373,   795,   374,     0,   375,   376,   377,     0,
     378,     0,   379,   380,   381,   382,   383,     0,   796,   385,
     386,     0,     0,   387,     0,     0,     0,   388,   389,   390,
     391,   392,     0,     0,   393,   394,   395,   396,   397,     0,
     398,   399,     0,   400,   401,   402,   797,   798,   403,   404,
     405,   406,   407,   408,   409,   410,     0,   411,     0,   412,
     413,     0,   414,   415,   416,     0,   799,     0,   800,   418,
     419,   420,   421,   422,   801,   802,   425,   426,   427,   428,
       0,   803,   430,     0,     0,     0,   431,   432,   433,   434,
       0,     0,     0,   435,     0,     0,     0,   436,     0,   437,
     438,   439,   440,     0,   441,   442,   443,   444,   445,     0,
       0,     0,     0,     0,   446,   447,   448,     0,   449,   450,
       0,   451,     0,     0,   452,     0,   453,     0,   454,   455,
     456,   457,   458,   459,   804,   805,   460,   461,     0,     0,
     462,   463,   806,   465,   466,   467,   807,   808,   468,   469,
     470,   471,   809,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   810,   478,   479,     0,   811,   812,   813,   814,
       0,     0,     0,     0,     0,   484,   485,     0,   815,   816,
     817,   487,   488,   489,   818,   490,   491,   819,   492,   493,
       0,   494,   495,     0,     0,   496,     0,     0,   497,     0,
     498,     0,   820,   500,     0,     0,   821,   822,   823,   501,
     824,   502,     0,     0,   503,   825,     0,   826,   504,     0,
     505,   506,   827,   828,     0,     0,     0,     0,     0,     0,
     509,   510,   511,     0,   512,   513,   514,   515,     0,     0,
     829,     0,     0,     0,   830,   831,     0,     0,     0,     0,
     833,   834,     0,     0,   835,   836,     0,     0,   837,   838,
     143,   144,     0,   732,   146,   147,   148,   149,     0,     0,
     150,   151,     0,     0,     0,   152,     0,     0,   733,     0,
     154,   155,   156,   157,   734,   159,     0,   160,     0,     0,
     735,   161,   736,   737,   738,   162,   739,     0,   163,   164,
     165,     0,   166,     0,   167,   168,     0,     0,   169,   740,
     741,   170,   171,     0,   172,   173,   742,   743,   175,     0,
     176,   177,   178,   179,   744,   181,     0,   745,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,   195,     0,   196,   197,   198,   746,   200,     0,
     747,   748,   201,     0,     0,   202,   749,   203,   750,     0,
     204,   751,   752,     0,   205,   206,   207,   753,   754,   755,
       0,     0,     0,     0,   756,   210,   757,     0,     0,  3575,
     211,   212,     0,   213,     0,     0,     0,   214,     0,   215,
     216,   217,   218,   219,     0,     0,     0,   220,     0,     0,
     221,   222,   223,     0,     0,     0,   224,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   759,     0,   238,   239,   240,
     241,   242,   760,   761,   243,   244,     0,   245,   246,   247,
     248,   249,   762,     0,   250,   251,     0,     0,     0,   763,
     253,     0,   254,     0,   255,     0,   256,     0,   257,   764,
     259,   765,     0,   261,     0,   262,     0,   766,     0,   263,
     264,     0,   265,   767,     0,   266,   267,     0,     0,     0,
     768,   269,   270,   271,   769,     0,   272,   273,   274,     0,
       0,   275,     0,     0,     0,   770,   276,   277,   771,     0,
       0,   278,     0,     0,     0,   279,   280,     0,   281,   282,
       0,     0,     0,   283,     0,   284,     0,     0,   285,   286,
       0,     0,   287,     0,   772,   288,   289,     0,     0,     0,
       0,     0,   773,   291,     0,   292,     0,   293,     0,   294,
     295,     0,     0,   774,     0,     0,     0,     0,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   775,   317,   318,   319,   320,   776,   321,   322,     0,
       0,     0,     0,   323,   324,   325,   326,   777,   328,     0,
       0,   778,   330,   779,   331,     0,   332,   780,   781,   782,
     783,   784,   337,   338,   339,   340,   341,     0,   785,   342,
     343,     0,     0,   344,   345,   346,   347,   348,   786,   787,
     788,   349,   350,     0,   789,   790,   351,     0,   352,   353,
       0,   354,   355,   356,     0,     0,   357,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   358,   359,   360,   791,
     361,   362,   363,     0,   364,   365,   792,   367,   368,   369,
     370,   793,   794,   373,   795,   374,     0,   375,   376,   377,
       0,   378,     0,   379,   380,   381,   382,   383,     0,   796,
     385,   386,     0,     0,   387,     0,     0,     0,   388,   389,
     390,   391,   392,     0,     0,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,   401,   402,   797,   798,   403,
     404,   405,   406,   407,   408,   409,   410,     0,   411,     0,
     412,   413,     0,   414,   415,   416,     0,   799,     0,   800,
     418,   419,   420,   421,   422,   801,   802,   425,   426,   427,
     428,     0,   803,   430,     0,     0,     0,   431,   432,   433,
     434,     0,     0,     0,   435,     0,     0,     0,   436,     0,
     437,   438,   439,   440,     0,   441,   442,   443,   444,   445,
       0,     0,     0,     0,     0,   446,   447,   448,     0,   449,
     450,     0,   451,     0,     0,   452,     0,   453,     0,   454,
     455,   456,   457,   458,   459,   804,   805,   460,   461,     0,
       0,   462,   463,   806,   465,   466,   467,   807,   808,   468,
     469,   470,   471,   809,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   810,   478,   479,     0,   811,   812,   813,
     814,     0,     0,     0,     0,     0,   484,   485,     0,   815,
     816,   817,   487,   488,   489,   818,   490,   491,   819,   492,
     493,     0,   494,   495,     0,     0,   496,     0,     0,   497,
       0,   498,     0,   820,   500,     0,     0,   821,   822,   823,
     501,   824,   502,     0,     0,   503,   825,     0,   826,   504,
       0,   505,   506,   827,   828,     0,     0,     0,     0,     0,
       0,   509,   510,   511,     0,   512,   513,   514,   515,     0,
       0,   829,     0,     0,     0,   830,   831,     0,     0,     0,
       0,   833,   834,     0,     0,   835,   836,     0,     0,   837,
     838,   143,   144,     0,   732,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,     0,   733,
       0,   154,   155,   156,   157,   734,   159,     0,   160,     0,
       0,   735,   161,   736,   737,   738,   162,   739,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
     740,   741,   170,   171,     0,   172,   173,   742,   743,   175,
       0,   176,   177,   178,   179,   744,   181,     0,   745,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   746,   200,
       0,   747,   748,   201,     0,     0,   202,   749,   203,   750,
       0,   204,   751,   752,     0,   205,   206,   207,   753,   754,
     755,     0,     0,     0,     0,   756,   210,   757,     0,     0,
     758,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   759,     0,   238,   239,
     240,   241,   242,   760,   761,   243,   244,     0,   245,   246,
     247,   248,   249,   762,     0,   250,   251,     0,     0,     0,
     763,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     764,   259,   765,     0,   261,     0,   262,     0,   766,     0,
     263,   264,     0,   265,   767,     0,   266,   267,     0,     0,
       0,   768,   269,   270,   271,   769,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,   770,   276,   277,   771,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,   772,   288,   289,     0,     0,
       0,     0,     0,   773,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,   774,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   775,   317,   318,   319,   320,   776,   321,   322,
    4516,     0,     0,     0,   323,   324,   325,   326,   777,   328,
       0,     0,   778,   330,   779,   331,     0,   332,   780,   781,
     782,   783,   784,   337,   338,   339,   340,   341,     0,   785,
     342,   343,     0,     0,   344,   345,   346,   347,   348,   786,
       0,   788,   349,   350,     0,   789,   790,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
     791,   361,   362,   363,     0,   364,   365,   792,   367,   368,
     369,   370,   793,   794,   373,   795,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     796,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,   797,   798,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   799,     0,
     800,   418,   419,   420,   421,   422,   801,   802,   425,   426,
     427,   428,     0,   803,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,   804,   805,   460,   461,
       0,     0,   462,   463,   806,   465,   466,   467,   807,   808,
     468,   469,   470,   471,   809,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   810,   478,   479,     0,   811,   812,
     813,   814,     0,     0,     0,     0,     0,   484,   485,     0,
     815,   816,   817,   487,   488,   489,   818,   490,   491,   819,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   820,   500,     0,     0,   821,   822,
     823,   501,   824,   502,     0,     0,   503,   825,     0,   826,
     504,     0,   505,   506,   827,   828,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
       0,     0,   829,     0,     0,     0,   830,   831,     0,     0,
       0,     0,   833,   834,     0,     0,   835,   836,     0,     0,
     837,   838,   143,   144,     0,   732,   146,   147,   148,   149,
       0,     0,   150,   151,     0,     0,     0,   152,     0,     0,
     733,     0,   154,   155,   156,   157,   734,   159,     0,   160,
       0,     0,   735,   161,   736,   737,   738,   162,   739,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,   740,   741,   170,   171,     0,   172,   173,   742,   743,
     175,     0,   176,   177,   178,   179,   744,   181,     0,   745,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   746,
     200,     0,   747,   748,   201,     0,     0,   202,   749,   203,
     750,     0,   204,   751,   752,     0,   205,   206,   207,   753,
     754,   755,     0,     0,     0,     0,   756,   210,   757,     0,
       0,   758,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   759,     0,   238,
     239,   240,   241,   242,   760,   761,   243,   244,     0,   245,
     246,   247,   248,   249,   762,     0,   250,   251,     0,     0,
       0,   763,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   764,   259,   765,     0,   261,     0,   262,     0,   766,
       0,   263,   264,     0,   265,   767,     0,   266,   267,     0,
       0,     0,   768,   269,   270,   271,   769,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,   770,   276,   277,
     771,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,   772,   288,   289,     0,
       0,     0,     0,     0,   773,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,   774,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   775,   317,   318,   319,   320,   776,   321,
     322,     0,     0,     0,     0,   323,   324,   325,   326,   777,
     328,     0,     0,   778,   330,   779,   331,     0,   332,   780,
     781,   782,   783,   784,   337,   338,   339,   340,   341,     0,
     785,   342,   343,     0,     0,   344,   345,   346,   347,   348,
     786,     0,   788,   349,   350,     0,   789,   790,   351,     0,
     352,   353,     0,   354,   355,   356,     0,     0,   357,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   358,   359,
     360,   791,   361,   362,   363,     0,   364,   365,   792,   367,
     368,   369,   370,   793,   794,   373,   795,   374,     0,   375,
     376,   377,     0,   378,     0,   379,   380,   381,   382,   383,
       0,   796,   385,   386,     0,     0,   387,     0,     0,     0,
     388,   389,   390,   391,   392,     0,     0,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,   401,   402,   797,
     798,   403,   404,   405,   406,   407,   408,   409,   410,     0,
     411,     0,   412,   413,     0,   414,   415,   416,     0,   799,
       0,   800,   418,   419,   420,   421,   422,   801,   802,   425,
     426,   427,   428,     0,   803,   430,     0,     0,     0,   431,
     432,   433,   434,     0,     0,     0,   435,     0,     0,     0,
     436,     0,   437,   438,   439,   440,     0,   441,   442,   443,
     444,   445,     0,     0,     0,     0,     0,   446,   447,   448,
       0,   449,   450,     0,   451,     0,     0,   452,     0,   453,
       0,   454,   455,   456,   457,   458,   459,   804,   805,   460,
     461,     0,     0,   462,   463,   806,   465,   466,   467,   807,
     808,   468,   469,   470,   471,   809,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   810,   478,   479,     0,   811,
     812,   813,   814,     0,     0,     0,     0,     0,   484,   485,
       0,   815,   816,   817,   487,   488,   489,   818,   490,   491,
     819,   492,   493,     0,   494,   495,     0,     0,   496,     0,
       0,   497,     0,   498,     0,   820,   500,     0,     0,   821,
     822,   823,   501,   824,   502,     0,     0,   503,   825,     0,
     826,   504,     0,   505,   506,   827,   828,     0,     0,     0,
       0,     0,     0,   509,   510,   511,     0,   512,   513,   514,
     515,     0,     0,   829,     0,     0,     0,   830,   831,     0,
       0,     0,     0,   833,   834,     0,     0,   835,   836,     0,
       0,   837,   838,   143,   144,     0,   732,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
       0,   733,     0,   154,   155,   156,   157,   734,   159,     0,
     160,     0,     0,   735,   161,   736,   737,   738,   162,   739,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,   740,   741,   170,   171,     0,   172,   173,   742,
     743,   175,     0,   176,   177,   178,   179,   744,   181,     0,
     745,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     746,   200,     0,   747,   748,   201,     0,     0,   202,   749,
     203,   750,     0,   204,   751,   752,     0,   205,   206,   207,
     753,   754,   755,     0,     0,     0,     0,   756,   210,   757,
       0,     0,   758,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   759,     0,
     238,   239,   240,   241,   242,   760,   761,   243,   244,     0,
     245,   246,   247,   248,   249,   762,     0,   250,   251,     0,
       0,     0,   763,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   764,   259,   765,     0,   261,     0,   262,     0,
     766,     0,   263,   264,     0,   265,   767,     0,   266,   267,
       0,     0,     0,   768,   269,   270,   271,   769,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,   770,   276,
     277,  1969,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,   772,   288,   289,
       0,     0,     0,     0,     0,   773,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,   774,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   775,   317,   318,   319,   320,   776,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     777,   328,     0,     0,   778,   330,   779,   331,     0,   332,
     780,   781,   782,   783,   784,   337,   338,   339,   340,   341,
       0,   785,   342,   343,     0,     0,   344,   345,   346,   347,
     348,   786,     0,   788,   349,   350,     0,   789,   790,   351,
       0,   352,   353,     0,   354,   355,   356,     0,     0,   357,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   358,
     359,   360,   791,   361,   362,   363,     0,   364,   365,   792,
     367,   368,   369,   370,   793,   794,   373,   795,   374,     0,
     375,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   796,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,   399,     0,   400,   401,   402,
     797,   798,   403,   404,   405,   406,   407,   408,   409,   410,
       0,   411,     0,   412,   413,     0,   414,   415,   416,     0,
     799,     0,   800,   418,   419,   420,   421,   422,   801,   802,
     425,   426,   427,   428,     0,   803,   430,     0,     0,     0,
     431,   432,   433,   434,     0,     0,     0,   435,     0,     0,
       0,   436,     0,   437,   438,   439,   440,     0,   441,   442,
     443,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,   455,   456,   457,   458,   459,   804,   805,
     460,   461,     0,     0,   462,   463,   806,   465,   466,   467,
     807,   808,   468,   469,   470,   471,   809,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   810,   478,   479,     0,
     811,   812,   813,   814,     0,     0,     0,     0,     0,   484,
     485,     0,   815,   816,   817,   487,   488,   489,   818,   490,
     491,   819,   492,   493,     0,   494,   495,     0,     0,   496,
       0,     0,   497,     0,   498,     0,   820,   500,     0,     0,
     821,   822,   823,   501,   824,   502,     0,     0,   503,   825,
       0,   826,   504,     0,   505,   506,   827,   828,     0,     0,
       0,     0,     0,     0,   509,   510,   511,     0,   512,   513,
     514,   515,     0,     0,   829,     0,     0,     0,   830,   831,
       0,     0,     0,     0,   833,   834,     0,     0,   835,   836,
       0,     0,   837,   838,   143,   144,     0,   732,   146,   147,
     148,   149,     0,     0,   150,   151,     0,     0,     0,   152,
       0,     0,   733,     0,   154,   155,   156,   157,   734,   159,
       0,   160,     0,     0,   735,   161,   736,   737,   738,   162,
     739,     0,   163,   164,   165,     0,   166,     0,   167,   168,
       0,     0,   169,   740,   741,   170,   171,     0,   172,   173,
     742,   743,   175,     0,   176,   177,   178,   179,   744,   181,
       0,   745,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,   195,     0,   196,   197,
     198,   746,   200,     0,   747,   748,   201,     0,     0,   202,
     749,   203,   750,     0,   204,   751,   752,     0,   205,   206,
     207,   753,   754,   755,     0,     0,     0,     0,   756,   210,
     757,     0,     0,   758,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,   220,     0,     0,   221,   222,   223,     0,     0,     0,
     224,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   759,
       0,   238,   239,   240,   241,   242,   760,   761,   243,   244,
       0,   245,   246,   247,   248,   249,   762,     0,   250,   251,
       0,     0,     0,   763,   253,     0,   254,     0,   255,     0,
     256,     0,   257,   764,   259,   765,     0,   261,     0,   262,
       0,   766,     0,   263,   264,     0,   265,   767,     0,   266,
     267,     0,     0,     0,   768,   269,   270,   271,   769,     0,
     272,   273,   274,     0,     0,   275,     0,     0,     0,   770,
     276,   277,  1971,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,     0,     0,     0,   283,     0,   284,
       0,     0,   285,   286,     0,     0,   287,     0,   772,   288,
     289,     0,     0,     0,     0,     0,   773,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,   774,     0,     0,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   775,   317,   318,   319,   320,
     776,   321,   322,     0,     0,     0,     0,   323,   324,   325,
     326,   777,   328,     0,     0,   778,   330,   779,   331,     0,
     332,   780,   781,   782,   783,   784,   337,   338,   339,   340,
     341,     0,   785,   342,   343,     0,     0,   344,   345,   346,
     347,   348,   786,     0,   788,   349,   350,     0,   789,   790,
     351,     0,   352,   353,     0,   354,   355,   356,     0,     0,
     357,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     358,   359,   360,   791,   361,   362,   363,     0,   364,   365,
     792,   367,   368,   369,   370,   793,   794,   373,   795,   374,
       0,   375,   376,   377,     0,   378,     0,   379,   380,   381,
     382,   383,     0,   796,   385,   386,     0,     0,   387,     0,
       0,     0,   388,   389,   390,   391,   392,     0,     0,   393,
     394,   395,   396,   397,     0,   398,   399,     0,   400,   401,
     402,   797,   798,   403,   404,   405,   406,   407,   408,   409,
     410,     0,   411,     0,   412,   413,     0,   414,   415,   416,
       0,   799,     0,   800,   418,   419,   420,   421,   422,   801,
     802,   425,   426,   427,   428,     0,   803,   430,     0,     0,
       0,   431,   432,   433,   434,     0,     0,     0,   435,     0,
       0,     0,   436,     0,   437,   438,   439,   440,     0,   441,
     442,   443,   444,   445,     0,     0,     0,     0,     0,   446,
     447,   448,     0,   449,   450,     0,   451,     0,     0,   452,
       0,   453,     0,   454,   455,   456,   457,   458,   459,   804,
     805,   460,   461,     0,     0,   462,   463,   806,   465,   466,
     467,   807,   808,   468,   469,   470,   471,   809,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   810,   478,   479,
       0,   811,   812,   813,   814,     0,     0,     0,     0,     0,
     484,   485,     0,   815,   816,   817,   487,   488,   489,   818,
     490,   491,   819,   492,   493,     0,   494,   495,     0,     0,
     496,     0,     0,   497,     0,   498,     0,   820,   500,     0,
       0,   821,   822,   823,   501,   824,   502,     0,     0,   503,
     825,     0,   826,   504,     0,   505,   506,   827,   828,     0,
       0,     0,     0,     0,     0,   509,   510,   511,     0,   512,
     513,   514,   515,     0,     0,   829,     0,     0,     0,   830,
     831,     0,     0,     0,     0,   833,   834,     0,     0,   835,
     836,     0,     0,   837,   838,   143,   144,     0,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,   736,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,  2012,     0,     0,     0,     0,   209,
     210,   757,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,   761,   243,
     244,     0,   245,   246,   247,   248,   249,   762,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,   767,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,   774,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,     0,   317,   318,   319,
     320,     0,   321,   322,     0,     0,     0,     0,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,   331,
       0,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   785,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,   349,   350,     0,   789,
     790,   351,     0,   352,   353,     0,   354,   355,   356,     0,
       0,   357,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
     374,     0,   375,   376,   377,     0,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,     0,     0,   387,
       0,     0,     0,   388,   389,   390,   391,   392,     0,     0,
     393,   394,   395,   396,   397,     0,   398,   399,     0,   400,
     401,   402,     0,     0,   403,   404,   405,   406,   407,   408,
     409,   410,     0,   411,     0,   412,   413,     0,   414,   415,
     416,     0,   417,     0,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,   430,     0,
       0,     0,   431,   432,   433,   434,     0,     0,     0,   435,
       0,     0,     0,   436,     0,   437,   438,   439,   440,     0,
     441,   442,   443,   444,   445,     0,     0,     0,     0,     0,
     446,   447,   448,     0,   449,   450,     0,   451,     0,     0,
     452,     0,   453,     0,   454,   455,   456,   457,   458,   459,
       0,     0,   460,   461,     0,     0,   462,   463,   464,   465,
     466,   467,     0,     0,   468,   469,   470,   471,     0,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   810,   478,
     479,     0,  2013,   481,   482,  2014,     0,     0,     0,     0,
       0,   484,   485,     0,     0,   816,   486,   487,   488,   489,
     818,   490,   491,   819,   492,   493,     0,   494,   495,     0,
       0,   496,     0,     0,   497,     0,   498,     0,   499,   500,
       0,     0,     0,     0,     0,   501,     0,   502,     0,     0,
     503,     0,     0,     0,   504,     0,   505,   506,   507,   508,
       0,     0,     0,     0,     0,     0,   509,   510,   511,     0,
     512,   513,   514,   515,     0,     0,   516,     0,   143,   144,
       0,   145,   146,   147,   148,   149,     0,     0,   150,   151,
       0,     0,     0,   152,   837,   838,   153,     0,   154,   155,
     156,   157,   158,   159,     0,   160,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,     0,     0,   170,
     171,     0,   172,   173,   174,     0,   175,     0,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,  2293,   196,   197,   198,   199,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,   210,     0,     0,     0,     0,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,     0,   238,   239,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,     0,   252,   253,     0,
     254,   531,   255,     0,   256,     0,   257,   258,   259,   260,
       0,   261,     0,   262,     0,     0,     0,   263,   264,     0,
     265,     0,     0,   266,   267,     0,     0,     0,   268,   269,
     270,   271,     0,     0,   272,   273,   274,  1727,     0,   275,
       0,     0,     0,     0,   276,   277,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,  1728,     0,   285,   286,     0,     0,
     287,     0,     0,   288,   289,     0,  3411,     0,     0,     0,
     290,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,     0,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,     0,
     317,   318,   319,   320,     0,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,   331,     0,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,   349,
     350,     0,     0,     0,   351,     0,   352,   353,     0,   354,
     355,   356,     0,     0,   357,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   358,   359,   360,     0,   361,   362,
     363,  1685,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,     0,   375,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
     399,     0,   400,   401,   402,     0,     0,   403,   404,   405,
     406,   407,   408,   409,   410,     0,   411,     0,   412,   413,
       0,   414,   415,   416,     0,   417,     0,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,   430,  -516,     0,     0,   431,   432,   433,   434,     0,
       0,     0,   435,     0,     0,     0,   436,     0,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,   534,     0,
       0,     0,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,     0,   462,
     463,   464,   465,   466,   467,     0,     0,   468,   469,   470,
     471,     0,   472,   473,     0,     0,   474,   475,   476,   477,
       0,     0,   478,   479,     0,   480,   481,   482,   483,     0,
       0,     0,     0,     0,   484,   485,     0,     0,     0,   486,
     487,   488,   489,     0,   490,   491,     0,   492,   493,     0,
     494,   495,     0,     0,   496,     0,     0,   497,     0,   498,
       0,   499,   500,     0,     0,     0,     0,     0,   501,     0,
     502,     0,     0,   503,     0,     0,     0,   504,     0,   505,
     506,   507,   508,     0,     0,     0,     0,     0,     0,   509,
     510,   511,     0,   512,   513,   514,   515,     0,     0,   516,
       0,   143,   144,     0,   145,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,  2372,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,  2293,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,   531,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
    1727,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,  1728,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,   349,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,     0,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,     0,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   417,     0,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,   534,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,     0,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,   486,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
       0,     0,   516,     0,   143,   144,     0,   145,   146,   147,
     148,   149,     0,     0,   150,   151,     0,     0,     0,   152,
       0,  2372,   153,     0,   154,   155,   156,   157,   158,   159,
       0,   160,     0,     0,     0,   161,     0,     0,     0,   162,
       0,     0,   163,   164,   165,     0,   166,     0,   167,   168,
       0,     0,   169,     0,     0,   170,   171,     0,   172,   173,
     174,     0,   175,     0,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,     0,   201,     0,     0,   202,
       0,   203,     0,     0,   204,     0,     0,     0,   205,   206,
     207,     0,     0,   208,     0,     0,     0,     0,   209,   210,
       0,     0,     0,     0,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,   220,     0,  2105,   221,   222,   223,     0,     0,     0,
     224,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
       0,   238,   239,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,     0,   252,   253,     0,   254,     0,   255,     0,
     256,     0,   257,   258,   259,   260,     0,   261,     0,   262,
       0,     0,     0,   263,   264,     0,   265,     0,     0,   266,
     267,     0,     0,     0,   268,   269,   270,   271,     0,     0,
     272,   273,   274,     0,     0,   275,     0,     0,     0,     0,
     276,   277,     0,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,     0,     0,     0,   283,     0,   284,
       0,     0,   285,   286,     0,     0,   287,     0,     0,   288,
     289,     0,     0,     0,     0,     0,   290,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,     0,     0,     0,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,     0,   317,   318,   319,   320,
       0,   321,   322,     0,     0,     0,     0,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,   331,     0,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,   349,   350,     0,     0,     0,
     351,     0,   352,   353,     0,   354,   355,   356,     0,     0,
     357,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
       0,   375,   376,   377,     0,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,     0,     0,   387,     0,
       0,     0,   388,   389,   390,   391,   392,     0,     0,   393,
     394,   395,   396,   397,     0,   398,   399,     0,   400,   401,
     402,     0,     0,   403,   404,   405,   406,   407,   408,   409,
     410,     0,   411,     0,   412,   413,     0,   414,   415,   416,
       0,   417,     0,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,   430,  1567,     0,
       0,   431,   432,   433,   434,     0,     0,     0,   435,     0,
       0,     0,   436,     0,   437,   438,   439,   440,     0,   441,
     442,   443,   444,   445,     0,     0,     0,     0,     0,   446,
     447,   448,     0,   449,   450,     0,   451,     0,     0,   452,
       0,   453,     0,   454,   455,   456,   457,   458,   459,     0,
       0,   460,   461,     0,     0,   462,   463,   464,   465,   466,
     467,     0,     0,   468,   469,   470,   471,     0,   472,   473,
       0,     0,   474,   475,   476,   477,     0,     0,   478,   479,
       0,   480,   481,   482,   483,     0,     0,     0,     0,     0,
     484,   485,     0,     0,     0,   486,   487,   488,   489,     0,
     490,   491,     0,   492,   493,     0,   494,   495,     0,     0,
     496,     0,     0,   497,     0,   498,     0,   499,   500,     0,
       0,     0,     0,     0,   501,     0,   502,     0,     0,   503,
       0,     0,     0,   504,     0,   505,   506,   507,   508,     0,
       0,     0,     0,     0,     0,   509,   510,   511,     0,   512,
     513,   514,   515,     0,     0,   516,     0,   143,   144,     0,
     145,   146,   147,   148,   149,     0,  1568,   150,   151,     0,
    1569,     0,   152,     0,   572,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   174,     0,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,     0,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,     0,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,     0,   317,
     318,   319,   320,     0,   321,   322,     0,     0,     0,     0,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,   331,     0,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,   349,   350,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,     0,   357,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,     0,   375,   376,   377,     0,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,     0,
       0,   387,     0,     0,     0,   388,   389,   390,   391,   392,
       0,     0,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,   401,   402,     0,     0,   403,   404,   405,   406,
     407,   408,   409,   410,     0,   411,     0,   412,   413,     0,
     414,   415,   416,     0,   417,     0,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
     430,  1567,     0,     0,   431,   432,   433,   434,     0,     0,
       0,   435,     0,     0,     0,   436,     0,   437,   438,   439,
     440,     0,   441,   442,   443,   444,   445,     0,     0,     0,
       0,     0,   446,   447,   448,     0,   449,   450,     0,   451,
       0,     0,   452,     0,   453,     0,   454,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,     0,   462,   463,
     464,   465,   466,   467,     0,     0,   468,   469,   470,   471,
       0,   472,   473,     0,     0,   474,   475,   476,   477,     0,
       0,   478,   479,     0,   480,   481,   482,   483,     0,     0,
       0,     0,     0,   484,   485,     0,     0,     0,   486,   487,
     488,   489,     0,   490,   491,     0,   492,   493,     0,   494,
     495,     0,     0,   496,     0,     0,   497,     0,   498,     0,
     499,   500,     0,     0,     0,     0,     0,   501,     0,   502,
       0,     0,   503,     0,     0,     0,   504,     0,   505,   506,
     507,   508,     0,     0,     0,     0,     0,     0,   509,   510,
     511,     0,   512,   513,   514,   515,     0,     0,   516,     0,
     143,   144,     0,   145,   146,   147,   148,   149,     0,  1568,
     150,   151,     0,  1569,     0,   152,     0,   572,   153,     0,
     154,   155,   156,   157,   158,   159,     0,   160,     0,     0,
       0,   161,     0,     0,     0,   162,     0,     0,   163,   164,
     165,     0,   166,     0,   167,   168,     0,     0,   169,     0,
       0,   170,   171,     0,   172,   173,   174,     0,   175,     0,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,     0,   201,     0,     0,   202,     0,   203,     0,     0,
     204,     0,     0,     0,   205,   206,   207,     0,     0,   208,
       0,     0,     0,     0,   209,   210,     0,     0,     0,     0,
     211,   212,     0,   213,     0,     0,     0,   214,     0,   215,
     216,   217,   218,   219,     0,     0,     0,   220,     0,     0,
     221,   222,   223,     0,     0,     0,   224,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,     0,   238,   239,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,     0,   252,
     253,     0,   254,     0,   255,     0,   256,     0,   257,   258,
     259,   260,     0,   261,     0,   262,     0,     0,     0,   263,
     264,     0,   265,     0,     0,   266,   267,     0,     0,     0,
     268,   269,   270,   271,     0,     0,   272,   273,   274,     0,
       0,   275,     0,     0,     0,     0,   276,   277,     0,     0,
       0,   278,     0,     0,     0,   279,   280,     0,   281,   282,
       0,     0,     0,   283,     0,   284,     0,     0,   285,   286,
       0,     0,   287,     0,     0,   288,   289,     0,     0,     0,
       0,     0,   290,   291,     0,   292,     0,   293,     0,   294,
     295,     0,     0,     0,     0,     0,     0,     0,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,     0,   317,   318,   319,   320,     0,   321,   322,     0,
       0,     0,     0,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,   331,     0,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,   349,   350,     0,     0,     0,   351,     0,   352,   353,
       0,   354,   355,   356,     0,     0,   357,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,     0,   375,   376,   377,
       0,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,     0,     0,   387,     0,     0,     0,   388,   389,
     390,   391,   392,     0,     0,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,   401,   402,     0,     0,   403,
     404,   405,   406,   407,   408,   409,   410,     0,   411,     0,
     412,   413,     0,   414,   415,   416,     0,   417,     0,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,   430,  1567,     0,     0,   431,   432,   433,
     434,     0,     0,     0,   435,     0,     0,     0,   436,     0,
     437,   438,   439,   440,     0,   441,   442,   443,   444,   445,
       0,     0,     0,     0,     0,   446,   447,   448,     0,   449,
     450,     0,   451,     0,     0,   452,     0,   453,     0,   454,
     455,   456,   457,   458,   459,     0,     0,   460,   461,     0,
       0,   462,   463,   464,   465,   466,   467,     0,     0,   468,
     469,   470,   471,     0,   472,   473,     0,     0,   474,   475,
     476,   477,     0,     0,   478,   479,     0,   480,   481,   482,
     483,     0,     0,     0,     0,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,     0,   490,   491,     0,   492,
     493,     0,   494,   495,     0,     0,   496,     0,     0,   497,
       0,   498,     0,   499,   500,     0,     0,     0,     0,     0,
     501,     0,   502,     0,     0,   503,     0,     0,     0,   504,
       0,   505,   506,   507,   508,     0,     0,     0,     0,     0,
       0,   509,   510,   511,     0,   512,   513,   514,   515,     0,
       0,   516,     0,   143,   144,     0,   145,   146,   147,   148,
     149,     0,  1568,   150,   151,     0,     0,     0,   152,     0,
     572,   153,     0,   154,   155,   156,   157,   158,   159,     0,
     160,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,   174,
       0,   175,     0,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,   210,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,     0,   252,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,   263,   264,     0,   265,     0,     0,   266,   267,
       0,     0,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
     277,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,     0,   317,   318,   319,   320,     0,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,   331,     0,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,   349,   350,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,   356,     0,     0,   357,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,     0,   374,     0,
     375,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,   399,     0,   400,   401,   402,
       0,     0,   403,   404,   405,   406,   407,   408,   409,   410,
       0,   411,     0,   412,   413,     0,   414,   415,   416,     0,
     417,     0,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,   430,  2690,     0,     0,
     431,   432,   433,   434,     0,     0,     0,   435,     0,     0,
       0,   436,     0,   437,   438,   439,   440,     0,   441,   442,
     443,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,     0,   462,   463,   464,   465,   466,   467,
       0,     0,   468,   469,   470,   471,     0,   472,   473,     0,
       0,   474,   475,   476,   477,     0,     0,   478,   479,     0,
     480,   481,   482,   483,     0,     0,     0,     0,     0,   484,
     485,     0,     0,     0,   486,   487,   488,   489,     0,   490,
     491,     0,   492,   493,     0,   494,   495,     0,     0,   496,
       0,     0,   497,     0,   498,     0,   499,   500,     0,     0,
       0,     0,     0,   501,     0,   502,     0,     0,   503,     0,
       0,     0,   504,     0,   505,   506,   507,   508,     0,     0,
       0,     0,     0,     0,   509,   510,   511,     0,   512,   513,
     514,   515,     0,     0,   516,     0,     0,   143,   144,     0,
     145,   146,   147,   148,   149,     0,  3174,   150,   151,     0,
       0,     0,   152,   838,     0,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   174,     0,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,     0,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,     0,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,     0,   317,
     318,   319,   320,     0,   321,   322,     0,     0,     0,     0,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,   331,     0,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,   349,   350,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,     0,   357,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,     0,   375,   376,   377,     0,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,     0,
       0,   387,     0,     0,     0,   388,   389,   390,   391,   392,
       0,     0,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,   401,   402,     0,     0,   403,   404,   405,   406,
     407,   408,   409,   410,     0,   411,     0,   412,   413,     0,
     414,   415,   416,     0,   417,     0,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
     430,     0,     0,     0,   431,   432,   433,   434,     0,     0,
       0,   435,     0,     0,     0,   436,     0,   437,   438,   439,
     440,     0,   441,   442,   443,   444,   445,     0,     0,     0,
       0,     0,   446,   447,   448,     0,   449,   450,     0,   451,
       0,     0,   452,     0,   453,     0,   454,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,     0,   462,   463,
     464,   465,   466,   467,     0,     0,   468,   469,   470,   471,
       0,   472,   473,     0,     0,   474,   475,   476,   477,     0,
       0,   478,   479,     0,   480,   481,   482,   483,     0,     0,
       0,     0,     0,   484,   485,     0,     0,     0,   486,   487,
     488,   489,     0,   490,   491,     0,   492,   493,     0,   494,
     495,     0,     0,   496,     0,     0,   497,     0,   498,     0,
     499,   500,     0,     0,     0,     0,     0,   501,     0,   502,
       0,     0,   503,     0,     0,     0,   504,     0,   505,   506,
     507,   508,     0,     0,     0,     0,     0,     0,   509,   510,
     511,     0,   512,   513,   514,   515,     0,     0,   516,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   143,   144,
    4623,   145,   146,   147,   148,   149,  4624,   838,   150,   151,
       0,     0,     0,   152,     0,     0,   153,     0,   154,   155,
     156,   157,   158,   159,     0,   160,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,     0,     0,   170,
     171,     0,   172,   173,   174,     0,   175,     0,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,   210,     0,     0,     0,     0,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,     0,   238,   239,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,     0,   252,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   258,   259,   260,
       0,   261,     0,   262,     0,     0,     0,   263,   264,     0,
     265,     0,     0,   266,   267,     0,     0,     0,   268,   269,
     270,   271,     0,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,     0,   276,   277,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,     0,
     287,     0,     0,   288,   289,     0,     0,     0,     0,     0,
     290,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,     0,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,     0,
     317,   318,   319,   320,     0,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,   331,     0,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,   349,
     350,     0,     0,     0,   351,     0,   352,   353,     0,   354,
     355,   356,     0,     0,   357,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,     0,   375,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
     399,     0,   400,   401,   402,     0,     0,   403,   404,   405,
     406,   407,   408,   409,   410,     0,   411,     0,   412,   413,
       0,   414,   415,   416,     0,   417,     0,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,   430,     0,     0,     0,   431,   432,   433,   434,     0,
       0,     0,   435,     0,     0,     0,   436,     0,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,     0,     0,
       0,     0,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,     0,   462,
     463,   464,   465,   466,   467,     0,     0,   468,   469,   470,
     471,     0,   472,   473,     0,     0,   474,   475,   476,   477,
       0,     0,   478,   479,     0,   480,   481,   482,   483,     0,
       0,     0,     0,     0,   484,   485,     0,     0,     0,   486,
     487,   488,   489,     0,   490,   491,     0,   492,   493,     0,
     494,   495,     0,     0,   496,     0,     0,   497,     0,   498,
       0,   499,   500,     0,     0,     0,     0,     0,   501,     0,
     502,     0,     0,   503,     0,     0,     0,   504,     0,   505,
     506,   507,   508,     0,     0,     0,     0,     0,     0,   509,
     510,   511,     0,   512,   513,   514,   515,     0,     0,   516,
       0,   143,   144,     0,   145,   146,   147,   148,   149,     0,
    1203,   150,   151,     0,     0,     0,   152,     0,   838,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,   349,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,     0,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,     0,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   417,     0,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,     0,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,   486,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
       0,     0,   516,     0,   143,   144,     0,   145,   146,   147,
     148,   149,     0,  2371,   150,   151,     0,     0,     0,   152,
       0,  2372,   153,     0,   154,   155,   156,   157,   158,   159,
       0,   160,     0,     0,     0,   161,     0,     0,     0,   162,
       0,     0,   163,   164,   165,     0,   166,     0,   167,   168,
       0,     0,   169,     0,     0,   170,   171,     0,   172,   173,
     174,     0,   175,     0,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,     0,   201,     0,     0,   202,
       0,   203,     0,     0,   204,     0,     0,     0,   205,   206,
     207,     0,     0,   208,     0,     0,     0,     0,   209,   210,
       0,     0,     0,     0,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,   220,     0,     0,   221,   222,   223,     0,     0,     0,
     224,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
       0,   238,   239,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,     0,   252,   253,     0,   254,     0,   255,     0,
     256,     0,   257,   258,   259,   260,     0,   261,     0,   262,
       0,     0,     0,   263,   264,     0,   265,     0,     0,   266,
     267,     0,     0,     0,   268,   269,   270,   271,     0,     0,
     272,   273,   274,     0,     0,   275,     0,     0,     0,     0,
     276,   277,     0,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,     0,     0,     0,   283,     0,   284,
       0,     0,   285,   286,     0,     0,   287,     0,     0,   288,
     289,     0,     0,     0,     0,     0,   290,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,     0,     0,     0,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,     0,   317,   318,   319,   320,
       0,   321,   322,     0,     0,     0,     0,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,   331,     0,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,   349,   350,     0,     0,     0,
     351,     0,   352,   353,     0,   354,   355,   356,     0,     0,
     357,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
       0,   375,   376,   377,     0,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,     0,     0,   387,     0,
       0,     0,   388,   389,   390,   391,   392,     0,     0,   393,
     394,   395,   396,   397,     0,   398,   399,     0,   400,   401,
     402,     0,     0,   403,   404,   405,   406,   407,   408,   409,
     410,     0,   411,     0,   412,   413,     0,   414,   415,   416,
       0,   417,     0,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,   430,     0,     0,
       0,   431,   432,   433,   434,     0,     0,     0,   435,     0,
       0,     0,   436,     0,   437,   438,   439,   440,     0,   441,
     442,   443,   444,   445,     0,     0,     0,     0,     0,   446,
     447,   448,     0,   449,   450,     0,   451,     0,     0,   452,
       0,   453,     0,   454,   455,   456,   457,   458,   459,     0,
       0,   460,   461,     0,     0,   462,   463,   464,   465,   466,
     467,     0,     0,   468,   469,   470,   471,     0,   472,   473,
       0,     0,   474,   475,   476,   477,     0,     0,   478,   479,
       0,   480,   481,   482,   483,     0,     0,     0,     0,     0,
     484,   485,     0,     0,     0,   486,   487,   488,   489,     0,
     490,   491,     0,   492,   493,     0,   494,   495,     0,     0,
     496,     0,     0,   497,     0,   498,     0,   499,   500,     0,
       0,     0,     0,     0,   501,     0,   502,     0,     0,   503,
       0,     0,     0,   504,     0,   505,   506,   507,   508,     0,
       0,     0,     0,     0,     0,   509,   510,   511,     0,   512,
     513,   514,   515,     0,     0,   516,     0,     0,     0,     0,
       0,  3142,   143,   144,     0,   145,   146,   147,   148,   149,
       0,     0,   150,   151,   572,     0,     0,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,     0,   317,   318,   319,   320,     0,   321,
     322,     0,     0,     0,     0,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,   331,     0,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,   349,   350,     0,     0,     0,   351,     0,
     352,   353,     0,   354,   355,   356,     0,     0,   357,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,     0,   375,
     376,   377,     0,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,     0,     0,   387,     0,     0,     0,
     388,   389,   390,   391,   392,     0,     0,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,   401,   402,     0,
       0,   403,   404,   405,   406,   407,   408,   409,   410,     0,
     411,     0,   412,   413,     0,   414,   415,   416,     0,   417,
       0,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,   430,     0,     0,     0,   431,
     432,   433,   434,     0,     0,     0,   435,     0,     0,     0,
     436,     0,   437,   438,   439,   440,     0,   441,   442,   443,
     444,   445,     0,     0,     0,     0,     0,   446,   447,   448,
       0,   449,   450,     0,   451,     0,     0,   452,     0,   453,
       0,   454,   455,   456,   457,   458,   459,     0,     0,   460,
     461,     0,     0,   462,   463,   464,   465,   466,   467,     0,
       0,   468,   469,   470,   471,     0,   472,   473,     0,     0,
     474,   475,   476,   477,     0,     0,   478,   479,     0,   480,
     481,   482,   483,     0,     0,     0,     0,     0,   484,   485,
       0,     0,     0,   486,   487,   488,   489,     0,   490,   491,
       0,   492,   493,     0,   494,   495,     0,     0,   496,     0,
       0,   497,     0,   498,     0,   499,   500,     0,     0,     0,
       0,     0,   501,     0,   502,     0,     0,   503,     0,     0,
       0,   504,     0,   505,   506,   507,   508,     0,     0,     0,
       0,     0,     0,   509,   510,   511,     0,   512,   513,   514,
     515,     0,     0,   516,     0,   143,   144,     0,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,  4624,   838,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,     0,   317,   318,   319,
     320,     0,   321,   322,     0,     0,     0,     0,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,   331,
       0,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,   349,   350,     0,     0,
       0,   351,     0,   352,   353,     0,   354,   355,   356,     0,
       0,   357,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
     374,     0,   375,   376,   377,     0,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,     0,     0,   387,
       0,     0,     0,   388,   389,   390,   391,   392,     0,     0,
     393,   394,   395,   396,   397,     0,   398,   399,     0,   400,
     401,   402,     0,     0,   403,   404,   405,   406,   407,   408,
     409,   410,     0,   411,     0,   412,   413,     0,   414,   415,
     416,     0,   417,     0,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,   430,     0,
       0,     0,   431,   432,   433,   434,     0,     0,     0,   435,
       0,     0,     0,   436,     0,   437,   438,   439,   440,     0,
     441,   442,   443,   444,   445,     0,     0,     0,     0,     0,
     446,   447,   448,     0,   449,   450,     0,   451,     0,     0,
     452,     0,   453,     0,   454,   455,   456,   457,   458,   459,
       0,     0,   460,   461,     0,     0,   462,   463,   464,   465,
     466,   467,     0,     0,   468,   469,   470,   471,     0,   472,
     473,     0,     0,   474,   475,   476,   477,     0,     0,   478,
     479,     0,   480,   481,   482,   483,     0,     0,     0,     0,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
       0,   490,   491,     0,   492,   493,     0,   494,   495,     0,
       0,   496,     0,     0,   497,     0,   498,     0,   499,   500,
       0,     0,     0,     0,     0,   501,     0,   502,     0,     0,
     503,     0,     0,     0,   504,     0,   505,   506,   507,   508,
       0,     0,     0,     0,     0,     0,   509,   510,   511,     0,
     512,   513,   514,   515,     0,     0,   516,     0,   143,   144,
       0,   145,   146,   147,   148,   149,     0,     0,   150,   151,
       0,     0,     0,   152,     0,   572,   153,     0,   154,   155,
     156,   157,   158,   159,     0,   160,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,     0,     0,   170,
     171,     0,   172,   173,   174,     0,   175,     0,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,   210,     0,     0,     0,     0,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,     0,   238,   239,   240,   672,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,     0,   673,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   258,   259,   260,
       0,   261,     0,   262,     0,     0,     0,   263,   264,     0,
     265,     0,     0,   266,   267,     0,     0,     0,   268,   269,
     270,   271,     0,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,     0,   276,   277,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,     0,
     287,     0,     0,   288,   289,     0,     0,     0,     0,     0,
     290,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,     0,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,     0,
     317,   318,   319,   320,     0,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,   331,     0,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,   349,
     350,     0,     0,     0,   351,     0,   352,   353,     0,   354,
     355,   356,     0,     0,   357,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   358,   359,   360,     0,   361,   362,
     363,     0,   674,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,     0,   375,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
     399,     0,   400,   401,   402,     0,     0,   403,   404,   405,
     406,   407,   408,   409,   410,     0,   411,     0,   412,   413,
       0,   414,   415,   416,     0,   417,     0,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,   430,     0,     0,     0,   431,   432,   433,   434,     0,
       0,     0,   435,     0,     0,     0,   436,     0,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,     0,     0,
       0,     0,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,     0,   462,
     463,   464,   465,   466,   467,     0,     0,   468,   469,   470,
     471,     0,   472,   473,     0,     0,   474,   475,   476,   477,
       0,     0,   478,   479,     0,   480,   481,   482,   483,     0,
       0,     0,     0,     0,   484,   485,     0,     0,     0,   486,
     487,   488,   489,     0,   490,   491,     0,   492,   493,     0,
     494,   495,     0,     0,   496,     0,     0,   497,     0,   498,
       0,   499,   500,     0,     0,     0,     0,     0,   501,     0,
     502,     0,     0,   503,     0,     0,     0,   504,     0,   505,
     506,   507,   508,     0,     0,     0,     0,     0,     0,   509,
     510,   511,     0,   512,   513,   514,   515,     0,     0,   516,
       0,   143,   144,     0,   145,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,   572,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,   349,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,     0,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,     0,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   417,     0,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,     0,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,   486,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
       0,     0,   516,     0,   143,   144,     0,   145,   146,   147,
     148,   149,     0,     0,   150,   151,     0,     0,     0,   152,
       0,   838,   153,     0,   154,   155,   156,   157,   158,   159,
       0,   160,     0,     0,     0,   161,     0,     0,     0,   162,
       0,     0,   163,   164,   165,     0,   166,     0,   167,   168,
       0,     0,   169,     0,     0,   170,   171,     0,   172,   173,
     174,     0,   175,     0,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,     0,   201,     0,     0,   202,
       0,   203,     0,     0,   204,     0,     0,     0,   205,   206,
     207,     0,     0,   208,     0,     0,     0,     0,   209,   210,
       0,     0,     0,     0,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,   220,     0,     0,   221,   222,   223,     0,     0,     0,
     224,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
       0,   238,   239,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,     0,   252,   253,     0,   254,     0,   255,     0,
     256,     0,   257,   258,   259,   260,     0,   261,     0,   262,
       0,     0,     0,   263,   264,     0,   265,     0,     0,   266,
     267,     0,     0,     0,   268,   269,   270,   271,     0,     0,
     272,   273,   274,     0,     0,   275,     0,     0,     0,     0,
     276,   277,     0,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,     0,     0,     0,   283,     0,   284,
       0,     0,   285,   286,     0,     0,   287,     0,     0,   288,
     289,     0,     0,     0,     0,     0,   290,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,     0,     0,     0,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,     0,   317,   318,   319,   320,
       0,   321,   322,     0,     0,     0,     0,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,   331,     0,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,   349,   350,     0,     0,     0,
     351,     0,   352,   353,     0,   354,   355,   356,     0,     0,
     357,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
       0,   375,   376,   377,     0,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,     0,     0,   387,     0,
       0,     0,   388,   389,   390,   391,   392,     0,     0,   393,
     394,   395,   396,   397,     0,   398,   399,     0,   400,   401,
     402,     0,     0,   403,   404,   405,   406,   407,   408,   409,
     410,     0,   411,     0,   412,   413,     0,   414,   415,   416,
       0,   417,     0,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,   430,     0,     0,
       0,   431,   432,   433,   434,     0,     0,     0,   435,     0,
       0,     0,   436,     0,   437,   438,   439,   440,     0,   441,
     442,   443,   444,   445,     0,     0,     0,     0,     0,   446,
     447,   448,     0,   449,   450,     0,   451,     0,     0,   452,
       0,   453,     0,   454,   455,   456,   457,   458,   459,     0,
       0,   460,   461,     0,     0,   462,   463,   464,   465,   466,
     467,     0,     0,   468,   469,   470,   471,     0,   472,   473,
       0,     0,   474,   475,   476,   477,     0,     0,   478,   479,
       0,   480,   481,   482,   483,     0,     0,     0,     0,     0,
     484,   485,     0,     0,     0,   486,   487,   488,   489,     0,
     490,   491,     0,   492,   493,     0,   494,   495,     0,     0,
     496,     0,     0,   497,     0,   498,     0,   499,   500,     0,
       0,     0,     0,     0,   501,     0,   502,     0,     0,   503,
       0,     0,     0,   504,     0,   505,   506,   507,   508,     0,
       0,     0,     0,     0,     0,   509,   510,   511,     0,   512,
     513,   514,   515,     0,     0,   516,     0,   143,   144,     0,
     145,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,  2372,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   174,     0,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,     0,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,  1451,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,   660,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,     0,   317,
     318,   319,   320,     0,   321,   322,     0,     0,     0,     0,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,   331,     0,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,   349,   350,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,     0,   357,     0,     0,     0,     0,     0,     0,
       0,  1452,     0,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,     0,   375,   376,   377,     0,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,     0,
       0,   387,     0,     0,     0,   388,   389,   390,   391,   392,
       0,     0,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,   401,   402,     0,     0,   403,   404,   405,   406,
     407,   408,   409,   410,     0,   411,     0,   412,   413,     0,
     414,   415,   416,     0,   417,     0,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
     430,     0,     0,     0,   431,   432,   433,   434,     0,     0,
       0,   435,     0,     0,     0,   436,     0,   437,   438,   439,
     440,     0,   441,   442,   443,   444,   445,     0,     0,     0,
       0,     0,   446,   447,   448,     0,   449,   450,     0,   451,
       0,     0,   452,     0,   453,     0,   454,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,     0,   462,   463,
     464,   465,   466,   467,     0,     0,   468,   469,   470,   471,
       0,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     140,   478,   479,     0,   480,   481,   482,   483,     0,     0,
       0,     0,     0,   484,   485,     0,     0,     0,   486,   487,
     488,   489,     0,   490,   491,     0,   492,   493,     0,   494,
     495,     0,     0,   496,     0,     0,   497,     0,   498,     0,
     499,   500,     0,     0,     0,     0,     0,   501,     0,   502,
       0,     0,   503,     0,     0,     0,   504,     0,   505,   506,
     507,   508,     0,     0,     0,     0,     0,     0,   509,   510,
     511,     0,   512,   513,   514,   515,     0,     0,   516,   143,
     144,     0,   145,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,  1453,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   615,   616,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,     0,     0,     0,   617,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   618,     0,   262,     0,     0,     0,   263,   264,
       0,   265,     0,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   619,     0,   293,     0,   294,   295,
       0,     0,     0,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
       0,   317,   318,   319,   320,     0,   321,   322,     0,     0,
       0,     0,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,   331,     0,   332,     0,   333,   334,   335,
     336,   337,   338,   620,   340,   341,     0,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
     349,   350,     0,     0,     0,   351,     0,   352,   353,     0,
     354,   355,   356,     0,     0,   357,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   621,   367,   368,   369,   370,
     371,   372,   373,     0,   374,     0,   375,   376,   377,     0,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,     0,     0,   387,     0,     0,     0,   388,   389,   390,
     391,   392,     0,     0,   393,   394,   395,   396,   397,     0,
     398,   399,     0,   400,   401,   402,     0,     0,   403,   404,
     405,   406,   407,   408,   409,   410,     0,   411,     0,   412,
     413,     0,   414,   415,   416,     0,   417,     0,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,   430,     0,     0,     0,   431,   432,   622,   434,
       0,     0,     0,   435,     0,     0,     0,   436,     0,   437,
     438,   439,   440,     0,   441,   442,   443,   444,   445,     0,
       0,     0,     0,     0,   446,   447,   448,     0,   449,   450,
       0,   451,     0,     0,   452,     0,   453,     0,   454,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,     0,
     462,   463,   464,   465,   466,   467,     0,     0,   468,   469,
     470,   471,     0,   472,   473,     0,     0,   474,   475,   476,
     477,     0,     0,   478,   479,     0,   480,   481,   482,   483,
       0,     0,     0,     0,     0,   623,   485,     0,     0,     0,
     486,   487,   488,   489,     0,   490,   491,     0,   492,   493,
       0,   494,   495,     0,     0,   496,     0,     0,   497,     0,
     498,     0,   499,   500,     0,     0,     0,     0,     0,   501,
       0,   502,     0,     0,   503,     0,     0,     0,   504,     0,
     505,   506,   507,   508,     0,     0,     0,     0,     0,     0,
     509,   510,   511,     0,   512,   513,   514,   515,     0,     0,
     516,   143,   144,     0,   145,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,   624,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,   660,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,   349,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,     0,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,     0,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   417,     0,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   140,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,   486,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
       0,     0,   516,   143,   144,     0,   145,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
     964,   153,     0,   154,   155,   156,   157,   158,   159,     0,
     160,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,   174,
       0,   175,     0,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,   210,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,     0,   252,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,   263,   264,     0,   265,     0,     0,   266,   267,
       0,     0,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
     277,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,     0,   288,   289,
     660,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,     0,   317,   318,   319,   320,     0,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,   331,     0,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,   349,   350,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,   356,     0,     0,   357,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,     0,   374,     0,
     375,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,   399,     0,   400,   401,   402,
       0,     0,   403,   404,   405,   406,   407,   408,   409,   410,
       0,   411,     0,   412,   413,     0,   414,   415,   416,     0,
     417,     0,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,   430,     0,     0,     0,
     431,   432,   433,   434,     0,     0,     0,   435,     0,     0,
       0,   436,     0,   437,   438,   439,   440,     0,   441,   442,
     443,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,     0,   462,   463,   464,   465,   466,   467,
       0,     0,   468,   469,   470,   471,     0,   472,   473,     0,
       0,   474,   475,   476,   477,     0,   140,   478,   479,     0,
     480,   481,   482,   483,     0,     0,     0,     0,     0,   484,
     485,     0,     0,     0,   486,   487,   488,   489,     0,   490,
     491,     0,   492,   493,     0,   494,   495,     0,     0,   496,
       0,     0,   497,     0,   498,     0,   499,   500,     0,     0,
       0,     0,     0,   501,     0,   502,     0,     0,   503,     0,
       0,     0,   504,     0,   505,   506,   507,   508,     0,     0,
       0,     0,     0,     0,   509,   510,   511,     0,   512,   513,
     514,   515,     0,     0,   516,   143,   144,     0,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,  1265,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   615,   616,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,   617,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   618,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     619,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,     0,   317,   318,   319,
     320,     0,   321,   322,     0,     0,     0,     0,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,   331,
       0,   332,     0,   333,   334,   335,   336,   337,   338,   620,
     340,   341,     0,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,   349,   350,     0,     0,
       0,   351,     0,   352,   353,     0,   354,   355,   356,     0,
       0,   357,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
     374,     0,   375,   376,   377,     0,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,     0,     0,   387,
       0,     0,     0,   388,   389,   390,   391,   392,     0,     0,
     393,   394,   395,   396,   397,     0,   398,   399,     0,   400,
     401,   402,     0,     0,   403,   404,   405,   406,   407,   408,
     409,   410,     0,   411,     0,   412,   413,     0,   414,   415,
     416,     0,   417,     0,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,   430,     0,
       0,     0,   431,   432,   622,   434,     0,     0,     0,   435,
       0,     0,     0,   436,     0,   437,   438,   439,   440,     0,
     441,   442,   443,   444,   445,     0,     0,     0,     0,     0,
     446,   447,   448,     0,   449,   450,     0,   451,     0,     0,
     452,     0,   453,     0,   454,   455,   456,   457,   458,   459,
       0,     0,   460,   461,     0,     0,   462,   463,   464,   465,
     466,   467,     0,     0,   468,   469,   470,   471,     0,   472,
     473,     0,     0,   474,   475,   476,   477,     0,     0,   478,
     479,     0,   480,   481,   482,   483,     0,     0,     0,     0,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
       0,   490,   491,     0,   492,   493,     0,   494,   495,     0,
       0,   496,     0,     0,   497,     0,   498,     0,   499,   500,
       0,     0,     0,     0,     0,   501,     0,   502,     0,     0,
     503,     0,     0,     0,   504,     0,   505,   506,   507,   508,
       0,     0,     0,     0,     0,     0,   509,   510,   511,     0,
     512,   513,   514,   515,     0,     0,   516,   143,   144,     0,
     145,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,   624,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   174,     0,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,     0,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,   660,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,     0,   317,
     318,   319,   320,     0,   321,   322,     0,     0,     0,     0,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,   331,     0,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,   349,   350,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,     0,   357,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,     0,   375,   376,   377,     0,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,     0,
       0,   387,     0,     0,     0,   388,   389,   390,   391,   392,
       0,     0,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,   401,   402,     0,     0,   403,   404,   405,   406,
     407,   408,   409,   410,     0,   411,     0,   412,   413,     0,
     414,   415,   416,     0,   417,     0,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
     430,     0,     0,     0,   431,   432,   433,   434,     0,     0,
       0,   435,     0,     0,     0,   436,     0,   437,   438,   439,
     440,     0,   441,   442,   443,   444,   445,     0,     0,     0,
       0,     0,   446,   447,   448,     0,   449,   450,     0,   451,
       0,     0,   452,     0,   453,     0,   454,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,     0,   462,   463,
     464,   465,   466,   467,     0,     0,   468,   469,   470,   471,
       0,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     140,   478,   479,     0,   480,   481,   482,   483,     0,     0,
       0,     0,     0,   484,   485,     0,     0,     0,   486,   487,
     488,   489,     0,   490,   491,     0,   492,   493,     0,   494,
     495,     0,     0,   496,     0,     0,   497,     0,   498,     0,
     499,   500,     0,     0,     0,     0,     0,   501,     0,   502,
       0,     0,   503,     0,     0,     0,   504,     0,   505,   506,
     507,   508,     0,     0,     0,     0,     0,     0,   509,   510,
     511,     0,   512,   513,   514,   515,     0,     0,   516,   143,
     144,     0,   145,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,  1453,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,  1354,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,     0,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,   263,   264,
       0,   265,     0,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
       0,   317,   318,   319,   320,     0,   321,   322,     0,     0,
       0,     0,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,   331,     0,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
     349,   350,     0,     0,     0,   351,     0,   352,   353,     0,
     354,   355,   356,     0,     0,   357,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,     0,   374,     0,   375,   376,   377,     0,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,     0,     0,   387,     0,     0,     0,   388,   389,   390,
     391,   392,     0,     0,   393,   394,   395,   396,   397,     0,
     398,   399,     0,   400,   401,   402,     0,     0,   403,   404,
     405,   406,   407,   408,   409,   410,     0,   411,     0,   412,
     413,     0,   414,   415,   416,     0,   417,     0,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,   430,     0,     0,     0,   431,   432,   433,   434,
       0,     0,     0,   435,     0,     0,     0,   436,     0,   437,
     438,   439,   440,     0,   441,   442,   443,   444,   445,     0,
       0,     0,     0,     0,   446,   447,   448,     0,   449,   450,
       0,   451,     0,     0,   452,     0,   453,     0,   454,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,     0,
     462,   463,   464,   465,   466,   467,     0,     0,   468,   469,
     470,   471,     0,   472,   473,     0,     0,   474,   475,   476,
     477,     0,     0,   478,   479,     0,   480,   481,   482,   483,
       0,     0,     0,     0,     0,   484,   485,     0,     0,     0,
     486,   487,   488,   489,     0,   490,   491,     0,   492,   493,
       0,   494,   495,     0,     0,   496,     0,     0,   497,     0,
     498,     0,   499,   500,     0,     0,     0,     0,     0,   501,
       0,   502,     0,     0,   503,     0,     0,     0,   504,     0,
     505,   506,   507,   508,     0,     0,     0,     0,     0,     0,
     509,   510,   511,     0,   512,   513,   514,   515,     0,     0,
     516,   143,   144,     0,   145,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,  1355,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,   349,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,     0,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,     0,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   417,     0,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,     0,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,   486,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
       0,     0,   516,   143,   144,     0,   145,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
    1355,   153,     0,   154,   155,   156,   157,   158,   159,     0,
     160,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,   174,
       0,   175,     0,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,   210,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,     0,   252,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,   263,   264,     0,   265,     0,     0,   266,   267,
       0,     0,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
     277,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,     0,   317,   318,   319,   320,     0,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,   331,     0,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,   349,   350,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,   356,     0,     0,   357,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,     0,   374,     0,
     375,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,   399,     0,   400,   401,   402,
       0,     0,   403,   404,   405,   406,   407,   408,   409,   410,
       0,   411,     0,   412,   413,     0,   414,   415,   416,     0,
     417,     0,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,   430,     0,     0,     0,
     431,   432,   433,   434,     0,     0,     0,   435,     0,     0,
       0,   436,     0,   437,   438,   439,   440,     0,   441,   442,
     443,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,     0,   462,   463,   464,   465,   466,   467,
       0,     0,   468,   469,   470,   471,     0,   472,   473,     0,
       0,   474,   475,   476,   477,     0,     0,   478,   479,     0,
     480,   481,   482,   483,     0,     0,     0,     0,     0,   484,
     485,     0,     0,     0,   486,   487,   488,   489,     0,   490,
     491,     0,   492,   493,     0,   494,   495,     0,     0,   496,
       0,     0,   497,     0,   498,     0,   499,   500,     0,     0,
       0,     0,     0,   501,     0,   502,     0,     0,   503,     0,
       0,     0,   504,     0,   505,   506,   507,   508,     0,     0,
       0,     0,     0,     0,   509,   510,   511,     0,   512,   513,
     514,   515,   143,   144,   516,   145,   146,   147,   148,   149,
       0,     0,   150,   151,     0,     0,  3373,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,     0,   317,   318,   319,   320,     0,   321,
     322,     0,     0,     0,     0,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,   331,     0,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,   349,   350,     0,     0,     0,   351,     0,
     352,   353,     0,   354,   355,   356,     0,     0,   357,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,     0,   375,
     376,   377,     0,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,     0,     0,   387,     0,     0,     0,
     388,   389,   390,   391,   392,     0,     0,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,   401,   402,     0,
       0,   403,   404,   405,   406,   407,   408,   409,   410,     0,
     411,     0,   412,   413,     0,   414,   415,   416,     0,   417,
       0,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,   430,     0,     0,     0,   431,
     432,   433,   434,     0,     0,     0,   435,     0,     0,     0,
     436,     0,   437,   438,   439,   440,     0,   441,   442,   443,
     444,   445,     0,     0,     0,     0,     0,   446,   447,   448,
       0,   449,   450,     0,   451,     0,     0,   452,     0,   453,
       0,   454,   455,   456,   457,   458,   459,     0,     0,   460,
     461,     0,     0,   462,   463,   464,   465,   466,   467,     0,
       0,   468,   469,   470,   471,     0,   472,   473,     0,     0,
     474,   475,   476,   477,     0,     0,   478,   479,     0,   480,
     481,   482,   483,     0,     0,     0,     0,     0,   484,   485,
       0,     0,     0,   486,   487,   488,   489,     0,   490,   491,
       0,   492,   493,     0,   494,   495,     0,     0,   496,     0,
       0,   497,     0,   498,     0,   499,   500,     0,     0,     0,
       0,     0,   501,     0,   502,     0,     0,   503,     0,     0,
       0,   504,     0,   505,   506,   507,   508,     0,     0,     0,
       0,     0,     0,   509,   510,   511,     0,   512,   513,   514,
     515,     0,   144,   516,   145,   146,   147,   148,   149,     0,
       0,     0,   151,     0,     0,  3377,   152,     0,     0,     0,
       0,   154,   155,   156,   157,   158,     0,     0,  -402,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,     0,     0,     0,     0,   169,
    4172,     0,   170,   171,     0,   172,   173,     0,     0,     0,
       0,   176,   177,   178,  4173,   180,   181,     0,   182,   183,
       0,   184,   185,     0,   187,     0,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,     0,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,     0,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,     0,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,     0,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,     0,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,  4174,   245,   246,
     247,   248,   249,     0,     0,     0,     0,     0,     0,     0,
       0,   253,     0,   254,     0,   255,     0,   256,     0,     0,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
       0,   264,     0,     0,     0,     0,     0,   267,     0,     0,
       0,   268,   269,   270,   271,  4175,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,     0,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,  4176,     0,     0,   283,     0,   284,     0,     0,     0,
     286,     0,     0,   287,  4177,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,  -357,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,  4178,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   359,   360,
       0,     0,     0,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,     0,     0,     0,     0,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,     0,     0,   400,     0,   402,  -357,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,     0,
       0,   412,     0,     0,   414,   415,   416,  4179,   417,     0,
       0,     0,   419,   420,   421,   422,   423,   424,   425,     0,
     427,   428,     0,   429,     0,     0,     0,     0,   431,   432,
     433,     0,     0,     0,     0,   435,     0,     0,     0,     0,
       0,     0,   438,     0,   440,     0,   441,     0,     0,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,     0,   456,   457,   458,   459,     0,     0,     0,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,     0,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,     0,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,     0,     0,     0,     0,   496,     0,     0,
     497,     0,     0,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,  -357,     0,
       0,     0,   509,   510,     0,     0,   512,     0,   514,   515,
       0,     0,   516,   143,   144,     0,   145,   146,   147,   148,
     149,     0,     0,   150,   151,  4616,     0,     0,   152,     0,
       0,   153,     0,   154,   155,   156,   157,   158,   159,     0,
     160,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,   174,
       0,   175,     0,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,   210,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,     0,   252,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,   263,   264,     0,   265,     0,     0,   266,   267,
       0,     0,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
     277,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,     0,   317,   318,   319,   320,     0,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,   331,     0,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,   349,   350,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,   356,     0,     0,   357,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,     0,   374,     0,
     375,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,   399,     0,   400,   401,   402,
       0,     0,   403,   404,   405,   406,   407,   408,   409,   410,
       0,   411,     0,   412,   413,     0,   414,   415,   416,     0,
     417,     0,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,   430,     0,     0,     0,
     431,   432,   433,   434,     0,     0,     0,   435,     0,     0,
       0,   436,     0,   437,   438,   439,   440,     0,   441,   442,
     443,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,     0,   462,   463,   464,   465,   466,   467,
       0,     0,   468,   469,   470,   471,     0,   472,   473,     0,
       0,   474,   475,   476,   477,     0,     0,   478,   479,     0,
     480,   481,   482,   483,     0,     0,     0,     0,     0,   484,
     485,     0,     0,     0,   486,   487,   488,   489,     0,   490,
     491,     0,   492,   493,     0,   494,   495,     0,     0,   496,
       0,     0,   497,     0,   498,     0,   499,   500,     0,     0,
       0,     0,     0,   501,     0,   502,     0,     0,   503,     0,
       0,     0,   504,     0,   505,   506,   507,   508,     0,     0,
       0,     0,     0,     0,   509,   510,   511,     0,   512,   513,
     514,   515,   143,   144,   516,   145,   146,   147,   148,   149,
    1809,     0,   150,   151,     0,     0,     0,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,     0,   317,   318,   319,   320,     0,   321,
     322,     0,     0,     0,     0,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,   331,     0,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,   349,   350,     0,     0,     0,   351,     0,
     352,   353,     0,   354,   355,   356,     0,     0,   357,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,     0,   375,
     376,   377,     0,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,     0,     0,   387,     0,     0,     0,
     388,   389,   390,   391,   392,     0,     0,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,   401,   402,     0,
       0,   403,   404,   405,   406,   407,   408,   409,   410,     0,
     411,     0,   412,   413,     0,   414,   415,   416,     0,   417,
       0,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,   430,     0,     0,     0,   431,
     432,   433,   434,     0,     0,     0,   435,     0,     0,     0,
     436,     0,   437,   438,   439,   440,     0,   441,   442,   443,
     444,   445,     0,     0,     0,     0,     0,   446,   447,   448,
       0,   449,   450,     0,   451,     0,     0,   452,     0,   453,
       0,   454,   455,   456,   457,   458,   459,     0,     0,   460,
     461,     0,     0,   462,   463,   464,   465,   466,   467,     0,
       0,   468,   469,   470,   471,     0,   472,   473,     0,     0,
     474,   475,   476,   477,     0,     0,   478,   479,     0,   480,
     481,   482,   483,     0,     0,     0,     0,     0,   484,   485,
       0,     0,     0,   486,   487,   488,   489,     0,   490,   491,
       0,   492,   493,     0,   494,   495,     0,     0,   496,     0,
       0,   497,     0,   498,     0,   499,   500,     0,     0,     0,
       0,     0,   501,     0,   502,     0,     0,   503,     0,     0,
       0,   504,     0,   505,   506,   507,   508,     0,     0,     0,
       0,     0,     0,   509,   510,   511,     0,   512,   513,   514,
     515,   143,   144,   516,   145,   146,   147,   148,   149,  1988,
       0,   150,   151,     0,     0,     0,   152,     0,     0,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,   349,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,     0,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,     0,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   417,     0,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,     0,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,   486,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
     143,   144,   516,   145,   146,   147,   148,   149,  3128,     0,
     150,   151,     0,     0,     0,   152,     0,     0,   153,     0,
     154,   155,   156,   157,   158,   159,     0,   160,     0,     0,
       0,   161,     0,     0,     0,   162,     0,     0,   163,   164,
     165,     0,   166,     0,   167,   168,     0,     0,   169,     0,
       0,   170,   171,     0,   172,   173,   174,     0,   175,     0,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,     0,   201,     0,     0,   202,     0,   203,     0,     0,
     204,     0,     0,     0,   205,   206,   207,     0,     0,   208,
       0,     0,     0,     0,   209,   210,     0,     0,     0,     0,
     211,   212,     0,   213,     0,     0,     0,   214,     0,   215,
     216,   217,   218,   219,     0,     0,     0,   220,     0,     0,
     221,   222,   223,     0,     0,     0,   224,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,     0,   238,   239,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,     0,   252,
     253,     0,   254,     0,   255,     0,   256,     0,   257,   258,
     259,   260,     0,   261,     0,   262,     0,     0,     0,   263,
     264,     0,   265,     0,     0,   266,   267,     0,     0,     0,
     268,   269,   270,   271,     0,     0,   272,   273,   274,     0,
       0,   275,     0,     0,     0,     0,   276,   277,     0,     0,
       0,   278,     0,     0,     0,   279,   280,     0,   281,   282,
       0,     0,     0,   283,     0,   284,     0,     0,   285,   286,
       0,     0,   287,     0,     0,   288,   289,     0,     0,     0,
       0,     0,   290,   291,     0,   292,     0,   293,     0,   294,
     295,     0,     0,     0,     0,     0,     0,     0,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,     0,   317,   318,   319,   320,     0,   321,   322,     0,
       0,     0,     0,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,   331,     0,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,   349,   350,     0,     0,     0,   351,     0,   352,   353,
       0,   354,   355,   356,     0,     0,   357,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,     0,   375,   376,   377,
       0,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,     0,     0,   387,     0,     0,     0,   388,   389,
     390,   391,   392,     0,     0,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,   401,   402,     0,     0,   403,
     404,   405,   406,   407,   408,   409,   410,     0,   411,     0,
     412,   413,     0,   414,   415,   416,     0,   417,     0,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,   430,     0,     0,     0,   431,   432,   433,
     434,     0,     0,     0,   435,     0,     0,     0,   436,     0,
     437,   438,   439,   440,     0,   441,   442,   443,   444,   445,
       0,     0,     0,     0,     0,   446,   447,   448,     0,   449,
     450,     0,   451,     0,     0,   452,     0,   453,     0,   454,
     455,   456,   457,   458,   459,     0,     0,   460,   461,     0,
       0,   462,   463,   464,   465,   466,   467,     0,     0,   468,
     469,   470,   471,     0,   472,   473,     0,     0,   474,   475,
     476,   477,     0,     0,   478,   479,     0,   480,   481,   482,
     483,     0,     0,     0,     0,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,     0,   490,   491,     0,   492,
     493,     0,   494,   495,     0,     0,   496,     0,     0,   497,
       0,   498,     0,   499,   500,     0,     0,     0,     0,     0,
     501,     0,   502,     0,     0,   503,     0,     0,     0,   504,
       0,   505,   506,   507,   508,     0,     0,     0,     0,     0,
       0,   509,   510,   511,     0,   512,   513,   514,   515,   143,
     144,   516,   145,   146,   147,   148,   149,  3824,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,  2229,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,  2230,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,   263,   264,
       0,   265,  2231,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,  2232,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
       0,   317,   318,   319,   320,     0,   321,   322,     0,     0,
       0,     0,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,   331,     0,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,  1120,  1121,     0,
     349,   350,     0,     0,  2233,   351,     0,   352,   353,     0,
     354,   355,   356,     0,     0,   357,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,     0,   374,     0,   375,   376,   377,     0,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,     0,     0,   387,     0,     0,     0,   388,   389,   390,
     391,   392,     0,     0,   393,   394,   395,   396,   397,     0,
     398,   399,     0,   400,   401,   402,     0,     0,   403,   404,
     405,   406,   407,   408,   409,   410,     0,   411,     0,   412,
     413,     0,   414,   415,   416,     0,   417,     0,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,   430,     0,     0,     0,   431,   432,   433,   434,
       0,     0,     0,   435,     0,     0,     0,   436,     0,   437,
     438,   439,   440,     0,   441,   442,   443,   444,   445,     0,
       0,  4603,   604,  4604,   446,   447,   448,     0,   449,   450,
       0,   451,     0,     0,   452,     0,   453,     0,   454,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,     0,
     462,   463,   464,   465,   466,   467,     0,     0,   468,   469,
     470,   471,     0,   472,   473,     0,     0,   474,   475,   476,
     477,     0,     0,   478,   479,     0,   480,   481,   482,   483,
       0,     0,     0,     0,     0,   484,   485,     0,     0,     0,
     486,   487,   488,   489,  2234,   490,   491,     0,   492,   493,
       0,   494,   495,     0,     0,   496,     0,     0,   497,     0,
     498,     0,   499,   500,     0,     0,     0,     0,     0,   501,
       0,   502,     0,     0,   503,     0,     0,     0,   504,     0,
     505,   506,   507,   508,     0,     0,     0,     0,     0,     0,
     509,   510,   511,     0,   512,   513,   514,   515,   143,   144,
     516,   145,   146,   147,   148,   149,     0,     0,   150,   151,
       0,  1270,  1271,   152,  1272,     0,   153,     0,   154,   155,
     156,   157,   158,   159,     0,   160,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,     0,     0,   170,
     171,     0,   172,   173,   174,     0,   175,     0,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,   210,     0,     0,     0,     0,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,     0,   238,   239,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,     0,   252,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   258,   259,   260,
       0,   261,     0,   262,     0,     0,     0,   263,   264,     0,
     265,     0,     0,   266,   267,     0,     0,     0,   268,   269,
     270,   271,     0,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,     0,   276,   277,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,     0,
     287,     0,     0,   288,   289,     0,     0,     0,     0,     0,
     290,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,     0,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,     0,
     317,   318,   319,   320,     0,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,   331,     0,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,   349,
     350,     0,     0,     0,   351,     0,   352,   353,     0,   354,
     355,   356,     0,     0,   357,     0,     0,  1273,     0,     0,
    1274,     0,     0,     0,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,     0,   375,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
     399,     0,   400,   401,   402,     0,     0,   403,   404,   405,
     406,   407,   408,   409,   410,     0,   411,     0,   412,   413,
       0,   414,   415,   416,     0,   417,     0,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,   430,     0,     0,     0,   431,   432,   433,   434,     0,
       0,     0,   435,     0,     0,     0,   436,     0,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,     0,     0,
       0,     0,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,     0,   462,
     463,   464,   465,   466,   467,     0,     0,   468,   469,   470,
     471,     0,   472,   473,     0,     0,   474,   475,   476,   477,
       0,   140,   478,   479,     0,   480,   481,   482,   483,     0,
       0,     0,     0,     0,   484,   485,     0,     0,     0,   486,
     487,   488,   489,     0,   490,   491,     0,   492,   493,     0,
     494,   495,     0,     0,   496,     0,     0,   497,     0,   498,
       0,   499,   500,     0,     0,     0,     0,     0,   501,     0,
     502,     0,     0,   503,     0,     0,     0,   504,     0,   505,
     506,   507,   508,     0,     0,     0,     0,     0,     0,   509,
     510,   511,     0,   512,   513,   514,   515,  1275,     0,   516,
     143,   144,     0,   145,   146,   147,   148,   149,     0,     0,
     150,   151,     0,     0,     0,   152,     0,     0,   153,     0,
     154,   155,   156,   157,   158,   159,     0,   160,     0,     0,
     948,   161,     0,     0,     0,   162,     0,     0,   163,   164,
     165,     0,   166,     0,   167,   168,     0,     0,   169,     0,
       0,   170,   171,     0,   172,   173,   174,     0,   175,     0,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,     0,   201,     0,     0,   202,     0,   203,     0,     0,
     204,     0,     0,     0,   205,   206,   207,     0,     0,   208,
       0,     0,     0,     0,   209,   210,     0,     0,     0,   949,
     211,   212,     0,   213,     0,     0,     0,   214,     0,   215,
     216,   217,   218,   219,     0,     0,     0,   220,     0,     0,
     221,   222,   223,     0,     0,     0,   224,     0,   225,   226,
       0,   227,   228,   229,   950,     0,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,     0,   238,   239,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,     0,   252,
     253,     0,   254,     0,   255,     0,   256,     0,   257,   258,
     259,   260,     0,   261,     0,   262,     0,     0,     0,   263,
     264,     0,   265,     0,     0,   266,   267,     0,     0,     0,
     268,   269,   270,   271,     0,     0,   272,   273,   274,     0,
       0,   275,     0,     0,     0,     0,   276,   277,     0,     0,
       0,   278,     0,     0,     0,   279,   280,     0,   281,   282,
       0,     0,     0,   283,     0,   284,     0,     0,   285,   286,
       0,     0,   287,     0,     0,   288,   289,   660,     0,     0,
       0,     0,   290,   291,     0,   292,     0,   293,     0,   294,
     295,     0,     0,     0,     0,     0,     0,     0,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,     0,   317,   318,   319,   320,     0,   321,   322,     0,
       0,     0,     0,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,   331,     0,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,   349,   350,     0,     0,     0,   351,     0,   352,   353,
       0,   354,   355,   356,     0,     0,   357,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,     0,   375,   376,   377,
       0,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,     0,     0,   387,     0,     0,     0,   388,   389,
     390,   391,   392,     0,     0,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,   401,   402,     0,     0,   403,
     404,   405,   406,   407,   408,   409,   410,     0,   411,     0,
     412,   413,     0,   414,   415,   416,     0,   417,     0,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,   430,     0,     0,     0,   431,   432,   433,
     434,     0,     0,   951,   435,     0,     0,     0,   436,     0,
     437,   438,   439,   440,     0,   441,   442,   443,   444,   445,
       0,     0,     0,     0,     0,   446,   447,   448,     0,   449,
     450,     0,   451,     0,     0,   452,     0,   453,     0,   454,
     455,   456,   457,   458,   459,     0,     0,   460,   461,     0,
       0,   462,   463,   464,   465,   466,   467,     0,     0,   468,
     469,   470,   471,     0,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   140,   478,   479,     0,   480,   481,   482,
     483,     0,     0,     0,     0,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,     0,   490,   491,     0,   492,
     493,     0,   494,   495,     0,     0,   496,     0,     0,   497,
       0,   498,     0,   499,   500,     0,     0,     0,     0,     0,
     501,     0,   502,     0,     0,   503,     0,     0,     0,   504,
       0,   505,   506,   507,   508,     0,     0,     0,     0,     0,
       0,   509,   510,   511,     0,   512,   513,   514,   515,   143,
     144,   516,   145,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,   966,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,     0,     0,     0,   967,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,   263,   264,
       0,   265,     0,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,   660,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
       0,   317,   318,   319,   320,     0,   321,   322,     0,     0,
       0,     0,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,   331,     0,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
     349,   350,     0,     0,     0,   351,     0,   352,   353,     0,
     354,   355,   356,     0,     0,   357,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,     0,   374,     0,   375,   376,   377,     0,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,     0,     0,   387,     0,     0,     0,   388,   389,   390,
     391,   392,     0,     0,   393,   394,   395,   396,   397,     0,
     398,   399,     0,   400,   401,   402,     0,     0,   403,   404,
     405,   406,   407,   408,   409,   410,     0,   411,     0,   412,
     413,     0,   414,   415,   416,     0,   417,     0,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,   430,     0,     0,     0,   431,   432,   433,   434,
       0,     0,     0,   435,     0,     0,     0,   436,     0,   437,
     438,   439,   440,     0,   441,   442,   443,   444,   445,     0,
       0,     0,     0,     0,   446,   447,   448,     0,   449,   450,
       0,   451,     0,     0,   452,     0,   453,     0,   454,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,     0,
     462,   463,   464,   465,   466,   467,     0,     0,   468,   469,
     470,   471,     0,   472,   473,     0,     0,   474,   475,   476,
     477,     0,   140,   478,   479,     0,   480,   481,   482,   483,
       0,     0,     0,     0,     0,   484,   485,     0,     0,     0,
     486,   487,   488,   489,     0,   490,   491,     0,   492,   493,
       0,   494,   495,     0,     0,   496,     0,     0,   497,     0,
     498,     0,   499,   500,     0,     0,     0,     0,     0,   501,
       0,   502,     0,     0,   503,     0,     0,     0,   504,     0,
     505,   506,   507,   508,     0,     0,     0,     0,     0,     0,
     509,   510,   511,     0,   512,   513,   514,   515,   143,   144,
     516,   145,   146,   147,   148,   149,     0,     0,   150,   151,
       0,     0,     0,   152,     0,     0,   153,     0,   154,   155,
     156,   157,   158,   159,     0,   160,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,     0,     0,   170,
     171,     0,   172,   173,   174,     0,   175,     0,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,   210,     0,     0,     0,     0,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,     0,   238,   239,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,     0,   252,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   258,   259,   260,
       0,   261,     0,   262,     0,     0,     0,   263,   264,     0,
     265,     0,     0,   266,   267,     0,     0,     0,   268,   269,
     270,   271,     0,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,     0,   276,   277,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,     0,
     287,     0,     0,   288,   289,     0,     0,     0,     0,     0,
     290,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,  2097,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,     0,
     317,   318,   319,   320,     0,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,   331,     0,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,   349,
     350,     0,     0,  2098,   351,     0,   352,   353,     0,   354,
     355,   356,     0,     0,   357,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   358,   359,   360,   791,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,     0,   375,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
     399,     0,   400,   401,   402,     0,     0,   403,   404,   405,
     406,   407,   408,   409,   410,     0,   411,     0,   412,   413,
       0,   414,   415,   416,     0,   417,     0,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,   430,     0,     0,     0,   431,   432,   433,   434,     0,
       0,     0,   435,     0,     0,     0,   436,     0,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,     0,     0,
       0,     0,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,     0,   462,
     463,   464,   465,   466,   467,     0,     0,   468,   469,   470,
     471,     0,   472,   473,     0,     0,   474,   475,   476,   477,
       0,     0,   478,   479,     0,   480,   481,   482,   483,     0,
       0,     0,     0,     0,   484,   485,     0,     0,     0,   486,
     487,   488,   489,  2099,   490,   491,     0,   492,   493,     0,
     494,   495,     0,     0,   496,     0,     0,   497,     0,   498,
       0,   499,   500,     0,     0,     0,     0,     0,   501,     0,
     502,     0,     0,   503,     0,     0,     0,   504,     0,   505,
     506,   507,   508,     0,     0,     0,     0,     0,     0,   509,
     510,   511,     0,   512,   513,   514,   515,   143,   144,   516,
     145,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,     0,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,   948,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   174,     0,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,   949,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,   660,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,     0,   317,
     318,   319,   320,     0,   321,   322,     0,     0,     0,     0,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,   331,     0,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,   349,   350,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,     0,   357,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,     0,   375,   376,   377,     0,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,     0,
       0,   387,     0,     0,     0,   388,   389,   390,   391,   392,
       0,     0,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,   401,   402,     0,     0,   403,   404,   405,   406,
     407,   408,   409,   410,     0,   411,     0,   412,   413,     0,
     414,   415,   416,     0,   417,     0,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
     430,     0,     0,     0,   431,   432,   433,   434,     0,     0,
       0,   435,     0,     0,     0,   436,     0,   437,   438,   439,
     440,     0,   441,   442,   443,   444,   445,     0,     0,     0,
       0,     0,   446,   447,   448,     0,   449,   450,     0,   451,
       0,     0,   452,     0,   453,     0,   454,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,     0,   462,   463,
     464,   465,   466,   467,     0,     0,   468,   469,   470,   471,
       0,   472,   473,     0,     0,   474,   475,   476,   477,     0,
     140,   478,   479,     0,   480,   481,   482,   483,     0,     0,
       0,     0,     0,   484,   485,     0,     0,     0,   486,   487,
     488,   489,     0,   490,   491,     0,   492,   493,     0,   494,
     495,     0,     0,   496,     0,     0,   497,     0,   498,     0,
     499,   500,     0,     0,     0,     0,     0,   501,     0,   502,
       0,     0,   503,     0,     0,     0,   504,     0,   505,   506,
     507,   508,     0,     0,     0,     0,     0,     0,   509,   510,
     511,     0,   512,   513,   514,   515,   143,   144,   516,   145,
     146,   147,   148,   149,     0,     0,   150,   151,     0,     0,
       0,   152,     0,     0,   153,     0,   154,   155,   156,   157,
     158,   159,     0,   160,     0,     0,     0,   161,     0,     0,
       0,   162,     0,     0,   163,   164,   165,     0,   166,     0,
     167,   168,     0,     0,   169,     0,     0,   170,   171,     0,
     172,   173,   174,     0,   175,     0,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,     0,   201,     0,
       0,   202,     0,   203,   659,     0,   204,     0,     0,     0,
     205,   206,   207,     0,     0,   208,     0,     0,     0,     0,
     209,   210,     0,     0,     0,     0,   211,   212,     0,   213,
       0,     0,     0,   214,     0,   215,   216,   217,   218,   219,
       0,     0,     0,   220,     0,     0,   221,   222,   223,     0,
       0,     0,   224,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,     0,   238,   239,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,     0,   252,   253,     0,   254,     0,
     255,     0,   256,     0,   257,   258,   259,   260,     0,   261,
       0,   262,     0,     0,     0,   263,   264,     0,   265,     0,
       0,   266,   267,     0,     0,     0,   268,   269,   270,   271,
       0,     0,   272,   273,   274,     0,     0,   275,     0,     0,
       0,     0,   276,   277,     0,     0,     0,   278,     0,     0,
       0,   279,   280,     0,   281,   282,     0,     0,     0,   283,
       0,   284,     0,     0,   285,   286,     0,     0,   287,     0,
       0,   288,   289,   660,     0,     0,     0,     0,   290,   291,
       0,   292,     0,   293,     0,   294,   295,     0,     0,     0,
       0,     0,     0,     0,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,     0,   317,   318,
     319,   320,     0,   321,   322,     0,     0,     0,     0,   323,
     324,   325,   326,   327,   328,     0,     0,   329,   330,     0,
     331,     0,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,   349,   350,     0,
       0,     0,   351,     0,   352,   353,     0,   354,   355,   356,
       0,     0,   357,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,     0,   375,   376,   377,     0,   378,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,     0,     0,
     387,     0,     0,     0,   388,   389,   390,   391,   392,     0,
       0,   393,   394,   395,   396,   397,     0,   398,   399,     0,
     400,   401,   402,     0,     0,   403,   404,   405,   406,   407,
     408,   409,   410,     0,   411,     0,   412,   413,     0,   414,
     415,   416,     0,   417,     0,     0,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,     0,   429,   430,
       0,     0,     0,   431,   432,   433,   434,     0,     0,     0,
     435,     0,     0,     0,   436,     0,   437,   438,   439,   440,
       0,   441,   442,   443,   444,   445,     0,     0,     0,     0,
       0,   446,   447,   448,     0,   449,   450,     0,   451,     0,
       0,   452,     0,   453,     0,   454,   455,   456,   457,   458,
     459,     0,     0,   460,   461,     0,     0,   462,   463,   464,
     465,   466,   467,     0,     0,   468,   469,   470,   471,     0,
     472,   473,     0,     0,   474,   475,   476,   477,     0,   140,
     478,   479,     0,   480,   481,   482,   483,     0,     0,     0,
       0,     0,   484,   485,     0,     0,     0,   486,   487,   488,
     489,     0,   490,   491,     0,   492,   493,     0,   494,   495,
       0,     0,   496,     0,     0,   497,     0,   498,     0,   661,
     500,     0,     0,     0,     0,     0,   501,     0,   502,     0,
       0,   503,     0,     0,     0,   504,     0,   505,   506,   507,
     508,     0,     0,     0,     0,     0,     0,   509,   510,   511,
       0,   512,   513,   514,   515,   143,   144,   516,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,   659,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,   660,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,     0,   317,   318,   319,
     320,     0,   321,   322,     0,     0,     0,     0,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,   331,
       0,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,   349,   350,     0,     0,
       0,   351,     0,   352,   353,     0,   354,   355,   356,     0,
       0,   357,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
     374,     0,   375,   376,   377,     0,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,     0,     0,   387,
       0,     0,     0,   388,   389,   390,   391,   392,     0,     0,
     393,   394,   395,   396,   397,     0,   398,   399,     0,   400,
     401,   402,     0,     0,   403,   404,   405,   406,   407,   408,
     409,   410,     0,   411,     0,   412,   413,     0,   414,   415,
     416,     0,   417,     0,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,   430,     0,
       0,     0,   431,   432,   433,   434,     0,     0,     0,   435,
       0,     0,     0,   436,     0,   437,   438,   439,   440,     0,
     441,   442,   443,   444,   445,     0,     0,     0,     0,     0,
     446,   447,   448,     0,   449,   450,     0,   451,     0,     0,
     452,     0,   453,     0,   454,   455,   456,   457,   458,   459,
       0,     0,   460,   461,     0,     0,   462,   463,   464,   465,
     466,   467,     0,     0,   468,   469,   470,   471,     0,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   140,   478,
     479,     0,   480,   481,   482,   483,     0,     0,     0,     0,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
       0,   490,   491,     0,   492,   493,     0,   494,   495,     0,
       0,   496,     0,     0,   497,     0,   498,     0,   499,   500,
       0,     0,     0,     0,     0,   501,     0,   502,     0,     0,
     503,     0,     0,     0,   504,     0,   505,   506,   507,   508,
       0,     0,     0,     0,     0,     0,   509,   510,   511,     0,
     512,   513,   514,   515,   143,   144,   516,   145,   146,   147,
     148,   149,  1517,     0,   150,   151,     0,     0,     0,   152,
       0,     0,   153,     0,   154,   155,   156,   157,   158,   159,
       0,   160,     0,     0,     0,   161,     0,     0,     0,   162,
       0,     0,   163,   164,   165,     0,   166,     0,   167,   168,
       0,     0,   169,     0,     0,   170,   171,     0,   172,   173,
     174,     0,   175,     0,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,     0,   201,     0,     0,   202,
       0,   203,     0,     0,   204,     0,     0,     0,   205,   206,
     207,     0,     0,   208,     0,     0,     0,     0,   209,   210,
       0,     0,     0,     0,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,   220,     0,     0,   221,   222,   223,     0,     0,     0,
     224,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
       0,   238,   239,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,     0,   252,   253,     0,   254,     0,   255,     0,
     256,     0,   257,   258,   259,   260,     0,   261,     0,   262,
       0,     0,     0,   263,   264,     0,   265,     0,     0,   266,
     267,     0,     0,     0,   268,   269,   270,   271,     0,     0,
     272,   273,   274,     0,     0,   275,     0,     0,     0,     0,
     276,   277,     0,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,     0,     0,     0,   283,     0,   284,
       0,     0,   285,   286,     0,     0,   287,     0,     0,   288,
     289,   660,     0,     0,     0,     0,   290,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,     0,     0,     0,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,     0,   317,   318,   319,   320,
       0,   321,   322,     0,     0,     0,     0,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,   331,     0,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,   349,   350,     0,     0,     0,
     351,     0,   352,   353,     0,   354,   355,   356,     0,     0,
     357,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
       0,   375,   376,   377,     0,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,     0,     0,   387,     0,
       0,     0,   388,   389,   390,   391,   392,     0,     0,   393,
     394,   395,   396,   397,     0,   398,   399,     0,   400,   401,
     402,     0,     0,   403,   404,   405,   406,   407,   408,   409,
     410,     0,   411,     0,   412,   413,     0,   414,   415,   416,
       0,   417,     0,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,   430,     0,     0,
       0,   431,   432,   433,   434,     0,     0,     0,   435,     0,
       0,     0,   436,     0,   437,   438,   439,   440,     0,   441,
     442,   443,   444,   445,     0,     0,     0,     0,     0,   446,
     447,   448,     0,   449,   450,     0,   451,     0,     0,   452,
       0,   453,     0,   454,   455,   456,   457,   458,   459,     0,
       0,   460,   461,     0,     0,   462,   463,   464,   465,   466,
     467,     0,     0,   468,   469,   470,   471,     0,   472,   473,
       0,     0,   474,   475,   476,   477,     0,   140,   478,   479,
       0,   480,   481,   482,   483,     0,     0,     0,     0,     0,
     484,   485,     0,     0,     0,   486,   487,   488,   489,     0,
     490,   491,     0,   492,   493,     0,   494,   495,     0,     0,
     496,     0,     0,   497,     0,   498,     0,   499,   500,     0,
       0,     0,     0,     0,   501,     0,   502,     0,     0,   503,
       0,     0,     0,   504,     0,   505,   506,   507,   508,     0,
       0,     0,     0,     0,     0,   509,   510,   511,     0,   512,
     513,   514,   515,   143,   144,   516,   145,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
       0,   153,     0,   154,   155,   156,   157,   158,   159,     0,
     160,     0,     0,     0,   161,  1032,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,   174,
       0,   175,     0,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,   210,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,     0,   252,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,   263,   264,     0,   265,  1033,     0,   266,   267,
       0,     0,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
     277,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,     0,   317,   318,   319,   320,     0,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,   331,     0,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,   349,   350,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,   356,     0,     0,   357,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,     0,   374,     0,
     375,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,   399,     0,   400,   401,   402,
       0,     0,   403,   404,   405,   406,   407,   408,   409,   410,
       0,   411,     0,   412,   413,     0,   414,   415,   416,     0,
     417,     0,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,   430,     0,     0,     0,
     431,   432,   433,   434,     0,     0,     0,   435,     0,     0,
       0,   436,     0,   437,   438,   439,   440,     0,   441,   442,
     443,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,     0,   462,   463,   464,   465,   466,   467,
       0,     0,   468,   469,   470,   471,     0,   472,   473,     0,
       0,   474,   475,   476,   477,     0,  1034,   478,   479,     0,
     480,   481,   482,   483,     0,     0,     0,     0,     0,   484,
     485,     0,     0,     0,   486,   487,   488,   489,     0,   490,
     491,     0,   492,   493,     0,   494,   495,     0,     0,   496,
       0,     0,   497,     0,   498,     0,   499,   500,     0,     0,
       0,     0,     0,   501,     0,   502,     0,     0,   503,     0,
       0,     0,   504,     0,   505,   506,   507,   508,     0,     0,
       0,     0,     0,     0,   509,   510,   511,     0,   512,   513,
     514,   515,   143,   144,   516,   145,   146,   147,   148,   149,
       0,     0,   150,   151,     0,     0,     0,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,  2112,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,   660,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,     0,   317,   318,   319,   320,     0,   321,
     322,     0,     0,     0,     0,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,   331,     0,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,   349,   350,     0,     0,     0,   351,     0,
     352,   353,     0,   354,   355,   356,     0,     0,   357,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,     0,   375,
     376,   377,     0,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,     0,     0,   387,     0,     0,     0,
     388,   389,   390,   391,   392,     0,     0,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,   401,   402,     0,
       0,   403,   404,   405,   406,   407,   408,   409,   410,     0,
     411,     0,   412,   413,     0,   414,   415,   416,     0,   417,
       0,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,   430,     0,     0,     0,   431,
     432,   433,   434,     0,     0,     0,   435,     0,     0,     0,
     436,     0,   437,   438,   439,   440,     0,   441,   442,   443,
     444,   445,     0,     0,     0,     0,     0,   446,   447,   448,
       0,   449,   450,     0,   451,     0,     0,   452,     0,   453,
       0,   454,   455,   456,   457,   458,   459,     0,     0,   460,
     461,     0,     0,   462,   463,   464,   465,   466,   467,     0,
       0,   468,   469,   470,   471,     0,   472,   473,     0,     0,
     474,   475,   476,   477,     0,   140,   478,   479,     0,   480,
     481,   482,   483,     0,     0,     0,     0,     0,   484,   485,
       0,     0,     0,   486,   487,   488,   489,     0,   490,   491,
       0,   492,   493,     0,   494,   495,     0,     0,   496,     0,
       0,   497,     0,   498,     0,   499,   500,     0,     0,     0,
       0,     0,   501,     0,   502,     0,     0,   503,     0,     0,
       0,   504,     0,   505,   506,   507,   508,     0,     0,     0,
       0,     0,     0,   509,   510,   511,     0,   512,   513,   514,
     515,   143,   144,   516,   145,   146,   147,   148,   149,     0,
       0,   150,   151,     0,     0,     0,   152,     0,     0,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,   948,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,   660,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,   349,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,     0,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,     0,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   417,     0,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,   140,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,   486,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
     143,   144,   516,   145,   146,   147,   148,   149,     0,     0,
     150,   151,     0,     0,     0,   152,     0,     0,   153,     0,
     154,   155,   156,   157,   158,   159,     0,   160,     0,     0,
       0,   161,     0,     0,     0,   162,     0,     0,   163,   164,
     165,     0,   166,     0,   167,   168,     0,     0,   169,     0,
       0,   170,   171,     0,   172,   173,   174,     0,   175,     0,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,     0,   201,     0,     0,   202,     0,   203,     0,     0,
     204,     0,     0,     0,   205,   206,   207,     0,     0,   208,
       0,     0,     0,     0,   209,   210,     0,     0,     0,     0,
     211,   212,     0,   213,     0,     0,     0,   214,     0,   215,
     216,   217,   218,   219,     0,     0,     0,   220,     0,     0,
     221,   222,   223,     0,     0,     0,   224,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,     0,   238,   239,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,     0,   252,
     253,     0,   254,     0,   255,     0,   256,     0,   257,   258,
     259,   260,     0,   261,     0,   262,     0,     0,     0,   263,
     264,     0,   265,     0,     0,   266,   267,     0,     0,     0,
     268,   269,   270,   271,     0,     0,   272,   273,   274,     0,
       0,   275,     0,     0,     0,     0,   276,   277,     0,     0,
       0,   278,     0,     0,     0,   279,   280,     0,   281,   282,
       0,     0,     0,   283,     0,   284,     0,     0,   285,   286,
       0,     0,   287,     0,     0,   288,   289,   660,     0,     0,
       0,     0,   290,   291,     0,   292,     0,   293,     0,   294,
     295,     0,     0,     0,     0,     0,     0,     0,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,     0,   317,   318,   319,   320,     0,   321,   322,     0,
       0,     0,     0,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,   331,     0,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,   349,   350,     0,     0,     0,   351,     0,   352,   353,
       0,   354,   355,   356,     0,     0,   357,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,     0,   375,   376,   377,
       0,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,     0,     0,   387,     0,     0,     0,   388,   389,
     390,   391,   392,     0,     0,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,   401,   402,     0,     0,   403,
     404,   405,   406,   407,   408,   409,   410,     0,   411,     0,
     412,   413,     0,   414,   415,   416,     0,   417,     0,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,   430,     0,     0,     0,   431,   432,   433,
     434,     0,     0,     0,   435,     0,     0,     0,   436,     0,
     437,   438,   439,   440,     0,   441,   442,   443,   444,   445,
       0,     0,     0,     0,     0,   446,   447,   448,     0,   449,
     450,     0,   451,     0,     0,   452,     0,   453,     0,   454,
     455,   456,   457,   458,   459,     0,     0,   460,   461,     0,
       0,   462,   463,   464,   465,   466,   467,     0,     0,   468,
     469,   470,   471,     0,   472,   473,     0,     0,   474,   475,
     476,   477,     0,   140,   478,   479,     0,   480,   481,   482,
     483,     0,     0,     0,     0,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,     0,   490,   491,     0,   492,
     493,     0,   494,   495,     0,     0,   496,     0,     0,   497,
       0,   498,     0,   499,   500,     0,     0,     0,     0,     0,
     501,     0,   502,     0,     0,   503,     0,     0,     0,   504,
       0,   505,   506,   507,   508,     0,     0,     0,     0,     0,
       0,   509,   510,   511,     0,   512,   513,   514,   515,   143,
     144,   516,   145,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   199,   200,  4538,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,     0,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,  4539,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,   263,   264,
       0,   265,     0,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
       0,   317,   318,   319,   320,     0,   321,   322,     0,     0,
       0,     0,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,   331,     0,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
     349,   350,     0,     0,     0,   351,     0,   352,   353,     0,
     354,   355,   356,     0,     0,   357,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,     0,   374,     0,   375,   376,   377,     0,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,     0,     0,   387,     0,     0,     0,   388,   389,   390,
     391,   392,     0,     0,   393,   394,   395,   396,   397,     0,
     398,   399,     0,   400,   401,   402,     0,     0,   403,   404,
     405,   406,   407,   408,   409,   410,     0,   411,     0,   412,
     413,     0,   414,   415,   416,     0,   417,     0,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,   430,     0,     0,     0,   431,   432,   433,   434,
       0,     0,     0,   435,     0,     0,     0,   436,     0,   437,
     438,   439,   440,     0,   441,   442,   443,   444,   445,     0,
       0,     0,     0,     0,   446,   447,   448,     0,   449,   450,
       0,   451,     0,     0,   452,     0,   453,     0,   454,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,     0,
     462,   463,   464,   465,   466,   467,     0,     0,   468,   469,
     470,   471,     0,   472,   473,     0,     0,   474,   475,   476,
     477,     0,     0,   478,   479,     0,   480,   481,   482,   483,
       0,     0,     0,     0,     0,   484,   485,     0,     0,     0,
     486,   487,   488,   489,     0,   490,   491,     0,   492,   493,
       0,   494,   495,     0,     0,   496,     0,     0,   497,     0,
     498,     0,   499,   500,     0,     0,     0,     0,     0,   501,
       0,   502,     0,     0,   503,     0,     0,     0,   504,     0,
     505,   506,   507,   508,     0,     0,     0,     0,     0,     0,
     509,   510,   511,     0,   512,   513,   514,   515,   143,   144,
     516,   145,   146,   147,   148,   149,     0,     0,   150,   151,
       0,     0,     0,   152,     0,     0,   153,     0,   154,   155,
     156,   157,   158,   159,     0,   160,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,     0,     0,   170,
     171,     0,   172,   173,   174,     0,   175,     0,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,   210,     0,     0,     0,     0,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,     0,   238,   239,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,     0,   252,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   258,   259,   260,
       0,   261,     0,   262,     0,     0,     0,   263,   264,     0,
     265,     0,     0,   266,   267,     0,     0,     0,   268,   269,
     270,   271,     0,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,     0,   276,   277,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,     0,
     287,     0,     0,   288,   289,     0,     0,     0,     0,     0,
     290,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,     0,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,     0,
     317,   318,   319,   320,     0,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,   331,     0,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,   349,
     350,     0,     0,     0,   351,     0,   352,   353,     0,   354,
     355,   356,     0,     0,   357,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,     0,   375,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
     399,     0,   400,   401,   402,     0,     0,   403,   404,   405,
     406,   407,   408,   409,   410,     0,   411,     0,   412,   413,
       0,   414,   415,   416,     0,   417,     0,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,   430,     0,     0,     0,   431,   432,   433,   434,     0,
       0,     0,   435,     0,     0,     0,   436,     0,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,     0,     0,
       0,   604,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,     0,   462,
     463,   464,   465,   466,   467,     0,     0,   468,   469,   470,
     471,     0,   472,   473,     0,     0,   474,   475,   476,   477,
       0,     0,   478,   479,     0,   480,   481,   482,   483,     0,
       0,     0,     0,     0,   484,   485,     0,     0,     0,   486,
     487,   488,   489,     0,   490,   491,     0,   492,   493,     0,
     494,   495,     0,     0,   496,     0,     0,   497,     0,   498,
       0,   499,   500,     0,     0,     0,     0,     0,   501,     0,
     502,     0,     0,   503,     0,     0,     0,   504,     0,   505,
     506,   507,   508,     0,     0,     0,     0,     0,     0,   509,
     510,   511,     0,   512,   513,   514,   515,   143,   144,   516,
     145,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,     0,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   174,     0,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,     0,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,   727,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,     0,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,     0,   317,
     318,   319,   320,     0,   321,   322,     0,     0,     0,     0,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,   331,     0,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,   349,   350,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,     0,   357,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,     0,   375,   376,   377,     0,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,     0,
       0,   387,     0,     0,     0,   388,   389,   390,   391,   392,
       0,     0,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,   401,   402,     0,     0,   403,   404,   405,   406,
     407,   408,   409,   410,     0,   411,     0,   412,   413,     0,
     414,   415,   416,     0,   417,     0,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
     430,     0,     0,     0,   431,   432,   433,   434,     0,     0,
       0,   435,     0,     0,     0,   436,     0,   437,   438,   439,
     440,     0,   441,   442,   443,   444,   445,     0,     0,     0,
       0,     0,   446,   447,   448,     0,   449,   450,     0,   451,
       0,     0,   452,     0,   453,     0,   454,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,     0,   462,   463,
     464,   465,   466,   467,     0,     0,   468,   469,   470,   471,
       0,   472,   473,     0,     0,   474,   475,   476,   477,     0,
       0,   478,   479,     0,   480,   481,   482,   483,     0,     0,
       0,     0,     0,   484,   485,     0,     0,     0,   486,   487,
     488,   489,     0,   490,   491,     0,   492,   493,     0,   494,
     495,     0,     0,   496,     0,     0,   497,     0,   498,     0,
     499,   500,     0,     0,     0,     0,     0,   501,     0,   502,
       0,     0,   503,     0,     0,     0,   504,     0,   505,   506,
     507,   508,     0,     0,     0,     0,     0,     0,   509,   510,
     511,     0,   512,   513,   514,   515,   143,   144,   516,   145,
     146,   147,   148,   149,     0,     0,   150,   151,     0,     0,
       0,   152,     0,     0,   153,     0,   154,   155,   156,   157,
     158,   159,     0,   160,     0,     0,     0,   161,     0,     0,
       0,   162,     0,     0,   163,   164,   165,     0,   166,     0,
     167,   168,     0,     0,   169,     0,     0,   170,   171,     0,
     172,   173,   174,     0,   175,     0,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,     0,   201,     0,
       0,   202,     0,   203,     0,     0,   204,     0,     0,     0,
     205,   206,   207,     0,     0,   208,     0,     0,     0,     0,
     209,   210,     0,     0,     0,   617,   211,   212,     0,   213,
       0,     0,     0,   214,     0,   215,   216,   217,   218,   219,
       0,     0,     0,   220,     0,     0,   221,   222,   223,     0,
       0,     0,   224,     0,   225,   226,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,   235,   236,
     237,     0,     0,   238,   239,   240,   241,   242,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,     0,   252,   253,     0,   254,     0,
     255,     0,   256,     0,   257,   258,   259,   260,     0,   261,
       0,   262,     0,     0,     0,   263,   264,     0,   265,     0,
       0,   266,   267,     0,     0,     0,   268,   269,   270,   271,
       0,     0,   272,   273,   274,     0,     0,   275,     0,     0,
       0,     0,   276,   277,     0,     0,     0,   278,     0,     0,
       0,   279,   280,     0,   281,   282,     0,     0,     0,   283,
       0,   284,     0,     0,   285,   286,     0,     0,   287,     0,
       0,   288,   289,     0,     0,     0,     0,     0,   290,   291,
       0,   292,     0,   293,     0,   294,   295,     0,     0,     0,
       0,     0,     0,     0,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,     0,   317,   318,
     319,   320,     0,   321,   322,     0,     0,     0,     0,   323,
     324,   325,   326,   327,   328,     0,     0,   329,   330,     0,
     331,     0,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,   349,   350,     0,
       0,     0,   351,     0,   352,   353,     0,   354,   355,   356,
       0,     0,   357,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,     0,   375,   376,   377,     0,   378,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,     0,     0,
     387,     0,     0,     0,   388,   389,   390,   391,   392,     0,
       0,   393,   394,   395,   396,   397,     0,   398,   399,     0,
     400,   401,   402,     0,     0,   403,   404,   405,   406,   407,
     408,   409,   410,     0,   411,     0,   412,   413,     0,   414,
     415,   416,     0,   417,     0,     0,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,     0,   429,   430,
       0,     0,     0,   431,   432,   433,   434,     0,     0,     0,
     435,     0,     0,     0,   436,     0,   437,   438,   439,   440,
       0,   441,   442,   443,   444,   445,     0,     0,     0,     0,
       0,   446,   447,   448,     0,   449,   450,     0,   451,     0,
       0,   452,     0,   453,     0,   454,   455,   456,   457,   458,
     459,     0,     0,   460,   461,     0,     0,   462,   463,   464,
     465,   466,   467,     0,     0,   468,   469,   470,   471,     0,
     472,   473,     0,     0,   474,   475,   476,   477,     0,     0,
     478,   479,     0,   480,   481,   482,   483,     0,     0,     0,
       0,     0,   972,   485,     0,     0,     0,   486,   487,   488,
     489,     0,   490,   491,     0,   492,   493,     0,   494,   495,
       0,     0,   496,     0,     0,   497,     0,   498,     0,   499,
     500,     0,     0,     0,     0,     0,   501,     0,   502,     0,
       0,   503,     0,     0,     0,   504,     0,   505,   506,   507,
     508,     0,     0,     0,     0,     0,     0,   509,   510,   511,
       0,   512,   513,   514,   515,   143,   144,   516,   145,   146,
     147,   148,   149,     0,     0,   150,   151,     0,     0,     0,
     152,     0,     0,   153,     0,   154,   155,   156,   157,   158,
     159,     0,   160,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,   167,
     168,     0,     0,   169,     0,     0,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
     210,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,   220,     0,     0,   221,   222,   223,     0,     0,
       0,   224,     0,   225,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,   237,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,     0,   252,   253,     0,   254,     0,   255,
       0,   256,     0,   257,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,   263,   264,     0,   265,     0,     0,
     266,   267,     0,     0,     0,   268,   269,   270,   271,     0,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,   277,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,     0,     0,     0,   283,     0,
     284,     0,     0,   285,   286,     0,     0,   287,     0,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
       0,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,     0,   317,   318,   319,
     320,     0,   321,   322,     0,     0,     0,     0,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,   331,
       0,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,   349,   350,     0,     0,
       0,   351,     0,   352,   353,     0,   354,   355,   356,     0,
       0,   357,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
     374,     0,   375,   376,   377,     0,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,     0,     0,   387,
       0,     0,     0,   388,   389,   390,   391,   392,     0,     0,
     393,   394,   395,   396,   397,     0,   398,   399,     0,   400,
     401,   402,     0,     0,   403,   404,   405,   406,   407,   408,
     409,   410,     0,   411,     0,   412,   413,     0,   414,   415,
     416,     0,   417,     0,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,   429,   430,     0,
       0,     0,   431,   432,   433,   434,     0,     0,     0,   435,
       0,     0,     0,   436,     0,   437,   438,   439,   440,     0,
     441,   442,   443,   444,   445,     0,     0,     0,     0,     0,
     446,   447,   448,     0,   449,   450,     0,   451,     0,     0,
     452,     0,   453,     0,   454,   455,   456,   457,   458,   459,
       0,     0,   460,   461,     0,     0,   462,   463,   464,   465,
     466,   467,     0,     0,   468,   469,   470,   471,     0,   472,
     473,     0,     0,   474,   475,   476,   477,     0,   140,   478,
     479,     0,   480,   481,   482,   483,     0,     0,     0,     0,
       0,   484,   485,     0,     0,     0,   486,   487,   488,   489,
       0,   490,   491,     0,   492,   493,     0,   494,   495,     0,
       0,   496,     0,     0,   497,     0,   498,     0,   499,   500,
       0,     0,     0,     0,     0,   501,     0,   502,     0,     0,
     503,     0,     0,     0,   504,     0,   505,   506,   507,   508,
       0,     0,     0,     0,     0,     0,   509,   510,   511,     0,
     512,   513,   514,   515,   143,   144,   516,   145,   146,   147,
     148,   149,     0,     0,   150,   151,     0,     0,     0,   152,
       0,     0,   153,     0,   154,   155,   156,   157,   158,   159,
       0,   160,     0,     0,     0,   161,     0,     0,     0,   162,
       0,     0,   163,   164,   165,     0,   166,     0,   167,   168,
       0,     0,   169,     0,     0,   170,   171,     0,   172,   173,
     174,     0,   175,     0,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,     0,   201,     0,     0,   202,
       0,   203,     0,     0,   204,     0,     0,     0,   205,   206,
     207,     0,     0,   208,     0,     0,     0,     0,   209,   210,
       0,     0,     0,   617,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,   220,     0,     0,   221,   222,   223,     0,     0,     0,
     224,     0,   225,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,   237,     0,
       0,   238,   239,   240,   241,   242,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,     0,   252,   253,     0,   254,     0,   255,     0,
     256,     0,   257,   258,   259,   260,     0,   261,     0,   262,
       0,     0,     0,   263,   264,     0,   265,     0,     0,   266,
     267,     0,     0,     0,   268,   269,   270,   271,     0,     0,
     272,   273,   274,     0,     0,   275,     0,     0,     0,     0,
     276,   277,     0,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,     0,     0,     0,   283,     0,   284,
       0,     0,   285,   286,     0,     0,   287,     0,     0,   288,
     289,     0,     0,     0,     0,     0,   290,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,     0,     0,     0,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,     0,   317,   318,   319,   320,
       0,   321,   322,     0,     0,     0,     0,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,   331,     0,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,   349,   350,     0,     0,     0,
     351,     0,   352,   353,     0,   354,   355,   356,     0,     0,
     357,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
       0,   375,   376,   377,     0,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,     0,     0,   387,     0,
       0,     0,   388,   389,   390,   391,   392,     0,     0,   393,
     394,   395,   396,   397,     0,   398,   399,     0,   400,   401,
     402,     0,     0,   403,   404,   405,   406,   407,   408,   409,
     410,     0,   411,     0,   412,   413,     0,   414,   415,   416,
       0,   417,     0,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,   429,   430,     0,     0,
       0,   431,   432,   433,   434,     0,     0,     0,   435,     0,
       0,     0,   436,     0,   437,   438,   439,   440,     0,   441,
     442,   443,   444,   445,     0,     0,     0,     0,     0,   446,
     447,   448,     0,   449,   450,     0,   451,     0,     0,   452,
       0,   453,     0,   454,   455,   456,   457,   458,   459,     0,
       0,   460,   461,     0,     0,   462,   463,   464,   465,   466,
     467,     0,     0,   468,   469,   470,   471,     0,   472,   473,
       0,     0,   474,   475,   476,   477,     0,     0,   478,   479,
       0,   480,   481,   482,   483,     0,     0,     0,     0,     0,
     484,   485,     0,     0,     0,   486,   487,   488,   489,     0,
     490,   491,     0,   492,   493,     0,   494,   495,     0,     0,
     496,     0,     0,   497,     0,   498,     0,   499,   500,     0,
       0,     0,     0,     0,   501,     0,   502,     0,     0,   503,
       0,     0,     0,   504,     0,   505,   506,   507,   508,     0,
       0,     0,     0,     0,     0,   509,   510,   511,     0,   512,
     513,   514,   515,   143,   144,   516,   145,   146,   147,   148,
     149,     0,     0,   150,   151,     0,     0,     0,   152,     0,
       0,   153,     0,   154,   155,   156,   157,   158,   159,     0,
     160,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,   167,   168,     0,
       0,   169,     0,     0,   170,   171,     0,   172,   173,   174,
       0,   175,     0,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,   210,     0,
       0,     0,  2383,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
     220,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,   225,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,   237,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,     0,   252,   253,     0,   254,     0,   255,     0,   256,
       0,   257,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,   263,   264,     0,   265,     0,     0,   266,   267,
       0,     0,     0,   268,   269,   270,   271,     0,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
     277,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,     0,     0,     0,   283,     0,   284,     0,
       0,   285,   286,     0,     0,   287,     0,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,     0,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,     0,   317,   318,   319,   320,     0,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,   331,     0,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,   349,   350,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,   356,     0,     0,   357,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,     0,   374,     0,
     375,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,   399,     0,   400,   401,   402,
       0,     0,   403,   404,   405,   406,   407,   408,   409,   410,
       0,   411,     0,   412,   413,     0,   414,   415,   416,     0,
     417,     0,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,   429,   430,     0,     0,     0,
     431,   432,   433,   434,     0,     0,     0,   435,     0,     0,
       0,   436,     0,   437,   438,   439,   440,     0,   441,   442,
     443,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,   455,   456,   457,   458,   459,     0,     0,
     460,   461,     0,     0,   462,   463,   464,   465,   466,   467,
       0,     0,   468,   469,   470,   471,     0,   472,   473,     0,
       0,   474,   475,   476,   477,     0,     0,   478,   479,     0,
     480,   481,   482,   483,     0,     0,     0,     0,     0,   484,
     485,     0,     0,     0,   486,   487,   488,   489,     0,   490,
     491,     0,   492,   493,     0,   494,   495,     0,     0,   496,
       0,     0,   497,     0,   498,     0,   499,   500,     0,     0,
       0,     0,     0,   501,     0,   502,     0,     0,   503,     0,
       0,     0,   504,     0,   505,   506,   507,   508,     0,     0,
       0,     0,     0,     0,   509,   510,   511,     0,   512,   513,
     514,   515,   143,   144,   516,   145,   146,   147,   148,   149,
       0,     0,   150,   151,     0,     0,     0,   152,     0,     0,
     153,     0,   154,   155,   156,   157,   158,   159,     0,   160,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,   167,   168,     0,     0,
     169,     0,     0,   170,   171,     0,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,   210,     0,     0,
       0,  2839,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,   220,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
     225,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,   237,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
       0,   252,   253,     0,   254,     0,   255,     0,   256,     0,
     257,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,   263,   264,     0,   265,     0,     0,   266,   267,     0,
       0,     0,   268,   269,   270,   271,     0,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,   277,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,     0,     0,     0,   283,     0,   284,     0,     0,
     285,   286,     0,     0,   287,     0,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,     0,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,     0,   317,   318,   319,   320,     0,   321,
     322,     0,     0,     0,     0,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,   331,     0,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,   349,   350,     0,     0,     0,   351,     0,
     352,   353,     0,   354,   355,   356,     0,     0,   357,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,     0,   375,
     376,   377,     0,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,     0,     0,   387,     0,     0,     0,
     388,   389,   390,   391,   392,     0,     0,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,   401,   402,     0,
       0,   403,   404,   405,   406,   407,   408,   409,   410,     0,
     411,     0,   412,   413,     0,   414,   415,   416,     0,   417,
       0,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,   429,   430,     0,     0,     0,   431,
     432,   433,   434,     0,     0,     0,   435,     0,     0,     0,
     436,     0,   437,   438,   439,   440,     0,   441,   442,   443,
     444,   445,     0,     0,     0,     0,     0,   446,   447,   448,
       0,   449,   450,     0,   451,     0,     0,   452,     0,   453,
       0,   454,   455,   456,   457,   458,   459,     0,     0,   460,
     461,     0,     0,   462,   463,   464,   465,   466,   467,     0,
       0,   468,   469,   470,   471,     0,   472,   473,     0,     0,
     474,   475,   476,   477,     0,     0,   478,   479,     0,   480,
     481,   482,   483,     0,     0,     0,     0,     0,   484,   485,
       0,     0,     0,   486,   487,   488,   489,     0,   490,   491,
       0,   492,   493,     0,   494,   495,     0,     0,   496,     0,
       0,   497,     0,   498,     0,   499,   500,     0,     0,     0,
       0,     0,   501,     0,   502,     0,     0,   503,     0,     0,
       0,   504,     0,   505,   506,   507,   508,     0,     0,     0,
       0,     0,     0,   509,   510,   511,     0,   512,   513,   514,
     515,   143,   144,   516,   145,   146,   147,   148,   149,  2847,
       0,   150,   151,     0,     0,     0,   152,     0,     0,   153,
       0,   154,   155,   156,   157,   158,   159,     0,   160,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,   167,   168,     0,     0,   169,
       0,     0,   170,   171,     0,   172,   173,   174,     0,   175,
       0,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,   210,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,   220,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,   225,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,   237,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,     0,
     252,   253,     0,   254,     0,   255,     0,   256,     0,   257,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
     263,   264,     0,   265,     0,     0,   266,   267,     0,     0,
       0,   268,   269,   270,   271,     0,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,   277,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,     0,     0,     0,   283,     0,   284,     0,     0,   285,
     286,     0,     0,   287,     0,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,     0,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,   349,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,     0,   357,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,     0,   374,     0,   375,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,   399,     0,   400,   401,   402,     0,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,   411,
       0,   412,   413,     0,   414,   415,   416,     0,   417,     0,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,   429,   430,     0,     0,     0,   431,   432,
     433,   434,     0,     0,     0,   435,     0,     0,     0,   436,
       0,   437,   438,   439,   440,     0,   441,   442,   443,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,   455,   456,   457,   458,   459,     0,     0,   460,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,     0,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,   486,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,   494,   495,     0,     0,   496,     0,     0,
     497,     0,   498,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,     0,     0,
       0,     0,   509,   510,   511,     0,   512,   513,   514,   515,
     143,   144,   516,   145,   146,   147,   148,   149,     0,     0,
     150,   151,     0,     0,     0,   152,     0,     0,   153,     0,
     154,   155,   156,   157,   158,   159,     0,   160,     0,     0,
       0,   161,     0,     0,     0,   162,     0,     0,   163,   164,
     165,     0,   166,     0,   167,   168,     0,     0,   169,     0,
       0,   170,   171,     0,   172,   173,   174,     0,   175,     0,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,     0,   201,     0,     0,   202,     0,   203,     0,     0,
     204,     0,     0,     0,   205,   206,   207,     0,     0,   208,
       0,     0,     0,     0,   209,   210,     0,     0,     0,  2875,
     211,   212,     0,   213,     0,     0,     0,   214,     0,   215,
     216,   217,   218,   219,     0,     0,     0,   220,     0,     0,
     221,   222,   223,     0,     0,     0,   224,     0,   225,   226,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,   235,   236,   237,     0,     0,   238,   239,   240,
     241,   242,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,     0,   252,
     253,     0,   254,     0,   255,     0,   256,     0,   257,   258,
     259,   260,     0,   261,     0,   262,     0,     0,     0,   263,
     264,     0,   265,     0,     0,   266,   267,     0,     0,     0,
     268,   269,   270,   271,     0,     0,   272,   273,   274,     0,
       0,   275,     0,     0,     0,     0,   276,   277,     0,     0,
       0,   278,     0,     0,     0,   279,   280,     0,   281,   282,
       0,     0,     0,   283,     0,   284,     0,     0,   285,   286,
       0,     0,   287,     0,     0,   288,   289,     0,     0,     0,
       0,     0,   290,   291,     0,   292,     0,   293,     0,   294,
     295,     0,     0,     0,     0,     0,     0,     0,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,     0,   317,   318,   319,   320,     0,   321,   322,     0,
       0,     0,     0,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,   331,     0,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,   349,   350,     0,     0,     0,   351,     0,   352,   353,
       0,   354,   355,   356,     0,     0,   357,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,     0,   375,   376,   377,
       0,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,     0,     0,   387,     0,     0,     0,   388,   389,
     390,   391,   392,     0,     0,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,   401,   402,     0,     0,   403,
     404,   405,   406,   407,   408,   409,   410,     0,   411,     0,
     412,   413,     0,   414,   415,   416,     0,   417,     0,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,   429,   430,     0,     0,     0,   431,   432,   433,
     434,     0,     0,     0,   435,     0,     0,     0,   436,     0,
     437,   438,   439,   440,     0,   441,   442,   443,   444,   445,
       0,     0,     0,     0,     0,   446,   447,   448,     0,   449,
     450,     0,   451,     0,     0,   452,     0,   453,     0,   454,
     455,   456,   457,   458,   459,     0,     0,   460,   461,     0,
       0,   462,   463,   464,   465,   466,   467,     0,     0,   468,
     469,   470,   471,     0,   472,   473,     0,     0,   474,   475,
     476,   477,     0,     0,   478,   479,     0,   480,   481,   482,
     483,     0,     0,     0,     0,     0,   484,   485,     0,     0,
       0,   486,   487,   488,   489,     0,   490,   491,     0,   492,
     493,     0,   494,   495,     0,     0,   496,     0,     0,   497,
       0,   498,     0,   499,   500,     0,     0,     0,     0,     0,
     501,     0,   502,     0,     0,   503,     0,     0,     0,   504,
       0,   505,   506,   507,   508,     0,     0,     0,     0,     0,
       0,   509,   510,   511,     0,   512,   513,   514,   515,   143,
     144,   516,   145,   146,   147,   148,   149,     0,     0,   150,
     151,     0,     0,     0,   152,     0,     0,   153,     0,   154,
     155,   156,   157,   158,   159,     0,   160,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,   167,   168,     0,     0,   169,     0,     0,
     170,   171,     0,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,   210,     0,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,   220,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,   225,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,   237,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,     0,   252,   253,
       0,   254,     0,   255,     0,   256,     0,   257,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,   263,   264,
       0,   265,     0,     0,   266,   267,     0,     0,     0,   268,
     269,   270,   271,     0,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,   277,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,     0,
       0,     0,   283,     0,   284,     0,     0,   285,   286,     0,
       0,   287,     0,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,     0,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
       0,   317,   318,   319,   320,     0,   321,   322,     0,     0,
       0,     0,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,   331,     0,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
     349,   350,     0,     0,     0,   351,     0,   352,   353,     0,
     354,   355,   356,     0,     0,   357,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,     0,   374,     0,   375,   376,   377,  2934,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,     0,     0,   387,     0,     0,     0,   388,   389,   390,
     391,   392,     0,     0,   393,   394,   395,   396,   397,     0,
     398,   399,     0,   400,   401,   402,     0,     0,   403,   404,
     405,   406,   407,   408,   409,   410,     0,   411,     0,   412,
     413,     0,   414,   415,   416,     0,   417,     0,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,   429,   430,     0,     0,     0,   431,   432,   433,   434,
       0,     0,     0,   435,     0,     0,     0,   436,     0,   437,
     438,   439,   440,     0,   441,   442,   443,   444,   445,     0,
       0,     0,     0,     0,   446,   447,   448,     0,   449,   450,
       0,   451,     0,     0,   452,     0,   453,     0,   454,   455,
     456,   457,   458,   459,     0,     0,   460,   461,     0,     0,
     462,   463,   464,   465,   466,   467,     0,     0,   468,   469,
     470,   471,     0,   472,   473,     0,     0,   474,   475,   476,
     477,     0,     0,   478,   479,     0,   480,   481,   482,   483,
       0,     0,     0,     0,     0,   484,   485,     0,     0,     0,
     486,   487,   488,   489,     0,   490,   491,     0,   492,   493,
       0,   494,   495,     0,     0,   496,     0,     0,   497,     0,
     498,     0,   499,   500,     0,     0,     0,     0,     0,   501,
       0,   502,     0,     0,   503,     0,     0,     0,   504,     0,
     505,   506,   507,   508,     0,     0,     0,     0,     0,     0,
     509,   510,   511,     0,   512,   513,   514,   515,   143,   144,
     516,   145,   146,   147,   148,   149,     0,     0,   150,   151,
       0,     0,     0,   152,     0,     0,   153,     0,   154,   155,
     156,   157,   158,   159,     0,   160,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,   167,   168,     0,     0,   169,     0,     0,   170,
     171,     0,   172,   173,   174,     0,   175,     0,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,   210,     0,     0,     0,     0,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,   220,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,   225,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,   237,     0,     0,   238,   239,   240,   241,   242,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,     0,   252,   253,     0,
     254,     0,   255,     0,   256,     0,   257,   258,   259,   260,
       0,   261,     0,   262,     0,     0,     0,   263,   264,     0,
     265,     0,     0,   266,   267,     0,     0,     0,   268,   269,
     270,   271,     0,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,     0,   276,   277,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,     0,     0,
       0,   283,     0,   284,     0,     0,   285,   286,     0,     0,
     287,     0,     0,   288,   289,     0,     0,     0,     0,     0,
     290,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,     0,     0,     0,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,     0,
     317,   318,   319,   320,     0,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,   331,     0,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,   349,
     350,     0,     0,     0,   351,     0,   352,   353,     0,   354,
     355,   356,     0,     0,   357,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,     0,   375,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
     399,     0,   400,   401,   402,     0,     0,   403,   404,   405,
     406,   407,   408,   409,   410,     0,   411,     0,   412,   413,
       0,   414,   415,   416,     0,   417,     0,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
     429,   430,     0,     0,     0,   431,   432,   433,   434,     0,
       0,     0,   435,     0,     0,     0,   436,     0,   437,   438,
     439,   440,     0,   441,   442,   443,   444,   445,     0,     0,
       0,     0,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,   455,   456,
     457,   458,   459,     0,     0,   460,   461,     0,     0,   462,
     463,   464,   465,   466,   467,     0,     0,   468,   469,   470,
     471,     0,   472,   473,     0,     0,   474,   475,   476,   477,
       0,     0,   478,   479,     0,   480,   481,   482,   483,     0,
       0,     0,     0,     0,   484,   485,     0,     0,     0,   486,
     487,   488,   489,     0,   490,   491,     0,   492,   493,     0,
     494,   495,     0,     0,   496,     0,     0,   497,     0,   498,
       0,   499,   500,     0,     0,     0,     0,     0,   501,     0,
     502,     0,     0,   503,     0,     0,     0,   504,     0,   505,
     506,   507,   508,     0,     0,     0,     0,     0,     0,   509,
     510,   511,     0,   512,   513,   514,   515,   143,   144,   516,
     145,   146,   147,   148,   149,     0,     0,   150,   151,     0,
       0,     0,   152,     0,     0,   153,     0,   154,   155,   156,
     157,   158,   159,     0,   160,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,   167,   168,     0,     0,   169,     0,     0,   170,   171,
       0,   172,   173,   174,     0,   175,     0,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,   210,     0,     0,     0,     0,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,   220,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,   225,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,   237,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,     0,   245,   246,   247,  2045,   249,     0,
       0,   250,   251,     0,     0,     0,   252,   253,     0,   254,
       0,   255,     0,   256,     0,   257,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,   263,   264,     0,   265,
       0,     0,   266,   267,     0,     0,     0,   268,   269,   270,
     271,     0,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,   277,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,     0,     0,     0,
     283,     0,   284,     0,     0,   285,   286,     0,     0,   287,
       0,     0,   288,   289,     0,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,     0,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,     0,   317,
     318,   319,   320,     0,   321,   322,     0,     0,     0,     0,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,   331,     0,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,     0,
     344,   345,  2046,   347,   348,     0,     0,     0,   349,   350,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,     0,   357,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,     0,   375,   376,   377,     0,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,     0,
       0,   387,     0,     0,     0,   388,   389,   390,   391,   392,
       0,     0,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,   401,   402,     0,     0,   403,   404,   405,   406,
     407,   408,   409,   410,     0,   411,     0,   412,   413,     0,
     414,   415,   416,     0,   417,     0,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,     0,   429,
     430,     0,     0,     0,   431,   432,   433,   434,     0,     0,
       0,   435,     0,     0,     0,   436,     0,   437,   438,   439,
     440,     0,   441,   442,   443,   444,   445,     0,     0,     0,
       0,     0,   446,   447,   448,     0,   449,   450,     0,   451,
       0,     0,   452,     0,   453,     0,   454,   455,   456,   457,
     458,   459,     0,     0,   460,   461,     0,     0,   462,   463,
     464,   465,   466,   467,     0,     0,   468,   469,   470,   471,
       0,   472,   473,     0,     0,   474,   475,   476,   477,     0,
       0,   478,   479,     0,   480,   481,   482,   483,     0,     0,
       0,     0,     0,   484,   485,     0,     0,     0,   486,   487,
     488,   489,     0,   490,   491,     0,   492,   493,     0,   494,
     495,     0,     0,   496,     0,     0,   497,     0,   498,     0,
     499,   500,     0,     0,     0,     0,     0,   501,     0,   502,
       0,     0,   503,     0,     0,     0,   504,     0,   505,   506,
     507,   508,     0,     0,     0,     0,     0,     0,   509,   510,
     511,     0,   512,   513,   514,   515,     0,   144,   516,   145,
     146,   147,   148,   149,     0,     0,     0,   151,     0,     0,
       0,   152,     0,     0,     0,     0,   154,   155,   156,   157,
     158,     0,     0,  -402,     0,     0,     0,   161,     0,     0,
       0,   162,     0,     0,   163,   164,   165,     0,   166,     0,
       0,     0,     0,     0,   169,  4172,     0,   170,   171,     0,
     172,   173,     0,     0,     0,     0,   176,   177,   178,  4173,
     180,   181,     0,   182,   183,     0,   184,   185,     0,   187,
       0,   189,   190,   191,   192,   193,     0,   194,   195,     0,
     196,   197,   198,     0,   200,     0,     0,     0,   201,     0,
       0,   202,     0,   203,     0,     0,   204,     0,     0,     0,
     205,   206,   207,     0,     0,   208,     0,     0,     0,     0,
     209,     0,     0,     0,     0,     0,   211,   212,     0,   213,
       0,     0,     0,   214,     0,   215,   216,   217,   218,   219,
       0,     0,     0,     0,     0,     0,   221,   222,   223,     0,
    -372,  -372,   224,     0,  -372,   226,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,   235,   236,
       0,     0,     0,   238,   239,   240,   241,   242,     0,     0,
     243,   244,  4174,   245,   246,   247,   248,   249,     0,     0,
       0,     0,     0,     0,     0,     0,   253,     0,   254,     0,
     255,     0,   256,     0,     0,   258,   259,   260,     0,   261,
       0,   262,     0,     0,     0,     0,   264,     0,     0,     0,
       0,     0,   267,     0,     0,     0,   268,   269,   270,   271,
    4175,     0,   272,   273,   274,     0,     0,   275,     0,     0,
       0,     0,   276,     0,     0,     0,     0,   278,     0,     0,
       0,   279,   280,     0,   281,   282,  4176,     0,     0,   283,
       0,   284,     0,     0,     0,   286,     0,     0,   287,  4177,
       0,   288,   289,     0,     0,     0,     0,     0,   290,   291,
       0,   292,     0,   293,     0,   294,   295,     0,     0,     0,
       0,  -357,     0,     0,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,     0,   317,   318,
     319,   320,     0,   321,   322,     0,     0,     0,     0,   323,
     324,   325,   326,   327,   328,     0,     0,   329,   330,     0,
     331,     0,   332,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,   350,     0,
       0,     0,   351,     0,   352,   353,     0,   354,   355,  4178,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   359,   360,     0,     0,     0,   363,     0,
     364,   365,   366,   367,   368,   369,   370,   371,   372,     0,
       0,     0,     0,     0,   376,   377,     0,   378,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,     0,     0,
     387,     0,     0,     0,   388,   389,   390,   391,   392,     0,
       0,   393,   394,   395,   396,   397,     0,   398,     0,     0,
     400,     0,   402,  -357,     0,   403,   404,   405,   406,   407,
     408,   409,   410,     0,     0,     0,   412,     0,     0,   414,
     415,   416,  4179,   417,     0,     0,     0,   419,   420,   421,
     422,   423,   424,   425,     0,   427,   428,     0,   429,     0,
       0,     0,     0,   431,   432,   433,     0,     0,     0,     0,
     435,     0,     0,     0,     0,     0,     0,   438,     0,   440,
       0,   441,     0,     0,   444,   445,     0,     0,     0,     0,
       0,   446,   447,   448,     0,   449,   450,     0,   451,     0,
       0,   452,     0,   453,     0,   454,     0,   456,   457,   458,
     459,     0,     0,     0,   461,     0,     0,   462,   463,   464,
     465,   466,   467,     0,     0,   468,   469,   470,   471,     0,
     472,   473,     0,     0,   474,   475,   476,   477,     0,     0,
     478,   479,     0,   480,   481,   482,   483,     0,     0,     0,
       0,     0,   484,   485,     0,     0,     0,     0,   487,   488,
     489,     0,   490,   491,     0,   492,   493,     0,     0,     0,
       0,     0,   496,     0,     0,   497,     0,     0,     0,   499,
     500,     0,     0,     0,     0,     0,   501,     0,   502,     0,
       0,   503,     0,     0,     0,   504,     0,   505,   506,   507,
     508,     0,     0,  -357,     0,     0,     0,   509,   510,     0,
       0,   512,     0,   514,   515,     0,   144,   516,   145,   146,
     147,   148,   149,     0,     0,     0,   151,     0,     0,     0,
     152,     0,     0,     0,     0,   154,   155,   156,   157,   158,
       0,     0,  -402,     0,     0,     0,   161,     0,     0,     0,
     162,     0,     0,   163,   164,   165,     0,   166,     0,     0,
       0,     0,     0,   169,  4172,     0,   170,   171,     0,   172,
     173,     0,     0,     0,     0,   176,   177,   178,  4173,   180,
     181,     0,   182,   183,     0,   184,   185,     0,   187,     0,
     189,   190,   191,   192,   193,     0,   194,   195,     0,   196,
     197,   198,     0,   200,     0,     0,     0,   201,     0,     0,
     202,     0,   203,     0,     0,   204,     0,     0,     0,   205,
     206,   207,     0,     0,   208,     0,     0,     0,     0,   209,
       0,     0,     0,     0,     0,   211,   212,     0,   213,     0,
       0,     0,   214,     0,   215,   216,   217,   218,   219,     0,
       0,     0,     0,     0,     0,   221,   222,   223,     0,  -393,
       0,   224,     0,  -393,   226,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,   235,   236,     0,
       0,     0,   238,   239,   240,   241,   242,     0,     0,   243,
     244,  4174,   245,   246,   247,   248,   249,     0,     0,     0,
       0,     0,     0,     0,     0,   253,     0,   254,     0,   255,
       0,   256,     0,     0,   258,   259,   260,     0,   261,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   267,     0,     0,     0,   268,   269,   270,   271,  4175,
       0,   272,   273,   274,     0,     0,   275,     0,     0,     0,
       0,   276,     0,     0,     0,     0,   278,     0,     0,     0,
     279,   280,     0,   281,   282,  4176,     0,     0,   283,     0,
     284,     0,     0,     0,   286,     0,     0,   287,  4177,     0,
     288,   289,     0,     0,     0,     0,     0,   290,   291,     0,
     292,     0,   293,     0,   294,   295,     0,     0,     0,     0,
    -357,     0,     0,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,     0,   317,   318,   319,
     320,     0,   321,   322,     0,     0,     0,     0,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,   331,
       0,   332,     0,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,   350,     0,     0,
       0,   351,     0,   352,   353,     0,   354,   355,  4178,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   359,   360,     0,     0,     0,   363,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,     0,
       0,     0,     0,   376,   377,     0,   378,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,     0,     0,   387,
       0,     0,     0,   388,   389,   390,   391,   392,     0,     0,
     393,   394,   395,   396,   397,     0,   398,     0,     0,   400,
       0,   402,  -357,     0,   403,   404,   405,   406,   407,   408,
     409,   410,     0,     0,     0,   412,     0,     0,   414,   415,
     416,  4179,   417,     0,     0,     0,   419,   420,   421,   422,
     423,   424,   425,     0,   427,   428,     0,   429,     0,     0,
       0,     0,   431,   432,   433,     0,     0,     0,     0,   435,
       0,     0,     0,     0,     0,     0,   438,     0,   440,     0,
     441,     0,     0,   444,   445,     0,     0,     0,     0,     0,
     446,   447,   448,     0,   449,   450,     0,   451,     0,     0,
     452,     0,   453,     0,   454,     0,   456,   457,   458,   459,
       0,     0,     0,   461,     0,     0,   462,   463,   464,   465,
     466,   467,     0,     0,   468,   469,   470,   471,     0,   472,
     473,     0,     0,   474,   475,   476,   477,     0,     0,   478,
     479,     0,   480,   481,   482,   483,     0,     0,     0,     0,
       0,   484,   485,     0,     0,     0,     0,   487,   488,   489,
       0,   490,   491,     0,   492,   493,     0,     0,     0,     0,
       0,   496,     0,     0,   497,     0,     0,     0,   499,   500,
       0,     0,     0,     0,     0,   501,     0,   502,     0,     0,
     503,     0,     0,     0,   504,     0,   505,   506,   507,   508,
    -393,     0,  -357,     0,     0,     0,   509,   510,     0,     0,
     512,     0,   514,   515,     0,   144,   516,   145,   146,   147,
     148,   149,     0,     0,     0,   151,     0,     0,     0,   152,
       0,     0,     0,     0,   154,   155,   156,   157,   158,     0,
       0,  -402,     0,     0,     0,   161,     0,     0,     0,   162,
       0,     0,   163,   164,   165,     0,   166,     0,     0,     0,
       0,     0,   169,  4172,     0,   170,   171,     0,   172,   173,
       0,     0,     0,     0,   176,   177,   178,  4173,   180,   181,
       0,   182,   183,     0,   184,   185,     0,   187,     0,   189,
     190,   191,   192,   193,     0,   194,   195,     0,   196,   197,
     198,     0,   200,     0,     0,     0,   201,     0,     0,   202,
       0,   203,     0,     0,   204,     0,     0,     0,   205,   206,
     207,     0,     0,   208,     0,     0,     0,     0,   209,     0,
       0,     0,     0,     0,   211,   212,     0,   213,     0,     0,
       0,   214,     0,   215,   216,   217,   218,   219,     0,     0,
       0,     0,     0,     0,   221,   222,   223,     0,  -390,     0,
     224,     0,  -390,   226,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,   235,   236,     0,     0,
       0,   238,   239,   240,   241,   242,     0,     0,   243,   244,
    4174,   245,   246,   247,   248,   249,     0,     0,     0,     0,
       0,     0,     0,     0,   253,     0,   254,     0,   255,     0,
     256,     0,     0,   258,   259,   260,     0,   261,     0,   262,
       0,     0,     0,     0,   264,     0,     0,     0,     0,     0,
     267,     0,     0,     0,   268,   269,   270,   271,  4175,     0,
     272,   273,   274,     0,     0,   275,     0,     0,     0,     0,
     276,     0,     0,     0,     0,   278,     0,     0,     0,   279,
     280,     0,   281,   282,  4176,     0,     0,   283,     0,   284,
       0,     0,     0,   286,     0,     0,   287,  4177,     0,   288,
     289,     0,     0,     0,     0,     0,   290,   291,     0,   292,
       0,   293,     0,   294,   295,     0,     0,     0,     0,  -357,
       0,     0,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,     0,   317,   318,   319,   320,
       0,   321,   322,     0,     0,     0,     0,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,   331,     0,
     332,     0,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,   350,     0,     0,     0,
     351,     0,   352,   353,     0,   354,   355,  4178,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   359,   360,     0,     0,     0,   363,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,     0,     0,     0,
       0,     0,   376,   377,     0,   378,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,     0,     0,   387,     0,
       0,     0,   388,   389,   390,   391,   392,     0,     0,   393,
     394,   395,   396,   397,     0,   398,     0,     0,   400,     0,
     402,  -357,     0,   403,   404,   405,   406,   407,   408,   409,
     410,     0,     0,     0,   412,     0,     0,   414,   415,   416,
    4179,   417,     0,     0,     0,   419,   420,   421,   422,   423,
     424,   425,     0,   427,   428,     0,   429,     0,     0,     0,
       0,   431,   432,   433,     0,     0,     0,     0,   435,     0,
       0,     0,     0,     0,     0,   438,     0,   440,     0,   441,
       0,     0,   444,   445,     0,     0,     0,     0,     0,   446,
     447,   448,     0,   449,   450,     0,   451,     0,     0,   452,
       0,   453,     0,   454,     0,   456,   457,   458,   459,     0,
       0,     0,   461,     0,     0,   462,   463,   464,   465,   466,
     467,     0,     0,   468,   469,   470,   471,     0,   472,   473,
       0,     0,   474,   475,   476,   477,     0,     0,   478,   479,
       0,   480,   481,   482,   483,     0,     0,     0,     0,     0,
     484,   485,     0,     0,     0,     0,   487,   488,   489,     0,
     490,   491,     0,   492,   493,     0,     0,     0,     0,     0,
     496,     0,     0,   497,     0,     0,     0,   499,   500,     0,
       0,     0,     0,     0,   501,     0,   502,     0,     0,   503,
       0,     0,     0,   504,     0,   505,   506,   507,   508,  -390,
       0,  -357,     0,     0,     0,   509,   510,     0,     0,   512,
       0,   514,   515,     0,   144,   516,   145,   146,   147,   148,
     149,     0,     0,     0,   151,     0,     0,     0,   152,     0,
       0,     0,     0,   154,   155,   156,   157,   158,     0,     0,
    -402,     0,     0,     0,   161,     0,     0,     0,   162,     0,
       0,   163,   164,   165,     0,   166,     0,     0,     0,     0,
       0,   169,  4172,     0,   170,   171,     0,   172,   173,     0,
       0,     0,     0,   176,   177,   178,  4173,   180,   181,     0,
     182,   183,     0,   184,   185,     0,   187,     0,   189,   190,
     191,   192,   193,     0,   194,   195,     0,   196,   197,   198,
       0,   200,     0,     0,     0,   201,     0,     0,   202,     0,
     203,     0,     0,   204,     0,     0,     0,   205,   206,   207,
       0,     0,   208,     0,     0,     0,     0,   209,     0,     0,
       0,     0,     0,   211,   212,     0,   213,     0,     0,     0,
     214,     0,   215,   216,   217,   218,   219,     0,     0,     0,
       0,     0,     0,   221,   222,   223,     0,     0,     0,   224,
       0,  4454,   226,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,   235,   236,     0,     0,     0,
     238,   239,   240,   241,   242,     0,     0,   243,   244,  4174,
     245,   246,   247,   248,   249,     0,     0,     0,     0,     0,
       0,     0,     0,   253,     0,   254,     0,   255,     0,   256,
       0,     0,   258,   259,   260,     0,   261,     0,   262,     0,
       0,     0,     0,   264,     0,     0,     0,     0,     0,   267,
       0,     0,     0,   268,   269,   270,   271,  4175,     0,   272,
     273,   274,     0,     0,   275,     0,     0,     0,     0,   276,
       0,     0,     0,     0,   278,     0,     0,     0,   279,   280,
       0,   281,   282,  4176,     0,     0,   283,     0,   284,     0,
       0,     0,   286,     0,     0,   287,  4177,     0,   288,   289,
       0,     0,     0,     0,     0,   290,   291,     0,   292,     0,
     293,     0,   294,   295,     0,     0,     0,     0,  -357,     0,
       0,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,     0,   317,   318,   319,   320,     0,
     321,   322,     0,     0,     0,     0,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,   331,     0,   332,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,   350,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,  4178,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     359,   360,     0,     0,     0,   363,     0,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,     0,     0,     0,
       0,   376,   377,     0,   378,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,     0,     0,   387,     0,     0,
       0,   388,   389,   390,   391,   392,     0,     0,   393,   394,
     395,   396,   397,     0,   398,     0,     0,   400,     0,   402,
    -357,     0,   403,   404,   405,   406,   407,   408,   409,   410,
       0,     0,     0,   412,     0,     0,   414,   415,   416,  4179,
     417,     0,     0,     0,   419,   420,   421,   422,   423,   424,
     425,     0,   427,   428,     0,   429,     0,     0,     0,     0,
     431,   432,   433,     0,     0,     0,     0,   435,     0,     0,
       0,     0,     0,     0,   438,     0,   440,     0,   441,     0,
       0,   444,   445,     0,     0,     0,     0,     0,   446,   447,
     448,     0,   449,   450,     0,   451,     0,     0,   452,     0,
     453,     0,   454,     0,   456,   457,   458,   459,     0,     0,
       0,   461,     0,     0,   462,   463,   464,   465,   466,   467,
       0,     0,   468,   469,   470,   471,     0,   472,   473,     0,
       0,   474,   475,   476,   477,     0,     0,   478,   479,     0,
     480,   481,   482,   483,     0,     0,     0,     0,     0,   484,
     485,     0,     0,     0,     0,   487,   488,   489,     0,   490,
     491,     0,   492,   493,     0,     0,     0,     0,     0,   496,
       0,     0,   497,     0,     0,     0,   499,   500,     0,     0,
       0,     0,     0,   501,     0,   502,     0,     0,   503,     0,
       0,     0,   504,     0,   505,   506,   507,   508,     0,     0,
    -357,     0,     0,     0,   509,   510,     0,     0,   512,     0,
     514,   515,     0,   144,   516,   145,   146,   147,   148,   149,
       0,     0,     0,   151,     0,     0,     0,   152,     0,     0,
       0,     0,   154,   155,   156,   157,   158,     0,     0,  -402,
       0,     0,     0,   161,     0,     0,     0,   162,     0,     0,
     163,   164,   165,     0,   166,     0,     0,     0,     0,     0,
     169,  4172,     0,   170,   171,     0,   172,   173,     0,     0,
       0,     0,   176,   177,   178,  4173,   180,   181,     0,   182,
     183,     0,   184,   185,     0,   187,     0,   189,   190,   191,
     192,   193,     0,   194,   195,     0,   196,   197,   198,     0,
     200,     0,     0,     0,   201,     0,     0,   202,     0,   203,
       0,     0,   204,     0,     0,     0,   205,   206,   207,     0,
       0,   208,     0,     0,     0,     0,   209,     0,     0,     0,
       0,     0,   211,   212,     0,   213,     0,     0,     0,   214,
       0,   215,   216,   217,   218,   219,     0,     0,     0,     0,
       0,     0,   221,   222,   223,     0,     0,     0,   224,     0,
    -395,   226,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,   235,   236,     0,     0,     0,   238,
     239,   240,   241,   242,     0,     0,   243,   244,  4174,   245,
     246,   247,   248,   249,     0,     0,     0,     0,     0,     0,
       0,     0,   253,     0,   254,     0,   255,     0,   256,     0,
       0,   258,   259,   260,     0,   261,     0,   262,     0,     0,
       0,     0,   264,     0,     0,     0,     0,     0,   267,     0,
       0,     0,   268,   269,   270,   271,  4175,     0,   272,   273,
     274,     0,     0,   275,     0,     0,     0,     0,   276,     0,
       0,     0,     0,   278,     0,     0,     0,   279,   280,     0,
     281,   282,  4176,     0,     0,   283,     0,   284,     0,     0,
       0,   286,     0,     0,   287,  4177,     0,   288,   289,     0,
       0,     0,     0,     0,   290,   291,     0,   292,     0,   293,
       0,   294,   295,     0,     0,     0,     0,  -357,     0,     0,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,     0,   317,   318,   319,   320,     0,   321,
     322,     0,     0,     0,     0,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,   331,     0,   332,     0,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,   350,     0,     0,     0,   351,     0,
     352,   353,     0,   354,   355,  4178,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   359,
     360,     0,     0,     0,   363,     0,   364,   365,   366,   367,
     368,   369,   370,   371,   372,     0,     0,     0,     0,     0,
     376,   377,     0,   378,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,     0,     0,   387,     0,     0,     0,
     388,   389,   390,   391,   392,     0,     0,   393,   394,   395,
     396,   397,     0,   398,     0,     0,   400,     0,   402,  -357,
       0,   403,   404,   405,   406,   407,   408,   409,   410,     0,
       0,     0,   412,     0,     0,   414,   415,   416,  4179,   417,
       0,     0,     0,   419,   420,   421,   422,   423,   424,   425,
       0,   427,   428,     0,   429,     0,     0,     0,     0,   431,
     432,   433,     0,     0,     0,     0,   435,     0,     0,     0,
       0,     0,     0,   438,     0,   440,     0,   441,     0,     0,
     444,   445,     0,     0,     0,     0,     0,   446,   447,   448,
       0,   449,   450,     0,   451,     0,     0,   452,     0,   453,
       0,   454,     0,   456,   457,   458,   459,     0,     0,     0,
     461,     0,     0,   462,   463,   464,   465,   466,   467,     0,
       0,   468,   469,   470,   471,     0,   472,   473,     0,     0,
     474,   475,   476,   477,     0,     0,   478,   479,     0,   480,
     481,   482,   483,     0,     0,     0,     0,     0,   484,   485,
       0,     0,     0,     0,   487,   488,   489,     0,   490,   491,
       0,   492,   493,     0,     0,     0,     0,     0,   496,     0,
       0,   497,     0,     0,     0,   499,   500,     0,     0,     0,
       0,     0,   501,     0,   502,     0,     0,   503,     0,     0,
       0,   504,     0,   505,   506,   507,   508,     0,     0,  -357,
       0,     0,     0,   509,   510,     0,     0,   512,     0,   514,
     515,     0,   144,   516,   145,   146,   147,   148,   149,     0,
       0,     0,   151,     0,     0,     0,   152,     0,     0,     0,
       0,   154,   155,   156,   157,   158,     0,     0,  -402,     0,
       0,     0,   161,     0,     0,     0,   162,     0,     0,   163,
     164,   165,     0,   166,     0,     0,     0,     0,     0,   169,
    4172,     0,   170,   171,     0,   172,   173,     0,     0,     0,
       0,   176,   177,   178,  4173,   180,   181,     0,   182,   183,
       0,   184,   185,     0,   187,     0,   189,   190,   191,   192,
     193,     0,   194,   195,     0,   196,   197,   198,     0,   200,
       0,     0,     0,   201,     0,     0,   202,     0,   203,     0,
       0,   204,     0,     0,     0,   205,   206,   207,     0,     0,
     208,     0,     0,     0,     0,   209,     0,     0,     0,     0,
       0,   211,   212,     0,   213,     0,     0,     0,   214,     0,
     215,   216,   217,   218,   219,     0,     0,     0,     0,     0,
       0,   221,   222,   223,     0,     0,     0,   224,     0,  4543,
     226,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,   235,   236,     0,     0,     0,   238,   239,
     240,   241,   242,     0,     0,   243,   244,  4174,   245,   246,
     247,   248,   249,     0,     0,     0,     0,     0,     0,     0,
       0,   253,     0,   254,     0,   255,     0,   256,     0,     0,
     258,   259,   260,     0,   261,     0,   262,     0,     0,     0,
       0,   264,     0,     0,     0,     0,     0,   267,     0,     0,
       0,   268,   269,   270,   271,  4175,     0,   272,   273,   274,
       0,     0,   275,     0,     0,     0,     0,   276,     0,     0,
       0,     0,   278,     0,     0,     0,   279,   280,     0,   281,
     282,  4176,     0,     0,   283,     0,   284,     0,     0,     0,
     286,     0,     0,   287,  4177,     0,   288,   289,     0,     0,
       0,     0,     0,   290,   291,     0,   292,     0,   293,     0,
     294,   295,     0,     0,     0,     0,  -357,     0,     0,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,     0,   317,   318,   319,   320,     0,   321,   322,
       0,     0,     0,     0,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,   331,     0,   332,     0,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,   350,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,  4178,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   359,   360,
       0,     0,     0,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,     0,     0,     0,     0,   376,
     377,     0,   378,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,     0,     0,   387,     0,     0,     0,   388,
     389,   390,   391,   392,     0,     0,   393,   394,   395,   396,
     397,     0,   398,     0,     0,   400,     0,   402,  -357,     0,
     403,   404,   405,   406,   407,   408,   409,   410,     0,     0,
       0,   412,     0,     0,   414,   415,   416,  4179,   417,     0,
       0,     0,   419,   420,   421,   422,   423,   424,   425,     0,
     427,   428,     0,   429,     0,     0,     0,     0,   431,   432,
     433,     0,     0,     0,     0,   435,     0,     0,     0,     0,
       0,     0,   438,     0,   440,     0,   441,     0,     0,   444,
     445,     0,     0,     0,     0,     0,   446,   447,   448,     0,
     449,   450,     0,   451,     0,     0,   452,     0,   453,     0,
     454,     0,   456,   457,   458,   459,     0,     0,     0,   461,
       0,     0,   462,   463,   464,   465,   466,   467,     0,     0,
     468,   469,   470,   471,     0,   472,   473,     0,     0,   474,
     475,   476,   477,     0,     0,   478,   479,     0,   480,   481,
     482,   483,     0,     0,     0,     0,     0,   484,   485,     0,
       0,     0,     0,   487,   488,   489,     0,   490,   491,     0,
     492,   493,     0,     0,     0,     0,     0,   496,     0,     0,
     497,     0,     0,     0,   499,   500,     0,     0,     0,     0,
       0,   501,     0,   502,     0,     0,   503,     0,     0,     0,
     504,     0,   505,   506,   507,   508,     0,     0,  -357,     0,
       0,     0,   509,   510,     0,     0,   512,     0,   514,   515,
       0,   144,   516,   145,   146,   147,   148,   149,     0,     0,
       0,   151,     0,     0,     0,   152,     0,     0,     0,     0,
     154,   155,   156,   157,   158,     0,     0,  -402,     0,     0,
       0,   161,     0,     0,     0,   162,     0,     0,   163,   164,
     165,     0,   166,     0,     0,     0,     0,     0,   169,  4172,
       0,   170,   171,     0,   172,   173,     0,     0,     0,     0,
     176,   177,   178,  4173,   180,   181,     0,   182,   183,     0,
     184,   185,     0,   187,     0,   189,   190,   191,   192,   193,
       0,   194,   195,     0,   196,   197,   198,     0,   200,     0,
       0,     0,   201,     0,     0,   202,     0,   203,     0,     0,
     204,     0,     0,     0,   205,   206,   207,     0,     0,   208,
       0,     0,     0,     0,   209,     0,     0,     0,     0,     0,
     211,   212,     0,   213,     0,     0,     0,   214,     0,   215,
     216,   217,   218,   219,     0,     0,     0,     0,     0,     0,
     221,   222,   223,     0,     0,     0,   224,     0,  4576,   226,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,   235,   236,     0,     0,     0,   238,   239,   240,
     241,   242,     0,     0,   243,   244,  4174,   245,   246,   247,
     248,   249,     0,     0,     0,     0,     0,     0,     0,     0,
     253,     0,   254,     0,   255,     0,   256,     0,     0,   258,
     259,   260,     0,   261,     0,   262,     0,     0,     0,     0,
     264,     0,     0,     0,     0,     0,   267,     0,     0,     0,
     268,   269,   270,   271,  4175,     0,   272,   273,   274,     0,
       0,   275,     0,     0,     0,     0,   276,     0,     0,     0,
       0,   278,     0,     0,     0,   279,   280,     0,   281,   282,
    4176,     0,     0,   283,     0,   284,     0,     0,     0,   286,
       0,     0,   287,  4177,     0,   288,   289,     0,     0,     0,
       0,     0,   290,   291,     0,   292,     0,   293,     0,   294,
     295,     0,     0,     0,     0,  -357,     0,     0,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,     0,   317,   318,   319,   320,     0,   321,   322,     0,
       0,     0,     0,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,   331,     0,   332,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,   350,     0,     0,     0,   351,     0,   352,   353,
       0,   354,   355,  4178,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   359,   360,     0,
       0,     0,   363,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,     0,     0,     0,     0,   376,   377,
       0,   378,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,     0,     0,   387,     0,     0,     0,   388,   389,
     390,   391,   392,     0,     0,   393,   394,   395,   396,   397,
       0,   398,     0,     0,   400,     0,   402,  -357,     0,   403,
     404,   405,   406,   407,   408,   409,   410,     0,     0,     0,
     412,     0,     0,   414,   415,   416,  4179,   417,     0,     0,
       0,   419,   420,   421,   422,   423,   424,   425,     0,   427,
     428,     0,   429,     0,     0,     0,     0,   431,   432,   433,
       0,     0,     0,     0,   435,     0,     0,     0,     0,     0,
       0,   438,     0,   440,     0,   441,     0,     0,   444,   445,
       0,     0,     0,     0,     0,   446,   447,   448,     0,   449,
     450,     0,   451,     0,     0,   452,     0,   453,     0,   454,
       0,   456,   457,   458,   459,     0,     0,     0,   461,     0,
       0,   462,   463,   464,   465,   466,   467,     0,     0,   468,
     469,   470,   471,     0,   472,   473,     0,     0,   474,   475,
     476,   477,     0,     0,   478,   479,     0,   480,   481,   482,
     483,     0,     0,     0,     0,     0,   484,   485,     0,     0,
       0,     0,   487,   488,   489,     0,   490,   491,     0,   492,
     493,     0,     0,     0,     0,     0,   496,     0,     0,   497,
       0,     0,     0,   499,   500,     0,     0,     0,     0,     0,
     501,     0,   502,     0,     0,   503,     0,     0,     0,   504,
       0,   505,   506,   507,   508,     0,     0,  -357,     0,     0,
       0,   509,   510,     0,     0,   512,     0,   514,   515,     0,
     144,   516,   145,   146,   147,   148,   149,     0,     0,     0,
     151,     0,     0,     0,   152,     0,     0,     0,     0,   154,
     155,   156,   157,   158,     0,     0,  -402,     0,     0,     0,
     161,     0,     0,     0,   162,     0,     0,   163,   164,   165,
       0,   166,     0,     0,     0,     0,     0,   169,  4172,     0,
     170,   171,     0,   172,   173,     0,     0,     0,     0,   176,
     177,   178,  4173,   180,   181,     0,   182,   183,     0,   184,
     185,     0,   187,     0,   189,   190,   191,   192,   193,     0,
     194,   195,     0,   196,   197,   198,     0,   200,     0,     0,
       0,   201,     0,     0,   202,     0,   203,     0,     0,   204,
       0,     0,     0,   205,   206,   207,     0,     0,   208,     0,
       0,     0,     0,   209,     0,     0,     0,     0,     0,   211,
     212,     0,   213,     0,     0,     0,   214,     0,   215,   216,
     217,   218,   219,     0,     0,     0,     0,     0,     0,   221,
     222,   223,     0,     0,     0,   224,     0,  -376,   226,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,   235,   236,     0,     0,     0,   238,   239,   240,   241,
     242,     0,     0,   243,   244,  4174,   245,   246,   247,   248,
     249,     0,     0,     0,     0,     0,     0,     0,     0,   253,
       0,   254,     0,   255,     0,   256,     0,     0,   258,   259,
     260,     0,   261,     0,   262,     0,     0,     0,     0,   264,
       0,     0,     0,     0,     0,   267,     0,     0,     0,   268,
     269,   270,   271,  4175,     0,   272,   273,   274,     0,     0,
     275,     0,     0,     0,     0,   276,     0,     0,     0,     0,
     278,     0,     0,     0,   279,   280,     0,   281,   282,  4176,
       0,     0,   283,     0,   284,     0,     0,     0,   286,     0,
       0,   287,  4177,     0,   288,   289,     0,     0,     0,     0,
       0,   290,   291,     0,   292,     0,   293,     0,   294,   295,
       0,     0,     0,     0,  -357,     0,     0,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
       0,   317,   318,   319,   320,     0,   321,   322,     0,     0,
       0,     0,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,   331,     0,   332,     0,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
       0,   350,     0,     0,     0,   351,     0,   352,   353,     0,
     354,   355,  4178,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   359,   360,     0,     0,
       0,   363,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,     0,     0,     0,     0,   376,   377,     0,
     378,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,     0,     0,   387,     0,     0,     0,   388,   389,   390,
     391,   392,     0,     0,   393,   394,   395,   396,   397,     0,
     398,     0,     0,   400,     0,   402,  -357,     0,   403,   404,
     405,   406,   407,   408,   409,   410,     0,     0,     0,   412,
       0,     0,   414,   415,   416,  4179,   417,     0,     0,     0,
     419,   420,   421,   422,   423,   424,   425,     0,   427,   428,
       0,   429,     0,     0,     0,     0,   431,   432,   433,     0,
       0,     0,     0,   435,     0,     0,     0,     0,     0,     0,
     438,     0,   440,     0,   441,     0,     0,   444,   445,     0,
       0,     0,     0,     0,   446,   447,   448,     0,   449,   450,
       0,   451,     0,     0,   452,     0,   453,     0,   454,     0,
     456,   457,   458,   459,     0,     0,     0,   461,     0,     0,
     462,   463,   464,   465,   466,   467,     0,     0,   468,   469,
     470,   471,     0,   472,   473,     0,     0,   474,   475,   476,
     477,     0,     0,   478,   479,     0,   480,   481,   482,   483,
       0,     0,     0,     0,     0,   484,   485,     0,     0,     0,
       0,   487,   488,   489,     0,   490,   491,     0,   492,   493,
       0,     0,     0,     0,     0,   496,     0,     0,   497,     0,
       0,     0,   499,   500,     0,     0,     0,     0,     0,   501,
       0,   502,     0,     0,   503,     0,     0,     0,   504,     0,
     505,   506,   507,   508,     0,     0,  -357,     0,     0,     0,
     509,   510,     0,     0,   512,     0,   514,   515,     0,   144,
     516,   145,   146,   147,   148,   149,     0,     0,     0,   151,
       0,     0,     0,   152,     0,     0,     0,     0,   154,   155,
     156,   157,   158,     0,     0,  -402,     0,     0,     0,   161,
       0,     0,     0,   162,     0,     0,   163,   164,   165,     0,
     166,     0,     0,     0,     0,     0,   169,  4172,     0,   170,
     171,     0,   172,   173,     0,     0,     0,     0,   176,   177,
     178,  4173,   180,   181,     0,   182,   183,     0,   184,   185,
       0,   187,     0,   189,   190,   191,   192,   193,     0,   194,
     195,     0,   196,   197,   198,     0,   200,     0,     0,     0,
     201,     0,     0,   202,     0,   203,     0,     0,   204,     0,
       0,     0,   205,   206,   207,     0,     0,   208,     0,     0,
       0,     0,   209,     0,     0,     0,     0,     0,   211,   212,
       0,   213,     0,     0,     0,   214,     0,   215,   216,   217,
     218,   219,     0,     0,     0,     0,     0,     0,   221,   222,
     223,     0,     0,     0,   224,     0,     0,   226,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
     235,   236,     0,     0,     0,   238,   239,   240,   241,   242,
       0,     0,   243,   244,  4174,   245,   246,   247,   248,   249,
       0,     0,     0,     0,     0,     0,     0,     0,   253,     0,
     254,     0,   255,     0,   256,     0,     0,   258,   259,   260,
       0,   261,     0,   262,     0,     0,     0,     0,   264,     0,
       0,     0,     0,     0,   267,     0,     0,     0,   268,   269,
     270,   271,  4175,     0,   272,   273,   274,     0,     0,   275,
       0,     0,     0,     0,   276,     0,     0,     0,     0,   278,
       0,     0,     0,   279,   280,     0,   281,   282,  4176,     0,
       0,   283,     0,   284,     0,     0,     0,   286,     0,     0,
     287,  4177,     0,   288,   289,     0,     0,     0,     0,     0,
     290,   291,     0,   292,     0,   293,     0,   294,   295,     0,
       0,     0,     0,  -357,     0,     0,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,     0,
     317,   318,   319,   320,     0,   321,   322,     0,     0,     0,
       0,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,   331,     0,   332,     0,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
     350,     0,     0,     0,   351,     0,   352,   353,     0,   354,
     355,  4178,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   359,   360,     0,     0,     0,
     363,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,     0,     0,     0,     0,     0,   376,   377,     0,   378,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
       0,     0,   387,     0,     0,     0,   388,   389,   390,   391,
     392,     0,     0,   393,   394,   395,   396,   397,     0,   398,
       0,     0,   400,     0,   402,  -357,     0,   403,   404,   405,
     406,   407,   408,   409,   410,     0,     0,     0,   412,     0,
       0,   414,   415,   416,  4179,   417,     0,     0,     0,   419,
     420,   421,   422,   423,   424,   425,     0,   427,   428,     0,
     429,     0,     0,     0,     0,   431,   432,   433,     0,     0,
       0,     0,   435,     0,     0,     0,     0,     0,     0,   438,
       0,   440,     0,   441,     0,     0,   444,   445,     0,     0,
       0,     0,     0,   446,   447,   448,     0,   449,   450,     0,
     451,     0,     0,   452,     0,   453,     0,   454,     0,   456,
     457,   458,   459,     0,     0,     0,   461,     0,     0,   462,
     463,   464,   465,   466,   467,     0,     0,   468,   469,   470,
     471,     0,   472,   473,     0,     0,   474,   475,   476,   477,
       0,     0,   478,   479,     0,   480,   481,   482,   483,     0,
       0,     0,     0,     0,   484,   485,     0,     0,     0,     0,
     487,   488,   489,     0,   490,   491,     0,   492,   493,     0,
       0,     0,     0,     0,   496,     0,     0,   497,     0,     0,
       0,   499,   500,     0,     0,     0,     0,     0,   501,     0,
     502,     0,     0,   503,     0,     0,     0,   504,     0,   505,
     506,   507,   508,     0,     0,  -357,     0,     0,     0,   509,
     510,     0,     0,   512,     0,   514,   515,     0,   144,   516,
     145,   146,   147,   148,   149,     0,     0,     0,   151,     0,
       0,     0,   152,     0,     0,     0,     0,   154,   155,   156,
     157,   158,     0,     0,  -402,     0,     0,     0,   161,     0,
       0,     0,   162,     0,     0,   163,   164,   165,     0,   166,
       0,     0,     0,     0,     0,   169,  4172,     0,   170,   171,
       0,   172,   173,     0,     0,     0,     0,   176,   177,   178,
    4173,   180,   181,     0,   182,   183,     0,   184,   185,     0,
     187,     0,   189,   190,   191,   192,   193,     0,   194,   195,
       0,   196,   197,   198,     0,   200,     0,     0,     0,   201,
       0,     0,   202,     0,   203,     0,     0,   204,     0,     0,
       0,   205,   206,   207,     0,     0,   208,     0,     0,     0,
       0,   209,     0,     0,     0,     0,     0,   211,   212,     0,
     213,     0,     0,     0,   214,     0,   215,   216,   217,   218,
     219,     0,     0,     0,     0,     0,     0,   221,   222,   223,
       0,     0,     0,   224,     0,     0,   226,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,   235,
     236,     0,     0,     0,   238,   239,   240,   241,   242,     0,
       0,   243,   244,  4174,   245,   246,   247,   248,   249,     0,
       0,     0,     0,     0,     0,     0,     0,   253,     0,   254,
       0,   255,     0,   256,     0,     0,   258,   259,   260,     0,
     261,     0,   262,     0,     0,     0,     0,   264,     0,     0,
       0,     0,     0,   267,     0,     0,     0,   268,   269,   270,
     271,  4175,     0,   272,   273,   274,     0,     0,   275,     0,
       0,     0,     0,   276,     0,     0,     0,     0,   278,     0,
       0,     0,   279,   280,     0,   281,   282,  4176,     0,     0,
     283,     0,   284,     0,     0,     0,   286,     0,     0,   287,
    4177,     0,   288,   289,     0,     0,     0,     0,     0,   290,
     291,     0,   292,     0,   293,     0,   294,   295,     0,     0,
       0,     0,  -357,     0,     0,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,     0,   317,
     318,   319,   320,     0,   321,   322,     0,     0,     0,     0,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,   331,     0,   332,     0,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,     0,   350,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
    4178,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   359,   360,     0,     0,     0,   363,
       0,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,     0,     0,     0,     0,   376,   377,     0,   378,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,     0,
       0,   387,     0,     0,     0,   388,   389,   390,   391,   392,
       0,     0,   393,   394,   395,   396,   397,     0,   398,     0,
       0,   400,     0,   402,  -357,     0,   403,   404,   405,   406,
     407,   408,   409,   410,     0,     0,     0,   412,     0,     0,
     414,   415,   416,  4179,   417,     0,     0,     0,   419,   420,
     421,   422,   423,   424,   425,     0,   427,   428,     0,   429,
       0,     0,     0,     0,   431,   432,   433,     0,     0,     0,
       0,   435,     0,     0,     0,     0,     0,     0,   438,     0,
     440,     0,   441,     0,     0,   444,   445,     0,     0,     0,
       0,     0,   446,   447,   448,     0,   449,   450,     0,   451,
       0,     0,   452,     0,   453,     0,   454,     0,   456,   457,
     458,   459,     0,     0,     0,   461,     0,     0,   462,   463,
     464,   465,   466,   467,     0,     0,   468,   469,   470,   471,
       0,   472,   473,     0,     0,   474,   475,   476,   477,     0,
       0,   478,   479,     0,   480,   481,   482,   483,     0,     0,
       0,     0,     0,   484,   485,     0,     0,     0,     0,   487,
     488,   489,     0,   490,   491,     0,   492,   493,     0,     0,
       0,     0,     0,   496,     0,     0,  4457,     0,     0,     0,
     499,   500,     0,     0,     0,     0,     0,   501,     0,   502,
       0,     0,   503,     0,     0,     0,   504,     0,   505,   506,
     507,   508,     0,     0,  -357,     0,     0,     0,   509,   510,
       0,     0,   512,     0,   514,   515,     0,     0,   516
};

static const yytype_int16 yycheck[] =
{
       6,   620,   621,   708,    45,   631,   652,   612,  1071,    20,
    1072,   630,  1046,    19,  1460,   613,  1092,    23,  1222,    30,
    1422,  1252,   986,  1092,  1354,   775,    37,    33,  1252,  1128,
    1546,  1200,   942,  1289,    40,  2065,  1789,    43,  1459,    45,
     681,   735,    48,  2605,  1008,   984,     6,  1153,  1154,    55,
    1354,  1731,  2463,  2695,  2412,   128,    41,  1715,  2694,  2691,
    2482,  1643,  2805,  2190,  3226,  1647,  2488,  1649,  1190,    75,
    1009,  1092,  2715,  1651,  2817,  2818,  1076,  1076,  1409,  2883,
    1402,  1492,  1804,  1452,  1643,  1807,  1290,  1291,   704,   705,
    1294,  1295,  1296,  1297,   100,  1299,  1300,  1301,  1302,  1303,
    1304,  1305,  1306,  1567,  1620,  2083,  3012,  1643,  2016,  1651,
    2323,  1647,  2290,  1649,  1653,    23,  2444,   123,  1657,   125,
     669,   127,   128,   129,   130,  2329,  2290,  1669,  1529,   538,
    1669,  2444,  2116,  2117,  2694,  2183,   830,   831,  2749,   833,
     845,   628,  1681,  2191,  1028,  3278,  1547,  1689,  1635,  2182,
    3320,  3386,   846,  3323,  1555,  1556,  1810,  1327,  2716,  2717,
      21,  3187,     9,     4,  1158,   125,  3360,   127,  3571,    18,
      19,    35,  3342,    62,  1576,  2298,    48,  1173,  1174,  3349,
      19,    73,    29,  2433,   135,    18,    19,    22,    26,    36,
      21,   149,   100,  1010,    52,  2817,  2818,    23,  2282,    18,
      19,    77,    21,    65,  1786,  3623,  1202,    18,    19,    35,
      37,  2301,    78,  2264,  2244,    31,    18,    19,  1214,  1215,
    1216,    21,   130,    49,   162,  1221,   129,  1786,    26,    18,
      19,   149,  2975,  2976,    77,    61,    62,  2571,  2835,    67,
     157,  1757,    22,   193,    23,  2821,   191,   175,  3174,    52,
    1786,    19,  2984,   124,   159,    18,    19,   199,   290,   273,
     283,   124,    86,  3433,   159,   906,  2444,   203,   124,  2926,
     110,    81,   324,    18,    19,   199,   159,   203,  3174,    71,
    2444,   385,    61,    62,   155,   230,   273,    68,   274,    18,
      19,   138,   155,    57,   155,   130,    37,    65,   159,   155,
    1655,  1656,    44,  1658,   256,    35,  1661,  1662,  1663,    64,
     193,  1666,  2189,   722,   399,   956,  1671,   398,    26,   236,
     190,  1676,  1677,  1678,  1679,  1680,  2048,    59,   159,  1684,
      70,  1686,  2610,   138,    84,    12,   108,  1692,  1693,  1694,
    1695,   208,  1697,  1698,   230,  1700,   965,    26,    23,   462,
     130,    77,   539,  2975,  2976,   470,   975,    18,    19,   159,
      35,    22,   159,    21,   401,  1615,   447,  1166,  1167,  1168,
      25,   193,   164,   313,    49,   276,  3111,    22,   127,  1178,
      13,    18,    19,    18,    19,   261,    61,    62,    18,    19,
     274,   218,   254,   489,   234,   196,   102,   149,   236,   385,
      13,    18,    19,   234,   568,  2632,   129,  2634,    77,  1208,
     175,    70,  1211,   280,    18,    19,    42,   260,    18,    19,
     452,    21,  2575,   568,   599,   444,   544,   196,   215,  4445,
     261,   193,  1231,  1232,   196,   280,  1235,   192,   236,  1189,
     234,   364,    65,   175,  4108,    21,    85,   179,   855,   157,
     367,   196,   271,  1203,  1253,  1254,   611,   568,   657,   175,
     533,   193,  1612,   633,  1614,   104,   665,   261,  1462,   130,
     219,   637,    48,  4489,   261,   417,   140,   218,  3213,  2706,
    2707,  2708,   320,   658,  1100,   130,   254,   363,   364,   659,
     413,   291,  2008,   417,   658,    73,  3731,  3108,   426,  3669,
     362,   385,   111,   576,   659,   114,   139,   625,  3678,   155,
     917,   530,   167,   139,   454,  1577,   468,   240,  3150,   664,
    3014,   283,   320,   368,   329,     5,   139,   533,   236,   535,
    3612,   568,  3702,   720,   260,   384,    12,  3707,   387,   415,
     410,   291,   291,   549,   202,   551,   659,   620,  4212,   555,
     665,   624,   625,   559,  3197,   659,   193,   236,  3584,  3585,
    3586,   657,    18,    19,  2080,   384,   572,   453,   387,   367,
     576,   507,   657,   384,    64,   581,   387,   478,   659,   602,
    1285,   507,   384,   313,  1523,   387,  2864,  1526,  3152,   595,
     631,   260,  1531,   498,   386,   384,   328,  2750,   387,  1293,
     632,   425,   366,   498,  1354,   657,   283,    18,    19,   467,
     352,   596,   320,   599,   620,   498,  1310,   631,   624,   625,
     562,   384,   628,  1587,   387,   159,   543,   494,   274,  3286,
     430,   254,  2759,  2307,   640,  1635,  1635,   472,   562,   384,
    1995,   320,   387,  2821,   631,   581,  3572,  2305,  2050,   430,
     126,  2309,   658,  3396,  3397,   384,  2984,  2821,   387,   367,
     415,   426,  2336,  2337,   467,   610,  3398,  2325,  2326,   531,
    3267,  2984,   630,    52,   484,   681,  3572,   683,   342,   507,
    2338,   609,  2264,   633,  3260,  1706,  3848,   549,   694,   627,
    1331,  2349,   472,   699,   426,   701,    18,    19,   704,   705,
    2282,   498,   605,   709,   710,  2264,   157,  4110,   693,   626,
     426,  2834,   630,  2371,  2837,  2838,  1332,   564,   724,   725,
     726,   727,  1131,   384,   600,   591,   387,  2977,  2264,   714,
     619,  2290,    18,    19,   694,  2819,  1553,  3972,  3973,  2461,
     579,   568,  2832,   590,  4162,   543,  2282,   384,   579,   384,
     387,   598,   387,  2083,   384,  2806,  2786,   387,  2300,  2301,
     665,   633,  1966,   579,   837,   657,  2167,   384,   719,   775,
     387,   597,  3106,  1977,  3396,  3397,  1980,  3413,   640,  2083,
     384,   549,  3976,   387,   384,  1785,  1785,   387,  3199,  1405,
     633,   699,   663,   657,   641,   644,   704,   705,   871,   539,
     663,   659,   663,   643,  1498,  1421,  2984,   663,  1802,   611,
    2464,   644,  3455,   662,  3225,   650,    18,    19,   597,   727,
    2984,   659,  2852,  1993,  3850,   644,   532,   568,   626,  2371,
     836,   837,   838,   644,  1830,   543,   842,   659,  1960,   639,
     659,   419,   644,    18,    19,   600,  3979,   658,   659,    18,
      19,  2433,   624,   926,  1473,   644,  2060,   659,   659,   865,
     866,   867,  2444,   869,   870,   871,  3424,   873,   665,   658,
     659,   159,  2194,   879,  2433,    18,    19,  1873,   630,   885,
     539,   644,   605,  2760,  2761,  2444,  1527,  1771,   894,   874,
     659,  2246,  2247,   609,   659,   658,   659,  2433,  4562,   644,
     906,   907,    18,    19,   910,  1312,   866,  2262,  2444,  4312,
     870,   387,   985,   873,   659,   644,   367,   178,   626,   588,
     926,   401,   597,  3417,  2279,  2280,   549,   659,   384,   658,
     659,   387,  3568,    18,    19,   976,   942,  1933,    18,    19,
    2427,   947,   611,   659,  2974,    18,    19,   622,   438,   221,
     956,   659,    18,    19,    18,    19,  3567,   121,  2208,  2209,
    2210,  2211,  2317,   572,   498,   971,   575,  4049,  2192,  4051,
     976,   178,  3633,   384,  2654,  4210,   387,  2332,   378,   985,
    1053,   559,   657,   644,  3548,   631,   894,   366,   652,   653,
     654,   655,   370,    18,    19,    47,  4166,  1070,  4168,   907,
    1487,   842,   910,   155,   582,    18,    19,   644,  1495,   644,
      18,    19,  4415,  3573,   644,  1814,   143,   663,   155,   377,
    2742,   658,  1028,  2273,   659,  1031,    71,   644,  2178,   659,
     374,   878,    18,    19,    18,    19,  4213,   489,    18,    19,
     644,   658,   659,  2765,   644,    18,    19,  1053,   291,     9,
    1056,    18,    19,   489,   658,   659,   152,  2731,  2308,   900,
    2310,   121,   384,   366,  1070,   387,  1072,   163,  2318,  1618,
    3398,   122,  3276,  2428,  2429,  2430,  2431,  3110,   230,  3292,
    3688,  3987,  3260,  3887,  2334,  3398,  1885,    13,   467,  3216,
    1889,  2341,   543,  3220,  1100,   568,  3260,   430,   384,  1508,
     375,   387,   363,   364,  2354,  2355,  2356,   253,   369,  2340,
    2360,   657,   234,  1912,   717,   718,  2340,    11,   497,   665,
    1028,   238,  1128,   539,   288,   401,  1132,  1133,  1134,  3685,
     247,   665,   371,  1883,   568,   398,  1142,   274,  3168,  2320,
     196,  3264,   445,   197,  2394,  1151,  2396,  2397,  2182,  2330,
    2400,  2401,  1158,  1159,  1160,   140,    18,    19,   236,  2409,
    2410,   559,   369,   215,   562,    18,    19,   124,  3216,    18,
      19,   401,  3220,  1133,  1134,   626,    18,    19,   352,   404,
    2361,   377,   384,  1189,   657,   387,   435,   430,   644,   398,
     230,   247,  1100,    99,   245,   256,   588,  1203,  2162,   657,
     124,   375,  2860,   659,   620,   657,   370,  3185,   269,   384,
     498,   562,   387,   139,   367,   384,  2155,  3201,   387,   611,
    3398,   657,  3865,   657,  2806,   185,  2690,  2166,   288,  3137,
    2169,  2170,  3705,   644,  3398,  3708,  1309,  2819,    23,  3900,
    3662,   384,   481,  1151,   387,  2395,  1252,  2806,  2398,  2399,
      35,   291,  2402,  2403,  2404,  2405,  2406,  2407,  2408,    18,
      19,  2411,  2821,  1269,    49,   665,  1272,   539,   384,  2179,
    2806,   387,   166,   390,    18,    19,    61,    62,    18,    19,
     658,   639,  1355,  2819,   430,  1979,  2655,   383,  4465,   367,
    2832,  2367,   568,    18,    19,  2716,  2717,   560,  2367,   384,
     633,   453,   387,  1309,   384,   199,   483,   387,  1314,  2513,
     370,   384,  1318,   285,   387,   659,  2566,  2728,   384,   243,
     384,   387,   644,   387,   585,  1331,  1332,    18,    19,  2585,
    3938,   237,  2910,  2083,    18,    19,   658,   659,   568,  1412,
     601,   386,  2743,   397,  2675,   594,  2367,   196,  1354,  1355,
     256,   560,  3010,  3989,  4158,    18,    19,   342,   644,   384,
    4003,   404,   387,   269,    18,    19,    18,    19,  2910,  2911,
     497,   384,  2911,   659,   387,   347,   384,   665,   585,   387,
    1453,   432,  3104,  1999,   659,  1391,   426,  1393,  3944,  1395,
     543,  1397,   489,  2034,   601,  2977,   639,  1470,   384,  1405,
     384,   387,  2984,   387,   384,  4165,  1412,   387,    18,    19,
    1318,   384,   369,   474,   387,  1421,   330,   384,  2977,   489,
     387,  3042,  2591,  2592,  1332,  2984,   590,  2427,  2427,  2751,
     482,  1272,  2073,  2074,   358,    18,    19,   611,  4176,  4177,
    1446,  2977,   644,   639,  2085,   291,   352,  1453,  2984,    53,
    3923,   234,   506,  1459,    18,    19,  1462,   659,    18,    19,
      64,  3491,  2584,  2694,  1470,   543,   127,  2691,  3010,   644,
    2694,   567,  2594,   626,  3154,   644,  4112,  4639,   261,  3606,
    3607,  1487,   489,   658,   659,    18,    19,  1395,   489,  1495,
     659,    33,    18,    19,   631,   546,  1099,  1405,  4130,  3921,
       0,   644,  2143,  1509,  1510,  1511,  1512,  1513,  2127,  1515,
     196,   663,  2508,  1421,   412,   658,   659,   126,  1524,  1525,
    2770,  1527,   384,   417,  1530,   387,   663,  1600,   644,  1514,
     590,   384,    18,    19,   387,   384,  3894,  3895,   387,   121,
    2536,   658,   384,   659,  1550,   387,  1149,   631,   626,  1509,
    1510,  1511,   211,  1513,     9,  1396,    18,    19,   121,   644,
     657,   124,  1568,  1569,   644,  1525,  4208,   539,   474,   710,
    1530,   644,    18,    19,   659,   659,    31,  4219,   644,   659,
     644,    18,    19,    18,    19,   124,   659,   657,   126,    18,
      19,   121,  3622,   659,  1600,   659,   166,   256,  1639,   138,
      18,    19,    18,    19,  1512,   187,   155,  1515,  4019,   616,
     617,  4354,  4355,    18,    19,   398,  3274,   505,    35,   644,
      18,    19,    18,    19,   187,   384,  2981,  2982,   387,   199,
     291,   644,   159,  3291,   659,   529,   644,   246,  3296,   545,
     384,   604,  1550,   387,   384,    62,   659,   387,    18,    19,
     657,   659,   566,    18,    19,   218,   657,   187,   644,   384,
     644,  2842,   387,  1504,   644,   650,   651,   652,   653,   654,
     655,   644,   185,   659,   360,   659,   280,   644,   592,   659,
     313,  4441,  4442,  2647,    13,  3306,   659,  3229,  3230,   583,
    2940,   275,   659,   384,   278,   196,   387,   121,   107,  2880,
     384,  3260,   489,   387,  4114,   247,   288,  2888,   246,  1715,
     497,  2892,    18,    19,   157,   603,  1722,  3338,  3339,  1725,
    1726,   384,  4460,  4461,   387,   288,   385,   193,   869,   571,
     384,   273,   384,   387,    13,   387,    18,    19,    18,    19,
    4150,   238,    13,   244,    18,    19,    18,    19,    18,    19,
     247,   264,  2933,   121,  3296,   159,   662,    13,   288,   647,
      26,    18,    19,   187,  2709,  1771,  4424,    18,    19,  4427,
     568,  1612,    43,  1614,   384,  1616,  1617,   387,  1619,   533,
     749,   750,   644,   211,  1790,  1791,    18,    19,   370,   198,
     329,   644,   425,   236,   218,   644,  1802,   659,   196,    77,
    1806,   384,   644,   229,   387,  1646,   659,   370,   651,   658,
     139,    77,   597,   567,  1722,   658,  3398,   283,  1726,   187,
     384,   651,    93,   387,   384,   234,    97,   387,   658,   616,
     617,  1791,   110,   618,   619,    18,    19,    18,    19,  3398,
     370,   215,  3497,   427,    18,    19,  3501,   417,   489,  2794,
     218,   384,   821,   366,   387,  3185,   497,  4515,   384,   657,
     139,   387,  3398,  1771,   288,  2463,  3122,  1940,    18,    19,
     657,   136,    40,  3553,   507,   284,  4438,  1883,  1884,   157,
      48,  3185,   166,   139,   385,   644,   151,   261,   126,   124,
      18,    19,   665,   390,  2588,    18,    19,   439,   384,   658,
     644,   387,    18,    19,   644,   247,    26,   579,  4304,   611,
     176,  2856,   147,   559,   658,   535,   562,   183,   658,   644,
     288,   121,   384,   430,   367,   387,  3150,  2000,   270,   611,
     184,  1086,  1087,   658,  1940,   226,  1942,   228,   384,   559,
     107,   387,    18,    19,   451,    19,   370,   384,    74,   384,
     387,   186,   387,   644,   229,   384,   234,   659,   387,   529,
     644,   619,   608,   665,   622,  2606,   384,   658,   384,   387,
     236,   387,  1127,   562,   658,   616,   617,   659,  1984,   384,
     251,   644,   387,   665,  1990,   492,   384,   187,   384,   387,
     644,   387,   644,  1999,  2000,   658,   634,   635,   611,   166,
    3224,   211,   370,  3424,   658,  2011,   658,   565,   590,   234,
    2016,    18,    19,   583,   384,  2021,   657,   387,   218,   384,
    2093,   659,   387,    18,    19,    61,    62,   590,  2034,   234,
      18,    19,   199,   234,   644,    71,    19,   157,   363,   364,
     633,   319,  3141,   636,    19,   658,   659,  2053,   658,   211,
    2091,  2057,  4448,   134,   320,    18,    19,  3288,   329,   337,
     590,   644,   658,   659,  3288,   378,   192,  2073,  2074,  2075,
    2076,   230,  3825,  3826,  3827,   658,  3110,  2083,   384,  2085,
     644,   387,    48,   361,   644,  3601,   495,  2093,   288,  2130,
    2695,  1999,   658,   659,   658,   361,   658,   659,   658,   244,
     543,   367,   384,  2011,   384,   387,   515,   387,   234,   244,
     384,   644,   384,   387,   384,   387,   236,   387,   644,    18,
      19,  3117,   393,   617,  2130,   658,   788,   384,    61,    62,
     387,  2137,   658,   384,   196,   261,   387,  2143,  4332,  4535,
    4334,  4537,  4336,  1984,   497,  2053,   599,   809,  2767,  2057,
     518,   560,   384,   562,     7,   387,   565,   140,   644,  4555,
     822,   823,  2168,  3269,  3270,   140,   590,  2075,  2076,   497,
     370,   659,   658,  2179,   665,   571,   665,  2183,   658,   659,
     658,   659,   644,   626,  2190,  2191,  2192,  2193,  4584,  4585,
      95,   600,   663,   658,   659,  3105,   658,  3035,   644,   608,
     320,   384,  3040,   384,   387,    58,   387,   644,   196,   644,
     384,    12,   658,   387,  4244,   644,   659,   658,   659,    13,
      77,   658,   590,   658,   658,   659,   644,   658,   644,   658,
    2071,   658,   659,   196,   384,   658,   659,   387,   657,   644,
     658,  3205,   658,   514,   657,  3209,   644,   367,   644,   227,
     417,   227,  3502,   658,   664,  2328,   384,  3426,   608,   387,
    2168,   384,  3172,   159,   387,   543,   298,   299,   384,   657,
     658,   387,  3211,   477,   644,  2316,   665,   543,   381,   644,
    3449,  3450,   560,  2294,   170,   556,   129,  2293,   658,   415,
     143,  2132,  2298,   658,   657,  2306,   658,   659,  2304,  2305,
     157,  2312,  3632,  2309,  3473,  2311,   107,  2035,   384,   606,
    2038,   387,    26,  2041,  2320,   658,   659,  2323,   529,  2325,
    2326,   192,  2328,  2329,  2330,   126,  4356,     7,  2339,  2335,
    2171,   453,  2338,  2344,  2340,   658,   659,  2178,   644,    12,
    2351,  2352,  3573,  2349,  2350,   139,   658,   659,   665,  3573,
     193,   659,   658,  2359,    77,  2361,   560,   657,  3688,   342,
     626,   565,   644,    77,   644,  2371,  2372,   342,   657,  2442,
     644,   657,   644,   568,   644,   257,   658,   384,   658,   236,
     387,   657,   121,  2389,   658,   375,   658,   644,   658,   384,
     590,   611,   387,   644,  3456,   562,   384,   240,   199,   387,
    2241,   658,   149,   150,   608,   658,   659,   658,  2249,  2482,
     442,   443,   644,   658,   659,  2488,   583,  2258,  2259,   665,
     624,   384,   512,   543,   387,   219,   658,   657,  2269,  2270,
    2271,  2272,   665,  2274,  2275,  3185,  2442,   658,   659,   658,
     659,   608,  2350,   157,  3520,  3544,  3545,  3546,   187,   657,
    3519,   657,  2458,  2459,  2460,   657,  2462,   624,   657,    77,
     657,   644,   176,   644,  3302,  3461,   657,    32,   657,   183,
     644,   107,  2313,  2314,  2315,   658,  2482,   658,   657,  3729,
     317,   318,  2488,   284,   658,   322,   323,   226,    59,   228,
     121,    99,    18,    19,   644,   298,   299,   658,   659,  3337,
     646,   647,  2343,   649,   361,   651,   626,  3345,   658,   657,
     367,   364,    50,   236,    79,  3353,   644,   500,   501,  3515,
     657,   644,   236,   140,   657,   500,   501,   657,   644,  3170,
     658,   658,  2605,   657,    13,   658,    80,  3571,    82,   157,
     658,   659,   658,   658,   659,   657,  3187,  3716,   657,   288,
    2458,  2459,  2460,   657,  2395,   657,   187,  2398,  2399,   658,
     659,  2402,  2403,  2404,  2405,  2406,  2407,  2408,   644,   657,
    2411,   658,   659,   658,   659,   657,   429,   657,   431,   436,
     124,   129,   658,   285,   220,   658,   659,   657,   153,   115,
     116,   117,   118,   119,  3308,  2601,   657,  3311,  3312,  2605,
    2606,  3199,   657,   147,   175,   657,   320,   657,   179,    99,
     453,   658,   659,   658,   659,  3329,   417,   657,   236,  2625,
      33,    50,   193,   658,   659,  2631,  2632,  3225,  2634,   237,
     247,   370,    26,   657,  3598,   657,  2709,   644,   361,   442,
     443,   657,   186,  2649,   367,   193,   489,   361,   256,   644,
     659,   658,   657,   367,   657,  2661,   644,   288,   658,   659,
     139,   269,    48,   658,   657,   648,   649,   650,   651,   652,
     653,   654,   655,   648,   649,   650,   651,   652,   653,   654,
     655,   644,   274,    77,   657,  2691,   543,   657,  2694,   657,
      77,   483,   240,   657,   495,  4141,   222,   223,   224,   225,
    2706,  2707,  2708,  2709,   657,    92,    27,   658,   659,   657,
    2716,  2717,   657,   436,   658,   659,   657,   520,   521,   522,
    2793,  2794,   657,  2631,  2632,   342,  2634,   140,   657,   523,
     524,   525,   526,   527,   528,   209,   657,   140,   595,   370,
     219,   658,   659,   361,   352,   658,   659,   237,   129,   367,
      71,   545,   196,  2759,    75,   391,    77,   328,    71,   560,
      64,   562,   605,   157,   657,   401,   256,   375,  4018,   626,
      74,   271,   408,   658,   659,   658,   659,   658,   659,   269,
     658,   659,   176,  2856,    88,   658,   659,  2793,  2794,   183,
     658,   659,  3854,  3855,    35,  3857,   657,  4152,  2706,  2707,
    2708,   657,   659,   124,   659,   119,   332,   608,   334,   335,
     336,   657,   193,    37,   657,  4025,  4026,   343,   436,   657,
     543,    62,   658,   659,   658,   659,  4030,   657,  2834,   543,
      21,  2837,  2838,   657,   247,   657,  2842,   658,   659,   657,
    4242,   657,   236,   317,   318,   658,   659,   412,   322,   323,
    2856,   590,   657,  3915,  2860,   426,   658,   659,   384,   240,
     273,   387,   352,   658,   659,  3927,   474,   658,   659,   434,
     111,   657,   595,   114,  2880,   511,   263,   658,   659,   658,
     659,   122,  2888,   500,   501,   375,  2892,   657,   192,   657,
     114,   657,  4338,   437,   198,   657,  4251,   121,   424,  4254,
    4255,  4256,  4257,   626,   657,   453,  4130,   657,    99,   657,
     475,   225,   626,  2919,  4354,  4355,  2922,  1239,  1240,   657,
     657,  2927,   165,   659,   657,   543,   320,  2933,   193,   342,
     234,   559,  2773,  2774,   140,    21,   539,   545,   165,   342,
     261,   489,   539,  3584,  3585,  3586,   285,    99,  2789,   156,
     363,   364,   659,   340,   178,  2961,    74,   261,  2964,   590,
     486,   487,    87,   187,   155,   140,   659,   361,   159,   659,
     535,   193,   608,   367,   376,   140,   555,   595,  4040,   366,
    4042,  4043,   642,   658,   474,  4235,  4236,  4237,  4238,   155,
     658,   658,  2998,    48,   218,   633,   159,  4352,  4353,    64,
     191,   159,   193,  3009,  3010,   159,  4361,   659,   626,    74,
     159,   159,   159,    99,  2922,   159,  2857,   258,   332,   401,
     211,  4271,   336,    88,   121,   216,   439,   124,  2869,   343,
     124,   648,   649,   650,   651,   652,   653,   654,   655,   230,
     110,   428,   363,   364,   523,   524,   237,   526,   369,   528,
       7,   657,   109,   244,   375,   545,     4,   605,   121,  3656,
    3657,   124,   488,   624,   288,   256,   545,   247,   659,   155,
      57,   445,   453,   159,   192,   170,  4110,   110,   269,  3676,
     199,   398,   247,   274,    13,   237,  3683,   500,   501,    71,
     187,   630,   283,   139,   415,   658,    10,   500,   501,  3105,
     513,  3009,   628,   659,   256,  4167,  3112,   193,   489,   657,
     424,   415,  3709,   354,   665,  3712,   234,   269,   644,   645,
     646,   218,    37,   658,   187,   211,  2967,   192,   658,   353,
     216,  3137,  2973,   198,   658,  3141,   342,   498,   665,   657,
     273,   365,   529,   261,  3150,   369,   370,  3153,   665,   543,
     659,   237,   157,   664,   285,   218,   285,   285,   244,   285,
    4124,   352,    50,  3169,  3170,   285,  3172,   342,   285,   234,
     256,   659,   493,   487,   659,   159,   416,   342,   477,  3185,
     382,  3187,   559,   269,   375,   375,   375,   659,   274,   280,
     659,   288,   659,   659,   385,   399,   261,   283,    13,   114,
     352,   579,   659,   579,   159,   375,   121,   375,   568,  3850,
    3216,   515,   659,   631,  3220,   605,   247,   657,  3224,   253,
     430,   247,   543,   665,   605,   288,   417,   665,   665,  4115,
    4116,   659,   626,   652,   250,   648,   649,   650,   651,   652,
     653,   654,   655,   180,   193,  3153,   649,   650,   651,   652,
     653,   654,   655,   659,    21,   557,   510,    60,  3264,   497,
      27,   659,   402,   178,   505,   659,   352,   193,  3274,  4473,
    3276,   568,   187,   370,  4160,  4161,   657,   568,  4312,   600,
     398,   568,  3288,   474,   568,  3291,  3292,   159,  3294,   375,
    3296,   125,    86,   135,   500,   501,   600,   415,    74,   385,
     398,   579,   398,   218,    71,   398,   497,   370,    75,   135,
      77,  3767,  3768,  3769,   628,   259,   259,   398,   552,   553,
     554,   135,   474,   557,   558,   500,   501,   561,   562,   563,
     398,   417,   646,   398,   575,   500,   501,  4223,    48,   398,
     400,  4227,   398,   615,   568,   398,  4550,   398,   572,   615,
     415,   575,   400,   375,   545,  3361,   659,   124,   658,  3365,
     159,   585,   603,  3369,   107,   657,   590,   159,   159,   593,
     659,   159,   159,   288,   159,   159,   159,   159,   159,   159,
    3386,  4415,   159,  4614,   159,   159,  3294,   606,   474,  3395,
    4614,   159,   659,   545,   159,   121,   159,  4628,   124,   159,
    3241,  3361,  4633,  3409,  4628,  3411,   159,  4638,   599,  4633,
     159,   497,   159,   159,  4638,   159,   610,  3423,  3424,   610,
     611,  4019,   159,   166,   159,   159,   650,   651,  3884,  3885,
     159,   657,   657,  3889,  3890,   202,   375,   638,   353,   375,
     631,   375,   633,   658,   650,   651,   652,   653,   654,   655,
     515,   665,   651,   658,   369,   370,   199,   196,   658,   545,
     658,   187,   658,   658,   599,   658,   658,   658,   659,   655,
     658,   662,   663,   648,   649,   650,   651,   652,   653,   654,
     655,   659,   659,   648,   649,   650,   651,   652,   653,   654,
     655,   234,   218,   590,   261,    56,   657,   659,   658,   658,
     657,  3409,   658,  3411,   659,    66,   659,   658,  4213,   659,
    4136,   235,   658,   599,   657,    76,   658,   658,   568,   658,
    4582,    14,   658,   657,    17,   611,   568,   590,    89,    90,
      91,   568,   659,  4596,  3540,   600,   559,  3543,  3544,  3545,
    3546,   284,   657,    36,   105,   631,   657,   633,   551,    12,
     659,   659,   211,  3559,   499,   568,  4202,    50,    51,   430,
     196,   425,   288,   256,   256,    58,  3407,  3573,  3574,   658,
      63,    64,   658,   659,   659,   388,   662,   663,  3584,  3585,
    3586,   333,   568,   173,   159,   403,    79,   529,   350,  3662,
     115,   116,   117,   118,   119,   488,   363,   364,   529,   529,
    3606,  3607,   369,  4208,   529,    98,  3612,   529,   375,   261,
     261,   665,  3685,   159,  4219,   448,   657,   657,  3659,   657,
     284,   657,  3628,   470,   385,   657,   153,   120,  3639,   657,
     657,  3637,   652,  4259,   658,   243,   129,   130,   131,   185,
     658,  3647,   876,   243,   370,   159,    77,   658,   415,   142,
     143,   665,   658,   568,   200,   665,  3662,   572,   658,   658,
     575,    92,   658,   658,   639,   659,   579,   213,   659,   412,
     585,   280,    48,   658,   417,   590,   169,   657,   593,  3685,
     657,   159,   579,   657,   657,   159,    13,    14,   209,   455,
     456,   457,   458,   459,   460,   461,   189,   222,   223,   224,
     225,   196,   133,    73,    48,   216,   339,  3713,   658,   370,
      56,   657,   256,   256,   207,   375,   209,   159,   264,   265,
      66,   214,   110,   110,   217,  3731,   493,  3733,  3734,  3637,
      76,   261,   261,   657,   633,   650,   651,   560,   659,   560,
    4445,   659,  3748,    89,    90,    91,   292,   240,   579,   242,
     657,   659,   495,   658,   579,   657,   659,   658,   381,   105,
    4465,  3767,  3768,  3769,  3038,   211,   398,   512,   375,   262,
     331,    98,   375,   274,   657,   657,   543,   657,   245,   551,
     245,   658,   658,   658,  4489,   658,   279,   348,    48,   491,
     283,    27,    28,   659,   657,   665,   665,   659,   658,   658,
     658,   658,   129,   657,   375,   230,   579,   332,   579,   334,
     335,   336,   584,   658,   360,    35,   143,   560,   343,   591,
     579,    35,   565,   659,   275,    61,    62,    63,   398,   659,
     658,  3837,   263,   600,   382,    71,   159,   160,   665,   166,
     583,    77,   169,   659,  3850,   196,  3687,    83,  3921,   196,
      86,   196,   276,   256,   256,   182,   657,   119,   124,   657,
     124,   562,   657,   665,   590,   608,   411,   657,   414,   375,
     375,  3944,   413,    77,   110,    21,   665,   200,  3884,  3885,
    3721,   624,   209,  3889,  3890,  4590,   379,   657,   124,   658,
     213,   512,   128,   484,  4520,  3736,   489,   370,   271,   424,
     658,   657,   659,   396,  3745,   398,   657,   234,   469,   340,
     658,  4616,   132,   240,   633,  3921,   657,   472,   132,   412,
     658,   157,   658,   283,   485,   658,    12,   430,   146,   252,
     423,   652,   363,   364,   267,   366,   658,   157,  3944,   659,
     658,   161,   265,   157,   196,    48,    48,   161,    48,   152,
     658,   193,   445,   611,   611,   448,   283,   450,  3964,   657,
     453,   486,   487,   735,   658,    35,  3972,  3973,   740,   292,
     463,   464,   657,   657,   657,   316,   657,  3983,    35,   622,
     473,   201,   475,   622,   657,   331,   547,   201,   605,   124,
     483,   261,   202,   261,   369,    35,   489,   428,   234,   771,
      81,   221,   348,   564,   497,   241,   370,   221,   507,   502,
     503,   504,   142,   659,   658,   787,   657,  4636,   193,   659,
     658,   658,    21,   658,   260,   659,  3300,  3301,   658,   658,
     658,   658,   658,   356,  3308,   339,   658,  3311,  3312,   263,
     425,   659,   535,  4049,   658,  4051,   174,   209,   283,   542,
    4056,  4057,   261,   244,   665,  3329,  4062,  4325,   830,   831,
     657,   833,   834,    48,    48,   285,    48,   417,  4074,  3343,
     657,   285,   657,   657,   846,  3349,  3350,  3351,  3352,   657,
     657,   244,   375,   319,   365,   617,    15,    21,   470,   148,
     659,   418,   370,   586,   339,   422,   172,   382,   529,   658,
     633,   337,   562,   628,   657,   598,   616,   605,    16,   602,
     244,   438,   605,    48,   370,  4383,    48,   610,   657,   446,
     645,   646,   657,   534,  4130,  4131,   657,   454,  4134,   633,
    4398,   659,   658,   550,   658,   658,   658,   480,   657,   485,
     658,   438,   658,   154,   630,    32,  4414,   489,   641,   666,
     658,   658,   395,   382,   570,   135,   392,   135,   370,   157,
     380,   657,   489,     6,   657,   401,   380,  4173,   375,   375,
     942,   658,  4178,   630,   196,   502,   503,    32,   658,    64,
     382,    64,   954,   658,   142,   133,   657,   659,   551,   658,
     605,   129,   244,   153,   382,   663,   416,   382,   657,   153,
     630,   547,   416,   229,  4210,   425,   978,   290,   663,   123,
     666,   425,   261,   261,   369,    54,   571,   142,   564,   663,
     440,   478,   659,  4131,   659,   153,   440,   554,   214,  4497,
     659,   571,   227,    54,   153,   663,   658,   193,   193,  4507,
     193,    48,   571,   479,  4512,   465,   632,   452,   124,   230,
     370,   465,   657,   195,  4183,  4328,   583,   497,   659,  2422,
    2612,  2416,  2418,  3733,  3736,  3729,  2420,  3746,  2816,  2413,
     718,  3740,  4102,  4409,  4211,  2783,  1083,  4410,   605,  3757,
     607,  3748,  3982,  4616,  4580,    48,  2082,  2021,   508,  4557,
    4296,  4559,  3137,   632,   508,  4586,  4494,  4093,  4093,  4376,
     536,   537,   538,  4093,  4572,  4093,  4494,   543,  4093,  4093,
    4151,  4093,  4461,  4402,  4401,  4093,  4093,  4093,  4093,   539,
    4093,  1125,  4328,  4093,   560,   539,  1649,   563,  4111,  1714,
    2342,  3164,  4600,  4601,  1106,  3836,  3559,  4605,  1092,  4348,
    3169,  4030,  4348,  1409,  4422,   559,  3839,  4550,   562,  4481,
    4259,  4357,  4520,  1785,  3761,   542,  1706,  2996,  3296,  3010,
    1715,  2374,  3274,   599,  3286,  4438,  4489,  3320,  3320,  3913,
    4169,  3354,  3696,  4421,  3092,  3498,  3501,    11,  2793,  3493,
    4421,    11,  4149,  1798,  2456,  4227,  4160,  4223,  4062,  3927,
    1162,  1163,  2995,  4154,  2217,  4161,  2445,  2212,  1714,  1171,
    1172,  1173,  1174,  1175,  1176,  1177,  4479,  3899,  2367,   642,
     637,  3644,  1184,  1185,  3275,  1187,  1188,  1781,  1563,  2075,
    1192,  1193,  1559,   659,  1196,  1197,  1198,  1199,  2689,  1201,
    1202,  1726,  4438,  3153,  3554,  1450,  2654,  1209,  1210,  2573,
    1212,  1213,  1214,  1215,  1216,   653,   930,  1219,  1220,  1221,
    1222,  1223,  1224,  1225,  1226,  1227,  1228,  1269,  1230,  1984,
     943,  1233,  1234,  2599,  2489,  2193,  1238,  1568,  2600,  3617,
    1242,  1243,  1244,  4479,  2572,  1203,  3232,  4056,  3369,  1178,
    4057,  3813,  2595,  1255,  1256,  1257,  3503,  3288,  3614,  4233,
    4047,  4440,  1264,  4499,  2093,  4047,   727,  1269,  1071,  1319,
    4506,  2648,  3224,  1275,  1071,  1277,  1278,   888,  2648,  3580,
    4351,  3547,    54,  1071,    13,    14,   550,  1289,  1290,  1291,
    1071,  1293,  1294,  1295,  1296,  1297,  2163,  1299,  1300,  1301,
    1302,  1303,  1304,  1305,  1306,  1518,   631,  1544,  1310,  2164,
    2010,  1313,  3294,  3557,  1425,  4548,  1558,  3591,  3861,  4567,
    4556,  4624,  4638,  4633,  3688,  4561,   974,  3573,     7,    45,
    1159,  2130,  1265,    12,    45,    14,   972,  1495,    17,  1480,
    1482,  2057,  2086,  1441,  2207,  2043,  3540,  1056,    27,    28,
     610,  3110,   920,  4239,  4590,   922,  4205,   539,  4429,  4430,
     539,  4203,   718,   718,   718,    -1,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4614,    58,
    4616,    -1,    -1,    -1,    63,    64,    -1,    -1,  4624,    -1,
      69,    -1,  4628,    -1,    -1,    -1,    -1,  4633,    77,    -1,
     129,    -1,  4638,    -1,    83,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,   143,  4486,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,    -1,    -1,    -1,    -1,    -1,   166,    -1,    -1,
     169,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,   128,
      -1,    -1,    -1,   182,    -1,    -1,  1458,   136,   137,    -1,
      -1,    -1,    -1,    -1,   143,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   151,    -1,    -1,    -1,   155,    -1,   157,    -1,
     209,    -1,    -1,    -1,    -1,    -1,  1488,    -1,    -1,   168,
    1492,    -1,    -1,    -1,    -1,    -1,  1498,    -1,    -1,    -1,
      27,    28,    -1,  1505,    -1,   234,    -1,    -1,    -1,    -1,
      -1,   240,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    61,    62,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,
      77,    -1,    -1,   232,   283,   234,    83,    -1,    -1,    86,
      -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   260,    -1,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,
      -1,   128,    -1,    -1,   283,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      14,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
     319,    -1,    36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    51,   337,    -1,
      -1,    -1,   341,    -1,    58,    -1,    -1,    14,    -1,    63,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,    -1,   418,
      -1,    -1,    -1,   422,    -1,    -1,    -1,    -1,    -1,    -1,
     379,    -1,    -1,    -1,    98,    -1,   385,   234,    -1,   438,
      -1,    -1,    -1,   392,   241,    -1,    -1,   446,  4093,   398,
      -1,    -1,   401,    -1,   551,   454,   120,    -1,    -1,    -1,
      -1,    -1,    -1,   260,    -1,   129,   130,   131,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   273,    -1,   142,   143,
      -1,    98,    -1,    -1,   433,    -1,    -1,   584,    -1,    -1,
     489,   155,    -1,    -1,   591,    -1,    -1,    -1,   447,   448,
     449,   450,    -1,   502,   503,   169,    -1,    -1,    -1,    -1,
      -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   319,    -1,    -1,   189,   143,    -1,    -1,    -1,
     479,  4176,  4177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     337,    -1,    -1,   207,  1816,   209,    -1,    -1,  1820,   166,
     214,    -1,   169,   217,    -1,   554,    -1,    -1,  1830,    -1,
    1832,    -1,    -1,    -1,    -1,   182,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   240,    -1,   242,    -1,
      -1,    -1,    -1,    -1,   583,    -1,    -1,   536,   537,   538,
      -1,    -1,   209,    -1,   543,   392,    -1,    -1,   262,    -1,
      -1,  1873,    -1,    -1,   401,    -1,   605,    -1,   607,    -1,
      -1,   560,    -1,    -1,   563,   279,    -1,   234,    -1,   283,
      -1,    -1,    -1,   240,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   586,    -1,    -1,
      -1,    -1,    -1,   740,    -1,    -1,  1918,  1919,  1920,    -1,
     599,    -1,    -1,    -1,    -1,    -1,    -1,   606,  4303,  4304,
      -1,  1933,    -1,    -1,    -1,    -1,   283,    -1,    -1,  1941,
      -1,    -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,    -1,
    4325,    -1,   479,    -1,   633,    -1,    -1,   636,  1960,    -1,
     787,     7,    -1,    -1,  1966,    -1,    12,  1969,    14,  1971,
      -1,    -1,    -1,    -1,    -1,  1977,    -1,  1979,  1980,    -1,
      -1,    27,    28,    -1,   663,   379,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   396,    -1,   398,    -1,    -1,   834,  4383,   536,
     537,   538,    58,    -1,    -1,    -1,   543,    63,   412,    -1,
      -1,    -1,    -1,  4398,    -1,    -1,    -1,    -1,    -1,   423,
      -1,    77,    -1,   560,    -1,    -1,   563,    83,    -1,  4414,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,
      -1,   445,    -1,    -1,   448,    -1,   450,    -1,  2060,   453,
      -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,  2070,   463,
     464,   418,   599,  4448,    -1,    -1,    -1,    -1,   124,   473,
      -1,   475,   128,    -1,    -1,  4460,  4461,    -1,    -1,   483,
     136,   438,    -1,    -1,    -1,   489,    -1,   143,    -1,   446,
      -1,    -1,    -1,   497,    -1,   151,  2108,   454,   502,   503,
     504,   157,    -1,    -1,    -1,   942,    -1,    -1,    -1,    -1,
      -1,    -1,  4497,    -1,    -1,    -1,    -1,   954,    -1,    -1,
     657,    -1,  4507,    -1,    -1,    -1,    -1,  4512,    -1,    -1,
      -1,   535,   489,    -1,    -1,   191,    -1,    -1,   542,    -1,
      -1,   978,    -1,    -1,    -1,   502,   503,    -1,    -1,    -1,
    4535,    -1,  4537,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2172,    -1,    -1,    -1,    -1,    -1,    -1,  2179,    -1,    -1,
    4555,    -1,  4557,    -1,  4559,    -1,    -1,    -1,   234,    -1,
      -1,    -1,   586,    -1,    -1,   241,    -1,  4572,    -1,    -1,
      -1,    -1,    -1,    -1,   598,    -1,    -1,   554,   602,  4584,
    4585,   605,    -1,    -1,   260,    -1,   610,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4600,  4601,    -1,    -1,    -1,
    4605,    -1,    -1,    -1,   231,    -1,   583,   283,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   641,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   605,    -1,
     607,    -1,    -1,   657,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   319,    -1,    -1,    -1,    -1,    -1,  1106,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   337,    -1,    -1,    -1,   341,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1162,  1163,    -1,    -1,   385,
      -1,    -1,    -1,    -1,  1171,  1172,   392,    -1,  1175,  1176,
    1177,    -1,    -1,    -1,    -1,   401,    -1,  1184,  1185,    -1,
    1187,  1188,    -1,    -1,    -1,  1192,    -1,    -1,    -1,  1196,
    1197,  1198,  1199,    -1,  1201,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1209,  1210,    -1,  1212,  1213,    -1,    -1,    -1,
    2392,    -1,  1219,  1220,    -1,    -1,  1223,  1224,  1225,  1226,
    1227,  1228,   448,  1230,    -1,    -1,  1233,  1234,    -1,    -1,
      -1,  1238,    -1,    -1,    -1,  1242,  1243,  1244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1255,  1256,
    1257,    -1,    -1,   479,    -1,    -1,    -1,  1264,    -1,    -1,
      -1,    -1,  1269,    -1,    -1,   442,   443,    -1,  1275,    -1,
    1277,  1278,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2468,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2477,  2478,    -1,    -1,    -1,
      -1,    -1,  2484,    -1,    -1,  2487,  1313,    -1,    -1,    -1,
     536,   537,   538,    -1,    -1,    -1,    -1,   543,  2500,  2501,
      -1,  2503,    -1,    -1,  2506,  2507,  2508,  2509,  2510,    -1,
      -1,  2513,    -1,    -1,   560,    -1,    -1,   563,    -1,    -1,
    2522,    -1,    -1,    -1,    -1,    -1,  2528,    -1,  2530,    -1,
    2532,  2533,    -1,  2535,  2536,    -1,    -1,    -1,  2540,  2541,
    2542,    -1,    -1,    -1,  2546,  2547,  2548,    -1,  2550,    -1,
    2552,    -1,  2554,   599,  2556,    -1,  2558,    -1,    -1,    -1,
     606,  2563,    -1,    -1,    -1,    -1,    -1,    34,    35,    -1,
      -1,    -1,    -1,    40,    -1,    42,    -1,    44,    45,    -1,
      -1,    -1,    -1,  2585,    -1,    -1,  2588,   633,    -1,    -1,
     636,    -1,  2594,    -1,    -1,    62,    -1,  2599,  2600,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   111,    -1,    -1,   114,    -1,    27,
      28,    -1,    -1,    -1,    -1,   122,    -1,    -1,    -1,    -1,
      -1,  1488,    -1,    -1,    -1,  1492,    -1,    35,    36,    -1,
      -1,    -1,    -1,    -1,   141,    -1,    -1,    -1,  1505,    -1,
      -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,
      -1,   158,    -1,    61,    62,    -1,    -1,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    72,    83,    -1,    -1,    86,    -1,
      -1,    -1,    -1,  2715,    -1,    -1,    -1,    -1,    -1,   186,
      -1,   188,    -1,    -1,    27,    28,  2728,    -1,    96,    -1,
      98,    -1,   110,    -1,    -1,    -1,    -1,   204,   205,    -1,
     108,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,
     128,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    62,
      63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,
      -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,   245,   157,
      83,    -1,    -1,    86,    -1,    -1,    -1,    -1,   156,   157,
      -1,   258,    -1,    -1,   162,    -1,    -1,   165,    -1,    -1,
      -1,    -1,    -1,  2805,    -1,    -1,    -1,   110,    -1,    -1,
     277,    -1,    -1,    -1,    -1,  2817,  2818,    -1,    -1,   286,
     287,   124,   289,    -1,    -1,   128,    -1,    -1,    -1,   197,
      -1,   199,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,   210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   157,    -1,   234,    -1,   325,   326,
     327,    -1,    -1,   241,    -1,   233,   234,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   344,   345,   346,
      -1,    -1,   260,    -1,   351,    -1,    -1,   354,    -1,    -1,
      -1,   259,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   372,   373,    -1,    -1,    -1,
      -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,   241,   406,
     407,   319,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,   337,
      -1,    -1,    -1,    -1,    -1,   432,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2975,  2976,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1816,
      -1,    -1,    -1,  1820,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1832,    -1,    -1,    -1,    -1,
     378,    -1,    -1,    -1,   392,    -1,   319,    -1,    -1,    -1,
      -1,    -1,    -1,   401,    -1,  3027,   493,    -1,  3030,    -1,
     497,    -1,    -1,    -1,   337,    -1,    -1,   405,    -1,    -1,
      -1,    -1,   509,    -1,    -1,    -1,    -1,    -1,   416,   417,
    3052,  3053,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3074,   441,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3083,    -1,  3085,    -1,  3087,    -1,    -1,    -1,   392,
      -1,  1918,  1919,  1920,    -1,    -1,    -1,    -1,   401,    -1,
      -1,   479,   569,  3105,    -1,   572,    -1,    -1,   575,   576,
     577,   578,    -1,    -1,  1941,  3117,    -1,    -1,    -1,    -1,
    3122,    -1,    -1,    -1,    -1,    -1,   494,    -1,    -1,    -1,
      -1,    -1,    -1,  1960,    -1,    -1,    -1,    -1,    -1,   507,
      -1,    -1,  1969,    -1,  1971,    -1,    -1,    -1,    -1,    -1,
      -1,   618,   619,    -1,    -1,    -1,    -1,    -1,   536,   537,
     538,    -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,    -1,
    3172,   539,    -1,    -1,    -1,   543,   479,    -1,    -1,   646,
    3182,    -1,   560,    -1,    -1,   563,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   562,  3197,  3198,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3221,
    3222,   599,    -1,    -1,  3226,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   536,   537,   538,    -1,    -1,    -1,    -1,
     543,    -1,    -1,  2070,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   620,    -1,    -1,    -1,    -1,   560,    -1,   627,
     563,  3263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2108,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   599,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2172,    -1,    -1,    -1,    -1,
      -1,    -1,  2179,    -1,    -1,    -1,  3358,  3359,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3396,  3397,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3429,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3453,    -1,  3455,    -1,    -1,  3458,  3459,    -1,  3461,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3470,    -1,
      -1,    -1,    -1,  3475,    -1,    -1,  3478,    -1,  3480,  3481,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3547,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2392,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2477,  2478,    -1,    -1,    -1,    -1,    -1,  2484,    -1,    -1,
    2487,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2500,  2501,    -1,  2503,    -1,    -1,  2506,
    2507,  2508,  2509,  2510,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2522,    -1,    -1,    -1,    -1,
      -1,  2528,    -1,  2530,    -1,  2532,  2533,    -1,  2535,    -1,
      -1,    -1,    -1,  2540,  2541,  2542,    -1,    -1,    -1,  2546,
    2547,  2548,    -1,  2550,    -1,  2552,    -1,  2554,    -1,  2556,
      -1,  2558,    -1,    -1,    -1,    -1,  2563,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2594,    -1,    -1,
      -1,    -1,  2599,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3848,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3865,    -1,    -1,    -1,    -1,  3870,    -1,
      -1,    -1,  3874,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2715,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2728,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4003,    -1,  4005,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4030,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4093,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4169,  4170,    -1,
      -1,    -1,    -1,    -1,  4176,  4177,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3027,    -1,    -1,  3030,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3052,  3053,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3074,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3083,    -1,  3085,    -1,
    3087,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3105,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4289,    -1,  4291,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4301,
      -1,  4303,  4304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4325,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4333,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3182,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3197,  3198,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4381,
      -1,  4383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3221,  3222,  4398,  4399,    -1,  3226,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4414,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3263,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4447,  4448,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4460,  4461,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4473,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4497,    -1,    -1,    -1,    -1,
      -1,    -1,  4504,    -1,    -1,  4507,    -1,    -1,    -1,    -1,
    4512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4528,    -1,    -1,    -1,
      -1,  3358,  3359,  4535,    -1,  4537,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4550,    -1,
      -1,    -1,    -1,  4555,    -1,  4557,    -1,  4559,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4572,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4584,  4585,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4600,  4601,
      -1,    -1,  3429,  4605,    -1,    -1,    -1,    -1,    -1,  4611,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3453,    -1,  3455,    -1,
      -1,  3458,  3459,    -1,    -1,    -1,    -1,  4639,    -1,    -1,
      -1,    -1,    -1,  3470,    -1,    -1,    -1,    -1,  3475,    -1,
      -1,  3478,    -1,  3480,  3481,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    16,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      -1,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,    -1,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
      -1,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,    -1,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,    -1,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,    -1,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,    -1,   221,
      -1,  3848,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,  3865,   241,
      -1,    -1,    -1,  3870,   246,    -1,    -1,  3874,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,    -1,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,    -1,   317,   318,   319,   320,    -1,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1,   371,
      -1,   373,   374,    -1,   376,   377,  4003,    -1,  4005,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,   393,    -1,    -1,    -1,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,    -1,    -1,    -1,    -1,
      -1,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,    -1,    -1,   449,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,    -1,    -1,   465,    -1,    -1,   468,   469,   470,    -1,
     472,    -1,    -1,    -1,   476,   477,   478,   479,   480,   481,
     482,    -1,   484,   485,    -1,   487,    -1,    -1,    -1,    -1,
     492,   493,   494,    -1,    -1,    -1,    -1,   499,    -1,    -1,
      -1,    -1,    -1,    -1,   506,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,    -1,   536,   537,   538,   539,    -1,    -1,
      -1,   543,  4169,  4170,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,    -1,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,    -1,    -1,    -1,   587,   588,   589,    -1,   591,
     592,    -1,   594,   595,    -1,    -1,    -1,    -1,    -1,   601,
      -1,    -1,   604,    -1,    -1,    -1,   608,   609,    -1,    -1,
      -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,
      -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,
      -1,    -1,    -1,    -1,   636,   637,    -1,    -1,   640,    -1,
     642,   643,    -1,    -1,   646,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4289,    -1,  4291,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4301,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4399,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
    4447,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,  4504,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,  4528,    -1,   100,   101,   102,   103,    -1,   105,   106,
     107,    -1,   109,   110,   111,   112,   113,   114,    -1,    -1,
      -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,   170,    -1,   172,   173,   174,   175,   176,
     177,   178,   179,   180,  4611,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,  4639,   210,    -1,   212,    -1,   214,   215,    -1,
     217,   218,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,   229,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,   240,   241,   242,   243,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,   266,
     267,    -1,   269,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
      -1,   468,   469,   470,    -1,   472,    -1,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,    -1,
     487,   488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
     507,   508,    -1,   510,   511,   512,   513,   514,    -1,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,   568,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,   580,   581,   582,    -1,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,    -1,
     597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,
      -1,   608,   609,    -1,    -1,   612,   613,   614,   615,   616,
     617,    -1,    -1,   620,   621,    -1,   623,   624,    -1,   626,
     627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,   640,   641,   642,   643,    -1,    -1,   646,
      -1,    -1,    -1,   650,   651,    -1,    -1,    -1,    -1,   656,
     657,    -1,    -1,   660,   661,    -1,    -1,   664,   665,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,   212,    -1,   214,   215,
      -1,   217,   218,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,   240,   241,   242,   243,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,   269,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,    -1,
      -1,    -1,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
      -1,    -1,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,    -1,   373,   374,   375,
     376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,    -1,
     416,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,    -1,   468,   469,   470,    -1,   472,    -1,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
      -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,
     506,   507,   508,    -1,   510,   511,   512,   513,   514,    -1,
      -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,    -1,    -1,   563,   564,   565,
     566,    -1,   568,   569,   570,    -1,   572,   573,   574,   575,
      -1,    -1,    -1,    -1,    -1,   581,   582,    -1,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
      -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,
     606,    -1,   608,   609,    -1,    -1,   612,   613,   614,   615,
     616,   617,    -1,    -1,   620,   621,    -1,   623,   624,    -1,
     626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,   640,   641,   642,   643,    -1,    -1,
     646,    -1,    -1,    -1,   650,   651,    -1,    -1,    -1,    -1,
     656,   657,    -1,    -1,   660,   661,    -1,    -1,   664,   665,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    -1,    -1,   100,   101,   102,   103,    -1,
     105,   106,   107,    -1,   109,   110,   111,   112,   113,   114,
      -1,    -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,   170,    -1,   172,   173,   174,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,    -1,    -1,    -1,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,   212,    -1,   214,
     215,    -1,   217,   218,    -1,   220,   221,    -1,    -1,    -1,
     225,   226,   227,   228,   229,    -1,   231,   232,   233,    -1,
      -1,   236,    -1,    -1,    -1,   240,   241,   242,   243,    -1,
      -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,
      -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,
      -1,    -1,   267,    -1,   269,   270,   271,    -1,    -1,    -1,
      -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,
     285,    -1,    -1,   288,    -1,    -1,    -1,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
      -1,    -1,    -1,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,    -1,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,    -1,   373,   374,
      -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
      -1,   416,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,    -1,
     465,   466,    -1,   468,   469,   470,    -1,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,
     505,   506,   507,   508,    -1,   510,   511,   512,   513,   514,
      -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,   570,    -1,   572,   573,   574,
     575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,
      -1,   606,    -1,   608,   609,    -1,    -1,   612,   613,   614,
     615,   616,   617,    -1,    -1,   620,   621,    -1,   623,   624,
      -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,
      -1,   636,   637,   638,    -1,   640,   641,   642,   643,    -1,
      -1,   646,    -1,    -1,    -1,   650,   651,   652,    -1,    -1,
      -1,   656,   657,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    -1,    -1,   100,   101,   102,   103,
      -1,   105,   106,   107,    -1,   109,   110,   111,   112,   113,
     114,    -1,    -1,    -1,    -1,   119,   120,   121,    -1,    -1,
     124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,   212,    -1,
     214,   215,    -1,   217,   218,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,   229,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,   240,   241,   242,   243,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,   269,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,   288,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,   568,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,   612,   613,
     614,   615,   616,   617,    -1,    -1,   620,   621,    -1,   623,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
      -1,    -1,   646,    -1,    -1,    -1,   650,   651,   652,    -1,
      -1,    -1,   656,   657,    -1,    -1,   660,   661,    -1,    -1,
     664,   665,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    -1,    -1,   100,   101,   102,
     103,    -1,   105,   106,   107,    -1,   109,   110,   111,   112,
     113,   114,    -1,    -1,    -1,    -1,   119,   120,   121,    -1,
      -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,   212,
      -1,   214,   215,    -1,   217,   218,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,   229,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,   240,   241,   242,
     243,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,   269,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,   288,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,
     333,    -1,    -1,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,    -1,    -1,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,   374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,    -1,   416,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,    -1,   468,   469,   470,    -1,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,
     503,    -1,   505,   506,   507,   508,    -1,   510,   511,   512,
     513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,
      -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,
      -1,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,    -1,    -1,
     563,   564,   565,   566,    -1,   568,   569,   570,    -1,   572,
     573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,
      -1,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,
      -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,   612,
     613,   614,   615,   616,   617,    -1,    -1,   620,   621,    -1,
     623,   624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,    -1,    -1,   646,    -1,    -1,    -1,   650,   651,    -1,
      -1,    -1,    -1,   656,   657,    -1,    -1,   660,   661,    -1,
      -1,   664,   665,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    -1,    -1,   100,   101,
     102,   103,    -1,   105,   106,   107,    -1,   109,   110,   111,
     112,   113,   114,    -1,    -1,    -1,    -1,   119,   120,   121,
      -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,   196,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
     212,    -1,   214,   215,    -1,   217,   218,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,   229,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,   240,   241,
     242,   243,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,   269,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,   288,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
      -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,    -1,   468,   469,   470,    -1,
     472,    -1,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,
      -1,   503,    -1,   505,   506,   507,   508,    -1,   510,   511,
     512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,   568,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,    -1,   597,   598,    -1,    -1,   601,
      -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,
     612,   613,   614,   615,   616,   617,    -1,    -1,   620,   621,
      -1,   623,   624,    -1,   626,   627,   628,   629,    -1,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,
     642,   643,    -1,    -1,   646,    -1,    -1,    -1,   650,   651,
      -1,    -1,    -1,    -1,   656,   657,    -1,    -1,   660,   661,
      -1,    -1,   664,   665,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    -1,    -1,   100,
     101,   102,   103,    -1,   105,   106,   107,    -1,   109,   110,
     111,   112,   113,   114,    -1,    -1,    -1,    -1,   119,   120,
     121,    -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,   170,
      -1,   172,   173,   174,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
      -1,    -1,    -1,   194,   195,   196,   197,    -1,   199,    -1,
     201,    -1,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,   212,    -1,   214,   215,    -1,   217,   218,    -1,   220,
     221,    -1,    -1,    -1,   225,   226,   227,   228,   229,    -1,
     231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,   240,
     241,   242,   243,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,
      -1,    -1,   263,   264,    -1,    -1,   267,    -1,   269,   270,
     271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,   288,    -1,    -1,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,    -1,    -1,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,    -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,   414,    -1,   416,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,    -1,   463,    -1,   465,   466,    -1,   468,   469,   470,
      -1,   472,    -1,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,    -1,   487,   488,    -1,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,
      -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,   510,
     511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,
     521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,   532,    -1,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
      -1,    -1,   563,   564,   565,   566,    -1,   568,   569,   570,
      -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,
     581,   582,    -1,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,    -1,   597,   598,    -1,    -1,
     601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,
      -1,   612,   613,   614,   615,   616,   617,    -1,    -1,   620,
     621,    -1,   623,   624,    -1,   626,   627,   628,   629,    -1,
      -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,
     641,   642,   643,    -1,    -1,   646,    -1,    -1,    -1,   650,
     651,    -1,    -1,    -1,    -1,   656,   657,    -1,    -1,   660,
     661,    -1,    -1,   664,   665,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    -1,    -1,
     100,   101,   102,   103,    -1,   105,   106,   107,    -1,   109,
     110,   111,   112,   113,   114,    -1,    -1,    -1,    -1,   119,
     120,   121,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,   212,    -1,   214,   215,    -1,   217,   218,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
     240,   241,   242,   243,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,   269,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,   288,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,    -1,    -1,    -1,   328,   329,
     330,   331,   332,   333,    -1,    -1,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,    -1,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,    -1,   373,   374,    -1,   376,   377,   378,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,   414,    -1,   416,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,    -1,   463,    -1,   465,   466,    -1,   468,   469,
     470,    -1,   472,    -1,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,    -1,   487,   488,    -1,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,
      -1,    -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,
     510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,
     520,   521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,   532,    -1,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
     570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,
      -1,   581,   582,    -1,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,    -1,   597,   598,    -1,
      -1,   601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,
      -1,    -1,   612,   613,   614,   615,   616,   617,    -1,    -1,
     620,   621,    -1,   623,   624,    -1,   626,   627,   628,   629,
      -1,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,
     640,   641,   642,   643,    -1,    -1,   646,    -1,    -1,    -1,
     650,   651,    -1,    -1,    -1,    -1,   656,   657,    -1,    -1,
     660,   661,    -1,    -1,   664,   665,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    95,    96,    97,    -1,
      -1,   100,   101,   102,   103,    -1,   105,   106,   107,    -1,
     109,   110,   111,   112,   113,   114,    -1,    -1,    -1,    -1,
     119,   120,   121,    -1,    -1,   124,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,   212,    -1,   214,   215,    -1,   217,   218,
      -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,   228,
     229,    -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,
      -1,   240,   241,   242,   243,    -1,    -1,   246,    -1,    -1,
      -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,
      -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,
     269,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,
      -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,   288,
      -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,    -1,    -1,    -1,   328,
     329,   330,   331,   332,   333,    -1,    -1,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,    -1,    -1,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,    -1,   373,   374,    -1,   376,   377,   378,
      -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,   414,    -1,   416,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,    -1,   463,    -1,   465,   466,    -1,   468,
     469,   470,    -1,   472,    -1,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,    -1,   487,   488,
      -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,    -1,
     499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,   508,
      -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,
      -1,   520,   521,   522,    -1,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,   532,    -1,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,    -1,   563,   564,   565,   566,    -1,   568,
     569,   570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,
      -1,    -1,   581,   582,    -1,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,    -1,   597,   598,
      -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,   608,
     609,    -1,    -1,   612,   613,   614,   615,   616,   617,    -1,
      -1,   620,   621,    -1,   623,   624,    -1,   626,   627,   628,
     629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,
      -1,   640,   641,   642,   643,    -1,    -1,   646,    -1,    -1,
      -1,   650,   651,    -1,    -1,    -1,    -1,   656,   657,    -1,
      -1,   660,   661,    -1,    -1,   664,   665,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      -1,    -1,   100,   101,   102,   103,    -1,   105,   106,   107,
      -1,   109,   110,   111,   112,   113,   114,    -1,    -1,    -1,
      -1,   119,   120,   121,    -1,    -1,   124,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,   212,    -1,   214,   215,    -1,   217,
     218,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,   240,   241,   242,   243,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,   269,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
     288,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,    -1,    -1,    -1,
     328,   329,   330,   331,   332,   333,    -1,    -1,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,    -1,    -1,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,   373,   374,    -1,   376,   377,
     378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,    -1,
     468,   469,   470,    -1,   472,    -1,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,    -1,   487,
     488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
      -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,
     508,    -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,
      -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,    -1,    -1,   563,   564,   565,   566,    -1,
     568,   569,   570,    -1,   572,   573,   574,   575,    -1,    -1,
      -1,    -1,    -1,   581,   582,    -1,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,    -1,   597,
     598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,
     608,   609,    -1,    -1,   612,   613,   614,   615,   616,   617,
      -1,    -1,   620,   621,    -1,   623,   624,    -1,   626,   627,
     628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,    -1,    -1,   646,    -1,
      -1,    -1,   650,   651,    -1,    -1,    -1,    -1,   656,   657,
      -1,    -1,   660,   661,    -1,    -1,   664,   665,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    -1,    -1,   100,   101,   102,   103,    -1,   105,   106,
     107,    -1,   109,   110,   111,   112,   113,   114,    -1,    -1,
      -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,   170,    -1,   172,   173,   174,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,   212,    -1,   214,   215,    -1,
     217,   218,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,   229,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,   240,   241,   242,   243,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,
     267,    -1,   269,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
      -1,   468,   469,   470,    -1,   472,    -1,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,    -1,
     487,   488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
     507,   508,    -1,   510,   511,   512,   513,   514,    -1,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,   568,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,    -1,   581,   582,    -1,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,    -1,
     597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,
      -1,   608,   609,    -1,    -1,   612,   613,   614,   615,   616,
     617,    -1,    -1,   620,   621,    -1,   623,   624,    -1,   626,
     627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,   640,   641,   642,   643,    -1,    -1,   646,
      -1,    -1,    -1,   650,   651,    -1,    -1,    -1,    -1,   656,
     657,    -1,    -1,   660,   661,    -1,    -1,   664,   665,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    -1,    -1,   100,   101,   102,   103,    -1,   105,
     106,   107,    -1,   109,   110,   111,   112,   113,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,    -1,   172,   173,   174,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,   212,    -1,   214,   215,
      -1,   217,   218,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,   240,   241,   242,   243,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,   269,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,    -1,
      -1,    -1,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
      -1,    -1,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,    -1,   373,   374,    -1,
     376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,    -1,
     416,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,    -1,   468,   469,   470,    -1,   472,    -1,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
      -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,
     506,   507,   508,    -1,   510,   511,   512,   513,   514,    -1,
      -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,    -1,    -1,   563,   564,   565,
     566,    -1,   568,   569,   570,    -1,   572,   573,   574,   575,
      -1,    -1,    -1,    -1,    -1,   581,   582,    -1,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
      -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,
     606,    -1,   608,   609,    -1,    -1,   612,   613,   614,   615,
     616,   617,    -1,    -1,   620,   621,    -1,   623,   624,    -1,
     626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,   640,   641,   642,   643,    -1,    -1,
     646,    -1,    -1,    -1,   650,   651,    -1,    -1,    -1,    -1,
     656,   657,    -1,    -1,   660,   661,    -1,    -1,   664,   665,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    -1,    -1,   100,   101,   102,   103,    -1,
     105,   106,   107,    -1,   109,   110,   111,   112,   113,   114,
      -1,    -1,    -1,    -1,   119,   120,   121,    -1,    -1,   124,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,   170,    -1,   172,   173,   174,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,    -1,    -1,    -1,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,   212,    -1,   214,
     215,    -1,   217,   218,    -1,   220,   221,    -1,    -1,    -1,
     225,   226,   227,   228,   229,    -1,   231,   232,   233,    -1,
      -1,   236,    -1,    -1,    -1,   240,   241,   242,   243,    -1,
      -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,
      -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,
      -1,    -1,   267,    -1,   269,   270,   271,    -1,    -1,    -1,
      -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,
     285,    -1,    -1,   288,    -1,    -1,    -1,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
      -1,    -1,    -1,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,    -1,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,    -1,   373,   374,
      -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
      -1,   416,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,    -1,
     465,   466,    -1,   468,   469,   470,    -1,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,
     505,   506,   507,   508,    -1,   510,   511,   512,   513,   514,
      -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,   570,    -1,   572,   573,   574,
     575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,
      -1,   606,    -1,   608,   609,    -1,    -1,   612,   613,   614,
     615,   616,   617,    -1,    -1,   620,   621,    -1,   623,   624,
      -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,
      -1,   636,   637,   638,    -1,   640,   641,   642,   643,    -1,
      -1,   646,    -1,    -1,    -1,   650,   651,    -1,    -1,    -1,
      -1,   656,   657,    -1,    -1,   660,   661,    -1,    -1,   664,
     665,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    -1,    -1,   100,   101,   102,   103,
      -1,   105,   106,   107,    -1,   109,   110,   111,   112,   113,
     114,    -1,    -1,    -1,    -1,   119,   120,   121,    -1,    -1,
     124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,   212,    -1,
     214,   215,    -1,   217,   218,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,   229,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,   240,   241,   242,   243,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,   269,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,   288,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,   568,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,   612,   613,
     614,   615,   616,   617,    -1,    -1,   620,   621,    -1,   623,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
      -1,    -1,   646,    -1,    -1,    -1,   650,   651,    -1,    -1,
      -1,    -1,   656,   657,    -1,    -1,   660,   661,    -1,    -1,
     664,   665,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    -1,    -1,   100,   101,   102,
     103,    -1,   105,   106,   107,    -1,   109,   110,   111,   112,
     113,   114,    -1,    -1,    -1,    -1,   119,   120,   121,    -1,
      -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,   212,
      -1,   214,   215,    -1,   217,   218,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,   229,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,   240,   241,   242,
     243,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,   269,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,   288,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,
     333,    -1,    -1,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,    -1,    -1,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,   374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,    -1,   416,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,    -1,   468,   469,   470,    -1,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,
     503,    -1,   505,   506,   507,   508,    -1,   510,   511,   512,
     513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,
      -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,
      -1,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,    -1,    -1,
     563,   564,   565,   566,    -1,   568,   569,   570,    -1,   572,
     573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,
      -1,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,
      -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,   612,
     613,   614,   615,   616,   617,    -1,    -1,   620,   621,    -1,
     623,   624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,    -1,    -1,   646,    -1,    -1,    -1,   650,   651,    -1,
      -1,    -1,    -1,   656,   657,    -1,    -1,   660,   661,    -1,
      -1,   664,   665,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    -1,    -1,   100,   101,
     102,   103,    -1,   105,   106,   107,    -1,   109,   110,   111,
     112,   113,   114,    -1,    -1,    -1,    -1,   119,   120,   121,
      -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
     212,    -1,   214,   215,    -1,   217,   218,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,   229,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,   240,   241,
     242,   243,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,   269,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,   288,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,    -1,   369,   370,   371,
      -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,    -1,   468,   469,   470,    -1,
     472,    -1,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,
      -1,   503,    -1,   505,   506,   507,   508,    -1,   510,   511,
     512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,   568,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,    -1,   597,   598,    -1,    -1,   601,
      -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,
     612,   613,   614,   615,   616,   617,    -1,    -1,   620,   621,
      -1,   623,   624,    -1,   626,   627,   628,   629,    -1,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,
     642,   643,    -1,    -1,   646,    -1,    -1,    -1,   650,   651,
      -1,    -1,    -1,    -1,   656,   657,    -1,    -1,   660,   661,
      -1,    -1,   664,   665,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    -1,    -1,   100,
     101,   102,   103,    -1,   105,   106,   107,    -1,   109,   110,
     111,   112,   113,   114,    -1,    -1,    -1,    -1,   119,   120,
     121,    -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,   170,
      -1,   172,   173,   174,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
      -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,   212,    -1,   214,   215,    -1,   217,   218,    -1,   220,
     221,    -1,    -1,    -1,   225,   226,   227,   228,   229,    -1,
     231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,   240,
     241,   242,   243,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,
      -1,    -1,   263,   264,    -1,    -1,   267,    -1,   269,   270,
     271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,   288,    -1,    -1,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,    -1,    -1,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,    -1,   369,   370,
     371,    -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,   414,    -1,   416,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,    -1,   463,    -1,   465,   466,    -1,   468,   469,   470,
      -1,   472,    -1,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,    -1,   487,   488,    -1,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,
      -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,   510,
     511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,
     521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,   532,    -1,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
      -1,    -1,   563,   564,   565,   566,    -1,   568,   569,   570,
      -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,
     581,   582,    -1,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,    -1,   597,   598,    -1,    -1,
     601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,
      -1,   612,   613,   614,   615,   616,   617,    -1,    -1,   620,
     621,    -1,   623,   624,    -1,   626,   627,   628,   629,    -1,
      -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,
     641,   642,   643,    -1,    -1,   646,    -1,    -1,    -1,   650,
     651,    -1,    -1,    -1,    -1,   656,   657,    -1,    -1,   660,
     661,    -1,    -1,   664,   665,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,   218,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,   288,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,    -1,   317,   318,   319,
     320,    -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,
     330,   331,   332,   333,    -1,    -1,   336,   337,    -1,   339,
      -1,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,    -1,    -1,   358,   359,
     360,   361,   362,    -1,    -1,    -1,   366,   367,    -1,   369,
     370,   371,    -1,   373,   374,    -1,   376,   377,   378,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   391,   392,   393,    -1,   395,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
     410,    -1,   412,   413,   414,    -1,   416,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,    -1,   449,
     450,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,    -1,   463,    -1,   465,   466,    -1,   468,   469,
     470,    -1,   472,    -1,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,    -1,   487,   488,    -1,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,
      -1,    -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,
     510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,
     520,   521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,   532,    -1,   534,   535,   536,   537,   538,   539,
      -1,    -1,   542,   543,    -1,    -1,   546,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
     570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,
      -1,   581,   582,    -1,    -1,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,    -1,   597,   598,    -1,
      -1,   601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,
      -1,    -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,
     620,    -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,
      -1,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,
     640,   641,   642,   643,    -1,    -1,   646,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,   664,   665,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,   185,   186,
      -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,   198,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,
     217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,   234,    -1,   236,
      -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,   261,    -1,   263,   264,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,   273,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,    -1,
     317,   318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,    -1,   339,    -1,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,    -1,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,   366,
     367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,    -1,   410,    -1,   412,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,    -1,   449,   450,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
      -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,    -1,
     487,   488,   489,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
     507,   508,    -1,   510,   511,   512,   513,   514,   515,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,
     537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,    -1,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,
     587,   588,   589,    -1,   591,   592,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,
      -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,
     617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,
     627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,   640,   641,   642,   643,    -1,    -1,   646,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,   665,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,   198,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
     234,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,   261,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
      -1,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,    -1,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,   515,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,    -1,    -1,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,   586,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
      -1,    -1,   646,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,   665,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,   144,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,   185,   186,    -1,    -1,   189,   190,
      -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,
     221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,
     241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,
      -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,
     271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
      -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,
     371,    -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     391,   392,   393,    -1,   395,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,    -1,   410,
      -1,   412,   413,   414,    -1,   416,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,    -1,   449,   450,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,    -1,   463,    -1,   465,   466,    -1,   468,   469,   470,
      -1,   472,    -1,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,    -1,   487,   488,   489,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,
      -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,   510,
     511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,
     521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,   532,    -1,   534,   535,   536,   537,   538,   539,    -1,
      -1,   542,   543,    -1,    -1,   546,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,   559,   560,
      -1,    -1,   563,   564,   565,   566,    -1,    -1,   569,   570,
      -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,
     581,   582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,
     591,   592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
     601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,
      -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,
      -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,
      -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,
     641,   642,   643,    -1,    -1,   646,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,   657,    15,    16,    -1,
     661,    -1,    20,    -1,   665,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,    -1,   317,
     318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,
     328,   329,   330,   331,   332,   333,    -1,    -1,   336,   337,
      -1,   339,    -1,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,
     358,   359,   360,   361,   362,    -1,    -1,    -1,   366,   367,
      -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,
     378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,    -1,   410,    -1,   412,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
      -1,   449,   450,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,    -1,
     468,   469,   470,    -1,   472,    -1,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,    -1,   487,
     488,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
      -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,
     508,    -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,
      -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,   537,
     538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,    -1,    -1,   563,   564,   565,   566,    -1,
      -1,   569,   570,    -1,   572,   573,   574,   575,    -1,    -1,
      -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,   587,
     588,   589,    -1,   591,   592,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,
     608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,
      -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,
     628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,    -1,    -1,   646,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,   657,
      15,    16,    -1,   661,    -1,    20,    -1,   665,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
     185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,
     215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,
     225,   226,   227,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,
      -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,
      -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,
      -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,
      -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,    -1,   317,   318,   319,   320,    -1,   322,   323,    -1,
      -1,    -1,    -1,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,    -1,   354,
     355,    -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,
      -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,
      -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,
     395,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,    -1,   410,    -1,   412,   413,   414,
      -1,   416,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,    -1,
     465,   466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,    -1,   487,   488,   489,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,
     505,   506,   507,   508,    -1,   510,   511,   512,   513,   514,
      -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,
     535,   536,   537,   538,   539,    -1,    -1,   542,   543,    -1,
      -1,   546,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,   559,   560,    -1,    -1,   563,   564,
     565,   566,    -1,    -1,   569,   570,    -1,   572,   573,   574,
     575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,
      -1,   586,   587,   588,   589,    -1,   591,   592,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,
      -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,
     615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,
      -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,
      -1,   636,   637,   638,    -1,   640,   641,   642,   643,    -1,
      -1,   646,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,   657,    15,    16,    -1,    -1,    -1,    20,    -1,
     665,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
     242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,    -1,   317,   318,   319,   320,    -1,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,
      -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
     392,   393,    -1,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,    -1,   410,    -1,
     412,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,    -1,   449,   450,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,    -1,   468,   469,   470,    -1,
     472,    -1,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,    -1,   487,   488,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,
      -1,   503,    -1,   505,   506,   507,   508,    -1,   510,   511,
     512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,   535,   536,   537,   538,   539,    -1,    -1,
     542,   543,    -1,    -1,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,    -1,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,
     592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,
      -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,
      -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,
      -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,
     642,   643,    -1,    -1,   646,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,   658,    15,    16,    -1,
      -1,    -1,    20,   665,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,    -1,   317,
     318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,
     328,   329,   330,   331,   332,   333,    -1,    -1,   336,   337,
      -1,   339,    -1,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,
     358,   359,   360,   361,   362,    -1,    -1,    -1,   366,   367,
      -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,
     378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,    -1,   410,    -1,   412,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
      -1,   449,   450,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,    -1,
     468,   469,   470,    -1,   472,    -1,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,    -1,   487,
     488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
      -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,
     508,    -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,
      -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,   537,
     538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,    -1,    -1,   563,   564,   565,   566,    -1,
      -1,   569,   570,    -1,   572,   573,   574,   575,    -1,    -1,
      -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,   587,
     588,   589,    -1,   591,   592,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,
     608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,
      -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,
     628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,    -1,    -1,   646,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,
     658,     8,     9,    10,    11,    12,   664,   665,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,   185,   186,
      -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,
     217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,    -1,
     317,   318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,    -1,   339,    -1,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,    -1,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,   366,
     367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,    -1,   410,    -1,   412,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,    -1,   449,   450,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
      -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,    -1,
     487,   488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
     507,   508,    -1,   510,   511,   512,   513,   514,    -1,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,
     537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,    -1,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,
     587,   588,   589,    -1,   591,   592,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,
      -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,
     617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,
     627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,   640,   641,   642,   643,    -1,    -1,   646,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
     657,    15,    16,    -1,    -1,    -1,    20,    -1,   665,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
      -1,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,    -1,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,    -1,    -1,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,   586,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
      -1,    -1,   646,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,   657,    15,    16,    -1,    -1,    -1,    20,
      -1,   665,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,   185,   186,    -1,    -1,   189,   190,
      -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,
     221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,
     241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,
      -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,
     271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
      -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,
     371,    -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     391,   392,   393,    -1,   395,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,    -1,   410,
      -1,   412,   413,   414,    -1,   416,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,    -1,   449,   450,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,    -1,   463,    -1,   465,   466,    -1,   468,   469,   470,
      -1,   472,    -1,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,    -1,   487,   488,    -1,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,
      -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,   510,
     511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,
     521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,   532,    -1,   534,   535,   536,   537,   538,   539,    -1,
      -1,   542,   543,    -1,    -1,   546,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,   559,   560,
      -1,    -1,   563,   564,   565,   566,    -1,    -1,   569,   570,
      -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,
     581,   582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,
     591,   592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
     601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,
      -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,
      -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,
      -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,
     641,   642,   643,    -1,    -1,   646,    -1,    -1,    -1,    -1,
      -1,   652,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,   665,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,    -1,   317,   318,   319,   320,    -1,   322,
     323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,
     333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
      -1,   354,   355,    -1,    -1,   358,   359,   360,   361,   362,
      -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,
     373,   374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,
     393,    -1,   395,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,    -1,   410,    -1,   412,
     413,   414,    -1,   416,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,    -1,   449,   450,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,    -1,   468,   469,   470,    -1,   472,
      -1,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,
     503,    -1,   505,   506,   507,   508,    -1,   510,   511,   512,
     513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,
      -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,
      -1,   534,   535,   536,   537,   538,   539,    -1,    -1,   542,
     543,    -1,    -1,   546,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,   559,   560,    -1,    -1,
     563,   564,   565,   566,    -1,    -1,   569,   570,    -1,   572,
     573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,
      -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,   592,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,
      -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,
      -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,
      -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,    -1,    -1,   646,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,   664,   665,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,    -1,   317,   318,   319,
     320,    -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,
     330,   331,   332,   333,    -1,    -1,   336,   337,    -1,   339,
      -1,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,
     360,   361,   362,    -1,    -1,    -1,   366,   367,    -1,    -1,
      -1,   371,    -1,   373,   374,    -1,   376,   377,   378,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   391,   392,   393,    -1,   395,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
     410,    -1,   412,   413,   414,    -1,   416,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,    -1,   449,
     450,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,    -1,   463,    -1,   465,   466,    -1,   468,   469,
     470,    -1,   472,    -1,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,    -1,   487,   488,    -1,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,
      -1,    -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,
     510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,
     520,   521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,   532,    -1,   534,   535,   536,   537,   538,   539,
      -1,    -1,   542,   543,    -1,    -1,   546,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,    -1,    -1,   563,   564,   565,   566,    -1,    -1,   569,
     570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,
      -1,   581,   582,    -1,    -1,    -1,   586,   587,   588,   589,
      -1,   591,   592,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,   601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,
      -1,    -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,
     620,    -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,
      -1,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,
     640,   641,   642,   643,    -1,    -1,   646,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,   665,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,   185,   186,
      -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,
     217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,    -1,
     317,   318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,    -1,   339,    -1,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,    -1,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,   366,
     367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,    -1,   410,    -1,   412,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,    -1,   449,   450,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
      -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,    -1,
     487,   488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
     507,   508,    -1,   510,   511,   512,   513,   514,    -1,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,
     537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,    -1,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,
     587,   588,   589,    -1,   591,   592,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,
      -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,
     617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,
     627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,   640,   641,   642,   643,    -1,    -1,   646,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,   665,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
      -1,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,    -1,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,    -1,    -1,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,   586,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
      -1,    -1,   646,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,   665,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,   185,   186,    -1,    -1,   189,   190,
      -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,
     221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,
     241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,
      -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,
     271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
      -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,
     371,    -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     391,   392,   393,    -1,   395,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,    -1,   410,
      -1,   412,   413,   414,    -1,   416,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,    -1,   449,   450,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,    -1,   463,    -1,   465,   466,    -1,   468,   469,   470,
      -1,   472,    -1,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,    -1,   487,   488,    -1,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,
      -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,   510,
     511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,
     521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,   532,    -1,   534,   535,   536,   537,   538,   539,    -1,
      -1,   542,   543,    -1,    -1,   546,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,   559,   560,
      -1,    -1,   563,   564,   565,   566,    -1,    -1,   569,   570,
      -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,
     581,   582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,
     591,   592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
     601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,
      -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,
      -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,
      -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,
     641,   642,   643,    -1,    -1,   646,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,   665,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,   272,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,    -1,   317,
     318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,
     328,   329,   330,   331,   332,   333,    -1,    -1,   336,   337,
      -1,   339,    -1,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,
     358,   359,   360,   361,   362,    -1,    -1,    -1,   366,   367,
      -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,
     378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   389,    -1,   391,   392,   393,    -1,   395,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,    -1,   410,    -1,   412,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
      -1,   449,   450,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,    -1,
     468,   469,   470,    -1,   472,    -1,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,    -1,   487,
     488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
      -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,
     508,    -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,
      -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,   537,
     538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,    -1,    -1,   563,   564,   565,   566,    -1,
     568,   569,   570,    -1,   572,   573,   574,   575,    -1,    -1,
      -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,   587,
     588,   589,    -1,   591,   592,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,
     608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,
      -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,
     628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,    -1,    -1,   646,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,   664,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
      -1,   317,   318,   319,   320,    -1,   322,   323,    -1,    -1,
      -1,    -1,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,    -1,   339,    -1,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,    -1,   354,   355,
      -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,
     366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,
     376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,    -1,   410,    -1,   412,   413,   414,    -1,
     416,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,    -1,   449,   450,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
      -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,
     506,   507,   508,    -1,   510,   511,   512,   513,   514,    -1,
      -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,
     536,   537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,    -1,    -1,   563,   564,   565,
     566,    -1,    -1,   569,   570,    -1,   572,   573,   574,   575,
      -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,
     586,   587,   588,   589,    -1,   591,   592,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,
     606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,
      -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,
     626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,   640,   641,   642,   643,    -1,    -1,
     646,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,   664,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
      -1,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,    -1,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,    -1,    -1,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,   568,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,   586,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
      -1,    -1,   646,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
     664,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
     242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
     272,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,    -1,   317,   318,   319,   320,    -1,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,
      -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
     392,   393,    -1,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,    -1,   410,    -1,
     412,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,    -1,   449,   450,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,    -1,   468,   469,   470,    -1,
     472,    -1,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,
      -1,   503,    -1,   505,   506,   507,   508,    -1,   510,   511,
     512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,   535,   536,   537,   538,   539,    -1,    -1,
     542,   543,    -1,    -1,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,   568,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,
     592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,
      -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,
      -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,
      -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,
     642,   643,    -1,    -1,   646,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,   664,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,    -1,   317,   318,   319,
     320,    -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,
     330,   331,   332,   333,    -1,    -1,   336,   337,    -1,   339,
      -1,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,
     360,   361,   362,    -1,    -1,    -1,   366,   367,    -1,    -1,
      -1,   371,    -1,   373,   374,    -1,   376,   377,   378,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   391,   392,   393,    -1,   395,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
     410,    -1,   412,   413,   414,    -1,   416,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,    -1,   449,
     450,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,    -1,   463,    -1,   465,   466,    -1,   468,   469,
     470,    -1,   472,    -1,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,    -1,   487,   488,    -1,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,
      -1,    -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,
     510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,
     520,   521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,   532,    -1,   534,   535,   536,   537,   538,   539,
      -1,    -1,   542,   543,    -1,    -1,   546,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,    -1,    -1,   563,   564,   565,   566,    -1,    -1,   569,
     570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,
      -1,   581,   582,    -1,    -1,    -1,   586,   587,   588,   589,
      -1,   591,   592,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,   601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,
      -1,    -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,
     620,    -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,
      -1,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,
     640,   641,   642,   643,    -1,    -1,   646,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,   664,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,   272,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,    -1,   317,
     318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,
     328,   329,   330,   331,   332,   333,    -1,    -1,   336,   337,
      -1,   339,    -1,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,
     358,   359,   360,   361,   362,    -1,    -1,    -1,   366,   367,
      -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,
     378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,    -1,   410,    -1,   412,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
      -1,   449,   450,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,    -1,
     468,   469,   470,    -1,   472,    -1,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,    -1,   487,
     488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
      -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,
     508,    -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,
      -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,   537,
     538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,    -1,    -1,   563,   564,   565,   566,    -1,
     568,   569,   570,    -1,   572,   573,   574,   575,    -1,    -1,
      -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,   587,
     588,   589,    -1,   591,   592,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,
     608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,
      -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,
     628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,    -1,    -1,   646,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,   664,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
      -1,   317,   318,   319,   320,    -1,   322,   323,    -1,    -1,
      -1,    -1,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,    -1,   339,    -1,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,    -1,   354,   355,
      -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,
     366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,
     376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,    -1,   410,    -1,   412,   413,   414,    -1,
     416,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,    -1,   449,   450,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
      -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,
     506,   507,   508,    -1,   510,   511,   512,   513,   514,    -1,
      -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,
     536,   537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,    -1,    -1,   563,   564,   565,
     566,    -1,    -1,   569,   570,    -1,   572,   573,   574,   575,
      -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,
     586,   587,   588,   589,    -1,   591,   592,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,
     606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,
      -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,
     626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,   640,   641,   642,   643,    -1,    -1,
     646,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,   664,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
      -1,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,    -1,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,    -1,    -1,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,   586,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
      -1,    -1,   646,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
     664,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
     242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,    -1,   317,   318,   319,   320,    -1,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,
      -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
     392,   393,    -1,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,    -1,   410,    -1,
     412,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,    -1,   449,   450,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,    -1,   468,   469,   470,    -1,
     472,    -1,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,
      -1,   503,    -1,   505,   506,   507,   508,    -1,   510,   511,
     512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,   535,   536,   537,   538,   539,    -1,    -1,
     542,   543,    -1,    -1,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,    -1,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,
     592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,
      -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,
      -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,
      -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,
     642,   643,     5,     6,   646,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,   658,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,    -1,   317,   318,   319,   320,    -1,   322,
     323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,
     333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
      -1,   354,   355,    -1,    -1,   358,   359,   360,   361,   362,
      -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,
     373,   374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,
     393,    -1,   395,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,    -1,   410,    -1,   412,
     413,   414,    -1,   416,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,    -1,   449,   450,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,    -1,   468,   469,   470,    -1,   472,
      -1,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,
     503,    -1,   505,   506,   507,   508,    -1,   510,   511,   512,
     513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,
      -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,
      -1,   534,   535,   536,   537,   538,   539,    -1,    -1,   542,
     543,    -1,    -1,   546,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,   559,   560,    -1,    -1,
     563,   564,   565,   566,    -1,    -1,   569,   570,    -1,   572,
     573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,
      -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,   592,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,
      -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,
      -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,
      -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,    -1,     6,   646,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    16,    -1,    -1,   658,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    -1,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    -1,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,    -1,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,    -1,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,    -1,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,   197,    -1,   199,    -1,   201,    -1,    -1,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
      -1,   215,    -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,
      -1,   225,   226,   227,   228,   229,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,    -1,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,   255,    -1,    -1,   258,    -1,   260,    -1,    -1,    -1,
     264,    -1,    -1,   267,   268,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,   290,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,    -1,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,
      -1,    -1,    -1,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,    -1,    -1,    -1,    -1,    -1,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,    -1,    -1,   449,    -1,   451,   452,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,    -1,
      -1,   465,    -1,    -1,   468,   469,   470,   471,   472,    -1,
      -1,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
     484,   485,    -1,   487,    -1,    -1,    -1,    -1,   492,   493,
     494,    -1,    -1,    -1,    -1,   499,    -1,    -1,    -1,    -1,
      -1,    -1,   506,    -1,   508,    -1,   510,    -1,    -1,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,    -1,   536,   537,   538,   539,    -1,    -1,    -1,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,    -1,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,    -1,    -1,    -1,    -1,   601,    -1,    -1,
     604,    -1,    -1,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,   632,    -1,
      -1,    -1,   636,   637,    -1,    -1,   640,    -1,   642,   643,
      -1,    -1,   646,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,   659,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
     242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,    -1,   317,   318,   319,   320,    -1,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,
      -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
     392,   393,    -1,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,    -1,   410,    -1,
     412,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,    -1,   449,   450,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,    -1,   468,   469,   470,    -1,
     472,    -1,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,
      -1,   503,    -1,   505,   506,   507,   508,    -1,   510,   511,
     512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,   535,   536,   537,   538,   539,    -1,    -1,
     542,   543,    -1,    -1,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,    -1,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,
     592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,
      -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,
      -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,
      -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,
     642,   643,     5,     6,   646,     8,     9,    10,    11,    12,
     652,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,    -1,   317,   318,   319,   320,    -1,   322,
     323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,
     333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
      -1,   354,   355,    -1,    -1,   358,   359,   360,   361,   362,
      -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,
     373,   374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,
     393,    -1,   395,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,    -1,   410,    -1,   412,
     413,   414,    -1,   416,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,    -1,   449,   450,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,    -1,   468,   469,   470,    -1,   472,
      -1,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,
     503,    -1,   505,   506,   507,   508,    -1,   510,   511,   512,
     513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,
      -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,
      -1,   534,   535,   536,   537,   538,   539,    -1,    -1,   542,
     543,    -1,    -1,   546,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,   559,   560,    -1,    -1,
     563,   564,   565,   566,    -1,    -1,   569,   570,    -1,   572,
     573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,
      -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,   592,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,
      -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,
      -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,
      -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,     5,     6,   646,     8,     9,    10,    11,    12,   652,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
      -1,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,    -1,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,    -1,    -1,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,   586,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
       5,     6,   646,     8,     9,    10,    11,    12,   652,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
     185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,
     215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,
     225,   226,   227,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,
      -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,
      -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,
      -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,
      -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,    -1,   317,   318,   319,   320,    -1,   322,   323,    -1,
      -1,    -1,    -1,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,    -1,   354,
     355,    -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,
      -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,
      -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,
     395,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,    -1,   410,    -1,   412,   413,   414,
      -1,   416,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,    -1,
     465,   466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,
     505,   506,   507,   508,    -1,   510,   511,   512,   513,   514,
      -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,
     535,   536,   537,   538,   539,    -1,    -1,   542,   543,    -1,
      -1,   546,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,   559,   560,    -1,    -1,   563,   564,
     565,   566,    -1,    -1,   569,   570,    -1,   572,   573,   574,
     575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,
      -1,   586,   587,   588,   589,    -1,   591,   592,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,
      -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,
     615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,
      -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,
      -1,   636,   637,   638,    -1,   640,   641,   642,   643,     5,
       6,   646,     8,     9,    10,    11,    12,   652,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,   218,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
      -1,   317,   318,   319,   320,    -1,   322,   323,    -1,    -1,
      -1,    -1,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,    -1,   339,    -1,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,    -1,   354,   355,
      -1,    -1,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,    -1,    -1,   370,   371,    -1,   373,   374,    -1,
     376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,    -1,   410,    -1,   412,   413,   414,    -1,
     416,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,    -1,   449,   450,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
      -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,
     506,   507,   508,    -1,   510,   511,   512,   513,   514,    -1,
      -1,   517,   518,   519,   520,   521,   522,    -1,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,
     536,   537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,    -1,    -1,   563,   564,   565,
     566,    -1,    -1,   569,   570,    -1,   572,   573,   574,   575,
      -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,
     586,   587,   588,   589,   590,   591,   592,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,
     606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,
      -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,
     626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,   640,   641,   642,   643,     5,     6,
     646,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    18,    19,    20,    21,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,   185,   186,
      -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,
     217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,    -1,
     317,   318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,    -1,   339,    -1,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,    -1,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,   366,
     367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,   381,    -1,    -1,   384,    -1,    -1,
     387,    -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,    -1,   410,    -1,   412,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,    -1,   449,   450,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
      -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,    -1,
     487,   488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
     507,   508,    -1,   510,   511,   512,   513,   514,    -1,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,
     537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,   568,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,
     587,   588,   589,    -1,   591,   592,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,
      -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,
     617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,
     627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,   640,   641,   642,   643,   644,    -1,   646,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,   124,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,   159,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
     185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,
     215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,
     225,   226,   227,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,
      -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,
      -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,
      -1,    -1,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
      -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,    -1,   317,   318,   319,   320,    -1,   322,   323,    -1,
      -1,    -1,    -1,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,    -1,   354,
     355,    -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,
      -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,
      -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,
     395,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,    -1,   410,    -1,   412,   413,   414,
      -1,   416,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,    -1,
     465,   466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,    -1,   503,    -1,
     505,   506,   507,   508,    -1,   510,   511,   512,   513,   514,
      -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,
     535,   536,   537,   538,   539,    -1,    -1,   542,   543,    -1,
      -1,   546,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,   559,   560,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,   570,    -1,   572,   573,   574,
     575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,
      -1,   586,   587,   588,   589,    -1,   591,   592,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,
      -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,
     615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,
      -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,
      -1,   636,   637,   638,    -1,   640,   641,   642,   643,     5,
       6,   646,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,   124,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,   272,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
      -1,   317,   318,   319,   320,    -1,   322,   323,    -1,    -1,
      -1,    -1,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,    -1,   339,    -1,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,    -1,   354,   355,
      -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,
     366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,
     376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,    -1,   410,    -1,   412,   413,   414,    -1,
     416,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,    -1,   449,   450,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
      -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,
     506,   507,   508,    -1,   510,   511,   512,   513,   514,    -1,
      -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,
     536,   537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,    -1,    -1,   563,   564,   565,
     566,    -1,   568,   569,   570,    -1,   572,   573,   574,   575,
      -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,
     586,   587,   588,   589,    -1,   591,   592,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,
     606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,
      -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,
     626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,   640,   641,   642,   643,     5,     6,
     646,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,   185,   186,
      -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,
     217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,   288,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,    -1,
     317,   318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,    -1,   339,    -1,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,    -1,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,   366,
     367,    -1,    -1,   370,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,    -1,   410,    -1,   412,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,    -1,   449,   450,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
      -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,    -1,
     487,   488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
     507,   508,    -1,   510,   511,   512,   513,   514,    -1,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,
     537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,    -1,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,
     587,   588,   589,   590,   591,   592,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,
      -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,
     617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,
     627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,   640,   641,   642,   643,     5,     6,   646,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,   124,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,   272,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,    -1,   317,
     318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,
     328,   329,   330,   331,   332,   333,    -1,    -1,   336,   337,
      -1,   339,    -1,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,
     358,   359,   360,   361,   362,    -1,    -1,    -1,   366,   367,
      -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,
     378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,    -1,   410,    -1,   412,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
      -1,   449,   450,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,    -1,
     468,   469,   470,    -1,   472,    -1,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,    -1,   487,
     488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
      -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,
     508,    -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,
      -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,   537,
     538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,    -1,    -1,   563,   564,   565,   566,    -1,
     568,   569,   570,    -1,   572,   573,   574,   575,    -1,    -1,
      -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,   587,
     588,   589,    -1,   591,   592,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,
     608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,
      -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,
     628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,     5,     6,   646,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,   103,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,   185,   186,    -1,    -1,
     189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,
      -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,
      -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,
      -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,
      -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,
      -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,    -1,   317,   318,
     319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,   328,
     329,   330,   331,   332,   333,    -1,    -1,   336,   337,    -1,
     339,    -1,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,   358,
     359,   360,   361,   362,    -1,    -1,    -1,   366,   367,    -1,
      -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,   378,
      -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   391,   392,   393,    -1,   395,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
      -1,   410,    -1,   412,   413,   414,    -1,   416,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,    -1,
     449,   450,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,    -1,   463,    -1,   465,   466,    -1,   468,
     469,   470,    -1,   472,    -1,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,    -1,   487,   488,
      -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,    -1,
     499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,   508,
      -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,
      -1,   520,   521,   522,    -1,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,   532,    -1,   534,   535,   536,   537,   538,
     539,    -1,    -1,   542,   543,    -1,    -1,   546,   547,   548,
     549,   550,   551,    -1,    -1,   554,   555,   556,   557,    -1,
     559,   560,    -1,    -1,   563,   564,   565,   566,    -1,   568,
     569,   570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,
      -1,    -1,   581,   582,    -1,    -1,    -1,   586,   587,   588,
     589,    -1,   591,   592,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,   608,
     609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,    -1,
      -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,   628,
     629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,
      -1,   640,   641,   642,   643,     5,     6,   646,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,   103,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,    -1,   317,   318,   319,
     320,    -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,
     330,   331,   332,   333,    -1,    -1,   336,   337,    -1,   339,
      -1,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,
     360,   361,   362,    -1,    -1,    -1,   366,   367,    -1,    -1,
      -1,   371,    -1,   373,   374,    -1,   376,   377,   378,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   391,   392,   393,    -1,   395,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
     410,    -1,   412,   413,   414,    -1,   416,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,    -1,   449,
     450,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,    -1,   463,    -1,   465,   466,    -1,   468,   469,
     470,    -1,   472,    -1,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,    -1,   487,   488,    -1,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,
      -1,    -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,
     510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,
     520,   521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,   532,    -1,   534,   535,   536,   537,   538,   539,
      -1,    -1,   542,   543,    -1,    -1,   546,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
     570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,
      -1,   581,   582,    -1,    -1,    -1,   586,   587,   588,   589,
      -1,   591,   592,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,   601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,
      -1,    -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,
     620,    -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,
      -1,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,
     640,   641,   642,   643,     5,     6,   646,     8,     9,    10,
      11,    12,    13,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,   185,   186,    -1,    -1,   189,   190,
      -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,
     221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,
     241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,
      -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
      -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,
     371,    -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     391,   392,   393,    -1,   395,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,    -1,   410,
      -1,   412,   413,   414,    -1,   416,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,    -1,   449,   450,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,    -1,   463,    -1,   465,   466,    -1,   468,   469,   470,
      -1,   472,    -1,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,    -1,   487,   488,    -1,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,
      -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,   510,
     511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,
     521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,   532,    -1,   534,   535,   536,   537,   538,   539,    -1,
      -1,   542,   543,    -1,    -1,   546,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,   559,   560,
      -1,    -1,   563,   564,   565,   566,    -1,   568,   569,   570,
      -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,
     581,   582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,
     591,   592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
     601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,
      -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,
      -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,
      -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,
     641,   642,   643,     5,     6,   646,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,   214,   215,    -1,   217,   218,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
     242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,    -1,   317,   318,   319,   320,    -1,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,
      -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
     392,   393,    -1,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,    -1,   410,    -1,
     412,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,    -1,   449,   450,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,    -1,   468,   469,   470,    -1,
     472,    -1,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,
      -1,   503,    -1,   505,   506,   507,   508,    -1,   510,   511,
     512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,   535,   536,   537,   538,   539,    -1,    -1,
     542,   543,    -1,    -1,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,   568,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,
     592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,
      -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,
      -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,
      -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,
     642,   643,     5,     6,   646,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,    -1,   317,   318,   319,   320,    -1,   322,
     323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,
     333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
      -1,   354,   355,    -1,    -1,   358,   359,   360,   361,   362,
      -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,
     373,   374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,
     393,    -1,   395,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,    -1,   410,    -1,   412,
     413,   414,    -1,   416,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,    -1,   449,   450,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,    -1,   468,   469,   470,    -1,   472,
      -1,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,
     503,    -1,   505,   506,   507,   508,    -1,   510,   511,   512,
     513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,
      -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,
      -1,   534,   535,   536,   537,   538,   539,    -1,    -1,   542,
     543,    -1,    -1,   546,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,   559,   560,    -1,    -1,
     563,   564,   565,   566,    -1,   568,   569,   570,    -1,   572,
     573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,
      -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,   592,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,
      -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,
      -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,
      -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,     5,     6,   646,     8,     9,    10,    11,    12,    -1,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
      -1,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,    -1,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,    -1,    -1,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,   568,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,   586,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
       5,     6,   646,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
     185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,
     215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,
     225,   226,   227,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,
      -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,
      -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,
      -1,    -1,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
      -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,    -1,   317,   318,   319,   320,    -1,   322,   323,    -1,
      -1,    -1,    -1,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,    -1,   354,
     355,    -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,
      -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,
      -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,
     395,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,    -1,   410,    -1,   412,   413,   414,
      -1,   416,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,    -1,
     465,   466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,
     505,   506,   507,   508,    -1,   510,   511,   512,   513,   514,
      -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,
     535,   536,   537,   538,   539,    -1,    -1,   542,   543,    -1,
      -1,   546,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,   559,   560,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,   570,    -1,   572,   573,   574,
     575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,
      -1,   586,   587,   588,   589,    -1,   591,   592,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,
      -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,
     615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,
      -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,
      -1,   636,   637,   638,    -1,   640,   641,   642,   643,     5,
       6,   646,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,   171,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
      -1,   317,   318,   319,   320,    -1,   322,   323,    -1,    -1,
      -1,    -1,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,    -1,   339,    -1,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,    -1,   354,   355,
      -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,
     366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,
     376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,    -1,   410,    -1,   412,   413,   414,    -1,
     416,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,    -1,   449,   450,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
      -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,
     506,   507,   508,    -1,   510,   511,   512,   513,   514,    -1,
      -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,
     536,   537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,    -1,    -1,   563,   564,   565,
     566,    -1,    -1,   569,   570,    -1,   572,   573,   574,   575,
      -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,
     586,   587,   588,   589,    -1,   591,   592,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,
     606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,
      -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,
     626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,   640,   641,   642,   643,     5,     6,
     646,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,   185,   186,
      -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,
     217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,    -1,
     317,   318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,    -1,   339,    -1,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,    -1,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,   366,
     367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,    -1,   410,    -1,   412,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,    -1,   449,   450,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
      -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,    -1,
     487,   488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
     507,   508,    -1,   510,   511,   512,   513,   514,    -1,    -1,
      -1,   518,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,
     537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,    -1,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,
     587,   588,   589,    -1,   591,   592,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,
      -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,
     617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,
     627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,   640,   641,   642,   643,     5,     6,   646,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,   196,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,    -1,   317,
     318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,
     328,   329,   330,   331,   332,   333,    -1,    -1,   336,   337,
      -1,   339,    -1,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,
     358,   359,   360,   361,   362,    -1,    -1,    -1,   366,   367,
      -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,
     378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,    -1,   410,    -1,   412,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
      -1,   449,   450,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,    -1,
     468,   469,   470,    -1,   472,    -1,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,    -1,   487,
     488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
      -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,
     508,    -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,
      -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,   537,
     538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,    -1,    -1,   563,   564,   565,   566,    -1,
      -1,   569,   570,    -1,   572,   573,   574,   575,    -1,    -1,
      -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,   587,
     588,   589,    -1,   591,   592,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,
     608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,
      -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,
     628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,     5,     6,   646,     8,
       9,    10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,    -1,    -1,    -1,   124,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
     169,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,    -1,   182,   183,   184,   185,   186,    -1,    -1,
     189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,
      -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,
      -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,
      -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,
      -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,
      -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,
      -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,    -1,   317,   318,
     319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,   328,
     329,   330,   331,   332,   333,    -1,    -1,   336,   337,    -1,
     339,    -1,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,   358,
     359,   360,   361,   362,    -1,    -1,    -1,   366,   367,    -1,
      -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,   378,
      -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   391,   392,   393,    -1,   395,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
      -1,   410,    -1,   412,   413,   414,    -1,   416,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,    -1,
     449,   450,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,    -1,   463,    -1,   465,   466,    -1,   468,
     469,   470,    -1,   472,    -1,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,    -1,   487,   488,
      -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,    -1,
     499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,   508,
      -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,
      -1,   520,   521,   522,    -1,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,   532,    -1,   534,   535,   536,   537,   538,
     539,    -1,    -1,   542,   543,    -1,    -1,   546,   547,   548,
     549,   550,   551,    -1,    -1,   554,   555,   556,   557,    -1,
     559,   560,    -1,    -1,   563,   564,   565,   566,    -1,    -1,
     569,   570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,
      -1,    -1,   581,   582,    -1,    -1,    -1,   586,   587,   588,
     589,    -1,   591,   592,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,   608,
     609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,    -1,
      -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,   628,
     629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,
      -1,   640,   641,   642,   643,     5,     6,   646,     8,     9,
      10,    11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,    -1,   182,   183,   184,   185,   186,    -1,    -1,   189,
     190,    -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,
     220,   221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,    -1,   317,   318,   319,
     320,    -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,
     330,   331,   332,   333,    -1,    -1,   336,   337,    -1,   339,
      -1,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,
     360,   361,   362,    -1,    -1,    -1,   366,   367,    -1,    -1,
      -1,   371,    -1,   373,   374,    -1,   376,   377,   378,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   391,   392,   393,    -1,   395,   396,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,    -1,
     410,    -1,   412,   413,   414,    -1,   416,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,    -1,   449,
     450,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,    -1,   463,    -1,   465,   466,    -1,   468,   469,
     470,    -1,   472,    -1,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,    -1,   487,   488,    -1,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,
      -1,    -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,
     510,   511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,
     520,   521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,   532,    -1,   534,   535,   536,   537,   538,   539,
      -1,    -1,   542,   543,    -1,    -1,   546,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
     570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,
      -1,   581,   582,    -1,    -1,    -1,   586,   587,   588,   589,
      -1,   591,   592,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,   601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,
      -1,    -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,
     620,    -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,
      -1,    -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,
     640,   641,   642,   643,     5,     6,   646,     8,     9,    10,
      11,    12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
      -1,    -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,   142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,   169,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
      -1,   182,   183,   184,   185,   186,    -1,    -1,   189,   190,
      -1,    -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,
     221,    -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,
     241,   242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,
      -1,    -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,
     271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
      -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,
     371,    -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     391,   392,   393,    -1,   395,   396,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,    -1,   410,
      -1,   412,   413,   414,    -1,   416,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,    -1,   449,   450,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,    -1,   463,    -1,   465,   466,    -1,   468,   469,   470,
      -1,   472,    -1,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,    -1,   487,   488,    -1,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,
      -1,    -1,   503,    -1,   505,   506,   507,   508,    -1,   510,
     511,   512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,
     521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,   532,    -1,   534,   535,   536,   537,   538,   539,    -1,
      -1,   542,   543,    -1,    -1,   546,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,   559,   560,
      -1,    -1,   563,   564,   565,   566,    -1,    -1,   569,   570,
      -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,
     581,   582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,
     591,   592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
     601,    -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,
      -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,
      -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,
      -1,    -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,
     641,   642,   643,     5,     6,   646,     8,     9,    10,    11,
      12,    -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      92,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,
      -1,    -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
     142,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,    -1,
     182,   183,   184,   185,   186,    -1,    -1,   189,   190,    -1,
      -1,    -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,
      -1,    -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
     242,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,
      -1,   263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,    -1,   317,   318,   319,   320,    -1,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,    -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,
      -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,
     392,   393,    -1,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,    -1,   410,    -1,
     412,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,    -1,   449,   450,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,   463,    -1,   465,   466,    -1,   468,   469,   470,    -1,
     472,    -1,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,
      -1,   503,    -1,   505,   506,   507,   508,    -1,   510,   511,
     512,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,   535,   536,   537,   538,   539,    -1,    -1,
     542,   543,    -1,    -1,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,    -1,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,
     592,    -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,
      -1,    -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,
      -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,
      -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,
      -1,    -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,
     642,   643,     5,     6,   646,     8,     9,    10,    11,    12,
      -1,    -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    92,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,
      -1,   124,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,   142,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,   169,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,    -1,   182,
     183,   184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,
      -1,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,   214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,
      -1,    -1,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,
     263,   264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,    -1,   317,   318,   319,   320,    -1,   322,
     323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,
     333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
      -1,   354,   355,    -1,    -1,   358,   359,   360,   361,   362,
      -1,    -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,
     373,   374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,
     393,    -1,   395,   396,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,    -1,   410,    -1,   412,
     413,   414,    -1,   416,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,    -1,   449,   450,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
     463,    -1,   465,   466,    -1,   468,   469,   470,    -1,   472,
      -1,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,
     503,    -1,   505,   506,   507,   508,    -1,   510,   511,   512,
     513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,
      -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,
      -1,   534,   535,   536,   537,   538,   539,    -1,    -1,   542,
     543,    -1,    -1,   546,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,   559,   560,    -1,    -1,
     563,   564,   565,   566,    -1,    -1,   569,   570,    -1,   572,
     573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,
      -1,    -1,    -1,   586,   587,   588,   589,    -1,   591,   592,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,
      -1,   604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,
      -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,
      -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,
      -1,    -1,    -1,   636,   637,   638,    -1,   640,   641,   642,
     643,     5,     6,   646,     8,     9,    10,    11,    12,    13,
      -1,    15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    92,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,    -1,   182,   183,
     184,   185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
     214,   215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,
      -1,   225,   226,   227,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,    -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,
     264,    -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,
      -1,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,    -1,   410,    -1,   412,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
      -1,   465,   466,    -1,   468,   469,   470,    -1,   472,    -1,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,
      -1,   505,   506,   507,   508,    -1,   510,   511,   512,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,   535,   536,   537,   538,   539,    -1,    -1,   542,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,   586,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,
     604,    -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,
      -1,    -1,   636,   637,   638,    -1,   640,   641,   642,   643,
       5,     6,   646,     8,     9,    10,    11,    12,    -1,    -1,
      15,    16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    92,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,    -1,    -1,    -1,   124,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,   169,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,    -1,   182,   183,   184,
     185,   186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,
     215,    -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,
     225,   226,   227,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,
      -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,
      -1,    -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,
      -1,    -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,
      -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,    -1,   317,   318,   319,   320,    -1,   322,   323,    -1,
      -1,    -1,    -1,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,    -1,   354,
     355,    -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,
      -1,   366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,
      -1,   376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,
     395,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,    -1,   410,    -1,   412,   413,   414,
      -1,   416,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,    -1,   449,   450,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,    -1,
     465,   466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,    -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,
     505,   506,   507,   508,    -1,   510,   511,   512,   513,   514,
      -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,
     535,   536,   537,   538,   539,    -1,    -1,   542,   543,    -1,
      -1,   546,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,   559,   560,    -1,    -1,   563,   564,
     565,   566,    -1,    -1,   569,   570,    -1,   572,   573,   574,
     575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,
      -1,   586,   587,   588,   589,    -1,   591,   592,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,
      -1,   606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,
     615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,
      -1,   626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,
      -1,   636,   637,   638,    -1,   640,   641,   642,   643,     5,
       6,   646,     8,     9,    10,    11,    12,    -1,    -1,    15,
      16,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    92,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,    -1,   182,   183,   184,   185,
     186,    -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,
      -1,   217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,
      -1,    -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,
      -1,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
      -1,   317,   318,   319,   320,    -1,   322,   323,    -1,    -1,
      -1,    -1,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,    -1,   339,    -1,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,    -1,   354,   355,
      -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,
     366,   367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,
     376,   377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,    -1,   410,    -1,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,    -1,   449,   450,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,   463,    -1,   465,
     466,    -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
      -1,   487,   488,    -1,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,
     506,   507,   508,    -1,   510,   511,   512,   513,   514,    -1,
      -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,
     536,   537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,    -1,    -1,   563,   564,   565,
     566,    -1,    -1,   569,   570,    -1,   572,   573,   574,   575,
      -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,
     586,   587,   588,   589,    -1,   591,   592,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,
     606,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,
      -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,
     626,   627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,
     636,   637,   638,    -1,   640,   641,   642,   643,     5,     6,
     646,     8,     9,    10,    11,    12,    -1,    -1,    15,    16,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,   169,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,    -1,   182,   183,   184,   185,   186,
      -1,    -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,
     217,    -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,
      -1,   258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,
     267,    -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,    -1,
     317,   318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,    -1,   339,    -1,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,    -1,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,   366,
     367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,    -1,   410,    -1,   412,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,    -1,   449,   450,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,    -1,   465,   466,
      -1,   468,   469,   470,    -1,   472,    -1,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,    -1,
     487,   488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,    -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,
     507,   508,    -1,   510,   511,   512,   513,   514,    -1,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,
     537,   538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,    -1,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,
     587,   588,   589,    -1,   591,   592,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,
      -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,
     617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,
     627,   628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,
     637,   638,    -1,   640,   641,   642,   643,     5,     6,   646,
       8,     9,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    92,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,   142,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,    -1,   182,   183,   184,   185,   186,    -1,
      -1,   189,   190,    -1,    -1,    -1,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,   214,   215,    -1,   217,
      -1,    -1,   220,   221,    -1,    -1,    -1,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,    -1,    -1,    -1,
     258,    -1,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
      -1,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,    -1,   317,
     318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,
     328,   329,   330,   331,   332,   333,    -1,    -1,   336,   337,
      -1,   339,    -1,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,
     358,   359,   360,   361,   362,    -1,    -1,    -1,   366,   367,
      -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,
     378,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   391,   392,   393,    -1,   395,   396,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,    -1,   410,    -1,   412,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
      -1,   449,   450,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,   463,    -1,   465,   466,    -1,
     468,   469,   470,    -1,   472,    -1,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,    -1,   487,
     488,    -1,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
      -1,   499,    -1,    -1,    -1,   503,    -1,   505,   506,   507,
     508,    -1,   510,   511,   512,   513,   514,    -1,    -1,    -1,
      -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,   532,    -1,   534,   535,   536,   537,
     538,   539,    -1,    -1,   542,   543,    -1,    -1,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,    -1,    -1,   563,   564,   565,   566,    -1,
      -1,   569,   570,    -1,   572,   573,   574,   575,    -1,    -1,
      -1,    -1,    -1,   581,   582,    -1,    -1,    -1,   586,   587,
     588,   589,    -1,   591,   592,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,   601,    -1,    -1,   604,    -1,   606,    -1,
     608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,
      -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,
     628,   629,    -1,    -1,    -1,    -1,    -1,    -1,   636,   637,
     638,    -1,   640,   641,   642,   643,    -1,     6,   646,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      89,    90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,
      -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,    -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,
      -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
      -1,    -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,
     149,   150,   151,    -1,   153,   154,    -1,   156,   157,   158,
      -1,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
      -1,    -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,
      -1,    -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,
     229,    -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,
      -1,    -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,
      -1,   250,   251,    -1,   253,   254,   255,    -1,    -1,   258,
      -1,   260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,
      -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,
      -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,
      -1,   290,    -1,    -1,   293,    -1,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,    -1,   317,   318,
     319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,   328,
     329,   330,   331,   332,   333,    -1,    -1,   336,   337,    -1,
     339,    -1,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,   358,
     359,   360,   361,   362,    -1,    -1,    -1,    -1,   367,    -1,
      -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,   378,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   392,   393,    -1,    -1,    -1,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,   406,   407,    -1,
      -1,    -1,    -1,    -1,   413,   414,    -1,   416,    -1,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,    -1,    -1,
     429,    -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,    -1,    -1,
     449,    -1,   451,   452,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,    -1,    -1,    -1,   465,    -1,    -1,   468,
     469,   470,   471,   472,    -1,    -1,    -1,   476,   477,   478,
     479,   480,   481,   482,    -1,   484,   485,    -1,   487,    -1,
      -1,    -1,    -1,   492,   493,   494,    -1,    -1,    -1,    -1,
     499,    -1,    -1,    -1,    -1,    -1,    -1,   506,    -1,   508,
      -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,
      -1,   520,   521,   522,    -1,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,   532,    -1,   534,    -1,   536,   537,   538,
     539,    -1,    -1,    -1,   543,    -1,    -1,   546,   547,   548,
     549,   550,   551,    -1,    -1,   554,   555,   556,   557,    -1,
     559,   560,    -1,    -1,   563,   564,   565,   566,    -1,    -1,
     569,   570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,
      -1,    -1,   581,   582,    -1,    -1,    -1,    -1,   587,   588,
     589,    -1,   591,   592,    -1,   594,   595,    -1,    -1,    -1,
      -1,    -1,   601,    -1,    -1,   604,    -1,    -1,    -1,   608,
     609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,    -1,
      -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,   628,
     629,    -1,    -1,   632,    -1,    -1,    -1,   636,   637,    -1,
      -1,   640,    -1,   642,   643,    -1,     6,   646,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,
     100,    -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,
      -1,    -1,   132,    -1,   134,   135,   136,   137,   138,    -1,
      -1,    -1,    -1,    -1,    -1,   145,   146,   147,    -1,   149,
      -1,   151,    -1,   153,   154,    -1,   156,   157,   158,    -1,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
      -1,    -1,   172,   173,   174,   175,   176,    -1,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,   251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,
     260,    -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,
     270,   271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,
     280,    -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,    -1,   317,   318,   319,
     320,    -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,
     330,   331,   332,   333,    -1,    -1,   336,   337,    -1,   339,
      -1,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,
     360,   361,   362,    -1,    -1,    -1,    -1,   367,    -1,    -1,
      -1,   371,    -1,   373,   374,    -1,   376,   377,   378,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   392,   393,    -1,    -1,    -1,   397,    -1,   399,
     400,   401,   402,   403,   404,   405,   406,   407,    -1,    -1,
      -1,    -1,    -1,   413,   414,    -1,   416,    -1,   418,   419,
     420,   421,   422,    -1,   424,   425,   426,    -1,    -1,   429,
      -1,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,    -1,    -1,   449,
      -1,   451,   452,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,    -1,    -1,    -1,   465,    -1,    -1,   468,   469,
     470,   471,   472,    -1,    -1,    -1,   476,   477,   478,   479,
     480,   481,   482,    -1,   484,   485,    -1,   487,    -1,    -1,
      -1,    -1,   492,   493,   494,    -1,    -1,    -1,    -1,   499,
      -1,    -1,    -1,    -1,    -1,    -1,   506,    -1,   508,    -1,
     510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,
     520,   521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,   532,    -1,   534,    -1,   536,   537,   538,   539,
      -1,    -1,    -1,   543,    -1,    -1,   546,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,    -1,    -1,   563,   564,   565,   566,    -1,    -1,   569,
     570,    -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,
      -1,   581,   582,    -1,    -1,    -1,    -1,   587,   588,   589,
      -1,   591,   592,    -1,   594,   595,    -1,    -1,    -1,    -1,
      -1,   601,    -1,    -1,   604,    -1,    -1,    -1,   608,   609,
      -1,    -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,
     620,    -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,
     630,    -1,   632,    -1,    -1,    -1,   636,   637,    -1,    -1,
     640,    -1,   642,   643,    -1,     6,   646,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    16,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    89,    90,
      91,    -1,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,    -1,
      -1,    -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,
      -1,   132,    -1,   134,   135,   136,   137,   138,    -1,    -1,
      -1,    -1,    -1,    -1,   145,   146,   147,    -1,   149,    -1,
     151,    -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,    -1,    -1,
      -1,   172,   173,   174,   175,   176,    -1,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,    -1,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,    -1,
     221,    -1,    -1,    -1,   225,   226,   227,   228,   229,    -1,
     231,   232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,
     241,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,
     251,    -1,   253,   254,   255,    -1,    -1,   258,    -1,   260,
      -1,    -1,    -1,   264,    -1,    -1,   267,   268,    -1,   270,
     271,    -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,
      -1,   282,    -1,   284,   285,    -1,    -1,    -1,    -1,   290,
      -1,    -1,   293,    -1,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
      -1,   322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,
     331,   332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1,
     371,    -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   392,   393,    -1,    -1,    -1,   397,    -1,   399,   400,
     401,   402,   403,   404,   405,   406,   407,    -1,    -1,    -1,
      -1,    -1,   413,   414,    -1,   416,    -1,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,    -1,    -1,   449,    -1,
     451,   452,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,    -1,    -1,    -1,   465,    -1,    -1,   468,   469,   470,
     471,   472,    -1,    -1,    -1,   476,   477,   478,   479,   480,
     481,   482,    -1,   484,   485,    -1,   487,    -1,    -1,    -1,
      -1,   492,   493,   494,    -1,    -1,    -1,    -1,   499,    -1,
      -1,    -1,    -1,    -1,    -1,   506,    -1,   508,    -1,   510,
      -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,
     521,   522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,   532,    -1,   534,    -1,   536,   537,   538,   539,    -1,
      -1,    -1,   543,    -1,    -1,   546,   547,   548,   549,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,   559,   560,
      -1,    -1,   563,   564,   565,   566,    -1,    -1,   569,   570,
      -1,   572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,
     581,   582,    -1,    -1,    -1,    -1,   587,   588,   589,    -1,
     591,   592,    -1,   594,   595,    -1,    -1,    -1,    -1,    -1,
     601,    -1,    -1,   604,    -1,    -1,    -1,   608,   609,    -1,
      -1,    -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,
      -1,    -1,    -1,   624,    -1,   626,   627,   628,   629,   630,
      -1,   632,    -1,    -1,    -1,   636,   637,    -1,    -1,   640,
      -1,   642,   643,    -1,     6,   646,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    16,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    91,
      -1,    93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,
     102,    -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,    -1,    -1,
      -1,    -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,
     132,    -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,
      -1,    -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,   154,    -1,   156,   157,   158,    -1,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,    -1,    -1,    -1,
     172,   173,   174,   175,   176,    -1,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,    -1,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   225,   226,   227,   228,   229,    -1,   231,
     232,   233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,
      -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,
      -1,   253,   254,   255,    -1,    -1,   258,    -1,   260,    -1,
      -1,    -1,   264,    -1,    -1,   267,   268,    -1,   270,   271,
      -1,    -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,
     282,    -1,   284,   285,    -1,    -1,    -1,    -1,   290,    -1,
      -1,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,    -1,   317,   318,   319,   320,    -1,
     322,   323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,
     332,   333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,    -1,   354,   355,    -1,    -1,   358,   359,   360,   361,
     362,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1,   371,
      -1,   373,   374,    -1,   376,   377,   378,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,   393,    -1,    -1,    -1,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,    -1,    -1,    -1,    -1,
      -1,   413,   414,    -1,   416,    -1,   418,   419,   420,   421,
     422,    -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,    -1,    -1,   449,    -1,   451,
     452,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,    -1,    -1,   465,    -1,    -1,   468,   469,   470,   471,
     472,    -1,    -1,    -1,   476,   477,   478,   479,   480,   481,
     482,    -1,   484,   485,    -1,   487,    -1,    -1,    -1,    -1,
     492,   493,   494,    -1,    -1,    -1,    -1,   499,    -1,    -1,
      -1,    -1,    -1,    -1,   506,    -1,   508,    -1,   510,    -1,
      -1,   513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,
     522,    -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
     532,    -1,   534,    -1,   536,   537,   538,   539,    -1,    -1,
      -1,   543,    -1,    -1,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,    -1,
      -1,   563,   564,   565,   566,    -1,    -1,   569,   570,    -1,
     572,   573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,
     582,    -1,    -1,    -1,    -1,   587,   588,   589,    -1,   591,
     592,    -1,   594,   595,    -1,    -1,    -1,    -1,    -1,   601,
      -1,    -1,   604,    -1,    -1,    -1,   608,   609,    -1,    -1,
      -1,    -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,
      -1,    -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,
     632,    -1,    -1,    -1,   636,   637,    -1,    -1,   640,    -1,
     642,   643,    -1,     6,   646,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    89,    90,    91,    -1,
      93,    -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,
      -1,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,
      -1,    -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,
      -1,   134,   135,   136,   137,   138,    -1,    -1,    -1,    -1,
      -1,    -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,   154,    -1,   156,   157,   158,    -1,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,    -1,    -1,    -1,   172,
     173,   174,   175,   176,    -1,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
      -1,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
      -1,    -1,   215,    -1,    -1,    -1,    -1,    -1,   221,    -1,
      -1,    -1,   225,   226,   227,   228,   229,    -1,   231,   232,
     233,    -1,    -1,   236,    -1,    -1,    -1,    -1,   241,    -1,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,
     253,   254,   255,    -1,    -1,   258,    -1,   260,    -1,    -1,
      -1,   264,    -1,    -1,   267,   268,    -1,   270,   271,    -1,
      -1,    -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,
      -1,   284,   285,    -1,    -1,    -1,    -1,   290,    -1,    -1,
     293,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,    -1,   317,   318,   319,   320,    -1,   322,
     323,    -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,
     333,    -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,    -1,
      -1,   354,   355,    -1,    -1,   358,   359,   360,   361,   362,
      -1,    -1,    -1,    -1,   367,    -1,    -1,    -1,   371,    -1,
     373,   374,    -1,   376,   377,   378,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
     393,    -1,    -1,    -1,   397,    -1,   399,   400,   401,   402,
     403,   404,   405,   406,   407,    -1,    -1,    -1,    -1,    -1,
     413,   414,    -1,   416,    -1,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,    -1,    -1,   449,    -1,   451,   452,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
      -1,    -1,   465,    -1,    -1,   468,   469,   470,   471,   472,
      -1,    -1,    -1,   476,   477,   478,   479,   480,   481,   482,
      -1,   484,   485,    -1,   487,    -1,    -1,    -1,    -1,   492,
     493,   494,    -1,    -1,    -1,    -1,   499,    -1,    -1,    -1,
      -1,    -1,    -1,   506,    -1,   508,    -1,   510,    -1,    -1,
     513,   514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,
      -1,   524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,
      -1,   534,    -1,   536,   537,   538,   539,    -1,    -1,    -1,
     543,    -1,    -1,   546,   547,   548,   549,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,   559,   560,    -1,    -1,
     563,   564,   565,   566,    -1,    -1,   569,   570,    -1,   572,
     573,   574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,
      -1,    -1,    -1,    -1,   587,   588,   589,    -1,   591,   592,
      -1,   594,   595,    -1,    -1,    -1,    -1,    -1,   601,    -1,
      -1,   604,    -1,    -1,    -1,   608,   609,    -1,    -1,    -1,
      -1,    -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,
      -1,   624,    -1,   626,   627,   628,   629,    -1,    -1,   632,
      -1,    -1,    -1,   636,   637,    -1,    -1,   640,    -1,   642,
     643,    -1,     6,   646,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    16,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    -1,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    91,    -1,    93,
      -1,    -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,
      -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,
      -1,   125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,
     134,   135,   136,   137,   138,    -1,    -1,    -1,    -1,    -1,
      -1,   145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
     154,    -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,    -1,    -1,    -1,   172,   173,
     174,   175,   176,    -1,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,   197,    -1,   199,    -1,   201,    -1,    -1,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,
      -1,   215,    -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,
      -1,   225,   226,   227,   228,   229,    -1,   231,   232,   233,
      -1,    -1,   236,    -1,    -1,    -1,    -1,   241,    -1,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,
     254,   255,    -1,    -1,   258,    -1,   260,    -1,    -1,    -1,
     264,    -1,    -1,   267,   268,    -1,   270,   271,    -1,    -1,
      -1,    -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,   290,    -1,    -1,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,    -1,   322,   323,
      -1,    -1,    -1,    -1,   328,   329,   330,   331,   332,   333,
      -1,    -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,    -1,
     354,   355,    -1,    -1,   358,   359,   360,   361,   362,    -1,
      -1,    -1,    -1,   367,    -1,    -1,    -1,   371,    -1,   373,
     374,    -1,   376,   377,   378,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,
      -1,    -1,    -1,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,    -1,    -1,    -1,    -1,    -1,   413,
     414,    -1,   416,    -1,   418,   419,   420,   421,   422,    -1,
     424,   425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,    -1,    -1,   449,    -1,   451,   452,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,    -1,
      -1,   465,    -1,    -1,   468,   469,   470,   471,   472,    -1,
      -1,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
     484,   485,    -1,   487,    -1,    -1,    -1,    -1,   492,   493,
     494,    -1,    -1,    -1,    -1,   499,    -1,    -1,    -1,    -1,
      -1,    -1,   506,    -1,   508,    -1,   510,    -1,    -1,   513,
     514,    -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,
     534,    -1,   536,   537,   538,   539,    -1,    -1,    -1,   543,
      -1,    -1,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,    -1,    -1,   563,
     564,   565,   566,    -1,    -1,   569,   570,    -1,   572,   573,
     574,   575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,
      -1,    -1,    -1,   587,   588,   589,    -1,   591,   592,    -1,
     594,   595,    -1,    -1,    -1,    -1,    -1,   601,    -1,    -1,
     604,    -1,    -1,    -1,   608,   609,    -1,    -1,    -1,    -1,
      -1,   615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,
     624,    -1,   626,   627,   628,   629,    -1,    -1,   632,    -1,
      -1,    -1,   636,   637,    -1,    -1,   640,    -1,   642,   643,
      -1,     6,   646,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    16,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    89,    90,    91,    -1,    93,    -1,
      -1,    -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,
     125,   126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,
     135,   136,   137,   138,    -1,    -1,    -1,    -1,    -1,    -1,
     145,   146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,
      -1,   156,   157,   158,    -1,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,    -1,    -1,    -1,   172,   173,   174,
     175,   176,    -1,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,    -1,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,    -1,    -1,
     215,    -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,
     225,   226,   227,   228,   229,    -1,   231,   232,   233,    -1,
      -1,   236,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,
      -1,   246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,
     255,    -1,    -1,   258,    -1,   260,    -1,    -1,    -1,   264,
      -1,    -1,   267,   268,    -1,   270,   271,    -1,    -1,    -1,
      -1,    -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,
     285,    -1,    -1,    -1,    -1,   290,    -1,    -1,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,    -1,   317,   318,   319,   320,    -1,   322,   323,    -1,
      -1,    -1,    -1,   328,   329,   330,   331,   332,   333,    -1,
      -1,   336,   337,    -1,   339,    -1,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,    -1,    -1,   354,
     355,    -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,
      -1,    -1,   367,    -1,    -1,    -1,   371,    -1,   373,   374,
      -1,   376,   377,   378,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,   393,    -1,
      -1,    -1,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,    -1,    -1,    -1,    -1,    -1,   413,   414,
      -1,   416,    -1,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,    -1,    -1,   449,    -1,   451,   452,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,    -1,    -1,    -1,
     465,    -1,    -1,   468,   469,   470,   471,   472,    -1,    -1,
      -1,   476,   477,   478,   479,   480,   481,   482,    -1,   484,
     485,    -1,   487,    -1,    -1,    -1,    -1,   492,   493,   494,
      -1,    -1,    -1,    -1,   499,    -1,    -1,    -1,    -1,    -1,
      -1,   506,    -1,   508,    -1,   510,    -1,    -1,   513,   514,
      -1,    -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,
      -1,   536,   537,   538,   539,    -1,    -1,    -1,   543,    -1,
      -1,   546,   547,   548,   549,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,   559,   560,    -1,    -1,   563,   564,
     565,   566,    -1,    -1,   569,   570,    -1,   572,   573,   574,
     575,    -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,
      -1,    -1,   587,   588,   589,    -1,   591,   592,    -1,   594,
     595,    -1,    -1,    -1,    -1,    -1,   601,    -1,    -1,   604,
      -1,    -1,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,
     615,    -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,
      -1,   626,   627,   628,   629,    -1,    -1,   632,    -1,    -1,
      -1,   636,   637,    -1,    -1,   640,    -1,   642,   643,    -1,
       6,   646,     8,     9,    10,    11,    12,    -1,    -1,    -1,
      16,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    91,    -1,    93,    -1,    -1,
      -1,    97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,
      -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,   125,
     126,    -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,
     136,   137,   138,    -1,    -1,    -1,    -1,    -1,    -1,   145,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,   154,    -1,
     156,   157,   158,    -1,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,    -1,    -1,    -1,   172,   173,   174,   175,
     176,    -1,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,    -1,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,    -1,    -1,   215,
      -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,    -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,
     246,    -1,    -1,    -1,   250,   251,    -1,   253,   254,   255,
      -1,    -1,   258,    -1,   260,    -1,    -1,    -1,   264,    -1,
      -1,   267,   268,    -1,   270,   271,    -1,    -1,    -1,    -1,
      -1,   277,   278,    -1,   280,    -1,   282,    -1,   284,   285,
      -1,    -1,    -1,    -1,   290,    -1,    -1,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
      -1,   317,   318,   319,   320,    -1,   322,   323,    -1,    -1,
      -1,    -1,   328,   329,   330,   331,   332,   333,    -1,    -1,
     336,   337,    -1,   339,    -1,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,    -1,   354,   355,
      -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,
      -1,   367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,
     376,   377,   378,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,   393,    -1,    -1,
      -1,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,    -1,    -1,    -1,    -1,    -1,   413,   414,    -1,
     416,    -1,   418,   419,   420,   421,   422,    -1,   424,   425,
     426,    -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,    -1,    -1,   449,    -1,   451,   452,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,    -1,    -1,   465,
      -1,    -1,   468,   469,   470,   471,   472,    -1,    -1,    -1,
     476,   477,   478,   479,   480,   481,   482,    -1,   484,   485,
      -1,   487,    -1,    -1,    -1,    -1,   492,   493,   494,    -1,
      -1,    -1,    -1,   499,    -1,    -1,    -1,    -1,    -1,    -1,
     506,    -1,   508,    -1,   510,    -1,    -1,   513,   514,    -1,
      -1,    -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,   532,    -1,   534,    -1,
     536,   537,   538,   539,    -1,    -1,    -1,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,    -1,    -1,   563,   564,   565,
     566,    -1,    -1,   569,   570,    -1,   572,   573,   574,   575,
      -1,    -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,
      -1,   587,   588,   589,    -1,   591,   592,    -1,   594,   595,
      -1,    -1,    -1,    -1,    -1,   601,    -1,    -1,   604,    -1,
      -1,    -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,
      -1,   617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,
     626,   627,   628,   629,    -1,    -1,   632,    -1,    -1,    -1,
     636,   637,    -1,    -1,   640,    -1,   642,   643,    -1,     6,
     646,     8,     9,    10,    11,    12,    -1,    -1,    -1,    16,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    89,    90,    91,    -1,    93,    -1,    -1,    -1,
      97,    -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,   125,   126,
      -1,   128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,
     137,   138,    -1,    -1,    -1,    -1,    -1,    -1,   145,   146,
     147,    -1,    -1,    -1,   151,    -1,    -1,   154,    -1,   156,
     157,   158,    -1,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,    -1,    -1,    -1,   172,   173,   174,   175,   176,
      -1,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,    -1,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,    -1,    -1,   215,    -1,
      -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,   226,
     227,   228,   229,    -1,   231,   232,   233,    -1,    -1,   236,
      -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,   246,
      -1,    -1,    -1,   250,   251,    -1,   253,   254,   255,    -1,
      -1,   258,    -1,   260,    -1,    -1,    -1,   264,    -1,    -1,
     267,   268,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,
     277,   278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,
      -1,    -1,    -1,   290,    -1,    -1,   293,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,    -1,
     317,   318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,
      -1,   328,   329,   330,   331,   332,   333,    -1,    -1,   336,
     337,    -1,   339,    -1,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,    -1,   354,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,    -1,    -1,
     367,    -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,
     377,   378,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   392,   393,    -1,    -1,    -1,
     397,    -1,   399,   400,   401,   402,   403,   404,   405,   406,
     407,    -1,    -1,    -1,    -1,    -1,   413,   414,    -1,   416,
      -1,   418,   419,   420,   421,   422,    -1,   424,   425,   426,
      -1,    -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
      -1,    -1,   449,    -1,   451,   452,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,    -1,    -1,    -1,   465,    -1,
      -1,   468,   469,   470,   471,   472,    -1,    -1,    -1,   476,
     477,   478,   479,   480,   481,   482,    -1,   484,   485,    -1,
     487,    -1,    -1,    -1,    -1,   492,   493,   494,    -1,    -1,
      -1,    -1,   499,    -1,    -1,    -1,    -1,    -1,    -1,   506,
      -1,   508,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,
      -1,    -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,   532,    -1,   534,    -1,   536,
     537,   538,   539,    -1,    -1,    -1,   543,    -1,    -1,   546,
     547,   548,   549,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,   559,   560,    -1,    -1,   563,   564,   565,   566,
      -1,    -1,   569,   570,    -1,   572,   573,   574,   575,    -1,
      -1,    -1,    -1,    -1,   581,   582,    -1,    -1,    -1,    -1,
     587,   588,   589,    -1,   591,   592,    -1,   594,   595,    -1,
      -1,    -1,    -1,    -1,   601,    -1,    -1,   604,    -1,    -1,
      -1,   608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,
     617,    -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,
     627,   628,   629,    -1,    -1,   632,    -1,    -1,    -1,   636,
     637,    -1,    -1,   640,    -1,   642,   643,    -1,     6,   646,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    16,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    91,    -1,    93,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,    -1,    -1,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,    -1,    -1,    -1,    -1,    -1,   125,   126,    -1,
     128,    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,
     138,    -1,    -1,    -1,    -1,    -1,    -1,   145,   146,   147,
      -1,    -1,    -1,   151,    -1,    -1,   154,    -1,   156,   157,
     158,    -1,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,    -1,    -1,    -1,   172,   173,   174,   175,   176,    -1,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,    -1,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,    -1,    -1,   215,    -1,    -1,
      -1,    -1,    -1,   221,    -1,    -1,    -1,   225,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,    -1,
      -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,   246,    -1,
      -1,    -1,   250,   251,    -1,   253,   254,   255,    -1,    -1,
     258,    -1,   260,    -1,    -1,    -1,   264,    -1,    -1,   267,
     268,    -1,   270,   271,    -1,    -1,    -1,    -1,    -1,   277,
     278,    -1,   280,    -1,   282,    -1,   284,   285,    -1,    -1,
      -1,    -1,   290,    -1,    -1,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,    -1,   317,
     318,   319,   320,    -1,   322,   323,    -1,    -1,    -1,    -1,
     328,   329,   330,   331,   332,   333,    -1,    -1,   336,   337,
      -1,   339,    -1,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,    -1,   354,   355,    -1,    -1,
     358,   359,   360,   361,   362,    -1,    -1,    -1,    -1,   367,
      -1,    -1,    -1,   371,    -1,   373,   374,    -1,   376,   377,
     378,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,   393,    -1,    -1,    -1,   397,
      -1,   399,   400,   401,   402,   403,   404,   405,   406,   407,
      -1,    -1,    -1,    -1,    -1,   413,   414,    -1,   416,    -1,
     418,   419,   420,   421,   422,    -1,   424,   425,   426,    -1,
      -1,   429,    -1,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,    -1,
      -1,   449,    -1,   451,   452,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,    -1,    -1,   465,    -1,    -1,
     468,   469,   470,   471,   472,    -1,    -1,    -1,   476,   477,
     478,   479,   480,   481,   482,    -1,   484,   485,    -1,   487,
      -1,    -1,    -1,    -1,   492,   493,   494,    -1,    -1,    -1,
      -1,   499,    -1,    -1,    -1,    -1,    -1,    -1,   506,    -1,
     508,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,
      -1,    -1,   520,   521,   522,    -1,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,   532,    -1,   534,    -1,   536,   537,
     538,   539,    -1,    -1,    -1,   543,    -1,    -1,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,    -1,    -1,   563,   564,   565,   566,    -1,
      -1,   569,   570,    -1,   572,   573,   574,   575,    -1,    -1,
      -1,    -1,    -1,   581,   582,    -1,    -1,    -1,    -1,   587,
     588,   589,    -1,   591,   592,    -1,   594,   595,    -1,    -1,
      -1,    -1,    -1,   601,    -1,    -1,   604,    -1,    -1,    -1,
     608,   609,    -1,    -1,    -1,    -1,    -1,   615,    -1,   617,
      -1,    -1,   620,    -1,    -1,    -1,   624,    -1,   626,   627,
     628,   629,    -1,    -1,   632,    -1,    -1,    -1,   636,   637,
      -1,    -1,   640,    -1,   642,   643,    -1,    -1,   646
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    98,   120,   129,   130,   131,   142,   143,   155,   169,
     189,   207,   209,   214,   217,   240,   242,   262,   279,   283,
     379,   396,   398,   412,   423,   445,   448,   450,   453,   463,
     464,   473,   475,   483,   489,   497,   502,   503,   504,   535,
     542,   586,   598,   602,   605,   610,   641,   657,   668,   671,
     672,   673,   674,   675,   677,   682,   684,   706,   739,   766,
     773,   774,   893,   976,  1064,  1072,  1116,  1117,  1118,  1121,
    1135,  1138,  1143,  1145,  1146,  1151,  1154,  1159,  1166,  1177,
    1178,  1296,  1298,  1311,  1312,  1330,  1334,  1338,  1345,  1360,
    1364,  1367,  1377,  1383,  1387,  1389,  1390,  1443,  1464,  1470,
    1472,  1473,  1480,  1483,  1510,  1516,  1517,  1518,  1519,  1573,
    1580,  1581,    12,   107,   126,   199,   284,   417,   495,   560,
     562,   608,  1537,  1538,  1539,  1542,   280,   368,  1153,  1511,
     568,  1434,   234,     5,     6,     8,     9,    10,    11,    12,
      15,    16,    20,    23,    25,    26,    27,    28,    29,    30,
      32,    36,    40,    43,    44,    45,    47,    49,    50,    53,
      56,    57,    59,    60,    61,    63,    65,    66,    67,    68,
      69,    70,    72,    73,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    86,    87,    89,    90,    91,    92,
      93,    97,   100,   102,   105,   109,   110,   111,   114,   119,
     120,   125,   126,   128,   132,   134,   135,   136,   137,   138,
     142,   145,   146,   147,   151,   153,   154,   156,   157,   158,
     161,   162,   164,   165,   166,   167,   168,   169,   172,   173,
     174,   175,   176,   179,   180,   182,   183,   184,   185,   186,
     189,   190,   194,   195,   197,   199,   201,   203,   204,   205,
     206,   208,   210,   214,   215,   217,   220,   221,   225,   226,
     227,   228,   231,   232,   233,   236,   241,   242,   246,   250,
     251,   253,   254,   258,   260,   263,   264,   267,   270,   271,
     277,   278,   280,   282,   284,   285,   293,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   313,   314,   315,   317,   318,   319,
     320,   322,   323,   328,   329,   330,   331,   332,   333,   336,
     337,   339,   341,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   354,   355,   358,   359,   360,   361,   362,   366,
     367,   371,   373,   374,   376,   377,   378,   381,   391,   392,
     393,   395,   396,   397,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   410,   412,   413,   414,   416,   418,
     419,   420,   421,   422,   424,   425,   426,   429,   433,   434,
     435,   436,   437,   440,   441,   442,   443,   444,   446,   447,
     449,   450,   451,   454,   455,   456,   457,   458,   459,   460,
     461,   463,   465,   466,   468,   469,   470,   472,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   487,
     488,   492,   493,   494,   495,   499,   503,   505,   506,   507,
     508,   510,   511,   512,   513,   514,   520,   521,   522,   524,
     525,   527,   530,   532,   534,   535,   536,   537,   538,   539,
     542,   543,   546,   547,   548,   549,   550,   551,   554,   555,
     556,   557,   559,   560,   563,   564,   565,   566,   569,   570,
     572,   573,   574,   575,   581,   582,   586,   587,   588,   589,
     591,   592,   594,   595,   597,   598,   601,   604,   606,   608,
     609,   615,   617,   620,   624,   626,   627,   628,   629,   636,
     637,   638,   640,   641,   642,   643,   646,   733,  1431,  1437,
    1441,  1442,   313,   454,   559,   562,  1466,  1466,   637,  1512,
     107,   198,   284,   495,   515,   560,   565,   600,   608,   715,
     943,   944,   945,  1042,  1043,  1044,   230,   291,   426,  1336,
    1337,  1297,   107,   166,   199,   234,   284,   417,   495,   560,
     565,   583,   608,   624,  1307,  1437,  1153,   102,   532,   775,
     731,   732,   665,  1428,  1430,  1437,   683,   127,   219,   291,
    1313,   404,    86,   425,  1388,   110,   234,   643,  1395,  1466,
    1153,   657,   894,  1437,  1384,   483,   608,  1466,  1153,   127,
     291,  1314,  1333,  1378,   518,   763,   767,   768,  1437,   731,
    1512,  1437,  1181,  1182,  1183,    61,    62,   124,   208,   280,
     349,   401,   494,   581,   664,  1004,  1437,  1444,  1449,  1453,
    1454,  1346,   767,   203,   507,   581,   203,   507,   562,  1340,
     404,  1471,  1333,  1437,    32,    79,   153,   412,   434,   475,
     535,  1576,   489,   657,  1179,     0,   155,   669,   412,   103,
     272,   608,  1080,  1434,  1437,  1439,  1440,  1500,  1501,   604,
    1119,  1133,   175,   194,   399,  1365,  1428,  1437,   159,  1084,
    1437,   159,   733,   211,   733,  1439,   841,   842,   845,   868,
    1437,  1428,   229,  1306,   166,  1070,  1537,  1466,  1512,  1160,
     740,   665,   579,   184,  1136,  1147,    19,  1513,   229,   946,
     211,  1439,   843,   868,   946,   387,  1534,  1538,  1539,  1540,
    1541,  1542,   562,   944,   234,   234,   234,   196,  1305,  1429,
    1437,  1336,     8,    23,    29,    35,    37,    38,    39,    41,
      54,    55,    61,    62,    69,    72,    92,    95,    96,   101,
     103,   106,   107,   112,   113,   114,   119,   121,   124,   170,
     177,   178,   187,   194,   204,   206,   212,   218,   225,   229,
     240,   243,   269,   277,   288,   316,   321,   332,   336,   338,
     342,   343,   344,   345,   346,   353,   363,   364,   365,   369,
     370,   394,   401,   406,   407,   409,   424,   452,   453,   472,
     474,   480,   481,   487,   540,   541,   548,   552,   553,   558,
     568,   572,   573,   574,   575,   584,   585,   586,   590,   593,
     608,   612,   613,   614,   616,   621,   623,   628,   629,   646,
     650,   651,   652,   656,   657,   660,   661,   664,   665,  1002,
    1192,  1193,  1196,  1197,  1198,  1199,  1203,  1206,  1207,  1208,
    1209,  1210,  1211,  1218,  1219,  1414,  1416,  1418,  1419,  1420,
    1422,  1424,  1426,  1431,  1437,  1306,  1306,  1306,  1437,   211,
    1306,  1306,   868,  1306,  1306,  1306,  1466,   678,  1368,   134,
    1484,  1437,   378,    68,   430,   665,  1439,   230,  1112,  1437,
    1196,  1437,   244,  1391,  1465,  1466,   977,  1196,    48,   895,
     196,    35,   313,  1351,  1385,  1437,   731,  1155,  1466,   244,
    1315,   313,   425,   507,  1379,  1380,   617,   764,   497,   769,
    1481,   579,  1513,   599,  1520,  1521,   244,   385,  1273,  1274,
    1293,  1294,    13,   139,   219,   523,   524,   525,   526,   527,
     528,   545,  1188,  1189,  1190,  1533,   497,   665,    35,   124,
     159,   498,  1005,  1006,  1323,  1439,   193,  1323,   253,   430,
    1455,  1456,  1458,  1460,   664,  1439,    35,   124,  1008,  1009,
    1439,   665,   581,  1445,  1452,  1454,   659,  1446,  1323,    36,
      61,    72,    96,    98,   108,   157,   162,   165,   197,   199,
     208,   210,   233,   234,   259,   280,   313,   378,   405,   416,
     417,   420,   421,   441,   494,   507,   543,   562,   627,  1004,
    1041,  1347,  1351,  1352,  1354,  1450,   769,   444,   530,  1130,
    1131,  1132,   430,   633,  1122,  1123,  1124,  1130,  1339,  1437,
    1466,  1112,    37,   218,   568,  1415,  1435,  1575,  1575,  1575,
      95,  1574,  1575,  1575,  1181,  1179,   658,   663,  1437,   657,
    1195,   657,   227,   664,   227,   462,   659,  1505,   298,   299,
     442,   443,   520,   521,   522,   704,  1134,   608,  1125,  1126,
     159,  1362,  1361,   330,   566,   592,  1066,   606,  1440,  1068,
     847,   869,  1437,  1067,   381,     7,    58,   143,   364,   429,
     431,   870,  1065,   170,   731,   733,   529,  1543,  1544,  1069,
    1144,  1161,  1162,  1163,  1164,  1428,   657,   741,  1437,   685,
     686,  1303,  1304,  1428,  1303,    57,   366,   366,   445,  1514,
     363,   364,  1202,  1437,   846,   869,   192,     7,   731,   453,
      11,   166,   199,   417,   583,   718,  1536,  1544,  1559,  1561,
    1562,  1568,   199,   718,  1535,  1544,  1559,  1562,  1568,  1537,
    1542,   946,  1437,  1437,  1437,  1305,  1428,  1437,   196,   659,
     665,  1335,   657,   657,   657,  1206,   657,   657,   657,  1196,
    1231,   657,   657,   657,   657,   657,   657,   657,   657,  1195,
    1195,   657,   991,   657,   657,   657,   568,   657,   657,   657,
     657,   657,   657,   657,   657,   657,   657,   657,   657,   657,
    1196,   657,   657,   657,  1229,  1230,  1424,  1437,   657,   657,
     657,   657,   657,   657,   657,   657,   657,  1196,   991,   657,
     657,   657,   657,   657,   657,   657,   657,   657,   657,   657,
     657,   657,   657,   657,   657,   657,   991,   568,   657,   657,
     657,   568,   657,   657,   657,    37,   218,   568,   657,  1195,
     991,   991,   657,   657,   657,   657,   657,   657,  1206,  1206,
    1206,  1196,  1529,  1530,  1437,   664,  1220,  1439,  1437,   659,
      18,    19,    21,   384,   387,   644,  1194,  1200,  1201,  1434,
    1437,   159,   160,   200,   213,   252,   265,   292,   356,  1204,
      33,   140,   247,   273,   342,   439,   500,   501,   513,   648,
     649,   650,   651,   652,   653,   654,   655,  1202,  1206,    71,
     386,  1435,   257,   657,   665,  1437,   733,  1437,   375,   869,
     733,  1439,   367,   626,   879,   881,  1308,  1309,  1310,  1352,
     733,   731,  1302,  1306,   611,   679,    35,   132,   157,   161,
     201,   221,   285,   380,   416,   425,   440,   465,   508,   539,
    1369,  1374,  1375,  1466,    85,   664,   776,   777,   778,   779,
    1437,    13,    14,    98,   129,   143,   166,   169,   182,   209,
     234,   240,   283,   418,   422,   438,   446,   454,   489,   502,
     503,   554,   583,   605,   607,  1485,  1487,  1489,  1490,    21,
     159,  1261,  1262,  1474,  1437,  1315,   512,   665,    50,    84,
     291,  1397,  1428,  1467,  1468,  1152,   658,   275,   278,   427,
     896,   898,   664,   676,  1434,   285,  1156,  1440,  1157,  1158,
    1428,  1139,  1428,    50,  1381,   659,  1435,    56,    66,    76,
      89,    90,    91,   105,   331,   348,   485,   547,   564,   770,
     772,    13,   422,  1482,  1487,   483,  1515,  1514,    13,   139,
    1526,   145,   389,   664,  1291,  1292,  1295,  1439,    48,   274,
    1277,  1278,   196,  1185,   193,   283,  1191,  1192,  1190,  1437,
      71,  1011,  1196,  1440,   401,   568,  1462,   271,   377,   639,
     659,  1459,   659,  1457,   208,   280,   494,  1451,  1323,  1437,
    1455,  1446,  1323,  1447,  1448,  1449,  1453,    13,    35,   124,
     375,  1196,  1463,   165,   273,   631,  1358,   657,   107,   166,
     199,   417,   562,   583,   608,   624,  1358,    13,   955,  1439,
    1277,   196,   247,  1353,  1355,    70,   539,   193,   539,   559,
      70,   539,    13,    43,    93,    97,   251,   329,   393,   514,
     556,  1341,  1342,  1343,   165,   221,   539,   539,  1277,  1358,
    1355,   285,   156,    73,   419,   559,   582,   539,   620,   659,
     377,   639,    87,   659,   193,   705,  1304,   489,   657,   661,
    1234,  1235,  1236,  1237,  1238,  1242,  1428,   659,   376,  1578,
     555,  1579,   642,   256,   468,  1577,   658,  1274,  1278,  1521,
    1522,  1524,  1525,   155,   670,   658,   658,    48,  1439,    48,
     633,    65,   254,   362,   531,   549,   640,  1496,  1497,  1501,
     633,  1077,   159,   159,   159,   159,   159,   159,   659,   159,
    1120,   401,  1127,  1439,   193,  1177,  1311,  1312,  1330,  1334,
    1363,  1366,  1415,  1437,   124,   941,   942,   952,   953,  1014,
     110,   734,     7,   848,   734,   657,   109,   865,   865,   865,
       4,     7,    12,    14,    17,    27,    28,    58,    63,    64,
      69,    77,    83,    86,    95,   110,   128,   136,   137,   143,
     151,   157,   168,   191,   232,   234,   241,   260,   283,   319,
     337,   341,   379,   385,   392,   398,   401,   433,   447,   448,
     449,   450,   479,   536,   537,   538,   543,   560,   563,   586,
     599,   606,   633,   636,   891,   948,   950,   952,   953,  1085,
    1090,  1091,  1093,  1096,  1102,  1103,  1104,  1109,  1110,  1270,
    1071,   488,   624,  1544,  1303,   247,   659,   234,   261,   398,
    1039,  1172,  1174,  1175,   742,   743,  1196,   231,   293,   294,
     295,   296,   297,   300,   301,   302,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   314,   315,   700,   701,   704,
     455,   456,   457,   458,   459,   460,   461,   687,   688,   175,
     426,   659,  1137,    59,   175,   179,   193,   328,   426,  1148,
    1149,  1150,    57,   445,   170,   714,   848,   110,   865,  1500,
     199,   946,   733,  1437,   733,   733,  1544,  1428,  1045,  1046,
    1045,  1045,   611,   398,  1240,  1241,   665,  1235,  1429,   652,
    1437,  1196,  1196,    13,   139,  1225,  1263,  1225,  1225,  1225,
     630,  1233,  1196,  1196,  1196,  1228,  1228,  1196,  1196,  1196,
     139,  1225,  1263,   370,   658,   658,  1196,  1196,  1196,  1196,
    1424,  1529,   115,   116,   117,   118,   119,   222,   223,   224,
     225,   332,   334,   335,   336,   343,   424,   486,   487,   628,
     645,   646,  1258,  1259,  1196,  1227,  1228,   111,   114,   572,
     575,  1260,   139,  1221,  1196,  1196,  1196,  1196,  1258,  1196,
    1228,  1230,    10,   659,   665,   139,  1225,  1196,  1196,   139,
    1225,  1196,  1196,  1228,  1228,  1228,  1196,  1196,  1228,  1199,
    1196,  1196,  1196,  1196,  1196,  1196,   658,  1196,  1225,  1225,
    1196,  1196,   139,  1225,  1196,  1259,  1259,  1196,    46,   266,
     580,  1196,  1196,   658,  1425,  1426,  1437,  1225,  1225,  1196,
    1196,  1196,   658,   659,   658,   489,   657,  1527,  1528,  1196,
    1451,   498,   665,  1193,  1434,  1437,  1196,  1196,  1196,   178,
     369,   585,   601,  1202,    13,    20,  1198,  1205,  1199,  1199,
     657,  1206,  1199,  1199,  1199,  1199,   273,  1199,  1199,   243,
    1199,   243,  1199,  1199,  1199,  1199,  1199,    33,   247,   273,
     439,  1439,  1206,  1435,  1196,  1215,  1216,  1217,   652,  1437,
     665,  1428,  1308,   659,  1310,   157,  1440,  1499,  1303,  1299,
     664,   680,   681,   285,   285,   285,   285,    50,   285,   285,
     659,  1370,   114,   572,   575,   771,   781,  1219,  1418,  1424,
    1439,   659,   159,   416,  1488,   477,   477,   560,   565,   608,
     624,   382,  1492,   559,   375,  1494,    67,   507,  1491,   108,
     624,  1493,   375,   659,  1437,   185,   360,  1437,  1475,  1476,
    1428,  1434,  1437,  1167,   280,  1396,  1262,   659,  1303,    73,
     657,   903,   904,   903,   904,   399,   906,   215,   261,  1439,
      31,   579,  1386,   659,   579,   659,   579,  1303,  1240,    13,
    1382,  1380,   659,   159,  1488,   375,   375,  1437,  1178,   568,
    1436,  1436,  1439,   659,  1196,  1275,  1423,   288,   370,   590,
    1279,  1280,  1416,  1437,  1191,   144,  1187,  1235,   631,  1264,
     605,   247,   124,  1010,  1013,  1439,  1323,   657,   430,   451,
     492,  1461,  1458,  1456,   665,   665,   665,  1454,  1196,  1463,
     659,  1452,   247,  1356,  1434,  1196,   652,   946,   733,   733,
     733,  1428,   733,   731,  1428,   285,   347,   539,  1350,  1350,
    1358,  1437,   733,  1358,  1440,  1353,   733,  1358,   250,   557,
     180,   193,  1344,   659,  1356,   705,  1353,  1428,  1355,  1353,
    1353,   273,   631,  1359,  1359,  1132,   510,  1124,    60,  1188,
    1237,  1243,  1246,  1437,    99,   237,   256,   269,   352,   474,
     545,  1239,   497,   659,  1240,  1415,   402,   193,  1277,   568,
     401,   568,  1439,   568,   568,   568,    19,  1495,   317,   318,
     322,   323,  1078,  1079,     5,   401,  1073,  1074,  1075,  1076,
    1432,  1434,   121,   187,   288,   370,   590,  1284,  1432,   121,
     187,   218,   288,   370,   590,  1282,  1434,  1434,   704,  1434,
     705,   159,   125,  1128,    86,   942,    71,  1004,   135,    77,
      92,   263,   340,   366,   428,   529,   736,   738,   435,   594,
     866,   867,   236,   862,   863,   864,   871,   879,   881,   107,
     220,   391,   401,   408,   511,   608,   716,   717,  1434,    26,
     320,   856,   857,   858,   871,   872,   873,   879,   881,   849,
     850,   856,    74,    88,   398,   963,   966,   967,  1037,  1039,
    1043,  1044,  1111,  1323,  1324,  1111,   398,  1324,  1324,  1111,
    1324,   398,   398,  1324,  1324,  1324,   579,   135,  1324,   259,
     398,   560,   192,   398,   415,  1039,  1111,   259,  1324,   398,
     398,   560,   135,  1324,  1324,  1324,  1324,  1324,  1111,   398,
      48,  1324,   892,  1324,   398,   400,    21,   159,   579,  1039,
    1115,   398,   398,  1324,  1324,  1324,  1324,   138,   329,  1324,
    1324,   398,  1324,   400,   615,   615,   948,   659,   890,   891,
    1091,   657,   665,   962,   968,  1427,  1437,   375,   726,  1081,
     126,   246,  1428,   124,  1165,  1437,  1163,  1428,  1173,   657,
    1174,   658,   659,   159,   159,   159,   159,   159,   159,   159,
     159,   159,   159,   159,   159,   159,   159,   159,   159,   159,
     159,   159,   159,   659,   705,   159,   159,   159,   159,   159,
     159,   159,   659,  1304,   606,  1149,   940,   941,    77,   361,
     436,   595,   859,   860,   861,   871,   875,   876,   877,   878,
     879,   881,   638,   610,   844,  1505,  1437,   733,   657,   470,
    1569,     9,    31,   839,   707,   588,   611,  1053,   375,   375,
     375,  1235,   657,  1264,  1437,  1264,   665,  1335,   659,   658,
    1225,   658,  1196,   658,   658,   658,  1196,   149,   630,  1232,
      21,   658,   611,   658,   659,   658,   658,   659,   611,   659,
    1228,   658,   652,   658,   659,   659,   658,   658,   658,   658,
     196,   659,   658,   659,  1228,   658,   659,   659,   659,   651,
     659,   658,   658,   657,  1424,  1437,  1225,   658,   658,   658,
    1225,   658,   659,   658,   658,   658,   658,   658,   659,   658,
     247,   658,   659,   659,   658,   659,   659,   658,   658,   658,
     659,   196,   659,  1225,   658,   658,   659,   659,   659,   658,
     196,  1196,   196,  1196,   196,  1196,   196,   658,   659,   658,
     658,   658,   658,   659,    21,   271,   659,  1029,   658,  1228,
    1244,  1245,   489,   657,  1180,   599,   662,  1439,  1196,  1437,
     178,   369,   585,   601,   657,    19,  1196,  1529,   164,  1266,
    1199,  1196,  1196,  1199,   657,  1206,  1199,  1194,   658,   659,
     657,   665,  1437,  1300,  1310,  1324,   659,    52,   467,  1113,
    1303,  1439,   659,   705,  1375,  1303,  1376,   779,   782,   783,
     778,   371,   481,   780,   559,   657,  1502,  1440,  1502,  1502,
    1502,   199,   417,   562,  1486,  1490,   159,   185,   200,   213,
     264,   265,   292,   360,   414,  1477,  1479,  1264,  1240,   665,
    1168,  1169,  1170,  1171,  1428,   235,   291,   430,   639,  1469,
    1468,   657,   912,  1199,   121,   187,   218,   288,   370,   590,
    1283,  1286,  1287,   551,   907,   897,    12,   899,  1196,  1434,
    1440,  1440,  1158,  1428,   175,   426,   609,  1140,  1141,  1142,
     489,   497,   616,   617,   657,   938,  1316,  1317,  1319,  1320,
    1321,   705,   772,   771,   659,  1440,   199,   417,  1486,  1004,
    1007,  1292,    22,   130,  1276,   659,   374,   659,  1196,   211,
    1267,   499,   401,  1462,  1462,    78,   591,   430,  1323,  1448,
    1434,   196,  1357,   658,  1437,  1440,  1358,   425,  1277,  1343,
    1357,  1358,  1353,  1428,  1358,  1358,  1434,  1196,  1432,  1192,
     599,   658,  1523,  1524,  1234,   256,   256,   388,  1247,   256,
     269,   474,  1247,  1242,  1234,  1331,  1332,  1425,  1236,  1262,
     659,   333,   568,    21,    48,  1496,  1282,  1282,  1282,  1282,
    1079,   283,   602,   173,  1075,   124,   243,   358,  1434,   159,
     403,  1129,  1283,  1324,  1324,   350,  1434,   529,   529,   529,
     529,   529,   488,  1434,  1434,  1324,   659,   864,  1434,  1434,
    1434,  1434,  1282,  1434,  1434,   658,   659,  1324,  1324,   659,
     858,   851,   852,   871,   872,   873,  1061,  1427,  1153,    64,
     192,   415,   600,   965,  1038,  1061,  1039,  1040,  1040,   124,
    1437,  1427,  1153,  1284,  1282,  1427,  1282,    13,  1092,  1100,
    1101,  1437,  1153,  1434,  1434,  1434,  1004,  1324,  1282,  1092,
     261,  1100,   261,  1427,  1427,   954,  1439,  1101,  1092,  1324,
     185,   264,   366,   957,  1282,   124,  1437,  1284,  1284,  1427,
    1153,  1271,  1272,  1425,   124,  1282,   895,  1434,  1153,  1427,
    1428,  1153,  1153,    80,    82,   124,   147,   186,   437,   956,
     124,  1282,   124,  1282,   124,  1282,  1437,  1282,  1092,   951,
       7,   143,  1104,   959,   960,   961,   962,   963,  1437,     9,
     185,  1114,   438,   964,   965,  1031,   969,   665,    81,   484,
     448,  1082,  1545,   657,   415,  1254,  1255,  1256,  1437,  1196,
     657,  1282,  1432,  1282,  1282,  1432,  1432,  1282,  1282,  1432,
    1432,  1432,  1432,  1432,  1432,  1432,  1282,  1282,  1432,  1419,
     701,   657,   689,   689,   657,   694,   694,   657,   697,   697,
     657,   692,   688,  1324,  1324,  1324,  1324,   659,   861,  1439,
     284,   176,   183,   853,   854,   855,   871,   872,   873,   874,
     877,   878,   879,   880,   881,  1077,   470,   719,  1563,   122,
     245,   432,   546,   958,   657,   129,   240,   605,   840,   273,
     657,   883,   947,   949,   950,    47,   215,   482,  1058,  1058,
    1428,  1428,  1428,  1264,  1257,  1437,  1273,   243,  1196,   658,
     571,  1196,  1196,   153,    35,    62,   111,   114,   122,   258,
     354,   505,   575,   603,  1226,  1005,  1196,  1196,  1005,  1226,
     658,   658,   243,   243,  1196,  1196,  1196,   385,  1223,  1196,
    1196,  1196,  1196,  1196,  1199,   658,   658,  1196,  1196,  1196,
    1196,  1196,  1196,  1228,   243,  1196,  1196,  1196,   658,  1196,
    1196,  1196,  1196,   196,  1196,   196,  1196,   196,  1196,  1196,
    1196,    35,    62,  1024,  1025,  1026,  1027,  1028,  1283,  1282,
     658,   658,  1184,  1185,  1186,  1531,  1532,  1533,  1244,  1180,
     658,  1526,   665,  1062,  1529,  1198,   658,   659,   658,  1206,
    1258,  1258,    19,  1196,  1529,  1266,  1217,  1227,   652,  1437,
    1301,   954,  1440,  1113,   681,  1371,   159,   659,  1437,  1503,
    1504,   579,   652,  1428,  1437,  1498,  1498,  1498,  1478,  1277,
     497,  1316,  1317,   659,  1172,  1174,  1436,   639,   280,   900,
     901,   902,  1437,   658,    48,   657,   914,   904,   159,   657,
     579,  1141,  1188,  1331,   658,   938,  1318,  1421,  1422,  1425,
    1437,  1520,   657,  1322,  1325,   159,   209,   196,  1498,  1498,
    1498,  1006,    73,  1399,  1423,  1280,  1280,    48,   216,  1265,
     339,   657,   658,  1463,  1284,  1348,   162,   627,   370,  1349,
    1264,  1353,  1184,  1526,  1262,   662,   256,  1242,  1247,  1247,
     256,   375,   375,   611,   659,  1264,  1323,   191,   230,   610,
    1249,  1250,  1251,  1252,  1253,  1282,  1434,  1434,   732,  1283,
    1434,   159,  1013,  1006,   110,   110,   126,   246,   288,   370,
     590,   882,  1285,  1286,  1431,   864,   717,   882,   882,   858,
     659,   852,  1094,   657,   261,   261,  1040,  1061,  1046,  1061,
    1061,   143,   497,  1092,  1105,  1087,   659,  1283,  1006,  1434,
     560,  1427,  1113,   633,   560,  1434,  1106,  1092,   659,  1276,
    1092,   579,  1097,  1092,   657,   658,   659,  1437,  1428,    34,
      35,    40,    42,    44,    45,    62,   111,   114,   122,   141,
     158,   186,   188,   204,   205,   245,   258,   277,   286,   287,
     289,   325,   326,   327,   344,   345,   346,   351,   354,   372,
     373,   406,   407,   432,   493,   497,   509,   569,   572,   575,
     576,   577,   578,   618,   619,   646,   970,   978,   981,   982,
     983,   984,   985,   986,   987,  1437,   364,   413,    25,   167,
     720,   579,   136,   151,   722,   657,  1546,  1092,   658,   659,
     702,   703,  1282,   658,   690,   691,  1437,   658,   695,   696,
    1437,   658,   698,   699,  1432,  1433,   657,   658,   693,  1434,
    1283,   882,   882,   861,   381,   211,  1324,  1324,   659,   855,
    1073,   958,   375,   744,   745,   747,  1437,   512,  1570,   375,
    1428,   273,   884,   889,   890,   959,   889,   659,   949,   708,
     710,   712,   658,   659,   274,  1281,  1196,   658,  1196,   571,
     657,   995,   996,   996,   657,   990,   657,   988,   989,   995,
     996,   245,   990,   245,   658,   658,   658,   658,   658,  1196,
    1196,   658,   658,   659,   658,    48,   491,  1222,   659,   659,
     658,   659,   658,   247,  1212,  1213,   658,   658,   658,   658,
     659,   658,   658,  1196,   658,   193,   658,   658,   659,   658,
     659,   659,   658,  1196,   658,  1196,   658,  1196,   658,   658,
     658,   657,  1019,  1019,    22,   130,   472,   650,  1021,  1022,
    1023,   659,   659,  1264,  1192,  1533,  1184,   658,  1523,  1527,
    1437,   658,  1228,  1198,   658,   659,   658,   658,  1108,  1109,
    1110,   193,   633,  1372,    56,    66,    76,    89,    90,    91,
     105,   331,   348,   469,   485,   547,   564,   784,   783,   658,
     659,  1500,   665,   665,   579,   579,   579,   657,  1331,   375,
    1329,  1329,  1170,  1428,  1174,   230,  1176,  1392,   658,   659,
     898,   398,   915,   916,  1283,   900,  1440,  1192,   657,  1319,
    1320,   658,   658,   659,   665,   124,  1196,  1326,  1327,  1328,
     659,   771,   382,  1499,   196,   196,   196,   152,   163,   383,
     567,  1400,  1401,   276,  1402,  1268,  1423,  1196,  1273,  1462,
    1277,  1277,  1358,  1527,  1234,  1242,   256,   256,  1234,  1242,
    1196,  1196,   657,  1332,  1273,  1328,  1039,  1039,  1250,   119,
    1434,   852,   399,   657,  1095,  1196,  1061,  1046,   657,  1045,
    1045,   124,   124,   968,  1148,  1101,  1011,   562,   970,  1086,
    1272,  1427,  1098,  1100,  1088,  1376,   961,   657,  1032,   995,
     995,   996,   990,   988,   411,   979,   988,   988,    23,    35,
      49,   597,  1004,  1015,  1016,  1017,    62,   618,   982,   984,
    1017,  1017,    62,   619,   619,   622,   988,   980,   996,   990,
     990,  1017,   995,   996,    27,    71,    75,    77,   124,   369,
     375,   415,   493,   543,   600,   998,   999,  1000,  1012,  1030,
    1202,   622,   995,  1017,    35,   995,  1018,   995,   995,   996,
     657,   989,   997,   665,   413,  1196,  1196,   375,   726,   733,
     375,    77,   727,  1437,  1547,    21,   658,  1255,   658,   659,
     658,   659,   658,   659,   665,   658,   659,   691,   658,   659,
     657,  1437,   882,   882,   855,   512,   484,   658,   659,   746,
    1434,   238,   247,   390,   748,   749,   750,   751,  1428,  1428,
     938,   658,   230,   453,   886,  1398,   949,   657,   657,   657,
    1437,  1280,  1258,  1196,   121,   288,   370,   590,  1017,   370,
     370,  1258,  1258,  1196,  1224,  1423,  1415,   658,  1196,  1196,
    1228,    44,   352,   658,   633,  1214,  1196,  1258,  1196,  1196,
    1196,  1196,   658,   658,   658,  1283,   658,  1029,  1024,  1022,
    1024,  1025,  1282,  1267,   658,  1228,  1110,  1109,  1373,   430,
    1504,   633,  1507,   652,   652,  1500,  1500,  1500,  1327,  1329,
     146,  1176,   267,  1398,   902,   215,   261,   917,   658,   659,
     658,  1184,  1522,  1319,  1320,  1421,  1437,   658,   659,  1325,
     196,  1499,  1499,  1499,    48,    48,   152,    48,  1401,   533,
     567,  1403,  1404,   634,   635,   659,  1269,  1277,   658,   705,
     375,   611,  1242,  1242,   375,   611,  1257,  1281,   193,  1248,
    1248,  1283,   915,   658,   657,   657,  1059,  1060,  1437,   657,
     657,   114,   572,   575,   650,   651,  1417,  1418,  1114,  1428,
    1107,  1153,  1099,  1140,   658,  1033,  1437,   316,  1034,   505,
     603,   647,   992,   993,   994,   657,   992,   992,    35,    23,
     597,  1004,    35,  1005,  1017,   622,   992,   657,  1017,   992,
    1010,   124,   147,   186,  1434,  1002,  1003,  1417,   605,   124,
     124,   138,   329,   261,    71,  1000,   202,   971,   261,   369,
    1017,  1018,  1017,  1018,   992,   370,   992,  1437,  1258,   507,
    1434,   142,  1083,   658,   659,  1548,  1549,   703,   691,   696,
    1437,   699,   659,   657,   716,  1434,   720,  1564,   747,   978,
    1001,   658,   659,   746,   193,   658,   658,   947,    21,   939,
    1059,  1059,  1059,   658,   658,   658,   658,   658,   658,   659,
     658,   658,   658,   659,   658,   659,   658,   339,   263,   425,
     658,   658,   658,   658,   658,   658,  1020,   658,   659,  1265,
     658,   174,   283,   209,  1505,  1505,  1505,   658,   261,   244,
     657,   905,   899,   918,  1437,   916,  1328,  1499,  1415,  1415,
      48,  1415,    48,    48,  1404,  1423,   417,  1288,  1196,   657,
    1196,   657,   658,   211,   256,   385,   657,   657,   658,  1059,
    1059,   658,   659,  1276,   657,  1059,  1059,  1419,  1419,  1089,
    1090,  1114,   244,   658,   659,   197,   397,   506,   375,  1035,
     994,  1063,  1415,  1005,  1018,  1063,  1002,   617,  1010,    15,
      21,   721,   728,   729,  1437,   489,   657,  1550,  1554,   691,
     691,   658,   725,   726,   470,  1011,  1571,   750,  1437,   148,
     885,   889,   657,   938,   658,   658,   658,   370,  1423,  1196,
     339,   172,   658,  1282,  1273,   382,   633,  1506,  1506,  1506,
     605,   562,   912,   908,   657,   616,   919,  1415,  1415,  1415,
      16,  1293,  1294,  1257,  1257,    48,    48,  1254,  1256,   658,
     658,    77,   260,  1047,  1050,  1053,  1054,  1055,  1060,   370,
     658,   658,   657,  1437,   129,   605,   658,   659,   658,   657,
     534,   723,    54,    68,   181,   229,   255,   268,   378,   471,
     730,   789,   791,   792,   793,   795,   796,   797,   798,   799,
     800,   802,   810,   811,   814,   825,   828,   830,   831,  1431,
    1438,  1442,  1555,   657,  1552,  1553,   633,  1556,  1551,   658,
     659,   722,  1565,   735,  1001,   480,  1522,   886,   938,   887,
    1047,   633,  1048,  1052,  1054,  1057,  1049,  1051,  1054,  1056,
     658,   658,   658,  1277,   209,   317,   318,   322,   323,  1508,
    1509,  1331,  1428,   658,   550,   913,   910,   911,  1437,   247,
     270,    77,   110,   234,   319,   337,   361,   560,   935,   936,
     937,  1352,   657,  1191,   658,   658,   658,   658,  1031,  1047,
    1434,  1324,  1055,  1276,   658,  1048,  1049,   915,    52,   366,
     467,   497,  1036,  1036,  1017,  1415,  1017,   977,  1196,   154,
     724,   812,   815,  1437,   196,   360,   803,   790,  1438,  1438,
    1437,   794,   672,   290,   452,   632,   834,    32,   832,   666,
    1181,  1552,   658,  1554,    53,    64,   280,  1520,   691,   727,
    1001,   133,   736,   737,  1202,  1572,   190,   410,  1557,  1558,
     658,  1520,   709,   395,   711,  1057,   713,  1056,  1288,   382,
    1282,  1282,  1282,  1282,  1509,  1240,  1283,   658,   659,   921,
     570,  1324,   135,   135,  1324,  1324,  1324,  1324,   657,   930,
     937,   157,   370,  1289,  1290,  1282,   658,     6,   124,   369,
     375,   375,   658,  1196,  1196,   630,   817,   821,   196,  1437,
     805,   806,  1196,   753,   788,   789,   791,   793,   795,   797,
     798,   799,   800,   802,   810,   825,   828,   830,   753,   835,
     833,   826,   829,   658,  1522,    64,   382,    64,   658,   142,
    1566,   133,   788,  1439,  1560,   888,  1108,  1431,  1108,  1108,
    1191,  1393,   909,   911,   657,   923,   925,   920,  1434,  1324,
    1324,  1285,  1285,  1283,  1437,   551,   931,   932,  1324,   658,
     659,   605,   129,   544,   625,   975,   813,   822,   149,   821,
     824,   244,   153,  1196,   153,   788,   663,   604,  1196,   754,
     834,   832,   382,   382,   728,   735,   788,  1522,  1007,   913,
     657,   924,   925,   926,   324,   922,   925,  1434,  1434,   933,
     658,   659,   954,  1290,  1036,  1036,    77,   600,   972,   973,
     974,  1030,  1202,   630,   816,   818,  1196,   753,   153,   801,
     229,   807,   290,   663,   837,   836,   123,   752,   755,   827,
    1438,   827,  1567,  1394,   658,   659,   324,   928,   929,  1199,
     934,  1439,   932,  1434,   261,   974,   261,   369,   819,   818,
     824,   823,    54,   804,  1437,   571,  1196,   142,    94,   171,
     759,   785,  1437,   153,   788,   663,   788,   478,  1405,   925,
     659,   927,   935,  1196,   153,   571,   659,   753,   838,   753,
     214,   659,   756,    85,   104,   663,   227,  1399,   929,   658,
     820,    54,   753,  1437,   808,   153,   153,   193,  1437,  1001,
     193,   193,    48,  1402,   571,   149,   150,   809,   452,   632,
     757,   124,   786,   762,   763,  1282,   758,  1415,   230,  1406,
     753,   753,   805,   517,   519,   760,   761,   762,   765,  1202,
    1437,   787,  1177,   370,   657,  1408,   659,   788,   195,  1196,
     276,   478,  1407,   658,   664,  1409,  1410,  1425,   497,  1411,
     761,  1439,   658,   659,  1412,  1413,  1425,  1410,   659,  1323,
    1413,  1328
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, YYTHD, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, YYTHD)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, YYTHD); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (YYTHD);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, YYTHD)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    class THD *YYTHD;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , YYTHD);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, YYTHD); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, YYTHD)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    class THD *YYTHD;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}

/* Prevent warnings from -Wmissing-prototypes.  */
#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (class THD *YYTHD);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */





/*-------------------------.
| yyparse or yypush_parse.  |
`-------------------------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (class THD *YYTHD)
#else
int
yyparse (YYTHD)
    class THD *YYTHD;
#endif
#endif
{
/* The lookahead symbol.  */
int yychar;

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval;

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks thru separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[2];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yytoken = 0;
  yyss = yyssa;
  yyvs = yyvsa;
  yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */
  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;

#if YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 1;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:

/* Line 1455 of yacc.c  */
#line 1583 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
                !thd->m_parser_state->has_comment())
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:

/* Line 1455 of yacc.c  */
#line 1595 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:

/* Line 1455 of yacc.c  */
#line 1620 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 20:

/* Line 1455 of yacc.c  */
#line 1648 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {  MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 22:

/* Line 1455 of yacc.c  */
#line 1650 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 31:

/* Line 1455 of yacc.c  */
#line 1659 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 46:

/* Line 1455 of yacc.c  */
#line 1674 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 52:

/* Line 1455 of yacc.c  */
#line 1680 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 53:

/* Line 1455 of yacc.c  */
#line 1681 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].set)); }
    break;

  case 56:

/* Line 1455 of yacc.c  */
#line 1684 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 62:

/* Line 1455 of yacc.c  */
#line 1690 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 65:

/* Line 1455 of yacc.c  */
#line 1697 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 68:

/* Line 1455 of yacc.c  */
#line 1712 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (4)].lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
    break;

  case 69:

/* Line 1455 of yacc.c  */
#line 1732 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 70:

/* Line 1455 of yacc.c  */
#line 1739 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 71:

/* Line 1455 of yacc.c  */
#line 1749 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 72:

/* Line 1455 of yacc.c  */
#line 1756 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 77:

/* Line 1455 of yacc.c  */
#line 1771 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 78:

/* Line 1455 of yacc.c  */
#line 1783 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 79:

/* Line 1455 of yacc.c  */
#line 1791 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 80:

/* Line 1455 of yacc.c  */
#line 1802 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
    break;

  case 81:

/* Line 1455 of yacc.c  */
#line 1813 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 82:

/* Line 1455 of yacc.c  */
#line 1815 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 83:

/* Line 1455 of yacc.c  */
#line 1825 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 86:

/* Line 1455 of yacc.c  */
#line 1834 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_DB);
          }
    break;

  case 87:

/* Line 1455 of yacc.c  */
#line 1841 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_DB);
          }
    break;

  case 88:

/* Line 1455 of yacc.c  */
#line 1848 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_TABLE);
          }
    break;

  case 89:

/* Line 1455 of yacc.c  */
#line 1855 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
    break;

  case 90:

/* Line 1455 of yacc.c  */
#line 1862 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
    break;

  case 91:

/* Line 1455 of yacc.c  */
#line 1869 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
    break;

  case 92:

/* Line 1455 of yacc.c  */
#line 1877 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_REWRITE_DB);
          }
    break;

  case 93:

/* Line 1455 of yacc.c  */
#line 1886 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 94:

/* Line 1455 of yacc.c  */
#line 1892 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 95:

/* Line 1455 of yacc.c  */
#line 1899 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 96:

/* Line 1455 of yacc.c  */
#line 1906 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 97:

/* Line 1455 of yacc.c  */
#line 1914 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *db_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                           (yyvsp[(1) - (1)].lex_str).length,
                                                           thd->charset());
            (yyval.item)= db_item;
          }
    break;

  case 98:

/* Line 1455 of yacc.c  */
#line 1924 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 99:

/* Line 1455 of yacc.c  */
#line 1930 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 100:

/* Line 1455 of yacc.c  */
#line 1936 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (5)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (5)].item));
          }
    break;

  case 101:

/* Line 1455 of yacc.c  */
#line 1944 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(4) - (7)].item));
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(6) - (7)].item));
            (yyval.item_list)= (yyvsp[(1) - (7)].item_list);
          }
    break;

  case 102:

/* Line 1455 of yacc.c  */
#line 1952 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 103:

/* Line 1455 of yacc.c  */
#line 1958 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 104:

/* Line 1455 of yacc.c  */
#line 1965 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 105:

/* Line 1455 of yacc.c  */
#line 1972 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 106:

/* Line 1455 of yacc.c  */
#line 1980 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item_string *table_item= new (thd->mem_root) Item_string((yyvsp[(1) - (3)].lex_str).str,
                                                              (yyvsp[(1) - (3)].lex_str).length,
                                                              thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            (yyval.item)= table_item;
          }
    break;

  case 107:

/* Line 1455 of yacc.c  */
#line 1993 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 108:

/* Line 1455 of yacc.c  */
#line 1999 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 109:

/* Line 1455 of yacc.c  */
#line 2006 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 110:

/* Line 1455 of yacc.c  */
#line 2013 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 111:

/* Line 1455 of yacc.c  */
#line 2021 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *string_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                               (yyvsp[(1) - (1)].lex_str).length,
                                                               thd->charset());
            (yyval.item)= string_item;
          }
    break;

  case 114:

/* Line 1455 of yacc.c  */
#line 2037 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 115:

/* Line 1455 of yacc.c  */
#line 2041 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 116:

/* Line 1455 of yacc.c  */
#line 2045 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 117:

/* Line 1455 of yacc.c  */
#line 2049 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
            if (strlen((yyvsp[(3) - (3)].lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
    break;

  case 118:

/* Line 1455 of yacc.c  */
#line 2059 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 119:

/* Line 1455 of yacc.c  */
#line 2063 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 120:

/* Line 1455 of yacc.c  */
#line 2067 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 121:

/* Line 1455 of yacc.c  */
#line 2072 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[(3) - (3)]).cpp.start, (yylsp[(3) - (3)]).cpp.end - (yylsp[(3) - (3)]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 122:

/* Line 1455 of yacc.c  */
#line 2083 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 123:

/* Line 1455 of yacc.c  */
#line 2088 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 124:

/* Line 1455 of yacc.c  */
#line 2092 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 125:

/* Line 1455 of yacc.c  */
#line 2096 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 126:

/* Line 1455 of yacc.c  */
#line 2100 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 127:

/* Line 1455 of yacc.c  */
#line 2104 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 128:

/* Line 1455 of yacc.c  */
#line 2108 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 129:

/* Line 1455 of yacc.c  */
#line 2113 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 130:

/* Line 1455 of yacc.c  */
#line 2117 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 131:

/* Line 1455 of yacc.c  */
#line 2122 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 132:

/* Line 1455 of yacc.c  */
#line 2155 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 133:

/* Line 1455 of yacc.c  */
#line 2160 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 138:

/* Line 1455 of yacc.c  */
#line 2177 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[(1) - (1)].ulong_num));
          }
    break;

  case 139:

/* Line 1455 of yacc.c  */
#line 2183 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 140:

/* Line 1455 of yacc.c  */
#line 2187 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 141:

/* Line 1455 of yacc.c  */
#line 2203 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 142:

/* Line 1455 of yacc.c  */
#line 2207 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 143:

/* Line 1455 of yacc.c  */
#line 2217 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
    break;

  case 144:

/* Line 1455 of yacc.c  */
#line 2222 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
         Lex->mi.channel= (yyvsp[(3) - (3)].lex_str).str;
         Lex->mi.for_channel= true;
       }
    break;

  case 145:

/* Line 1455 of yacc.c  */
#line 2239 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_WRITE, MDL_SHARED))
              MYSQL_YYABORT;
            /*
              Instruct open_table() to acquire SHARED lock to check the
              existance of table. If the table does not exist then
              it will be upgraded EXCLUSIVE MDL lock. If table exist
              then open_table() will return with an error or warning.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_FOR_CREATE;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 146:

/* Line 1455 of yacc.c  */
#line 2265 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->set_current_select(lex->select_lex);
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 147:

/* Line 1455 of yacc.c  */
#line 2284 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 148:

/* Line 1455 of yacc.c  */
#line 2289 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 149:

/* Line 1455 of yacc.c  */
#line 2293 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 150:

/* Line 1455 of yacc.c  */
#line 2296 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 151:

/* Line 1455 of yacc.c  */
#line 2301 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 152:

/* Line 1455 of yacc.c  */
#line 2305 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 153:

/* Line 1455 of yacc.c  */
#line 2308 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 154:

/* Line 1455 of yacc.c  */
#line 2313 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 155:

/* Line 1455 of yacc.c  */
#line 2317 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 156:

/* Line 1455 of yacc.c  */
#line 2319 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 157:

/* Line 1455 of yacc.c  */
#line 2324 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 158:

/* Line 1455 of yacc.c  */
#line 2331 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 159:

/* Line 1455 of yacc.c  */
#line 2337 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 160:

/* Line 1455 of yacc.c  */
#line 2340 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->create_info.options=(yyvsp[(3) - (8)].num);
          }
    break;

  case 161:

/* Line 1455 of yacc.c  */
#line 2346 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 162:

/* Line 1455 of yacc.c  */
#line 2350 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 163:

/* Line 1455 of yacc.c  */
#line 2355 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            Lex->server_options.m_server_name= (yyvsp[(3) - (11)].lex_str);
            Lex->server_options.set_scheme((yyvsp[(7) - (11)].lex_str));
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_create_server(&Lex->server_options);
          }
    break;

  case 166:

/* Line 1455 of yacc.c  */
#line 2371 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_username((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 167:

/* Line 1455 of yacc.c  */
#line 2375 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_host((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 168:

/* Line 1455 of yacc.c  */
#line 2379 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_db((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 169:

/* Line 1455 of yacc.c  */
#line 2383 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_owner((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 170:

/* Line 1455 of yacc.c  */
#line 2387 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_password((yyvsp[(2) - (2)].lex_str));
            Lex->contains_plaintext_password= true;
          }
    break;

  case 171:

/* Line 1455 of yacc.c  */
#line 2392 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_socket((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 172:

/* Line 1455 of yacc.c  */
#line 2396 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_port((yyvsp[(2) - (2)].ulong_num));
          }
    break;

  case 173:

/* Line 1455 of yacc.c  */
#line 2403 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->create_info.options= (yyvsp[(2) - (3)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(3) - (3)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 174:

/* Line 1455 of yacc.c  */
#line 2423 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 175:

/* Line 1455 of yacc.c  */
#line 2434 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));

            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 177:

/* Line 1455 of yacc.c  */
#line 2443 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 178:

/* Line 1455 of yacc.c  */
#line 2451 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 179:

/* Line 1455 of yacc.c  */
#line 2453 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 180:

/* Line 1455 of yacc.c  */
#line 2459 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 181:

/* Line 1455 of yacc.c  */
#line 2465 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 182:

/* Line 1455 of yacc.c  */
#line 2474 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 183:

/* Line 1455 of yacc.c  */
#line 2481 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 185:

/* Line 1455 of yacc.c  */
#line 2491 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 186:

/* Line 1455 of yacc.c  */
#line 2499 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 188:

/* Line 1455 of yacc.c  */
#line 2505 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 189:

/* Line 1455 of yacc.c  */
#line 2511 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 190:

/* Line 1455 of yacc.c  */
#line 2519 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 191:

/* Line 1455 of yacc.c  */
#line 2521 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 192:

/* Line 1455 of yacc.c  */
#line 2528 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          SP_TYPE_EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[(0) - (0)]).cpp.end);
          }
    break;

  case 193:

/* Line 1455 of yacc.c  */
#line 2574 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 207:

/* Line 1455 of yacc.c  */
#line 2603 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex->db= NULL;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           lex->alter_password.update_account_locked_column= false;
           lex->alter_password.account_locked= false;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 208:

/* Line 1455 of yacc.c  */
#line 2620 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->alter_password.update_password_expired_fields= false;
           lex->alter_password.update_password_expired_column= false;
           lex->alter_password.use_default_password_lifetime= true;
           lex->alter_password.expire_after_days= 0;
         }
    break;

  case 209:

/* Line 1455 of yacc.c  */
#line 2631 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 210:

/* Line 1455 of yacc.c  */
#line 2645 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(to_lex_cstring(db), (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 211:

/* Line 1455 of yacc.c  */
#line 2663 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 212:

/* Line 1455 of yacc.c  */
#line 2664 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 213:

/* Line 1455 of yacc.c  */
#line 2668 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 214:

/* Line 1455 of yacc.c  */
#line 2669 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 215:

/* Line 1455 of yacc.c  */
#line 2675 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 216:

/* Line 1455 of yacc.c  */
#line 2677 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 217:

/* Line 1455 of yacc.c  */
#line 2679 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 218:

/* Line 1455 of yacc.c  */
#line 2681 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 219:

/* Line 1455 of yacc.c  */
#line 2683 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 220:

/* Line 1455 of yacc.c  */
#line 2685 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 221:

/* Line 1455 of yacc.c  */
#line 2687 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 222:

/* Line 1455 of yacc.c  */
#line 2692 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 223:

/* Line 1455 of yacc.c  */
#line 2693 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 224:

/* Line 1455 of yacc.c  */
#line 2694 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 225:

/* Line 1455 of yacc.c  */
#line 2699 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 226:

/* Line 1455 of yacc.c  */
#line 2703 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 227:

/* Line 1455 of yacc.c  */
#line 2710 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->call_value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), SP_TYPE_PROCEDURE);
          }
    break;

  case 228:

/* Line 1455 of yacc.c  */
#line 2718 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 233:

/* Line 1455 of yacc.c  */
#line 2734 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

           Lex->call_value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 234:

/* Line 1455 of yacc.c  */
#line 2740 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            Lex->call_value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 239:

/* Line 1455 of yacc.c  */
#line 2760 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 240:

/* Line 1455 of yacc.c  */
#line 2780 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   sp_variable::MODE_IN);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 245:

/* Line 1455 of yacc.c  */
#line 2821 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(3) - (4)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 246:

/* Line 1455 of yacc.c  */
#line 2849 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 247:

/* Line 1455 of yacc.c  */
#line 2850 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 248:

/* Line 1455 of yacc.c  */
#line 2851 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 249:

/* Line 1455 of yacc.c  */
#line 2852 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 250:

/* Line 1455 of yacc.c  */
#line 2856 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 252:

/* Line 1455 of yacc.c  */
#line 2861 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 254:

/* Line 1455 of yacc.c  */
#line 2867 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 255:

/* Line 1455 of yacc.c  */
#line 2871 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 256:

/* Line 1455 of yacc.c  */
#line 2898 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 257:

/* Line 1455 of yacc.c  */
#line 2909 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              // sp_opt_default only pushes start ptr for DEFAULT clause.
              const char *expr_start_ptr=
                sp->m_parser_data.pop_expr_start_ptr();
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[(5) - (5)]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= new (thd->mem_root) Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (fill_field_definition(thd, sp, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is=
                new (thd->mem_root)
                  sp_instr_set(sp->instructions(),
                               lex,
                               var_idx,
                               dflt_value_item,
                               dflt_value_query,
                               (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 258:

/* Line 1455 of yacc.c  */
#line 2982 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 259:

/* Line 1455 of yacc.c  */
#line 2999 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new (thd->mem_root)
                sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
    break;

  case 260:

/* Line 1455 of yacc.c  */
#line 3041 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 261:

/* Line 1455 of yacc.c  */
#line 3078 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[(4) - (4)]).raw.end);
          }
    break;

  case 262:

/* Line 1455 of yacc.c  */
#line 3087 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {             /*$7*/
            CONTEXTUALIZE((yyvsp[(6) - (6)].select));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(6) - (6)]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              new (thd->mem_root)
                sp_instr_cpush(sp->instructions(), pctx,
                               cursor_lex, cursor_query,
                               pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 263:

/* Line 1455 of yacc.c  */
#line 3152 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 264:

/* Line 1455 of yacc.c  */
#line 3153 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 265:

/* Line 1455 of yacc.c  */
#line 3159 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 266:

/* Line 1455 of yacc.c  */
#line 3161 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 267:

/* Line 1455 of yacc.c  */
#line 3166 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 268:

/* Line 1455 of yacc.c  */
#line 3189 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 270:

/* Line 1455 of yacc.c  */
#line 3204 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 271:

/* Line 1455 of yacc.c  */
#line 3225 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 272:

/* Line 1455 of yacc.c  */
#line 3226 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 273:

/* Line 1455 of yacc.c  */
#line 3231 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 274:

/* Line 1455 of yacc.c  */
#line 3235 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 275:

/* Line 1455 of yacc.c  */
#line 3248 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 276:

/* Line 1455 of yacc.c  */
#line 3254 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 277:

/* Line 1455 of yacc.c  */
#line 3260 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 278:

/* Line 1455 of yacc.c  */
#line 3269 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 279:

/* Line 1455 of yacc.c  */
#line 3282 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 280:

/* Line 1455 of yacc.c  */
#line 3308 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 281:

/* Line 1455 of yacc.c  */
#line 3313 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 282:

/* Line 1455 of yacc.c  */
#line 3315 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 283:

/* Line 1455 of yacc.c  */
#line 3320 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information(); }
    break;

  case 284:

/* Line 1455 of yacc.c  */
#line 3322 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= (yyvsp[(2) - (2)].signal_item_list); }
    break;

  case 285:

/* Line 1455 of yacc.c  */
#line 3327 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[(1) - (3)].da_condition_item_name), (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 286:

/* Line 1455 of yacc.c  */
#line 3334 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= (yyvsp[(1) - (5)].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[(3) - (5)].da_condition_item_name), (yyvsp[(5) - (5)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 287:

/* Line 1455 of yacc.c  */
#line 3346 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 288:

/* Line 1455 of yacc.c  */
#line 3348 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 289:

/* Line 1455 of yacc.c  */
#line 3368 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 290:

/* Line 1455 of yacc.c  */
#line 3374 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
    break;

  case 291:

/* Line 1455 of yacc.c  */
#line 3376 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
    break;

  case 292:

/* Line 1455 of yacc.c  */
#line 3378 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
    break;

  case 293:

/* Line 1455 of yacc.c  */
#line 3380 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
    break;

  case 294:

/* Line 1455 of yacc.c  */
#line 3382 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
    break;

  case 295:

/* Line 1455 of yacc.c  */
#line 3384 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
    break;

  case 296:

/* Line 1455 of yacc.c  */
#line 3386 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
    break;

  case 297:

/* Line 1455 of yacc.c  */
#line 3388 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
    break;

  case 298:

/* Line 1455 of yacc.c  */
#line 3390 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
    break;

  case 299:

/* Line 1455 of yacc.c  */
#line 3392 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
    break;

  case 300:

/* Line 1455 of yacc.c  */
#line 3394 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
    break;

  case 301:

/* Line 1455 of yacc.c  */
#line 3396 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
    break;

  case 302:

/* Line 1455 of yacc.c  */
#line 3401 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 303:

/* Line 1455 of yacc.c  */
#line 3415 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 304:

/* Line 1455 of yacc.c  */
#line 3431 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 305:

/* Line 1455 of yacc.c  */
#line 3433 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 306:

/* Line 1455 of yacc.c  */
#line 3435 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
    break;

  case 307:

/* Line 1455 of yacc.c  */
#line 3440 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 308:

/* Line 1455 of yacc.c  */
#line 3446 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 309:

/* Line 1455 of yacc.c  */
#line 3455 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 310:

/* Line 1455 of yacc.c  */
#line 3461 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 311:

/* Line 1455 of yacc.c  */
#line 3470 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 312:

/* Line 1455 of yacc.c  */
#line 3478 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[(1) - (1)].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[(1) - (1)]).raw.start,
                (yylsp[(1) - (1)]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 313:

/* Line 1455 of yacc.c  */
#line 3506 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[(2) - (2)].lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
    break;

  case 314:

/* Line 1455 of yacc.c  */
#line 3514 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 315:

/* Line 1455 of yacc.c  */
#line 3516 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 316:

/* Line 1455 of yacc.c  */
#line 3525 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 317:

/* Line 1455 of yacc.c  */
#line 3530 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 318:

/* Line 1455 of yacc.c  */
#line 3536 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 319:

/* Line 1455 of yacc.c  */
#line 3545 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 320:

/* Line 1455 of yacc.c  */
#line 3553 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 321:

/* Line 1455 of yacc.c  */
#line 3555 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 322:

/* Line 1455 of yacc.c  */
#line 3557 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 323:

/* Line 1455 of yacc.c  */
#line 3559 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 324:

/* Line 1455 of yacc.c  */
#line 3561 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 325:

/* Line 1455 of yacc.c  */
#line 3563 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 326:

/* Line 1455 of yacc.c  */
#line 3565 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 327:

/* Line 1455 of yacc.c  */
#line 3567 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 328:

/* Line 1455 of yacc.c  */
#line 3569 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 329:

/* Line 1455 of yacc.c  */
#line 3571 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 330:

/* Line 1455 of yacc.c  */
#line 3573 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 331:

/* Line 1455 of yacc.c  */
#line 3575 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 332:

/* Line 1455 of yacc.c  */
#line 3577 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 333:

/* Line 1455 of yacc.c  */
#line 3582 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 334:

/* Line 1455 of yacc.c  */
#line 3602 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 335:

/* Line 1455 of yacc.c  */
#line 3625 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 336:

/* Line 1455 of yacc.c  */
#line 3627 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end); }
    break;

  case 337:

/* Line 1455 of yacc.c  */
#line 3629 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            (yyval.item) = (yyvsp[(3) - (3)].item);
          }
    break;

  case 351:

/* Line 1455 of yacc.c  */
#line 3654 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 352:

/* Line 1455 of yacc.c  */
#line 3656 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 353:

/* Line 1455 of yacc.c  */
#line 3664 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
    break;

  case 354:

/* Line 1455 of yacc.c  */
#line 3673 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(2) - (2)]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                new (thd->mem_root)
                  sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 355:

/* Line 1455 of yacc.c  */
#line 3720 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);

            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 356:

/* Line 1455 of yacc.c  */
#line 3730 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != SP_TYPE_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              new (thd->mem_root)
                sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 357:

/* Line 1455 of yacc.c  */
#line 3778 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 358:

/* Line 1455 of yacc.c  */
#line 3789 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 359:

/* Line 1455 of yacc.c  */
#line 3801 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 360:

/* Line 1455 of yacc.c  */
#line 3860 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i=
              new (thd->mem_root) sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 361:

/* Line 1455 of yacc.c  */
#line 3910 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new (thd->mem_root)
                sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 362:

/* Line 1455 of yacc.c  */
#line 3934 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new (thd->mem_root)
                sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 363:

/* Line 1455 of yacc.c  */
#line 3955 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 364:

/* Line 1455 of yacc.c  */
#line 3960 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new (thd->mem_root)
                sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 368:

/* Line 1455 of yacc.c  */
#line 3990 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 369:

/* Line 1455 of yacc.c  */
#line 4008 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 370:

/* Line 1455 of yacc.c  */
#line 4028 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(0) - (0)]).raw.end);
          }
    break;

  case 371:

/* Line 1455 of yacc.c  */
#line 4037 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(2) - (2)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex,
                                     (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 372:

/* Line 1455 of yacc.c  */
#line 4076 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i =
              new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 373:

/* Line 1455 of yacc.c  */
#line 4095 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 379:

/* Line 1455 of yacc.c  */
#line 4118 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 380:

/* Line 1455 of yacc.c  */
#line 4129 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              new (thd->mem_root)
                sp_instr_set_case_expr(sp->instructions(), lex,
                                       case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 381:

/* Line 1455 of yacc.c  */
#line 4175 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 382:

/* Line 1455 of yacc.c  */
#line 4182 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 383:

/* Line 1455 of yacc.c  */
#line 4189 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 388:

/* Line 1455 of yacc.c  */
#line 4206 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 389:

/* Line 1455 of yacc.c  */
#line 4215 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              new (thd->mem_root)
                sp_instr_jump_case_when(sp->instructions(), lex,
                                        pctx->get_current_case_expr_id(),
                                        (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 390:

/* Line 1455 of yacc.c  */
#line 4258 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 391:

/* Line 1455 of yacc.c  */
#line 4266 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 392:

/* Line 1455 of yacc.c  */
#line 4275 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 393:

/* Line 1455 of yacc.c  */
#line 4313 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 394:

/* Line 1455 of yacc.c  */
#line 4321 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              new (thd->mem_root)
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 396:

/* Line 1455 of yacc.c  */
#line 4339 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 397:

/* Line 1455 of yacc.c  */
#line 4357 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 398:

/* Line 1455 of yacc.c  */
#line 4376 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 399:

/* Line 1455 of yacc.c  */
#line 4377 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 400:

/* Line 1455 of yacc.c  */
#line 4382 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 401:

/* Line 1455 of yacc.c  */
#line 4398 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 402:

/* Line 1455 of yacc.c  */
#line 4415 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 403:

/* Line 1455 of yacc.c  */
#line 4426 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 404:

/* Line 1455 of yacc.c  */
#line 4434 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 405:

/* Line 1455 of yacc.c  */
#line 4449 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i=
                new (thd->mem_root) sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i=
                new (thd->mem_root)
                  sp_instr_cpop(sp->instructions(), pctx, (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 406:

/* Line 1455 of yacc.c  */
#line 4485 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
                new (thd->mem_root)
                  sp_instr_jump(sp->instructions(), pctx,
                                pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 407:

/* Line 1455 of yacc.c  */
#line 4500 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw.end);
          }
    break;

  case 408:

/* Line 1455 of yacc.c  */
#line 4509 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 409:

/* Line 1455 of yacc.c  */
#line 4550 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
              new (thd->mem_root)
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 410:

/* Line 1455 of yacc.c  */
#line 4568 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(3) - (3)]).raw.end);
          }
    break;

  case 411:

/* Line 1455 of yacc.c  */
#line 4577 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                             /*$6*/
            ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(5) - (5)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                     pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 413:

/* Line 1455 of yacc.c  */
#line 4621 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 414:

/* Line 1455 of yacc.c  */
#line 4623 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 415:

/* Line 1455 of yacc.c  */
#line 4628 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 416:

/* Line 1455 of yacc.c  */
#line 4630 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 417:

/* Line 1455 of yacc.c  */
#line 4632 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 421:

/* Line 1455 of yacc.c  */
#line 4666 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 422:

/* Line 1455 of yacc.c  */
#line 4668 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 423:

/* Line 1455 of yacc.c  */
#line 4678 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE;
          }
    break;

  case 424:

/* Line 1455 of yacc.c  */
#line 4684 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE;
          }
    break;

  case 429:

/* Line 1455 of yacc.c  */
#line 4707 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 481:

/* Line 1455 of yacc.c  */
#line 4806 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 482:

/* Line 1455 of yacc.c  */
#line 4814 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 483:

/* Line 1455 of yacc.c  */
#line 4822 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 484:

/* Line 1455 of yacc.c  */
#line 4830 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 485:

/* Line 1455 of yacc.c  */
#line 4842 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 486:

/* Line 1455 of yacc.c  */
#line 4854 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 487:

/* Line 1455 of yacc.c  */
#line 4859 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 488:

/* Line 1455 of yacc.c  */
#line 4864 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 489:

/* Line 1455 of yacc.c  */
#line 4872 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 490:

/* Line 1455 of yacc.c  */
#line 4880 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 491:

/* Line 1455 of yacc.c  */
#line 4888 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 492:

/* Line 1455 of yacc.c  */
#line 4896 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 493:

/* Line 1455 of yacc.c  */
#line 4904 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 494:

/* Line 1455 of yacc.c  */
#line 4912 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 495:

/* Line 1455 of yacc.c  */
#line 4920 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 496:

/* Line 1455 of yacc.c  */
#line 4933 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 497:

/* Line 1455 of yacc.c  */
#line 4946 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 498:

/* Line 1455 of yacc.c  */
#line 4960 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->file_block_size != 0)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "FILE_BLOCK_SIZE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->file_block_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 499:

/* Line 1455 of yacc.c  */
#line 4974 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 500:

/* Line 1455 of yacc.c  */
#line 4979 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 501:

/* Line 1455 of yacc.c  */
#line 4991 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulonglong_number);}
    break;

  case 502:

/* Line 1455 of yacc.c  */
#line 4993 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            size_t str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 503:

/* Line 1455 of yacc.c  */
#line 5043 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 504:

/* Line 1455 of yacc.c  */
#line 5046 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 505:

/* Line 1455 of yacc.c  */
#line 5048 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 506:

/* Line 1455 of yacc.c  */
#line 5063 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 507:

/* Line 1455 of yacc.c  */
#line 5082 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 508:

/* Line 1455 of yacc.c  */
#line 5085 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             CONTEXTUALIZE((yyvsp[(2) - (3)].create_select));
             Select->set_braces(1);
           }
    break;

  case 509:

/* Line 1455 of yacc.c  */
#line 5090 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             if ((yyvsp[(5) - (5)].node) != NULL)
               CONTEXTUALIZE((yyvsp[(5) - (5)].node));
           }
    break;

  case 510:

/* Line 1455 of yacc.c  */
#line 5097 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 511:

/* Line 1455 of yacc.c  */
#line 5099 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(3) - (3)].create_select));
            Select->set_braces(0);
          }
    break;

  case 512:

/* Line 1455 of yacc.c  */
#line 5104 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(5) - (5)].union_list) != NULL)
              CONTEXTUALIZE((yyvsp[(5) - (5)].union_list));
          }
    break;

  case 513:

/* Line 1455 of yacc.c  */
#line 5109 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].create_select));
            Select->set_braces(1);
          }
    break;

  case 514:

/* Line 1455 of yacc.c  */
#line 5114 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             if ((yyvsp[(7) - (7)].node) != NULL)
               CONTEXTUALIZE((yyvsp[(7) - (7)].node));
          }
    break;

  case 515:

/* Line 1455 of yacc.c  */
#line 5122 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 516:

/* Line 1455 of yacc.c  */
#line 5158 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 518:

/* Line 1455 of yacc.c  */
#line 5164 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
    break;

  case 520:

/* Line 1455 of yacc.c  */
#line 5182 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_syntax_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 521:

/* Line 1455 of yacc.c  */
#line 5194 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 523:

/* Line 1455 of yacc.c  */
#line 5203 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 524:

/* Line 1455 of yacc.c  */
#line 5210 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 525:

/* Line 1455 of yacc.c  */
#line 5211 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 526:

/* Line 1455 of yacc.c  */
#line 5213 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 527:

/* Line 1455 of yacc.c  */
#line 5215 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 528:

/* Line 1455 of yacc.c  */
#line 5217 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 529:

/* Line 1455 of yacc.c  */
#line 5219 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 530:

/* Line 1455 of yacc.c  */
#line 5223 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 531:

/* Line 1455 of yacc.c  */
#line 5225 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 532:

/* Line 1455 of yacc.c  */
#line 5230 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
    break;

  case 533:

/* Line 1455 of yacc.c  */
#line 5232 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 534:

/* Line 1455 of yacc.c  */
#line 5248 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 535:

/* Line 1455 of yacc.c  */
#line 5249 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 536:

/* Line 1455 of yacc.c  */
#line 5253 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 537:

/* Line 1455 of yacc.c  */
#line 5254 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 538:

/* Line 1455 of yacc.c  */
#line 5259 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 539:

/* Line 1455 of yacc.c  */
#line 5278 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 540:

/* Line 1455 of yacc.c  */
#line 5288 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).cpp.end), (yyvsp[(2) - (3)].item),
                                         const_cast<char *>((yylsp[(2) - (3)]).cpp.end), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 541:

/* Line 1455 of yacc.c  */
#line 5304 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: replace @1.cpp.end with @2.cpp.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (Lex->part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).cpp.end), (yyvsp[(2) - (3)].item),
                                              const_cast<char *>((yylsp[(2) - (3)]).cpp.end), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 542:

/* Line 1455 of yacc.c  */
#line 5317 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 543:

/* Line 1455 of yacc.c  */
#line 5319 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 544:

/* Line 1455 of yacc.c  */
#line 5334 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 545:

/* Line 1455 of yacc.c  */
#line 5336 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 546:

/* Line 1455 of yacc.c  */
#line 5337 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 547:

/* Line 1455 of yacc.c  */
#line 5340 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 548:

/* Line 1455 of yacc.c  */
#line 5345 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 549:

/* Line 1455 of yacc.c  */
#line 5349 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 550:

/* Line 1455 of yacc.c  */
#line 5350 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 551:

/* Line 1455 of yacc.c  */
#line 5355 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 552:

/* Line 1455 of yacc.c  */
#line 5373 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 553:

/* Line 1455 of yacc.c  */
#line 5390 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 554:

/* Line 1455 of yacc.c  */
#line 5392 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 555:

/* Line 1455 of yacc.c  */
#line 5407 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 556:

/* Line 1455 of yacc.c  */
#line 5423 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 557:

/* Line 1455 of yacc.c  */
#line 5444 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 558:

/* Line 1455 of yacc.c  */
#line 5445 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 559:

/* Line 1455 of yacc.c  */
#line 5450 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 560:

/* Line 1455 of yacc.c  */
#line 5469 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 561:

/* Line 1455 of yacc.c  */
#line 5474 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 562:

/* Line 1455 of yacc.c  */
#line 5483 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 563:

/* Line 1455 of yacc.c  */
#line 5505 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 564:

/* Line 1455 of yacc.c  */
#line 5520 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 565:

/* Line 1455 of yacc.c  */
#line 5522 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 566:

/* Line 1455 of yacc.c  */
#line 5537 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 567:

/* Line 1455 of yacc.c  */
#line 5542 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 568:

/* Line 1455 of yacc.c  */
#line 5563 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 569:

/* Line 1455 of yacc.c  */
#line 5568 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 570:

/* Line 1455 of yacc.c  */
#line 5597 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_syntax_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 571:

/* Line 1455 of yacc.c  */
#line 5608 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 572:

/* Line 1455 of yacc.c  */
#line 5609 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 573:

/* Line 1455 of yacc.c  */
#line 5614 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 574:

/* Line 1455 of yacc.c  */
#line 5625 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 575:

/* Line 1455 of yacc.c  */
#line 5627 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_syntax_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 576:

/* Line 1455 of yacc.c  */
#line 5650 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 577:

/* Line 1455 of yacc.c  */
#line 5651 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 578:

/* Line 1455 of yacc.c  */
#line 5656 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_syntax_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 579:

/* Line 1455 of yacc.c  */
#line 5669 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_syntax_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 580:

/* Line 1455 of yacc.c  */
#line 5691 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 581:

/* Line 1455 of yacc.c  */
#line 5705 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 582:

/* Line 1455 of yacc.c  */
#line 5730 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 583:

/* Line 1455 of yacc.c  */
#line 5731 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 584:

/* Line 1455 of yacc.c  */
#line 5736 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_syntax_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 585:

/* Line 1455 of yacc.c  */
#line 5768 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 586:

/* Line 1455 of yacc.c  */
#line 5773 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str; }
    break;

  case 587:

/* Line 1455 of yacc.c  */
#line 5777 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 588:

/* Line 1455 of yacc.c  */
#line 5778 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 589:

/* Line 1455 of yacc.c  */
#line 5782 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 590:

/* Line 1455 of yacc.c  */
#line 5783 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 591:

/* Line 1455 of yacc.c  */
#line 5788 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 592:

/* Line 1455 of yacc.c  */
#line 5790 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 593:

/* Line 1455 of yacc.c  */
#line 5796 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 594:

/* Line 1455 of yacc.c  */
#line 5798 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 595:

/* Line 1455 of yacc.c  */
#line 5800 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 596:

/* Line 1455 of yacc.c  */
#line 5802 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 597:

/* Line 1455 of yacc.c  */
#line 5804 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 598:

/* Line 1455 of yacc.c  */
#line 5806 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 599:

/* Line 1455 of yacc.c  */
#line 5815 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_select)= NEW_PTN PT_create_select((yyvsp[(1) - (4)].optimizer_hints), (yyvsp[(2) - (4)].select_options), (yyvsp[(3) - (4)].item_list2), (yyvsp[(4) - (4)].table_expression));
          }
    break;

  case 600:

/* Line 1455 of yacc.c  */
#line 5821 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 601:

/* Line 1455 of yacc.c  */
#line 5822 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 602:

/* Line 1455 of yacc.c  */
#line 5826 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 603:

/* Line 1455 of yacc.c  */
#line 5827 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 604:

/* Line 1455 of yacc.c  */
#line 5831 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 605:

/* Line 1455 of yacc.c  */
#line 5832 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 606:

/* Line 1455 of yacc.c  */
#line 5836 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 607:

/* Line 1455 of yacc.c  */
#line 5837 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 608:

/* Line 1455 of yacc.c  */
#line 5841 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 609:

/* Line 1455 of yacc.c  */
#line 5842 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 610:

/* Line 1455 of yacc.c  */
#line 5846 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 611:

/* Line 1455 of yacc.c  */
#line 5847 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 612:

/* Line 1455 of yacc.c  */
#line 5851 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 613:

/* Line 1455 of yacc.c  */
#line 5855 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 614:

/* Line 1455 of yacc.c  */
#line 5856 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 622:

/* Line 1455 of yacc.c  */
#line 5877 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 623:

/* Line 1455 of yacc.c  */
#line 5882 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 624:

/* Line 1455 of yacc.c  */
#line 5887 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 625:

/* Line 1455 of yacc.c  */
#line 5892 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 626:

/* Line 1455 of yacc.c  */
#line 5897 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 627:

/* Line 1455 of yacc.c  */
#line 5902 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 628:

/* Line 1455 of yacc.c  */
#line 5907 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_COMPRESS;
            Lex->create_info.compress= (yyvsp[(3) - (3)].lex_str);
	  }
    break;

  case 629:

/* Line 1455 of yacc.c  */
#line 5912 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 630:

/* Line 1455 of yacc.c  */
#line 5917 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 631:

/* Line 1455 of yacc.c  */
#line 5932 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 632:

/* Line 1455 of yacc.c  */
#line 5938 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 633:

/* Line 1455 of yacc.c  */
#line 5953 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 634:

/* Line 1455 of yacc.c  */
#line 5958 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                my_syntax_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 635:

/* Line 1455 of yacc.c  */
#line 5973 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 636:

/* Line 1455 of yacc.c  */
#line 5979 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 637:

/* Line 1455 of yacc.c  */
#line 5997 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 638:

/* Line 1455 of yacc.c  */
#line 6002 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 639:

/* Line 1455 of yacc.c  */
#line 6007 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 640:

/* Line 1455 of yacc.c  */
#line 6012 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 641:

/* Line 1455 of yacc.c  */
#line 6017 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 642:

/* Line 1455 of yacc.c  */
#line 6022 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->select_lex->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 643:

/* Line 1455 of yacc.c  */
#line 6026 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex->table_list;
            lex->select_lex->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 646:

/* Line 1455 of yacc.c  */
#line 6050 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 647:

/* Line 1455 of yacc.c  */
#line 6055 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 648:

/* Line 1455 of yacc.c  */
#line 6060 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 649:

/* Line 1455 of yacc.c  */
#line 6065 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.tablespace= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_TABLESPACE;
          }
    break;

  case 650:

/* Line 1455 of yacc.c  */
#line 6070 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 651:

/* Line 1455 of yacc.c  */
#line 6072 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 652:

/* Line 1455 of yacc.c  */
#line 6074 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 653:

/* Line 1455 of yacc.c  */
#line 6080 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 654:

/* Line 1455 of yacc.c  */
#line 6088 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 655:

/* Line 1455 of yacc.c  */
#line 6106 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 656:

/* Line 1455 of yacc.c  */
#line 6123 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data<handlerton*>(plugin);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::SL_WARNING,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 657:

/* Line 1455 of yacc.c  */
#line 6149 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data<handlerton*>(plugin);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 658:

/* Line 1455 of yacc.c  */
#line 6166 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 659:

/* Line 1455 of yacc.c  */
#line 6167 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 660:

/* Line 1455 of yacc.c  */
#line 6168 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 661:

/* Line 1455 of yacc.c  */
#line 6169 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 662:

/* Line 1455 of yacc.c  */
#line 6170 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 663:

/* Line 1455 of yacc.c  */
#line 6171 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 664:

/* Line 1455 of yacc.c  */
#line 6175 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 665:

/* Line 1455 of yacc.c  */
#line 6176 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 666:

/* Line 1455 of yacc.c  */
#line 6177 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 667:

/* Line 1455 of yacc.c  */
#line 6181 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 668:

/* Line 1455 of yacc.c  */
#line 6182 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 669:

/* Line 1455 of yacc.c  */
#line 6183 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 670:

/* Line 1455 of yacc.c  */
#line 6184 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 671:

/* Line 1455 of yacc.c  */
#line 6190 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 677:

/* Line 1455 of yacc.c  */
#line 6208 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 678:

/* Line 1455 of yacc.c  */
#line 6215 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 679:

/* Line 1455 of yacc.c  */
#line 6221 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 680:

/* Line 1455 of yacc.c  */
#line 6227 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 681:

/* Line 1455 of yacc.c  */
#line 6233 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 682:

/* Line 1455 of yacc.c  */
#line 6238 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table)->db,
                                      (yyvsp[(8) - (8)].table)->table,
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, KEYTYPE_MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
    break;

  case 683:

/* Line 1455 of yacc.c  */
#line 6257 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 686:

/* Line 1455 of yacc.c  */
#line 6269 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (4)].item), &(yyvsp[(3) - (4)].item));
          }
    break;

  case 687:

/* Line 1455 of yacc.c  */
#line 6276 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 688:

/* Line 1455 of yacc.c  */
#line 6277 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 689:

/* Line 1455 of yacc.c  */
#line 6281 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 690:

/* Line 1455 of yacc.c  */
#line 6286 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
            lex->gcol_info= 0;
          }
    break;

  case 691:

/* Line 1455 of yacc.c  */
#line 6296 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (3)].lex_str), (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          }
    break;

  case 692:

/* Line 1455 of yacc.c  */
#line 6310 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 693:

/* Line 1455 of yacc.c  */
#line 6314 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (9)].num);
            if (Lex->charset)
            {
              Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (9)].charset));
              if (Lex->charset == NULL)
                MYSQL_YYABORT;
            }
            else
              Lex->charset= (yyvsp[(2) - (9)].charset);
            Lex->gcol_info->set_field_type((enum enum_field_types) (yyval.num));
          }
    break;

  case 700:

/* Line 1455 of yacc.c  */
#line 6345 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 701:

/* Line 1455 of yacc.c  */
#line 6351 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 702:

/* Line 1455 of yacc.c  */
#line 6356 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 703:

/* Line 1455 of yacc.c  */
#line 6357 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 704:

/* Line 1455 of yacc.c  */
#line 6359 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 707:

/* Line 1455 of yacc.c  */
#line 6370 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->gcol_info->set_field_stored(TRUE);
          }
    break;

  case 708:

/* Line 1455 of yacc.c  */
#line 6377 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* 
              "PARSE_GCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            if (!Lex->parse_gcol_expr)
            {
              YYTHD->parse_error_at((yylsp[(1) - (4)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 709:

/* Line 1455 of yacc.c  */
#line 6393 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->gcol_info= new Generated_column();
            if (!Lex->gcol_info)
            {
              mem_alloc_error(sizeof(Generated_column));
              MYSQL_YYABORT;
            }
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));
            uint expr_len= (uint)(yylsp[(1) - (1)]).cpp.length();
            Lex->gcol_info->expr_str.str=
              (char* ) sql_memdup((yylsp[(1) - (1)]).cpp.start, expr_len);
            Lex->gcol_info->expr_str.length= expr_len;
            Lex->gcol_info->expr_item= (yyvsp[(1) - (1)].item);
            /*
              @todo: problems:
              - here we have a call to the constructor of
              Generated_column, which takes no argument and builds a
              non-functional object
              - then we fill it member by member; either by assignment to
              public members (!) or by call to a public setter. Both these
              techniques allow changing, at any future point in time, vital
              properties of the object which should rather be constant.
              Class should rather have a constructor which takes arguments,
              sets members, and members should be constant after that.
              This would also get rid of some setters like set_field_stored();
            */
          }
    break;

  case 710:

/* Line 1455 of yacc.c  */
#line 6424 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            (yyval.num)=(yyvsp[(1) - (3)].num);
          }
    break;

  case 711:

/* Line 1455 of yacc.c  */
#line 6429 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=(yyvsp[(1) - (3)].num);
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
          }
    break;

  case 712:

/* Line 1455 of yacc.c  */
#line 6435 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_FLOAT;
          }
    break;

  case 713:

/* Line 1455 of yacc.c  */
#line 6441 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 714:

/* Line 1455 of yacc.c  */
#line 6446 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 715:

/* Line 1455 of yacc.c  */
#line 6451 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 716:

/* Line 1455 of yacc.c  */
#line 6456 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 717:

/* Line 1455 of yacc.c  */
#line 6461 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 718:

/* Line 1455 of yacc.c  */
#line 6468 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 719:

/* Line 1455 of yacc.c  */
#line 6475 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->type|= (yyvsp[(3) - (3)].ulong_num);
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 720:

/* Line 1455 of yacc.c  */
#line 6482 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->type|= (yyvsp[(2) - (2)].ulong_num);
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 721:

/* Line 1455 of yacc.c  */
#line 6489 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 722:

/* Line 1455 of yacc.c  */
#line 6495 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 723:

/* Line 1455 of yacc.c  */
#line 6501 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 724:

/* Line 1455 of yacc.c  */
#line 6508 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->type|= (yyvsp[(3) - (3)].ulong_num);
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 725:

/* Line 1455 of yacc.c  */
#line 6515 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 726:

/* Line 1455 of yacc.c  */
#line 6521 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            if (Lex->length)
            {
              errno= 0;
              ulong length= strtoul(Lex->length, NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            (yyval.num)=MYSQL_TYPE_YEAR;
          }
    break;

  case 727:

/* Line 1455 of yacc.c  */
#line 6537 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 728:

/* Line 1455 of yacc.c  */
#line 6539 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)= MYSQL_TYPE_TIME2;
          }
    break;

  case 729:

/* Line 1455 of yacc.c  */
#line 6544 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /*
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                This behavior is deprecated now.
              */
              if (!YYTHD->variables.explicit_defaults_for_timestamp)
                Lex->type|= NOT_NULL_FLAG;
              /*
                To flag the current statement as dependent for binary
                logging on the session var. Extra copying to Lex is
                done in case prepared stmt.
              */
              Lex->binlog_need_explicit_defaults_ts=
                YYTHD->binlog_need_explicit_defaults_ts= true;

              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
    break;

  case 730:

/* Line 1455 of yacc.c  */
#line 6568 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->dec= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            (yyval.num)= MYSQL_TYPE_DATETIME2;
          }
    break;

  case 731:

/* Line 1455 of yacc.c  */
#line 6573 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 732:

/* Line 1455 of yacc.c  */
#line 6578 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (2)].c_str));
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 733:

/* Line 1455 of yacc.c  */
#line 6584 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
          }
    break;

  case 734:

/* Line 1455 of yacc.c  */
#line 6590 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 735:

/* Line 1455 of yacc.c  */
#line 6595 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 736:

/* Line 1455 of yacc.c  */
#line 6600 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 737:

/* Line 1455 of yacc.c  */
#line 6605 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 738:

/* Line 1455 of yacc.c  */
#line 6611 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 739:

/* Line 1455 of yacc.c  */
#line 6617 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].c_str));
            Lex->charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 740:

/* Line 1455 of yacc.c  */
#line 6624 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 741:

/* Line 1455 of yacc.c  */
#line 6630 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 742:

/* Line 1455 of yacc.c  */
#line 6636 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 743:

/* Line 1455 of yacc.c  */
#line 6642 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 744:

/* Line 1455 of yacc.c  */
#line 6648 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char *>((yyvsp[(2) - (3)].precision).length);
            Lex->dec= const_cast<char *>((yyvsp[(2) - (3)].precision).dec);
            (yyval.num)=MYSQL_TYPE_NEWDECIMAL;
          }
    break;

  case 745:

/* Line 1455 of yacc.c  */
#line 6654 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 746:

/* Line 1455 of yacc.c  */
#line 6656 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(6) - (6)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(6) - (6)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_ENUM;
          }
    break;

  case 747:

/* Line 1455 of yacc.c  */
#line 6662 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 748:

/* Line 1455 of yacc.c  */
#line 6664 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(6) - (6)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(6) - (6)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_SET;
          }
    break;

  case 749:

/* Line 1455 of yacc.c  */
#line 6670 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(2) - (2)].charset_with_flags).charset;
            Lex->type|= (yyvsp[(2) - (2)].charset_with_flags).type_flags;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 750:

/* Line 1455 of yacc.c  */
#line 6676 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 751:

/* Line 1455 of yacc.c  */
#line 6682 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_JSON;
          }
    break;

  case 752:

/* Line 1455 of yacc.c  */
#line 6689 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 753:

/* Line 1455 of yacc.c  */
#line 6690 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 754:

/* Line 1455 of yacc.c  */
#line 6692 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->length= const_cast<char*>(STRINGIFY_ARG
                                           (MAX_LEN_GEOM_POINT_FIELD));
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 755:

/* Line 1455 of yacc.c  */
#line 6697 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 756:

/* Line 1455 of yacc.c  */
#line 6698 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 757:

/* Line 1455 of yacc.c  */
#line 6699 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 758:

/* Line 1455 of yacc.c  */
#line 6700 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 759:

/* Line 1455 of yacc.c  */
#line 6701 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 760:

/* Line 1455 of yacc.c  */
#line 6705 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 761:

/* Line 1455 of yacc.c  */
#line 6709 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 762:

/* Line 1455 of yacc.c  */
#line 6710 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 763:

/* Line 1455 of yacc.c  */
#line 6714 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 764:

/* Line 1455 of yacc.c  */
#line 6715 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 765:

/* Line 1455 of yacc.c  */
#line 6719 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 766:

/* Line 1455 of yacc.c  */
#line 6720 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 767:

/* Line 1455 of yacc.c  */
#line 6721 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 768:

/* Line 1455 of yacc.c  */
#line 6722 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 769:

/* Line 1455 of yacc.c  */
#line 6723 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 770:

/* Line 1455 of yacc.c  */
#line 6727 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 771:

/* Line 1455 of yacc.c  */
#line 6728 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 772:

/* Line 1455 of yacc.c  */
#line 6729 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 773:

/* Line 1455 of yacc.c  */
#line 6730 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 774:

/* Line 1455 of yacc.c  */
#line 6731 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 775:

/* Line 1455 of yacc.c  */
#line 6736 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 776:

/* Line 1455 of yacc.c  */
#line 6741 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 777:

/* Line 1455 of yacc.c  */
#line 6743 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 778:

/* Line 1455 of yacc.c  */
#line 6748 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
    break;

  case 779:

/* Line 1455 of yacc.c  */
#line 6753 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(1) - (1)].c_str);
            (yyval.precision).dec= NULL;
          }
    break;

  case 781:

/* Line 1455 of yacc.c  */
#line 6762 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(2) - (5)].lex_str).str;
            (yyval.precision).dec= (yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 782:

/* Line 1455 of yacc.c  */
#line 6770 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 783:

/* Line 1455 of yacc.c  */
#line 6771 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 784:

/* Line 1455 of yacc.c  */
#line 6775 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 785:

/* Line 1455 of yacc.c  */
#line 6776 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 786:

/* Line 1455 of yacc.c  */
#line 6778 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 787:

/* Line 1455 of yacc.c  */
#line 6785 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 788:

/* Line 1455 of yacc.c  */
#line 6786 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 789:

/* Line 1455 of yacc.c  */
#line 6790 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 790:

/* Line 1455 of yacc.c  */
#line 6791 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 791:

/* Line 1455 of yacc.c  */
#line 6795 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 792:

/* Line 1455 of yacc.c  */
#line 6796 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 793:

/* Line 1455 of yacc.c  */
#line 6797 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 794:

/* Line 1455 of yacc.c  */
#line 6801 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 795:

/* Line 1455 of yacc.c  */
#line 6802 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 796:

/* Line 1455 of yacc.c  */
#line 6803 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 797:

/* Line 1455 of yacc.c  */
#line 6804 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 798:

/* Line 1455 of yacc.c  */
#line 6807 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; /* use default length */ }
    break;

  case 800:

/* Line 1455 of yacc.c  */
#line 6813 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
    break;

  case 802:

/* Line 1455 of yacc.c  */
#line 6821 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 803:

/* Line 1455 of yacc.c  */
#line 6822 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 804:

/* Line 1455 of yacc.c  */
#line 6826 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 806:

/* Line 1455 of yacc.c  */
#line 6832 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~ NOT_NULL_FLAG;
            Lex->type|= EXPLICIT_NULL_FLAG;
          }
    break;

  case 807:

/* Line 1455 of yacc.c  */
#line 6836 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 808:

/* Line 1455 of yacc.c  */
#line 6837 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 809:

/* Line 1455 of yacc.c  */
#line 6839 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>((yyvsp[(3) - (3)].ulong_num)));
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->on_update_value= item;
          }
    break;

  case 810:

/* Line 1455 of yacc.c  */
#line 6846 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 811:

/* Line 1455 of yacc.c  */
#line 6848 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 812:

/* Line 1455 of yacc.c  */
#line 6854 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 813:

/* Line 1455 of yacc.c  */
#line 6860 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 814:

/* Line 1455 of yacc.c  */
#line 6866 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 815:

/* Line 1455 of yacc.c  */
#line 6871 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 816:

/* Line 1455 of yacc.c  */
#line 6873 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 817:

/* Line 1455 of yacc.c  */
#line 6886 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DEFAULT << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 818:

/* Line 1455 of yacc.c  */
#line 6892 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_FIXED << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 819:

/* Line 1455 of yacc.c  */
#line 6898 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DYNAMIC << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 820:

/* Line 1455 of yacc.c  */
#line 6904 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DEFAULT << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 821:

/* Line 1455 of yacc.c  */
#line 6909 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DISK << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 822:

/* Line 1455 of yacc.c  */
#line 6914 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_MEMORY << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 823:

/* Line 1455 of yacc.c  */
#line 6923 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 824:

/* Line 1455 of yacc.c  */
#line 6944 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 825:

/* Line 1455 of yacc.c  */
#line 6950 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root)
              Item_func_now_local(static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 826:

/* Line 1455 of yacc.c  */
#line 6957 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 827:

/* Line 1455 of yacc.c  */
#line 6961 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 828:

/* Line 1455 of yacc.c  */
#line 6962 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 829:

/* Line 1455 of yacc.c  */
#line 6967 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 830:

/* Line 1455 of yacc.c  */
#line 6974 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 831:

/* Line 1455 of yacc.c  */
#line 6978 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 832:

/* Line 1455 of yacc.c  */
#line 6979 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 833:

/* Line 1455 of yacc.c  */
#line 6983 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 834:

/* Line 1455 of yacc.c  */
#line 6984 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 835:

/* Line 1455 of yacc.c  */
#line 6989 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 836:

/* Line 1455 of yacc.c  */
#line 6997 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 837:

/* Line 1455 of yacc.c  */
#line 7001 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 838:

/* Line 1455 of yacc.c  */
#line 7002 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 839:

/* Line 1455 of yacc.c  */
#line 7007 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 840:

/* Line 1455 of yacc.c  */
#line 7014 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 841:

/* Line 1455 of yacc.c  */
#line 7015 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 842:

/* Line 1455 of yacc.c  */
#line 7019 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 843:

/* Line 1455 of yacc.c  */
#line 7020 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 844:

/* Line 1455 of yacc.c  */
#line 7024 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 845:

/* Line 1455 of yacc.c  */
#line 7025 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 846:

/* Line 1455 of yacc.c  */
#line 7029 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 847:

/* Line 1455 of yacc.c  */
#line 7030 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 848:

/* Line 1455 of yacc.c  */
#line 7035 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1; }
    break;

  case 849:

/* Line 1455 of yacc.c  */
#line 7036 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 850:

/* Line 1455 of yacc.c  */
#line 7037 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 851:

/* Line 1455 of yacc.c  */
#line 7042 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 852:

/* Line 1455 of yacc.c  */
#line 7050 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 853:

/* Line 1455 of yacc.c  */
#line 7055 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 854:

/* Line 1455 of yacc.c  */
#line 7063 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= NULL;
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 855:

/* Line 1455 of yacc.c  */
#line 7068 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 856:

/* Line 1455 of yacc.c  */
#line 7073 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 857:

/* Line 1455 of yacc.c  */
#line 7078 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= &my_charset_bin;
            (yyval.charset_with_flags).type_flags= 0;
          }
    break;

  case 858:

/* Line 1455 of yacc.c  */
#line 7083 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(2) - (3)].charset);
            (yyval.charset_with_flags).type_flags= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 859:

/* Line 1455 of yacc.c  */
#line 7088 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= NULL;
            (yyval.charset_with_flags).type_flags= BINCMP_FLAG;
          }
    break;

  case 860:

/* Line 1455 of yacc.c  */
#line 7093 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_flags).charset= (yyvsp[(3) - (3)].charset);
            (yyval.charset_with_flags).type_flags= BINCMP_FLAG;
          }
    break;

  case 861:

/* Line 1455 of yacc.c  */
#line 7100 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 862:

/* Line 1455 of yacc.c  */
#line 7101 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= BINCMP_FLAG; }
    break;

  case 863:

/* Line 1455 of yacc.c  */
#line 7106 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_syntax_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 864:

/* Line 1455 of yacc.c  */
#line 7114 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 865:

/* Line 1455 of yacc.c  */
#line 7118 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 866:

/* Line 1455 of yacc.c  */
#line 7119 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 867:

/* Line 1455 of yacc.c  */
#line 7123 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 868:

/* Line 1455 of yacc.c  */
#line 7126 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 869:

/* Line 1455 of yacc.c  */
#line 7127 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 870:

/* Line 1455 of yacc.c  */
#line 7128 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 871:

/* Line 1455 of yacc.c  */
#line 7129 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 872:

/* Line 1455 of yacc.c  */
#line 7134 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 873:

/* Line 1455 of yacc.c  */
#line 7142 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 874:

/* Line 1455 of yacc.c  */
#line 7148 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 875:

/* Line 1455 of yacc.c  */
#line 7149 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 876:

/* Line 1455 of yacc.c  */
#line 7154 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 877:

/* Line 1455 of yacc.c  */
#line 7163 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 878:

/* Line 1455 of yacc.c  */
#line 7164 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 879:

/* Line 1455 of yacc.c  */
#line 7168 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 880:

/* Line 1455 of yacc.c  */
#line 7169 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 883:

/* Line 1455 of yacc.c  */
#line 7183 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 884:

/* Line 1455 of yacc.c  */
#line 7190 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 886:

/* Line 1455 of yacc.c  */
#line 7196 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 887:

/* Line 1455 of yacc.c  */
#line 7203 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 888:

/* Line 1455 of yacc.c  */
#line 7215 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_UNDEF; }
    break;

  case 889:

/* Line 1455 of yacc.c  */
#line 7217 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_FULL; }
    break;

  case 890:

/* Line 1455 of yacc.c  */
#line 7219 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_PARTIAL; }
    break;

  case 891:

/* Line 1455 of yacc.c  */
#line 7221 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= FK_MATCH_SIMPLE; }
    break;

  case 892:

/* Line 1455 of yacc.c  */
#line 7226 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 893:

/* Line 1455 of yacc.c  */
#line 7232 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 894:

/* Line 1455 of yacc.c  */
#line 7238 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 895:

/* Line 1455 of yacc.c  */
#line 7245 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 896:

/* Line 1455 of yacc.c  */
#line 7252 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 897:

/* Line 1455 of yacc.c  */
#line 7260 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
    break;

  case 898:

/* Line 1455 of yacc.c  */
#line 7261 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
    break;

  case 899:

/* Line 1455 of yacc.c  */
#line 7262 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
    break;

  case 900:

/* Line 1455 of yacc.c  */
#line 7263 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
    break;

  case 901:

/* Line 1455 of yacc.c  */
#line 7264 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
    break;

  case 902:

/* Line 1455 of yacc.c  */
#line 7268 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 903:

/* Line 1455 of yacc.c  */
#line 7272 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
    break;

  case 904:

/* Line 1455 of yacc.c  */
#line 7273 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 905:

/* Line 1455 of yacc.c  */
#line 7277 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 906:

/* Line 1455 of yacc.c  */
#line 7278 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 907:

/* Line 1455 of yacc.c  */
#line 7282 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 909:

/* Line 1455 of yacc.c  */
#line 7287 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 910:

/* Line 1455 of yacc.c  */
#line 7288 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 911:

/* Line 1455 of yacc.c  */
#line 7289 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 912:

/* Line 1455 of yacc.c  */
#line 7293 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 913:

/* Line 1455 of yacc.c  */
#line 7294 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 914:

/* Line 1455 of yacc.c  */
#line 7298 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_FULLTEXT;}
    break;

  case 915:

/* Line 1455 of yacc.c  */
#line 7303 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_type)= KEYTYPE_SPATIAL;
          }
    break;

  case 916:

/* Line 1455 of yacc.c  */
#line 7309 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 919:

/* Line 1455 of yacc.c  */
#line 7326 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 921:

/* Line 1455 of yacc.c  */
#line 7331 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 923:

/* Line 1455 of yacc.c  */
#line 7336 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 931:

/* Line 1455 of yacc.c  */
#line 7356 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 932:

/* Line 1455 of yacc.c  */
#line 7357 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 933:

/* Line 1455 of yacc.c  */
#line 7362 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 934:

/* Line 1455 of yacc.c  */
#line 7363 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 939:

/* Line 1455 of yacc.c  */
#line 7378 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING plugin_name= {(yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length};
            if (plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 940:

/* Line 1455 of yacc.c  */
#line 7391 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 941:

/* Line 1455 of yacc.c  */
#line 7392 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 942:

/* Line 1455 of yacc.c  */
#line 7393 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 943:

/* Line 1455 of yacc.c  */
#line 7397 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 944:

/* Line 1455 of yacc.c  */
#line 7398 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 945:

/* Line 1455 of yacc.c  */
#line 7403 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 946:

/* Line 1455 of yacc.c  */
#line 7409 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 947:

/* Line 1455 of yacc.c  */
#line 7422 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 948:

/* Line 1455 of yacc.c  */
#line 7423 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 949:

/* Line 1455 of yacc.c  */
#line 7427 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 950:

/* Line 1455 of yacc.c  */
#line 7428 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 951:

/* Line 1455 of yacc.c  */
#line 7432 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 952:

/* Line 1455 of yacc.c  */
#line 7433 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 953:

/* Line 1455 of yacc.c  */
#line 7441 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex->init_order();
            lex->select_lex->db=
                    const_cast<char*>((lex->select_lex->table_list.first)->db);
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 954:

/* Line 1455 of yacc.c  */
#line 7468 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 955:

/* Line 1455 of yacc.c  */
#line 7480 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 956:

/* Line 1455 of yacc.c  */
#line 7485 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 957:

/* Line 1455 of yacc.c  */
#line 7494 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            push_deprecated_warn_no_replacement(YYTHD,
              "UPGRADE DATA DIRECTORY NAME");
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 958:

/* Line 1455 of yacc.c  */
#line 7507 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 959:

/* Line 1455 of yacc.c  */
#line 7518 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 960:

/* Line 1455 of yacc.c  */
#line 7525 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 961:

/* Line 1455 of yacc.c  */
#line 7536 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 962:

/* Line 1455 of yacc.c  */
#line 7543 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 963:

/* Line 1455 of yacc.c  */
#line 7554 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 964:

/* Line 1455 of yacc.c  */
#line 7561 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 965:

/* Line 1455 of yacc.c  */
#line 7573 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 966:

/* Line 1455 of yacc.c  */
#line 7575 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 967:

/* Line 1455 of yacc.c  */
#line 7595 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 968:

/* Line 1455 of yacc.c  */
#line 7608 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 969:

/* Line 1455 of yacc.c  */
#line 7613 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 970:

/* Line 1455 of yacc.c  */
#line 7618 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 971:

/* Line 1455 of yacc.c  */
#line 7623 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 972:

/* Line 1455 of yacc.c  */
#line 7628 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[(3) - (7)].lex_str);
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_alter_server(&Lex->server_options);
          }
    break;

  case 974:

/* Line 1455 of yacc.c  */
#line 7638 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(2) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(2) - (5)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 975:

/* Line 1455 of yacc.c  */
#line 7648 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
          }
    break;

  case 976:

/* Line 1455 of yacc.c  */
#line 7656 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 980:

/* Line 1455 of yacc.c  */
#line 7667 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
    break;

  case 981:

/* Line 1455 of yacc.c  */
#line 7673 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
    break;

  case 982:

/* Line 1455 of yacc.c  */
#line 7679 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.update_password_expired_column= true;
          }
    break;

  case 983:

/* Line 1455 of yacc.c  */
#line 7685 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if ((yyvsp[(3) - (4)].ulong_num) == 0 || (yyvsp[(3) - (4)].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              my_snprintf(buf, sizeof(buf), "%lu", (yyvsp[(3) - (4)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.expire_after_days= (yyvsp[(3) - (4)].ulong_num);
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 984:

/* Line 1455 of yacc.c  */
#line 7699 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 985:

/* Line 1455 of yacc.c  */
#line 7705 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_password.update_password_expired_fields= true;
          }
    break;

  case 986:

/* Line 1455 of yacc.c  */
#line 7711 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 987:

/* Line 1455 of yacc.c  */
#line 7715 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 989:

/* Line 1455 of yacc.c  */
#line 7720 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 990:

/* Line 1455 of yacc.c  */
#line 7721 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 991:

/* Line 1455 of yacc.c  */
#line 7726 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 992:

/* Line 1455 of yacc.c  */
#line 7732 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 993:

/* Line 1455 of yacc.c  */
#line 7738 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 994:

/* Line 1455 of yacc.c  */
#line 7744 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 995:

/* Line 1455 of yacc.c  */
#line 7753 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(st_lex_user));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
    break;

  case 996:

/* Line 1455 of yacc.c  */
#line 7766 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 997:

/* Line 1455 of yacc.c  */
#line 7767 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 998:

/* Line 1455 of yacc.c  */
#line 7768 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 999:

/* Line 1455 of yacc.c  */
#line 7769 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1000:

/* Line 1455 of yacc.c  */
#line 7773 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1001:

/* Line 1455 of yacc.c  */
#line 7775 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname);
            (yyval.num)= 1;
          }
    break;

  case 1002:

/* Line 1455 of yacc.c  */
#line 7786 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 1003:

/* Line 1455 of yacc.c  */
#line 7787 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1004:

/* Line 1455 of yacc.c  */
#line 7791 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 1005:

/* Line 1455 of yacc.c  */
#line 7792 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1007:

/* Line 1455 of yacc.c  */
#line 7798 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1008:

/* Line 1455 of yacc.c  */
#line 7806 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1014:

/* Line 1455 of yacc.c  */
#line 7828 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          }
    break;

  case 1015:

/* Line 1455 of yacc.c  */
#line 7833 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 1016:

/* Line 1455 of yacc.c  */
#line 7840 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1018:

/* Line 1455 of yacc.c  */
#line 7854 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1019:

/* Line 1455 of yacc.c  */
#line 7866 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1021:

/* Line 1455 of yacc.c  */
#line 7879 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1023:

/* Line 1455 of yacc.c  */
#line 7892 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 1024:

/* Line 1455 of yacc.c  */
#line 7899 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1026:

/* Line 1455 of yacc.c  */
#line 7912 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(6) - (7)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name.str= const_cast<char*>((yyvsp[(6) - (7)].table)->table.str);
            lex->name.length= (yyvsp[(6) - (7)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1027:

/* Line 1455 of yacc.c  */
#line 7938 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1028:

/* Line 1455 of yacc.c  */
#line 7947 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1031:

/* Line 1455 of yacc.c  */
#line 7963 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation= Alter_info::ALTER_WITH_VALIDATION;
          }
    break;

  case 1032:

/* Line 1455 of yacc.c  */
#line 7967 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.with_validation=
              Alter_info::ALTER_WITHOUT_VALIDATION;
          }
    break;

  case 1033:

/* Line 1455 of yacc.c  */
#line 7975 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 1034:

/* Line 1455 of yacc.c  */
#line 7982 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
    break;

  case 1036:

/* Line 1455 of yacc.c  */
#line 7990 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1037:

/* Line 1455 of yacc.c  */
#line 8002 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1039:

/* Line 1455 of yacc.c  */
#line 8008 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 1040:

/* Line 1455 of yacc.c  */
#line 8013 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 1041:

/* Line 1455 of yacc.c  */
#line 8020 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1043:

/* Line 1455 of yacc.c  */
#line 8035 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
    break;

  case 1044:

/* Line 1455 of yacc.c  */
#line 8039 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 1045:

/* Line 1455 of yacc.c  */
#line 8043 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 1046:

/* Line 1455 of yacc.c  */
#line 8050 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1047:

/* Line 1455 of yacc.c  */
#line 8051 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1048:

/* Line 1455 of yacc.c  */
#line 8056 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            if (Lex->alter_info.partition_names.push_back(s))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1051:

/* Line 1455 of yacc.c  */
#line 8081 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
    break;

  case 1052:

/* Line 1455 of yacc.c  */
#line 8090 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1053:

/* Line 1455 of yacc.c  */
#line 8094 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 1055:

/* Line 1455 of yacc.c  */
#line 8100 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 1056:

/* Line 1455 of yacc.c  */
#line 8106 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1057:

/* Line 1455 of yacc.c  */
#line 8110 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
            lex->gcol_info= 0;
          }
    break;

  case 1058:

/* Line 1455 of yacc.c  */
#line 8120 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (5)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (5)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (5)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type,
                                  lex->gcol_info))
              MYSQL_YYABORT;
          }
    break;

  case 1059:

/* Line 1455 of yacc.c  */
#line 8133 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1060:

/* Line 1455 of yacc.c  */
#line 8137 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
    break;

  case 1061:

/* Line 1455 of yacc.c  */
#line 8146 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[(4) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
    break;

  case 1062:

/* Line 1455 of yacc.c  */
#line 8155 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1063:

/* Line 1455 of yacc.c  */
#line 8164 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1064:

/* Line 1455 of yacc.c  */
#line 8173 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1065:

/* Line 1455 of yacc.c  */
#line 8179 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1066:

/* Line 1455 of yacc.c  */
#line 8185 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1067:

/* Line 1455 of yacc.c  */
#line 8194 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1068:

/* Line 1455 of yacc.c  */
#line 8203 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex->db= const_cast<char*>((yyvsp[(3) - (3)].table)->db.str);
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            enum_ident_name_check ident_check_status=
              check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE);
            if (ident_check_status == IDENT_NAME_WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == IDENT_NAME_TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            LEX_STRING db_str= to_lex_string((yyvsp[(3) - (3)].table)->db);
            if (db_str.str &&
                (check_and_convert_db_name(&db_str, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            lex->name.str= const_cast<char*>((yyvsp[(3) - (3)].table)->table.str);
            lex->name.length= (yyvsp[(3) - (3)].table)->table.length;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
    break;

  case 1069:

/* Line 1455 of yacc.c  */
#line 8233 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (YYTHD->mem_root)
                                    Alter_rename_key((yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= Alter_info::ALTER_RENAME_INDEX;
          }
    break;

  case 1070:

/* Line 1455 of yacc.c  */
#line 8243 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_CONVERT;
          }
    break;

  case 1071:

/* Line 1455 of yacc.c  */
#line 8264 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 1072:

/* Line 1455 of yacc.c  */
#line 8274 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
    break;

  case 1073:

/* Line 1455 of yacc.c  */
#line 8278 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
    break;

  case 1076:

/* Line 1455 of yacc.c  */
#line 8285 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_UPGRADE_PARTITIONING;
          }
    break;

  case 1083:

/* Line 1455 of yacc.c  */
#line 8300 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
    break;

  case 1084:

/* Line 1455 of yacc.c  */
#line 8305 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1085:

/* Line 1455 of yacc.c  */
#line 8316 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
    break;

  case 1086:

/* Line 1455 of yacc.c  */
#line 8321 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1087:

/* Line 1455 of yacc.c  */
#line 8331 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1088:

/* Line 1455 of yacc.c  */
#line 8332 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1089:

/* Line 1455 of yacc.c  */
#line 8336 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1090:

/* Line 1455 of yacc.c  */
#line 8337 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1091:

/* Line 1455 of yacc.c  */
#line 8341 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 1092:

/* Line 1455 of yacc.c  */
#line 8342 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 1093:

/* Line 1455 of yacc.c  */
#line 8343 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 1094:

/* Line 1455 of yacc.c  */
#line 8347 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1095:

/* Line 1455 of yacc.c  */
#line 8349 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column((yyvsp[(2) - (2)].lex_str).str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1096:

/* Line 1455 of yacc.c  */
#line 8354 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1097:

/* Line 1455 of yacc.c  */
#line 8361 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1098:

/* Line 1455 of yacc.c  */
#line 8362 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1099:

/* Line 1455 of yacc.c  */
#line 8363 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1100:

/* Line 1455 of yacc.c  */
#line 8364 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1101:

/* Line 1455 of yacc.c  */
#line 8369 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
    break;

  case 1102:

/* Line 1455 of yacc.c  */
#line 8374 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
    break;

  case 1103:

/* Line 1455 of yacc.c  */
#line 8381 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1104:

/* Line 1455 of yacc.c  */
#line 8383 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[(3) - (4)].num);
        }
    break;

  case 1105:

/* Line 1455 of yacc.c  */
#line 8393 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1106:

/* Line 1455 of yacc.c  */
#line 8408 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1108:

/* Line 1455 of yacc.c  */
#line 8429 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1109:

/* Line 1455 of yacc.c  */
#line 8445 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1110:

/* Line 1455 of yacc.c  */
#line 8449 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1111:

/* Line 1455 of yacc.c  */
#line 8456 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1112:

/* Line 1455 of yacc.c  */
#line 8460 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1113:

/* Line 1455 of yacc.c  */
#line 8467 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1114:

/* Line 1455 of yacc.c  */
#line 8471 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1115:

/* Line 1455 of yacc.c  */
#line 8475 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1117:

/* Line 1455 of yacc.c  */
#line 8486 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1118:

/* Line 1455 of yacc.c  */
#line 8490 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1119:

/* Line 1455 of yacc.c  */
#line 8496 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1120:

/* Line 1455 of yacc.c  */
#line 8500 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1121:

/* Line 1455 of yacc.c  */
#line 8506 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1122:

/* Line 1455 of yacc.c  */
#line 8510 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1123:

/* Line 1455 of yacc.c  */
#line 8516 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1124:

/* Line 1455 of yacc.c  */
#line 8520 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1125:

/* Line 1455 of yacc.c  */
#line 8527 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1126:

/* Line 1455 of yacc.c  */
#line 8531 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1127:

/* Line 1455 of yacc.c  */
#line 8538 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1128:

/* Line 1455 of yacc.c  */
#line 8542 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1129:

/* Line 1455 of yacc.c  */
#line 8549 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1130:

/* Line 1455 of yacc.c  */
#line 8553 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1131:

/* Line 1455 of yacc.c  */
#line 8560 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
    break;

  case 1132:

/* Line 1455 of yacc.c  */
#line 8565 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
    break;

  case 1135:

/* Line 1455 of yacc.c  */
#line 8593 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1136:

/* Line 1455 of yacc.c  */
#line 8598 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1137:

/* Line 1455 of yacc.c  */
#line 8603 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1138:

/* Line 1455 of yacc.c  */
#line 8610 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1139:

/* Line 1455 of yacc.c  */
#line 8617 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1140:

/* Line 1455 of yacc.c  */
#line 8621 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 1141:

/* Line 1455 of yacc.c  */
#line 8622 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 1142:

/* Line 1455 of yacc.c  */
#line 8623 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 1143:

/* Line 1455 of yacc.c  */
#line 8628 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1144:

/* Line 1455 of yacc.c  */
#line 8638 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1145:

/* Line 1455 of yacc.c  */
#line 8649 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1146:

/* Line 1455 of yacc.c  */
#line 8650 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1147:

/* Line 1455 of yacc.c  */
#line 8654 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1148:

/* Line 1455 of yacc.c  */
#line 8655 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1149:

/* Line 1455 of yacc.c  */
#line 8659 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1150:

/* Line 1455 of yacc.c  */
#line 8660 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1151:

/* Line 1455 of yacc.c  */
#line 8661 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 1152:

/* Line 1455 of yacc.c  */
#line 8666 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1153:

/* Line 1455 of yacc.c  */
#line 8676 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1154:

/* Line 1455 of yacc.c  */
#line 8688 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1155:

/* Line 1455 of yacc.c  */
#line 8696 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1156:

/* Line 1455 of yacc.c  */
#line 8711 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1157:

/* Line 1455 of yacc.c  */
#line 8722 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1158:

/* Line 1455 of yacc.c  */
#line 8723 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1159:

/* Line 1455 of yacc.c  */
#line 8727 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1160:

/* Line 1455 of yacc.c  */
#line 8728 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1161:

/* Line 1455 of yacc.c  */
#line 8732 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1162:

/* Line 1455 of yacc.c  */
#line 8733 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 1163:

/* Line 1455 of yacc.c  */
#line 8734 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 1164:

/* Line 1455 of yacc.c  */
#line 8735 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1165:

/* Line 1455 of yacc.c  */
#line 8736 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 1166:

/* Line 1455 of yacc.c  */
#line 8737 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 1167:

/* Line 1455 of yacc.c  */
#line 8742 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1168:

/* Line 1455 of yacc.c  */
#line 8752 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1169:

/* Line 1455 of yacc.c  */
#line 8763 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1170:

/* Line 1455 of yacc.c  */
#line 8764 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1171:

/* Line 1455 of yacc.c  */
#line 8765 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1172:

/* Line 1455 of yacc.c  */
#line 8770 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1173:

/* Line 1455 of yacc.c  */
#line 8774 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1174:

/* Line 1455 of yacc.c  */
#line 8776 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1175:

/* Line 1455 of yacc.c  */
#line 8783 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1176:

/* Line 1455 of yacc.c  */
#line 8788 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1179:

/* Line 1455 of yacc.c  */
#line 8801 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1180:

/* Line 1455 of yacc.c  */
#line 8814 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1181:

/* Line 1455 of yacc.c  */
#line 8818 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1186:

/* Line 1455 of yacc.c  */
#line 8837 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (2)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1187:

/* Line 1455 of yacc.c  */
#line 8847 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1188:

/* Line 1455 of yacc.c  */
#line 8856 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1189:

/* Line 1455 of yacc.c  */
#line 8857 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1190:

/* Line 1455 of yacc.c  */
#line 8862 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1191:

/* Line 1455 of yacc.c  */
#line 8868 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1196:

/* Line 1455 of yacc.c  */
#line 8883 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(2) - (3)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1197:

/* Line 1455 of yacc.c  */
#line 8893 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           (yyvsp[(3) - (4)].key_usage_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1198:

/* Line 1455 of yacc.c  */
#line 8903 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
    break;

  case 1201:

/* Line 1455 of yacc.c  */
#line 8914 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1202:

/* Line 1455 of yacc.c  */
#line 8916 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(3) - (4)].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[(3) - (4)].key_usage_list);
          }
    break;

  case 1203:

/* Line 1455 of yacc.c  */
#line 8926 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1204:

/* Line 1455 of yacc.c  */
#line 8927 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1205:

/* Line 1455 of yacc.c  */
#line 8937 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select)= NEW_PTN PT_select((yyvsp[(1) - (1)].select_init), SQLCOM_SELECT);
          }
    break;

  case 1206:

/* Line 1455 of yacc.c  */
#line 8945 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_init)= NEW_PTN PT_select_init2((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2), (yyvsp[(3) - (3)].union_list));
          }
    break;

  case 1207:

/* Line 1455 of yacc.c  */
#line 8949 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_init)= NEW_PTN PT_select_init_parenthesis((yyvsp[(2) - (4)].select_paren), (yyvsp[(4) - (4)].node));
          }
    break;

  case 1208:

/* Line 1455 of yacc.c  */
#line 8956 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_paren)= NEW_PTN PT_select_paren((yyvsp[(1) - (2)].optimizer_hints), (yyvsp[(2) - (2)].select_part2));
          }
    break;

  case 1209:

/* Line 1455 of yacc.c  */
#line 8959 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.select_paren)= (yyvsp[(2) - (3)].select_paren); }
    break;

  case 1210:

/* Line 1455 of yacc.c  */
#line 8965 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_paren_derived)= NEW_PTN PT_select_paren_derived((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2_derived), (yyvsp[(3) - (3)].table_expression));
          }
    break;

  case 1211:

/* Line 1455 of yacc.c  */
#line 8968 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.select_paren_derived)= (yyvsp[(2) - (3)].select_paren_derived); }
    break;

  case 1212:

/* Line 1455 of yacc.c  */
#line 8981 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (4)].select_options_and_item_list), NULL, NULL, NULL, NULL, NULL,
                                        (yyvsp[(2) - (4)].order), (yyvsp[(3) - (4)].limit_clause), NULL, NULL, (yyvsp[(4) - (4)].select_lock_type));
          }
    break;

  case 1213:

/* Line 1455 of yacc.c  */
#line 8986 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (3)].select_options_and_item_list), (yyvsp[(2) - (3)].into_destination), NULL, NULL, NULL, NULL, NULL,
                                        NULL, NULL, NULL, (yyvsp[(3) - (3)].select_lock_type));
          }
    break;

  case 1214:

/* Line 1455 of yacc.c  */
#line 9001 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (11)].into_destination) && (yyvsp[(10) - (11)].into_destination))
            {
              /* double "INTO" clause */
              YYTHD->parse_error_at((yylsp[(10) - (11)]), ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(9) - (11)].procedure_analyse) && ((yyvsp[(2) - (11)].into_destination) || (yyvsp[(10) - (11)].into_destination)))
            {
              /* "INTO" with "PROCEDURE ANALYSE" */
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }
            (yyval.select_part2)= NEW_PTN PT_select_part2((yyvsp[(1) - (11)].select_options_and_item_list), (yyvsp[(2) - (11)].into_destination), (yyvsp[(3) - (11)].table_reference_list), (yyvsp[(4) - (11)].item), (yyvsp[(5) - (11)].group), (yyvsp[(6) - (11)].item), (yyvsp[(7) - (11)].order), (yyvsp[(8) - (11)].limit_clause), (yyvsp[(9) - (11)].procedure_analyse), (yyvsp[(10) - (11)].into_destination),
                                        (yyvsp[(11) - (11)].select_lock_type));
          }
    break;

  case 1215:

/* Line 1455 of yacc.c  */
#line 9020 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          }
    break;

  case 1216:

/* Line 1455 of yacc.c  */
#line 9027 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options_and_item_list)= NEW_PTN PT_select_options_and_item_list((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 1217:

/* Line 1455 of yacc.c  */
#line 9042 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_expression)= NEW_PTN PT_table_expression((yyvsp[(1) - (8)].table_reference_list), (yyvsp[(2) - (8)].item), (yyvsp[(3) - (8)].group), (yyvsp[(4) - (8)].item), (yyvsp[(5) - (8)].order), (yyvsp[(6) - (8)].limit_clause), (yyvsp[(7) - (8)].procedure_analyse), (yyvsp[(8) - (8)].select_lock_type));
          }
    break;

  case 1218:

/* Line 1455 of yacc.c  */
#line 9048 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (2)].table_reference_list); }
    break;

  case 1219:

/* Line 1455 of yacc.c  */
#line 9052 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= NULL; }
    break;

  case 1221:

/* Line 1455 of yacc.c  */
#line 9058 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= NEW_PTN PT_table_reference_list((yyvsp[(1) - (1)].join_table_list));
          }
    break;

  case 1222:

/* Line 1455 of yacc.c  */
#line 9061 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= NULL; }
    break;

  case 1223:

/* Line 1455 of yacc.c  */
#line 9070 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1225:

/* Line 1455 of yacc.c  */
#line 9079 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.select_options).merge((yyvsp[(1) - (2)].select_options), (yyvsp[(2) - (2)].select_options)))
              MYSQL_YYABORT;
          }
    break;

  case 1227:

/* Line 1455 of yacc.c  */
#line 9088 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= (yyvsp[(1) - (1)].ulonglong_number);
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1228:

/* Line 1455 of yacc.c  */
#line 9093 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
    break;

  case 1229:

/* Line 1455 of yacc.c  */
#line 9102 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE;
          }
    break;

  case 1230:

/* Line 1455 of yacc.c  */
#line 9113 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.select_lock_type).is_set= false; }
    break;

  case 1231:

/* Line 1455 of yacc.c  */
#line 9115 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_WRITE;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1232:

/* Line 1455 of yacc.c  */
#line 9121 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lock_type).is_set= true;
            (yyval.select_lock_type).lock_type= TL_READ_WITH_SHARED_LOCKS;
            (yyval.select_lock_type).is_safe_to_cache_query= false;
          }
    break;

  case 1233:

/* Line 1455 of yacc.c  */
#line 9130 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1234:

/* Line 1455 of yacc.c  */
#line 9136 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1235:

/* Line 1455 of yacc.c  */
#line 9142 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
    break;

  case 1236:

/* Line 1455 of yacc.c  */
#line 9151 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1237:

/* Line 1455 of yacc.c  */
#line 9153 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[(1) - (2)].item), (yylsp[(1) - (2)]).cpp, (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1238:

/* Line 1455 of yacc.c  */
#line 9160 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1239:

/* Line 1455 of yacc.c  */
#line 9161 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1240:

/* Line 1455 of yacc.c  */
#line 9162 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1241:

/* Line 1455 of yacc.c  */
#line 9163 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1242:

/* Line 1455 of yacc.c  */
#line 9164 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1243:

/* Line 1455 of yacc.c  */
#line 9168 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1244:

/* Line 1455 of yacc.c  */
#line 9169 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1245:

/* Line 1455 of yacc.c  */
#line 9175 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYTHD->mem_root, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1246:

/* Line 1455 of yacc.c  */
#line 9181 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1247:

/* Line 1455 of yacc.c  */
#line 9186 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYTHD->mem_root, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1248:

/* Line 1455 of yacc.c  */
#line 9192 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1249:

/* Line 1455 of yacc.c  */
#line 9196 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_istrue((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1250:

/* Line 1455 of yacc.c  */
#line 9200 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnottrue((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1251:

/* Line 1455 of yacc.c  */
#line 9204 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isfalse((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1252:

/* Line 1455 of yacc.c  */
#line 9208 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotfalse((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1253:

/* Line 1455 of yacc.c  */
#line 9212 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1254:

/* Line 1455 of yacc.c  */
#line 9216 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1256:

/* Line 1455 of yacc.c  */
#line 9224 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1257:

/* Line 1455 of yacc.c  */
#line 9228 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1258:

/* Line 1455 of yacc.c  */
#line 9232 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(2) - (3)].boolfunc2creator), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1259:

/* Line 1455 of yacc.c  */
#line 9236 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (6)].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->parse_error_at((yylsp[(2) - (6)]), ER_THD(YYTHD, ER_SYNTAX_ERROR));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].subselect));
          }
    break;

  case 1261:

/* Line 1455 of yacc.c  */
#line 9253 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].subselect));
          }
    break;

  case 1262:

/* Line 1455 of yacc.c  */
#line 9257 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].subselect));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1263:

/* Line 1455 of yacc.c  */
#line 9262 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
          }
    break;

  case 1264:

/* Line 1455 of yacc.c  */
#line 9266 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item_list2) == NULL || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(4) - (7)].item)) || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(1) - (7)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(6) - (7)].item_list2), false);
          }
    break;

  case 1265:

/* Line 1455 of yacc.c  */
#line 9273 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
          }
    break;

  case 1266:

/* Line 1455 of yacc.c  */
#line 9277 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(7) - (8)].item_list2) == NULL || (yyvsp[(7) - (8)].item_list2)->push_front((yyvsp[(5) - (8)].item)) || (yyvsp[(7) - (8)].item_list2)->value.push_front((yyvsp[(1) - (8)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(7) - (8)].item_list2), true);
          }
    break;

  case 1267:

/* Line 1455 of yacc.c  */
#line 9284 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].item), false);
          }
    break;

  case 1268:

/* Line 1455 of yacc.c  */
#line 9288 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].item), true);
          }
    break;

  case 1269:

/* Line 1455 of yacc.c  */
#line 9292 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(1) - (4)].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
    break;

  case 1270:

/* Line 1455 of yacc.c  */
#line 9300 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(3) - (4)].item), (yyvsp[(4) - (4)].item));
          }
    break;

  case 1271:

/* Line 1455 of yacc.c  */
#line 9304 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_not((yyloc), item);
          }
    break;

  case 1272:

/* Line 1455 of yacc.c  */
#line 9311 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1273:

/* Line 1455 of yacc.c  */
#line 9315 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_regex((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].item));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1275:

/* Line 1455 of yacc.c  */
#line 9324 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1276:

/* Line 1455 of yacc.c  */
#line 9328 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1277:

/* Line 1455 of yacc.c  */
#line 9332 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1278:

/* Line 1455 of yacc.c  */
#line 9336 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1279:

/* Line 1455 of yacc.c  */
#line 9340 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1280:

/* Line 1455 of yacc.c  */
#line 9344 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1281:

/* Line 1455 of yacc.c  */
#line 9348 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 0);
          }
    break;

  case 1282:

/* Line 1455 of yacc.c  */
#line 9352 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 1);
          }
    break;

  case 1283:

/* Line 1455 of yacc.c  */
#line 9356 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1284:

/* Line 1455 of yacc.c  */
#line 9360 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1285:

/* Line 1455 of yacc.c  */
#line 9364 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1286:

/* Line 1455 of yacc.c  */
#line 9368 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1287:

/* Line 1455 of yacc.c  */
#line 9372 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1288:

/* Line 1455 of yacc.c  */
#line 9376 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1298:

/* Line 1455 of yacc.c  */
#line 9403 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1299:

/* Line 1455 of yacc.c  */
#line 9404 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
    break;

  case 1300:

/* Line 1455 of yacc.c  */
#line 9405 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1301:

/* Line 1455 of yacc.c  */
#line 9406 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1302:

/* Line 1455 of yacc.c  */
#line 9407 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1303:

/* Line 1455 of yacc.c  */
#line 9408 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1304:

/* Line 1455 of yacc.c  */
#line 9409 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1305:

/* Line 1455 of yacc.c  */
#line 9413 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1306:

/* Line 1455 of yacc.c  */
#line 9414 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1312:

/* Line 1455 of yacc.c  */
#line 9424 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1314:

/* Line 1455 of yacc.c  */
#line 9428 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].param_marker); }
    break;

  case 1317:

/* Line 1455 of yacc.c  */
#line 9432 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1318:

/* Line 1455 of yacc.c  */
#line 9436 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
    break;

  case 1319:

/* Line 1455 of yacc.c  */
#line 9440 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1320:

/* Line 1455 of yacc.c  */
#line 9444 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1321:

/* Line 1455 of yacc.c  */
#line 9448 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1322:

/* Line 1455 of yacc.c  */
#line 9452 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[(2) - (3)].subselect));
          }
    break;

  case 1323:

/* Line 1455 of yacc.c  */
#line 9456 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1324:

/* Line 1455 of yacc.c  */
#line 9458 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item_list2)->value);
          }
    break;

  case 1325:

/* Line 1455 of yacc.c  */
#line 9462 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item_list2)->value);
          }
    break;

  case 1326:

/* Line 1455 of yacc.c  */
#line 9466 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[(3) - (4)].subselect));
          }
    break;

  case 1327:

/* Line 1455 of yacc.c  */
#line 9470 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[(2) - (4)].lex_str), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1328:

/* Line 1455 of yacc.c  */
#line 9474 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[(2) - (7)].item_list2), (yyvsp[(5) - (7)].item), (yyvsp[(6) - (7)].num));
          }
    break;

  case 1329:

/* Line 1455 of yacc.c  */
#line 9478 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(2) - (2)]), (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
    break;

  case 1330:

/* Line 1455 of yacc.c  */
#line 9482 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1331:

/* Line 1455 of yacc.c  */
#line 9486 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
          }
    break;

  case 1332:

/* Line 1455 of yacc.c  */
#line 9490 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1333:

/* Line 1455 of yacc.c  */
#line 9494 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
          }
    break;

  case 1334:

/* Line 1455 of yacc.c  */
#line 9498 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1335:

/* Line 1455 of yacc.c  */
#line 9502 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1336:

/* Line 1455 of yacc.c  */
#line 9507 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(5) - (5)].item), (yyvsp[(2) - (5)].item), (yyvsp[(3) - (5)].interval), 0);
          }
    break;

  case 1337:

/* Line 1455 of yacc.c  */
#line 9511 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
          }
    break;

  case 1338:

/* Line 1455 of yacc.c  */
#line 9527 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1339:

/* Line 1455 of yacc.c  */
#line 9531 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (6)].item_list2), (yyvsp[(5) - (6)].charset));
          }
    break;

  case 1340:

/* Line 1455 of yacc.c  */
#line 9535 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
    break;

  case 1341:

/* Line 1455 of yacc.c  */
#line 9539 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1342:

/* Line 1455 of yacc.c  */
#line 9543 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1343:

/* Line 1455 of yacc.c  */
#line 9547 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1344:

/* Line 1455 of yacc.c  */
#line 9551 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].item), (yyvsp[(7) - (10)].item), (yyvsp[(9) - (10)].item));
          }
    break;

  case 1345:

/* Line 1455 of yacc.c  */
#line 9555 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYTHD->mem_root, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1346:

/* Line 1455 of yacc.c  */
#line 9559 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYTHD->mem_root, (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item_list2));
          }
    break;

  case 1347:

/* Line 1455 of yacc.c  */
#line 9563 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1348:

/* Line 1455 of yacc.c  */
#line 9567 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1349:

/* Line 1455 of yacc.c  */
#line 9571 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1350:

/* Line 1455 of yacc.c  */
#line 9575 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1351:

/* Line 1455 of yacc.c  */
#line 9579 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1352:

/* Line 1455 of yacc.c  */
#line 9583 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_time_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1353:

/* Line 1455 of yacc.c  */
#line 9587 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_datetime_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1354:

/* Line 1455 of yacc.c  */
#line 9591 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
          }
    break;

  case 1355:

/* Line 1455 of yacc.c  */
#line 9595 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(3) - (4)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1356:

/* Line 1455 of yacc.c  */
#line 9600 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1357:

/* Line 1455 of yacc.c  */
#line 9605 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1358:

/* Line 1455 of yacc.c  */
#line 9610 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1359:

/* Line 1455 of yacc.c  */
#line 9614 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1360:

/* Line 1455 of yacc.c  */
#line 9618 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1361:

/* Line 1455 of yacc.c  */
#line 9622 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1362:

/* Line 1455 of yacc.c  */
#line 9626 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), (yyvsp[(3) - (6)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1363:

/* Line 1455 of yacc.c  */
#line 9631 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
    break;

  case 1364:

/* Line 1455 of yacc.c  */
#line 9635 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1365:

/* Line 1455 of yacc.c  */
#line 9654 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 0);
          }
    break;

  case 1366:

/* Line 1455 of yacc.c  */
#line 9658 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1367:

/* Line 1455 of yacc.c  */
#line 9662 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
    break;

  case 1368:

/* Line 1455 of yacc.c  */
#line 9666 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1369:

/* Line 1455 of yacc.c  */
#line 9671 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1370:

/* Line 1455 of yacc.c  */
#line 9676 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1371:

/* Line 1455 of yacc.c  */
#line 9680 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1372:

/* Line 1455 of yacc.c  */
#line 9684 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1373:

/* Line 1455 of yacc.c  */
#line 9688 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 1374:

/* Line 1455 of yacc.c  */
#line 9693 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
          }
    break;

  case 1375:

/* Line 1455 of yacc.c  */
#line 9697 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 1);
          }
    break;

  case 1376:

/* Line 1455 of yacc.c  */
#line 9701 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1377:

/* Line 1455 of yacc.c  */
#line 9705 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1378:

/* Line 1455 of yacc.c  */
#line 9709 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1379:

/* Line 1455 of yacc.c  */
#line 9713 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1380:

/* Line 1455 of yacc.c  */
#line 9717 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1381:

/* Line 1455 of yacc.c  */
#line 9721 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1382:

/* Line 1455 of yacc.c  */
#line 9726 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(7) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(3) - (8)].interval_time_st), 0);
          }
    break;

  case 1383:

/* Line 1455 of yacc.c  */
#line 9730 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
          }
    break;

  case 1384:

/* Line 1455 of yacc.c  */
#line 9734 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
    break;

  case 1385:

/* Line 1455 of yacc.c  */
#line 9738 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1386:

/* Line 1455 of yacc.c  */
#line 9742 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1387:

/* Line 1455 of yacc.c  */
#line 9754 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1388:

/* Line 1455 of yacc.c  */
#line 9758 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1389:

/* Line 1455 of yacc.c  */
#line 9762 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1390:

/* Line 1455 of yacc.c  */
#line 9766 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1391:

/* Line 1455 of yacc.c  */
#line 9770 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
    break;

  case 1392:

/* Line 1455 of yacc.c  */
#line 9774 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1393:

/* Line 1455 of yacc.c  */
#line 9778 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1394:

/* Line 1455 of yacc.c  */
#line 9782 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
          }
    break;

  case 1395:

/* Line 1455 of yacc.c  */
#line 9786 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1396:

/* Line 1455 of yacc.c  */
#line 9790 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1397:

/* Line 1455 of yacc.c  */
#line 9794 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_password((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1398:

/* Line 1455 of yacc.c  */
#line 9798 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1399:

/* Line 1455 of yacc.c  */
#line 9802 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1400:

/* Line 1455 of yacc.c  */
#line 9806 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1401:

/* Line 1455 of yacc.c  */
#line 9810 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1402:

/* Line 1455 of yacc.c  */
#line 9814 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
    break;

  case 1403:

/* Line 1455 of yacc.c  */
#line 9818 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
          }
    break;

  case 1404:

/* Line 1455 of yacc.c  */
#line 9822 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (4)].item), NULL);
          }
    break;

  case 1405:

/* Line 1455 of yacc.c  */
#line 9826 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1406:

/* Line 1455 of yacc.c  */
#line 9830 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
          }
    break;

  case 1407:

/* Line 1455 of yacc.c  */
#line 9834 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
          }
    break;

  case 1408:

/* Line 1455 of yacc.c  */
#line 9839 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc),
                        (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE, true);
          }
    break;

  case 1409:

/* Line 1455 of yacc.c  */
#line 9844 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
          }
    break;

  case 1411:

/* Line 1455 of yacc.c  */
#line 9852 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "CONTAINS", "MBRCONTAINS");
            (yyval.item)= NEW_PTN Item_func_spatial_mbr_rel((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                        Item_func::SP_CONTAINS_FUNC);
          }
    break;

  case 1412:

/* Line 1455 of yacc.c  */
#line 9858 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
    break;

  case 1413:

/* Line 1455 of yacc.c  */
#line 9864 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
    break;

  case 1414:

/* Line 1455 of yacc.c  */
#line 9870 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
    break;

  case 1415:

/* Line 1455 of yacc.c  */
#line 9876 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
    break;

  case 1416:

/* Line 1455 of yacc.c  */
#line 9882 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
    break;

  case 1417:

/* Line 1455 of yacc.c  */
#line 9888 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1418:

/* Line 1455 of yacc.c  */
#line 9892 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
    break;

  case 1419:

/* Line 1455 of yacc.c  */
#line 9910 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1420:

/* Line 1455 of yacc.c  */
#line 9914 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), (yyvsp[(5) - (6)].item_list2));
          }
    break;

  case 1421:

/* Line 1455 of yacc.c  */
#line 9921 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1422:

/* Line 1455 of yacc.c  */
#line 9923 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 1423:

/* Line 1455 of yacc.c  */
#line 9927 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1424:

/* Line 1455 of yacc.c  */
#line 9928 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1425:

/* Line 1455 of yacc.c  */
#line 9932 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1426:

/* Line 1455 of yacc.c  */
#line 9933 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1427:

/* Line 1455 of yacc.c  */
#line 9937 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1428:

/* Line 1455 of yacc.c  */
#line 9938 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1429:

/* Line 1455 of yacc.c  */
#line 9943 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1430:

/* Line 1455 of yacc.c  */
#line 9949 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1431:

/* Line 1455 of yacc.c  */
#line 9958 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].lex_str), (yylsp[(1) - (2)]).cpp);
          }
    break;

  case 1432:

/* Line 1455 of yacc.c  */
#line 9965 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1433:

/* Line 1455 of yacc.c  */
#line 9969 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1434:

/* Line 1455 of yacc.c  */
#line 9973 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1435:

/* Line 1455 of yacc.c  */
#line 9977 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1436:

/* Line 1455 of yacc.c  */
#line 9981 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1437:

/* Line 1455 of yacc.c  */
#line 9985 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc));
          }
    break;

  case 1438:

/* Line 1455 of yacc.c  */
#line 9989 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1439:

/* Line 1455 of yacc.c  */
#line 9993 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[(4) - (5)].item_list2));
          }
    break;

  case 1440:

/* Line 1455 of yacc.c  */
#line 9997 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1441:

/* Line 1455 of yacc.c  */
#line 10006 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1442:

/* Line 1455 of yacc.c  */
#line 10010 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1443:

/* Line 1455 of yacc.c  */
#line 10014 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(4) - (5)].item));
          }
    break;

  case 1444:

/* Line 1455 of yacc.c  */
#line 10018 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1445:

/* Line 1455 of yacc.c  */
#line 10022 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 0);
          }
    break;

  case 1446:

/* Line 1455 of yacc.c  */
#line 10026 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1447:

/* Line 1455 of yacc.c  */
#line 10030 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (4)].item), 1);
          }
    break;

  case 1448:

/* Line 1455 of yacc.c  */
#line 10034 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(3) - (4)].item), FALSE);
          }
    break;

  case 1449:

/* Line 1455 of yacc.c  */
#line 10038 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(4) - (5)].item), TRUE);
          }
    break;

  case 1450:

/* Line 1455 of yacc.c  */
#line 10045 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[(3) - (7)].num), (yyvsp[(4) - (7)].item_list2), (yyvsp[(5) - (7)].order_list), (yyvsp[(6) - (7)].string));
          }
    break;

  case 1451:

/* Line 1455 of yacc.c  */
#line 10051 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1452:

/* Line 1455 of yacc.c  */
#line 10056 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1453:

/* Line 1455 of yacc.c  */
#line 10060 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1454:

/* Line 1455 of yacc.c  */
#line 10064 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yylsp[(3) - (4)]), (yyvsp[(4) - (4)].lex_str));
          }
    break;

  case 1455:

/* Line 1455 of yacc.c  */
#line 10070 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1456:

/* Line 1455 of yacc.c  */
#line 10071 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1457:

/* Line 1455 of yacc.c  */
#line 10076 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1458:

/* Line 1455 of yacc.c  */
#line 10081 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1459:

/* Line 1455 of yacc.c  */
#line 10085 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= NULL; }
    break;

  case 1460:

/* Line 1455 of yacc.c  */
#line 10086 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= (yyvsp[(3) - (3)].order_list); }
    break;

  case 1461:

/* Line 1455 of yacc.c  */
#line 10091 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1462:

/* Line 1455 of yacc.c  */
#line 10096 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1463:

/* Line 1455 of yacc.c  */
#line 10106 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1464:

/* Line 1455 of yacc.c  */
#line 10113 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1465:

/* Line 1455 of yacc.c  */
#line 10121 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= (yyvsp[(3) - (3)].charset_with_flags).charset;
            (yyval.cast_type).type_flags= (yyvsp[(3) - (3)].charset_with_flags).type_flags;
            (yyval.cast_type).length= (yyvsp[(2) - (3)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1466:

/* Line 1455 of yacc.c  */
#line 10129 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1467:

/* Line 1455 of yacc.c  */
#line 10137 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1468:

/* Line 1455 of yacc.c  */
#line 10145 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1469:

/* Line 1455 of yacc.c  */
#line 10153 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1470:

/* Line 1455 of yacc.c  */
#line 10161 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1471:

/* Line 1455 of yacc.c  */
#line 10169 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1472:

/* Line 1455 of yacc.c  */
#line 10177 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1473:

/* Line 1455 of yacc.c  */
#line 10185 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1474:

/* Line 1455 of yacc.c  */
#line 10193 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].precision).length;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].precision).dec;
          }
    break;

  case 1475:

/* Line 1455 of yacc.c  */
#line 10201 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).type_flags= 0;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1476:

/* Line 1455 of yacc.c  */
#line 10211 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1478:

/* Line 1455 of yacc.c  */
#line 10217 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1479:

/* Line 1455 of yacc.c  */
#line 10223 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1480:

/* Line 1455 of yacc.c  */
#line 10231 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1481:

/* Line 1455 of yacc.c  */
#line 10232 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1482:

/* Line 1455 of yacc.c  */
#line 10237 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1483:

/* Line 1455 of yacc.c  */
#line 10243 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1484:

/* Line 1455 of yacc.c  */
#line 10251 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1485:

/* Line 1455 of yacc.c  */
#line 10252 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1486:

/* Line 1455 of yacc.c  */
#line 10256 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1487:

/* Line 1455 of yacc.c  */
#line 10257 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1488:

/* Line 1455 of yacc.c  */
#line 10262 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1489:

/* Line 1455 of yacc.c  */
#line 10270 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1491:

/* Line 1455 of yacc.c  */
#line 10282 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_ref_join_table((yyvsp[(1) - (1)].node));
          }
    break;

  case 1492:

/* Line 1455 of yacc.c  */
#line 10289 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table_list)= NEW_PTN PT_join_table_list((yyloc), (yyvsp[(1) - (1)].table_list2));
          }
    break;

  case 1494:

/* Line 1455 of yacc.c  */
#line 10303 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.table_list2)= (yyvsp[(3) - (4)].table_list2); }
    break;

  case 1496:

/* Line 1455 of yacc.c  */
#line 10311 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_derived_table_list((yyloc), (yyvsp[(1) - (3)].table_list2), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1497:

/* Line 1455 of yacc.c  */
#line 10331 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NORMAL>((yyvsp[(1) - (3)].table_list2), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1498:

/* Line 1455 of yacc.c  */
#line 10335 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_STRAIGHT>((yyvsp[(1) - (3)].table_list2), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].table_list2));
          }
    break;

  case 1499:

/* Line 1455 of yacc.c  */
#line 10341 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_NORMAL>((yyvsp[(1) - (5)].table_list2), (yylsp[(2) - (5)]), (yyvsp[(3) - (5)].table_list2), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1500:

/* Line 1455 of yacc.c  */
#line 10347 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_STRAIGHT>((yyvsp[(1) - (5)].table_list2), (yylsp[(2) - (5)]), (yyvsp[(3) - (5)].table_list2), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1501:

/* Line 1455 of yacc.c  */
#line 10353 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_NORMAL>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(3) - (7)].table_list2), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1502:

/* Line 1455 of yacc.c  */
#line 10357 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL>((yyvsp[(1) - (4)].table_list2), (yylsp[(2) - (4)]), (yyvsp[(4) - (4)].table_list2));
          }
    break;

  case 1503:

/* Line 1455 of yacc.c  */
#line 10365 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_LEFT>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(5) - (7)].table_list2), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1504:

/* Line 1455 of yacc.c  */
#line 10370 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_LEFT>((yyvsp[(1) - (9)].table_list2), (yylsp[(2) - (9)]), (yyvsp[(5) - (9)].table_list2), (yyvsp[(8) - (9)].string_list));
          }
    break;

  case 1505:

/* Line 1455 of yacc.c  */
#line 10374 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL_LEFT>((yyvsp[(1) - (6)].table_list2), (yylsp[(2) - (6)]), (yyvsp[(6) - (6)].table_list2));
          }
    break;

  case 1506:

/* Line 1455 of yacc.c  */
#line 10382 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_on<JTT_RIGHT>((yyvsp[(1) - (7)].table_list2), (yylsp[(2) - (7)]), (yyvsp[(5) - (7)].table_list2), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1507:

/* Line 1455 of yacc.c  */
#line 10387 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table_using<JTT_RIGHT>((yyvsp[(1) - (9)].table_list2), (yylsp[(2) - (9)]), (yyvsp[(5) - (9)].table_list2), (yyvsp[(8) - (9)].string_list));
          }
    break;

  case 1508:

/* Line 1455 of yacc.c  */
#line 10391 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_join_table<JTT_NATURAL_RIGHT>((yyvsp[(1) - (6)].table_list2), (yylsp[(2) - (6)]), (yyvsp[(6) - (6)].table_list2));
          }
    break;

  case 1509:

/* Line 1455 of yacc.c  */
#line 10397 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1510:

/* Line 1455 of yacc.c  */
#line 10398 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1511:

/* Line 1455 of yacc.c  */
#line 10399 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1512:

/* Line 1455 of yacc.c  */
#line 10407 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 1514:

/* Line 1455 of yacc.c  */
#line 10413 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (4)].string_list);
          }
    break;

  case 1515:

/* Line 1455 of yacc.c  */
#line 10428 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_table_ident((yyvsp[(1) - (4)].table), (yyvsp[(2) - (4)].string_list), (yyvsp[(3) - (4)].lex_str_ptr), (yyvsp[(4) - (4)].key_usage_list));
          }
    break;

  case 1516:

/* Line 1455 of yacc.c  */
#line 10432 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_select_sym((yyloc), (yyvsp[(1) - (4)].optimizer_hints), (yyvsp[(2) - (4)].select_options), (yyvsp[(3) - (4)].item_list2), (yyvsp[(4) - (4)].table_expression));
          }
    break;

  case 1517:

/* Line 1455 of yacc.c  */
#line 10454 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_table_factor_parenthesis((yyvsp[(2) - (4)].table_list2), (yyvsp[(4) - (4)].lex_str_ptr), (yylsp[(4) - (4)]));
          }
    break;

  case 1518:

/* Line 1455 of yacc.c  */
#line 10481 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived_union_select((yyvsp[(1) - (2)].table_list2), (yyvsp[(2) - (2)].node), (yylsp[(2) - (2)]));
          }
    break;

  case 1519:

/* Line 1455 of yacc.c  */
#line 10485 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived_union_union((yyvsp[(1) - (4)].table_list2), (yylsp[(2) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].select_lex2));
          }
    break;

  case 1520:

/* Line 1455 of yacc.c  */
#line 10492 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds shift/reduce conflict)
            */
          }
    break;

  case 1521:

/* Line 1455 of yacc.c  */
#line 10499 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_part2_derived)= NEW_PTN PT_select_part2_derived((yyvsp[(2) - (3)].ulonglong_number), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 1522:

/* Line 1455 of yacc.c  */
#line 10507 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list2)= NEW_PTN PT_select_derived((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].table_list2));
          }
    break;

  case 1523:

/* Line 1455 of yacc.c  */
#line 10513 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1524:

/* Line 1455 of yacc.c  */
#line 10514 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1525:

/* Line 1455 of yacc.c  */
#line 10519 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
    break;

  case 1526:

/* Line 1455 of yacc.c  */
#line 10522 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1527:

/* Line 1455 of yacc.c  */
#line 10523 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1528:

/* Line 1455 of yacc.c  */
#line 10524 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1529:

/* Line 1455 of yacc.c  */
#line 10528 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1530:

/* Line 1455 of yacc.c  */
#line 10529 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1531:

/* Line 1455 of yacc.c  */
#line 10535 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), (yyvsp[(1) - (6)].index_hint), (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1532:

/* Line 1455 of yacc.c  */
#line 10541 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), INDEX_HINT_USE, (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1534:

/* Line 1455 of yacc.c  */
#line 10550 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].key_usage_list)->concat((yyvsp[(1) - (2)].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[(2) - (2)].key_usage_list);
          }
    break;

  case 1535:

/* Line 1455 of yacc.c  */
#line 10557 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1538:

/* Line 1455 of yacc.c  */
#line 10567 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= new (YYTHD->mem_root) List<Index_hint>;
            Index_hint *hint= new (YYTHD->mem_root) Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
    break;

  case 1540:

/* Line 1455 of yacc.c  */
#line 10578 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= new (YYTHD->mem_root) Index_hint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1541:

/* Line 1455 of yacc.c  */
#line 10584 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= new (YYTHD->mem_root) Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1542:

/* Line 1455 of yacc.c  */
#line 10593 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= new (YYTHD->mem_root) List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[(1) - (1)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1543:

/* Line 1455 of yacc.c  */
#line 10599 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[(3) - (3)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1544:

/* Line 1455 of yacc.c  */
#line 10607 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1545:

/* Line 1455 of yacc.c  */
#line 10618 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1546:

/* Line 1455 of yacc.c  */
#line 10630 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1547:

/* Line 1455 of yacc.c  */
#line 10631 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1548:

/* Line 1455 of yacc.c  */
#line 10632 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1549:

/* Line 1455 of yacc.c  */
#line 10633 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1550:

/* Line 1455 of yacc.c  */
#line 10634 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1551:

/* Line 1455 of yacc.c  */
#line 10635 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1552:

/* Line 1455 of yacc.c  */
#line 10636 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1553:

/* Line 1455 of yacc.c  */
#line 10637 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1554:

/* Line 1455 of yacc.c  */
#line 10638 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1555:

/* Line 1455 of yacc.c  */
#line 10639 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1556:

/* Line 1455 of yacc.c  */
#line 10640 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1557:

/* Line 1455 of yacc.c  */
#line 10641 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1558:

/* Line 1455 of yacc.c  */
#line 10645 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1559:

/* Line 1455 of yacc.c  */
#line 10646 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1560:

/* Line 1455 of yacc.c  */
#line 10647 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1561:

/* Line 1455 of yacc.c  */
#line 10648 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1562:

/* Line 1455 of yacc.c  */
#line 10649 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1563:

/* Line 1455 of yacc.c  */
#line 10650 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1564:

/* Line 1455 of yacc.c  */
#line 10651 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1565:

/* Line 1455 of yacc.c  */
#line 10652 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1566:

/* Line 1455 of yacc.c  */
#line 10653 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1567:

/* Line 1455 of yacc.c  */
#line 10657 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1568:

/* Line 1455 of yacc.c  */
#line 10658 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1569:

/* Line 1455 of yacc.c  */
#line 10659 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1570:

/* Line 1455 of yacc.c  */
#line 10660 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1574:

/* Line 1455 of yacc.c  */
#line 10670 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1575:

/* Line 1455 of yacc.c  */
#line 10672 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1578:

/* Line 1455 of yacc.c  */
#line 10685 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1579:

/* Line 1455 of yacc.c  */
#line 10687 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_WHERE>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1580:

/* Line 1455 of yacc.c  */
#line 10693 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1581:

/* Line 1455 of yacc.c  */
#line 10695 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_HAVING>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1582:

/* Line 1455 of yacc.c  */
#line 10701 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1583:

/* Line 1455 of yacc.c  */
#line 10702 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1584:

/* Line 1455 of yacc.c  */
#line 10710 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.group)= NULL; }
    break;

  case 1585:

/* Line 1455 of yacc.c  */
#line 10712 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[(3) - (4)].order_list), (yyvsp[(4) - (4)].olap_type));
          }
    break;

  case 1586:

/* Line 1455 of yacc.c  */
#line 10719 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1587:

/* Line 1455 of yacc.c  */
#line 10724 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1588:

/* Line 1455 of yacc.c  */
#line 10733 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
    break;

  case 1589:

/* Line 1455 of yacc.c  */
#line 10734 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= CUBE_TYPE; }
    break;

  case 1590:

/* Line 1455 of yacc.c  */
#line 10742 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= ROLLUP_TYPE; }
    break;

  case 1594:

/* Line 1455 of yacc.c  */
#line 10767 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (2)].item), &(yyvsp[(1) - (2)].item));

            THD *thd= YYTHD;
            ORDER *order= (ORDER *) thd->alloc(sizeof(ORDER));
            if (order == NULL)
              MYSQL_YYABORT;
            order->item_ptr= (yyvsp[(1) - (2)].item);
            order->direction= ((yyvsp[(2) - (2)].num) == 1) ? ORDER::ORDER_ASC : ORDER::ORDER_DESC;
            add_order_to_list(thd, order);
          }
    break;

  case 1595:

/* Line 1455 of yacc.c  */
#line 10785 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.order)= NULL; }
    break;

  case 1597:

/* Line 1455 of yacc.c  */
#line 10791 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1598:

/* Line 1455 of yacc.c  */
#line 10798 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1599:

/* Line 1455 of yacc.c  */
#line 10803 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1600:

/* Line 1455 of yacc.c  */
#line 10812 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1601:

/* Line 1455 of yacc.c  */
#line 10813 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1602:

/* Line 1455 of yacc.c  */
#line 10814 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1603:

/* Line 1455 of yacc.c  */
#line 10818 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.limit_clause)= NULL; }
    break;

  case 1605:

/* Line 1455 of yacc.c  */
#line 10824 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[(2) - (2)].limit_options));
          }
    break;

  case 1606:

/* Line 1455 of yacc.c  */
#line 10831 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (1)].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1607:

/* Line 1455 of yacc.c  */
#line 10837 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).is_offset_first= true;
          }
    break;

  case 1608:

/* Line 1455 of yacc.c  */
#line 10843 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1609:

/* Line 1455 of yacc.c  */
#line 10852 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), (yyvsp[(1) - (1)].lex_str), (yylsp[(1) - (1)]).raw);
          }
    break;

  case 1610:

/* Line 1455 of yacc.c  */
#line 10856 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[(1) - (1)].param_marker));
          }
    break;

  case 1611:

/* Line 1455 of yacc.c  */
#line 10860 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1612:

/* Line 1455 of yacc.c  */
#line 10864 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1613:

/* Line 1455 of yacc.c  */
#line 10868 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1614:

/* Line 1455 of yacc.c  */
#line 10874 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1615:

/* Line 1455 of yacc.c  */
#line 10875 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1616:

/* Line 1455 of yacc.c  */
#line 10879 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1617:

/* Line 1455 of yacc.c  */
#line 10880 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1618:

/* Line 1455 of yacc.c  */
#line 10881 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1619:

/* Line 1455 of yacc.c  */
#line 10882 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1620:

/* Line 1455 of yacc.c  */
#line 10883 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1621:

/* Line 1455 of yacc.c  */
#line 10884 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1622:

/* Line 1455 of yacc.c  */
#line 10888 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1623:

/* Line 1455 of yacc.c  */
#line 10889 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1624:

/* Line 1455 of yacc.c  */
#line 10890 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1625:

/* Line 1455 of yacc.c  */
#line 10891 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1626:

/* Line 1455 of yacc.c  */
#line 10892 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1627:

/* Line 1455 of yacc.c  */
#line 10896 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1628:

/* Line 1455 of yacc.c  */
#line 10897 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1629:

/* Line 1455 of yacc.c  */
#line 10898 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1630:

/* Line 1455 of yacc.c  */
#line 10899 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1631:

/* Line 1455 of yacc.c  */
#line 10900 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1632:

/* Line 1455 of yacc.c  */
#line 10904 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1633:

/* Line 1455 of yacc.c  */
#line 10905 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1634:

/* Line 1455 of yacc.c  */
#line 10906 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1635:

/* Line 1455 of yacc.c  */
#line 10907 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1636:

/* Line 1455 of yacc.c  */
#line 10912 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { my_syntax_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1639:

/* Line 1455 of yacc.c  */
#line 10921 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.procedure_analyse)= NULL; }
    break;

  case 1640:

/* Line 1455 of yacc.c  */
#line 10924 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse)= NEW_PTN PT_procedure_analyse((yyvsp[(4) - (5)].procedure_analyse_params));
          }
    break;

  case 1641:

/* Line 1455 of yacc.c  */
#line 10931 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= Proc_analyse_params::default_max_tree_elements;
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1642:

/* Line 1455 of yacc.c  */
#line 10936 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (1)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= Proc_analyse_params::default_max_treemem;
          }
    break;

  case 1643:

/* Line 1455 of yacc.c  */
#line 10941 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.procedure_analyse_params).max_tree_elements= static_cast<uint>((yyvsp[(1) - (3)].ulonglong_number));
            (yyval.procedure_analyse_params).max_treemem= static_cast<uint>((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 1644:

/* Line 1455 of yacc.c  */
#line 10949 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1645:

/* Line 1455 of yacc.c  */
#line 10962 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= (yyvsp[(1) - (3)].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(3) - (3)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1646:

/* Line 1455 of yacc.c  */
#line 10968 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list;
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(1) - (1)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1647:

/* Line 1455 of yacc.c  */
#line 10977 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1648:

/* Line 1455 of yacc.c  */
#line 10981 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1649:

/* Line 1455 of yacc.c  */
#line 10987 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= NULL; }
    break;

  case 1651:

/* Line 1455 of yacc.c  */
#line 10993 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= (yyvsp[(2) - (2)].into_destination);
          }
    break;

  case 1652:

/* Line 1455 of yacc.c  */
#line 11002 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].charset), (yyvsp[(4) - (5)].field_separators), (yyvsp[(5) - (5)].line_separators));
          }
    break;

  case 1653:

/* Line 1455 of yacc.c  */
#line 11006 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1654:

/* Line 1455 of yacc.c  */
#line 11009 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= (yyvsp[(1) - (1)].select_var_list); }
    break;

  case 1655:

/* Line 1455 of yacc.c  */
#line 11018 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select)= NEW_PTN PT_select(
                  NEW_PTN PT_select_init2(NULL,
                    NEW_PTN PT_select_part2(
                      NEW_PTN PT_select_options_and_item_list((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2))), NULL),
                                                              SQLCOM_DO);
          }
    break;

  case 1656:

/* Line 1455 of yacc.c  */
#line 11029 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
            (yyval.select_options).sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
          }
    break;

  case 1657:

/* Line 1455 of yacc.c  */
#line 11041 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1658:

/* Line 1455 of yacc.c  */
#line 11050 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1659:

/* Line 1455 of yacc.c  */
#line 11051 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1660:

/* Line 1455 of yacc.c  */
#line 11052 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
    break;

  case 1661:

/* Line 1455 of yacc.c  */
#line 11067 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1662:

/* Line 1455 of yacc.c  */
#line 11069 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1663:

/* Line 1455 of yacc.c  */
#line 11076 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), FALSE) != IDENT_NAME_OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(6) - (6)].lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name(to_lex_cstring((yyvsp[(4) - (6)].lex_str)), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1664:

/* Line 1455 of yacc.c  */
#line 11099 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(4) - (4)].lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(to_lex_cstring(db), (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1665:

/* Line 1455 of yacc.c  */
#line 11131 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1666:

/* Line 1455 of yacc.c  */
#line 11143 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[(3) - (5)].num);
          }
    break;

  case 1667:

/* Line 1455 of yacc.c  */
#line 11149 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1668:

/* Line 1455 of yacc.c  */
#line 11157 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1669:

/* Line 1455 of yacc.c  */
#line 11159 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1670:

/* Line 1455 of yacc.c  */
#line 11165 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1671:

/* Line 1455 of yacc.c  */
#line 11172 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1672:

/* Line 1455 of yacc.c  */
#line 11177 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1673:

/* Line 1455 of yacc.c  */
#line 11182 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_drop_server((yyvsp[(4) - (4)].lex_str), (yyvsp[(3) - (4)].num));
          }
    break;

  case 1676:

/* Line 1455 of yacc.c  */
#line 11196 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1677:

/* Line 1455 of yacc.c  */
#line 11207 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list).init(YYTHD->mem_root);
            if ((yyval.table_ident_list).push_back((yyvsp[(1) - (1)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1678:

/* Line 1455 of yacc.c  */
#line 11213 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list)= (yyvsp[(1) - (3)].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[(3) - (3)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1679:

/* Line 1455 of yacc.c  */
#line 11221 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1680:

/* Line 1455 of yacc.c  */
#line 11222 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1681:

/* Line 1455 of yacc.c  */
#line 11226 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1682:

/* Line 1455 of yacc.c  */
#line 11227 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1690:

/* Line 1455 of yacc.c  */
#line 11257 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].column_row_value_list_pair).column_list, (yyvsp[(7) - (8)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1691:

/* Line 1455 of yacc.c  */
#line 11272 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(8) - (9)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list),
                                  (yyvsp[(8) - (9)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[(9) - (9)].column_value_list_pair).column_list, (yyvsp[(9) - (9)].column_value_list_pair).value_list);
          }
    break;

  case 1692:

/* Line 1455 of yacc.c  */
#line 11289 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].insert_from_subquery).column_list, NULL,
                                  (yyvsp[(7) - (8)].insert_from_subquery).insert_query_expression,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1693:

/* Line 1455 of yacc.c  */
#line 11304 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].column_row_value_list_pair).column_list, (yyvsp[(6) - (6)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1694:

/* Line 1455 of yacc.c  */
#line 11317 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(7) - (7)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].lock_type), false, (yyvsp[(4) - (7)].table), (yyvsp[(5) - (7)].string_list),
                                  (yyvsp[(7) - (7)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1695:

/* Line 1455 of yacc.c  */
#line 11332 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].insert_from_subquery).column_list, NULL,
                                  (yyvsp[(6) - (6)].insert_from_subquery).insert_query_expression,
                                  NULL, NULL);
          }
    break;

  case 1696:

/* Line 1455 of yacc.c  */
#line 11341 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
    break;

  case 1697:

/* Line 1455 of yacc.c  */
#line 11342 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1698:

/* Line 1455 of yacc.c  */
#line 11344 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1699:

/* Line 1455 of yacc.c  */
#line 11352 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1700:

/* Line 1455 of yacc.c  */
#line 11356 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1701:

/* Line 1455 of yacc.c  */
#line 11358 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1704:

/* Line 1455 of yacc.c  */
#line 11375 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(1) - (1)].values_list);
          }
    break;

  case 1705:

/* Line 1455 of yacc.c  */
#line 11380 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(3) - (3)].values_list);
          }
    break;

  case 1706:

/* Line 1455 of yacc.c  */
#line 11385 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(4) - (4)].values_list);
          }
    break;

  case 1707:

/* Line 1455 of yacc.c  */
#line 11393 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= NEW_PTN PT_item_list;
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(1) - (1)].insert_query_expression);
          }
    break;

  case 1708:

/* Line 1455 of yacc.c  */
#line 11398 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= NEW_PTN PT_item_list;
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(3) - (3)].insert_query_expression);
          }
    break;

  case 1709:

/* Line 1455 of yacc.c  */
#line 11403 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_from_subquery).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.insert_from_subquery).insert_query_expression= (yyvsp[(4) - (4)].insert_query_expression);
          }
    break;

  case 1710:

/* Line 1455 of yacc.c  */
#line 11411 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1711:

/* Line 1455 of yacc.c  */
#line 11417 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1712:

/* Line 1455 of yacc.c  */
#line 11426 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= (yyvsp[(2) - (2)].values_list);
          }
    break;

  case 1713:

/* Line 1455 of yacc.c  */
#line 11433 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression)= NEW_PTN PT_insert_query_expression(false, (yyvsp[(1) - (2)].create_select), (yyvsp[(2) - (2)].union_list));
          }
    break;

  case 1714:

/* Line 1455 of yacc.c  */
#line 11437 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression)= NEW_PTN PT_insert_query_expression(true, (yyvsp[(2) - (4)].create_select), (yyvsp[(4) - (4)].node));
          }
    break;

  case 1717:

/* Line 1455 of yacc.c  */
#line 11449 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.values_list)->push_back(&(yyvsp[(3) - (3)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1718:

/* Line 1455 of yacc.c  */
#line 11454 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[(1) - (1)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1719:

/* Line 1455 of yacc.c  */
#line 11463 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1720:

/* Line 1455 of yacc.c  */
#line 11464 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1721:

/* Line 1455 of yacc.c  */
#line 11468 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1722:

/* Line 1455 of yacc.c  */
#line 11469 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1723:

/* Line 1455 of yacc.c  */
#line 11473 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1724:

/* Line 1455 of yacc.c  */
#line 11478 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1726:

/* Line 1455 of yacc.c  */
#line 11488 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1727:

/* Line 1455 of yacc.c  */
#line 11494 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1729:

/* Line 1455 of yacc.c  */
#line 11504 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
    break;

  case 1730:

/* Line 1455 of yacc.c  */
#line 11511 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
    break;

  case 1731:

/* Line 1455 of yacc.c  */
#line 11516 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(5) - (5)].column_value_list_pair);
          }
    break;

  case 1732:

/* Line 1455 of yacc.c  */
#line 11533 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_update((yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(4) - (9)].join_table_list), (yyvsp[(6) - (9)].column_value_list_pair).column_list, (yyvsp[(6) - (9)].column_value_list_pair).value_list,
                                  (yyvsp[(7) - (9)].item), (yyvsp[(8) - (9)].order), (yyvsp[(9) - (9)].item));
          }
    break;

  case 1733:

/* Line 1455 of yacc.c  */
#line 11541 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(1) - (3)].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[(3) - (3)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(3) - (3)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1734:

/* Line 1455 of yacc.c  */
#line 11548 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[(1) - (1)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(1) - (1)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1735:

/* Line 1455 of yacc.c  */
#line 11560 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_pair).column= (yyvsp[(1) - (3)].item);
            (yyval.column_value_pair).value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1736:

/* Line 1455 of yacc.c  */
#line 11567 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1737:

/* Line 1455 of yacc.c  */
#line 11568 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1738:

/* Line 1455 of yacc.c  */
#line 11582 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete(YYTHD->mem_root, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].num), (yyvsp[(4) - (8)].table), (yyvsp[(5) - (8)].string_list), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].order), (yyvsp[(8) - (8)].item));
          }
    break;

  case 1739:

/* Line 1455 of yacc.c  */
#line 11591 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].num), (yyvsp[(3) - (6)].table_ident_list), (yyvsp[(5) - (6)].join_table_list), (yyvsp[(6) - (6)].item));
          }
    break;

  case 1740:

/* Line 1455 of yacc.c  */
#line 11601 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.statement)= NEW_PTN PT_delete((yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].num), (yyvsp[(4) - (7)].table_ident_list), (yyvsp[(6) - (7)].join_table_list), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1743:

/* Line 1455 of yacc.c  */
#line 11612 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1744:

/* Line 1455 of yacc.c  */
#line 11613 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].opt_delete_option) | (yyvsp[(2) - (2)].num); }
    break;

  case 1745:

/* Line 1455 of yacc.c  */
#line 11617 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_QUICK; }
    break;

  case 1746:

/* Line 1455 of yacc.c  */
#line 11618 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
    break;

  case 1747:

/* Line 1455 of yacc.c  */
#line 11619 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
    break;

  case 1748:

/* Line 1455 of yacc.c  */
#line 11624 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1749:

/* Line 1455 of yacc.c  */
#line 11632 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1756:

/* Line 1455 of yacc.c  */
#line 11657 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1757:

/* Line 1455 of yacc.c  */
#line 11661 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1758:

/* Line 1455 of yacc.c  */
#line 11665 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1759:

/* Line 1455 of yacc.c  */
#line 11669 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1760:

/* Line 1455 of yacc.c  */
#line 11673 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1761:

/* Line 1455 of yacc.c  */
#line 11677 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1762:

/* Line 1455 of yacc.c  */
#line 11681 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1763:

/* Line 1455 of yacc.c  */
#line 11685 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1764:

/* Line 1455 of yacc.c  */
#line 11689 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1765:

/* Line 1455 of yacc.c  */
#line 11696 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      Lex->query_id= 0;
    }
    break;

  case 1766:

/* Line 1455 of yacc.c  */
#line 11700 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
      int error;
      Lex->query_id= static_cast<my_thread_id>(my_strtoll10((yyvsp[(3) - (3)].lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
    break;

  case 1767:

/* Line 1455 of yacc.c  */
#line 11712 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
    break;

  case 1769:

/* Line 1455 of yacc.c  */
#line 11721 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1770:

/* Line 1455 of yacc.c  */
#line 11728 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1771:

/* Line 1455 of yacc.c  */
#line 11736 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1772:

/* Line 1455 of yacc.c  */
#line 11744 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1773:

/* Line 1455 of yacc.c  */
#line 11752 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1774:

/* Line 1455 of yacc.c  */
#line 11760 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1775:

/* Line 1455 of yacc.c  */
#line 11768 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1776:

/* Line 1455 of yacc.c  */
#line 11775 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1777:

/* Line 1455 of yacc.c  */
#line 11777 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1778:

/* Line 1455 of yacc.c  */
#line 11779 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1779:

/* Line 1455 of yacc.c  */
#line 11788 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1780:

/* Line 1455 of yacc.c  */
#line 11792 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1781:

/* Line 1455 of yacc.c  */
#line 11796 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1782:

/* Line 1455 of yacc.c  */
#line 11801 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (6)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 1783:

/* Line 1455 of yacc.c  */
#line 11806 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1784:

/* Line 1455 of yacc.c  */
#line 11811 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (7)].limit_clause));
          }
    break;

  case 1785:

/* Line 1455 of yacc.c  */
#line 11820 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(5) - (5)].item) != NULL)
              ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));
            Select->set_where_cond((yyvsp[(5) - (5)].item));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1786:

/* Line 1455 of yacc.c  */
#line 11833 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1787:

/* Line 1455 of yacc.c  */
#line 11840 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1788:

/* Line 1455 of yacc.c  */
#line 11845 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "warning_count");
          }
    break;

  case 1789:

/* Line 1455 of yacc.c  */
#line 11851 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            create_select_for_variable(&pc, "error_count");
          }
    break;

  case 1790:

/* Line 1455 of yacc.c  */
#line 11857 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
    break;

  case 1791:

/* Line 1455 of yacc.c  */
#line 11865 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
    break;

  case 1792:

/* Line 1455 of yacc.c  */
#line 11873 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
    break;

  case 1793:

/* Line 1455 of yacc.c  */
#line 11881 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1794:

/* Line 1455 of yacc.c  */
#line 11891 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_STATUS;
              lex->option_type= (yyvsp[(1) - (3)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_status((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1795:

/* Line 1455 of yacc.c  */
#line 11922 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1796:

/* Line 1455 of yacc.c  */
#line 11924 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (show_compatibility_56)
            {
              /* 5.6, DEPRECATED */
              lex->sql_command= SQLCOM_SHOW_VARIABLES;
              lex->option_type= (yyvsp[(1) - (3)].var_type);
              if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
                MYSQL_YYABORT;
            }
            else
            {
              Item *where_cond= Select->where_cond();
              Select->set_where_cond(NULL);

              if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
              {
                /* 5.7, SUPPORTED */
                if (build_show_session_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
              else
              {
                /* 5.7, SUPPORTED */
                if (build_show_global_variables((yyloc), thd, lex->wild, where_cond) == NULL)
                  MYSQL_YYABORT;
              }
            }
          }
    break;

  case 1797:

/* Line 1455 of yacc.c  */
#line 11955 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1798:

/* Line 1455 of yacc.c  */
#line 11962 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1799:

/* Line 1455 of yacc.c  */
#line 11969 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1800:

/* Line 1455 of yacc.c  */
#line 11979 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->auth= NULL_CSTR;
          }
    break;

  case 1801:

/* Line 1455 of yacc.c  */
#line 11986 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1802:

/* Line 1455 of yacc.c  */
#line 11992 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1803:

/* Line 1455 of yacc.c  */
#line 12001 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1804:

/* Line 1455 of yacc.c  */
#line 12009 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1805:

/* Line 1455 of yacc.c  */
#line 12013 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1806:

/* Line 1455 of yacc.c  */
#line 12017 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1807:

/* Line 1455 of yacc.c  */
#line 12024 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1808:

/* Line 1455 of yacc.c  */
#line 12031 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1809:

/* Line 1455 of yacc.c  */
#line 12037 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1810:

/* Line 1455 of yacc.c  */
#line 12044 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1811:

/* Line 1455 of yacc.c  */
#line 12051 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1812:

/* Line 1455 of yacc.c  */
#line 12056 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1813:

/* Line 1455 of yacc.c  */
#line 12061 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1814:

/* Line 1455 of yacc.c  */
#line 12066 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[(4) - (4)].lex_user);
          }
    break;

  case 1815:

/* Line 1455 of yacc.c  */
#line 12075 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1816:

/* Line 1455 of yacc.c  */
#line 12077 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1817:

/* Line 1455 of yacc.c  */
#line 12079 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1822:

/* Line 1455 of yacc.c  */
#line 12093 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1823:

/* Line 1455 of yacc.c  */
#line 12094 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1824:

/* Line 1455 of yacc.c  */
#line 12098 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1825:

/* Line 1455 of yacc.c  */
#line 12099 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1828:

/* Line 1455 of yacc.c  */
#line 12108 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1829:

/* Line 1455 of yacc.c  */
#line 12109 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1830:

/* Line 1455 of yacc.c  */
#line 12113 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1831:

/* Line 1455 of yacc.c  */
#line 12114 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1833:

/* Line 1455 of yacc.c  */
#line 12120 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1834:

/* Line 1455 of yacc.c  */
#line 12127 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Select->set_where_cond((yyvsp[(2) - (2)].item));
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1836:

/* Line 1455 of yacc.c  */
#line 12139 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1837:

/* Line 1455 of yacc.c  */
#line 12146 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (show_compatibility_56)
            {
              /*
                This parsed tree fragment is added as part of a
                SQLCOM_SHOW_STATUS or SQLCOM_SHOW_VARIABLES command.
              */
              ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

              Select->set_where_cond((yyvsp[(2) - (2)].item));
              if ((yyvsp[(2) - (2)].item))
                (yyvsp[(2) - (2)].item)->top_level_item();
            }
            else
            {
              /*
                This parsed tree fragment is used to build a
                SQLCOM_SELECT statement, see sql/sql_show_status.cc
              */
              Select->set_where_cond((yyvsp[(2) - (2)].item));
            }
          }
    break;

  case 1838:

/* Line 1455 of yacc.c  */
#line 12173 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex->db= NULL;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1839:

/* Line 1455 of yacc.c  */
#line 12183 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1840:

/* Line 1455 of yacc.c  */
#line 12189 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->describe|= DESCRIBE_NORMAL;
          }
    break;

  case 1842:

/* Line 1455 of yacc.c  */
#line 12196 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { CONTEXTUALIZE((yyvsp[(1) - (1)].select)); }
    break;

  case 1843:

/* Line 1455 of yacc.c  */
#line 12197 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1844:

/* Line 1455 of yacc.c  */
#line 12198 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1845:

/* Line 1455 of yacc.c  */
#line 12199 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1846:

/* Line 1455 of yacc.c  */
#line 12200 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { MAKE_CMD((yyvsp[(1) - (1)].statement)); }
    break;

  case 1847:

/* Line 1455 of yacc.c  */
#line 12202 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_EXPLAIN_OTHER;
            if (Lex->sphead)
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "non-standalone EXPLAIN FOR CONNECTION");
              MYSQL_YYABORT;
            }
            Lex->query_id= (my_thread_id)((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 1850:

/* Line 1455 of yacc.c  */
#line 12221 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1851:

/* Line 1455 of yacc.c  */
#line 12226 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "EXTENDED");
          }
    break;

  case 1852:

/* Line 1455 of yacc.c  */
#line 12232 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "PARTITIONS");
          }
    break;

  case 1853:

/* Line 1455 of yacc.c  */
#line 12238 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1854:

/* Line 1455 of yacc.c  */
#line 12258 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1855:

/* Line 1455 of yacc.c  */
#line 12259 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1856:

/* Line 1455 of yacc.c  */
#line 12261 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1857:

/* Line 1455 of yacc.c  */
#line 12275 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1858:

/* Line 1455 of yacc.c  */
#line 12282 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1859:

/* Line 1455 of yacc.c  */
#line 12287 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1860:

/* Line 1455 of yacc.c  */
#line 12296 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1861:

/* Line 1455 of yacc.c  */
#line 12297 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1863:

/* Line 1455 of yacc.c  */
#line 12302 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1864:

/* Line 1455 of yacc.c  */
#line 12304 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1865:

/* Line 1455 of yacc.c  */
#line 12315 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_syntax_error(ER(ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1866:

/* Line 1455 of yacc.c  */
#line 12323 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1868:

/* Line 1455 of yacc.c  */
#line 12338 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1869:

/* Line 1455 of yacc.c  */
#line 12343 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1870:

/* Line 1455 of yacc.c  */
#line 12345 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1871:

/* Line 1455 of yacc.c  */
#line 12347 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1872:

/* Line 1455 of yacc.c  */
#line 12349 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1873:

/* Line 1455 of yacc.c  */
#line 12351 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1874:

/* Line 1455 of yacc.c  */
#line 12353 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1875:

/* Line 1455 of yacc.c  */
#line 12355 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1876:

/* Line 1455 of yacc.c  */
#line 12357 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1877:

/* Line 1455 of yacc.c  */
#line 12359 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1878:

/* Line 1455 of yacc.c  */
#line 12361 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1879:

/* Line 1455 of yacc.c  */
#line 12363 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1880:

/* Line 1455 of yacc.c  */
#line 12365 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1881:

/* Line 1455 of yacc.c  */
#line 12367 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1882:

/* Line 1455 of yacc.c  */
#line 12369 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
    break;

  case 1883:

/* Line 1455 of yacc.c  */
#line 12373 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1884:

/* Line 1455 of yacc.c  */
#line 12374 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1885:

/* Line 1455 of yacc.c  */
#line 12379 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1886:

/* Line 1455 of yacc.c  */
#line 12384 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1889:

/* Line 1455 of yacc.c  */
#line 12393 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1891:

/* Line 1455 of yacc.c  */
#line 12395 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1892:

/* Line 1455 of yacc.c  */
#line 12396 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1893:

/* Line 1455 of yacc.c  */
#line 12400 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1894:

/* Line 1455 of yacc.c  */
#line 12401 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1895:

/* Line 1455 of yacc.c  */
#line 12406 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1896:

/* Line 1455 of yacc.c  */
#line 12412 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1898:

/* Line 1455 of yacc.c  */
#line 12421 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1899:

/* Line 1455 of yacc.c  */
#line 12425 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1900:

/* Line 1455 of yacc.c  */
#line 12439 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1901:

/* Line 1455 of yacc.c  */
#line 12450 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1902:

/* Line 1455 of yacc.c  */
#line 12451 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1903:

/* Line 1455 of yacc.c  */
#line 12452 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1904:

/* Line 1455 of yacc.c  */
#line 12459 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1905:

/* Line 1455 of yacc.c  */
#line 12470 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0),
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1906:

/* Line 1455 of yacc.c  */
#line 12482 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->set_ignore(false);
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1907:

/* Line 1455 of yacc.c  */
#line 12492 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Fix lock for LOAD DATA CONCURRENT REPLACE */
            if (lex->duplicates == DUP_REPLACE && (yyvsp[(4) - (13)].lock_type) == TL_WRITE_CONCURRENT_INSERT)
              (yyvsp[(4) - (13)].lock_type)= TL_WRITE_DEFAULT;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (13)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (13)].lock_type), (yyvsp[(4) - (13)].lock_type) == TL_WRITE_LOW_PRIORITY ?
                                               MDL_SHARED_WRITE_LOW_PRIO :
                                               MDL_SHARED_WRITE, NULL, (yyvsp[(13) - (13)].string_list)))
              MYSQL_YYABORT;
            lex->load_field_list.empty();
            lex->load_update_list.empty();
            lex->load_value_list.empty();
            /* We can't give an error in the middle when using LOCAL files */
            if (lex->local_file && lex->duplicates == DUP_ERROR)
              lex->set_ignore(true);
          }
    break;

  case 1908:

/* Line 1455 of yacc.c  */
#line 12510 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(15) - (15)].charset); }
    break;

  case 1909:

/* Line 1455 of yacc.c  */
#line 12514 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->exchange->field.merge_field_separators((yyvsp[(18) - (22)].field_separators));
            Lex->exchange->line.merge_line_separators((yyvsp[(19) - (22)].line_separators));
          }
    break;

  case 1910:

/* Line 1455 of yacc.c  */
#line 12521 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1911:

/* Line 1455 of yacc.c  */
#line 12522 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1912:

/* Line 1455 of yacc.c  */
#line 12526 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1913:

/* Line 1455 of yacc.c  */
#line 12527 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1914:

/* Line 1455 of yacc.c  */
#line 12531 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1915:

/* Line 1455 of yacc.c  */
#line 12532 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 1916:

/* Line 1455 of yacc.c  */
#line 12533 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1917:

/* Line 1455 of yacc.c  */
#line 12537 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1918:

/* Line 1455 of yacc.c  */
#line 12538 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1919:

/* Line 1455 of yacc.c  */
#line 12539 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->set_ignore(true); }
    break;

  case 1920:

/* Line 1455 of yacc.c  */
#line 12543 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators).cleanup(); }
    break;

  case 1921:

/* Line 1455 of yacc.c  */
#line 12544 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators)= (yyvsp[(2) - (2)].field_separators); }
    break;

  case 1922:

/* Line 1455 of yacc.c  */
#line 12549 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators)= (yyvsp[(1) - (2)].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[(2) - (2)].field_separators));
          }
    break;

  case 1924:

/* Line 1455 of yacc.c  */
#line 12558 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1925:

/* Line 1455 of yacc.c  */
#line 12563 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(4) - (4)].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
    break;

  case 1926:

/* Line 1455 of yacc.c  */
#line 12569 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1927:

/* Line 1455 of yacc.c  */
#line 12574 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1928:

/* Line 1455 of yacc.c  */
#line 12581 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators).cleanup(); }
    break;

  case 1929:

/* Line 1455 of yacc.c  */
#line 12582 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators)= (yyvsp[(2) - (2)].line_separators); }
    break;

  case 1930:

/* Line 1455 of yacc.c  */
#line 12587 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators)= (yyvsp[(1) - (2)].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[(2) - (2)].line_separators));
          }
    break;

  case 1932:

/* Line 1455 of yacc.c  */
#line 12596 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1933:

/* Line 1455 of yacc.c  */
#line 12601 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1934:

/* Line 1455 of yacc.c  */
#line 12608 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1935:

/* Line 1455 of yacc.c  */
#line 12610 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->exchange->line.line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1937:

/* Line 1455 of yacc.c  */
#line 12615 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1938:

/* Line 1455 of yacc.c  */
#line 12622 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1939:

/* Line 1455 of yacc.c  */
#line 12624 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1940:

/* Line 1455 of yacc.c  */
#line 12628 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1941:

/* Line 1455 of yacc.c  */
#line 12629 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1942:

/* Line 1455 of yacc.c  */
#line 12630 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1943:

/* Line 1455 of yacc.c  */
#line 12635 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1944:

/* Line 1455 of yacc.c  */
#line 12637 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->load_field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1945:

/* Line 1455 of yacc.c  */
#line 12641 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1946:

/* Line 1455 of yacc.c  */
#line 12643 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1947:

/* Line 1455 of yacc.c  */
#line 12651 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1948:

/* Line 1455 of yacc.c  */
#line 12652 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1951:

/* Line 1455 of yacc.c  */
#line 12662 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (3)].item), &(yyvsp[(1) - (3)].item));
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex= Lex;
            uint length= (uint) ((yylsp[(3) - (3)]).cpp.end - (yylsp[(2) - (3)]).cpp.start);
            String *val= new (YYTHD->mem_root) String((yylsp[(2) - (3)]).cpp.start,
                                                      length,
                                                      YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->load_update_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->load_value_list.push_back((yyvsp[(3) - (3)].item)) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            (yyvsp[(3) - (3)].item)->item_name.copy((yylsp[(2) - (3)]).cpp.start, length, YYTHD->charset());
          }
    break;

  case 1952:

/* Line 1455 of yacc.c  */
#line 12685 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1953:

/* Line 1455 of yacc.c  */
#line 12690 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1954:

/* Line 1455 of yacc.c  */
#line 12695 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1955:

/* Line 1455 of yacc.c  */
#line 12700 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].text_literal), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1956:

/* Line 1455 of yacc.c  */
#line 12708 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1957:

/* Line 1455 of yacc.c  */
#line 12716 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_hex_string::make_hex_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1958:

/* Line 1455 of yacc.c  */
#line 12723 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_bin_string::make_bin_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= new (YYTHD->mem_root) String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1959:

/* Line 1455 of yacc.c  */
#line 12733 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.param_marker)= NEW_PTN Item_param((yyloc),
                                   (uint) ((yylsp[(1) - (1)]).raw.start - YYLIP->get_buf()));
          }
    break;

  case 1960:

/* Line 1455 of yacc.c  */
#line 12740 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 1961:

/* Line 1455 of yacc.c  */
#line 12741 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(2) - (2)].item), &(yyval.item)); }
    break;

  case 1962:

/* Line 1455 of yacc.c  */
#line 12743 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            (yyvsp[(2) - (2)].item)->max_length++;
            (yyval.item)= ((Item_int *)(yyvsp[(2) - (2)].item))->neg();
          }
    break;

  case 1963:

/* Line 1455 of yacc.c  */
#line 12753 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].text_literal); }
    break;

  case 1966:

/* Line 1455 of yacc.c  */
#line 12757 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
            lip->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1967:

/* Line 1455 of yacc.c  */
#line 12770 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("FALSE"), 0, 1);
          }
    break;

  case 1968:

/* Line 1455 of yacc.c  */
#line 12774 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("TRUE"), 1, 1);
          }
    break;

  case 1969:

/* Line 1455 of yacc.c  */
#line 12778 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1970:

/* Line 1455 of yacc.c  */
#line 12782 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1971:

/* Line 1455 of yacc.c  */
#line 12786 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1972:

/* Line 1455 of yacc.c  */
#line 12790 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1973:

/* Line 1455 of yacc.c  */
#line 12797 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_num_literal_num((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1974:

/* Line 1455 of yacc.c  */
#line 12801 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_num_literal_num((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1975:

/* Line 1455 of yacc.c  */
#line 12805 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1976:

/* Line 1455 of yacc.c  */
#line 12809 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_decimal((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, YYCSCL);
          }
    break;

  case 1977:

/* Line 1455 of yacc.c  */
#line 12813 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_float((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1978:

/* Line 1455 of yacc.c  */
#line 12821 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
    break;

  case 1979:

/* Line 1455 of yacc.c  */
#line 12825 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
    break;

  case 1980:

/* Line 1455 of yacc.c  */
#line 12829 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
    break;

  case 1983:

/* Line 1455 of yacc.c  */
#line 12848 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[(1) - (3)].lex_str).str);
          }
    break;

  case 1984:

/* Line 1455 of yacc.c  */
#line 12852 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str);
          }
    break;

  case 1985:

/* Line 1455 of yacc.c  */
#line 12859 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].num));
          }
    break;

  case 1986:

/* Line 1455 of yacc.c  */
#line 12866 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1988:

/* Line 1455 of yacc.c  */
#line 12874 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1990:

/* Line 1455 of yacc.c  */
#line 12882 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 1991:

/* Line 1455 of yacc.c  */
#line 12886 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), NULL, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 1992:

/* Line 1455 of yacc.c  */
#line 12890 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
          }
    break;

  case 1993:

/* Line 1455 of yacc.c  */
#line 12896 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1994:

/* Line 1455 of yacc.c  */
#line 12898 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 1995:

/* Line 1455 of yacc.c  */
#line 12914 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 1996:

/* Line 1455 of yacc.c  */
#line 12923 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);}
    break;

  case 1997:

/* Line 1455 of yacc.c  */
#line 12928 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (1)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1998:

/* Line 1455 of yacc.c  */
#line 12934 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1999:

/* Line 1455 of yacc.c  */
#line 12944 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(2) - (2)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2000:

/* Line 1455 of yacc.c  */
#line 12954 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (2)].lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2001:

/* Line 1455 of yacc.c  */
#line 12960 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD, to_lex_cstring((yyvsp[(1) - (4)].lex_str)),
                                    to_lex_cstring((yyvsp[(3) - (4)].lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2002:

/* Line 1455 of yacc.c  */
#line 12970 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING db= { any_db, strlen(any_db) };
            (yyval.table)= new Table_ident(YYTHD, db, to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2003:

/* Line 1455 of yacc.c  */
#line 12979 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 2004:

/* Line 1455 of yacc.c  */
#line 12981 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                     (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                     (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2005:

/* Line 1455 of yacc.c  */
#line 13011 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 2006:

/* Line 1455 of yacc.c  */
#line 13024 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (strcont((yyvsp[(1) - (1)].lex_str).str, "."))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2007:

/* Line 1455 of yacc.c  */
#line 13037 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2008:

/* Line 1455 of yacc.c  */
#line 13053 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2009:

/* Line 1455 of yacc.c  */
#line 13069 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2010:

/* Line 1455 of yacc.c  */
#line 13085 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2011:

/* Line 1455 of yacc.c  */
#line 13087 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2012:

/* Line 1455 of yacc.c  */
#line 13097 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2013:

/* Line 1455 of yacc.c  */
#line 13099 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2014:

/* Line 1455 of yacc.c  */
#line 13109 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2015:

/* Line 1455 of yacc.c  */
#line 13110 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2016:

/* Line 1455 of yacc.c  */
#line 13111 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2017:

/* Line 1455 of yacc.c  */
#line 13116 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyvsp[(1) - (1)].lex_str));

            (yyval.lex_user)->user.str= (yyvsp[(1) - (1)].lex_str).str;
            (yyval.lex_user)->user.length= (yyvsp[(1) - (1)].lex_str).length;
            (yyval.lex_user)->host.str= "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->plugin= EMPTY_CSTR;
            (yyval.lex_user)->auth= NULL_CSTR;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length((yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2018:

/* Line 1455 of yacc.c  */
#line 13144 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyvsp[(1) - (3)].lex_str));
            trim_whitespace(system_charset_info, &(yyvsp[(3) - (3)].lex_str));

            (yyval.lex_user)->user.str= (yyvsp[(1) - (3)].lex_str).str;
            (yyval.lex_user)->user.length= (yyvsp[(1) - (3)].lex_str).length;
            (yyval.lex_user)->host.str= (yyvsp[(3) - (3)].lex_str).str;
            (yyval.lex_user)->host.length= (yyvsp[(3) - (3)].lex_str).length;
            (yyval.lex_user)->plugin= EMPTY_CSTR;
            (yyval.lex_user)->auth= NULL_CSTR;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length((yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name((yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
            (yyval.lex_user)->host.str= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 2019:

/* Line 1455 of yacc.c  */
#line 13181 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 2020:

/* Line 1455 of yacc.c  */
#line 13195 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2021:

/* Line 1455 of yacc.c  */
#line 13196 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2022:

/* Line 1455 of yacc.c  */
#line 13197 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2023:

/* Line 1455 of yacc.c  */
#line 13198 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2024:

/* Line 1455 of yacc.c  */
#line 13199 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2025:

/* Line 1455 of yacc.c  */
#line 13200 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2026:

/* Line 1455 of yacc.c  */
#line 13201 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2027:

/* Line 1455 of yacc.c  */
#line 13202 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2028:

/* Line 1455 of yacc.c  */
#line 13203 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2029:

/* Line 1455 of yacc.c  */
#line 13204 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2030:

/* Line 1455 of yacc.c  */
#line 13205 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2031:

/* Line 1455 of yacc.c  */
#line 13206 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2032:

/* Line 1455 of yacc.c  */
#line 13207 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2033:

/* Line 1455 of yacc.c  */
#line 13208 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2034:

/* Line 1455 of yacc.c  */
#line 13209 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2035:

/* Line 1455 of yacc.c  */
#line 13210 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2036:

/* Line 1455 of yacc.c  */
#line 13211 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2037:

/* Line 1455 of yacc.c  */
#line 13212 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2038:

/* Line 1455 of yacc.c  */
#line 13213 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2039:

/* Line 1455 of yacc.c  */
#line 13214 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2040:

/* Line 1455 of yacc.c  */
#line 13215 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2041:

/* Line 1455 of yacc.c  */
#line 13216 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2042:

/* Line 1455 of yacc.c  */
#line 13217 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2043:

/* Line 1455 of yacc.c  */
#line 13218 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2044:

/* Line 1455 of yacc.c  */
#line 13219 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2045:

/* Line 1455 of yacc.c  */
#line 13220 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2046:

/* Line 1455 of yacc.c  */
#line 13221 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2047:

/* Line 1455 of yacc.c  */
#line 13222 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2048:

/* Line 1455 of yacc.c  */
#line 13223 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2049:

/* Line 1455 of yacc.c  */
#line 13224 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2050:

/* Line 1455 of yacc.c  */
#line 13225 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2051:

/* Line 1455 of yacc.c  */
#line 13226 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2052:

/* Line 1455 of yacc.c  */
#line 13227 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2053:

/* Line 1455 of yacc.c  */
#line 13228 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2054:

/* Line 1455 of yacc.c  */
#line 13229 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2055:

/* Line 1455 of yacc.c  */
#line 13230 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2056:

/* Line 1455 of yacc.c  */
#line 13231 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2057:

/* Line 1455 of yacc.c  */
#line 13232 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2058:

/* Line 1455 of yacc.c  */
#line 13233 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2059:

/* Line 1455 of yacc.c  */
#line 13234 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2060:

/* Line 1455 of yacc.c  */
#line 13235 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2061:

/* Line 1455 of yacc.c  */
#line 13236 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2062:

/* Line 1455 of yacc.c  */
#line 13237 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2063:

/* Line 1455 of yacc.c  */
#line 13238 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2064:

/* Line 1455 of yacc.c  */
#line 13239 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2065:

/* Line 1455 of yacc.c  */
#line 13240 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2066:

/* Line 1455 of yacc.c  */
#line 13241 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2067:

/* Line 1455 of yacc.c  */
#line 13242 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2068:

/* Line 1455 of yacc.c  */
#line 13243 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2069:

/* Line 1455 of yacc.c  */
#line 13244 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2070:

/* Line 1455 of yacc.c  */
#line 13245 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2071:

/* Line 1455 of yacc.c  */
#line 13246 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2072:

/* Line 1455 of yacc.c  */
#line 13247 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2073:

/* Line 1455 of yacc.c  */
#line 13248 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2074:

/* Line 1455 of yacc.c  */
#line 13249 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2075:

/* Line 1455 of yacc.c  */
#line 13250 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2076:

/* Line 1455 of yacc.c  */
#line 13251 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2077:

/* Line 1455 of yacc.c  */
#line 13261 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2078:

/* Line 1455 of yacc.c  */
#line 13262 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2079:

/* Line 1455 of yacc.c  */
#line 13263 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2080:

/* Line 1455 of yacc.c  */
#line 13264 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2081:

/* Line 1455 of yacc.c  */
#line 13265 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2082:

/* Line 1455 of yacc.c  */
#line 13266 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2083:

/* Line 1455 of yacc.c  */
#line 13267 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2084:

/* Line 1455 of yacc.c  */
#line 13268 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2085:

/* Line 1455 of yacc.c  */
#line 13269 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2086:

/* Line 1455 of yacc.c  */
#line 13270 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2087:

/* Line 1455 of yacc.c  */
#line 13271 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2088:

/* Line 1455 of yacc.c  */
#line 13272 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2089:

/* Line 1455 of yacc.c  */
#line 13273 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2090:

/* Line 1455 of yacc.c  */
#line 13274 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2091:

/* Line 1455 of yacc.c  */
#line 13275 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2092:

/* Line 1455 of yacc.c  */
#line 13276 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2093:

/* Line 1455 of yacc.c  */
#line 13277 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2094:

/* Line 1455 of yacc.c  */
#line 13278 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2095:

/* Line 1455 of yacc.c  */
#line 13279 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2096:

/* Line 1455 of yacc.c  */
#line 13280 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2097:

/* Line 1455 of yacc.c  */
#line 13281 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2098:

/* Line 1455 of yacc.c  */
#line 13282 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2099:

/* Line 1455 of yacc.c  */
#line 13283 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2100:

/* Line 1455 of yacc.c  */
#line 13284 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2101:

/* Line 1455 of yacc.c  */
#line 13285 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2102:

/* Line 1455 of yacc.c  */
#line 13286 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2103:

/* Line 1455 of yacc.c  */
#line 13287 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2104:

/* Line 1455 of yacc.c  */
#line 13288 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2105:

/* Line 1455 of yacc.c  */
#line 13289 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2106:

/* Line 1455 of yacc.c  */
#line 13290 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2107:

/* Line 1455 of yacc.c  */
#line 13291 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2108:

/* Line 1455 of yacc.c  */
#line 13292 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2109:

/* Line 1455 of yacc.c  */
#line 13293 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2110:

/* Line 1455 of yacc.c  */
#line 13294 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2111:

/* Line 1455 of yacc.c  */
#line 13295 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2112:

/* Line 1455 of yacc.c  */
#line 13296 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2113:

/* Line 1455 of yacc.c  */
#line 13297 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2114:

/* Line 1455 of yacc.c  */
#line 13298 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2115:

/* Line 1455 of yacc.c  */
#line 13299 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2116:

/* Line 1455 of yacc.c  */
#line 13300 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2117:

/* Line 1455 of yacc.c  */
#line 13301 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2118:

/* Line 1455 of yacc.c  */
#line 13302 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2119:

/* Line 1455 of yacc.c  */
#line 13303 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2120:

/* Line 1455 of yacc.c  */
#line 13304 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2121:

/* Line 1455 of yacc.c  */
#line 13305 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2122:

/* Line 1455 of yacc.c  */
#line 13306 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2123:

/* Line 1455 of yacc.c  */
#line 13307 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2124:

/* Line 1455 of yacc.c  */
#line 13312 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2125:

/* Line 1455 of yacc.c  */
#line 13313 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2126:

/* Line 1455 of yacc.c  */
#line 13314 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2127:

/* Line 1455 of yacc.c  */
#line 13315 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2128:

/* Line 1455 of yacc.c  */
#line 13316 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2129:

/* Line 1455 of yacc.c  */
#line 13317 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2130:

/* Line 1455 of yacc.c  */
#line 13318 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2131:

/* Line 1455 of yacc.c  */
#line 13319 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2132:

/* Line 1455 of yacc.c  */
#line 13320 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2133:

/* Line 1455 of yacc.c  */
#line 13321 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2134:

/* Line 1455 of yacc.c  */
#line 13322 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2135:

/* Line 1455 of yacc.c  */
#line 13323 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2136:

/* Line 1455 of yacc.c  */
#line 13324 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2137:

/* Line 1455 of yacc.c  */
#line 13325 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2138:

/* Line 1455 of yacc.c  */
#line 13326 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2139:

/* Line 1455 of yacc.c  */
#line 13327 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2140:

/* Line 1455 of yacc.c  */
#line 13328 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2141:

/* Line 1455 of yacc.c  */
#line 13329 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2142:

/* Line 1455 of yacc.c  */
#line 13330 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2143:

/* Line 1455 of yacc.c  */
#line 13331 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2144:

/* Line 1455 of yacc.c  */
#line 13332 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2145:

/* Line 1455 of yacc.c  */
#line 13333 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2146:

/* Line 1455 of yacc.c  */
#line 13334 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2147:

/* Line 1455 of yacc.c  */
#line 13335 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2148:

/* Line 1455 of yacc.c  */
#line 13336 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2149:

/* Line 1455 of yacc.c  */
#line 13337 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2150:

/* Line 1455 of yacc.c  */
#line 13338 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2151:

/* Line 1455 of yacc.c  */
#line 13339 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2152:

/* Line 1455 of yacc.c  */
#line 13340 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2153:

/* Line 1455 of yacc.c  */
#line 13341 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2154:

/* Line 1455 of yacc.c  */
#line 13342 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2155:

/* Line 1455 of yacc.c  */
#line 13343 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2156:

/* Line 1455 of yacc.c  */
#line 13344 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2157:

/* Line 1455 of yacc.c  */
#line 13345 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2158:

/* Line 1455 of yacc.c  */
#line 13346 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2159:

/* Line 1455 of yacc.c  */
#line 13347 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2160:

/* Line 1455 of yacc.c  */
#line 13348 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2161:

/* Line 1455 of yacc.c  */
#line 13349 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2162:

/* Line 1455 of yacc.c  */
#line 13350 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2163:

/* Line 1455 of yacc.c  */
#line 13351 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2164:

/* Line 1455 of yacc.c  */
#line 13352 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2165:

/* Line 1455 of yacc.c  */
#line 13353 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2166:

/* Line 1455 of yacc.c  */
#line 13354 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2167:

/* Line 1455 of yacc.c  */
#line 13355 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2168:

/* Line 1455 of yacc.c  */
#line 13356 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2169:

/* Line 1455 of yacc.c  */
#line 13357 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2170:

/* Line 1455 of yacc.c  */
#line 13358 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2171:

/* Line 1455 of yacc.c  */
#line 13359 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2172:

/* Line 1455 of yacc.c  */
#line 13360 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2173:

/* Line 1455 of yacc.c  */
#line 13361 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2174:

/* Line 1455 of yacc.c  */
#line 13362 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2175:

/* Line 1455 of yacc.c  */
#line 13363 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2176:

/* Line 1455 of yacc.c  */
#line 13364 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2177:

/* Line 1455 of yacc.c  */
#line 13365 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2178:

/* Line 1455 of yacc.c  */
#line 13366 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2179:

/* Line 1455 of yacc.c  */
#line 13367 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2180:

/* Line 1455 of yacc.c  */
#line 13368 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2181:

/* Line 1455 of yacc.c  */
#line 13369 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2182:

/* Line 1455 of yacc.c  */
#line 13370 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2183:

/* Line 1455 of yacc.c  */
#line 13371 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2184:

/* Line 1455 of yacc.c  */
#line 13372 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2185:

/* Line 1455 of yacc.c  */
#line 13373 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2186:

/* Line 1455 of yacc.c  */
#line 13374 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2187:

/* Line 1455 of yacc.c  */
#line 13375 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2188:

/* Line 1455 of yacc.c  */
#line 13376 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2189:

/* Line 1455 of yacc.c  */
#line 13377 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2190:

/* Line 1455 of yacc.c  */
#line 13378 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2191:

/* Line 1455 of yacc.c  */
#line 13379 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2192:

/* Line 1455 of yacc.c  */
#line 13380 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2193:

/* Line 1455 of yacc.c  */
#line 13381 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2194:

/* Line 1455 of yacc.c  */
#line 13382 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2195:

/* Line 1455 of yacc.c  */
#line 13383 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2196:

/* Line 1455 of yacc.c  */
#line 13384 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2197:

/* Line 1455 of yacc.c  */
#line 13385 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2198:

/* Line 1455 of yacc.c  */
#line 13386 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2199:

/* Line 1455 of yacc.c  */
#line 13387 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2200:

/* Line 1455 of yacc.c  */
#line 13388 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2201:

/* Line 1455 of yacc.c  */
#line 13389 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2202:

/* Line 1455 of yacc.c  */
#line 13390 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2203:

/* Line 1455 of yacc.c  */
#line 13391 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2204:

/* Line 1455 of yacc.c  */
#line 13392 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2205:

/* Line 1455 of yacc.c  */
#line 13393 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2206:

/* Line 1455 of yacc.c  */
#line 13394 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2207:

/* Line 1455 of yacc.c  */
#line 13395 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2208:

/* Line 1455 of yacc.c  */
#line 13396 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2209:

/* Line 1455 of yacc.c  */
#line 13397 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2210:

/* Line 1455 of yacc.c  */
#line 13398 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2211:

/* Line 1455 of yacc.c  */
#line 13399 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2212:

/* Line 1455 of yacc.c  */
#line 13400 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2213:

/* Line 1455 of yacc.c  */
#line 13401 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2214:

/* Line 1455 of yacc.c  */
#line 13402 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2215:

/* Line 1455 of yacc.c  */
#line 13403 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2216:

/* Line 1455 of yacc.c  */
#line 13404 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2217:

/* Line 1455 of yacc.c  */
#line 13405 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2218:

/* Line 1455 of yacc.c  */
#line 13406 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2219:

/* Line 1455 of yacc.c  */
#line 13407 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2220:

/* Line 1455 of yacc.c  */
#line 13408 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2221:

/* Line 1455 of yacc.c  */
#line 13409 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2222:

/* Line 1455 of yacc.c  */
#line 13410 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2223:

/* Line 1455 of yacc.c  */
#line 13411 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2224:

/* Line 1455 of yacc.c  */
#line 13412 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2225:

/* Line 1455 of yacc.c  */
#line 13413 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2226:

/* Line 1455 of yacc.c  */
#line 13414 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2227:

/* Line 1455 of yacc.c  */
#line 13415 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2228:

/* Line 1455 of yacc.c  */
#line 13416 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2229:

/* Line 1455 of yacc.c  */
#line 13417 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2230:

/* Line 1455 of yacc.c  */
#line 13418 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2231:

/* Line 1455 of yacc.c  */
#line 13419 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2232:

/* Line 1455 of yacc.c  */
#line 13420 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2233:

/* Line 1455 of yacc.c  */
#line 13421 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2234:

/* Line 1455 of yacc.c  */
#line 13422 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2235:

/* Line 1455 of yacc.c  */
#line 13423 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2236:

/* Line 1455 of yacc.c  */
#line 13424 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2237:

/* Line 1455 of yacc.c  */
#line 13425 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2238:

/* Line 1455 of yacc.c  */
#line 13426 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2239:

/* Line 1455 of yacc.c  */
#line 13427 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2240:

/* Line 1455 of yacc.c  */
#line 13428 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2241:

/* Line 1455 of yacc.c  */
#line 13429 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2242:

/* Line 1455 of yacc.c  */
#line 13430 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2243:

/* Line 1455 of yacc.c  */
#line 13431 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2244:

/* Line 1455 of yacc.c  */
#line 13432 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2245:

/* Line 1455 of yacc.c  */
#line 13433 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2246:

/* Line 1455 of yacc.c  */
#line 13434 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2247:

/* Line 1455 of yacc.c  */
#line 13435 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2248:

/* Line 1455 of yacc.c  */
#line 13436 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2249:

/* Line 1455 of yacc.c  */
#line 13437 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2250:

/* Line 1455 of yacc.c  */
#line 13438 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2251:

/* Line 1455 of yacc.c  */
#line 13439 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2252:

/* Line 1455 of yacc.c  */
#line 13440 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2253:

/* Line 1455 of yacc.c  */
#line 13441 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2254:

/* Line 1455 of yacc.c  */
#line 13442 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2255:

/* Line 1455 of yacc.c  */
#line 13443 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2256:

/* Line 1455 of yacc.c  */
#line 13444 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2257:

/* Line 1455 of yacc.c  */
#line 13445 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2258:

/* Line 1455 of yacc.c  */
#line 13446 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2259:

/* Line 1455 of yacc.c  */
#line 13447 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2260:

/* Line 1455 of yacc.c  */
#line 13448 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2261:

/* Line 1455 of yacc.c  */
#line 13449 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2262:

/* Line 1455 of yacc.c  */
#line 13450 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2263:

/* Line 1455 of yacc.c  */
#line 13451 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2264:

/* Line 1455 of yacc.c  */
#line 13452 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2265:

/* Line 1455 of yacc.c  */
#line 13453 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2266:

/* Line 1455 of yacc.c  */
#line 13454 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2267:

/* Line 1455 of yacc.c  */
#line 13455 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2268:

/* Line 1455 of yacc.c  */
#line 13456 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2269:

/* Line 1455 of yacc.c  */
#line 13457 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2270:

/* Line 1455 of yacc.c  */
#line 13458 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2271:

/* Line 1455 of yacc.c  */
#line 13459 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2272:

/* Line 1455 of yacc.c  */
#line 13460 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2273:

/* Line 1455 of yacc.c  */
#line 13461 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2274:

/* Line 1455 of yacc.c  */
#line 13462 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2275:

/* Line 1455 of yacc.c  */
#line 13463 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2276:

/* Line 1455 of yacc.c  */
#line 13464 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2277:

/* Line 1455 of yacc.c  */
#line 13465 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2278:

/* Line 1455 of yacc.c  */
#line 13466 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2279:

/* Line 1455 of yacc.c  */
#line 13467 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2280:

/* Line 1455 of yacc.c  */
#line 13468 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2281:

/* Line 1455 of yacc.c  */
#line 13469 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2282:

/* Line 1455 of yacc.c  */
#line 13470 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2283:

/* Line 1455 of yacc.c  */
#line 13471 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2284:

/* Line 1455 of yacc.c  */
#line 13472 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2285:

/* Line 1455 of yacc.c  */
#line 13473 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2286:

/* Line 1455 of yacc.c  */
#line 13474 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2287:

/* Line 1455 of yacc.c  */
#line 13475 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2288:

/* Line 1455 of yacc.c  */
#line 13476 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2289:

/* Line 1455 of yacc.c  */
#line 13477 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2290:

/* Line 1455 of yacc.c  */
#line 13478 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2291:

/* Line 1455 of yacc.c  */
#line 13479 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2292:

/* Line 1455 of yacc.c  */
#line 13480 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2293:

/* Line 1455 of yacc.c  */
#line 13481 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2294:

/* Line 1455 of yacc.c  */
#line 13482 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2295:

/* Line 1455 of yacc.c  */
#line 13483 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2296:

/* Line 1455 of yacc.c  */
#line 13484 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2297:

/* Line 1455 of yacc.c  */
#line 13485 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2298:

/* Line 1455 of yacc.c  */
#line 13486 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2299:

/* Line 1455 of yacc.c  */
#line 13487 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2300:

/* Line 1455 of yacc.c  */
#line 13488 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2301:

/* Line 1455 of yacc.c  */
#line 13489 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2302:

/* Line 1455 of yacc.c  */
#line 13490 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2303:

/* Line 1455 of yacc.c  */
#line 13491 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2304:

/* Line 1455 of yacc.c  */
#line 13492 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2305:

/* Line 1455 of yacc.c  */
#line 13493 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2306:

/* Line 1455 of yacc.c  */
#line 13494 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2307:

/* Line 1455 of yacc.c  */
#line 13495 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2308:

/* Line 1455 of yacc.c  */
#line 13496 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2309:

/* Line 1455 of yacc.c  */
#line 13497 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2310:

/* Line 1455 of yacc.c  */
#line 13498 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2311:

/* Line 1455 of yacc.c  */
#line 13499 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2312:

/* Line 1455 of yacc.c  */
#line 13500 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2313:

/* Line 1455 of yacc.c  */
#line 13501 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2314:

/* Line 1455 of yacc.c  */
#line 13502 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2315:

/* Line 1455 of yacc.c  */
#line 13503 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2316:

/* Line 1455 of yacc.c  */
#line 13504 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2317:

/* Line 1455 of yacc.c  */
#line 13505 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2318:

/* Line 1455 of yacc.c  */
#line 13506 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2319:

/* Line 1455 of yacc.c  */
#line 13507 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2320:

/* Line 1455 of yacc.c  */
#line 13508 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2321:

/* Line 1455 of yacc.c  */
#line 13509 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2322:

/* Line 1455 of yacc.c  */
#line 13510 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2323:

/* Line 1455 of yacc.c  */
#line 13511 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2324:

/* Line 1455 of yacc.c  */
#line 13512 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2325:

/* Line 1455 of yacc.c  */
#line 13513 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2326:

/* Line 1455 of yacc.c  */
#line 13514 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2327:

/* Line 1455 of yacc.c  */
#line 13515 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2328:

/* Line 1455 of yacc.c  */
#line 13516 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2329:

/* Line 1455 of yacc.c  */
#line 13517 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2330:

/* Line 1455 of yacc.c  */
#line 13518 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2331:

/* Line 1455 of yacc.c  */
#line 13519 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2332:

/* Line 1455 of yacc.c  */
#line 13520 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2333:

/* Line 1455 of yacc.c  */
#line 13521 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2334:

/* Line 1455 of yacc.c  */
#line 13522 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2335:

/* Line 1455 of yacc.c  */
#line 13523 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2336:

/* Line 1455 of yacc.c  */
#line 13524 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2337:

/* Line 1455 of yacc.c  */
#line 13525 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2338:

/* Line 1455 of yacc.c  */
#line 13526 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2339:

/* Line 1455 of yacc.c  */
#line 13527 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2340:

/* Line 1455 of yacc.c  */
#line 13528 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2341:

/* Line 1455 of yacc.c  */
#line 13529 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2342:

/* Line 1455 of yacc.c  */
#line 13530 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2343:

/* Line 1455 of yacc.c  */
#line 13531 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2344:

/* Line 1455 of yacc.c  */
#line 13532 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2345:

/* Line 1455 of yacc.c  */
#line 13533 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2346:

/* Line 1455 of yacc.c  */
#line 13534 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2347:

/* Line 1455 of yacc.c  */
#line 13535 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2348:

/* Line 1455 of yacc.c  */
#line 13536 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2349:

/* Line 1455 of yacc.c  */
#line 13537 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2350:

/* Line 1455 of yacc.c  */
#line 13538 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2351:

/* Line 1455 of yacc.c  */
#line 13539 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2352:

/* Line 1455 of yacc.c  */
#line 13540 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2353:

/* Line 1455 of yacc.c  */
#line 13541 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2354:

/* Line 1455 of yacc.c  */
#line 13542 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2355:

/* Line 1455 of yacc.c  */
#line 13543 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2356:

/* Line 1455 of yacc.c  */
#line 13544 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2357:

/* Line 1455 of yacc.c  */
#line 13545 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2358:

/* Line 1455 of yacc.c  */
#line 13546 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2359:

/* Line 1455 of yacc.c  */
#line 13547 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2360:

/* Line 1455 of yacc.c  */
#line 13548 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2361:

/* Line 1455 of yacc.c  */
#line 13549 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2362:

/* Line 1455 of yacc.c  */
#line 13550 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2363:

/* Line 1455 of yacc.c  */
#line 13551 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2364:

/* Line 1455 of yacc.c  */
#line 13552 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2365:

/* Line 1455 of yacc.c  */
#line 13553 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2366:

/* Line 1455 of yacc.c  */
#line 13554 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2367:

/* Line 1455 of yacc.c  */
#line 13555 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2368:

/* Line 1455 of yacc.c  */
#line 13556 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2369:

/* Line 1455 of yacc.c  */
#line 13557 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2370:

/* Line 1455 of yacc.c  */
#line 13558 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2371:

/* Line 1455 of yacc.c  */
#line 13559 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2372:

/* Line 1455 of yacc.c  */
#line 13560 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2373:

/* Line 1455 of yacc.c  */
#line 13561 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2374:

/* Line 1455 of yacc.c  */
#line 13562 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2375:

/* Line 1455 of yacc.c  */
#line 13563 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2376:

/* Line 1455 of yacc.c  */
#line 13564 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2377:

/* Line 1455 of yacc.c  */
#line 13565 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2378:

/* Line 1455 of yacc.c  */
#line 13566 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2379:

/* Line 1455 of yacc.c  */
#line 13567 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2380:

/* Line 1455 of yacc.c  */
#line 13568 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2381:

/* Line 1455 of yacc.c  */
#line 13569 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2382:

/* Line 1455 of yacc.c  */
#line 13570 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2383:

/* Line 1455 of yacc.c  */
#line 13571 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2384:

/* Line 1455 of yacc.c  */
#line 13572 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2385:

/* Line 1455 of yacc.c  */
#line 13573 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2386:

/* Line 1455 of yacc.c  */
#line 13574 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2387:

/* Line 1455 of yacc.c  */
#line 13575 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2388:

/* Line 1455 of yacc.c  */
#line 13576 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2389:

/* Line 1455 of yacc.c  */
#line 13577 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2390:

/* Line 1455 of yacc.c  */
#line 13578 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2391:

/* Line 1455 of yacc.c  */
#line 13579 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2392:

/* Line 1455 of yacc.c  */
#line 13580 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2393:

/* Line 1455 of yacc.c  */
#line 13592 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].start_option_value_list));
          }
    break;

  case 2394:

/* Line 1455 of yacc.c  */
#line 13601 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[(1) - (2)].option_value_no_option_type), (yylsp[(1) - (2)]), (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2395:

/* Line 1455 of yacc.c  */
#line 13605 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[(2) - (2)].transaction_characteristics), (yylsp[(2) - (2)]));
          }
    break;

  case 2396:

/* Line 1455 of yacc.c  */
#line 13609 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].start_option_value_list_following_option_type));
          }
    break;

  case 2397:

/* Line 1455 of yacc.c  */
#line 13613 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(3) - (3)].simple_string), (yylsp[(3) - (3)]));
          }
    break;

  case 2398:

/* Line 1455 of yacc.c  */
#line 13617 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD = '<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(5) - (6)].simple_string), (yylsp[(5) - (6)]));
          }
    break;

  case 2399:

/* Line 1455 of yacc.c  */
#line 13624 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].simple_string), (yylsp[(5) - (5)]));
          }
    break;

  case 2400:

/* Line 1455 of yacc.c  */
#line 13628 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn(YYTHD, "SET PASSWORD FOR <user> = "
                                 "PASSWORD('<plaintext_password>')",
                                 "SET PASSWORD FOR <user> = "
                                 "'<plaintext_password>'");
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (8)].lex_user), (yyvsp[(7) - (8)].simple_string), (yylsp[(7) - (8)]));
          }
    break;

  case 2401:

/* Line 1455 of yacc.c  */
#line 13641 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[(1) - (2)].option_value_following_option_type),
                                                                          (yylsp[(1) - (2)]),
                                                                          (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2402:

/* Line 1455 of yacc.c  */
#line 13648 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[(2) - (2)].transaction_characteristics),
                                                                           (yylsp[(2) - (2)]));
          }
    break;

  case 2403:

/* Line 1455 of yacc.c  */
#line 13657 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= NULL; }
    break;

  case 2404:

/* Line 1455 of yacc.c  */
#line 13658 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= (yyvsp[(2) - (2)].option_value_list); }
    break;

  case 2405:

/* Line 1455 of yacc.c  */
#line 13664 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[(0) - (1)]), (yyvsp[(1) - (1)].node), (yylsp[(1) - (1)]));
          }
    break;

  case 2406:

/* Line 1455 of yacc.c  */
#line 13668 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[(1) - (3)].option_value_list), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].node), (yylsp[(3) - (3)]));
          }
    break;

  case 2407:

/* Line 1455 of yacc.c  */
#line 13676 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].option_value_following_option_type));
          }
    break;

  case 2408:

/* Line 1455 of yacc.c  */
#line 13679 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].option_value_no_option_type); }
    break;

  case 2409:

/* Line 1455 of yacc.c  */
#line 13683 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2410:

/* Line 1455 of yacc.c  */
#line 13684 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2411:

/* Line 1455 of yacc.c  */
#line 13685 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2412:

/* Line 1455 of yacc.c  */
#line 13689 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2413:

/* Line 1455 of yacc.c  */
#line 13690 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2414:

/* Line 1455 of yacc.c  */
#line 13691 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2415:

/* Line 1455 of yacc.c  */
#line 13692 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2416:

/* Line 1455 of yacc.c  */
#line 13696 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2417:

/* Line 1455 of yacc.c  */
#line 13697 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2418:

/* Line 1455 of yacc.c  */
#line 13698 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2419:

/* Line 1455 of yacc.c  */
#line 13699 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2420:

/* Line 1455 of yacc.c  */
#line 13705 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item));
          }
    break;

  case 2421:

/* Line 1455 of yacc.c  */
#line 13715 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item), (yylsp[(3) - (3)]));
          }
    break;

  case 2422:

/* Line 1455 of yacc.c  */
#line 13719 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
          }
    break;

  case 2423:

/* Line 1455 of yacc.c  */
#line 13723 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[(3) - (6)].var_type), (yyvsp[(4) - (6)].internal_variable_name), (yyvsp[(6) - (6)].item));
          }
    break;

  case 2424:

/* Line 1455 of yacc.c  */
#line 13727 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[(2) - (2)].charset));
          }
    break;

  case 2425:

/* Line 1455 of yacc.c  */
#line 13731 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[(2) - (3)]));
          }
    break;

  case 2426:

/* Line 1455 of yacc.c  */
#line 13738 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names_charset((yyvsp[(2) - (3)].charset), (yyvsp[(3) - (3)].charset));
          }
    break;

  case 2427:

/* Line 1455 of yacc.c  */
#line 13745 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2428:

/* Line 1455 of yacc.c  */
#line 13749 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2429:

/* Line 1455 of yacc.c  */
#line 13753 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2430:

/* Line 1455 of yacc.c  */
#line 13760 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].transaction_access_mode), (yyvsp[(2) - (2)].isolation_level));
          }
    break;

  case 2431:

/* Line 1455 of yacc.c  */
#line 13764 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].isolation_level), (yyvsp[(2) - (2)].transaction_access_mode));
          }
    break;

  case 2432:

/* Line 1455 of yacc.c  */
#line 13771 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[(1) - (1)].num));
          }
    break;

  case 2433:

/* Line 1455 of yacc.c  */
#line 13777 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= NULL; }
    break;

  case 2434:

/* Line 1455 of yacc.c  */
#line 13778 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= (yyvsp[(2) - (2)].transaction_access_mode); }
    break;

  case 2435:

/* Line 1455 of yacc.c  */
#line 13783 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[(3) - (3)].tx_isolation));
          }
    break;

  case 2436:

/* Line 1455 of yacc.c  */
#line 13789 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= NULL; }
    break;

  case 2437:

/* Line 1455 of yacc.c  */
#line 13790 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= (yyvsp[(2) - (2)].isolation_level); }
    break;

  case 2438:

/* Line 1455 of yacc.c  */
#line 13794 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2439:

/* Line 1455 of yacc.c  */
#line 13795 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2440:

/* Line 1455 of yacc.c  */
#line 13799 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2441:

/* Line 1455 of yacc.c  */
#line 13800 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2442:

/* Line 1455 of yacc.c  */
#line 13801 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2443:

/* Line 1455 of yacc.c  */
#line 13802 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2444:

/* Line 1455 of yacc.c  */
#line 13807 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2446:

/* Line 1455 of yacc.c  */
#line 13816 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 2447:

/* Line 1455 of yacc.c  */
#line 13818 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON",  2, system_charset_info);
          }
    break;

  case 2448:

/* Line 1455 of yacc.c  */
#line 13822 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
    break;

  case 2449:

/* Line 1455 of yacc.c  */
#line 13826 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
    break;

  case 2450:

/* Line 1455 of yacc.c  */
#line 13835 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2451:

/* Line 1455 of yacc.c  */
#line 13846 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2456:

/* Line 1455 of yacc.c  */
#line 13861 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
    break;

  case 2457:

/* Line 1455 of yacc.c  */
#line 13888 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2458:

/* Line 1455 of yacc.c  */
#line 13889 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2459:

/* Line 1455 of yacc.c  */
#line 13891 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2460:

/* Line 1455 of yacc.c  */
#line 13895 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2461:

/* Line 1455 of yacc.c  */
#line 13900 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2462:

/* Line 1455 of yacc.c  */
#line 13911 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2463:

/* Line 1455 of yacc.c  */
#line 13917 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.statement)= NEW_PTN PT_shutdown();
          }
    break;

  case 2464:

/* Line 1455 of yacc.c  */
#line 13929 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2465:

/* Line 1455 of yacc.c  */
#line 13945 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2466:

/* Line 1455 of yacc.c  */
#line 13963 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /* #4 */
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select()->select_limit= one;
            lex->current_select()->offset_limit= 0;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2467:

/* Line 1455 of yacc.c  */
#line 13983 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item) != NULL)
              ITEMIZE((yyvsp[(6) - (7)].item), &(yyvsp[(6) - (7)].item));
            Select->set_where_cond((yyvsp[(6) - (7)].item));

            if ((yyvsp[(7) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(7) - (7)].limit_clause));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->handler_insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2468:

/* Line 1455 of yacc.c  */
#line 14010 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2469:

/* Line 1455 of yacc.c  */
#line 14011 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2470:

/* Line 1455 of yacc.c  */
#line 14015 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2471:

/* Line 1455 of yacc.c  */
#line 14016 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2472:

/* Line 1455 of yacc.c  */
#line 14020 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2473:

/* Line 1455 of yacc.c  */
#line 14021 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2474:

/* Line 1455 of yacc.c  */
#line 14022 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RPREV;  }
    break;

  case 2475:

/* Line 1455 of yacc.c  */
#line 14023 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RLAST;  }
    break;

  case 2476:

/* Line 1455 of yacc.c  */
#line 14025 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
          }
    break;

  case 2477:

/* Line 1455 of yacc.c  */
#line 14029 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(4) - (5)].item_list2));
            Lex->handler_insert_list= &(yyvsp[(4) - (5)].item_list2)->value;
            (yyval.ha_read_mode)= RKEY;
          }
    break;

  case 2478:

/* Line 1455 of yacc.c  */
#line 14037 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2479:

/* Line 1455 of yacc.c  */
#line 14038 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2480:

/* Line 1455 of yacc.c  */
#line 14039 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2481:

/* Line 1455 of yacc.c  */
#line 14040 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2482:

/* Line 1455 of yacc.c  */
#line 14041 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2483:

/* Line 1455 of yacc.c  */
#line 14047 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_REVOKE; }
    break;

  case 2484:

/* Line 1455 of yacc.c  */
#line 14048 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2485:

/* Line 1455 of yacc.c  */
#line 14053 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2486:

/* Line 1455 of yacc.c  */
#line 14058 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2487:

/* Line 1455 of yacc.c  */
#line 14068 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2488:

/* Line 1455 of yacc.c  */
#line 14078 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2489:

/* Line 1455 of yacc.c  */
#line 14082 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2490:

/* Line 1455 of yacc.c  */
#line 14090 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_GRANT; }
    break;

  case 2491:

/* Line 1455 of yacc.c  */
#line 14091 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2492:

/* Line 1455 of yacc.c  */
#line 14097 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2493:

/* Line 1455 of yacc.c  */
#line 14103 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2494:

/* Line 1455 of yacc.c  */
#line 14114 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2495:

/* Line 1455 of yacc.c  */
#line 14124 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2498:

/* Line 1455 of yacc.c  */
#line 14138 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->grant == GLOBAL_ACLS &&
                lex->sql_command == SQLCOM_REVOKE)
              lex->sql_command= SQLCOM_REVOKE_ALL;
          }
    break;

  case 2499:

/* Line 1455 of yacc.c  */
#line 14145 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2504:

/* Line 1455 of yacc.c  */
#line 14163 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2505:

/* Line 1455 of yacc.c  */
#line 14164 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2506:

/* Line 1455 of yacc.c  */
#line 14166 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2507:

/* Line 1455 of yacc.c  */
#line 14167 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2508:

/* Line 1455 of yacc.c  */
#line 14169 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2509:

/* Line 1455 of yacc.c  */
#line 14170 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2510:

/* Line 1455 of yacc.c  */
#line 14172 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2511:

/* Line 1455 of yacc.c  */
#line 14173 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2512:

/* Line 1455 of yacc.c  */
#line 14174 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2513:

/* Line 1455 of yacc.c  */
#line 14175 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2514:

/* Line 1455 of yacc.c  */
#line 14176 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2515:

/* Line 1455 of yacc.c  */
#line 14177 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2516:

/* Line 1455 of yacc.c  */
#line 14178 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2517:

/* Line 1455 of yacc.c  */
#line 14179 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2518:

/* Line 1455 of yacc.c  */
#line 14180 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2519:

/* Line 1455 of yacc.c  */
#line 14181 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2520:

/* Line 1455 of yacc.c  */
#line 14182 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2521:

/* Line 1455 of yacc.c  */
#line 14183 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2522:

/* Line 1455 of yacc.c  */
#line 14184 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2523:

/* Line 1455 of yacc.c  */
#line 14185 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2524:

/* Line 1455 of yacc.c  */
#line 14186 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2525:

/* Line 1455 of yacc.c  */
#line 14187 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2526:

/* Line 1455 of yacc.c  */
#line 14188 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2527:

/* Line 1455 of yacc.c  */
#line 14189 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2528:

/* Line 1455 of yacc.c  */
#line 14190 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2529:

/* Line 1455 of yacc.c  */
#line 14191 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2530:

/* Line 1455 of yacc.c  */
#line 14192 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2531:

/* Line 1455 of yacc.c  */
#line 14193 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2532:

/* Line 1455 of yacc.c  */
#line 14194 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2533:

/* Line 1455 of yacc.c  */
#line 14195 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2534:

/* Line 1455 of yacc.c  */
#line 14196 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2535:

/* Line 1455 of yacc.c  */
#line 14197 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2536:

/* Line 1455 of yacc.c  */
#line 14198 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2537:

/* Line 1455 of yacc.c  */
#line 14199 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2538:

/* Line 1455 of yacc.c  */
#line 14203 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2539:

/* Line 1455 of yacc.c  */
#line 14204 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2542:

/* Line 1455 of yacc.c  */
#line 14214 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2543:

/* Line 1455 of yacc.c  */
#line 14224 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2544:

/* Line 1455 of yacc.c  */
#line 14234 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2545:

/* Line 1455 of yacc.c  */
#line 14247 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2546:

/* Line 1455 of yacc.c  */
#line 14262 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2547:

/* Line 1455 of yacc.c  */
#line 14275 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2548:

/* Line 1455 of yacc.c  */
#line 14288 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2549:

/* Line 1455 of yacc.c  */
#line 14300 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2550:

/* Line 1455 of yacc.c  */
#line 14305 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2551:

/* Line 1455 of yacc.c  */
#line 14313 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2552:

/* Line 1455 of yacc.c  */
#line 14318 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2553:

/* Line 1455 of yacc.c  */
#line 14326 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->auth.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->auth.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2554:

/* Line 1455 of yacc.c  */
#line 14334 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user);
            (yyvsp[(1) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(1) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(1) - (5)].lex_user)->uses_identified_by_password_clause= true;
            if (Lex->sql_command == SQLCOM_ALTER_USER)
            {
              my_syntax_error(ER_THD(YYTHD, ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
              push_deprecated_warn(YYTHD, "IDENTIFIED BY PASSWORD",
                                   "IDENTIFIED WITH <plugin> AS <hash>");
          }
    break;

  case 2555:

/* Line 1455 of yacc.c  */
#line 14349 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->plugin.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_with_clause= true;
          }
    break;

  case 2556:

/* Line 1455 of yacc.c  */
#line 14357 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_authentication_string_clause= true;
          }
    break;

  case 2557:

/* Line 1455 of yacc.c  */
#line 14367 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2558:

/* Line 1455 of yacc.c  */
#line 14378 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user);
            (yyvsp[(1) - (1)].lex_user)->auth= NULL_CSTR;
          }
    break;

  case 2559:

/* Line 1455 of yacc.c  */
#line 14386 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2563:

/* Line 1455 of yacc.c  */
#line 14400 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2565:

/* Line 1455 of yacc.c  */
#line 14429 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2566:

/* Line 1455 of yacc.c  */
#line 14433 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2567:

/* Line 1455 of yacc.c  */
#line 14437 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2568:

/* Line 1455 of yacc.c  */
#line 14441 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2569:

/* Line 1455 of yacc.c  */
#line 14447 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2571:

/* Line 1455 of yacc.c  */
#line 14452 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2572:

/* Line 1455 of yacc.c  */
#line 14453 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2573:

/* Line 1455 of yacc.c  */
#line 14457 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2574:

/* Line 1455 of yacc.c  */
#line 14458 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2575:

/* Line 1455 of yacc.c  */
#line 14462 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2576:

/* Line 1455 of yacc.c  */
#line 14464 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2577:

/* Line 1455 of yacc.c  */
#line 14470 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2578:

/* Line 1455 of yacc.c  */
#line 14476 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2579:

/* Line 1455 of yacc.c  */
#line 14482 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2580:

/* Line 1455 of yacc.c  */
#line 14491 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2581:

/* Line 1455 of yacc.c  */
#line 14496 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2582:

/* Line 1455 of yacc.c  */
#line 14500 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2583:

/* Line 1455 of yacc.c  */
#line 14501 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2584:

/* Line 1455 of yacc.c  */
#line 14506 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2585:

/* Line 1455 of yacc.c  */
#line 14507 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2586:

/* Line 1455 of yacc.c  */
#line 14508 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2587:

/* Line 1455 of yacc.c  */
#line 14513 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2588:

/* Line 1455 of yacc.c  */
#line 14514 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2589:

/* Line 1455 of yacc.c  */
#line 14515 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2590:

/* Line 1455 of yacc.c  */
#line 14519 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2591:

/* Line 1455 of yacc.c  */
#line 14520 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2592:

/* Line 1455 of yacc.c  */
#line 14525 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2593:

/* Line 1455 of yacc.c  */
#line 14537 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2594:

/* Line 1455 of yacc.c  */
#line 14547 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2595:

/* Line 1455 of yacc.c  */
#line 14556 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2596:

/* Line 1455 of yacc.c  */
#line 14565 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2597:

/* Line 1455 of yacc.c  */
#line 14578 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.union_list)= NULL; }
    break;

  case 2599:

/* Line 1455 of yacc.c  */
#line 14584 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.union_list)= NEW_PTN PT_union_list((yyvsp[(2) - (3)].num), (yyvsp[(3) - (3)].select_init));
          }
    break;

  case 2600:

/* Line 1455 of yacc.c  */
#line 14590 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.node)= NULL; }
    break;

  case 2601:

/* Line 1455 of yacc.c  */
#line 14591 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_list); }
    break;

  case 2602:

/* Line 1455 of yacc.c  */
#line 14592 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_order_or_limit); }
    break;

  case 2603:

/* Line 1455 of yacc.c  */
#line 14596 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.node)= NULL; }
    break;

  case 2604:

/* Line 1455 of yacc.c  */
#line 14597 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].union_order_or_limit); }
    break;

  case 2605:

/* Line 1455 of yacc.c  */
#line 14602 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.union_order_or_limit)= NEW_PTN PT_union_order_or_limit((yyvsp[(1) - (1)].node));
          }
    break;

  case 2606:

/* Line 1455 of yacc.c  */
#line 14609 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_order_or_limit_order((yyvsp[(1) - (2)].order), (yyvsp[(2) - (2)].limit_clause));
          }
    break;

  case 2607:

/* Line 1455 of yacc.c  */
#line 14612 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].limit_clause); }
    break;

  case 2608:

/* Line 1455 of yacc.c  */
#line 14616 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2609:

/* Line 1455 of yacc.c  */
#line 14617 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2610:

/* Line 1455 of yacc.c  */
#line 14618 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2611:

/* Line 1455 of yacc.c  */
#line 14623 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_specification_select((yyvsp[(1) - (3)].optimizer_hints), (yyvsp[(2) - (3)].select_part2_derived), (yyvsp[(3) - (3)].table_expression));
          }
    break;

  case 2612:

/* Line 1455 of yacc.c  */
#line 14628 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_specification_parenthesis((yyvsp[(2) - (4)].select_paren_derived), (yyvsp[(4) - (4)].node));
          }
    break;

  case 2614:

/* Line 1455 of yacc.c  */
#line 14636 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex2)= NEW_PTN PT_query_expression_body_union((yyloc), (yyvsp[(1) - (4)].select_lex2), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].select_lex2));
          }
    break;

  case 2615:

/* Line 1455 of yacc.c  */
#line 14643 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: remove this semantic action (currently this removal
              adds reduce/reduce conflict)
            */
          }
    break;

  case 2616:

/* Line 1455 of yacc.c  */
#line 14650 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.subselect)= NEW_PTN PT_subselect((yyloc), (yyvsp[(2) - (2)].select_lex2));
          }
    break;

  case 2617:

/* Line 1455 of yacc.c  */
#line 14656 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= 0; }
    break;

  case 2619:

/* Line 1455 of yacc.c  */
#line 14662 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulonglong_number)= (yyvsp[(1) - (2)].ulonglong_number) | (yyvsp[(2) - (2)].ulonglong_number);
          }
    break;

  case 2621:

/* Line 1455 of yacc.c  */
#line 14669 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
    break;

  case 2622:

/* Line 1455 of yacc.c  */
#line 14670 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
    break;

  case 2623:

/* Line 1455 of yacc.c  */
#line 14671 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
    break;

  case 2624:

/* Line 1455 of yacc.c  */
#line 14672 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
    break;

  case 2625:

/* Line 1455 of yacc.c  */
#line 14673 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
    break;

  case 2626:

/* Line 1455 of yacc.c  */
#line 14674 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
    break;

  case 2627:

/* Line 1455 of yacc.c  */
#line 14675 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_FOUND_ROWS; }
    break;

  case 2628:

/* Line 1455 of yacc.c  */
#line 14676 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_ALL; }
    break;

  case 2629:

/* Line 1455 of yacc.c  */
#line 14687 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2630:

/* Line 1455 of yacc.c  */
#line 14689 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2631:

/* Line 1455 of yacc.c  */
#line 14691 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2645:

/* Line 1455 of yacc.c  */
#line 14724 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2646:

/* Line 1455 of yacc.c  */
#line 14738 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2647:

/* Line 1455 of yacc.c  */
#line 14751 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2648:

/* Line 1455 of yacc.c  */
#line 14753 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2649:

/* Line 1455 of yacc.c  */
#line 14755 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2650:

/* Line 1455 of yacc.c  */
#line 14760 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2651:

/* Line 1455 of yacc.c  */
#line 14765 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2652:

/* Line 1455 of yacc.c  */
#line 14767 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2653:

/* Line 1455 of yacc.c  */
#line 14769 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
    break;

  case 2654:

/* Line 1455 of yacc.c  */
#line 14774 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2655:

/* Line 1455 of yacc.c  */
#line 14776 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2656:

/* Line 1455 of yacc.c  */
#line 14778 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2657:

/* Line 1455 of yacc.c  */
#line 14783 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2659:

/* Line 1455 of yacc.c  */
#line 14800 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2661:

/* Line 1455 of yacc.c  */
#line 14806 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2662:

/* Line 1455 of yacc.c  */
#line 14811 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2663:

/* Line 1455 of yacc.c  */
#line 14818 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
          }
    break;

  case 2664:

/* Line 1455 of yacc.c  */
#line 14825 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            lex->create_view_select.str= const_cast<char *>((yylsp[(2) - (3)]).cpp.start);
            size_t len= (yylsp[(3) - (3)]).cpp.end - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
          }
    break;

  case 2665:

/* Line 1455 of yacc.c  */
#line 14843 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (Lex->current_select()->set_braces(0))
            {
              my_syntax_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              For statment as "CREATE VIEW v1 AS SELECT1 UNION SELECT2",
              parsing of Select query (SELECT1) is completed and UNION_CLAUSE
              is not yet parsed. So check for
              Lex->current_select()->master_unit()->first_select()->braces
              (as its done in "PT_select_init2::contextualize()) is not
              done here.
            */
          }
    break;

  case 2666:

/* Line 1455 of yacc.c  */
#line 14859 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].union_list) != NULL)
              CONTEXTUALIZE((yyvsp[(3) - (3)].union_list));
          }
    break;

  case 2667:

/* Line 1455 of yacc.c  */
#line 14864 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].node) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].node));
          }
    break;

  case 2668:

/* Line 1455 of yacc.c  */
#line 14871 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->set_braces(true);
          }
    break;

  case 2669:

/* Line 1455 of yacc.c  */
#line 14875 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Select))
              MYSQL_YYABORT;
          }
    break;

  case 2671:

/* Line 1455 of yacc.c  */
#line 14884 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 2672:

/* Line 1455 of yacc.c  */
#line 14888 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            CONTEXTUALIZE((yyvsp[(3) - (3)].select_part2));

            Lex->current_select()->table_list.push_front(&Lex->save_list);
          }
    break;

  case 2673:

/* Line 1455 of yacc.c  */
#line 14897 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2674:

/* Line 1455 of yacc.c  */
#line 14899 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2675:

/* Line 1455 of yacc.c  */
#line 14901 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2676:

/* Line 1455 of yacc.c  */
#line 14903 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2677:

/* Line 1455 of yacc.c  */
#line 14914 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
    break;

  case 2678:

/* Line 1455 of yacc.c  */
#line 14916 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
    break;

  case 2679:

/* Line 1455 of yacc.c  */
#line 14921 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name.str= NULL;
              (yyval.trg_characteristics).anchor_trigger_name.length= 0;
            }
    break;

  case 2680:

/* Line 1455 of yacc.c  */
#line 14928 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[(1) - (2)].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= (yyvsp[(2) - (2)].lex_str);
            }
    break;

  case 2681:

/* Line 1455 of yacc.c  */
#line 14945 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            lex->raw_trg_on_table_name_begin= (yylsp[(5) - (10)]).raw.start;
            lex->raw_trg_on_table_name_end= (yylsp[(7) - (10)]).raw.start;

            if ((yylsp[(10) - (10)]).is_empty())
            {
              /*
                @10.is_empty() is true when a clause PRECEDES/FOLLOWS is absent.
              */
              lex->trg_ordering_clause_begin= NULL;
              lex->trg_ordering_clause_end= NULL;
            }
            else
            {
              lex->trg_ordering_clause_begin= (yylsp[(10) - (10)]).cpp.start;
              lex->trg_ordering_clause_end= (yylsp[(10) - (10)]).cpp.end;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_TRIGGER, (yyvsp[(2) - (10)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[(3) - (10)].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[(4) - (10)].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[(10) - (10)].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[(10) - (10)].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[(1) - (10)]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[(6) - (10)]).cpp.start);
            lex->ident.length= (yylsp[(8) - (10)]).cpp.start - (yylsp[(6) - (10)]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[(2) - (10)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            sp->set_body_start(thd, (yylsp[(9) - (10)]).cpp.end);
          }
    break;

  case 2682:

/* Line 1455 of yacc.c  */
#line 14995 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (12)].table),
                                                    (LEX_STRING*) 0,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2683:

/* Line 1455 of yacc.c  */
#line 15030 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[(2) - (7)]).cpp.start;
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2684:

/* Line 1455 of yacc.c  */
#line 15048 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(2) - (6)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(2) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[(1) - (6)]).cpp.start;
            lex->udf.name = (yyvsp[(2) - (6)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(4) - (6)].num);
            lex->udf.dl=(yyvsp[(6) - (6)].lex_str).str;
          }
    break;

  case 2685:

/* Line 1455 of yacc.c  */
#line 15070 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->spname= (yyvsp[(2) - (3)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[(3) - (3)]).cpp.end);
          }
    break;

  case 2686:

/* Line 1455 of yacc.c  */
#line 15094 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(6) - (6)]).cpp.start);
          }
    break;

  case 2687:

/* Line 1455 of yacc.c  */
#line 15098 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* $9 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
            lex->gcol_info= 0;
          }
    break;

  case 2688:

/* Line 1455 of yacc.c  */
#line 15107 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(10) - (10)].num) == MYSQL_TYPE_STRING || (yyvsp[(10) - (10)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (fill_field_definition(YYTHD, sp,
                                      (enum enum_field_types) (yyvsp[(10) - (10)].num),
                                      &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2689:

/* Line 1455 of yacc.c  */
#line 15130 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2690:

/* Line 1455 of yacc.c  */
#line 15138 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 2691:

/* Line 1455 of yacc.c  */
#line 15197 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[(2) - (2)]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_PROCEDURE, (yyvsp[(2) - (2)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
    break;

  case 2692:

/* Line 1455 of yacc.c  */
#line 15217 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[(4) - (4)]).cpp.end);
          }
    break;

  case 2693:

/* Line 1455 of yacc.c  */
#line 15222 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(7) - (7)]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2694:

/* Line 1455 of yacc.c  */
#line 15230 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2695:

/* Line 1455 of yacc.c  */
#line 15238 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 2696:

/* Line 1455 of yacc.c  */
#line 15252 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_start((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2697:

/* Line 1455 of yacc.c  */
#line 15257 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_end((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2698:

/* Line 1455 of yacc.c  */
#line 15262 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_prepare((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2699:

/* Line 1455 of yacc.c  */
#line 15267 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_commit((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2700:

/* Line 1455 of yacc.c  */
#line 15272 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_rollback((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2701:

/* Line 1455 of yacc.c  */
#line 15277 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_xa_recover((yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 2702:

/* Line 1455 of yacc.c  */
#line 15284 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2703:

/* Line 1455 of yacc.c  */
#line 15285 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2704:

/* Line 1455 of yacc.c  */
#line 15289 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
    break;

  case 2705:

/* Line 1455 of yacc.c  */
#line 15298 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2706:

/* Line 1455 of yacc.c  */
#line 15308 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            // check for overwflow of xid format id 
            bool format_id_overflow_detected= ((yyvsp[(5) - (5)].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2707:

/* Line 1455 of yacc.c  */
#line 15325 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2708:

/* Line 1455 of yacc.c  */
#line 15326 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2709:

/* Line 1455 of yacc.c  */
#line 15330 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2710:

/* Line 1455 of yacc.c  */
#line 15331 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_JOIN;        }
    break;

  case 2711:

/* Line 1455 of yacc.c  */
#line 15332 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_RESUME;      }
    break;

  case 2712:

/* Line 1455 of yacc.c  */
#line 15336 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2713:

/* Line 1455 of yacc.c  */
#line 15337 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
    break;

  case 2714:

/* Line 1455 of yacc.c  */
#line 15342 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2715:

/* Line 1455 of yacc.c  */
#line 15344 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_SUSPEND;     }
    break;

  case 2716:

/* Line 1455 of yacc.c  */
#line 15346 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
    break;

  case 2717:

/* Line 1455 of yacc.c  */
#line 15351 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_install_plugin((yyvsp[(3) - (5)].lex_str), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 2718:

/* Line 1455 of yacc.c  */
#line 15360 "/export/home/pb2/build/sb_0-16729399-1444630353.38/mysql-5.7.9-release-export-8559369_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new Sql_cmd_uninstall_plugin((yyvsp[(3) - (3)].lex_str));
          }
    break;



/* Line 1455 of yacc.c  */
#line 42598 "/export/home/pb2/build/sb_0-16729399-1444630353.38/dist_GPL/sql/sql_yacc.cc"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, YYTHD, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, YYTHD, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, YYTHD);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined(yyoverflow) || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, YYTHD);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, YYTHD);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}



