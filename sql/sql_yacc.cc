/* A Bison parser, made by GNU Bison 2.7.  */

/* Bison implementation for Yacc-like parsers in C
   
      Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.7"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yylval          MYSQLlval
#define yychar          MYSQLchar
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs
#define yylloc          MYSQLlloc

/* Copy the first part of user declarations.  */
/* Line 371 of yacc.c  */
#line 31 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <limits>
#include <type_traits>                       // for std::remove_reference

#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/plugin.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/dd/info_schema/show.h"             // build_show_...
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/derror.h"
#include "sql/event_parse_data.h"
                                             // used in RESET_MASTER parsing check
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/log_event.h"
#include "sql/opt_explain_json.h"
#include "sql/opt_explain_traditional.h"
#include "sql/resourcegroups/resource_group_mgr.h" // resource_group_support
#include "sql/resourcegroups/resource_group_sql_cmd.h" // Sql_cmd_*_resource_group etc.
#include "sql/rpl_filter.h"
#include "sql/rpl_msr.h"       /* multisource replication */
#include "sql/rpl_slave.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/sp_rcontext.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance,
                                               // Sql_cmd_unlock_instance
#include "sql/sql_base.h"                        // find_temporary_table
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_partition.h"                    /* mem_alloc_error */
#include "sql/sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_select.h"                        // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_show_status.h"                 // build_show_session_status, ...
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger,
                                             // Sql_cmd_create_trigger
#include "sql/sql_truncate.h"                      // Sql_cmd_truncate_table

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize_() function call wrapper
*/
#define TMP_CONTEXTUALIZE(x)        \
  do                                \
  {                                 \
    Parse_context pc(YYTHD, Select);\
    if ((x)->contextualize_(&pc))   \
      MYSQL_YYABORT;                \
  } while(0)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static void MYSQLerror(YYLTYPE *, THD *thd, Parse_tree_root **, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->syntax_error("%s", s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}


/* Line 371 of yacc.c  */
#line 487 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/dist_GPL/sql/sql_yacc.cc"

# ifndef YY_NULL
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULL nullptr
#  else
#   define YY_NULL 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_EXPORT_HOME2_PB2_BUILD_SB_2_28121909_1523169989_5_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_EXPORT_HOME2_PB2_BUILD_SB_2_28121909_1523169989_5_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACCOUNT_SYM = 260,
     ACTION = 261,
     ADD = 262,
     ADDDATE_SYM = 263,
     AFTER_SYM = 264,
     AGAINST = 265,
     AGGREGATE_SYM = 266,
     ALGORITHM_SYM = 267,
     ALL = 268,
     ALTER = 269,
     ALWAYS_SYM = 270,
     OBSOLETE_TOKEN_271 = 271,
     ANALYZE_SYM = 272,
     AND_AND_SYM = 273,
     AND_SYM = 274,
     ANY_SYM = 275,
     AS = 276,
     ASC = 277,
     ASCII_SYM = 278,
     ASENSITIVE_SYM = 279,
     AT_SYM = 280,
     AUTOEXTEND_SIZE_SYM = 281,
     AUTO_INC = 282,
     AVG_ROW_LENGTH = 283,
     AVG_SYM = 284,
     BACKUP_SYM = 285,
     BEFORE_SYM = 286,
     BEGIN_SYM = 287,
     BETWEEN_SYM = 288,
     BIGINT_SYM = 289,
     BINARY_SYM = 290,
     BINLOG_SYM = 291,
     BIN_NUM = 292,
     BIT_AND = 293,
     BIT_OR = 294,
     BIT_SYM = 295,
     BIT_XOR = 296,
     BLOB_SYM = 297,
     BLOCK_SYM = 298,
     BOOLEAN_SYM = 299,
     BOOL_SYM = 300,
     BOTH = 301,
     BTREE_SYM = 302,
     BY = 303,
     BYTE_SYM = 304,
     CACHE_SYM = 305,
     CALL_SYM = 306,
     CASCADE = 307,
     CASCADED = 308,
     CASE_SYM = 309,
     CAST_SYM = 310,
     CATALOG_NAME_SYM = 311,
     CHAIN_SYM = 312,
     CHANGE = 313,
     CHANGED = 314,
     CHANNEL_SYM = 315,
     CHARSET = 316,
     CHAR_SYM = 317,
     CHECKSUM_SYM = 318,
     CHECK_SYM = 319,
     CIPHER_SYM = 320,
     CLASS_ORIGIN_SYM = 321,
     CLIENT_SYM = 322,
     CLOSE_SYM = 323,
     COALESCE = 324,
     CODE_SYM = 325,
     COLLATE_SYM = 326,
     COLLATION_SYM = 327,
     COLUMNS = 328,
     COLUMN_SYM = 329,
     COLUMN_FORMAT_SYM = 330,
     COLUMN_NAME_SYM = 331,
     COMMENT_SYM = 332,
     COMMITTED_SYM = 333,
     COMMIT_SYM = 334,
     COMPACT_SYM = 335,
     COMPLETION_SYM = 336,
     COMPRESSED_SYM = 337,
     COMPRESSION_SYM = 338,
     ENCRYPTION_SYM = 339,
     CONCURRENT = 340,
     CONDITION_SYM = 341,
     CONNECTION_SYM = 342,
     CONSISTENT_SYM = 343,
     CONSTRAINT = 344,
     CONSTRAINT_CATALOG_SYM = 345,
     CONSTRAINT_NAME_SYM = 346,
     CONSTRAINT_SCHEMA_SYM = 347,
     CONTAINS_SYM = 348,
     CONTEXT_SYM = 349,
     CONTINUE_SYM = 350,
     CONVERT_SYM = 351,
     COUNT_SYM = 352,
     CPU_SYM = 353,
     CREATE = 354,
     CROSS = 355,
     CUBE_SYM = 356,
     CURDATE = 357,
     CURRENT_SYM = 358,
     CURRENT_USER = 359,
     CURSOR_SYM = 360,
     CURSOR_NAME_SYM = 361,
     CURTIME = 362,
     DATABASE = 363,
     DATABASES = 364,
     DATAFILE_SYM = 365,
     DATA_SYM = 366,
     DATETIME_SYM = 367,
     DATE_ADD_INTERVAL = 368,
     DATE_SUB_INTERVAL = 369,
     DATE_SYM = 370,
     DAY_HOUR_SYM = 371,
     DAY_MICROSECOND_SYM = 372,
     DAY_MINUTE_SYM = 373,
     DAY_SECOND_SYM = 374,
     DAY_SYM = 375,
     DEALLOCATE_SYM = 376,
     DECIMAL_NUM = 377,
     DECIMAL_SYM = 378,
     DECLARE_SYM = 379,
     DEFAULT_SYM = 380,
     DEFAULT_AUTH_SYM = 381,
     DEFINER_SYM = 382,
     DELAYED_SYM = 383,
     DELAY_KEY_WRITE_SYM = 384,
     DELETE_SYM = 385,
     DESC = 386,
     DESCRIBE = 387,
     OBSOLETE_TOKEN_388 = 388,
     DETERMINISTIC_SYM = 389,
     DIAGNOSTICS_SYM = 390,
     DIRECTORY_SYM = 391,
     DISABLE_SYM = 392,
     DISCARD = 393,
     DISK_SYM = 394,
     DISTINCT = 395,
     DIV_SYM = 396,
     DOUBLE_SYM = 397,
     DO_SYM = 398,
     DROP = 399,
     DUAL_SYM = 400,
     DUMPFILE = 401,
     DUPLICATE_SYM = 402,
     DYNAMIC_SYM = 403,
     EACH_SYM = 404,
     ELSE = 405,
     ELSEIF_SYM = 406,
     ENABLE_SYM = 407,
     ENCLOSED = 408,
     END = 409,
     ENDS_SYM = 410,
     END_OF_INPUT = 411,
     ENGINES_SYM = 412,
     ENGINE_SYM = 413,
     ENUM_SYM = 414,
     EQ = 415,
     EQUAL_SYM = 416,
     ERROR_SYM = 417,
     ERRORS = 418,
     ESCAPED = 419,
     ESCAPE_SYM = 420,
     EVENTS_SYM = 421,
     EVENT_SYM = 422,
     EVERY_SYM = 423,
     EXCHANGE_SYM = 424,
     EXECUTE_SYM = 425,
     EXISTS = 426,
     EXIT_SYM = 427,
     EXPANSION_SYM = 428,
     EXPIRE_SYM = 429,
     EXPORT_SYM = 430,
     EXTENDED_SYM = 431,
     EXTENT_SIZE_SYM = 432,
     EXTRACT_SYM = 433,
     FALSE_SYM = 434,
     FAST_SYM = 435,
     FAULTS_SYM = 436,
     FETCH_SYM = 437,
     FILE_SYM = 438,
     FILE_BLOCK_SIZE_SYM = 439,
     FILTER_SYM = 440,
     FIRST_SYM = 441,
     FIXED_SYM = 442,
     FLOAT_NUM = 443,
     FLOAT_SYM = 444,
     FLUSH_SYM = 445,
     FOLLOWS_SYM = 446,
     FORCE_SYM = 447,
     FOREIGN = 448,
     FOR_SYM = 449,
     FORMAT_SYM = 450,
     FOUND_SYM = 451,
     FROM = 452,
     FULL = 453,
     FULLTEXT_SYM = 454,
     FUNCTION_SYM = 455,
     GE = 456,
     GENERAL = 457,
     GENERATED = 458,
     GROUP_REPLICATION = 459,
     GEOMETRYCOLLECTION_SYM = 460,
     GEOMETRY_SYM = 461,
     GET_FORMAT = 462,
     GET_SYM = 463,
     GLOBAL_SYM = 464,
     GRANT = 465,
     GRANTS = 466,
     GROUP_SYM = 467,
     GROUP_CONCAT_SYM = 468,
     GT_SYM = 469,
     HANDLER_SYM = 470,
     HASH_SYM = 471,
     HAVING = 472,
     HELP_SYM = 473,
     HEX_NUM = 474,
     HIGH_PRIORITY = 475,
     HOST_SYM = 476,
     HOSTS_SYM = 477,
     HOUR_MICROSECOND_SYM = 478,
     HOUR_MINUTE_SYM = 479,
     HOUR_SECOND_SYM = 480,
     HOUR_SYM = 481,
     IDENT = 482,
     IDENTIFIED_SYM = 483,
     IDENT_QUOTED = 484,
     IF = 485,
     IGNORE_SYM = 486,
     IGNORE_SERVER_IDS_SYM = 487,
     IMPORT = 488,
     INDEXES = 489,
     INDEX_SYM = 490,
     INFILE = 491,
     INITIAL_SIZE_SYM = 492,
     INNER_SYM = 493,
     INOUT_SYM = 494,
     INSENSITIVE_SYM = 495,
     INSERT_SYM = 496,
     INSERT_METHOD = 497,
     INSTANCE_SYM = 498,
     INSTALL_SYM = 499,
     INTERVAL_SYM = 500,
     INTO = 501,
     INT_SYM = 502,
     INVOKER_SYM = 503,
     IN_SYM = 504,
     IO_AFTER_GTIDS = 505,
     IO_BEFORE_GTIDS = 506,
     IO_SYM = 507,
     IPC_SYM = 508,
     IS = 509,
     ISOLATION = 510,
     ISSUER_SYM = 511,
     ITERATE_SYM = 512,
     JOIN_SYM = 513,
     JSON_SEPARATOR_SYM = 514,
     JSON_SYM = 515,
     KEYS = 516,
     KEY_BLOCK_SIZE = 517,
     KEY_SYM = 518,
     KILL_SYM = 519,
     LANGUAGE_SYM = 520,
     LAST_SYM = 521,
     LE = 522,
     LEADING = 523,
     LEAVES = 524,
     LEAVE_SYM = 525,
     LEFT = 526,
     LESS_SYM = 527,
     LEVEL_SYM = 528,
     LEX_HOSTNAME = 529,
     LIKE = 530,
     LIMIT = 531,
     LINEAR_SYM = 532,
     LINES = 533,
     LINESTRING_SYM = 534,
     LIST_SYM = 535,
     LOAD = 536,
     LOCAL_SYM = 537,
     LOCATOR_SYM = 538,
     LOCKS_SYM = 539,
     LOCK_SYM = 540,
     LOGFILE_SYM = 541,
     LOGS_SYM = 542,
     LONGBLOB_SYM = 543,
     LONGTEXT_SYM = 544,
     LONG_NUM = 545,
     LONG_SYM = 546,
     LOOP_SYM = 547,
     LOW_PRIORITY = 548,
     LT = 549,
     MASTER_AUTO_POSITION_SYM = 550,
     MASTER_BIND_SYM = 551,
     MASTER_CONNECT_RETRY_SYM = 552,
     MASTER_DELAY_SYM = 553,
     MASTER_HOST_SYM = 554,
     MASTER_LOG_FILE_SYM = 555,
     MASTER_LOG_POS_SYM = 556,
     MASTER_PASSWORD_SYM = 557,
     MASTER_PORT_SYM = 558,
     MASTER_RETRY_COUNT_SYM = 559,
     MASTER_SERVER_ID_SYM = 560,
     MASTER_SSL_CAPATH_SYM = 561,
     MASTER_TLS_VERSION_SYM = 562,
     MASTER_SSL_CA_SYM = 563,
     MASTER_SSL_CERT_SYM = 564,
     MASTER_SSL_CIPHER_SYM = 565,
     MASTER_SSL_CRL_SYM = 566,
     MASTER_SSL_CRLPATH_SYM = 567,
     MASTER_SSL_KEY_SYM = 568,
     MASTER_SSL_SYM = 569,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
     MASTER_SYM = 571,
     MASTER_USER_SYM = 572,
     MASTER_HEARTBEAT_PERIOD_SYM = 573,
     MATCH = 574,
     MAX_CONNECTIONS_PER_HOUR = 575,
     MAX_QUERIES_PER_HOUR = 576,
     MAX_ROWS = 577,
     MAX_SIZE_SYM = 578,
     MAX_SYM = 579,
     MAX_UPDATES_PER_HOUR = 580,
     MAX_USER_CONNECTIONS_SYM = 581,
     MAX_VALUE_SYM = 582,
     MEDIUMBLOB_SYM = 583,
     MEDIUMINT_SYM = 584,
     MEDIUMTEXT_SYM = 585,
     MEDIUM_SYM = 586,
     MEMORY_SYM = 587,
     MERGE_SYM = 588,
     MESSAGE_TEXT_SYM = 589,
     MICROSECOND_SYM = 590,
     MIGRATE_SYM = 591,
     MINUTE_MICROSECOND_SYM = 592,
     MINUTE_SECOND_SYM = 593,
     MINUTE_SYM = 594,
     MIN_ROWS = 595,
     MIN_SYM = 596,
     MODE_SYM = 597,
     MODIFIES_SYM = 598,
     MODIFY_SYM = 599,
     MOD_SYM = 600,
     MONTH_SYM = 601,
     MULTILINESTRING_SYM = 602,
     MULTIPOINT_SYM = 603,
     MULTIPOLYGON_SYM = 604,
     MUTEX_SYM = 605,
     MYSQL_ERRNO_SYM = 606,
     NAMES_SYM = 607,
     NAME_SYM = 608,
     NATIONAL_SYM = 609,
     NATURAL = 610,
     NCHAR_STRING = 611,
     NCHAR_SYM = 612,
     NDBCLUSTER_SYM = 613,
     NE = 614,
     NEG = 615,
     NEVER_SYM = 616,
     NEW_SYM = 617,
     NEXT_SYM = 618,
     NODEGROUP_SYM = 619,
     NONE_SYM = 620,
     NOT2_SYM = 621,
     NOT_SYM = 622,
     NOW_SYM = 623,
     NO_SYM = 624,
     NO_WAIT_SYM = 625,
     NO_WRITE_TO_BINLOG = 626,
     NULL_SYM = 627,
     NUM = 628,
     NUMBER_SYM = 629,
     NUMERIC_SYM = 630,
     NVARCHAR_SYM = 631,
     OFFSET_SYM = 632,
     ON_SYM = 633,
     ONE_SYM = 634,
     ONLY_SYM = 635,
     OPEN_SYM = 636,
     OPTIMIZE = 637,
     OPTIMIZER_COSTS_SYM = 638,
     OPTIONS_SYM = 639,
     OPTION = 640,
     OPTIONALLY = 641,
     OR2_SYM = 642,
     ORDER_SYM = 643,
     OR_OR_SYM = 644,
     OR_SYM = 645,
     OUTER = 646,
     OUTFILE = 647,
     OUT_SYM = 648,
     OWNER_SYM = 649,
     PACK_KEYS_SYM = 650,
     PAGE_SYM = 651,
     PARAM_MARKER = 652,
     PARSER_SYM = 653,
     OBSOLETE_TOKEN_654 = 654,
     PARTIAL = 655,
     PARTITION_SYM = 656,
     PARTITIONS_SYM = 657,
     PARTITIONING_SYM = 658,
     PASSWORD = 659,
     PHASE_SYM = 660,
     PLUGIN_DIR_SYM = 661,
     PLUGIN_SYM = 662,
     PLUGINS_SYM = 663,
     POINT_SYM = 664,
     POLYGON_SYM = 665,
     PORT_SYM = 666,
     POSITION_SYM = 667,
     PRECEDES_SYM = 668,
     PRECISION = 669,
     PREPARE_SYM = 670,
     PRESERVE_SYM = 671,
     PREV_SYM = 672,
     PRIMARY_SYM = 673,
     PRIVILEGES = 674,
     PROCEDURE_SYM = 675,
     PROCESS = 676,
     PROCESSLIST_SYM = 677,
     PROFILE_SYM = 678,
     PROFILES_SYM = 679,
     PROXY_SYM = 680,
     PURGE = 681,
     QUARTER_SYM = 682,
     QUERY_SYM = 683,
     QUICK = 684,
     RANGE_SYM = 685,
     READS_SYM = 686,
     READ_ONLY_SYM = 687,
     READ_SYM = 688,
     READ_WRITE_SYM = 689,
     REAL_SYM = 690,
     REBUILD_SYM = 691,
     RECOVER_SYM = 692,
     OBSOLETE_TOKEN_693 = 693,
     REDO_BUFFER_SIZE_SYM = 694,
     REDUNDANT_SYM = 695,
     REFERENCES = 696,
     REGEXP = 697,
     RELAY = 698,
     RELAYLOG_SYM = 699,
     RELAY_LOG_FILE_SYM = 700,
     RELAY_LOG_POS_SYM = 701,
     RELAY_THREAD = 702,
     RELEASE_SYM = 703,
     RELOAD = 704,
     REMOVE_SYM = 705,
     RENAME = 706,
     REORGANIZE_SYM = 707,
     REPAIR = 708,
     REPEATABLE_SYM = 709,
     REPEAT_SYM = 710,
     REPLACE_SYM = 711,
     REPLICATION = 712,
     REPLICATE_DO_DB = 713,
     REPLICATE_IGNORE_DB = 714,
     REPLICATE_DO_TABLE = 715,
     REPLICATE_IGNORE_TABLE = 716,
     REPLICATE_WILD_DO_TABLE = 717,
     REPLICATE_WILD_IGNORE_TABLE = 718,
     REPLICATE_REWRITE_DB = 719,
     REQUIRE_SYM = 720,
     RESET_SYM = 721,
     RESIGNAL_SYM = 722,
     RESOURCES = 723,
     RESTORE_SYM = 724,
     RESTRICT = 725,
     RESUME_SYM = 726,
     RETURNED_SQLSTATE_SYM = 727,
     RETURNS_SYM = 728,
     RETURN_SYM = 729,
     REVERSE_SYM = 730,
     REVOKE = 731,
     RIGHT = 732,
     ROLLBACK_SYM = 733,
     ROLLUP_SYM = 734,
     ROTATE_SYM = 735,
     ROUTINE_SYM = 736,
     ROWS_SYM = 737,
     ROW_FORMAT_SYM = 738,
     ROW_SYM = 739,
     ROW_COUNT_SYM = 740,
     RTREE_SYM = 741,
     SAVEPOINT_SYM = 742,
     SCHEDULE_SYM = 743,
     SCHEMA_NAME_SYM = 744,
     SECOND_MICROSECOND_SYM = 745,
     SECOND_SYM = 746,
     SECURITY_SYM = 747,
     SELECT_SYM = 748,
     SENSITIVE_SYM = 749,
     SEPARATOR_SYM = 750,
     SERIALIZABLE_SYM = 751,
     SERIAL_SYM = 752,
     SESSION_SYM = 753,
     SERVER_SYM = 754,
     SERVER_OPTIONS = 755,
     SET_SYM = 756,
     SET_VAR = 757,
     SHARE_SYM = 758,
     SHIFT_LEFT = 759,
     SHIFT_RIGHT = 760,
     SHOW = 761,
     SHUTDOWN = 762,
     SIGNAL_SYM = 763,
     SIGNED_SYM = 764,
     SIMPLE_SYM = 765,
     SLAVE = 766,
     SLOW = 767,
     SMALLINT_SYM = 768,
     SNAPSHOT_SYM = 769,
     SOCKET_SYM = 770,
     SONAME_SYM = 771,
     SOUNDS_SYM = 772,
     SOURCE_SYM = 773,
     SPATIAL_SYM = 774,
     SPECIFIC_SYM = 775,
     SQLEXCEPTION_SYM = 776,
     SQLSTATE_SYM = 777,
     SQLWARNING_SYM = 778,
     SQL_AFTER_GTIDS = 779,
     SQL_AFTER_MTS_GAPS = 780,
     SQL_BEFORE_GTIDS = 781,
     SQL_BIG_RESULT = 782,
     SQL_BUFFER_RESULT = 783,
     OBSOLETE_TOKEN_784 = 784,
     SQL_CALC_FOUND_ROWS = 785,
     SQL_NO_CACHE_SYM = 786,
     SQL_SMALL_RESULT = 787,
     SQL_SYM = 788,
     SQL_THREAD = 789,
     SSL_SYM = 790,
     STACKED_SYM = 791,
     STARTING = 792,
     STARTS_SYM = 793,
     START_SYM = 794,
     STATS_AUTO_RECALC_SYM = 795,
     STATS_PERSISTENT_SYM = 796,
     STATS_SAMPLE_PAGES_SYM = 797,
     STATUS_SYM = 798,
     STDDEV_SAMP_SYM = 799,
     STD_SYM = 800,
     STOP_SYM = 801,
     STORAGE_SYM = 802,
     STORED_SYM = 803,
     STRAIGHT_JOIN = 804,
     STRING_SYM = 805,
     SUBCLASS_ORIGIN_SYM = 806,
     SUBDATE_SYM = 807,
     SUBJECT_SYM = 808,
     SUBPARTITIONS_SYM = 809,
     SUBPARTITION_SYM = 810,
     SUBSTRING = 811,
     SUM_SYM = 812,
     SUPER_SYM = 813,
     SUSPEND_SYM = 814,
     SWAPS_SYM = 815,
     SWITCHES_SYM = 816,
     SYSDATE = 817,
     TABLES = 818,
     TABLESPACE_SYM = 819,
     OBSOLETE_TOKEN_820 = 820,
     TABLE_SYM = 821,
     TABLE_CHECKSUM_SYM = 822,
     TABLE_NAME_SYM = 823,
     TEMPORARY = 824,
     TEMPTABLE_SYM = 825,
     TERMINATED = 826,
     TEXT_STRING = 827,
     TEXT_SYM = 828,
     THAN_SYM = 829,
     THEN_SYM = 830,
     TIMESTAMP_SYM = 831,
     TIMESTAMP_ADD = 832,
     TIMESTAMP_DIFF = 833,
     TIME_SYM = 834,
     TINYBLOB_SYM = 835,
     TINYINT_SYM = 836,
     TINYTEXT_SYN = 837,
     TO_SYM = 838,
     TRAILING = 839,
     TRANSACTION_SYM = 840,
     TRIGGERS_SYM = 841,
     TRIGGER_SYM = 842,
     TRIM = 843,
     TRUE_SYM = 844,
     TRUNCATE_SYM = 845,
     TYPES_SYM = 846,
     TYPE_SYM = 847,
     UDF_RETURNS_SYM = 848,
     ULONGLONG_NUM = 849,
     UNCOMMITTED_SYM = 850,
     UNDEFINED_SYM = 851,
     UNDERSCORE_CHARSET = 852,
     UNDOFILE_SYM = 853,
     UNDO_BUFFER_SIZE_SYM = 854,
     UNDO_SYM = 855,
     UNICODE_SYM = 856,
     UNINSTALL_SYM = 857,
     UNION_SYM = 858,
     UNIQUE_SYM = 859,
     UNKNOWN_SYM = 860,
     UNLOCK_SYM = 861,
     UNSIGNED_SYM = 862,
     UNTIL_SYM = 863,
     UPDATE_SYM = 864,
     UPGRADE_SYM = 865,
     USAGE = 866,
     USER = 867,
     USE_FRM = 868,
     USE_SYM = 869,
     USING = 870,
     UTC_DATE_SYM = 871,
     UTC_TIMESTAMP_SYM = 872,
     UTC_TIME_SYM = 873,
     VALIDATION_SYM = 874,
     VALUES = 875,
     VALUE_SYM = 876,
     VARBINARY_SYM = 877,
     VARCHAR_SYM = 878,
     VARIABLES = 879,
     VARIANCE_SYM = 880,
     VARYING = 881,
     VAR_SAMP_SYM = 882,
     VIEW_SYM = 883,
     VIRTUAL_SYM = 884,
     WAIT_SYM = 885,
     WARNINGS = 886,
     WEEK_SYM = 887,
     WEIGHT_STRING_SYM = 888,
     WHEN_SYM = 889,
     WHERE = 890,
     WHILE_SYM = 891,
     WITH = 892,
     OBSOLETE_TOKEN_893 = 893,
     WITH_ROLLUP_SYM = 894,
     WITHOUT_SYM = 895,
     WORK_SYM = 896,
     WRAPPER_SYM = 897,
     WRITE_SYM = 898,
     X509_SYM = 899,
     XA_SYM = 900,
     XID_SYM = 901,
     XML_SYM = 902,
     XOR = 903,
     YEAR_MONTH_SYM = 904,
     YEAR_SYM = 905,
     ZEROFILL_SYM = 906,
     JSON_UNQUOTED_SEPARATOR_SYM = 907,
     PERSIST_SYM = 908,
     ROLE_SYM = 909,
     ADMIN_SYM = 910,
     INVISIBLE_SYM = 911,
     VISIBLE_SYM = 912,
     EXCEPT_SYM = 913,
     COMPONENT_SYM = 914,
     RECURSIVE_SYM = 915,
     GRAMMAR_SELECTOR_EXPR = 916,
     GRAMMAR_SELECTOR_GCOL = 917,
     GRAMMAR_SELECTOR_PART = 918,
     GRAMMAR_SELECTOR_CTE = 919,
     JSON_OBJECTAGG = 920,
     JSON_ARRAYAGG = 921,
     OF_SYM = 922,
     SKIP_SYM = 923,
     LOCKED_SYM = 924,
     NOWAIT_SYM = 925,
     GROUPING_SYM = 926,
     PERSIST_ONLY_SYM = 927,
     HISTOGRAM_SYM = 928,
     BUCKETS_SYM = 929,
     REMOTE_SYM = 930,
     CLONE_SYM = 931,
     CUME_DIST_SYM = 932,
     DENSE_RANK_SYM = 933,
     EXCLUDE_SYM = 934,
     FIRST_VALUE_SYM = 935,
     FOLLOWING_SYM = 936,
     GROUPS_SYM = 937,
     LAG_SYM = 938,
     LAST_VALUE_SYM = 939,
     LEAD_SYM = 940,
     NTH_VALUE_SYM = 941,
     NTILE_SYM = 942,
     NULLS_SYM = 943,
     OTHERS_SYM = 944,
     OVER_SYM = 945,
     PERCENT_RANK_SYM = 946,
     PRECEDING_SYM = 947,
     RANK_SYM = 948,
     RESPECT_SYM = 949,
     ROW_NUMBER_SYM = 950,
     TIES_SYM = 951,
     UNBOUNDED_SYM = 952,
     WINDOW_SYM = 953,
     EMPTY_SYM = 954,
     JSON_TABLE_SYM = 955,
     NESTED_SYM = 956,
     ORDINALITY_SYM = 957,
     PATH_SYM = 958,
     HISTORY_SYM = 959,
     REUSE_SYM = 960,
     SRID_SYM = 961,
     THREAD_PRIORITY_SYM = 962,
     RESOURCE_SYM = 963,
     SYSTEM_SYM = 964,
     VCPU_SYM = 965,
     MASTER_PUBLIC_KEY_PATH_SYM = 966,
     GET_MASTER_PUBLIC_KEY_SYM = 967,
     RESTART_SYM = 968,
     DEFINITION_SYM = 969,
     DESCRIPTION_SYM = 970,
     ORGANIZATION_SYM = 971,
     REFERENCE_SYM = 972,
     CONDITIONLESS_JOIN = 973,
     SUBQUERY_AS_EXPR = 974,
     EMPTY_FROM_CLAUSE = 975
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND 293
#define BIT_OR 294
#define BIT_SYM 295
#define BIT_XOR 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define LOCATOR_SYM 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define SERVER_OPTIONS 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define UDF_RETURNS_SYM 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define REMOTE_SYM 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define CONDITIONLESS_JOIN 973
#define SUBQUERY_AS_EXPR 974
#define EMPTY_FROM_CLAUSE 975



#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED

# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (void *YYPARSE_PARAM);
#else
int MYSQLparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);
#else
int MYSQLparse ();
#endif
#endif /* ! YYPARSE_PARAM */

#endif /* !YY_MYSQL_EXPORT_HOME2_PB2_BUILD_SB_2_28121909_1523169989_5_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

/* Line 390 of yacc.c  */
#line 2004 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/dist_GPL/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(N) (N)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (YYID (0))
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  940
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   75543

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  740
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  874
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2808
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4925

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   975

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   737,     2,     2,     2,   725,   720,     2,
     729,   730,   723,   722,   734,   721,   735,   724,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   736,   732,
       2,     2,     2,     2,   733,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   726,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   738,   719,   739,   727,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   728,   731
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    13,    20,    24,    26,    27,
      32,    35,    36,    38,    40,    42,    44,    46,    48,    50,
      52,    54,    56,    58,    60,    62,    64,    66,    68,    70,
      72,    74,    76,    78,    80,    82,    84,    86,    88,    90,
      92,    94,    96,    98,   100,   102,   104,   106,   108,   110,
     112,   114,   116,   118,   120,   122,   124,   126,   128,   130,
     132,   134,   136,   138,   140,   142,   144,   146,   148,   150,
     152,   154,   156,   158,   160,   162,   164,   166,   168,   170,
     172,   174,   176,   178,   180,   182,   184,   186,   188,   190,
     192,   194,   196,   198,   200,   202,   204,   206,   208,   210,
     212,   214,   216,   218,   220,   224,   226,   228,   233,   235,
     238,   239,   244,   245,   248,   252,   254,   257,   258,   262,
     263,   270,   271,   278,   280,   284,   288,   292,   296,   300,
     304,   308,   312,   315,   319,   321,   325,   327,   330,   334,
     340,   348,   351,   355,   357,   361,   365,   368,   372,   374,
     378,   380,   382,   386,   390,   394,   398,   402,   406,   410,
     414,   418,   422,   426,   430,   434,   438,   442,   446,   450,
     454,   458,   462,   466,   470,   476,   480,   482,   483,   485,
     489,   491,   495,   499,   503,   507,   508,   512,   522,   529,
     537,   547,   552,   563,   564,   571,   574,   583,   591,   599,
     611,   620,   628,   629,   633,   637,   644,   648,   649,   653,
     665,   677,   689,   691,   695,   698,   701,   704,   707,   710,
     713,   716,   717,   730,   731,   738,   741,   742,   744,   748,
     750,   751,   754,   755,   758,   759,   761,   765,   770,   771,
     774,   775,   778,   780,   782,   784,   786,   788,   790,   792,
     794,   796,   798,   800,   802,   804,   808,   810,   811,   814,
     815,   818,   821,   824,   827,   830,   834,   838,   840,   842,
     844,   847,   851,   855,   859,   860,   864,   865,   867,   871,
     873,   877,   878,   880,   884,   886,   891,   892,   894,   896,
     898,   899,   903,   906,   910,   911,   915,   921,   927,   928,
     936,   937,   944,   946,   948,   950,   954,   956,   958,   960,
     964,   965,   967,   969,   971,   973,   976,   978,   982,   984,
     986,   987,   989,   990,   993,   997,  1003,  1005,  1007,  1009,
    1011,  1013,  1015,  1017,  1019,  1021,  1023,  1025,  1027,  1029,
    1031,  1033,  1037,  1042,  1043,  1045,  1047,  1049,  1053,  1055,
    1059,  1063,  1065,  1068,  1070,  1072,  1074,  1076,  1080,  1084,
    1086,  1088,  1090,  1092,  1094,  1096,  1098,  1100,  1102,  1104,
    1106,  1108,  1110,  1112,  1116,  1117,  1120,  1122,  1124,  1126,
    1128,  1130,  1132,  1134,  1136,  1138,  1140,  1142,  1144,  1146,
    1147,  1153,  1154,  1157,  1158,  1162,  1163,  1166,  1169,  1172,
    1175,  1176,  1183,  1186,  1187,  1190,  1192,  1194,  1198,  1199,
    1200,  1201,  1209,  1210,  1213,  1216,  1218,  1220,  1221,  1222,
    1231,  1232,  1239,  1241,  1244,  1246,  1249,  1250,  1251,  1258,
    1259,  1260,  1267,  1268,  1271,  1272,  1278,  1279,  1281,  1282,
    1288,  1289,  1292,  1293,  1299,  1304,  1305,  1306,  1315,  1316,
    1317,  1326,  1328,  1330,  1332,  1334,  1336,  1337,  1342,  1343,
    1345,  1347,  1351,  1353,  1355,  1357,  1359,  1361,  1363,  1365,
    1367,  1369,  1370,  1372,  1374,  1378,  1380,  1382,  1384,  1386,
    1388,  1389,  1391,  1393,  1397,  1399,  1401,  1403,  1405,  1407,
    1409,  1411,  1412,  1414,  1416,  1420,  1422,  1424,  1426,  1429,
    1432,  1436,  1440,  1444,  1448,  1452,  1456,  1460,  1464,  1469,
    1473,  1475,  1477,  1479,  1481,  1484,  1486,  1489,  1491,  1492,
    1495,  1497,  1500,  1502,  1509,  1516,  1522,  1527,  1533,  1538,
    1544,  1545,  1547,  1548,  1552,  1553,  1556,  1557,  1566,  1576,
    1577,  1579,  1581,  1585,  1586,  1589,  1590,  1594,  1596,  1600,
    1606,  1607,  1612,  1616,  1618,  1620,  1622,  1626,  1628,  1632,
    1633,  1638,  1640,  1644,  1646,  1648,  1649,  1653,  1655,  1659,
    1663,  1664,  1666,  1669,  1671,  1675,  1680,  1684,  1688,  1692,
    1697,  1702,  1706,  1707,  1709,  1711,  1714,  1716,  1718,  1719,
    1723,  1725,  1728,  1730,  1734,  1735,  1737,  1741,  1745,  1749,
    1753,  1757,  1761,  1765,  1769,  1773,  1777,  1781,  1785,  1789,
    1793,  1797,  1801,  1805,  1809,  1815,  1817,  1819,  1823,  1828,
    1833,  1837,  1840,  1843,  1847,  1851,  1853,  1855,  1860,  1865,
    1867,  1869,  1871,  1873,  1875,  1877,  1879,  1881,  1883,  1885,
    1887,  1889,  1891,  1893,  1897,  1899,  1901,  1905,  1906,  1908,
    1910,  1917,  1925,  1933,  1941,  1950,  1953,  1958,  1959,  1962,
    1965,  1975,  1976,  1979,  1980,  1982,  1984,  1988,  1992,  1996,
    1998,  2001,  2003,  2005,  2009,  2012,  2016,  2019,  2022,  2024,
    2028,  2032,  2035,  2039,  2041,  2044,  2047,  2050,  2052,  2055,
    2057,  2059,  2061,  2064,  2068,  2071,  2075,  2078,  2081,  2087,
    2093,  2096,  2098,  2100,  2102,  2104,  2106,  2108,  2110,  2112,
    2114,  2116,  2118,  2121,  2124,  2126,  2129,  2131,  2134,  2138,
    2141,  2143,  2145,  2147,  2149,  2151,  2153,  2156,  2157,  2159,
    2161,  2163,  2165,  2167,  2168,  2170,  2172,  2178,  2179,  2183,
    2184,  2187,  2191,  2192,  2194,  2197,  2199,  2201,  2203,  2205,
    2209,  2213,  2217,  2221,  2222,  2224,  2225,  2227,  2228,  2230,
    2233,  2235,  2237,  2240,  2243,  2247,  2249,  2253,  2256,  2258,
    2261,  2264,  2267,  2270,  2273,  2276,  2278,  2280,  2282,  2284,
    2286,  2288,  2291,  2293,  2295,  2298,  2300,  2302,  2304,  2305,
    2308,  2310,  2312,  2314,  2316,  2318,  2319,  2322,  2323,  2325,
    2327,  2330,  2333,  2335,  2338,  2341,  2342,  2344,  2346,  2348,
    2352,  2354,  2358,  2359,  2361,  2362,  2367,  2368,  2370,  2376,
    2377,  2381,  2385,  2387,  2388,  2391,  2394,  2397,  2398,  2402,
    2406,  2413,  2420,  2422,  2424,  2427,  2430,  2433,  2436,  2439,
    2441,  2443,  2444,  2446,  2448,  2450,  2452,  2453,  2455,  2456,
    2458,  2460,  2463,  2465,  2469,  2470,  2472,  2474,  2477,  2479,
    2480,  2482,  2484,  2487,  2489,  2491,  2495,  2498,  2500,  2502,
    2506,  2510,  2513,  2516,  2518,  2520,  2522,  2524,  2526,  2530,
    2532,  2535,  2541,  2542,  2544,  2545,  2548,  2550,  2554,  2559,
    2564,  2565,  2571,  2572,  2578,  2579,  2585,  2586,  2592,  2593,
    2598,  2599,  2610,  2618,  2625,  2632,  2639,  2647,  2653,  2659,
    2665,  2671,  2677,  2686,  2690,  2691,  2693,  2695,  2698,  2701,
    2704,  2707,  2713,  2717,  2721,  2725,  2729,  2735,  2740,  2741,
    2744,  2747,  2749,  2752,  2755,  2758,  2761,  2765,  2766,  2770,
    2772,  2777,  2778,  2782,  2783,  2786,  2787,  2789,  2791,  2794,
    2796,  2800,  2802,  2805,  2806,  2808,  2810,  2814,  2817,  2820,
    2824,  2831,  2837,  2841,  2846,  2851,  2856,  2861,  2867,  2872,
    2876,  2880,  2889,  2897,  2902,  2907,  2908,  2910,  2913,  2916,
    2918,  2920,  2922,  2926,  2930,  2932,  2936,  2938,  2942,  2949,
    2955,  2958,  2965,  2971,  2976,  2981,  2985,  2989,  2992,  2995,
    3002,  3008,  3013,  3017,  3023,  3029,  3035,  3037,  3041,  3043,
    3045,  3047,  3048,  3050,  3052,  3055,  3058,  3062,  3064,  3066,
    3070,  3072,  3074,  3075,  3077,  3078,  3080,  3081,  3083,  3085,
    3086,  3089,  3091,  3092,  3094,  3096,  3098,  3101,  3104,  3107,
    3112,  3116,  3117,  3122,  3126,  3127,  3129,  3131,  3135,  3139,
    3142,  3145,  3150,  3151,  3155,  3156,  3160,  3161,  3165,  3166,
    3170,  3171,  3173,  3175,  3179,  3181,  3183,  3184,  3187,  3189,
    3193,  3197,  3201,  3203,  3208,  3209,  3211,  3213,  3219,  3220,
    3222,  3224,  3227,  3229,  3231,  3233,  3239,  3240,  3244,  3245,
    3251,  3256,  3259,  3264,  3265,  3267,  3269,  3272,  3274,  3276,
    3278,  3280,  3282,  3285,  3290,  3291,  3293,  3295,  3296,  3301,
    3305,  3309,  3315,  3317,  3321,  3325,  3331,  3339,  3341,  3345,
    3348,  3350,  3352,  3361,  3367,  3369,  3373,  3377,  3382,  3383,
    3388,  3389,  3392,  3394,  3396,  3398,  3402,  3405,  3410,  3416,
    3421,  3427,  3431,  3436,  3440,  3442,  3447,  3452,  3457,  3462,
    3466,  3470,  3472,  3482,  3491,  3492,  3494,  3497,  3499,  3501,
    3503,  3507,  3508,  3510,  3513,  3515,  3517,  3519,  3520,  3522,
    3525,  3527,  3531,  3536,  3541,  3543,  3545,  3548,  3549,  3551,
    3554,  3556,  3560,  3562,  3564,  3566,  3569,  3570,  3573,  3576,
    3578,  3580,  3581,  3584,  3588,  3592,  3596,  3599,  3603,  3608,
    3612,  3617,  3621,  3626,  3628,  3632,  3637,  3641,  3646,  3648,
    3652,  3657,  3663,  3671,  3678,  3687,  3693,  3700,  3705,  3710,
    3716,  3720,  3725,  3727,  3731,  3735,  3739,  3743,  3747,  3751,
    3757,  3763,  3767,  3771,  3775,  3779,  3783,  3787,  3789,  3791,
    3793,  3795,  3797,  3799,  3801,  3803,  3805,  3807,  3809,  3811,
    3813,  3815,  3817,  3819,  3821,  3823,  3825,  3827,  3829,  3831,
    3833,  3837,  3839,  3841,  3843,  3845,  3847,  3851,  3854,  3857,
    3860,  3863,  3865,  3869,  3875,  3882,  3885,  3890,  3898,  3901,
    3908,  3914,  3921,  3928,  3933,  3938,  3944,  3948,  3952,  3957,
    3964,  3967,  3972,  3977,  3982,  3993,  4000,  4009,  4016,  4021,
    4026,  4033,  4038,  4043,  4048,  4055,  4060,  4068,  4076,  4084,
    4091,  4098,  4105,  4112,  4116,  4121,  4128,  4137,  4140,  4143,
    4152,  4161,  4168,  4175,  4177,  4184,  4191,  4200,  4209,  4216,
    4225,  4232,  4235,  4244,  4253,  4256,  4259,  4262,  4267,  4272,
    4277,  4282,  4286,  4295,  4302,  4311,  4316,  4323,  4328,  4335,
    4344,  4349,  4353,  4360,  4365,  4372,  4377,  4385,  4393,  4404,
    4406,  4411,  4416,  4421,  4426,  4431,  4438,  4443,  4448,  4455,
    4458,  4462,  4463,  4468,  4469,  4473,  4474,  4476,  4478,  4482,
    4485,  4487,  4489,  4495,  4502,  4508,  4514,  4520,  4528,  4534,
    4541,  4547,  4554,  4560,  4567,  4573,  4580,  4586,  4592,  4598,
    4604,  4610,  4617,  4626,  4631,  4636,  4641,  4646,  4651,  4657,
    4665,  4673,  4680,  4687,  4697,  4698,  4702,  4706,  4707,  4710,
    4711,  4714,  4717,  4718,  4721,  4724,  4725,  4727,  4730,  4732,
    4734,  4736,  4740,  4745,  4746,  4748,  4749,  4753,  4754,  4758,
    4759,  4763,  4765,  4767,  4770,  4773,  4776,  4781,  4784,  4789,
    4791,  4794,  4797,  4800,  4805,  4806,  4810,  4813,  4816,  4820,
    4822,  4824,  4826,  4831,  4834,  4838,  4840,  4845,  4846,  4848,
    4849,  4852,  4853,  4857,  4861,  4863,  4866,  4869,  4873,  4876,
    4878,  4881,  4883,  4886,  4888,  4891,  4894,  4897,  4899,  4900,
    4902,  4904,  4908,  4910,  4914,  4916,  4920,  4921,  4923,  4924,
    4927,  4932,  4938,  4940,  4942,  4947,  4949,  4951,  4957,  4965,
    4971,  4979,  4983,  4987,  4991,  4996,  5001,  5003,  5006,  5009,
    5011,  5015,  5019,  5020,  5022,  5023,  5025,  5026,  5028,  5033,
    5035,  5037,  5039,  5041,  5043,  5045,  5049,  5055,  5059,  5063,
    5068,  5072,  5076,  5080,  5089,  5094,  5096,  5100,  5104,  5111,
    5116,  5117,  5119,  5120,  5122,  5124,  5127,  5130,  5134,  5138,
    5140,  5142,  5145,  5146,  5149,  5153,  5157,  5159,  5161,  5168,
    5175,  5177,  5180,  5181,  5183,  5185,  5186,  5188,  5190,  5192,
    5194,  5198,  5200,  5202,  5206,  5208,  5210,  5212,  5214,  5216,
    5218,  5220,  5222,  5224,  5226,  5228,  5230,  5232,  5234,  5236,
    5238,  5240,  5242,  5244,  5246,  5248,  5250,  5252,  5254,  5256,
    5257,  5259,  5261,  5262,  5265,  5266,  5268,  5270,  5271,  5274,
    5275,  5278,  5281,  5285,  5289,  5291,  5296,  5297,  5301,  5303,
    5307,  5308,  5311,  5313,  5317,  5321,  5324,  5325,  5326,  5331,
    5335,  5337,  5338,  5340,  5344,  5346,  5349,  5350,  5352,  5356,
    5360,  5362,  5363,  5365,  5367,  5368,  5370,  5373,  5375,  5379,
    5383,  5385,  5387,  5389,  5391,  5393,  5394,  5397,  5399,  5401,
    5403,  5405,  5407,  5409,  5411,  5413,  5415,  5417,  5419,  5421,
    5423,  5425,  5427,  5429,  5431,  5433,  5435,  5437,  5439,  5441,
    5443,  5447,  5449,  5452,  5454,  5457,  5463,  5466,  5468,  5472,
    5473,  5480,  5487,  5492,  5499,  5504,  5510,  5515,  5520,  5526,
    5531,  5536,  5541,  5547,  5552,  5559,  5564,  5566,  5570,  5572,
    5576,  5577,  5580,  5581,  5583,  5584,  5586,  5588,  5592,  5594,
    5596,  5605,  5615,  5624,  5631,  5639,  5646,  5647,  5649,  5651,
    5653,  5655,  5657,  5658,  5660,  5662,  5666,  5671,  5673,  5677,
    5682,  5686,  5688,  5691,  5693,  5695,  5697,  5699,  5703,  5705,
    5707,  5709,  5710,  5712,  5716,  5717,  5719,  5723,  5725,  5727,
    5729,  5730,  5736,  5747,  5748,  5750,  5754,  5756,  5760,  5761,
    5763,  5773,  5781,  5790,  5791,  5794,  5795,  5798,  5800,  5802,
    5804,  5808,  5809,  5811,  5812,  5814,  5816,  5820,  5822,  5824,
    5827,  5830,  5833,  5835,  5837,  5839,  5841,  5842,  5846,  5847,
    5851,  5854,  5859,  5864,  5868,  5873,  5878,  5880,  5884,  5888,
    5895,  5898,  5901,  5902,  5909,  5910,  5918,  5925,  5928,  5934,
    5940,  5943,  5946,  5948,  5953,  5957,  5960,  5964,  5967,  5970,
    5972,  5974,  5978,  5984,  5989,  5993,  5997,  6000,  6004,  6008,
    6012,  6016,  6020,  6024,  6028,  6032,  6036,  6040,  6042,  6044,
    6046,  6048,  6050,  6051,  6053,  6054,  6057,  6058,  6060,  6061,
    6063,  6064,  6066,  6068,  6071,  6073,  6075,  6076,  6079,  6080,
    6083,  6084,  6087,  6090,  6091,  6094,  6097,  6101,  6105,  6107,
    6109,  6111,  6113,  6115,  6119,  6121,  6123,  6124,  6128,  6129,
    6131,  6133,  6134,  6139,  6140,  6145,  6147,  6148,  6152,  6153,
    6157,  6161,  6163,  6166,  6169,  6172,  6175,  6178,  6182,  6184,
    6186,  6188,  6190,  6192,  6194,  6195,  6197,  6198,  6202,  6206,
    6210,  6212,  6213,  6216,  6217,  6222,  6223,  6227,  6228,  6230,
    6231,  6234,  6235,  6239,  6243,  6246,  6249,  6253,  6254,  6256,
    6258,  6261,  6280,  6282,  6284,  6285,  6287,  6288,  6290,  6292,
    6293,  6295,  6297,  6299,  6300,  6303,  6306,  6308,  6312,  6317,
    6321,  6325,  6326,  6329,  6332,  6334,  6338,  6342,  6343,  6348,
    6349,  6353,  6355,  6357,  6358,  6362,  6365,  6369,  6371,  6373,
    6376,  6377,  6380,  6384,  6386,  6390,  6392,  6394,  6397,  6400,
    6402,  6404,  6406,  6408,  6410,  6413,  6416,  6418,  6420,  6422,
    6424,  6426,  6428,  6430,  6432,  6435,  6438,  6440,  6442,  6444,
    6446,  6448,  6451,  6454,  6457,  6459,  6461,  6465,  6471,  6474,
    6476,  6478,  6480,  6482,  6486,  6492,  6494,  6498,  6501,  6506,
    6508,  6510,  6512,  6514,  6516,  6518,  6520,  6522,  6524,  6526,
    6528,  6530,  6532,  6534,  6536,  6538,  6540,  6542,  6544,  6546,
    6550,  6553,  6555,  6559,  6561,  6563,  6565,  6567,  6569,  6571,
    6573,  6575,  6577,  6579,  6581,  6583,  6585,  6587,  6589,  6591,
    6593,  6595,  6597,  6599,  6601,  6603,  6605,  6607,  6609,  6611,
    6613,  6615,  6617,  6619,  6621,  6623,  6625,  6627,  6629,  6631,
    6633,  6635,  6637,  6639,  6641,  6643,  6645,  6647,  6649,  6651,
    6653,  6655,  6657,  6659,  6661,  6663,  6665,  6667,  6669,  6671,
    6673,  6675,  6677,  6679,  6681,  6683,  6685,  6687,  6689,  6691,
    6693,  6695,  6697,  6699,  6701,  6703,  6705,  6707,  6709,  6711,
    6713,  6715,  6717,  6719,  6721,  6723,  6725,  6727,  6729,  6731,
    6733,  6735,  6737,  6739,  6741,  6743,  6745,  6747,  6749,  6751,
    6753,  6755,  6757,  6759,  6761,  6763,  6765,  6767,  6769,  6771,
    6773,  6775,  6777,  6779,  6781,  6783,  6785,  6787,  6789,  6791,
    6793,  6795,  6797,  6799,  6801,  6803,  6805,  6807,  6809,  6811,
    6813,  6815,  6817,  6819,  6821,  6823,  6825,  6827,  6829,  6831,
    6833,  6835,  6837,  6839,  6841,  6843,  6845,  6847,  6849,  6851,
    6853,  6855,  6857,  6859,  6861,  6863,  6865,  6867,  6869,  6871,
    6873,  6875,  6877,  6879,  6881,  6883,  6885,  6887,  6889,  6891,
    6893,  6895,  6897,  6899,  6901,  6903,  6905,  6907,  6909,  6911,
    6913,  6915,  6917,  6919,  6921,  6923,  6925,  6927,  6929,  6931,
    6933,  6935,  6937,  6939,  6941,  6943,  6945,  6947,  6949,  6951,
    6953,  6955,  6957,  6959,  6961,  6963,  6965,  6967,  6969,  6971,
    6973,  6975,  6977,  6979,  6981,  6983,  6985,  6987,  6989,  6991,
    6993,  6995,  6997,  6999,  7001,  7003,  7005,  7007,  7009,  7011,
    7013,  7015,  7017,  7019,  7021,  7023,  7025,  7027,  7029,  7031,
    7033,  7035,  7037,  7039,  7041,  7043,  7045,  7047,  7049,  7051,
    7053,  7055,  7057,  7059,  7061,  7063,  7065,  7067,  7069,  7071,
    7073,  7075,  7077,  7079,  7081,  7083,  7085,  7087,  7089,  7091,
    7093,  7095,  7097,  7099,  7101,  7103,  7105,  7107,  7109,  7111,
    7113,  7115,  7117,  7119,  7121,  7123,  7125,  7127,  7129,  7131,
    7133,  7135,  7137,  7139,  7141,  7143,  7145,  7147,  7149,  7151,
    7153,  7155,  7157,  7159,  7161,  7163,  7165,  7167,  7169,  7171,
    7173,  7175,  7177,  7179,  7181,  7183,  7185,  7187,  7189,  7191,
    7193,  7195,  7197,  7199,  7201,  7203,  7205,  7207,  7209,  7211,
    7213,  7215,  7217,  7219,  7221,  7223,  7225,  7227,  7229,  7231,
    7233,  7235,  7237,  7239,  7241,  7243,  7245,  7247,  7249,  7251,
    7253,  7255,  7257,  7259,  7261,  7263,  7265,  7267,  7269,  7271,
    7273,  7275,  7277,  7279,  7281,  7283,  7285,  7287,  7289,  7291,
    7293,  7295,  7297,  7299,  7301,  7303,  7305,  7307,  7309,  7311,
    7313,  7315,  7317,  7319,  7321,  7323,  7325,  7327,  7329,  7331,
    7333,  7335,  7337,  7339,  7341,  7343,  7345,  7347,  7349,  7351,
    7353,  7355,  7357,  7359,  7361,  7363,  7365,  7367,  7369,  7371,
    7373,  7376,  7379,  7382,  7385,  7389,  7395,  7399,  7403,  7407,
    7414,  7421,  7428,  7433,  7434,  7437,  7442,  7449,  7451,  7455,
    7457,  7460,  7463,  7464,  7467,  7469,  7473,  7476,  7478,  7480,
    7482,  7484,  7486,  7488,  7489,  7491,  7493,  7495,  7496,  7499,
    7502,  7505,  7506,  7509,  7512,  7515,  7518,  7521,  7525,  7529,
    7534,  7541,  7544,  7548,  7552,  7555,  7557,  7561,  7565,  7568,
    7571,  7573,  7574,  7577,  7581,  7582,  7585,  7588,  7591,  7594,
    7597,  7600,  7602,  7604,  7606,  7608,  7610,  7612,  7614,  7616,
    7618,  7619,  7624,  7629,  7631,  7633,  7635,  7639,  7643,  7645,
    7647,  7650,  7653,  7654,  7658,  7661,  7663,  7665,  7669,  7674,
    7679,  7683,  7690,  7698,  7709,  7711,  7713,  7715,  7717,  7719,
    7721,  7723,  7725,  7727,  7729,  7731,  7736,  7744,  7745,  7755,
    7764,  7771,  7777,  7786,  7787,  7798,  7806,  7807,  7809,  7811,
    7813,  7814,  7816,  7818,  7822,  7825,  7829,  7832,  7835,  7838,
    7841,  7843,  7845,  7847,  7849,  7851,  7853,  7855,  7857,  7859,
    7861,  7863,  7866,  7869,  7871,  7875,  7878,  7881,  7884,  7887,
    7890,  7893,  7896,  7899,  7901,  7903,  7906,  7909,  7912,  7913,
    7917,  7918,  7920,  7924,  7926,  7929,  7932,  7935,  7937,  7941,
    7945,  7947,  7949,  7953,  7955,  7959,  7961,  7965,  7970,  7975,
    7982,  7989,  7991,  7992,  7996,  7998,  8002,  8003,  8006,  8009,
    8012,  8015,  8016,  8020,  8021,  8025,  8026,  8030,  8031,  8033,
    8034,  8038,  8041,  8042,  8044,  8047,  8048,  8050,  8055,  8060,
    8066,  8069,  8073,  8074,  8076,  8078,  8080,  8082,  8084,  8086,
    8088,  8090,  8092,  8094,  8096,  8098,  8100,  8101,  8105,  8109,
    8114,  8116,  8118,  8120,  8122,  8124,  8126,  8128,  8130,  8132,
    8134,  8136,  8138,  8140,  8141,  8145,  8147,  8150,  8152,  8155,
    8159,  8163,  8167,  8168,  8172,  8176,  8177,  8185,  8188,  8189,
    8193,  8198,  8203,  8205,  8207,  8208,  8211,  8212,  8225,  8233,
    8240,  8241,  8242,  8243,  8244,  8259,  8260,  8261,  8262,  8263,
    8275,  8280,  8285,  8289,  8294,  8298,  8302,  8303,  8306,  8308,
    8312,  8318,  8320,  8322,  8323,  8325,  8327,  8328,  8331,  8332,
    8334,  8338,  8344,  8348,  8352,  8356,  8358,  8362,  8367,  8374,
    8382,  8383,  8386,  8388,  8390,  8391,  8395,  8397,  8401,  8403,
    8407,  8409,  8412,  8413,  8417,  8418,  8420,  8422,  8423
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     741,     0,    -1,   742,    -1,   661,  1187,   156,    -1,   663,
     937,   156,    -1,   662,  1465,   729,  1184,   730,   156,    -1,
     664,  1560,   156,    -1,   156,    -1,    -1,   745,   743,   732,
     744,    -1,   745,   156,    -1,    -1,   156,    -1,   746,    -1,
    1548,    -1,  1059,    -1,  1068,    -1,  1063,    -1,  1520,    -1,
    1070,    -1,  1061,    -1,  1074,    -1,  1072,    -1,  1071,    -1,
    1058,    -1,  1073,    -1,  1065,    -1,  1134,    -1,  1137,    -1,
     810,    -1,   758,    -1,  1138,    -1,  1128,    -1,  1604,    -1,
    1554,    -1,   783,    -1,   788,    -1,   782,    -1,   781,    -1,
     785,    -1,   780,    -1,   747,    -1,  1371,    -1,  1398,    -1,
    1323,    -1,  1327,    -1,  1333,    -1,  1328,    -1,  1326,    -1,
    1336,    -1,  1330,    -1,  1329,    -1,  1339,    -1,  1337,    -1,
    1338,    -1,  1335,    -1,  1325,    -1,  1334,    -1,  1331,    -1,
    1332,    -1,   751,    -1,  1399,    -1,  1404,    -1,   840,    -1,
    1109,    -1,  1528,    -1,  1522,    -1,   756,    -1,  1603,    -1,
    1347,    -1,  1600,    -1,  1426,    -1,  1429,    -1,  1510,    -1,
    1142,    -1,  1149,    -1,  1153,    -1,   749,    -1,  1422,    -1,
    1557,    -1,  1144,    -1,  1130,    -1,  1348,    -1,  1413,    -1,
     839,    -1,  1519,    -1,  1526,    -1,  1555,    -1,  1556,    -1,
    1159,    -1,  1483,    -1,  1487,    -1,  1485,    -1,   832,    -1,
    1381,    -1,  1518,    -1,  1110,    -1,  1114,    -1,  1375,    -1,
    1601,    -1,  1516,    -1,  1366,    -1,  1428,    -1,  1593,    -1,
     748,   415,  1471,    -1,   121,    -1,   144,    -1,   415,  1471,
     197,   750,    -1,  1468,    -1,   733,  1474,    -1,    -1,   170,
    1471,   752,   753,    -1,    -1,   615,   754,    -1,   754,   734,
     755,    -1,   755,    -1,   733,  1474,    -1,    -1,   218,   757,
    1474,    -1,    -1,    58,   316,   583,   759,   774,   779,    -1,
      -1,    58,   457,   185,   760,   761,   779,    -1,   762,    -1,
     761,   734,   762,    -1,   458,   160,   763,    -1,   459,   160,
     763,    -1,   460,   160,   768,    -1,   461,   160,   768,    -1,
     462,   160,   771,    -1,   463,   160,   771,    -1,   464,   160,
     766,    -1,   729,   730,    -1,   729,   764,   730,    -1,   765,
      -1,   764,   734,   765,    -1,  1471,    -1,   729,   730,    -1,
     729,   767,   730,    -1,   729,   765,   734,   765,   730,    -1,
     767,   734,   729,   765,   734,   765,   730,    -1,   729,   730,
      -1,   729,   769,   730,    -1,   770,    -1,   769,   734,   770,
      -1,  1471,   735,  1471,    -1,   729,   730,    -1,   729,   772,
     730,    -1,   773,    -1,   772,   734,   773,    -1,  1467,    -1,
     775,    -1,   774,   734,   775,    -1,   299,   160,  1466,    -1,
     296,   160,  1466,    -1,   317,   160,  1466,    -1,   302,   160,
    1466,    -1,   303,   160,  1313,    -1,   297,   160,  1313,    -1,
     304,   160,  1313,    -1,   298,   160,  1313,    -1,   314,   160,
    1313,    -1,   308,   160,  1466,    -1,   306,   160,  1466,    -1,
     307,   160,  1466,    -1,   309,   160,  1466,    -1,   310,   160,
    1466,    -1,   313,   160,  1466,    -1,   315,   160,  1313,    -1,
     311,   160,  1466,    -1,   312,   160,  1466,    -1,   711,   160,
    1466,    -1,   712,   160,  1313,    -1,   318,   160,  1455,    -1,
     232,   160,   729,   776,   730,    -1,   295,   160,  1313,    -1,
     778,    -1,    -1,   777,    -1,   776,   734,   777,    -1,  1313,
      -1,   300,   160,  1466,    -1,   301,   160,  1315,    -1,   445,
     160,  1466,    -1,   446,   160,  1313,    -1,    -1,   194,    60,
    1466,    -1,    99,  1343,   566,   966,  1463,   729,   977,   730,
     933,    -1,    99,  1343,   566,   966,  1463,   933,    -1,    99,
    1343,   566,   966,  1463,   275,  1463,    -1,    99,  1343,   566,
     966,  1463,   729,   275,  1463,   730,    -1,    99,   654,   966,
    1540,    -1,    99,   708,   212,  1471,   592,  1360,  1606,  1607,
    1611,  1612,    -1,    -1,    99,   108,   966,  1471,   784,   963,
      -1,    99,  1564,    -1,    99,   612,   966,  1541,   787,  1545,
    1079,  1076,    -1,    99,   286,   212,  1471,     7,   920,   913,
      -1,    99,   564,  1471,     7,   919,   906,   907,    -1,    99,
     499,  1474,   193,   111,   642,  1474,   384,   729,   789,   730,
      -1,    99,   390,   456,   519,   717,   709,  1316,   786,    -1,
      99,   519,   717,   709,   966,  1316,   786,    -1,    -1,   786,
     353,  1466,    -1,   786,   714,  1466,    -1,   786,   716,  1466,
     228,    48,  1316,    -1,   786,   715,  1466,    -1,    -1,   125,
     654,  1540,    -1,    99,  1038,   235,  1049,   378,  1463,   729,
    1053,   730,  1045,  1099,    -1,    99,   199,   235,  1471,   378,
    1463,   729,  1053,   730,  1039,  1099,    -1,    99,   519,   235,
    1471,   378,  1463,   729,  1053,   730,  1042,  1099,    -1,   790,
      -1,   789,   734,   790,    -1,   612,  1468,    -1,   221,  1468,
      -1,   108,  1468,    -1,   394,  1468,    -1,   404,  1468,    -1,
     515,  1468,    -1,   411,  1313,    -1,    -1,   167,   966,   804,
     792,   378,   488,   793,   798,   795,   800,   143,   801,    -1,
      -1,   168,  1184,  1281,   794,   796,   797,    -1,    25,  1184,
      -1,    -1,   152,    -1,   137,   378,   511,    -1,   137,    -1,
      -1,   538,  1184,    -1,    -1,   155,  1184,    -1,    -1,   799,
      -1,   378,    81,   416,    -1,   378,    81,   367,   416,    -1,
      -1,    77,  1468,    -1,    -1,   802,   803,    -1,   856,    -1,
     858,    -1,   854,    -1,   875,    -1,   893,    -1,   895,    -1,
     890,    -1,   860,    -1,   862,    -1,   863,    -1,   864,    -1,
     865,    -1,   867,    -1,  1471,   735,  1471,    -1,  1471,    -1,
      -1,   805,   807,    -1,    -1,   806,   808,    -1,    77,  1468,
      -1,   265,   533,    -1,   369,   533,    -1,    93,   533,    -1,
     431,   533,   111,    -1,   343,   533,   111,    -1,   809,    -1,
     807,    -1,   134,    -1,  1190,   134,    -1,   533,   492,   127,
      -1,   533,   492,   248,    -1,    51,   804,   811,    -1,    -1,
     729,  1238,   730,    -1,    -1,   813,    -1,   813,   734,   814,
      -1,   814,    -1,  1471,   987,  1019,    -1,    -1,   816,    -1,
     816,   734,   817,    -1,   817,    -1,   818,  1471,   987,  1019,
      -1,    -1,   249,    -1,   393,    -1,   239,    -1,    -1,   819,
     853,   732,    -1,   853,   732,    -1,   820,   853,   732,    -1,
      -1,   821,   822,   732,    -1,   124,   851,   987,  1019,   852,
      -1,   124,  1471,    86,   194,   828,    -1,    -1,   124,   825,
     215,   194,   823,   826,   853,    -1,    -1,   124,  1471,   105,
     194,   824,  1159,    -1,   172,    -1,    95,    -1,   827,    -1,
     826,   734,   827,    -1,   831,    -1,  1313,    -1,   829,    -1,
     522,   830,  1469,    -1,    -1,   621,    -1,   828,    -1,  1471,
      -1,   523,    -1,  1190,   196,    -1,   521,    -1,   508,   833,
     835,    -1,  1471,    -1,   829,    -1,    -1,   833,    -1,    -1,
     501,   836,    -1,   838,   160,   837,    -1,   836,   734,   838,
     160,   837,    -1,  1454,    -1,  1230,    -1,  1460,    -1,    66,
      -1,   551,    -1,    90,    -1,    92,    -1,    91,    -1,    56,
      -1,   489,    -1,   568,    -1,    76,    -1,   106,    -1,   334,
      -1,   351,    -1,   467,   834,   835,    -1,   208,   841,   135,
     842,    -1,    -1,   103,    -1,   536,    -1,   843,    -1,    86,
     847,   848,    -1,   844,    -1,   843,   734,   844,    -1,   845,
     160,   846,    -1,  1471,    -1,   733,  1474,    -1,   374,    -1,
     485,    -1,   837,    -1,   849,    -1,   848,   734,   849,    -1,
     845,   160,   850,    -1,    66,    -1,   551,    -1,    90,    -1,
      92,    -1,    91,    -1,    56,    -1,   489,    -1,   568,    -1,
      76,    -1,   106,    -1,   334,    -1,   351,    -1,   472,    -1,
    1471,    -1,   851,   734,  1471,    -1,    -1,   125,  1184,    -1,
     856,    -1,   858,    -1,   854,    -1,   875,    -1,   893,    -1,
     895,    -1,   890,    -1,   860,    -1,   862,    -1,   863,    -1,
     864,    -1,   865,    -1,   867,    -1,    -1,   230,   855,   870,
     154,   230,    -1,    -1,   857,   746,    -1,    -1,   474,   859,
    1184,    -1,    -1,   861,   899,    -1,   270,  1473,    -1,   257,
    1473,    -1,   381,  1471,    -1,    -1,   182,   868,  1471,   246,
     866,   869,    -1,    68,  1471,    -1,    -1,   363,   197,    -1,
     197,    -1,  1471,    -1,   869,   734,  1471,    -1,    -1,    -1,
      -1,   871,  1184,   872,   575,   820,   873,   874,    -1,    -1,
     151,   870,    -1,   150,   820,    -1,   876,    -1,   879,    -1,
      -1,    -1,    54,   877,  1184,   878,   881,   889,   154,    54,
      -1,    -1,    54,   880,   882,   889,   154,    54,    -1,   883,
      -1,   881,   883,    -1,   886,    -1,   882,   886,    -1,    -1,
      -1,   634,   884,  1184,   885,   575,   820,    -1,    -1,    -1,
     634,   887,  1184,   888,   575,   820,    -1,    -1,   150,   820,
      -1,    -1,  1473,   736,   891,   899,   892,    -1,    -1,  1473,
      -1,    -1,  1473,   736,   894,   897,   892,    -1,    -1,   896,
     897,    -1,    -1,    32,   898,   821,   819,   154,    -1,   292,
     820,   154,   292,    -1,    -1,    -1,   636,   900,  1184,   901,
     143,   820,   154,   636,    -1,    -1,    -1,   455,   820,   608,
     902,  1184,   903,   154,   455,    -1,    31,    -1,     9,    -1,
     241,    -1,   609,    -1,   130,    -1,    -1,   614,   286,   212,
    1471,    -1,    -1,   908,    -1,   909,    -1,   908,   969,   909,
      -1,   921,    -1,   922,    -1,   923,    -1,   924,    -1,   927,
      -1,   929,    -1,   931,    -1,   928,    -1,   930,    -1,    -1,
     911,    -1,   912,    -1,   911,   969,   912,    -1,   921,    -1,
     922,    -1,   923,    -1,   929,    -1,   931,    -1,    -1,   914,
      -1,   915,    -1,   914,   969,   915,    -1,   921,    -1,   925,
      -1,   926,    -1,   927,    -1,   929,    -1,   931,    -1,   928,
      -1,    -1,   917,    -1,   918,    -1,   917,   969,   918,    -1,
     921,    -1,   929,    -1,   931,    -1,   110,  1468,    -1,   598,
    1468,    -1,   237,  1360,   932,    -1,    26,  1360,   932,    -1,
     323,  1360,   932,    -1,   177,  1360,   932,    -1,   599,  1360,
     932,    -1,   439,  1360,   932,    -1,   364,  1360,  1314,    -1,
      77,  1360,  1468,    -1,  1388,   158,  1360,  1474,    -1,   184,
    1360,   932,    -1,   630,    -1,   370,    -1,  1316,    -1,  1465,
      -1,   968,   934,    -1,   934,    -1,   937,   935,    -1,   935,
      -1,    -1,  1434,   936,    -1,   936,    -1,    21,  1356,    -1,
    1356,    -1,   401,    48,   938,   941,   942,   946,    -1,   939,
     263,   940,   729,   943,   730,    -1,   939,   216,   729,  1187,
     730,    -1,   430,   729,  1187,   730,    -1,   430,    73,   729,
     944,   730,    -1,   280,   729,  1187,   730,    -1,   280,    73,
     729,   944,   730,    -1,    -1,   277,    -1,    -1,    12,   160,
    1314,    -1,    -1,   402,  1314,    -1,    -1,   555,    48,   939,
     216,   729,  1187,   730,   945,    -1,   555,    48,   939,   263,
     940,   729,   944,   730,   945,    -1,    -1,   944,    -1,  1471,
      -1,   944,   734,  1471,    -1,    -1,   554,  1314,    -1,    -1,
     729,   947,   730,    -1,   948,    -1,   947,   734,   948,    -1,
     401,  1471,   949,   960,   957,    -1,    -1,   620,   272,   574,
     950,    -1,   620,   249,   951,    -1,   327,    -1,   953,    -1,
     953,    -1,   729,   952,   730,    -1,   953,    -1,   952,   734,
     953,    -1,    -1,   729,   954,   955,   730,    -1,   956,    -1,
     955,   734,   956,    -1,   327,    -1,  1187,    -1,    -1,   729,
     958,   730,    -1,   959,    -1,   958,   734,   959,    -1,   555,
    1474,   960,    -1,    -1,   961,    -1,   961,   962,    -1,   962,
      -1,   564,  1360,  1471,    -1,  1388,   158,  1360,  1474,    -1,
     364,  1360,  1314,    -1,   322,  1360,  1316,    -1,   340,  1360,
    1316,    -1,   111,   136,  1360,  1468,    -1,   235,   136,  1360,
    1468,    -1,    77,  1360,  1468,    -1,    -1,   964,    -1,   965,
      -1,   964,   965,    -1,   973,    -1,   972,    -1,    -1,   230,
    1190,   171,    -1,   970,    -1,   967,   970,    -1,   970,    -1,
     968,   969,   970,    -1,    -1,   734,    -1,   158,  1360,  1474,
      -1,   322,  1360,  1315,    -1,   340,  1360,  1315,    -1,    28,
    1360,  1313,    -1,   404,  1360,  1468,    -1,    77,  1360,  1468,
      -1,    83,  1360,  1468,    -1,    84,  1360,  1468,    -1,    27,
    1360,  1315,    -1,   395,  1360,   971,    -1,   540,  1360,   971,
      -1,   541,  1360,   971,    -1,   542,  1360,  1313,    -1,   542,
    1360,   125,    -1,    63,  1360,  1313,    -1,   567,  1360,  1313,
      -1,   129,  1360,  1313,    -1,   483,  1360,   974,    -1,   603,
    1360,   729,  1412,   730,    -1,   972,    -1,   973,    -1,   242,
    1360,   975,    -1,   111,   136,  1360,  1468,    -1,   235,   136,
    1360,  1468,    -1,   564,  1360,  1471,    -1,   547,   139,    -1,
     547,   332,    -1,    87,  1360,  1468,    -1,   262,  1360,  1313,
      -1,  1313,    -1,   125,    -1,  1020,  1013,  1360,  1014,    -1,
    1020,    71,  1360,  1018,    -1,   125,    -1,   187,    -1,   148,
      -1,    82,    -1,   440,    -1,    80,    -1,   369,    -1,   186,
      -1,   266,    -1,   550,    -1,   435,    -1,   123,    -1,   247,
      -1,   978,    -1,   977,   734,   978,    -1,   979,    -1,   981,
      -1,  1471,   984,   980,    -1,    -1,   982,    -1,  1028,    -1,
    1035,  1049,   729,  1053,   730,  1045,    -1,   199,  1036,  1055,
     729,  1053,   730,  1039,    -1,   519,  1036,  1055,   729,  1053,
     730,  1042,    -1,   983,  1034,  1049,   729,  1053,   730,  1045,
      -1,   983,   193,   263,  1055,   729,  1053,   730,  1028,    -1,
     983,   982,    -1,    64,   729,  1184,   730,    -1,    -1,    89,
    1055,    -1,   987,  1006,    -1,   987,  1019,   985,    21,   729,
    1184,   730,   986,  1006,    -1,    -1,   203,    15,    -1,    -1,
     629,    -1,   548,    -1,   992,  1004,  1000,    -1,   993,  1005,
    1000,    -1,   995,   996,  1000,    -1,    40,    -1,    40,  1003,
      -1,    45,    -1,    44,    -1,    62,  1003,  1023,    -1,    62,
    1023,    -1,   989,  1003,  1024,    -1,   989,  1024,    -1,    35,
    1003,    -1,    35,    -1,   990,  1003,  1023,    -1,   991,  1003,
    1024,    -1,   622,  1003,    -1,   650,  1004,  1000,    -1,   115,
      -1,   579,   998,    -1,   576,   998,    -1,   112,   998,    -1,
     580,    -1,    42,  1004,    -1,   988,    -1,   328,    -1,   288,
      -1,   291,   622,    -1,   291,   990,  1023,    -1,   582,  1023,
      -1,   573,  1004,  1023,    -1,   330,  1023,    -1,   289,  1023,
      -1,   159,   729,  1057,   730,  1023,    -1,   501,   729,  1057,
     730,  1023,    -1,   291,  1023,    -1,   497,    -1,   260,    -1,
     206,    -1,   205,    -1,   409,    -1,   348,    -1,   279,    -1,
     347,    -1,   410,    -1,   349,    -1,   357,    -1,   354,    62,
      -1,    62,   626,    -1,   623,    -1,   354,   623,    -1,   376,
      -1,   357,   623,    -1,   354,    62,   626,    -1,   357,   626,
      -1,   247,    -1,   581,    -1,   513,    -1,   329,    -1,    34,
      -1,   435,    -1,   142,   994,    -1,    -1,   414,    -1,   189,
      -1,   123,    -1,   375,    -1,   187,    -1,    -1,  1003,    -1,
     997,    -1,   729,   373,   734,   373,   730,    -1,    -1,   729,
     373,   730,    -1,    -1,   729,   730,    -1,   729,   373,   730,
      -1,    -1,  1001,    -1,  1001,  1002,    -1,  1002,    -1,   509,
      -1,   607,    -1,   651,    -1,   729,   290,   730,    -1,   729,
     594,   730,    -1,   729,   122,   730,    -1,   729,   373,   730,
      -1,    -1,  1003,    -1,    -1,   997,    -1,    -1,  1007,    -1,
    1007,  1008,    -1,  1008,    -1,   372,    -1,  1190,   372,    -1,
     125,  1012,    -1,   378,   609,  1011,    -1,    27,    -1,   497,
     125,   621,    -1,  1027,   263,    -1,   604,    -1,   604,   263,
      -1,    77,  1468,    -1,    71,  1018,    -1,    75,  1009,    -1,
     547,  1010,    -1,   706,  1316,    -1,   125,    -1,   187,    -1,
     148,    -1,   125,    -1,   139,    -1,   332,    -1,   368,   999,
      -1,  1011,    -1,  1453,    -1,    62,   501,    -1,    61,    -1,
    1474,    -1,    35,    -1,    -1,  1013,  1014,    -1,  1474,    -1,
      35,    -1,  1016,    -1,   125,    -1,  1474,    -1,    -1,    71,
    1018,    -1,    -1,   125,    -1,    23,    -1,    35,    23,    -1,
      23,    35,    -1,   601,    -1,   601,    35,    -1,    35,   601,
      -1,    -1,  1021,    -1,  1022,    -1,    49,    -1,  1013,  1014,
    1024,    -1,    35,    -1,    35,  1013,  1014,    -1,    -1,    35,
      -1,    -1,   729,  1314,  1026,   730,    -1,    -1,   418,    -1,
     441,  1463,  1029,  1031,  1032,    -1,    -1,   729,  1030,   730,
      -1,  1030,   734,  1471,    -1,  1471,    -1,    -1,   319,   198,
      -1,   319,   400,    -1,   319,   510,    -1,    -1,   378,   609,
    1033,    -1,   378,   130,  1033,    -1,   378,   609,  1033,   378,
     130,  1033,    -1,   378,   130,  1033,   378,   609,  1033,    -1,
     470,    -1,    52,    -1,   501,   372,    -1,   369,     6,    -1,
     501,   125,    -1,   418,   263,    -1,   604,  1036,    -1,   263,
      -1,   235,    -1,    -1,  1035,    -1,   261,    -1,   235,    -1,
     234,    -1,    -1,   604,    -1,    -1,  1040,    -1,  1041,    -1,
    1040,  1041,    -1,  1048,    -1,   637,   398,  1465,    -1,    -1,
    1043,    -1,  1044,    -1,  1043,  1044,    -1,  1048,    -1,    -1,
    1046,    -1,  1047,    -1,  1046,  1047,    -1,  1048,    -1,  1050,
      -1,   262,  1360,  1313,    -1,    77,  1468,    -1,  1051,    -1,
    1055,    -1,  1055,   615,  1052,    -1,  1471,   592,  1052,    -1,
     615,  1052,    -1,   592,  1052,    -1,   657,    -1,   656,    -1,
      47,    -1,   486,    -1,   216,    -1,  1053,   734,  1054,    -1,
    1054,    -1,  1471,  1307,    -1,  1471,   729,   373,   730,  1307,
      -1,    -1,  1471,    -1,    -1,   735,  1471,    -1,  1451,    -1,
    1057,   734,  1451,    -1,    14,   566,  1463,  1087,    -1,    14,
     566,  1463,  1088,    -1,    -1,    14,   108,  1086,  1060,   964,
      -1,    -1,    14,   420,   804,  1062,   805,    -1,    -1,    14,
     200,   804,  1064,   805,    -1,    -1,    14,  1572,  1567,  1066,
    1574,    -1,    -1,    14,  1567,  1067,  1574,    -1,    -1,    14,
    1567,   167,   804,  1069,  1083,  1084,   795,   800,  1085,    -1,
      14,   286,   212,  1471,     7,   920,   916,    -1,    14,   564,
    1471,     7,   919,   910,    -1,    14,   564,  1471,   144,   919,
     910,    -1,    14,   564,  1471,   451,   583,  1471,    -1,    14,
     499,  1474,   384,   729,   789,   730,    -1,  1075,  1541,  1545,
    1079,  1076,    -1,  1075,  1082,   228,    48,   572,    -1,  1075,
    1476,   125,   654,    13,    -1,  1075,  1476,   125,   654,   365,
      -1,  1075,  1476,   125,   654,  1540,    -1,    14,   708,   212,
    1471,  1607,  1611,  1612,  1613,    -1,    14,   612,  1342,    -1,
      -1,  1077,    -1,  1078,    -1,  1077,  1078,    -1,     5,   606,
      -1,     5,   285,    -1,   404,   174,    -1,   404,   174,   245,
    1314,   120,    -1,   404,   174,   361,    -1,   404,   174,   125,
      -1,   404,   704,  1314,    -1,   404,   704,   125,    -1,   404,
     705,   245,  1314,   120,    -1,   404,   705,   245,   125,    -1,
      -1,   637,  1080,    -1,  1080,  1081,    -1,  1081,    -1,   321,
    1313,    -1,   325,  1313,    -1,   320,  1313,    -1,   326,  1313,
      -1,   612,   729,   730,    -1,    -1,   378,   488,   793,    -1,
     799,    -1,   378,   488,   793,   799,    -1,    -1,   451,   583,
     804,    -1,    -1,   143,   801,    -1,    -1,  1471,    -1,  1090,
      -1,  1090,  1089,    -1,  1091,    -1,  1096,   734,  1091,    -1,
     937,    -1,   450,   403,    -1,    -1,  1096,    -1,  1095,    -1,
    1096,   734,  1095,    -1,   138,   564,    -1,   233,   564,    -1,
       7,   401,  1143,    -1,     7,   401,  1143,   729,   947,   730,
      -1,     7,   401,  1143,   402,  1314,    -1,   144,   401,  1280,
      -1,   436,   401,  1143,  1094,    -1,   382,   401,  1143,  1094,
      -1,    17,   401,  1143,  1094,    -1,    64,   401,  1094,  1139,
      -1,   453,   401,  1143,  1094,  1131,    -1,    69,   401,  1143,
    1314,    -1,   590,   401,  1094,    -1,   452,   401,  1143,    -1,
     452,   401,  1143,  1280,   246,   729,   947,   730,    -1,   169,
     401,  1471,   637,   566,  1463,  1092,    -1,   138,   401,  1094,
     564,    -1,   233,   401,  1094,   564,    -1,    -1,  1093,    -1,
     637,   619,    -1,   640,   619,    -1,    13,    -1,  1280,    -1,
    1097,    -1,  1095,   734,  1097,    -1,  1095,   734,  1098,    -1,
     967,    -1,  1095,   734,   967,    -1,  1098,    -1,  1096,   734,
    1098,    -1,     7,  1104,  1471,   984,   980,  1107,    -1,     7,
    1104,   729,   977,   730,    -1,     7,   981,    -1,    58,  1104,
    1471,  1471,   984,  1107,    -1,   344,  1104,  1471,   984,  1107,
      -1,   144,  1104,  1471,  1106,    -1,   144,   193,   263,  1471,
      -1,   144,   418,   263,    -1,   144,  1035,  1471,    -1,   137,
     261,    -1,   152,   261,    -1,    14,  1104,  1471,   501,   125,
    1453,    -1,    14,  1104,  1471,   144,   125,    -1,    14,   235,
    1471,  1051,    -1,   451,  1108,  1463,    -1,   451,  1035,  1471,
     583,  1471,    -1,   451,    74,  1471,   583,  1471,    -1,    96,
     583,  1013,  1014,  1019,    -1,   192,    -1,   388,    48,  1302,
      -1,  1100,    -1,  1102,    -1,  1093,    -1,    -1,  1102,    -1,
    1100,    -1,  1102,  1100,    -1,  1100,  1102,    -1,    12,  1360,
    1101,    -1,   125,    -1,  1471,    -1,   285,  1360,  1103,    -1,
     125,    -1,  1471,    -1,    -1,    74,    -1,    -1,   231,    -1,
      -1,   470,    -1,    52,    -1,    -1,     9,  1471,    -1,   186,
      -1,    -1,   583,    -1,   160,    -1,    21,    -1,   539,   204,
      -1,   546,   204,    -1,  1111,  1112,    -1,   546,   511,  1123,
     779,    -1,   539,   511,  1123,    -1,    -1,  1126,  1118,  1113,
     779,    -1,   539,   585,  1115,    -1,    -1,  1116,    -1,  1117,
      -1,  1116,   734,  1117,    -1,   637,    88,   514,    -1,   433,
     380,    -1,   433,   643,    -1,  1119,  1120,  1121,  1122,    -1,
      -1,   612,   160,  1468,    -1,    -1,   404,   160,  1468,    -1,
      -1,   126,   160,  1468,    -1,    -1,   406,   160,  1468,    -1,
      -1,  1124,    -1,  1125,    -1,  1124,   734,  1125,    -1,   534,
      -1,   447,    -1,    -1,   608,  1127,    -1,   778,    -1,  1127,
     734,   778,    -1,   526,   160,  1468,    -1,   524,   160,  1468,
      -1,   525,    -1,    63,  1512,  1340,  1129,    -1,    -1,   429,
      -1,   176,    -1,   453,  1143,  1512,  1340,  1131,    -1,    -1,
    1132,    -1,  1133,    -1,  1132,  1133,    -1,   429,    -1,   176,
      -1,   613,    -1,    17,  1143,  1512,  1340,  1136,    -1,    -1,
     637,   373,   674,    -1,    -1,   609,   673,   378,  1280,  1135,
      -1,   144,   673,   378,  1280,    -1,    36,  1468,    -1,    64,
    1512,  1340,  1139,    -1,    -1,  1140,    -1,  1141,    -1,  1141,
    1140,    -1,   429,    -1,   180,    -1,   331,    -1,   176,    -1,
      59,    -1,   194,   610,    -1,   382,  1143,  1512,  1340,    -1,
      -1,   371,    -1,   282,    -1,    -1,   451,  1512,  1145,  1147,
      -1,   451,   612,  1146,    -1,  1476,   583,  1476,    -1,  1146,
     734,  1476,   583,  1476,    -1,  1148,    -1,  1147,   734,  1148,
      -1,  1463,   583,  1463,    -1,    50,   235,  1150,   249,  1152,
      -1,    50,   235,  1463,  1156,  1157,   249,  1152,    -1,  1151,
      -1,  1150,   734,  1151,    -1,  1463,  1157,    -1,  1471,    -1,
     125,    -1,   281,   235,   246,    50,  1463,  1156,  1157,  1158,
      -1,   281,   235,   246,    50,  1154,    -1,  1155,    -1,  1154,
     734,  1155,    -1,  1463,  1157,  1158,    -1,   401,   729,  1094,
     730,    -1,    -1,  1035,   729,  1276,   730,    -1,    -1,   231,
     269,    -1,  1161,    -1,  1163,    -1,  1160,    -1,   729,  1160,
     730,    -1,  1161,  1321,    -1,  1162,  1304,  1308,  1173,    -1,
    1290,  1162,  1304,  1308,  1173,    -1,  1163,  1305,  1308,  1173,
      -1,  1290,  1163,  1305,  1308,  1173,    -1,  1163,  1309,  1173,
      -1,  1290,  1163,  1309,  1173,    -1,  1290,  1163,  1173,    -1,
    1164,    -1,  1162,   603,  1558,  1164,    -1,  1163,   603,  1558,
    1164,    -1,  1162,   603,  1558,  1163,    -1,  1163,   603,  1558,
    1163,    -1,   729,  1163,   730,    -1,   729,  1161,   730,    -1,
    1165,    -1,   493,  1170,  1180,  1321,  1166,  1287,  1299,  1289,
    1295,    -1,   493,  1170,  1180,  1166,  1287,  1299,  1289,  1295,
      -1,    -1,  1167,    -1,   197,  1168,    -1,   145,    -1,  1169,
      -1,  1245,    -1,  1169,   734,  1245,    -1,    -1,  1171,    -1,
    1171,  1172,    -1,  1172,    -1,  1562,    -1,   531,    -1,    -1,
    1174,    -1,  1174,  1175,    -1,  1175,    -1,   194,  1176,  1178,
      -1,   194,  1176,  1177,  1178,    -1,   285,   249,   503,   342,
      -1,   609,    -1,   503,    -1,   667,  1341,    -1,    -1,  1179,
      -1,   668,   669,    -1,   670,    -1,  1180,   734,  1181,    -1,
    1181,    -1,   723,    -1,  1458,    -1,  1184,  1182,    -1,    -1,
      21,  1471,    -1,    21,  1468,    -1,  1471,    -1,  1468,    -1,
      -1,   729,   730,    -1,  1184,  1188,  1184,    -1,  1184,   648,
    1184,    -1,  1184,  1189,  1184,    -1,   367,  1184,    -1,  1185,
     254,   589,    -1,  1185,   254,  1190,   589,    -1,  1185,   254,
     179,    -1,  1185,   254,  1190,   179,    -1,  1185,   254,   605,
      -1,  1185,   254,  1190,   605,    -1,  1185,    -1,  1185,   254,
     372,    -1,  1185,   254,  1190,   372,    -1,  1185,  1192,  1186,
      -1,  1185,  1192,  1193,  1560,    -1,  1186,    -1,  1187,   249,
    1560,    -1,  1187,  1190,   249,  1560,    -1,  1187,   249,   729,
    1184,   730,    -1,  1187,   249,   729,  1184,   734,  1239,   730,
      -1,  1187,  1190,   249,   729,  1184,   730,    -1,  1187,  1190,
     249,   729,  1184,   734,  1239,   730,    -1,  1187,    33,  1187,
      19,  1186,    -1,  1187,  1190,    33,  1187,    19,  1186,    -1,
    1187,   517,   275,  1187,    -1,  1187,   275,  1194,  1298,    -1,
    1187,  1190,   275,  1194,  1298,    -1,  1187,   442,  1187,    -1,
    1187,  1190,   442,  1187,    -1,  1187,    -1,  1187,   719,  1187,
      -1,  1187,   720,  1187,    -1,  1187,   504,  1187,    -1,  1187,
     505,  1187,    -1,  1187,   722,  1187,    -1,  1187,   721,  1187,
      -1,  1187,   722,   245,  1184,  1281,    -1,  1187,   721,   245,
    1184,  1281,    -1,  1187,   723,  1187,    -1,  1187,   724,  1187,
      -1,  1187,   725,  1187,    -1,  1187,   141,  1187,    -1,  1187,
     345,  1187,    -1,  1187,   726,  1187,    -1,  1194,    -1,   390,
      -1,   387,    -1,    19,    -1,    18,    -1,   367,    -1,   366,
      -1,   737,    -1,   366,    -1,   160,    -1,   161,    -1,   201,
      -1,   214,    -1,   267,    -1,   294,    -1,   359,    -1,    13,
      -1,    20,    -1,  1460,    -1,  1195,    -1,  1196,    -1,  1199,
      -1,  1197,    -1,  1194,    71,  1474,    -1,  1454,    -1,  1452,
      -1,  1230,    -1,  1206,    -1,  1208,    -1,  1194,   389,  1194,
      -1,   722,  1194,    -1,   721,  1194,    -1,   727,  1194,    -1,
    1191,  1194,    -1,  1559,    -1,   729,  1184,   730,    -1,   729,
    1184,   734,  1239,   730,    -1,   484,   729,  1184,   734,  1239,
     730,    -1,   171,  1560,    -1,   738,  1471,  1184,   739,    -1,
     319,  1240,    10,   729,  1187,  1200,   730,    -1,    35,  1194,
      -1,    55,   729,  1184,    21,  1237,   730,    -1,    54,  1242,
    1244,  1243,   154,    -1,    96,   729,  1184,   734,  1237,   730,
      -1,    96,   729,  1184,   615,  1014,   730,    -1,   125,   729,
    1460,   730,    -1,   620,   729,  1461,   730,    -1,   245,  1184,
    1281,   722,  1184,    -1,  1460,   259,  1469,    -1,  1460,   652,
    1469,    -1,    62,   729,  1239,   730,    -1,    62,   729,  1239,
     615,  1014,   730,    -1,   104,  1183,    -1,   115,   729,  1184,
     730,    -1,   120,   729,  1184,   730,    -1,   226,   729,  1184,
     730,    -1,   241,   729,  1184,   734,  1184,   734,  1184,   734,
    1184,   730,    -1,   245,   729,  1184,   734,  1184,   730,    -1,
     245,   729,  1184,   734,  1184,   734,  1239,   730,    -1,   271,
     729,  1184,   734,  1184,   730,    -1,   339,   729,  1184,   730,
      -1,   346,   729,  1184,   730,    -1,   477,   729,  1184,   734,
    1184,   730,    -1,   491,   729,  1184,   730,    -1,   579,   729,
    1184,   730,    -1,   576,   729,  1184,   730,    -1,   576,   729,
    1184,   734,  1184,   730,    -1,   588,   729,  1184,   730,    -1,
     588,   729,   268,  1184,   197,  1184,   730,    -1,   588,   729,
     584,  1184,   197,  1184,   730,    -1,   588,   729,    46,  1184,
     197,  1184,   730,    -1,   588,   729,   268,   197,  1184,   730,
      -1,   588,   729,   584,   197,  1184,   730,    -1,   588,   729,
      46,   197,  1184,   730,    -1,   588,   729,  1184,   197,  1184,
     730,    -1,   612,   729,   730,    -1,   650,   729,  1184,   730,
      -1,     8,   729,  1184,   734,  1184,   730,    -1,     8,   729,
    1184,   734,   245,  1184,  1281,   730,    -1,   102,  1183,    -1,
     107,   999,    -1,   113,   729,  1184,   734,   245,  1184,  1281,
     730,    -1,   114,   729,  1184,   734,   245,  1184,  1281,   730,
      -1,   178,   729,  1281,   197,  1184,   730,    -1,   207,   729,
    1283,   734,  1184,   730,    -1,  1011,    -1,   412,   729,  1187,
     249,  1184,   730,    -1,   552,   729,  1184,   734,  1184,   730,
      -1,   552,   729,  1184,   734,   245,  1184,  1281,   730,    -1,
     556,   729,  1184,   734,  1184,   734,  1184,   730,    -1,   556,
     729,  1184,   734,  1184,   730,    -1,   556,   729,  1184,   197,
    1184,   194,  1184,   730,    -1,   556,   729,  1184,   197,  1184,
     730,    -1,   562,   999,    -1,   577,   729,  1282,   734,  1184,
     734,  1184,   730,    -1,   578,   729,  1282,   734,  1184,   734,
    1184,   730,    -1,   616,  1183,    -1,   618,   999,    -1,   617,
     999,    -1,    23,   729,  1184,   730,    -1,    61,   729,  1184,
     730,    -1,    69,   729,  1239,   730,    -1,    72,   729,  1184,
     730,    -1,   108,   729,   730,    -1,   230,   729,  1184,   734,
    1184,   734,  1184,   730,    -1,   195,   729,  1184,   734,  1184,
     730,    -1,   195,   729,  1184,   734,  1184,   734,  1184,   730,
      -1,   335,   729,  1184,   730,    -1,   345,   729,  1184,   734,
    1184,   730,    -1,   427,   729,  1184,   730,    -1,   455,   729,
    1184,   734,  1184,   730,    -1,   456,   729,  1184,   734,  1184,
     734,  1184,   730,    -1,   475,   729,  1184,   730,    -1,   485,
     729,   730,    -1,   590,   729,  1184,   734,  1184,   730,    -1,
     632,   729,  1184,   730,    -1,   632,   729,  1184,   734,  1184,
     730,    -1,   633,   729,  1184,   730,    -1,   633,   729,  1184,
      21,    62,  1025,   730,    -1,   633,   729,  1184,    21,    35,
    1025,   730,    -1,   633,   729,  1184,   734,  1313,   734,  1313,
     734,  1313,   730,    -1,  1198,    -1,   205,   729,  1238,   730,
      -1,   279,   729,  1239,   730,    -1,   347,   729,  1239,   730,
      -1,   348,   729,  1239,   730,    -1,   349,   729,  1239,   730,
      -1,   409,   729,  1184,   734,  1184,   730,    -1,   410,   729,
    1239,   730,    -1,  1465,   729,  1203,   730,    -1,  1471,   735,
    1471,   729,  1238,   730,    -1,  1201,  1202,    -1,   249,    44,
     342,    -1,    -1,   249,   355,   265,   342,    -1,    -1,   637,
     428,   173,    -1,    -1,  1204,    -1,  1205,    -1,  1204,   734,
    1205,    -1,  1184,  1182,    -1,  1207,    -1,  1229,    -1,    29,
     729,  1236,   730,  1213,    -1,    29,   729,   140,  1236,   730,
    1213,    -1,    38,   729,  1236,   730,  1213,    -1,    39,   729,
    1236,   730,  1213,    -1,   666,   729,  1236,   730,  1213,    -1,
     665,   729,  1236,   734,  1236,   730,  1213,    -1,    41,   729,
    1236,   730,  1213,    -1,    97,   729,  1286,   723,   730,  1213,
      -1,    97,   729,  1236,   730,  1213,    -1,    97,   729,   140,
    1239,   730,  1213,    -1,   341,   729,  1236,   730,  1213,    -1,
     341,   729,   140,  1236,   730,  1213,    -1,   324,   729,  1236,
     730,  1213,    -1,   324,   729,   140,  1236,   730,  1213,    -1,
     545,   729,  1236,   730,  1213,    -1,   625,   729,  1236,   730,
    1213,    -1,   544,   729,  1236,   730,  1213,    -1,   627,   729,
    1236,   730,  1213,    -1,   557,   729,  1236,   730,  1213,    -1,
     557,   729,   140,  1236,   730,  1213,    -1,   213,   729,  1232,
    1239,  1234,  1233,   730,  1213,    -1,   695,   729,   730,  1214,
      -1,   693,   729,   730,  1214,    -1,   678,   729,   730,  1214,
      -1,   677,   729,   730,  1214,    -1,   691,   729,   730,  1214,
      -1,   687,   729,  1194,   730,  1214,    -1,   685,   729,  1184,
    1209,   730,  1211,  1214,    -1,   683,   729,  1184,  1209,   730,
    1211,  1214,    -1,   680,   729,  1184,   730,  1211,  1214,    -1,
     684,   729,  1184,   730,  1211,  1214,    -1,   686,   729,  1184,
     734,  1194,   730,  1212,  1211,  1214,    -1,    -1,   734,  1455,
    1210,    -1,   734,  1452,  1210,    -1,    -1,   734,  1184,    -1,
      -1,   694,   688,    -1,   231,   688,    -1,    -1,   197,   186,
      -1,   197,   266,    -1,    -1,  1214,    -1,   690,  1215,    -1,
    1216,    -1,  1217,    -1,  1471,    -1,   729,  1218,   730,    -1,
    1219,  1220,  1221,  1222,    -1,    -1,  1216,    -1,    -1,   401,
      48,  1300,    -1,    -1,   388,    48,  1306,    -1,    -1,  1228,
    1223,  1227,    -1,  1224,    -1,  1225,    -1,   697,   692,    -1,
    1455,   692,    -1,  1452,   692,    -1,   245,  1184,  1281,   692,
      -1,   103,   484,    -1,    33,  1226,    19,  1226,    -1,  1224,
      -1,   697,   681,    -1,  1455,   681,    -1,  1452,   681,    -1,
     245,  1184,  1281,   681,    -1,    -1,   679,   103,   484,    -1,
     679,   212,    -1,   679,   696,    -1,   679,   369,   689,    -1,
     482,    -1,   430,    -1,   682,    -1,   671,   729,  1239,   730,
      -1,   733,  1231,    -1,  1474,   502,  1184,    -1,  1474,    -1,
     733,  1496,  1474,  1056,    -1,    -1,   140,    -1,    -1,   495,
    1451,    -1,    -1,   388,    48,  1235,    -1,  1235,   734,  1459,
      -1,  1459,    -1,  1286,  1184,    -1,    35,  1004,    -1,    62,
    1004,  1023,    -1,   989,  1004,    -1,   509,    -1,   509,   247,
      -1,   607,    -1,   607,   247,    -1,   115,    -1,   579,   998,
      -1,   112,   998,    -1,   123,   996,    -1,   260,    -1,    -1,
    1239,    -1,  1184,    -1,  1239,   734,  1184,    -1,  1241,    -1,
     729,  1241,   730,    -1,  1460,    -1,  1241,   734,  1460,    -1,
      -1,  1184,    -1,    -1,   150,  1184,    -1,   634,  1184,   575,
    1184,    -1,  1244,   634,  1184,   575,  1184,    -1,  1255,    -1,
    1247,    -1,   738,  1471,  1246,   739,    -1,  1255,    -1,  1247,
      -1,  1245,  1249,  1245,   378,  1184,    -1,  1245,  1249,  1245,
     615,   729,  1279,   730,    -1,  1245,  1250,  1245,   378,  1184,
      -1,  1245,  1250,  1245,   615,   729,  1279,   730,    -1,  1245,
    1249,  1245,    -1,  1245,  1248,  1255,    -1,   355,  1251,   258,
      -1,   355,   477,  1252,   258,    -1,   355,   271,  1252,   258,
      -1,   258,    -1,   238,   258,    -1,   100,   258,    -1,   549,
      -1,   271,  1252,   258,    -1,   477,  1252,   258,    -1,    -1,
     238,    -1,    -1,   391,    -1,    -1,  1254,    -1,   401,   729,
    1279,   730,    -1,  1258,    -1,  1257,    -1,  1260,    -1,  1259,
      -1,  1256,    -1,  1261,    -1,   729,  1256,   730,    -1,   729,
    1169,   734,  1245,   730,    -1,   729,  1257,   730,    -1,   729,
    1258,   730,    -1,  1463,  1253,  1285,  1275,    -1,   729,  1259,
     730,    -1,   729,  1247,   730,    -1,  1560,  1285,  1293,    -1,
     700,   729,  1184,   734,  1468,  1262,   730,  1285,    -1,    73,
     729,  1263,   730,    -1,  1264,    -1,  1263,   734,  1264,    -1,
    1471,   194,   702,    -1,  1471,   987,  1265,   703,  1468,  1266,
      -1,   701,   703,  1468,  1262,    -1,    -1,   171,    -1,    -1,
    1267,    -1,  1268,    -1,  1267,  1268,    -1,  1268,  1267,    -1,
    1269,   378,   699,    -1,  1269,   378,   162,    -1,   162,    -1,
     372,    -1,   125,  1468,    -1,    -1,   194,   258,    -1,   194,
     388,    48,    -1,   194,   212,    48,    -1,   192,    -1,   231,
      -1,  1271,  1035,  1270,   729,  1278,   730,    -1,   614,  1035,
    1270,   729,  1276,   730,    -1,  1272,    -1,  1273,  1272,    -1,
      -1,  1273,    -1,  1274,    -1,    -1,  1278,    -1,  1471,    -1,
     418,    -1,  1277,    -1,  1278,   734,  1277,    -1,  1280,    -1,
    1471,    -1,  1280,   734,  1471,    -1,  1282,    -1,   116,    -1,
     117,    -1,   118,    -1,   119,    -1,   223,    -1,   224,    -1,
     225,    -1,   337,    -1,   338,    -1,   490,    -1,   649,    -1,
     120,    -1,   632,    -1,   226,    -1,   339,    -1,   346,    -1,
     427,    -1,   491,    -1,   335,    -1,   650,    -1,   115,    -1,
     579,    -1,   576,    -1,   112,    -1,    -1,    21,    -1,   160,
      -1,    -1,  1284,  1471,    -1,    -1,    13,    -1,  1288,    -1,
      -1,   635,  1184,    -1,    -1,   217,  1184,    -1,   637,  1291,
      -1,   637,   660,  1291,    -1,  1291,   734,  1292,    -1,  1292,
      -1,  1471,  1293,    21,  1560,    -1,    -1,   729,  1294,   730,
      -1,  1471,    -1,  1294,   734,  1471,    -1,    -1,   698,  1296,
      -1,  1297,    -1,  1296,   734,  1297,    -1,  1216,    21,  1217,
      -1,   165,  1194,    -1,    -1,    -1,   212,    48,  1300,  1301,
      -1,  1300,   734,  1459,    -1,  1459,    -1,    -1,   639,    -1,
    1302,   734,  1303,    -1,  1303,    -1,  1461,  1307,    -1,    -1,
    1305,    -1,   388,    48,  1306,    -1,  1306,   734,  1459,    -1,
    1459,    -1,    -1,    22,    -1,   131,    -1,    -1,  1309,    -1,
     276,  1310,    -1,  1311,    -1,  1311,   734,  1311,    -1,  1311,
     377,  1311,    -1,  1471,    -1,  1452,    -1,   594,    -1,   290,
      -1,   373,    -1,    -1,   276,  1311,    -1,   373,    -1,   219,
      -1,   290,    -1,   594,    -1,   122,    -1,   188,    -1,   373,
      -1,   219,    -1,   290,    -1,   594,    -1,  1317,    -1,   373,
      -1,   594,    -1,   290,    -1,   122,    -1,   188,    -1,   373,
      -1,   594,    -1,   290,    -1,  1317,    -1,  1318,    -1,   122,
      -1,   188,    -1,  1319,   734,  1320,    -1,  1320,    -1,   733,
    1474,    -1,  1474,    -1,   246,  1322,    -1,   392,  1470,  1015,
    1435,  1438,    -1,   146,  1470,    -1,  1319,    -1,   143,  1324,
    1180,    -1,    -1,   144,  1343,  1512,  1342,  1340,  1106,    -1,
     144,   235,  1471,   378,  1463,  1099,    -1,   144,   108,  1342,
    1471,    -1,   144,   200,  1342,  1471,   735,  1471,    -1,   144,
     200,  1342,  1471,    -1,   144,   708,   212,  1471,  1613,    -1,
     144,   420,  1342,   804,    -1,   144,   612,  1342,  1539,    -1,
     144,   628,  1342,  1340,  1106,    -1,   144,   167,  1342,   804,
      -1,   144,   587,  1342,   804,    -1,   144,   564,  1471,  1344,
      -1,   144,   286,   212,  1471,  1344,    -1,   144,   499,  1342,
    1474,    -1,   144,   519,   717,   709,  1342,  1316,    -1,   144,
     654,  1342,  1540,    -1,  1463,    -1,  1340,   734,  1463,    -1,
    1464,    -1,  1341,   734,  1464,    -1,    -1,   230,   171,    -1,
      -1,   569,    -1,    -1,  1345,    -1,  1346,    -1,  1345,   969,
    1346,    -1,   929,    -1,   931,    -1,   241,  1349,  1105,  1351,
    1463,  1253,  1352,  1365,    -1,   241,  1349,  1105,  1351,  1463,
    1253,   501,  1368,  1365,    -1,   241,  1349,  1105,  1351,  1463,
    1253,  1353,  1365,    -1,   456,  1350,  1351,  1463,  1253,  1352,
      -1,   456,  1350,  1351,  1463,  1253,   501,  1368,    -1,   456,
    1350,  1351,  1463,  1253,  1353,    -1,    -1,   293,    -1,   128,
      -1,   220,    -1,  1370,    -1,   128,    -1,    -1,   246,    -1,
    1355,    -1,   729,   730,  1355,    -1,   729,  1354,   730,  1355,
      -1,  1356,    -1,   729,   730,  1356,    -1,   729,  1354,   730,
    1356,    -1,  1354,   734,  1457,    -1,  1457,    -1,  1357,  1358,
      -1,  1161,    -1,  1163,    -1,   621,    -1,   620,    -1,  1358,
     734,  1361,    -1,  1361,    -1,   160,    -1,   502,    -1,    -1,
    1359,    -1,   729,  1362,   730,    -1,    -1,  1363,    -1,  1363,
     734,  1364,    -1,  1364,    -1,  1184,    -1,   125,    -1,    -1,
     378,   147,   263,   609,  1368,    -1,  1367,   609,  1370,  1105,
    1169,   501,  1368,  1287,  1304,  1312,    -1,    -1,  1290,    -1,
    1368,   734,  1369,    -1,  1369,    -1,  1461,  1359,  1364,    -1,
      -1,   293,    -1,  1367,   130,  1373,   197,  1463,  1253,  1287,
    1304,  1312,    -1,  1367,   130,  1373,  1341,   197,  1169,  1287,
      -1,  1367,   130,  1373,   197,  1341,   615,  1169,  1287,    -1,
      -1,   735,   723,    -1,    -1,  1374,  1373,    -1,   429,    -1,
     293,    -1,   231,    -1,   590,  1376,  1463,    -1,    -1,   566,
      -1,    -1,  1378,    -1,  1379,    -1,  1378,   734,  1379,    -1,
      98,    -1,   332,    -1,    43,   252,    -1,    94,   561,    -1,
     396,   181,    -1,   253,    -1,   560,    -1,   518,    -1,    13,
      -1,    -1,   194,   428,   373,    -1,    -1,   506,  1382,  1383,
      -1,   109,  1397,    -1,  1392,   563,  1389,  1397,    -1,  1390,
     586,  1389,  1397,    -1,   166,  1389,  1397,    -1,   566,   543,
    1389,  1397,    -1,   381,   563,  1389,  1396,    -1,   408,    -1,
     158,  1474,  1386,    -1,   158,    13,  1386,    -1,  1392,    73,
    1393,  1463,  1389,  1397,    -1,  1387,   287,    -1,   511,   222,
      -1,    -1,    36,   166,  1394,  1395,  1384,  1308,    -1,    -1,
     444,   166,  1394,  1395,  1385,  1308,   779,    -1,  1391,  1037,
    1393,  1463,  1389,  1288,    -1,  1388,   157,    -1,    97,   729,
     723,   730,   631,    -1,    97,   729,   723,   730,   163,    -1,
     631,  1308,    -1,   163,  1308,    -1,   424,    -1,   423,  1377,
    1380,  1308,    -1,  1495,   543,  1397,    -1,  1390,   422,    -1,
    1495,   624,  1397,    -1,  1013,  1397,    -1,    72,  1397,    -1,
     419,    -1,   211,    -1,   211,   194,  1476,    -1,   211,   194,
    1476,   615,  1539,    -1,    99,   108,   966,  1471,    -1,    99,
     566,  1463,    -1,    99,   628,  1463,    -1,   316,   543,    -1,
     511,   543,   779,    -1,    99,   420,   804,    -1,    99,   200,
     804,    -1,    99,   587,   804,    -1,   420,   543,  1397,    -1,
     200,   543,  1397,    -1,   420,    70,   804,    -1,   200,    70,
     804,    -1,    99,   167,   804,    -1,    99,   612,  1476,    -1,
     543,    -1,   350,    -1,   287,    -1,   316,    -1,    35,    -1,
      -1,   547,    -1,    -1,  1393,  1471,    -1,    -1,   198,    -1,
      -1,   176,    -1,    -1,   198,    -1,   176,    -1,   176,   198,
      -1,   197,    -1,   249,    -1,    -1,   249,  1468,    -1,    -1,
     197,  1315,    -1,    -1,   275,  1468,    -1,   635,  1184,    -1,
      -1,   275,  1469,    -1,   635,  1184,    -1,  1401,  1463,  1403,
      -1,  1401,  1402,  1400,    -1,  1159,    -1,  1347,    -1,  1348,
      -1,  1366,    -1,  1371,    -1,   194,    87,  1314,    -1,   131,
      -1,   132,    -1,    -1,   195,   160,  1474,    -1,    -1,  1451,
      -1,  1471,    -1,    -1,   190,  1143,  1405,  1406,    -1,    -1,
    1512,  1412,  1407,  1408,    -1,  1410,    -1,    -1,   637,   433,
     285,    -1,    -1,   194,  1409,   175,    -1,  1410,   734,  1411,
      -1,  1411,    -1,   162,   287,    -1,   158,   287,    -1,   202,
     287,    -1,   512,   287,    -1,    35,   287,    -1,   443,   287,
     779,    -1,   222,    -1,   419,    -1,   287,    -1,   543,    -1,
     468,    -1,   383,    -1,    -1,  1340,    -1,    -1,   466,  1414,
    1415,    -1,   466,   653,  1416,    -1,  1415,   734,  1417,    -1,
    1417,    -1,    -1,  1342,  1471,    -1,    -1,   511,  1418,  1420,
     779,    -1,    -1,   316,  1419,  1421,    -1,    -1,    13,    -1,
      -1,   583,  1314,    -1,    -1,   426,  1423,  1424,    -1,  1387,
     287,  1425,    -1,   583,  1468,    -1,    31,  1184,    -1,   264,
    1427,  1184,    -1,    -1,    87,    -1,   428,    -1,   614,  1471,
      -1,   281,  1430,  1432,  1431,   236,  1470,  1433,   246,   566,
    1463,  1253,  1015,  1441,  1435,  1438,  1442,  1444,  1447,    -1,
     111,    -1,   647,    -1,    -1,   282,    -1,    -1,    85,    -1,
     293,    -1,    -1,  1434,    -1,   456,    -1,   231,    -1,    -1,
      73,  1436,    -1,  1436,  1437,    -1,  1437,    -1,   571,    48,
    1451,    -1,   386,   153,    48,  1451,    -1,   153,    48,  1451,
      -1,   164,    48,  1451,    -1,    -1,   278,  1439,    -1,  1439,
    1440,    -1,  1440,    -1,   571,    48,  1451,    -1,   537,    48,
    1451,    -1,    -1,   482,   228,    48,  1451,    -1,    -1,   231,
     373,  1443,    -1,   278,    -1,   482,    -1,    -1,   729,  1445,
     730,    -1,   729,   730,    -1,  1445,   734,  1446,    -1,  1446,
      -1,  1461,    -1,   733,  1474,    -1,    -1,   501,  1448,    -1,
    1448,   734,  1449,    -1,  1449,    -1,  1461,  1359,  1364,    -1,
     572,    -1,   356,    -1,   597,   572,    -1,  1450,  1469,    -1,
    1469,    -1,   219,    -1,    37,    -1,   397,    -1,  1454,    -1,
     722,  1455,    -1,   721,  1455,    -1,  1450,    -1,  1455,    -1,
    1456,    -1,   372,    -1,   179,    -1,   589,    -1,   219,    -1,
      37,    -1,   597,   219,    -1,   597,    37,    -1,   373,    -1,
     290,    -1,   594,    -1,   122,    -1,   188,    -1,   115,   572,
      -1,   579,   572,    -1,   576,   572,    -1,  1461,    -1,  1458,
      -1,  1471,   735,   723,    -1,  1471,   735,  1471,   735,   723,
      -1,  1184,  1307,    -1,  1471,    -1,  1462,    -1,  1471,    -1,
    1462,    -1,  1471,   735,  1471,    -1,  1471,   735,  1471,   735,
    1471,    -1,  1471,    -1,  1471,   735,  1471,    -1,  1471,  1372,
      -1,  1471,   735,  1471,  1372,    -1,   227,    -1,   229,    -1,
    1468,    -1,  1466,    -1,   572,    -1,   572,    -1,   572,    -1,
    1465,    -1,  1478,    -1,  1465,    -1,  1482,    -1,  1465,    -1,
    1480,    -1,  1471,    -1,  1468,    -1,   274,    -1,  1472,    -1,
    1468,    -1,   274,    -1,  1474,    -1,  1474,   733,  1474,    -1,
     104,  1183,    -1,  1475,    -1,  1475,   733,  1474,    -1,  1480,
      -1,  1479,    -1,   170,    -1,   713,    -1,   507,    -1,     5,
      -1,    15,    -1,    23,    -1,    30,    -1,    32,    -1,    49,
      -1,    50,    -1,    61,    -1,    63,    -1,   676,    -1,    68,
      -1,    77,    -1,    79,    -1,    93,    -1,   121,    -1,   143,
      -1,   154,    -1,   190,    -1,   191,    -1,   195,    -1,   204,
      -1,   215,    -1,   218,    -1,   221,    -1,   233,    -1,   244,
      -1,   656,    -1,   265,    -1,   369,    -1,   381,    -1,   384,
      -1,   394,    -1,   398,    -1,   411,    -1,   413,    -1,   415,
      -1,   450,    -1,   453,    -1,   466,    -1,   469,    -1,   654,
      -1,   478,    -1,   487,    -1,   492,    -1,   499,    -1,   509,
      -1,   511,    -1,   515,    -1,   516,    -1,   539,    -1,   546,
      -1,   590,    -1,   601,    -1,   602,    -1,   610,    -1,   657,
      -1,   642,    -1,   645,    -1,  1481,    -1,   167,    -1,   183,
      -1,   365,    -1,   421,    -1,   425,    -1,   449,    -1,   457,
      -1,   708,    -1,   558,    -1,     6,    -1,     8,    -1,     9,
      -1,    10,    -1,    11,    -1,    12,    -1,    20,    -1,    25,
      -1,    26,    -1,    27,    -1,    28,    -1,    29,    -1,    36,
      -1,    40,    -1,    43,    -1,    44,    -1,    45,    -1,    47,
      -1,   674,    -1,    53,    -1,    56,    -1,    57,    -1,    59,
      -1,    60,    -1,    65,    -1,    66,    -1,    67,    -1,    69,
      -1,    70,    -1,    72,    -1,    75,    -1,    76,    -1,    73,
      -1,    78,    -1,    80,    -1,    81,    -1,   659,    -1,    82,
      -1,    83,    -1,    85,    -1,    87,    -1,    88,    -1,    90,
      -1,    91,    -1,    92,    -1,    94,    -1,    98,    -1,    84,
      -1,   103,    -1,   106,    -1,   110,    -1,   111,    -1,   115,
      -1,   112,    -1,   120,    -1,   126,    -1,   127,    -1,   714,
      -1,   129,    -1,   715,    -1,   135,    -1,   136,    -1,   137,
      -1,   138,    -1,   139,    -1,   146,    -1,   147,    -1,   148,
      -1,   152,    -1,   155,    -1,   157,    -1,   158,    -1,   159,
      -1,   163,    -1,   162,    -1,   165,    -1,   166,    -1,   168,
      -1,   169,    -1,   679,    -1,   173,    -1,   174,    -1,   175,
      -1,   176,    -1,   177,    -1,   180,    -1,   181,    -1,   184,
      -1,   185,    -1,   186,    -1,   187,    -1,   681,    -1,   196,
      -1,   198,    -1,   202,    -1,   205,    -1,   206,    -1,   207,
      -1,   712,    -1,   209,    -1,   211,    -1,   216,    -1,   673,
      -1,   704,    -1,   222,    -1,   226,    -1,   228,    -1,   232,
      -1,   234,    -1,   237,    -1,   242,    -1,   243,    -1,   248,
      -1,   252,    -1,   253,    -1,   255,    -1,   256,    -1,   260,
      -1,   262,    -1,   266,    -1,   269,    -1,   272,    -1,   273,
      -1,   279,    -1,   280,    -1,   282,    -1,   669,    -1,   284,
      -1,   286,    -1,   287,    -1,   295,    -1,   297,    -1,   298,
      -1,   318,    -1,   299,    -1,   300,    -1,   301,    -1,   302,
      -1,   303,    -1,   711,    -1,   304,    -1,   305,    -1,   306,
      -1,   308,    -1,   309,    -1,   310,    -1,   312,    -1,   311,
      -1,   313,    -1,   314,    -1,   316,    -1,   307,    -1,   317,
      -1,   320,    -1,   321,    -1,   322,    -1,   323,    -1,   325,
      -1,   326,    -1,   331,    -1,   332,    -1,   333,    -1,   334,
      -1,   335,    -1,   336,    -1,   340,    -1,   339,    -1,   342,
      -1,   344,    -1,   346,    -1,   347,    -1,   348,    -1,   349,
      -1,   350,    -1,   351,    -1,   352,    -1,   353,    -1,   354,
      -1,   357,    -1,   358,    -1,   701,    -1,   361,    -1,   362,
      -1,   363,    -1,   364,    -1,   370,    -1,   670,    -1,   688,
      -1,   374,    -1,   376,    -1,   377,    -1,   379,    -1,   380,
      -1,   702,    -1,   716,    -1,   689,    -1,   395,    -1,   396,
      -1,   400,    -1,   403,    -1,   402,    -1,   404,    -1,   703,
      -1,   405,    -1,   406,    -1,   408,    -1,   407,    -1,   409,
      -1,   410,    -1,   692,    -1,   416,    -1,   417,    -1,   419,
      -1,   422,    -1,   424,    -1,   423,    -1,   427,    -1,   428,
      -1,   429,    -1,   432,    -1,   436,    -1,   437,    -1,   439,
      -1,   440,    -1,   717,    -1,   443,    -1,   445,    -1,   446,
      -1,   444,    -1,   447,    -1,   675,    -1,   452,    -1,   454,
      -1,   458,    -1,   460,    -1,   459,    -1,   461,    -1,   464,
      -1,   462,    -1,   463,    -1,   468,    -1,   694,    -1,   471,
      -1,   472,    -1,   473,    -1,   705,    -1,   475,    -1,   479,
      -1,   480,    -1,   481,    -1,   485,    -1,   483,    -1,   486,
      -1,   488,    -1,   489,    -1,   491,    -1,   496,    -1,   497,
      -1,   498,    -1,   503,    -1,   510,    -1,   668,    -1,   512,
      -1,   514,    -1,   517,    -1,   518,    -1,   524,    -1,   525,
      -1,   526,    -1,   528,    -1,   531,    -1,   534,    -1,   706,
      -1,   536,    -1,   538,    -1,   540,    -1,   541,    -1,   542,
      -1,   543,    -1,   547,    -1,   550,    -1,   551,    -1,   552,
      -1,   553,    -1,   554,    -1,   555,    -1,   559,    -1,   560,
      -1,   561,    -1,   567,    -1,   568,    -1,   563,    -1,   564,
      -1,   569,    -1,   570,    -1,   573,    -1,   574,    -1,   707,
      -1,   696,    -1,   577,    -1,   578,    -1,   576,    -1,   579,
      -1,   585,    -1,   586,    -1,   591,    -1,   592,    -1,   593,
      -1,   697,    -1,   595,    -1,   596,    -1,   599,    -1,   598,
      -1,   605,    -1,   608,    -1,   613,    -1,   612,    -1,   619,
      -1,   621,    -1,   624,    -1,   710,    -1,   628,    -1,   630,
      -1,   631,    -1,   632,    -1,   633,    -1,   640,    -1,   641,
      -1,   644,    -1,   646,    -1,   647,    -1,   650,    -1,  1481,
      -1,  1479,    -1,   501,  1484,    -1,  1499,  1491,    -1,   585,
    1501,    -1,  1494,  1490,    -1,   404,  1359,  1508,    -1,   404,
     194,  1476,  1359,  1508,    -1,   501,   654,  1540,    -1,   501,
     654,   365,    -1,   501,   654,   125,    -1,   501,   125,   654,
    1540,   583,  1540,    -1,   501,   125,   654,   365,   583,  1540,
      -1,   501,   125,   654,    13,   583,  1540,    -1,   501,   654,
      13,  1486,    -1,    -1,   658,  1540,    -1,   501,   708,   212,
    1471,    -1,   501,   708,   212,  1471,   194,  1489,    -1,  1314,
      -1,  1488,   969,  1314,    -1,  1488,    -1,  1498,  1491,    -1,
     585,  1501,    -1,    -1,   734,  1492,    -1,  1493,    -1,  1492,
     734,  1493,    -1,  1494,  1498,    -1,  1499,    -1,   209,    -1,
     653,    -1,   672,    -1,   282,    -1,   498,    -1,    -1,   209,
      -1,   282,    -1,   498,    -1,    -1,   209,   735,    -1,   282,
     735,    -1,   498,   735,    -1,    -1,   653,   735,    -1,   672,
     735,    -1,   209,   735,    -1,   282,   735,    -1,   498,   735,
      -1,  1500,  1359,  1509,    -1,  1500,  1359,  1509,    -1,   733,
    1474,  1359,  1184,    -1,   733,   733,  1497,  1500,  1359,  1509,
      -1,  1013,  1017,    -1,   352,  1359,  1184,    -1,   352,  1014,
    1019,    -1,   352,   125,    -1,  1471,    -1,  1471,   735,  1471,
      -1,   125,   735,  1471,    -1,  1502,  1505,    -1,  1504,  1503,
      -1,  1506,    -1,    -1,   734,  1502,    -1,   255,   273,  1507,
      -1,    -1,   734,  1504,    -1,   433,   380,    -1,   433,   643,
      -1,   433,   595,    -1,   433,    78,    -1,   454,   433,    -1,
     496,    -1,   572,    -1,  1184,    -1,   125,    -1,   378,    -1,
      13,    -1,    35,    -1,   484,    -1,   709,    -1,    -1,   285,
    1512,  1511,  1513,    -1,   285,   243,   194,    30,    -1,   566,
      -1,   563,    -1,  1514,    -1,  1513,   734,  1514,    -1,  1463,
    1285,  1515,    -1,   433,    -1,   643,    -1,   293,   643,    -1,
     433,   282,    -1,    -1,   606,  1517,  1512,    -1,   606,   243,
      -1,   507,    -1,   713,    -1,    14,   243,  1521,    -1,   480,
    1474,   316,   263,    -1,   215,  1463,   381,  1285,    -1,   215,
    1471,    68,    -1,   215,  1471,   433,  1523,  1287,  1308,    -1,
     215,  1471,   433,  1471,  1524,  1287,  1308,    -1,   215,  1471,
     433,  1471,  1525,   729,  1363,   730,  1287,  1308,    -1,   186,
      -1,   363,    -1,   186,    -1,   363,    -1,   417,    -1,   266,
      -1,   160,    -1,   201,    -1,   267,    -1,   214,    -1,   294,
      -1,   476,  1532,   197,  1539,    -1,   476,  1532,   378,  1530,
    1538,   197,  1539,    -1,    -1,   476,    13,  1531,  1527,   378,
    1530,  1538,   197,  1539,    -1,   476,    13,  1531,   734,   210,
     385,   197,  1539,    -1,   476,   425,   378,  1476,   197,  1539,
      -1,   210,  1532,   583,  1539,  1534,    -1,   210,  1532,   378,
    1530,  1538,   583,  1539,  1546,    -1,    -1,   210,    13,  1531,
    1529,   378,  1530,  1538,   583,  1539,  1546,    -1,   210,   425,
     378,  1476,   583,  1539,  1547,    -1,    -1,   566,    -1,   200,
      -1,   420,    -1,    -1,   419,    -1,  1533,    -1,  1532,   734,
    1533,    -1,  1475,  1543,    -1,  1475,   733,  1474,    -1,   493,
    1543,    -1,   241,  1543,    -1,   609,  1543,    -1,   441,  1543,
      -1,   130,    -1,   611,    -1,   235,    -1,    14,    -1,    99,
      -1,   144,    -1,   170,    -1,   449,    -1,   507,    -1,   421,
      -1,   183,    -1,   210,   385,    -1,   506,   109,    -1,   558,
      -1,    99,   569,   563,    -1,   285,   563,    -1,   457,   511,
      -1,   457,    67,    -1,    99,   628,    -1,   506,   628,    -1,
      99,   481,    -1,    14,   481,    -1,    99,   612,    -1,   167,
      -1,   587,    -1,    99,   564,    -1,    99,   654,    -1,   144,
     654,    -1,    -1,   637,   655,   385,    -1,    -1,    19,    -1,
    1537,  1535,  1536,    -1,  1537,    -1,   553,   572,    -1,   256,
     572,    -1,    65,   572,    -1,   723,    -1,  1471,   735,   723,
      -1,   723,   735,   723,    -1,  1463,    -1,  1476,    -1,  1539,
     734,  1476,    -1,  1477,    -1,  1540,   734,  1477,    -1,  1542,
      -1,  1541,   734,  1542,    -1,  1476,   228,    48,   572,    -1,
    1476,   228,   637,  1474,    -1,  1476,   228,   637,  1474,    21,
    1468,    -1,  1476,   228,   637,  1474,    48,  1468,    -1,  1476,
      -1,    -1,   729,  1544,   730,    -1,  1471,    -1,  1544,   734,
    1471,    -1,    -1,   465,  1536,    -1,   465,   535,    -1,   465,
     644,    -1,   465,   365,    -1,    -1,   637,   210,   385,    -1,
      -1,   637,   210,   385,    -1,    -1,    32,  1549,  1550,    -1,
      -1,   641,    -1,    -1,    19,   369,    57,    -1,    19,    57,
      -1,    -1,   448,    -1,   369,   448,    -1,    -1,   487,    -1,
      79,  1550,  1551,  1552,    -1,   478,  1550,  1551,  1552,    -1,
     478,  1550,   583,  1553,  1471,    -1,   487,  1471,    -1,   448,
     487,  1471,    -1,    -1,   140,    -1,    13,    -1,  1561,    -1,
    1561,    -1,  1163,    -1,   549,    -1,   220,    -1,   140,    -1,
     532,    -1,   527,    -1,   528,    -1,   530,    -1,    13,    -1,
      -1,  1569,  1563,  1565,    -1,  1568,  1563,  1566,    -1,  1570,
    1567,  1563,  1574,    -1,  1574,    -1,  1580,    -1,  1588,    -1,
    1583,    -1,   791,    -1,  1574,    -1,  1580,    -1,  1588,    -1,
    1583,    -1,  1582,    -1,   791,    -1,  1568,    -1,  1569,    -1,
      -1,   127,   160,  1476,    -1,  1571,    -1,  1571,  1572,    -1,
    1572,    -1,   390,   456,    -1,    12,   160,   596,    -1,    12,
     160,   333,    -1,    12,   160,   570,    -1,    -1,   533,   492,
     127,    -1,   533,   492,   248,    -1,    -1,  1573,   628,  1463,
    1293,  1575,    21,  1576,    -1,  1356,  1577,    -1,    -1,   637,
      64,   385,    -1,   637,    53,    64,   385,    -1,   637,   282,
      64,   385,    -1,   191,    -1,   413,    -1,    -1,  1578,  1474,
      -1,    -1,   587,   804,   904,   905,   378,  1463,   194,   149,
     484,  1579,  1581,   853,    -1,    11,   200,  1471,   473,   976,
     516,  1468,    -1,   200,  1471,   473,   976,   516,  1468,    -1,
      -1,    -1,    -1,    -1,   200,   804,   729,  1584,   812,   730,
    1585,   473,   987,  1019,  1586,   806,  1587,   853,    -1,    -1,
      -1,    -1,    -1,   420,   804,  1589,   729,  1590,   815,   730,
    1591,   806,  1592,   853,    -1,   645,  1596,  1595,  1597,    -1,
     645,   154,  1595,  1599,    -1,   645,   415,  1595,    -1,   645,
      79,  1595,  1598,    -1,   645,   478,  1595,    -1,   645,   437,
    1594,    -1,    -1,    96,   646,    -1,  1451,    -1,  1451,   734,
    1451,    -1,  1451,   734,  1451,   734,  1313,    -1,    32,    -1,
     539,    -1,    -1,   258,    -1,   471,    -1,    -1,   379,   405,
      -1,    -1,   559,    -1,   559,   194,   336,    -1,   244,   407,
    1471,   516,  1468,    -1,   244,   659,  1602,    -1,   602,   407,
    1471,    -1,   602,   659,  1602,    -1,  1468,    -1,  1602,   734,
    1468,    -1,   233,   566,   197,  1602,    -1,   676,   282,   111,
     136,  1360,  1470,    -1,   676,   675,  1605,   111,   136,  1360,
    1470,    -1,    -1,   194,   457,    -1,   612,    -1,   709,    -1,
      -1,   710,  1360,  1608,    -1,  1609,    -1,  1608,   969,  1609,
      -1,   373,    -1,   373,   721,   373,    -1,   373,    -1,   721,
     373,    -1,    -1,   707,  1360,  1610,    -1,    -1,   152,    -1,
     137,    -1,    -1,   192,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1903,  1903,  1904,  1909,  1919,  1937,  1944,  1957,  1956,
    1981,  1988,  1990,  1994,  1995,  2000,  2001,  2002,  2003,  2004,
    2005,  2006,  2007,  2008,  2009,  2010,  2011,  2012,  2013,  2014,
    2015,  2016,  2017,  2018,  2019,  2020,  2021,  2022,  2023,  2024,
    2025,  2026,  2027,  2028,  2029,  2030,  2031,  2032,  2033,  2034,
    2035,  2036,  2037,  2038,  2039,  2040,  2041,  2042,  2043,  2044,
    2045,  2046,  2047,  2048,  2049,  2050,  2051,  2052,  2053,  2054,
    2055,  2056,  2057,  2058,  2059,  2060,  2061,  2062,  2063,  2064,
    2065,  2066,  2067,  2068,  2069,  2070,  2071,  2072,  2073,  2074,
    2075,  2076,  2077,  2078,  2079,  2080,  2081,  2082,  2083,  2084,
    2085,  2086,  2087,  2088,  2092,  2102,  2103,  2107,  2127,  2134,
    2145,  2144,  2155,  2157,  2161,  2162,  2166,  2179,  2178,  2198,
    2197,  2211,  2210,  2225,  2226,  2229,  2236,  2243,  2250,  2257,
    2264,  2272,  2281,  2287,  2294,  2301,  2309,  2318,  2324,  2330,
    2338,  2346,  2352,  2359,  2366,  2374,  2386,  2392,  2399,  2406,
    2414,  2424,  2425,  2429,  2433,  2437,  2441,  2451,  2455,  2459,
    2464,  2475,  2480,  2484,  2488,  2492,  2496,  2500,  2504,  2509,
    2513,  2517,  2521,  2527,  2561,  2566,  2573,  2576,  2578,  2579,
    2583,  2589,  2593,  2609,  2613,  2624,  2628,  2643,  2653,  2663,
    2668,  2676,  2683,  2696,  2695,  2710,  2712,  2724,  2744,  2763,
    2780,  2785,  2794,  2799,  2811,  2823,  2837,  2853,  2857,  2864,
    2873,  2881,  2892,  2893,  2897,  2901,  2905,  2909,  2913,  2918,
    2922,  2930,  2929,  2961,  2960,  2969,  2978,  2979,  2985,  2991,
    3001,  3007,  3015,  3017,  3026,  3027,  3031,  3037,  3046,  3047,
    3055,  3055,  3113,  3114,  3115,  3116,  3117,  3118,  3119,  3120,
    3121,  3122,  3123,  3124,  3125,  3129,  3143,  3162,  3163,  3167,
    3168,  3173,  3175,  3177,  3179,  3181,  3183,  3185,  3191,  3192,
    3193,  3197,  3201,  3208,  3215,  3216,  3223,  3225,  3229,  3230,
    3234,  3284,  3286,  3290,  3291,  3295,  3344,  3345,  3346,  3347,
    3351,  3352,  3356,  3357,  3362,  3365,  3389,  3487,  3505,  3504,
    3583,  3579,  3655,  3656,  3661,  3663,  3668,  3691,  3702,  3706,
    3728,  3729,  3733,  3737,  3750,  3756,  3762,  3771,  3784,  3810,
    3816,  3817,  3823,  3824,  3829,  3835,  3848,  3850,  3870,  3876,
    3878,  3880,  3882,  3884,  3886,  3888,  3890,  3892,  3894,  3896,
    3898,  3903,  3917,  3934,  3935,  3937,  3942,  3948,  3957,  3963,
    3972,  3980,  4008,  4016,  4018,  4027,  4032,  4038,  4047,  4055,
    4057,  4059,  4061,  4063,  4065,  4067,  4069,  4071,  4073,  4075,
    4077,  4079,  4084,  4104,  4128,  4132,  4140,  4141,  4142,  4143,
    4144,  4145,  4146,  4147,  4148,  4149,  4150,  4151,  4152,  4157,
    4156,  4167,  4167,  4227,  4226,  4283,  4283,  4305,  4362,  4409,
    4433,  4432,  4457,  4479,  4481,  4482,  4486,  4504,  4525,  4533,
    4571,  4525,  4599,  4601,  4602,  4606,  4607,  4612,  4622,  4611,
    4674,  4673,  4687,  4688,  4692,  4693,  4698,  4706,  4697,  4756,
    4764,  4755,  4810,  4823,  4828,  4827,  4865,  4866,  4871,  4870,
    4904,  4904,  4923,  4922,  4970,  4985,  4993,  4984,  5051,  5059,
    5048,  5101,  5103,  5108,  5110,  5112,  5127,  5128,  5135,  5136,
    5140,  5146,  5155,  5156,  5157,  5158,  5159,  5160,  5161,  5162,
    5163,  5167,  5168,  5172,  5178,  5187,  5188,  5189,  5190,  5191,
    5195,  5196,  5200,  5206,  5215,  5216,  5217,  5218,  5219,  5220,
    5221,  5225,  5226,  5230,  5236,  5245,  5246,  5247,  5251,  5255,
    5259,  5266,  5273,  5280,  5287,  5294,  5301,  5308,  5315,  5322,
    5329,  5333,  5340,  5341,  5416,  5422,  5426,  5431,  5436,  5442,
    5450,  5460,  5461,  5475,  5483,  5487,  5491,  5495,  5499,  5503,
    5510,  5511,  5516,  5517,  5535,  5536,  5548,  5549,  5554,  5563,
    5564,  5569,  5575,  5585,  5586,  5598,  5599,  5603,  5609,  5618,
    5627,  5630,  5635,  5643,  5644,  5648,  5652,  5659,  5666,  5676,
    5675,  5693,  5699,  5708,  5709,  5714,  5715,  5719,  5725,  5734,
    5741,  5742,  5746,  5752,  5761,  5763,  5765,  5767,  5769,  5771,
    5773,  5775,  5784,  5785,  5789,  5790,  5794,  5799,  5807,  5808,
    5812,  5818,  5827,  5833,  5841,  5843,  5847,  5851,  5855,  5859,
    5863,  5867,  5871,  5875,  5879,  5883,  5887,  5891,  5895,  5912,
    5916,  5920,  5924,  5928,  5932,  5936,  5940,  5944,  5948,  5952,
    5956,  5960,  5964,  5968,  5972,  5979,  5993,  5997,  6001,  6005,
    6006,  6007,  6008,  6009,  6010,  6014,  6015,  6016,  6020,  6021,
    6022,  6023,  6027,  6033,  6042,  6043,  6047,  6054,  6055,  6064,
    6072,  6078,  6084,  6089,  6099,  6107,  6114,  6126,  6127,  6131,
    6135,  6156,  6158,  6162,  6163,  6164,  6168,  6172,  6176,  6180,
    6184,  6188,  6192,  6196,  6201,  6206,  6215,  6224,  6228,  6232,
    6237,  6246,  6250,  6266,  6270,  6274,  6278,  6282,  6286,  6290,
    6291,  6295,  6299,  6303,  6308,  6313,  6318,  6323,  6328,  6332,
    6336,  6341,  6345,  6352,  6354,  6356,  6358,  6360,  6362,  6364,
    6366,  6371,  6372,  6376,  6377,  6381,  6382,  6383,  6384,  6385,
    6389,  6390,  6391,  6392,  6393,  6397,  6402,  6406,  6408,  6412,
    6413,  6414,  6415,  6420,  6424,  6429,  6433,  6442,  6443,  6447,
    6448,  6449,  6457,  6458,  6462,  6467,  6471,  6472,  6473,  6477,
    6478,  6479,  6480,  6483,  6484,  6489,  6493,  6497,  6498,  6502,
    6508,  6518,  6522,  6526,  6530,  6534,  6538,  6542,  6546,  6550,
    6554,  6558,  6562,  6566,  6570,  6582,  6583,  6584,  6588,  6589,
    6590,  6594,  6600,  6604,  6608,  6609,  6613,  6623,  6627,  6628,
    6632,  6641,  6645,  6646,  6650,  6658,  6659,  6663,  6664,  6669,
    6670,  6671,  6675,  6683,  6688,  6697,  6701,  6706,  6711,  6716,
    6723,  6728,  6738,  6739,  6744,  6743,  6755,  6757,  6761,  6776,
    6777,  6781,  6788,  6798,  6799,  6800,  6801,  6806,  6810,  6815,
    6820,  6826,  6835,  6836,  6837,  6838,  6839,  6843,  6844,  6848,
    6849,  6853,  6854,  6858,  6859,  6860,  6864,  6865,  6869,  6870,
    6874,  6880,  6889,  6890,  6904,  6905,  6909,  6915,  6924,  6928,
    6929,  6933,  6939,  6948,  6949,  6954,  6955,  6959,  6983,  6984,
    6985,  6989,  6990,  6994,  6995,  6999,  7000,  7001,  7005,  7011,
    7021,  7027,  7043,  7044,  7048,  7049,  7053,  7059,  7071,  7081,
    7095,  7094,  7115,  7114,  7136,  7135,  7157,  7156,  7175,  7169,
    7192,  7191,  7227,  7249,  7268,  7288,  7299,  7310,  7312,  7319,
    7331,  7343,  7357,  7367,  7376,  7377,  7381,  7382,  7386,  7392,
    7398,  7406,  7421,  7429,  7437,  7444,  7451,  7458,  7468,  7469,
    7473,  7474,  7478,  7484,  7490,  7496,  7505,  7519,  7520,  7521,
    7522,  7526,  7527,  7539,  7540,  7544,  7545,  7549,  7550,  7565,
    7570,  7578,  7582,  7590,  7594,  7599,  7600,  7609,  7613,  7624,
    7628,  7632,  7636,  7640,  7645,  7650,  7655,  7660,  7667,  7671,
    7675,  7679,  7684,  7689,  7694,  7702,  7703,  7707,  7711,  7718,
    7719,  7727,  7734,  7739,  7743,  7748,  7759,  7760,  7768,  7772,
    7776,  7780,  7784,  7788,  7793,  7797,  7801,  7805,  7809,  7813,
    7817,  7821,  7825,  7829,  7833,  7837,  7841,  7845,  7852,  7857,
    7862,  7870,  7871,  7876,  7881,  7887,  7896,  7900,  7904,  7919,
    7923,  7927,  7943,  7945,  7949,  7950,  7954,  7955,  7956,  7960,
    7961,  7962,  7966,  7967,  7968,  7969,  7973,  7978,  7986,  7987,
    7997,  8013,  8011,  8033,  8050,  8053,  8060,  8064,  8071,  8075,
    8079,  8086,  8091,  8094,  8101,  8104,  8111,  8114,  8121,  8124,
    8132,  8135,  8142,  8146,  8153,  8157,  8165,  8169,  8194,  8195,
    8196,  8201,  8206,  8213,  8227,  8228,  8229,  8233,  8242,  8243,
    8247,  8248,  8256,  8257,  8258,  8262,  8272,  8273,  8292,  8297,
    8304,  8314,  8322,  8330,  8331,  8335,  8336,  8344,  8346,  8348,
    8350,  8352,  8354,  8359,  8366,  8367,  8368,  8373,  8372,  8378,
    8385,  8390,  8398,  8399,  8403,  8416,  8420,  8429,  8435,  8444,
    8451,  8452,  8456,  8461,  8468,  8474,  8483,  8490,  8497,  8498,
    8508,  8509,  8513,  8517,  8523,  8559,  8563,  8608,  8615,  8623,
    8632,  8642,  8650,  8659,  8670,  8674,  8678,  8687,  8701,  8719,
    8720,  8740,  8748,  8769,  8792,  8793,  8797,  8801,  8802,  8806,
    8812,  8822,  8825,  8829,  8834,  8838,  8842,  8851,  8852,  8856,
    8862,  8871,  8875,  8879,  8886,  8887,  8891,  8895,  8896,  8900,
    8901,  8905,  8911,  8917,  8927,  8928,  8936,  8937,  8938,  8939,
    8940,  8944,  8945,  8950,  8956,  8961,  8967,  8971,  8975,  8979,
    8983,  8987,  8991,  8995,  8999,  9003,  9007,  9011,  9024,  9028,
    9032,  9037,  9041,  9048,  9052,  9059,  9063,  9067,  9075,  9079,
    9086,  9094,  9102,  9106,  9110,  9114,  9118,  9122,  9126,  9130,
    9134,  9138,  9142,  9146,  9150,  9154,  9158,  9162,  9166,  9167,
    9171,  9172,  9176,  9177,  9181,  9182,  9186,  9187,  9188,  9189,
    9190,  9191,  9192,  9196,  9197,  9201,  9202,  9203,  9204,  9205,
    9206,  9210,  9211,  9212,  9213,  9214,  9215,  9219,  9223,  9227,
    9231,  9235,  9239,  9240,  9244,  9248,  9252,  9256,  9260,  9264,
    9268,  9272,  9276,  9280,  9284,  9288,  9293,  9300,  9317,  9321,
    9325,  9329,  9333,  9337,  9341,  9345,  9349,  9353,  9357,  9361,
    9365,  9369,  9373,  9377,  9381,  9385,  9390,  9395,  9400,  9404,
    9408,  9412,  9416,  9421,  9425,  9444,  9448,  9452,  9456,  9460,
    9465,  9470,  9474,  9478,  9483,  9487,  9491,  9495,  9499,  9503,
    9507,  9511,  9516,  9520,  9524,  9528,  9532,  9544,  9548,  9552,
    9556,  9560,  9564,  9568,  9572,  9576,  9580,  9584,  9588,  9592,
    9596,  9600,  9604,  9608,  9612,  9616,  9620,  9624,  9628,  9632,
    9636,  9642,  9648,  9654,  9660,  9666,  9670,  9688,  9692,  9699,
    9701,  9714,  9715,  9719,  9720,  9724,  9725,  9729,  9735,  9744,
    9751,  9752,  9756,  9760,  9764,  9768,  9772,  9776,  9780,  9784,
    9788,  9792,  9796,  9805,  9809,  9813,  9817,  9821,  9825,  9829,
    9833,  9837,  9841,  9851,  9855,  9859,  9863,  9867,  9871,  9875,
    9886,  9897,  9901,  9905,  9918,  9922,  9927,  9936,  9939,  9947,
    9950,  9954,  9963,  9966,  9970,  9978,  9981,  9988,  9995,  9999,
   10006, 10013, 10020, 10041, 10044, 10052, 10055, 10063, 10066, 10074,
   10077, 10086, 10091, 10098, 10102, 10106, 10110, 10114, 10121, 10128,
   10132, 10136, 10140, 10144, 10152, 10155, 10159, 10163, 10167, 10173,
   10174, 10175, 10179, 10186, 10190, 10194, 10198, 10205, 10206, 10211,
   10216, 10220, 10221, 10225, 10230, 10240, 10247, 10254, 10273, 10281,
   10288, 10295, 10302, 10309, 10316, 10323, 10330, 10337, 10347, 10348,
   10352, 10358, 10367, 10368, 10372, 10378, 10387, 10388, 10392, 10393,
   10397, 10405, 10414, 10415, 10416, 10427, 10428, 10509, 10513, 10518,
   10522, 10526, 10536, 10543, 10544, 10545, 10549, 10550, 10551, 10552,
   10555, 10556, 10559, 10561, 10564, 10566, 10574, 10575, 10579, 10608,
   10609, 10610, 10611, 10613, 10615, 10619, 10620, 10629, 10630, 10634,
   10641, 10642, 10646, 10662, 10678, 10685, 10691, 10700, 10704, 10713,
   10720, 10723, 10731, 10738, 10746, 10754, 10762, 10773, 10776, 10779,
   10784, 10789, 10798, 10801, 10802, 10803, 10807, 10808, 10812, 10818,
   10827, 10828, 10836, 10837, 10841, 10846, 10852, 10856, 10862, 10871,
   10877, 10885, 10889, 10898, 10910, 10911, 10912, 10913, 10914, 10915,
   10916, 10917, 10918, 10919, 10920, 10921, 10925, 10926, 10927, 10928,
   10929, 10930, 10931, 10932, 10933, 10937, 10938, 10939, 10940, 10943,
   10945, 10946, 10950, 10951, 10954, 10956, 10960, 10969, 10970, 10977,
   10978, 10985, 10989, 10996, 11001, 11010, 11027, 11035, 11042, 11048,
   11058, 11061, 11068, 11074, 11083, 11093, 11094, 11102, 11103, 11110,
   11115, 11125, 11126, 11141, 11146, 11156, 11167, 11168, 11172, 11179,
   11184, 11194, 11195, 11196, 11200, 11201, 11205, 11212, 11218, 11224,
   11233, 11237, 11241, 11245, 11249, 11256, 11257, 11261, 11262, 11263,
   11264, 11265, 11266, 11270, 11271, 11272, 11273, 11274, 11278, 11279,
   11280, 11281, 11282, 11286, 11287, 11288, 11289, 11293, 11298, 11299,
   11303, 11309, 11318, 11322, 11329, 11336, 11342, 11346, 11354, 11365,
   11375, 11391, 11400, 11410, 11433, 11468, 11475, 11490, 11500, 11515,
   11524, 11535, 11555, 11578, 11586, 11593, 11600, 11606, 11615, 11621,
   11630, 11631, 11635, 11636, 11640, 11641, 11645, 11651, 11660, 11661,
   11668, 11682, 11700, 11717, 11729, 11745, 11760, 11761, 11762, 11771,
   11775, 11776, 11787, 11789, 11793, 11798, 11803, 11811, 11816, 11821,
   11829, 11835, 11844, 11851, 11852, 11856, 11857, 11861, 11866, 11876,
   11877, 11880, 11882, 11886, 11891, 11896, 11900, 11906, 11915, 11916,
   11924, 11928, 11937, 11954, 11955, 11959, 11966, 11978, 11986, 11987,
   11993, 12005, 12015, 12028, 12030, 12034, 12035, 12039, 12040, 12041,
   12045, 12051, 12053, 12056, 12058, 12061, 12062, 12065, 12069, 12073,
   12077, 12081, 12085, 12089, 12093, 12097, 12105, 12108, 12122, 12121,
   12132, 12141, 12147, 12159, 12170, 12181, 12189, 12196, 12204, 12206,
   12229, 12233, 12238, 12237, 12248, 12247, 12257, 12275, 12282, 12290,
   12298, 12306, 12314, 12322, 12332, 12354, 12359, 12381, 12390, 12399,
   12405, 12410, 12415, 12420, 12426, 12435, 12443, 12447, 12451, 12458,
   12465, 12471, 12481, 12491, 12496, 12501, 12506, 12515, 12517, 12519,
   12524, 12525, 12528, 12530, 12534, 12535, 12539, 12540, 12544, 12545,
   12549, 12550, 12551, 12552, 12556, 12557, 12561, 12562, 12566, 12567,
   12570, 12572, 12577, 12588, 12589, 12590, 12595, 12602, 12609, 12610,
   12611, 12612, 12613, 12614, 12621, 12622, 12627, 12630, 12645, 12646,
   12651, 12659, 12658, 12671, 12670, 12684, 12688, 12689, 12702, 12701,
   12724, 12725, 12730, 12732, 12734, 12736, 12738, 12740, 12742, 12744,
   12746, 12748, 12750, 12752, 12757, 12758, 12763, 12762, 12769, 12779,
   12780, 12785, 12790, 12799, 12799, 12802, 12801, 12821, 12822, 12826,
   12827, 12842, 12841, 12852, 12856, 12860, 12874, 12886, 12887, 12888,
   12894, 12905, 12944, 12945, 12949, 12950, 12954, 12955, 12956, 12960,
   12961, 12965, 12966, 12970, 12971, 12975, 12980, 12984, 12989, 12995,
   13000, 13008, 13009, 13013, 13018, 13022, 13027, 13035, 13036, 13040,
   13041, 13045, 13046, 13050, 13051, 13052, 13056, 13062, 13071, 13072,
   13079, 13080, 13084, 13092, 13112, 13133, 13138, 13144, 13149, 13157,
   13164, 13171, 13181, 13200, 13201, 13202, 13213, 13214, 13215, 13216,
   13228, 13232, 13236, 13240, 13244, 13248, 13255, 13259, 13263, 13267,
   13271, 13279, 13283, 13287, 13301, 13302, 13306, 13310, 13317, 13324,
   13328, 13332, 13336, 13340, 13344, 13351, 13357, 13370, 13376, 13387,
   13388, 13418, 13431, 13444, 13460, 13476, 13493, 13494, 13505, 13506,
   13516, 13517, 13528, 13529, 13530, 13534, 13535, 13536, 13540, 13545,
   13550, 13564, 13569, 13590, 13591, 13592, 13593, 13594, 13599, 13600,
   13601, 13602, 13603, 13604, 13605, 13606, 13607, 13608, 13609, 13610,
   13611, 13612, 13613, 13614, 13615, 13616, 13617, 13618, 13619, 13620,
   13621, 13622, 13623, 13624, 13625, 13626, 13627, 13628, 13629, 13630,
   13631, 13632, 13633, 13634, 13635, 13636, 13637, 13638, 13639, 13640,
   13641, 13642, 13643, 13644, 13645, 13646, 13647, 13648, 13649, 13650,
   13651, 13652, 13653, 13654, 13655, 13656, 13666, 13667, 13668, 13669,
   13670, 13671, 13672, 13673, 13674, 13675, 13680, 13681, 13682, 13683,
   13684, 13685, 13686, 13687, 13688, 13689, 13690, 13691, 13692, 13693,
   13694, 13695, 13696, 13697, 13698, 13699, 13700, 13701, 13702, 13703,
   13704, 13705, 13706, 13707, 13708, 13709, 13710, 13711, 13712, 13713,
   13714, 13715, 13716, 13717, 13718, 13719, 13720, 13721, 13722, 13723,
   13724, 13725, 13726, 13727, 13732, 13733, 13734, 13735, 13736, 13737,
   13738, 13739, 13740, 13741, 13742, 13743, 13744, 13745, 13746, 13747,
   13748, 13749, 13750, 13751, 13752, 13753, 13754, 13755, 13756, 13757,
   13758, 13759, 13760, 13761, 13762, 13763, 13764, 13765, 13766, 13767,
   13768, 13769, 13770, 13771, 13772, 13773, 13774, 13775, 13776, 13777,
   13778, 13779, 13780, 13781, 13782, 13783, 13784, 13785, 13786, 13787,
   13788, 13789, 13790, 13791, 13792, 13793, 13794, 13795, 13796, 13797,
   13798, 13799, 13800, 13801, 13802, 13803, 13804, 13805, 13806, 13807,
   13808, 13809, 13810, 13811, 13812, 13813, 13814, 13815, 13816, 13817,
   13818, 13819, 13820, 13821, 13822, 13823, 13824, 13825, 13826, 13827,
   13828, 13829, 13830, 13831, 13832, 13833, 13834, 13835, 13836, 13837,
   13838, 13839, 13840, 13841, 13842, 13843, 13844, 13845, 13846, 13847,
   13848, 13849, 13850, 13851, 13852, 13853, 13854, 13855, 13856, 13857,
   13858, 13859, 13860, 13861, 13862, 13863, 13864, 13865, 13866, 13867,
   13868, 13869, 13870, 13871, 13872, 13873, 13874, 13875, 13876, 13877,
   13878, 13879, 13880, 13881, 13882, 13883, 13884, 13885, 13886, 13887,
   13888, 13889, 13890, 13891, 13892, 13893, 13894, 13895, 13896, 13897,
   13898, 13899, 13900, 13901, 13902, 13903, 13904, 13905, 13906, 13907,
   13908, 13909, 13910, 13911, 13912, 13913, 13914, 13915, 13916, 13917,
   13918, 13919, 13920, 13921, 13922, 13923, 13924, 13925, 13926, 13927,
   13928, 13929, 13930, 13931, 13932, 13933, 13934, 13935, 13936, 13937,
   13938, 13939, 13940, 13941, 13942, 13943, 13944, 13945, 13946, 13947,
   13948, 13949, 13950, 13951, 13952, 13953, 13954, 13955, 13956, 13957,
   13958, 13959, 13960, 13961, 13962, 13963, 13964, 13965, 13966, 13967,
   13968, 13969, 13970, 13971, 13972, 13973, 13974, 13975, 13976, 13977,
   13978, 13979, 13980, 13981, 13982, 13983, 13984, 13985, 13986, 13987,
   13988, 13989, 13990, 13991, 13992, 13993, 13994, 13995, 13996, 13997,
   13998, 13999, 14000, 14001, 14002, 14003, 14004, 14005, 14006, 14007,
   14008, 14009, 14010, 14011, 14012, 14013, 14014, 14015, 14037, 14038,
   14049, 14058, 14062, 14066, 14070, 14074, 14081, 14085, 14090, 14095,
   14100, 14105, 14110, 14118, 14119, 14123, 14127, 14134, 14140, 14149,
   14154, 14161, 14171, 14172, 14177, 14181, 14189, 14193, 14197, 14198,
   14199, 14200, 14201, 14205, 14206, 14207, 14208, 14212, 14213, 14214,
   14215, 14219, 14220, 14221, 14222, 14223, 14224, 14229, 14237, 14243,
   14247, 14252, 14256, 14263, 14267, 14274, 14278, 14282, 14289, 14293,
   14300, 14307, 14308, 14312, 14319, 14320, 14324, 14325, 14329, 14330,
   14331, 14332, 14336, 14345, 14346, 14347, 14351, 14355, 14359, 14363,
   14373, 14372, 14385, 14395, 14396, 14400, 14401, 14405, 14433, 14434,
   14435, 14440, 14445, 14444, 14457, 14468, 14476, 14483, 14490, 14509,
   14513, 14517, 14526, 14537, 14553, 14554, 14558, 14559, 14560, 14561,
   14565, 14566, 14567, 14568, 14569, 14575, 14580, 14596, 14595, 14614,
   14619, 14630, 14635, 14652, 14651, 14668, 14681, 14682, 14683, 14684,
   14687, 14689, 14693, 14699, 14708, 14715, 14717, 14719, 14721, 14723,
   14725, 14727, 14729, 14731, 14733, 14735, 14737, 14739, 14741, 14743,
   14745, 14747, 14752, 14754, 14768, 14770, 14772, 14774, 14776, 14778,
   14780, 14782, 14784, 14786, 14788, 14790, 14792, 14794, 14799, 14800,
   14803, 14805, 14809, 14810, 14814, 14824, 14834, 14847, 14861, 14873,
   14885, 14897, 14903, 14912, 14918, 14927, 14932, 14940, 14948, 14956,
   14966, 14977, 14985, 14986, 14990, 14996, 15004, 15006, 15010, 15014,
   15018, 15025, 15026, 15031, 15032, 15037, 15036, 15046, 15047, 15052,
   15053, 15054, 15059, 15060, 15061, 15065, 15066, 15070, 15082, 15091,
   15101, 15110, 15124, 15125, 15126, 15130, 15134, 15138, 15151, 15152,
   15153, 15154, 15155, 15156, 15157, 15158, 15169, 15178, 15180, 15182,
   15187, 15188, 15189, 15190, 15191, 15195, 15196, 15197, 15198, 15199,
   15200, 15210, 15211, 15216, 15229, 15242, 15244, 15246, 15251, 15256,
   15258, 15260, 15266, 15267, 15269, 15275, 15274, 15314, 15365, 15366,
   15367, 15368, 15378, 15380, 15386, 15391, 15409, 15399, 15476, 15494,
   15518, 15542, 15548, 15589, 15515, 15656, 15676, 15681, 15689, 15654,
   15710, 15715, 15720, 15725, 15730, 15735, 15743, 15744, 15747, 15756,
   15766, 15784, 15785, 15789, 15790, 15791, 15795, 15796, 15801, 15802,
   15804, 15809, 15815, 15824, 15830, 15839, 15845, 15854, 15872, 15880,
   15891, 15892, 15896, 15897, 15902, 15908, 15912, 15919, 15929, 15936,
   15949, 15950, 15954, 15955, 15963, 15964, 15969, 15977, 15978
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_SYM",
  "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM", "BOTH",
  "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM", "CALL_SYM", "CASCADE",
  "CASCADED", "CASE_SYM", "CAST_SYM", "CATALOG_NAME_SYM", "CHAIN_SYM",
  "CHANGE", "CHANGED", "CHANNEL_SYM", "CHARSET", "CHAR_SYM",
  "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM",
  "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATE_SYM",
  "COLLATION_SYM", "COLUMNS", "COLUMN_SYM", "COLUMN_FORMAT_SYM",
  "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "COMPRESSION_SYM",
  "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM", "COUNT_SYM", "CPU_SYM",
  "CREATE", "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_SYM", "CURRENT_USER",
  "CURSOR_SYM", "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME_SYM", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM",
  "DEFAULT_AUTH_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DELETE_SYM", "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388",
  "DETERMINISTIC_SYM", "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM",
  "DISCARD", "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM",
  "DROP", "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM",
  "EACH_SYM", "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END",
  "ENDS_SYM", "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM",
  "EQ", "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM",
  "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM", "LONG_SYM",
  "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "SERVER_OPTIONS", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "REMOTE_SYM", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'", "'+'", "'*'",
  "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('", "')'",
  "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'", "'{'",
  "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "master_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "server_options_list", "server_option",
  "event_tail", "$@7", "ev_schedule_time", "$@8", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call_stmt", "opt_paren_expr_list", "sp_fdparam_list",
  "sp_fdparams", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@10", "$@11", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "sp_proc_stmt_if", "$@12", "sp_proc_stmt_statement",
  "$@13", "sp_proc_stmt_return", "$@14", "sp_proc_stmt_unlabeled", "$@15",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@17", "$@18", "$@19", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@20", "$@21",
  "searched_case_stmt", "$@22", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@23", "$@24",
  "searched_when_clause", "$@25", "$@26", "else_clause_opt",
  "sp_labeled_control", "$@27", "sp_opt_label", "sp_labeled_block", "$@28",
  "sp_unlabeled_block", "$@29", "sp_block_content", "$@30",
  "sp_unlabeled_control", "$@31", "$@32", "$@33", "$@34",
  "trg_action_time", "trg_event", "opt_logfile_group_name",
  "opt_tablespace_options", "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_logfile_group_options",
  "logfile_group_option_list", "logfile_group_option",
  "opt_alter_logfile_group_options", "alter_logfile_group_option_list",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "row_types", "merge_insert_types", "udf_type",
  "table_element_list", "table_element", "column_def",
  "opt_check_or_references", "table_constraint_def", "check_constraint",
  "opt_constraint", "field_def", "opt_generated_always",
  "opt_stored_attribute", "type", "spatial_type", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "opt_PRECISION", "numeric_type",
  "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_column_attribute_list", "column_attribute_list", "column_attribute",
  "column_format", "storage_media", "now", "now_or_signed_literal",
  "character_set", "charset_name", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "opt_default", "ascii", "unicode",
  "opt_charset_with_opt_binary", "opt_bin_mod", "ws_num_codepoints",
  "$@36", "opt_primary", "references", "opt_ref_list", "reference_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "opt_unique", "opt_fulltext_index_options",
  "fulltext_index_options", "fulltext_index_option",
  "opt_spatial_index_options", "spatial_index_options",
  "spatial_index_option", "opt_index_options", "index_options",
  "index_option", "common_index_option", "opt_index_name_and_type",
  "index_type_clause", "visibility", "index_type", "key_list", "key_part",
  "opt_ident", "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_server_stmt", "alter_user_stmt",
  "alter_resource_group_stmt", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "slave", "slave_start", "start_slave_opts", "$@43", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@44", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "select_options",
  "select_option_list", "select_option", "opt_locking_clause_list",
  "locking_clause_list", "locking_clause", "lock_strength",
  "table_locking_list", "opt_locked_row_action", "locked_row_action",
  "select_item_list", "select_item", "select_alias", "optional_braces",
  "expr", "bool_pri", "predicate", "bit_expr", "or", "and", "not", "not2",
  "comp_op", "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "set_function_specification", "sum_expr",
  "window_func_call", "opt_lead_lag_info", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error", "opt_on_empty",
  "opt_on_error", "jt_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as_or_eq",
  "opt_table_alias", "opt_all", "opt_where_clause",
  "opt_where_clause_expr", "opt_having_clause", "with_clause", "with_list",
  "common_table_expr", "opt_derived_column_list", "simple_ident_list",
  "opt_window_clause", "window_definition_list", "window_definition",
  "opt_escape", "opt_group_clause", "group_list", "olap_opt",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "empty_select_options",
  "drop_table_stmt", "drop_index_stmt", "drop_database_stmt",
  "drop_function_stmt", "drop_resource_group_stmt", "drop_procedure_stmt",
  "drop_user_stmt", "drop_view_stmt", "drop_event_stmt",
  "drop_trigger_stmt", "drop_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list", "equal",
  "opt_equal", "row_value", "opt_values", "values", "expr_or_default",
  "opt_insert_update_list", "update_stmt", "opt_with_clause",
  "update_list", "update_elem", "opt_low_priority", "delete_stmt",
  "opt_wild", "opt_delete_options", "opt_delete_option", "truncate_stmt",
  "opt_table", "opt_profile_defs", "profile_defs", "profile_def",
  "opt_profile_args", "show", "$@45", "show_param", "$@46", "$@47",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "opt_extended", "opt_show_cmd_type", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where",
  "opt_wild_or_where_for_show", "describe_stmt", "explain_stmt",
  "explainable_stmt", "describe_command", "opt_explain_format_type",
  "opt_describe_column", "flush", "$@48", "flush_options", "$@49",
  "opt_flush_lock", "$@50", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@51", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@52", "$@53",
  "slave_reset_options", "master_reset_options", "purge", "$@54",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "ident", "role_ident", "label_ident", "ident_or_text",
  "role_ident_or_text", "user", "role", "ident_keyword",
  "role_or_ident_keyword", "label_keyword", "role_or_label_keyword",
  "role_keyword", "set", "start_option_value_list", "set_role_stmt",
  "opt_except_role_list", "set_resource_group_stmt", "thread_id_list",
  "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types", "password",
  "set_expr_or_default", "lock", "$@55", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@56",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@57", "grant",
  "$@58", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "create_or_alter_user_list", "create_or_alter_user", "opt_column_list",
  "column_list", "require_clause", "grant_options", "opt_grant_option",
  "begin_stmt", "$@59", "opt_work", "opt_chain", "opt_release",
  "opt_savepoint", "commit", "rollback", "savepoint", "release",
  "union_option", "row_subquery", "table_subquery", "subquery",
  "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@60",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@61", "udf_tail",
  "sf_tail", "$@62", "$@63", "$@64", "$@65", "sp_tail", "$@66", "$@67",
  "$@68", "$@69", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_for_replication", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", YY_NULL
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   124,
      38,    45,    43,    42,    47,    37,    94,   126,   974,    40,
      41,   975,    59,    64,    44,    46,    58,    33,   123,   125
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   740,   741,   741,   741,   741,   741,   742,   743,   742,
     742,   744,   744,   745,   745,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   747,   748,   748,   749,   750,   750,
     752,   751,   753,   753,   754,   754,   755,   757,   756,   759,
     758,   760,   758,   761,   761,   762,   762,   762,   762,   762,
     762,   762,   763,   763,   764,   764,   765,   766,   766,   767,
     767,   768,   768,   769,   769,   770,   771,   771,   772,   772,
     773,   774,   774,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   776,   776,   776,
     777,   778,   778,   778,   778,   779,   779,   780,   780,   780,
     780,   781,   782,   784,   783,   783,   783,   783,   783,   783,
     785,   785,   786,   786,   786,   786,   786,   787,   787,   788,
     788,   788,   789,   789,   790,   790,   790,   790,   790,   790,
     790,   792,   791,   794,   793,   793,   795,   795,   795,   795,
     796,   796,   797,   797,   798,   798,   799,   799,   800,   800,
     802,   801,   803,   803,   803,   803,   803,   803,   803,   803,
     803,   803,   803,   803,   803,   804,   804,   805,   805,   806,
     806,   807,   807,   807,   807,   807,   807,   807,   808,   808,
     808,   809,   809,   810,   811,   811,   812,   812,   813,   813,
     814,   815,   815,   816,   816,   817,   818,   818,   818,   818,
     819,   819,   820,   820,   821,   821,   822,   822,   823,   822,
     824,   822,   825,   825,   826,   826,   827,   828,   828,   829,
     830,   830,   831,   831,   831,   831,   831,   832,   833,   833,
     834,   834,   835,   835,   836,   836,   837,   837,   837,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   839,   840,   841,   841,   841,   842,   842,   843,   843,
     844,   845,   845,   846,   846,   847,   848,   848,   849,   850,
     850,   850,   850,   850,   850,   850,   850,   850,   850,   850,
     850,   850,   851,   851,   852,   852,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   855,
     854,   857,   856,   859,   858,   861,   860,   862,   863,   864,
     866,   865,   867,   868,   868,   868,   869,   869,   871,   872,
     873,   870,   874,   874,   874,   875,   875,   877,   878,   876,
     880,   879,   881,   881,   882,   882,   884,   885,   883,   887,
     888,   886,   889,   889,   891,   890,   892,   892,   894,   893,
     896,   895,   898,   897,   899,   900,   901,   899,   902,   903,
     899,   904,   904,   905,   905,   905,   906,   906,   907,   907,
     908,   908,   909,   909,   909,   909,   909,   909,   909,   909,
     909,   910,   910,   911,   911,   912,   912,   912,   912,   912,
     913,   913,   914,   914,   915,   915,   915,   915,   915,   915,
     915,   916,   916,   917,   917,   918,   918,   918,   919,   920,
     921,   922,   923,   924,   925,   926,   927,   928,   929,   930,
     931,   931,   932,   932,   933,   933,   934,   934,   935,   935,
     935,   936,   936,   937,   938,   938,   938,   938,   938,   938,
     939,   939,   940,   940,   941,   941,   942,   942,   942,   943,
     943,   944,   944,   945,   945,   946,   946,   947,   947,   948,
     949,   949,   949,   950,   950,   951,   951,   952,   952,   954,
     953,   955,   955,   956,   956,   957,   957,   958,   958,   959,
     960,   960,   961,   961,   962,   962,   962,   962,   962,   962,
     962,   962,   963,   963,   964,   964,   965,   965,   966,   966,
     967,   967,   968,   968,   969,   969,   970,   970,   970,   970,
     970,   970,   970,   970,   970,   970,   970,   970,   970,   970,
     970,   970,   970,   970,   970,   970,   970,   970,   970,   970,
     970,   970,   970,   970,   970,   971,   971,   972,   973,   974,
     974,   974,   974,   974,   974,   975,   975,   975,   976,   976,
     976,   976,   977,   977,   978,   978,   979,   980,   980,   980,
     981,   981,   981,   981,   981,   981,   982,   983,   983,   984,
     984,   985,   985,   986,   986,   986,   987,   987,   987,   987,
     987,   987,   987,   987,   987,   987,   987,   987,   987,   987,
     987,   987,   987,   987,   987,   987,   987,   987,   987,   987,
     987,   987,   987,   987,   987,   987,   987,   987,   987,   987,
     987,   987,   987,   988,   988,   988,   988,   988,   988,   988,
     988,   989,   989,   990,   990,   991,   991,   991,   991,   991,
     992,   992,   992,   992,   992,   993,   993,   994,   994,   995,
     995,   995,   995,   996,   996,   996,   997,   998,   998,   999,
     999,   999,  1000,  1000,  1001,  1001,  1002,  1002,  1002,  1003,
    1003,  1003,  1003,  1004,  1004,  1005,  1005,  1006,  1006,  1007,
    1007,  1008,  1008,  1008,  1008,  1008,  1008,  1008,  1008,  1008,
    1008,  1008,  1008,  1008,  1008,  1009,  1009,  1009,  1010,  1010,
    1010,  1011,  1012,  1012,  1013,  1013,  1014,  1014,  1015,  1015,
    1016,  1016,  1017,  1017,  1018,  1019,  1019,  1020,  1020,  1021,
    1021,  1021,  1022,  1022,  1022,  1023,  1023,  1023,  1023,  1023,
    1023,  1023,  1024,  1024,  1026,  1025,  1027,  1027,  1028,  1029,
    1029,  1030,  1030,  1031,  1031,  1031,  1031,  1032,  1032,  1032,
    1032,  1032,  1033,  1033,  1033,  1033,  1033,  1034,  1034,  1035,
    1035,  1036,  1036,  1037,  1037,  1037,  1038,  1038,  1039,  1039,
    1040,  1040,  1041,  1041,  1042,  1042,  1043,  1043,  1044,  1045,
    1045,  1046,  1046,  1047,  1047,  1048,  1048,  1048,  1049,  1049,
    1049,  1050,  1050,  1051,  1051,  1052,  1052,  1052,  1053,  1053,
    1054,  1054,  1055,  1055,  1056,  1056,  1057,  1057,  1058,  1058,
    1060,  1059,  1062,  1061,  1064,  1063,  1066,  1065,  1067,  1065,
    1069,  1068,  1070,  1071,  1071,  1071,  1072,  1073,  1073,  1073,
    1073,  1073,  1074,  1075,  1076,  1076,  1077,  1077,  1078,  1078,
    1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1079,  1079,
    1080,  1080,  1081,  1081,  1081,  1081,  1082,  1083,  1083,  1083,
    1083,  1084,  1084,  1085,  1085,  1086,  1086,  1087,  1087,  1088,
    1088,  1089,  1089,  1090,  1090,  1090,  1090,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1092,  1092,  1093,  1093,  1094,
    1094,  1095,  1095,  1095,  1095,  1095,  1096,  1096,  1097,  1097,
    1097,  1097,  1097,  1097,  1097,  1097,  1097,  1097,  1097,  1097,
    1097,  1097,  1097,  1097,  1097,  1097,  1097,  1097,  1098,  1098,
    1098,  1099,  1099,  1099,  1099,  1099,  1100,  1101,  1101,  1102,
    1103,  1103,  1104,  1104,  1105,  1105,  1106,  1106,  1106,  1107,
    1107,  1107,  1108,  1108,  1108,  1108,  1109,  1109,  1110,  1110,
    1111,  1113,  1112,  1114,  1115,  1115,  1116,  1116,  1117,  1117,
    1117,  1118,  1119,  1119,  1120,  1120,  1121,  1121,  1122,  1122,
    1123,  1123,  1124,  1124,  1125,  1125,  1126,  1126,  1127,  1127,
    1127,  1127,  1127,  1128,  1129,  1129,  1129,  1130,  1131,  1131,
    1132,  1132,  1133,  1133,  1133,  1134,  1135,  1135,  1136,  1136,
    1136,  1137,  1138,  1139,  1139,  1140,  1140,  1141,  1141,  1141,
    1141,  1141,  1141,  1142,  1143,  1143,  1143,  1145,  1144,  1144,
    1146,  1146,  1147,  1147,  1148,  1149,  1149,  1150,  1150,  1151,
    1152,  1152,  1153,  1153,  1154,  1154,  1155,  1156,  1157,  1157,
    1158,  1158,  1159,  1159,  1159,  1160,  1160,  1161,  1161,  1161,
    1161,  1161,  1161,  1161,  1162,  1162,  1162,  1162,  1162,  1163,
    1163,  1164,  1165,  1165,  1166,  1166,  1167,  1168,  1168,  1169,
    1169,  1170,  1170,  1171,  1171,  1172,  1172,  1173,  1173,  1174,
    1174,  1175,  1175,  1175,  1176,  1176,  1177,  1178,  1178,  1179,
    1179,  1180,  1180,  1180,  1181,  1181,  1182,  1182,  1182,  1182,
    1182,  1183,  1183,  1184,  1184,  1184,  1184,  1184,  1184,  1184,
    1184,  1184,  1184,  1184,  1185,  1185,  1185,  1185,  1185,  1186,
    1186,  1186,  1186,  1186,  1186,  1186,  1186,  1186,  1186,  1186,
    1186,  1186,  1186,  1187,  1187,  1187,  1187,  1187,  1187,  1187,
    1187,  1187,  1187,  1187,  1187,  1187,  1187,  1187,  1188,  1188,
    1189,  1189,  1190,  1190,  1191,  1191,  1192,  1192,  1192,  1192,
    1192,  1192,  1192,  1193,  1193,  1194,  1194,  1194,  1194,  1194,
    1194,  1194,  1194,  1194,  1194,  1194,  1194,  1194,  1194,  1194,
    1194,  1194,  1194,  1194,  1194,  1194,  1194,  1194,  1194,  1194,
    1194,  1194,  1194,  1194,  1194,  1194,  1194,  1194,  1195,  1195,
    1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,
    1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,  1195,
    1195,  1195,  1195,  1195,  1195,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1197,  1197,  1197,
    1197,  1197,  1197,  1197,  1197,  1197,  1197,  1197,  1197,  1197,
    1197,  1197,  1197,  1197,  1197,  1197,  1197,  1197,  1197,  1197,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1199,  1199,  1200,
    1200,  1201,  1201,  1202,  1202,  1203,  1203,  1204,  1204,  1205,
    1206,  1206,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1208,  1208,  1208,  1208,  1208,  1208,  1208,
    1208,  1208,  1208,  1208,  1209,  1209,  1209,  1210,  1210,  1211,
    1211,  1211,  1212,  1212,  1212,  1213,  1213,  1214,  1215,  1215,
    1216,  1217,  1218,  1219,  1219,  1220,  1220,  1221,  1221,  1222,
    1222,  1223,  1223,  1224,  1224,  1224,  1224,  1224,  1225,  1226,
    1226,  1226,  1226,  1226,  1227,  1227,  1227,  1227,  1227,  1228,
    1228,  1228,  1229,  1230,  1231,  1231,  1231,  1232,  1232,  1233,
    1233,  1234,  1234,  1235,  1235,  1236,  1237,  1237,  1237,  1237,
    1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1238,  1238,
    1239,  1239,  1240,  1240,  1241,  1241,  1242,  1242,  1243,  1243,
    1244,  1244,  1245,  1245,  1245,  1246,  1246,  1247,  1247,  1247,
    1247,  1247,  1247,  1248,  1248,  1248,  1249,  1249,  1249,  1249,
    1250,  1250,  1251,  1251,  1252,  1252,  1253,  1253,  1254,  1255,
    1255,  1255,  1255,  1255,  1255,  1256,  1256,  1257,  1257,  1258,
    1259,  1259,  1260,  1261,  1262,  1263,  1263,  1264,  1264,  1264,
    1265,  1265,  1266,  1266,  1266,  1266,  1266,  1267,  1268,  1269,
    1269,  1269,  1270,  1270,  1270,  1270,  1271,  1271,  1272,  1272,
    1273,  1273,  1274,  1274,  1275,  1276,  1276,  1277,  1277,  1278,
    1278,  1279,  1280,  1280,  1281,  1281,  1281,  1281,  1281,  1281,
    1281,  1281,  1281,  1281,  1281,  1281,  1282,  1282,  1282,  1282,
    1282,  1282,  1282,  1282,  1282,  1283,  1283,  1283,  1283,  1284,
    1284,  1284,  1285,  1285,  1286,  1286,  1287,  1288,  1288,  1289,
    1289,  1290,  1290,  1291,  1291,  1292,  1293,  1293,  1294,  1294,
    1295,  1295,  1296,  1296,  1297,  1298,  1298,  1299,  1299,  1300,
    1300,  1301,  1301,  1302,  1302,  1303,  1304,  1304,  1305,  1306,
    1306,  1307,  1307,  1307,  1308,  1308,  1309,  1310,  1310,  1310,
    1311,  1311,  1311,  1311,  1311,  1312,  1312,  1313,  1313,  1313,
    1313,  1313,  1313,  1314,  1314,  1314,  1314,  1314,  1315,  1315,
    1315,  1315,  1315,  1316,  1316,  1316,  1316,  1317,  1318,  1318,
    1319,  1319,  1320,  1320,  1321,  1322,  1322,  1322,  1323,  1324,
    1325,  1326,  1327,  1328,  1328,  1329,  1330,  1331,  1332,  1333,
    1334,  1335,  1336,  1337,  1338,  1339,  1340,  1340,  1341,  1341,
    1342,  1342,  1343,  1343,  1344,  1344,  1345,  1345,  1346,  1346,
    1347,  1347,  1347,  1348,  1348,  1348,  1349,  1349,  1349,  1349,
    1350,  1350,  1351,  1351,  1352,  1352,  1352,  1353,  1353,  1353,
    1354,  1354,  1355,  1356,  1356,  1357,  1357,  1358,  1358,  1359,
    1359,  1360,  1360,  1361,  1362,  1362,  1363,  1363,  1364,  1364,
    1365,  1365,  1366,  1367,  1367,  1368,  1368,  1369,  1370,  1370,
    1371,  1371,  1371,  1372,  1372,  1373,  1373,  1374,  1374,  1374,
    1375,  1376,  1376,  1377,  1377,  1378,  1378,  1379,  1379,  1379,
    1379,  1379,  1379,  1379,  1379,  1379,  1380,  1380,  1382,  1381,
    1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,
    1383,  1383,  1384,  1383,  1385,  1383,  1383,  1383,  1383,  1383,
    1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,
    1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,  1383,
    1383,  1383,  1383,  1383,  1383,  1383,  1383,  1386,  1386,  1386,
    1387,  1387,  1388,  1388,  1389,  1389,  1390,  1390,  1391,  1391,
    1392,  1392,  1392,  1392,  1393,  1393,  1394,  1394,  1395,  1395,
    1396,  1396,  1396,  1397,  1397,  1397,  1398,  1399,  1400,  1400,
    1400,  1400,  1400,  1400,  1401,  1401,  1402,  1402,  1403,  1403,
    1403,  1405,  1404,  1407,  1406,  1406,  1408,  1408,  1409,  1408,
    1410,  1410,  1411,  1411,  1411,  1411,  1411,  1411,  1411,  1411,
    1411,  1411,  1411,  1411,  1412,  1412,  1414,  1413,  1413,  1415,
    1415,  1416,  1416,  1418,  1417,  1419,  1417,  1420,  1420,  1421,
    1421,  1423,  1422,  1424,  1425,  1425,  1426,  1427,  1427,  1427,
    1428,  1429,  1430,  1430,  1431,  1431,  1432,  1432,  1432,  1433,
    1433,  1434,  1434,  1435,  1435,  1436,  1436,  1437,  1437,  1437,
    1437,  1438,  1438,  1439,  1439,  1440,  1440,  1441,  1441,  1442,
    1442,  1443,  1443,  1444,  1444,  1444,  1445,  1445,  1446,  1446,
    1447,  1447,  1448,  1448,  1449,  1450,  1450,  1450,  1450,  1451,
    1451,  1451,  1452,  1453,  1453,  1453,  1454,  1454,  1454,  1454,
    1454,  1454,  1454,  1454,  1454,  1454,  1455,  1455,  1455,  1455,
    1455,  1456,  1456,  1456,  1457,  1457,  1458,  1458,  1459,  1460,
    1460,  1461,  1461,  1462,  1462,  1463,  1463,  1464,  1464,  1465,
    1465,  1466,  1467,  1468,  1469,  1470,  1471,  1471,  1472,  1472,
    1473,  1473,  1474,  1474,  1474,  1475,  1475,  1475,  1476,  1476,
    1476,  1477,  1477,  1478,  1478,  1478,  1478,  1478,  1479,  1479,
    1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,
    1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,
    1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,
    1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,
    1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,  1479,
    1479,  1479,  1479,  1479,  1479,  1479,  1480,  1480,  1480,  1480,
    1480,  1480,  1480,  1480,  1480,  1480,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,
    1481,  1481,  1481,  1481,  1481,  1481,  1481,  1481,  1482,  1482,
    1483,  1484,  1484,  1484,  1484,  1484,  1485,  1485,  1485,  1485,
    1485,  1485,  1485,  1486,  1486,  1487,  1487,  1488,  1488,  1489,
    1490,  1490,  1491,  1491,  1492,  1492,  1493,  1493,  1494,  1494,
    1494,  1494,  1494,  1495,  1495,  1495,  1495,  1496,  1496,  1496,
    1496,  1497,  1497,  1497,  1497,  1497,  1497,  1498,  1499,  1499,
    1499,  1499,  1499,  1499,  1499,  1500,  1500,  1500,  1501,  1501,
    1502,  1503,  1503,  1504,  1505,  1505,  1506,  1506,  1507,  1507,
    1507,  1507,  1508,  1509,  1509,  1509,  1509,  1509,  1509,  1509,
    1511,  1510,  1510,  1512,  1512,  1513,  1513,  1514,  1515,  1515,
    1515,  1515,  1517,  1516,  1516,  1518,  1519,  1520,  1521,  1522,
    1522,  1522,  1522,  1522,  1523,  1523,  1524,  1524,  1524,  1524,
    1525,  1525,  1525,  1525,  1525,  1526,  1526,  1527,  1526,  1526,
    1526,  1528,  1528,  1529,  1528,  1528,  1530,  1530,  1530,  1530,
    1531,  1531,  1532,  1532,  1533,  1533,  1533,  1533,  1533,  1533,
    1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,
    1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,
    1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1534,  1534,
    1535,  1535,  1536,  1536,  1537,  1537,  1537,  1538,  1538,  1538,
    1538,  1539,  1539,  1540,  1540,  1541,  1541,  1542,  1542,  1542,
    1542,  1542,  1543,  1543,  1544,  1544,  1545,  1545,  1545,  1545,
    1545,  1546,  1546,  1547,  1547,  1549,  1548,  1550,  1550,  1551,
    1551,  1551,  1552,  1552,  1552,  1553,  1553,  1554,  1555,  1555,
    1556,  1557,  1558,  1558,  1558,  1559,  1560,  1561,  1562,  1562,
    1562,  1562,  1562,  1562,  1562,  1562,  1563,  1564,  1564,  1564,
    1565,  1565,  1565,  1565,  1565,  1566,  1566,  1566,  1566,  1566,
    1566,  1567,  1567,  1568,  1569,  1570,  1570,  1570,  1571,  1572,
    1572,  1572,  1573,  1573,  1573,  1575,  1574,  1576,  1577,  1577,
    1577,  1577,  1578,  1578,  1579,  1579,  1581,  1580,  1582,  1582,
    1584,  1585,  1586,  1587,  1583,  1589,  1590,  1591,  1592,  1588,
    1593,  1593,  1593,  1593,  1593,  1593,  1594,  1594,  1595,  1595,
    1595,  1596,  1596,  1597,  1597,  1597,  1598,  1598,  1599,  1599,
    1599,  1600,  1600,  1601,  1601,  1602,  1602,  1603,  1604,  1604,
    1605,  1605,  1606,  1606,  1607,  1607,  1608,  1608,  1609,  1609,
    1610,  1610,  1611,  1611,  1612,  1612,  1612,  1613,  1613
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     4,     1,     2,
       0,     4,     0,     2,     3,     1,     2,     0,     3,     0,
       6,     0,     6,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     3,     1,     3,     1,     2,     3,     5,
       7,     2,     3,     1,     3,     3,     2,     3,     1,     3,
       1,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     5,     3,     1,     0,     1,     3,
       1,     3,     3,     3,     3,     0,     3,     9,     6,     7,
       9,     4,    10,     0,     6,     2,     8,     7,     7,    11,
       8,     7,     0,     3,     3,     6,     3,     0,     3,    11,
      11,    11,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     0,    12,     0,     6,     2,     0,     1,     3,     1,
       0,     2,     0,     2,     0,     1,     3,     4,     0,     2,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     0,     2,     0,
       2,     2,     2,     2,     2,     3,     3,     1,     1,     1,
       2,     3,     3,     3,     0,     3,     0,     1,     3,     1,
       3,     0,     1,     3,     1,     4,     0,     1,     1,     1,
       0,     3,     2,     3,     0,     3,     5,     5,     0,     7,
       0,     6,     1,     1,     1,     3,     1,     1,     1,     3,
       0,     1,     1,     1,     1,     2,     1,     3,     1,     1,
       0,     1,     0,     2,     3,     5,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     4,     0,     1,     1,     1,     3,     1,     3,
       3,     1,     2,     1,     1,     1,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       5,     0,     2,     0,     3,     0,     2,     2,     2,     2,
       0,     6,     2,     0,     2,     1,     1,     3,     0,     0,
       0,     7,     0,     2,     2,     1,     1,     0,     0,     8,
       0,     6,     1,     2,     1,     2,     0,     0,     6,     0,
       0,     6,     0,     2,     0,     5,     0,     1,     0,     5,
       0,     2,     0,     5,     4,     0,     0,     8,     0,     0,
       8,     1,     1,     1,     1,     1,     0,     4,     0,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     1,     1,     1,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     3,
       1,     1,     1,     1,     2,     1,     2,     1,     0,     2,
       1,     2,     1,     6,     6,     5,     4,     5,     4,     5,
       0,     1,     0,     3,     0,     2,     0,     8,     9,     0,
       1,     1,     3,     0,     2,     0,     3,     1,     3,     5,
       0,     4,     3,     1,     1,     1,     3,     1,     3,     0,
       4,     1,     3,     1,     1,     0,     3,     1,     3,     3,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     0,     1,     1,     2,     1,     1,     0,     3,
       1,     2,     1,     3,     0,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     5,     1,     1,     3,     4,     4,
       3,     2,     2,     3,     3,     1,     1,     4,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     3,     0,     1,     1,
       6,     7,     7,     7,     8,     2,     4,     0,     2,     2,
       9,     0,     2,     0,     1,     1,     3,     3,     3,     1,
       2,     1,     1,     3,     2,     3,     2,     2,     1,     3,
       3,     2,     3,     1,     2,     2,     2,     1,     2,     1,
       1,     1,     2,     3,     2,     3,     2,     2,     5,     5,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     2,     1,     2,     3,     2,
       1,     1,     1,     1,     1,     1,     2,     0,     1,     1,
       1,     1,     1,     0,     1,     1,     5,     0,     3,     0,
       2,     3,     0,     1,     2,     1,     1,     1,     1,     3,
       3,     3,     3,     0,     1,     0,     1,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     3,     2,     1,     2,
       2,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       1,     2,     1,     1,     2,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     1,     0,     2,     0,     1,     1,
       2,     2,     1,     2,     2,     0,     1,     1,     1,     3,
       1,     3,     0,     1,     0,     4,     0,     1,     5,     0,
       3,     3,     1,     0,     2,     2,     2,     0,     3,     3,
       6,     6,     1,     1,     2,     2,     2,     2,     2,     1,
       1,     0,     1,     1,     1,     1,     0,     1,     0,     1,
       1,     2,     1,     3,     0,     1,     1,     2,     1,     0,
       1,     1,     2,     1,     1,     3,     2,     1,     1,     3,
       3,     2,     2,     1,     1,     1,     1,     1,     3,     1,
       2,     5,     0,     1,     0,     2,     1,     3,     4,     4,
       0,     5,     0,     5,     0,     5,     0,     5,     0,     4,
       0,    10,     7,     6,     6,     6,     7,     5,     5,     5,
       5,     5,     8,     3,     0,     1,     1,     2,     2,     2,
       2,     5,     3,     3,     3,     3,     5,     4,     0,     2,
       2,     1,     2,     2,     2,     2,     3,     0,     3,     1,
       4,     0,     3,     0,     2,     0,     1,     1,     2,     1,
       3,     1,     2,     0,     1,     1,     3,     2,     2,     3,
       6,     5,     3,     4,     4,     4,     4,     5,     4,     3,
       3,     8,     7,     4,     4,     0,     1,     2,     2,     1,
       1,     1,     3,     3,     1,     3,     1,     3,     6,     5,
       2,     6,     5,     4,     4,     3,     3,     2,     2,     6,
       5,     4,     3,     5,     5,     5,     1,     3,     1,     1,
       1,     0,     1,     1,     2,     2,     3,     1,     1,     3,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     0,
       2,     1,     0,     1,     1,     1,     2,     2,     2,     4,
       3,     0,     4,     3,     0,     1,     1,     3,     3,     2,
       2,     4,     0,     3,     0,     3,     0,     3,     0,     3,
       0,     1,     1,     3,     1,     1,     0,     2,     1,     3,
       3,     3,     1,     4,     0,     1,     1,     5,     0,     1,
       1,     2,     1,     1,     1,     5,     0,     3,     0,     5,
       4,     2,     4,     0,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     4,     0,     1,     1,     0,     4,     3,
       3,     5,     1,     3,     3,     5,     7,     1,     3,     2,
       1,     1,     8,     5,     1,     3,     3,     4,     0,     4,
       0,     2,     1,     1,     1,     3,     2,     4,     5,     4,
       5,     3,     4,     3,     1,     4,     4,     4,     4,     3,
       3,     1,     9,     8,     0,     1,     2,     1,     1,     1,
       3,     0,     1,     2,     1,     1,     1,     0,     1,     2,
       1,     3,     4,     4,     1,     1,     2,     0,     1,     2,
       1,     3,     1,     1,     1,     2,     0,     2,     2,     1,
       1,     0,     2,     3,     3,     3,     2,     3,     4,     3,
       4,     3,     4,     1,     3,     4,     3,     4,     1,     3,
       4,     5,     7,     6,     8,     5,     6,     4,     4,     5,
       3,     4,     1,     3,     3,     3,     3,     3,     3,     5,
       5,     3,     3,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     3,     2,     2,     2,
       2,     1,     3,     5,     6,     2,     4,     7,     2,     6,
       5,     6,     6,     4,     4,     5,     3,     3,     4,     6,
       2,     4,     4,     4,    10,     6,     8,     6,     4,     4,
       6,     4,     4,     4,     6,     4,     7,     7,     7,     6,
       6,     6,     6,     3,     4,     6,     8,     2,     2,     8,
       8,     6,     6,     1,     6,     6,     8,     8,     6,     8,
       6,     2,     8,     8,     2,     2,     2,     4,     4,     4,
       4,     3,     8,     6,     8,     4,     6,     4,     6,     8,
       4,     3,     6,     4,     6,     4,     7,     7,    10,     1,
       4,     4,     4,     4,     4,     6,     4,     4,     6,     2,
       3,     0,     4,     0,     3,     0,     1,     1,     3,     2,
       1,     1,     5,     6,     5,     5,     5,     7,     5,     6,
       5,     6,     5,     6,     5,     6,     5,     5,     5,     5,
       5,     6,     8,     4,     4,     4,     4,     4,     5,     7,
       7,     6,     6,     9,     0,     3,     3,     0,     2,     0,
       2,     2,     0,     2,     2,     0,     1,     2,     1,     1,
       1,     3,     4,     0,     1,     0,     3,     0,     3,     0,
       3,     1,     1,     2,     2,     2,     4,     2,     4,     1,
       2,     2,     2,     4,     0,     3,     2,     2,     3,     1,
       1,     1,     4,     2,     3,     1,     4,     0,     1,     0,
       2,     0,     3,     3,     1,     2,     2,     3,     2,     1,
       2,     1,     2,     1,     2,     2,     2,     1,     0,     1,
       1,     3,     1,     3,     1,     3,     0,     1,     0,     2,
       4,     5,     1,     1,     4,     1,     1,     5,     7,     5,
       7,     3,     3,     3,     4,     4,     1,     2,     2,     1,
       3,     3,     0,     1,     0,     1,     0,     1,     4,     1,
       1,     1,     1,     1,     1,     3,     5,     3,     3,     4,
       3,     3,     3,     8,     4,     1,     3,     3,     6,     4,
       0,     1,     0,     1,     1,     2,     2,     3,     3,     1,
       1,     2,     0,     2,     3,     3,     1,     1,     6,     6,
       1,     2,     0,     1,     1,     0,     1,     1,     1,     1,
       3,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     0,     2,     0,     1,     1,     0,     2,     0,
       2,     2,     3,     3,     1,     4,     0,     3,     1,     3,
       0,     2,     1,     3,     3,     2,     0,     0,     4,     3,
       1,     0,     1,     3,     1,     2,     0,     1,     3,     3,
       1,     0,     1,     1,     0,     1,     2,     1,     3,     3,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     2,     1,     2,     5,     2,     1,     3,     0,
       6,     6,     4,     6,     4,     5,     4,     4,     5,     4,
       4,     4,     5,     4,     6,     4,     1,     3,     1,     3,
       0,     2,     0,     1,     0,     1,     1,     3,     1,     1,
       8,     9,     8,     6,     7,     6,     0,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     4,     1,     3,     4,
       3,     1,     2,     1,     1,     1,     1,     3,     1,     1,
       1,     0,     1,     3,     0,     1,     3,     1,     1,     1,
       0,     5,    10,     0,     1,     3,     1,     3,     0,     1,
       9,     7,     8,     0,     2,     0,     2,     1,     1,     1,
       3,     0,     1,     0,     1,     1,     3,     1,     1,     2,
       2,     2,     1,     1,     1,     1,     0,     3,     0,     3,
       2,     4,     4,     3,     4,     4,     1,     3,     3,     6,
       2,     2,     0,     6,     0,     7,     6,     2,     5,     5,
       2,     2,     1,     4,     3,     2,     3,     2,     2,     1,
       1,     3,     5,     4,     3,     3,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     0,     1,
       0,     1,     1,     2,     1,     1,     0,     2,     0,     2,
       0,     2,     2,     0,     2,     2,     3,     3,     1,     1,
       1,     1,     1,     3,     1,     1,     0,     3,     0,     1,
       1,     0,     4,     0,     4,     1,     0,     3,     0,     3,
       3,     1,     2,     2,     2,     2,     2,     3,     1,     1,
       1,     1,     1,     1,     0,     1,     0,     3,     3,     3,
       1,     0,     2,     0,     4,     0,     3,     0,     1,     0,
       2,     0,     3,     3,     2,     2,     3,     0,     1,     1,
       2,    18,     1,     1,     0,     1,     0,     1,     1,     0,
       1,     1,     1,     0,     2,     2,     1,     3,     4,     3,
       3,     0,     2,     2,     1,     3,     3,     0,     4,     0,
       3,     1,     1,     0,     3,     2,     3,     1,     1,     2,
       0,     2,     3,     1,     3,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     2,     2,     2,     1,     1,     3,     5,     2,     1,
       1,     1,     1,     3,     5,     1,     3,     2,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       2,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     2,     2,     3,     5,     3,     3,     3,     6,
       6,     6,     4,     0,     2,     4,     6,     1,     3,     1,
       2,     2,     0,     2,     1,     3,     2,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     1,     0,     2,     2,
       2,     0,     2,     2,     2,     2,     2,     3,     3,     4,
       6,     2,     3,     3,     2,     1,     3,     3,     2,     2,
       1,     0,     2,     3,     0,     2,     2,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     4,     4,     1,     1,     1,     3,     3,     1,     1,
       2,     2,     0,     3,     2,     1,     1,     3,     4,     4,
       3,     6,     7,    10,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     7,     0,     9,     8,
       6,     5,     8,     0,    10,     7,     0,     1,     1,     1,
       0,     1,     1,     3,     2,     3,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     2,     2,     2,     0,     3,
       0,     1,     3,     1,     2,     2,     2,     1,     3,     3,
       1,     1,     3,     1,     3,     1,     3,     4,     4,     6,
       6,     1,     0,     3,     1,     3,     0,     2,     2,     2,
       2,     0,     3,     0,     3,     0,     3,     0,     1,     0,
       3,     2,     0,     1,     2,     0,     1,     4,     4,     5,
       2,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     3,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     1,     2,     1,     2,     3,
       3,     3,     0,     3,     3,     0,     7,     2,     0,     3,
       4,     4,     1,     1,     0,     2,     0,    12,     7,     6,
       0,     0,     0,     0,    14,     0,     0,     0,     0,    11,
       4,     4,     3,     4,     3,     3,     0,     2,     1,     3,
       5,     1,     1,     0,     1,     1,     0,     2,     0,     1,
       3,     5,     3,     3,     3,     1,     3,     4,     6,     7,
       0,     2,     1,     1,     0,     3,     1,     3,     1,     3,
       1,     2,     0,     3,     0,     1,     1,     0,     1
};

/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1773,  2723,  1104,  2675,     0,     0,     0,     0,     0,     0,
    2677,  2723,   105,  1894,  1895,  1699,  1722,     7,     0,  1104,
     343,     0,     0,   117,     0,  1736,     0,  1947,     0,     0,
    1104,     0,  1941,     0,     0,  1104,  1778,  1926,   320,     0,
    2677,     0,  1161,     0,  1808,  2565,     0,     0,     0,  1791,
       0,  2562,     0,     0,     0,     0,     0,     0,     0,     0,
    2566,     0,     0,     2,     8,    13,    41,     0,    77,    60,
      67,    30,    40,    38,    37,    35,    39,    36,    29,    93,
      84,    63,    24,    15,    20,    17,    26,    16,    19,    23,
      22,    25,    21,     0,    64,    96,  1066,    97,    32,    81,
      27,    28,    31,    74,    80,    75,    76,    89,  1134,  1132,
    1646,  1133,  1144,  1151,  1774,    44,    56,    48,    45,    47,
      51,    50,    58,    59,    46,    57,    55,    49,    53,    54,
      52,    69,    82,   101,     0,    42,    98,    94,    43,    61,
    1896,    62,    83,    78,    71,   102,    72,    90,    92,    91,
      73,   100,    95,    85,    18,    66,    86,    65,    14,    34,
      87,    88,    79,   103,    70,    99,    68,    33,     0,   945,
       0,     0,     0,     0,     0,     0,     0,     0,  1720,     0,
     898,  2721,  2722,  2723,  1106,  1105,     0,  2677,  2043,  1091,
       0,  2068,  2136,  2137,  2138,  2139,  2140,  2141,  2069,  2142,
    2070,  2143,  2144,  2145,  2146,  2147,  2071,  2072,  2148,  2149,
    2150,  2151,  2152,  2153,  2073,  2074,  2155,  2156,  2157,  2158,
    2159,  2075,  2076,  2160,  2161,  2162,  2078,  2163,  2164,  2165,
    2168,  2166,  2167,  2079,  2169,  2080,  2170,  2171,  2173,  2174,
    2183,  2175,  2176,  2177,  2178,  2179,  2180,  2081,  2181,  2182,
    2184,  2185,  2186,  2187,  2189,  2188,  2190,  2082,  2191,  2192,
    2194,  2196,  2197,  2198,  2199,  2200,  2083,  2201,  2202,  2203,
    2204,  2084,  2205,  2206,  2207,  2208,  2210,  2209,  2211,  2212,
    2127,  2213,  2214,  2065,  2216,  2217,  2218,  2219,  2220,  2221,
    2222,  2128,  2223,  2224,  2225,  2226,  2085,  2086,  2087,  2228,
    2229,  2230,  2088,  2231,  2232,  2233,  2235,  2236,  2089,  2237,
    2090,  2091,  2240,  2241,  2039,  2242,  2040,  2243,  2092,  2244,
    2245,  2246,  2247,  2093,  2248,  2249,  2250,  2251,  2252,  2253,
    2254,  2095,  2255,  2256,  2257,  2258,  2259,  2260,  2261,  2263,
    2264,  2265,  2266,  2267,  2268,  2270,  2271,  2272,  2273,  2274,
    2276,  2277,  2278,  2287,  2279,  2280,  2281,  2283,  2282,  2284,
    2285,  2286,  2288,  2269,  2289,  2290,  2291,  2292,  2293,  2294,
    2295,  2296,  2297,  2298,  2299,  2300,  2302,  2301,  2303,  2304,
    2305,  2306,  2307,  2308,  2309,  2310,  2311,  2312,  2313,  2314,
    2315,  2317,  2318,  2319,  2320,  2129,  2096,  2321,  2324,  2325,
    2326,  2327,  2328,  2097,  2098,  2099,  2332,  2333,  2100,  2334,
    2336,  2335,  2337,  2339,  2340,  2342,  2341,  2343,  2344,  2101,
    2102,  2103,  2346,  2347,  2348,  2130,  2349,  2351,  2350,  2131,
    2352,  2353,  2354,  2355,  2356,  2357,  2358,  2359,  2361,  2364,
    2362,  2363,  2365,  2132,  2104,  2367,  2105,  2368,  2133,  2369,
    2371,  2370,  2372,  2374,  2375,  2373,  2106,  2376,  2107,  2378,
    2379,  2380,  2382,  2109,  2383,  2384,  2385,  2387,  2386,  2388,
    2110,  2389,  2390,  2391,  2111,  2392,  2393,  2394,  2112,  2395,
    2067,  2113,  2396,  2114,  2398,  2399,  2115,  2116,  2400,  2401,
    2402,  2403,  2404,  2405,  2406,  2407,  2409,  2410,  2117,  2411,
    2412,  2413,  2414,  2118,  2415,  2416,  2417,  2418,  2419,  2420,
    2421,  2135,  2422,  2423,  2424,  2427,  2428,  2425,  2426,  2429,
    2430,  2431,  2432,  2437,  2435,  2436,  2438,  2439,  2440,  2119,
    2441,  2442,  2443,  2445,  2446,  2448,  2447,  2120,  2121,  2449,
    2450,  2122,  2452,  2451,  2453,  2454,  2455,  2457,  2458,  2459,
    2460,  2461,  2462,  2463,  2124,  2464,  2125,  2465,  2466,  2467,
    2108,  2094,  2123,  2172,  2397,  2262,  2322,  2238,  2154,  2366,
    2077,  2215,  2227,  2323,  2331,  2345,  2377,  2434,  2444,  2316,
    2329,  2338,  2239,  2381,  2408,  2433,  2134,  2456,  2275,  2234,
    2066,  2193,  2195,  2330,  2360,   274,  2046,   256,  2047,  2064,
    2063,  2126,     0,     0,  2554,  2553,     0,     0,  2678,  2679,
     588,     0,     0,     0,     0,     0,     0,  1723,   847,   588,
     588,     0,     0,     0,   195,  2706,  2706,  2723,  2725,  2727,
       0,  1720,  1720,  1720,     0,     0,  1720,  1720,     0,     0,
    1720,  1720,  1720,  1720,     0,     0,   110,  1901,   344,   345,
       0,  2600,  2613,  2614,  2610,  2615,  2633,  2616,  2620,     0,
    2612,  2662,  2057,     0,  2619,     0,  2662,  2617,     0,  2662,
       0,  2618,  2623,  2634,  2662,  2611,  2048,  2056,  2055,  2662,
    2469,  2468,  2049,     0,  2602,     0,  2035,     0,     0,  1738,
    1739,  1737,  1024,     0,     0,  1948,  1949,     0,  1952,     0,
    1953,  1956,     0,  2550,     0,     0,     0,     0,     0,  1107,
       0,  1741,  1779,  1742,  1740,  1720,     0,   310,   319,   321,
     322,   318,  2600,     0,     0,  2679,  2690,  2705,  2700,  2699,
    2702,  2703,  2704,  1166,  2701,  2698,     0,  1162,  1164,  1165,
     785,     0,     0,  2498,  2501,  2311,  2337,  2502,  2439,  2499,
    2108,  2500,  2134,     0,     0,  2525,  2470,     0,  2492,     0,
    1868,   322,  1036,  1060,  1044,  1037,  1060,  1792,     0,     0,
       0,  2564,     0,  1950,     0,  1621,  1624,  1626,  2771,     0,
       0,     0,  2766,     0,  2772,     0,  2137,  2070,  2147,     0,
    2013,     0,     0,     0,  1496,     0,  2075,     0,  2163,  2165,
       0,     0,  1191,  1191,   739,     0,     0,     0,  2188,  2190,
    2019,     0,     0,     0,  2010,  2020,  2087,  2231,  2233,     0,
    2012,  2241,     0,     0,     0,     0,  2259,  2017,     0,     0,
    2299,  2302,     0,     0,  2305,  2306,  2307,  2308,  1996,  1245,
     739,  2009,  2016,  2002,  2343,  2344,     0,  2352,     0,     0,
    2382,     0,     0,  2386,  2391,     0,     0,  2418,     0,     0,
     739,  1995,  2437,  2435,  2436,  2438,     0,  2011,  2119,  2018,
       0,  2452,  1191,   739,   739,     0,     0,     0,  2460,  2461,
    2467,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1244,     0,  1323,  2697,     0,     0,  1237,  1256,  1257,  1259,
    1359,  1258,  1264,  1380,  1265,  1381,  1263,  2006,  1262,  1261,
    2007,  2008,  1255,  2030,  2046,  2029,  1271,  2695,     0,     0,
       0,     0,     0,  2696,     0,  2790,     0,     0,     0,     0,
       1,    10,     0,     0,  1191,  2054,  2452,     0,  2053,  2052,
    2058,  2661,  2666,  2655,     0,  1038,  1052,     0,  1136,     0,
    2692,  1654,  1647,     0,  2692,  1654,  1167,  1646,  1167,  1785,
    1778,  2087,  1773,  1898,  2035,     0,   890,   946,     0,   894,
       0,  2567,     0,   892,     0,     0,   953,     0,   913,     0,
       0,  2732,   896,     0,  2676,     0,  1117,  1128,  1488,   273,
       0,   119,   121,  1074,  1716,  1093,     0,  2682,     0,     0,
       0,     0,  2728,     0,     0,     0,     0,     0,     0,     0,
     882,   588,  2732,  2732,  2706,  2726,     0,  1183,  1698,  1182,
    1186,  1203,  1208,  1222,  1184,  2029,     0,     0,     0,     0,
       0,     0,     0,     0,  1724,     0,     0,     0,     0,     0,
    1720,   112,     0,     0,  2601,  2593,  2631,  2630,  2635,     0,
    2632,  2628,  2636,  2637,  2621,     0,  2607,  2625,     0,  2609,
    2627,  2626,  2606,  2622,  2629,  2608,     0,  2604,  2596,     0,
       0,  1609,  2570,     0,     0,   118,     0,  1025,  1742,     0,
    2785,  2782,  1946,     0,  1957,  1958,  1954,     0,     0,     0,
       0,  1861,  1860,     0,  1942,  2691,  1109,     0,     0,     0,
    1743,     0,     0,  1928,  1935,  1933,  1927,  1930,   311,     0,
       0,   341,  2587,     0,     0,  2596,  2685,  2682,  1154,  1163,
     784,     0,     0,   787,  2524,  1759,  1760,   795,     0,   786,
       0,     0,     0,     0,  2472,  2534,  2531,  2530,  2483,  2478,
    2477,  2061,  2653,  2476,     0,  2511,     0,   791,   793,   792,
    2521,   790,     0,     0,  2439,  2473,  2492,     0,     0,  2471,
       0,     0,   785,  1883,     0,     0,  1883,     0,  1654,  1864,
    1869,  1867,     0,  2504,  1840,  2505,  1860,     0,  1816,  1839,
       0,  1793,  1832,     0,  2506,     0,  1863,     0,  1654,  1883,
    1809,     0,     0,     0,     0,     0,     0,   317,  1065,  1064,
    1040,  1061,  1062,     0,     0,  1043,  1045,  1046,   185,  1790,
    2783,  2784,  2563,  1622,     0,     0,     0,  2001,  2000,  2044,
    2768,  1999,  2776,  2778,  2762,     0,  2765,  2764,  2773,     0,
       0,  1614,  1278,  1614,  1614,  1614,  1497,     0,     0,     0,
       0,     0,     0,     0,  1614,     0,  1317,  1290,     0,  1318,
       0,     0,     0,  2021,     0,     0,     0,  1275,     0,     0,
    1488,     0,  1467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1492,  1494,  2029,  1614,     0,     0,  1614,     0,
       0,     0,     0,     0,   781,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1614,  1614,     0,     0,
    1614,  1331,  2023,     0,     0,     0,  2022,     0,     0,     0,
    2015,  2014,  1997,     0,  1334,  1336,  1335,     0,  1614,  1614,
       0,     0,     0,  1614,  1614,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1268,  1267,  1269,
       0,  2697,     0,  2507,  1463,  1465,     0,     0,     3,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1270,     0,     0,  1998,     0,     0,  1375,     0,     0,   530,
       4,     6,     0,     0,     0,  1135,  1150,  1149,    11,   104,
    2060,     0,     0,     0,     0,     0,     0,     0,   928,     0,
       0,     0,     0,     0,  1072,     0,  1068,  1067,     0,  1041,
    1054,  2201,     0,     0,  1697,  1691,  1694,  1693,     0,  2694,
    2693,     0,  1167,  1655,  1663,  1664,  1662,  1656,  1657,  1661,
    1660,     0,  1167,     0,     0,  1141,  1168,  1170,  1654,  1143,
    1654,  1167,  1789,  1788,  1787,     0,  1785,  1024,     0,     0,
    1888,  1889,  1890,  1891,  1892,  1887,  1886,  1899,  1900,  2730,
    2731,  2729,   797,  2724,   257,     0,     0,   257,     0,     0,
       0,     0,  1022,  1761,  1022,     0,  1761,  1761,  1022,  1761,
       0,     0,  1761,  1761,  1761,  1761,     0,     0,   798,  1761,
       0,     0,  1022,     0,  1761,     0,  1006,     0,     0,  1761,
    1761,  1761,  1761,  1761,  1022,     0,     0,  1761,  1761,     0,
    1032,     0,     0,  1761,  1761,  1761,  1761,     0,  1761,  1761,
       0,  1761,     0,     0,   984,   590,   615,   616,     0,   888,
     889,   947,   949,  1010,   955,   954,   981,   986,  1008,  1009,
    1721,  2794,   900,     0,     0,   899,  2732,  1088,     0,     0,
     840,   839,     0,     0,  1128,  1119,  1490,     0,  1489,   255,
       0,     0,  1076,  1075,     0,  1073,  1101,  1100,  1098,     0,
    1099,  1097,  1092,  1094,  1095,  2681,     0,     0,  2683,  2687,
    1243,  1242,     0,   193,     0,     0,     0,     0,     0,   588,
       0,  2661,   207,   191,     0,     0,   868,   883,     0,     0,
     588,     0,     0,     0,  2720,  2708,  2715,  2716,  2719,  2718,
    2717,     0,  2714,  2707,  2710,  2711,  2713,  2712,  2732,  1196,
       0,  1241,  1240,     0,  1239,  1238,     0,  1185,     0,     0,
    1190,  1189,  1246,  1247,  1248,  1249,     0,  1250,  1251,  1252,
       0,     0,     0,     0,     0,     0,     0,     0,  1702,  1709,
    1704,     0,  1724,  1706,  1713,  1720,   511,   510,  1728,  1729,
    1711,   594,  1726,     0,  1710,  2651,  1707,  1026,  1715,  2807,
       0,     0,   111,     0,     0,     0,     0,  1918,  1920,  1923,
    1919,     0,  1922,     0,  1921,  1902,  1905,  1911,  1924,     0,
       0,   342,   346,   348,     0,   351,     0,  2624,  2664,     0,
       0,  2605,  2598,  2599,  2597,     0,  2638,  2603,  1610,  1611,
       0,  2569,  2225,  2319,     0,  1617,  2036,  2787,     0,     0,
       0,     0,  1955,     0,  2552,  1609,  2551,  2555,  1103,     0,
     107,   108,     0,     0,     0,  1108,  1112,     0,  1078,  1526,
    1932,  1939,  1937,     0,   309,   334,   329,   337,   331,   333,
     332,   338,   339,   340,   335,   330,   336,   323,     0,     0,
       0,     0,  2585,     0,  2686,     0,  2688,     0,  1617,  1155,
    1154,     0,     0,     0,  2527,     0,  2523,  2522,     0,  2542,
    2474,     0,  2536,  2537,     0,  2528,     0,  2529,     0,  2482,
       0,     0,  2485,     0,     0,     0,     0,     0,     0,     0,
    2526,  2491,  2490,     0,  2493,  2494,     0,  2497,  2546,  2547,
    2544,  2545,  2548,  2549,  2543,  2518,  1876,     0,     0,  1838,
       0,   588,     0,     0,     0,     0,     0,     0,     0,  1810,
       0,     0,  1831,  1874,  1875,  1883,     0,  1873,     0,  1883,
       0,  1846,  1864,     0,  1883,  1805,     0,     0,  1797,  1802,
    1798,     0,  1804,  1803,  1806,  1794,  1795,  1876,  1821,   185,
    1864,  1830,  1837,  1820,  1827,  1835,  1864,   845,   844,   843,
       0,     0,  1864,  1883,  1883,     0,  1049,  1050,     0,     0,
       0,  1039,  1623,     0,  1628,     0,     0,     0,  2763,  2779,
    2761,  2767,  2774,  2775,  2760,     0,     0,  1615,  1614,     0,
       0,     0,     0,     0,     0,  1498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1192,     0,   740,  1341,     0,
       0,     0,     0,     0,  1585,  1586,  1587,  1588,  1596,  1589,
    1590,  1591,  1598,  1603,  1592,  1593,  1599,  1600,  1601,  1594,
    1602,  1597,  1595,  1604,     0,  1584,     0,     0,  1608,  1605,
    1607,  1606,     0,  1468,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1614,     0,     0,     0,
    1614,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1351,     0,     0,     0,
       0,     0,  1614,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1313,     0,  2032,  2031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1414,     0,
    1414,     0,     0,     0,     0,     0,  1272,     0,     0,     0,
       0,     0,     0,     0,  1234,  1235,  1225,  1226,  1223,  1224,
       0,  1228,     0,  1227,  1231,  1232,  1233,  1236,  1260,  1266,
    1286,  1287,  1186,     0,  1376,  1377,  2033,     0,   531,     0,
       0,   534,     0,  1761,  2791,     0,    12,     9,   936,     0,
    2059,     0,     0,     0,     0,     0,  2670,  2668,     0,  2669,
    2667,  2643,  2656,     0,   914,     0,     0,     0,     0,     0,
       0,     0,     0,   185,     0,  1056,  2045,  1696,   788,  1692,
       0,  1651,  1648,  1650,  1147,  1145,  1137,     0,     0,  1148,
    1146,  1139,  1175,  1174,  1177,     0,  1169,  1167,  1167,  1142,
       0,     0,  1718,  1783,  1786,     0,  1897,     0,   797,   584,
     587,   586,   895,     0,     0,   893,     0,     0,   471,   471,
       0,  1023,   882,   841,  1104,   841,   990,     0,   882,     0,
    1762,     0,     0,     0,  1104,     0,     0,     0,     0,     0,
    1104,     0,     0,     0,     0,     0,  1761,     0,   997,     0,
     957,     0,     0,     0,     0,     0,   998,     0,     0,     0,
     958,  1761,     0,     0,     0,     0,     0,     0,  1104,     0,
       0,     0,  1104,  1035,     0,  1034,  1033,     0,     0,  1104,
    1104,     0,     0,     0,     0,   621,   622,     0,     0,     0,
       0,   977,   978,   591,  1761,  1761,     0,   951,   948,   797,
     797,  1761,  2802,   937,     0,     0,   897,     0,     0,  1085,
    1121,  1115,  1120,  1118,  1128,     0,  1575,     0,   275,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   185,   151,   176,     0,     0,     0,     0,
       0,     0,     0,   185,   123,  1717,  1102,  1096,  2680,  2684,
     589,   797,     0,     0,     0,     0,     0,     0,   456,     0,
    2666,  1761,     0,     0,     0,   797,     0,     0,     0,   256,
    2755,     0,  2709,  1181,  1188,  1187,  1194,  1193,  1195,  1199,
    1204,  1197,  1201,     0,  1253,  2142,  1206,     0,     0,     0,
    1209,  1636,  1220,     0,     0,     0,     0,     0,  2026,  2033,
       0,  1011,  1712,     0,   595,  1862,  1761,     0,  1028,  1027,
    1708,  2808,  1705,  1026,     0,   113,   115,  1916,  1913,  1912,
    1914,   185,  1915,     0,  1925,  1903,  2188,  2437,  2438,   355,
       0,   327,   326,   328,   352,     0,     0,  2596,  2663,     0,
       0,  2647,  2650,  2035,     0,     0,  2591,  1613,  2580,  2576,
    2581,  2583,  2579,  2582,  2584,  2577,  2578,  1617,     0,     0,
    1654,  1616,  1526,  2781,  2786,  1123,  1124,  1128,     0,     0,
       0,   109,     0,     0,  1943,     0,  1110,     0,     0,  1083,
    1082,  1084,  1077,  1079,  1080,     0,     0,  1527,     0,  1936,
    1938,   185,  1929,     0,     0,     0,  2596,     0,     0,  2689,
    1157,     0,     0,     0,  1156,  1158,  1159,  1503,  1502,  1533,
    1530,  1529,  1532,  1531,  1534,  1526,  1609,  1637,  1617,     0,
       0,     0,   796,   794,     0,     0,     0,  2541,  2533,  2535,
    2532,  2484,  2062,  2654,     0,  2514,  2515,  2516,  2512,  2513,
       0,  2519,  2517,     0,  2496,     0,  1878,  1884,  1885,     0,
       0,  1855,  1849,  1848,  1844,  1850,  1856,  1845,  1859,  1858,
    1857,  1818,  1817,  1813,  1865,  1854,  1852,  1841,  1880,  1853,
    1851,  1799,  1800,  1801,     0,  1654,     0,  1878,  1847,  1883,
    1883,     0,     0,  1883,  1834,  1836,  1063,  1048,  1047,     0,
    1627,     0,  1625,  2769,  2777,     0,     0,  1337,     0,  1425,
    1475,  1425,  1425,  1425,     0,     0,     0,     0,     0,  1338,
       0,  1288,  1339,  1340,     0,     0,     0,  1425,     0,   741,
       0,     0,  1291,  1292,  1283,     0,     0,  1360,     0,  1471,
    1293,     0,     0,     0,     0,     0,  1361,  1493,     0,  1495,
    2033,     0,  1425,  1345,  1298,     0,  1425,     0,  1299,  1362,
    1363,  1364,     0,  1366,     0,  1347,     0,     0,  1350,     0,
       0,  1301,  1425,  1425,     0,     0,     0,     0,  1425,  1303,
       0,     0,     0,  1302,     0,     0,     0,     0,     0,     0,
       0,  1305,     0,  1284,  1425,  1425,  1353,     0,     0,  1355,
       0,  1314,  1614,  1425,  1462,     0,  1406,  1405,  1419,     0,
       0,  1419,     0,     0,     0,  1407,  1404,  1403,     0,  2508,
    2509,  2510,   884,  1464,  1276,     0,     0,  1379,  1367,     0,
    1488,     0,     0,     0,     0,     0,     0,     0,   536,     0,
     532,     0,  1761,   908,   909,   910,   911,  2657,  2658,  2646,
    2645,  2644,  2641,     0,     0,     0,     0,     0,   929,   931,
       0,     0,   907,   915,   916,   181,  2041,  1681,  1682,  1680,
    1678,  1679,   182,   183,  1671,  1672,  1668,  1669,  1667,  1670,
     184,  1071,  1070,  1069,  1053,  1042,     0,     0,  1058,     0,
    1963,  1690,  1652,  1653,  2028,     0,  1659,  1658,     0,     0,
    1180,  1177,  1171,  1178,     0,  1138,  1140,     0,  1526,  2035,
       0,     0,     0,  2037,     0,  1688,  1689,  1674,  1675,  1673,
    1676,  1893,  1677,  1687,   585,     0,     0,     0,     0,     0,
       0,     0,   258,   267,  2568,     0,   491,     0,     0,     0,
       0,     0,     0,     0,     0,   212,   498,  1761,  1761,  1761,
     903,   594,   473,   475,   476,   477,   478,   479,   904,   905,
     658,   883,   842,   882,   959,   882,     0,     0,     0,   841,
     655,   882,     0,   657,     0,  1017,  1016,  1018,     0,     0,
       0,   604,   599,     0,   610,   979,  1093,   980,  1582,     0,
     601,   602,   603,   623,     0,     0,   612,     0,     0,   962,
     995,   996,  1026,   596,     0,     0,     0,   636,   637,   635,
     617,   624,  1020,  1019,  1021,   597,   598,     0,     0,  1007,
    1644,  1651,   626,   605,   625,   600,     0,     0,     0,  1002,
     970,     0,   634,   632,   629,   631,   630,   633,   613,   606,
     607,   609,   608,   620,   611,   969,  1924,     0,     0,   952,
    1022,  1022,   985,   982,   983,   950,   956,   987,     0,  1761,
    2804,     0,   939,   941,  2733,  2734,  1626,     0,     0,     0,
    1578,     0,  1579,  1576,  1577,     0,  1491,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   120,     0,     0,     0,     0,     0,     0,     0,     0,
     122,   194,   797,     0,   480,     0,     0,     0,  1685,  1683,
    1684,   202,  1686,     0,   458,     0,   928,     0,     0,   875,
     877,   876,   869,   870,     0,  1962,     0,  1961,   657,   188,
     515,   517,   520,   518,   594,   592,  1753,  1754,   522,     0,
       0,   221,  2750,     0,     0,   452,   451,     0,  1200,  1205,
    1198,  1202,  1207,     0,     0,     0,  1218,  1217,     0,     0,
    1210,  1636,  1221,     0,  1703,  1701,  1013,  1012,  1714,  1727,
       0,  2652,  1700,   116,     0,  1917,  1910,  1906,     0,   347,
     356,   349,   353,   354,   350,     0,  2665,  2673,     0,     0,
       0,     0,  1654,     0,  1618,  2571,     0,     0,  1128,  1130,
    1959,     0,  2558,  2559,  2557,  2556,  1945,  1944,     0,  1113,
    1114,  1081,     0,     0,  1756,  1755,     0,  1733,  1735,  1744,
    1747,     0,  1940,  1934,     0,   324,     0,     0,  2590,     0,
       0,     0,  1503,  1533,  1530,  1529,  1532,     0,     0,     0,
       0,  1516,  1524,  1522,  1524,  1519,     0,     0,     0,  1609,
    1626,     0,  1619,  1637,  2481,  2480,  2479,  2475,  2539,  2538,
    2540,  2487,   594,  2486,     0,  2495,  1877,     0,  1822,     0,
    1843,     0,     0,     0,  1815,     0,  1833,  1796,  1824,  1814,
    1812,  1864,  1864,  1811,   186,  1629,     0,  2780,     0,     0,
    1425,  1382,  1426,  1384,  1385,  1388,     0,  1499,     0,  1280,
     753,   753,   737,  1483,   733,  1487,     0,   711,  1479,   737,
    1481,   753,     0,     0,     0,     0,  1425,  1390,  1425,     0,
       0,     0,     0,     0,     0,  1469,     0,     0,     0,  1285,
       0,  1371,  1425,  1394,  1425,  1392,     0,     0,     0,     0,
       0,     0,     0,  1398,  1396,     0,     0,     0,     0,  1425,
    1400,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1397,  1399,     0,     0,     0,     0,     0,  1386,
    1433,  1427,  1428,  1429,  1430,     0,     0,     0,  1417,  1417,
    1419,     0,  1419,     0,  1408,  1273,     0,  1466,  1230,  1229,
    1378,     0,  2034,     5,     0,     0,     0,     0,   535,     0,
     545,     0,     0,     0,  2788,     0,     0,     0,  2642,   934,
     932,   933,   935,   930,   919,   918,   920,     0,     0,   917,
    1055,     0,     0,  1051,   789,     0,  1971,  1649,  1176,  1179,
    1172,  1173,     0,  1617,     0,  1617,  1719,  1784,  1783,     0,
     261,   264,   262,     0,   263,     0,     0,   499,   902,   594,
     493,   495,   496,   497,   216,   215,   217,   218,   220,   219,
     214,   906,     0,     0,     0,     0,  1862,     0,     0,     0,
       0,     0,   882,   837,   838,     0,     0,     0,   642,   644,
     645,     0,   724,   678,   669,   753,   672,   671,   805,   737,
     683,   730,   727,     0,   732,   729,   704,   703,   720,   702,
     707,   691,   805,   805,   690,   723,   805,   708,   706,   710,
       0,   711,   731,   716,   705,   709,   725,   701,     0,   722,
     753,   737,   737,   687,   721,   805,     0,   714,   753,   647,
     757,   689,   812,     0,     0,   753,   755,   733,   874,   873,
    1001,     0,     0,   965,     0,   966,     0,   968,   795,   618,
     973,   994,   993,     0,   974,   619,  1029,   964,     0,  1645,
     963,     0,     0,     0,  1078,     0,   628,   627,  2798,  2795,
    2796,     0,  2806,  2805,  2807,     0,     0,     0,   226,  2735,
       0,     0,  1127,  1129,     0,  1116,   177,   175,   154,   158,
     160,   153,   156,   157,   159,   163,   164,   162,   165,   166,
     169,   170,   167,   161,   168,   155,   173,   171,   172,   152,
       0,   125,   126,     0,   127,   128,     0,   129,   130,     0,
     131,   124,     0,  1761,  1761,  1761,  1761,   197,   594,   482,
     484,   485,   486,   487,   490,   488,   489,   202,     0,     0,
     201,     0,  1761,  1761,   198,   594,   460,   462,   463,   464,
     465,   466,   469,   467,   470,   468,   208,   914,  2792,  2793,
    2794,     0,   521,   189,     0,     0,   516,   514,   797,   519,
       0,     0,   276,   640,   641,   639,   638,     0,  2756,   455,
     453,   454,     0,  1215,  1211,     0,  1635,     0,     0,  1219,
    2027,  1015,  1014,   508,   114,  1908,     0,  1904,     0,     0,
       0,     0,  2595,  2649,  2648,  2671,  2639,  2572,  1769,  1768,
       0,  1767,     0,  1770,  1770,  1125,  1128,  1130,     0,  1126,
       0,  1960,  2560,  2561,  1111,     0,  1581,  1734,  1776,     0,
       0,     0,  1751,  2025,  2024,  2031,  1764,  1752,  1758,     0,
       0,     0,  2586,     0,     0,  1541,  1535,  1537,  1538,  1540,
       0,     0,  1503,  1502,  1160,  1518,  1517,  1525,     0,  1523,
    1524,  1524,     0,     0,  1512,  1511,     0,  1572,  1542,     0,
       0,  1630,  1619,     0,  2520,  1879,  1654,  1829,  1828,  1842,
    1881,  1882,  1807,  1654,  1617,  1883,  2770,     0,  1315,  1383,
    1500,     0,     0,   754,  1476,   805,     0,  1485,     0,  1486,
     735,   734,   712,  1480,  1484,  1482,  1478,  1279,  1289,  1282,
    1281,  1391,  1389,     0,     0,  1321,  1343,     0,  1322,     0,
       0,     0,     0,     0,  1295,     0,  1297,     0,     0,  1373,
    1395,  1393,  1346,  1365,  1324,  1348,     0,  1300,  1274,     0,
    1325,     0,  1330,  1328,     0,  1401,  1304,     0,     0,  1311,
       0,  1309,     0,  1310,     0,  1312,  1352,  1354,     0,     0,
       0,     0,  1425,  1434,     0,  1435,  1421,  1420,  1411,     0,
    1416,  1415,     0,  1412,     0,  1422,   885,  1368,     0,   541,
     528,     0,   526,   530,     0,   523,     0,     0,   539,  2789,
    2659,  2660,   923,     0,   922,   925,   924,     0,  1057,     0,
       0,     0,     0,     0,  1964,  1966,     0,  1695,  1617,  1646,
    2036,  1781,     0,  2038,  1617,   266,   265,   271,   272,  1862,
     213,   501,   512,   513,   500,   502,   474,     0,   961,     0,
       0,   547,     0,     0,     0,     0,     0,   879,  1651,   989,
     657,   647,   677,   670,   688,   799,   810,   808,   802,   713,
     805,     0,   806,   807,   674,   686,   728,   726,     0,   697,
       0,   692,   805,   700,   696,   712,   715,   717,   719,     0,
     805,   685,   684,   694,   681,   742,     0,  1029,   648,   649,
     765,     0,     0,     0,     0,   761,     0,   817,     0,     0,
     768,     0,   659,   758,   760,   661,     0,     0,   813,   812,
     676,   805,   812,   742,     0,   756,   742,   742,  1000,     0,
    1029,  1583,  1005,     0,     0,  1031,   992,  1643,  1004,  1003,
       0,   967,   614,     0,     0,  2800,     0,  2803,   912,     0,
     236,     0,     0,   938,     0,   229,   227,   238,     0,  1090,
    1086,  1580,     0,   178,   180,   132,     0,   134,   136,   141,
       0,   143,     0,   146,     0,   148,  2042,   150,     0,   137,
       0,     0,     0,     0,     0,     0,  1862,   200,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1862,   196,  2802,
       0,     0,   797,   593,     0,     0,     0,   277,   279,     0,
       0,   286,     0,     0,  1216,  1213,     0,     0,     0,   364,
     359,   367,   361,   363,   362,   368,   369,   370,   371,   365,
     360,   366,   358,   357,     0,     0,     0,  2592,  1617,     0,
    1770,     0,  1730,  1732,  1122,  1131,     0,  1528,     0,     0,
    1745,  1748,     0,     0,     0,     0,  1765,     0,   325,  2589,
       0,     0,  1160,  1504,  1520,     0,     0,  1513,  1521,     0,
       0,     0,     0,  1566,  1567,     0,     0,  1570,  1573,  1574,
    1539,  1641,  1640,  1620,     0,  1153,  1630,  2488,  1823,   185,
    1826,  1819,     0,  1501,     0,     0,     0,     0,  1477,     0,
       0,     0,     0,     0,  1472,  1474,  1470,  1425,     0,     0,
       0,     0,     0,  1277,     0,  1369,     0,     0,     0,     0,
       0,     0,  1308,  1306,  1307,   814,  1357,  1356,     0,  1387,
    1431,     0,  1437,  1418,  1410,  1409,     0,  1419,   529,     0,
     527,     0,     0,   525,   533,     0,   540,     0,   927,     0,
    1059,     0,     0,     0,     0,  1965,     0,     0,  1972,  1974,
    1782,  1665,  1646,   494,     0,   550,   960,     0,     0,   656,
       0,     0,   859,     0,     0,   880,   643,   646,   801,   800,
     804,     0,   803,   673,   812,     0,   886,   693,   718,     0,
     695,   746,   747,   748,   682,   743,   745,   819,   988,   771,
     775,   777,   776,   772,   770,     0,     0,     0,     0,     0,
     782,   763,   783,  2003,     0,     0,   778,   779,   780,   773,
     769,   774,     0,   759,     0,     0,   767,   762,   675,   679,
     680,   666,     0,   667,   668,   999,   991,   975,  1030,     0,
    2799,  2797,  2801,   237,   225,     0,     0,   940,   942,     0,
       0,   943,     0,     0,  1089,   174,     0,   133,     0,   142,
       0,     0,   147,     0,     0,   138,     0,   848,   507,   506,
     505,   504,   483,     0,   854,   203,   204,   206,     0,   457,
     503,   509,   461,  2804,   859,   190,   187,     0,     0,  2751,
       0,   795,  2749,   289,   287,   288,     0,   282,   284,     0,
       0,  1212,     0,  1909,  1907,  2671,  2674,     0,  1654,  1766,
    1731,     0,     0,  1775,  1777,  1746,  1749,  1750,  2033,  1763,
    1757,  2588,     0,  1536,  1515,  1514,  1507,     0,  1509,     0,
    1562,  1562,  1571,  1642,     0,  1638,     0,  1631,  1632,  1152,
    1825,  1316,   751,   749,   752,   750,   738,     0,  1319,  1320,
    1344,     0,  1402,  1342,     0,  1296,  1370,     0,     0,  1349,
    1326,  1329,  1327,  1332,  1333,     0,     0,     0,     0,  1439,
    1423,  1424,     0,   542,     0,   532,   546,   524,   921,   926,
    1969,  1970,     0,  1967,     0,     0,  1973,     0,  1780,  1665,
     848,     0,   570,   548,   854,     0,   859,     0,  1761,     0,
       0,   650,   860,   861,   863,   864,   867,   878,     0,   811,
     809,   805,     0,   805,   744,     0,   823,  2005,  2004,   764,
     766,   771,   662,     0,   972,   976,     0,   223,   228,   239,
     240,   901,  2738,  2736,     0,   179,   135,   144,   145,   149,
       0,     0,     0,  1011,   849,   850,   852,     0,  1011,   855,
     856,   858,     0,   192,  1011,  2748,   234,     0,   278,   280,
    2757,   286,     0,     0,  1214,  2594,  2672,  2573,     0,  1526,
       0,     0,     0,     0,     0,     0,     0,  1639,     0,     0,
       0,  1473,     0,  1372,  1374,   815,     0,  1436,     0,  1460,
    1459,  1461,  1432,     0,  1413,     0,     0,  1968,  1976,  1975,
    1666,  1772,   651,     0,     0,  1761,     0,     0,  1761,  1761,
    1761,  1761,   565,   571,   573,     0,   652,     0,   653,   866,
       0,   872,   871,   862,  1651,   698,   887,   699,     0,   822,
       0,   827,     0,   971,   230,   944,   391,     0,  2737,  1087,
       0,     0,     0,   210,   851,   199,   211,   857,     0,   209,
     226,   235,     0,   259,   283,   795,     0,     0,   788,     0,
    1609,  1508,  1510,     0,  1563,     0,  1575,     0,  1634,  1633,
     736,  1294,  1358,  1438,     0,     0,     0,     0,  1454,  1441,
    1442,     0,     0,     0,     0,   559,   552,   555,     0,     0,
    1761,  1761,     0,     0,     0,     0,     0,   549,   572,  1761,
     654,   865,   881,   820,     0,   824,   825,   826,     0,   818,
       0,     0,   232,   417,     0,   403,   389,     0,     0,     0,
     393,   241,   244,   242,  1773,   243,   249,     0,   250,   251,
     252,   253,   254,   245,   415,   416,   248,   246,   247,     0,
    2050,     0,  2051,     0,     0,     0,   139,     0,   853,   205,
     238,   795,  2758,   285,  2744,  1771,  1977,  2316,     0,  1545,
       0,  1543,  1565,  1564,     0,     0,     0,     0,  1449,     0,
       0,     0,  1447,     0,  1443,     0,  1440,  1445,  1444,   543,
       0,   559,     0,   557,     0,   553,   551,   554,   581,     0,
       0,   577,   578,   576,   574,     0,     0,   567,     0,   821,
       0,     0,   663,   231,     0,   224,     0,     0,   402,   405,
       0,     0,   408,   398,   397,   399,     0,   392,   391,   391,
     445,   396,   442,   441,   434,     0,  2739,     0,     0,     0,
    2752,   269,   268,   260,     0,   391,  2742,  2743,     0,  2746,
       0,  1963,     0,  1544,     0,     0,  1550,  1569,  1568,     0,
    1450,     0,  1452,  1451,     0,     0,  1456,     0,  1457,     0,
     537,   543,   556,     0,   563,     0,   561,   564,   579,   580,
     570,   566,     0,   575,   833,     0,   832,     0,   829,   828,
     665,   664,   757,   233,   418,   429,   432,   424,   404,     0,
       0,     0,   394,   391,     0,   378,   376,   377,   383,   384,
     385,   386,   387,   388,   379,   382,   380,   381,   391,     0,
     294,     0,     0,  2740,  2741,   140,   240,   259,   270,  2759,
    2745,   391,     0,  1971,     0,  1546,  1547,  1551,     0,     0,
    1448,  1446,  1455,  1458,   544,   538,   558,   560,     0,   569,
     568,   835,   836,   834,     0,     0,   660,     0,     0,   391,
     425,     0,   400,     0,   409,     0,     0,   292,   448,   446,
     290,   436,   436,   222,  2753,  2747,     0,  1979,  1549,     0,
    1453,   562,     0,     0,   426,   432,   422,   430,   391,     0,
       0,   390,     0,   444,   293,     0,     0,     0,   391,     0,
     435,   437,   439,   391,  1978,     0,  1983,  1552,   831,   830,
       0,   423,     0,     0,   421,   401,   406,   391,   449,   391,
     303,   302,     0,     0,   372,   443,     0,   295,  2754,     0,
       0,  1990,     0,  1559,  1560,  1548,  1553,  1554,     0,   427,
       0,   391,     0,   391,     0,   391,     0,     0,   795,     0,
       0,   291,  1981,  1982,  1980,  1985,     0,     0,  1987,  1988,
       0,  1951,  1561,  1555,     0,  1556,     0,     0,     0,   419,
     391,   407,   412,     0,     0,   298,   373,   374,     0,   300,
    1989,  1984,     0,  1991,  1993,     0,     0,     0,  1558,  1557,
     391,   391,   408,   411,   450,   447,     0,     0,   296,   297,
     308,   307,     0,  1986,     0,     0,   391,   391,   413,   316,
     314,   391,   304,   312,   306,     0,   313,   375,   301,  1992,
    1994,     0,   299,   315,   305
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    62,    63,   942,  2067,    64,    65,    66,    67,    68,
    1730,    69,  1051,  1672,  2345,  2346,    70,   687,    71,  1560,
    1561,  2273,  2274,  3441,  3876,  3877,  3450,  3890,  3444,  3880,
    3881,  3447,  3884,  3885,  2263,  2264,  3872,  3873,  2265,  1881,
      72,    73,    74,    75,  2281,    76,  3470,  2290,    77,  2764,
    2765,  1604,  3501,  3863,  4444,  3867,  4522,  4615,  4460,  2882,
    4161,  4445,  4446,  4531,  2298,  2132,  4562,  2752,  4643,  2753,
      78,   999,  3916,  3917,  3918,  4206,  4207,  4208,  4209,  4798,
    4703,  4770,  4799,  4896,  4902,  4822,  4911,  4912,  4913,  4900,
    1119,  4914,    79,   719,   720,  1121,  1757,  2359,  1758,    80,
      81,   650,  1691,  1692,  1693,  1694,  3014,  2360,  3009,  3010,
    3942,  4823,  4898,  4704,  4705,  4622,  4706,  4534,  4707,  4626,
    4708,  4537,  4709,  4710,  4711,  4712,  4790,  4713,  4621,  4815,
    4700,  4701,  4792,  4872,  4893,  4714,  4544,  4616,  4757,  4545,
    4617,  4785,  4696,  4786,  4810,  4868,  4697,  4758,  4813,  4761,
    4715,  4721,  4800,  4716,  4722,  4717,  4549,  4633,  4720,  4631,
    4719,  4796,  4795,  4844,  2977,  3512,  2944,  3474,  3475,  3476,
    2770,  2771,  2772,  3457,  3458,  3459,  3278,  3279,  3280,  2138,
    2756,  2773,  2774,  2775,  3480,  3461,  3462,  3463,  3464,  1658,
    3484,  1659,  3751,  2959,  2960,  2961,  2962,  2963,  2061,  2062,
    3233,  2658,  3230,  4055,  3708,  4670,  3715,  3760,  3761,  4302,
    4596,  4496,  4592,  4497,  4594,  4675,  4676,  4507,  4606,  4607,
    4422,  4423,  4424,  2931,  2128,  2129,  1009,  1524,  2964,  2335,
    1525,  2843,  1526,  1527,  2858,  2830,  3507,  3307,  3308,  3309,
    3807,  3310,  3808,  2147,  3359,  4135,  4692,  3360,  3361,  3362,
    3363,  3364,  3365,  3366,  3787,  3367,  3629,  3630,  3627,  1259,
    4104,  4105,  4106,  3623,  3624,  3836,  3822,  3823,  3824,  4113,
    4129,   902,  4121,  3781,  1137,  2710,  1159,  1160,  2452,  1776,
    1528,  3782,  3783,  3784,  3830,  3689,  4275,  3826,  3809,  4326,
    4438,  4441,  4519,  4688,  2791,  1553,  2783,  1870,   622,  4353,
    4354,  4355,  4358,  4359,  4360,  4311,  4312,  4313,  4314,  1595,
    4315,  4316,  2952,  3766,  3767,  1596,  3217,  4095,    82,    83,
    1462,    84,  1467,    85,  1464,    86,  1546,   991,    87,  2223,
      88,    89,    90,    91,    92,    93,  2682,  2683,  2684,  2084,
    2678,  2679,   947,  2883,  3408,  4341,   976,  1529,  1530,  2218,
    1531,  1532,  4334,  1533,  2806,  1534,  1535,  1536,  1537,  2995,
    2996,  2796,  2997,  2833,  2149,  1088,  2340,  3846,  2198,    94,
      95,    96,   955,  2093,    97,  1215,  1216,  1217,  1409,  1410,
    2095,  2708,  3253,  1210,  1211,  1212,   956,  1407,    98,  1565,
      99,  2412,  2413,  2414,   100,  4164,  2229,   101,   102,  1572,
    1573,  1574,   103,   186,   104,  1108,  1106,  1735,  1736,   105,
     995,   996,  2231,   106,  2395,  2396,  1554,  1555,  3549,   107,
     108,  2966,   110,   903,   112,   113,  1768,  1769,  2434,  2435,
     736,   737,   738,  1435,  1436,  1437,  2114,  2721,  2722,  2723,
    1028,  1029,  1627,  1256,  1556,  1031,  1032,  1033,  1628,  1629,
    3827,   905,  1640,  2317,   906,   907,   908,   909,   910,   911,
    3658,  3659,  4025,  2053,  2054,  2055,   912,   913,   914,  2630,
    3700,  3207,  4047,  3121,  3122,  3201,  4246,  3203,  3694,  3695,
    4042,  4279,  4402,  4488,  4578,  4490,  4579,  4586,  4403,   915,
     916,  1354,  1954,  3651,  3155,  4014,  1899,  3142,  1557,  1558,
    1281,  1282,  1247,  2537,  1905,  2436,  3581,  2437,  3076,  3077,
    3078,  3592,  3588,  2416,  2417,  2438,  2439,  2440,  2441,  2442,
    2443,  2444,  4381,  4568,  4569,  4738,  4835,  4836,  4837,  4838,
    4385,  3986,  3987,  3988,  3989,  3990,  2891,  2892,  2893,  3555,
    2807,  1944,  1945,  1952,  1710,  1711,  1900,  2390,  2391,  3601,
     939,   775,   776,  1226,  1883,  3995,  4247,  4248,  2986,  3082,
    3991,  4245,  2839,  2840,   961,   962,  2102,  2714,  1422,  1423,
    1427,  1428,  4298,  2844,  2741,  2692,  3752,  2742,  2743,  1414,
    1415,   958,  1416,   115,   630,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
    2354,  2121,   988,   623,  1660,  1661,  1662,   131,   132,   692,
     713,  1111,  3047,  3048,  3561,  3049,  2968,  3051,  3567,  2150,
    2151,  3568,  3965,  3540,  3541,  3952,   133,   134,  3557,  3558,
     714,   135,  2733,  1445,  1446,   136,   768,  1854,  1855,  1856,
    2505,   137,   760,  1200,  3606,  3613,  2491,  1103,  1663,  1835,
    1203,  1204,  1205,  1836,  2476,  3098,  3104,  1819,   138,   139,
    1455,   140,   972,  1456,   141,  1052,  1685,  3007,  3527,  3927,
    1686,  1687,  2355,   142,   716,  1116,  1113,  1117,  1742,  1741,
    2421,  2419,   143,   706,  1104,  2404,   144,   697,   145,   146,
     701,  1723,  1096,  3550,  2969,  3256,  3734,  3735,  3737,  4068,
    4069,  4651,  4806,  4854,  4831,  4857,  4858,  4861,  4883,  4884,
     917,  1230,   918,  4122,   919,   920,   921,  3562,  1034,  2103,
     922,  3559,   923,  2445,  2122,   596,  3886,  3887,   948,  1231,
    2097,   925,   678,  4551,   950,  1151,  1665,  1152,   598,   599,
     600,   601,   682,   147,   756,   148,  1789,   149,  3092,  3093,
    1165,  1169,  1804,  1805,  1806,  1206,  2031,  1798,  1166,  1807,
     759,  1144,  1145,  1787,  1146,  1785,  1147,  2458,  1780,  1815,
     150,  1098,   606,  1726,  1727,  3034,   151,   772,   152,   153,
     154,   981,   155,  1715,  2387,  2388,   156,  1760,   157,  1696,
    1705,  1055,   683,   684,  2376,  2673,  2080,  2081,  2374,  1666,
    1153,   952,   953,  1066,  1699,  1398,  3947,  3532,   158,   187,
     609,  1007,  1579,  1765,   159,   160,   161,   162,  1421,   926,
    2446,   927,   739,  1022,   624,  1613,  1605,   180,   181,   182,
     627,   628,   183,  1544,  1545,  3868,  4343,  4448,  4648,  4649,
    1607,  4731,  1608,  1609,  3502,  4367,  4727,  4803,  1610,  2974,
    3921,  4463,  4645,   163,  1236,  1232,   785,  1894,  1888,  1890,
     164,   165,  1091,   166,   167,  1384,  3490,  2222,  3399,  3400,
    3857,  2880,  3404,  2342
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3786
static const int yypact[] =
{
    5653,  2680,  1602, -3786,   -60,   258, 61452,   998,   -49,   -49,
     595,  2799, -3786, -3786, -3786, -3786,  3343, -3786, 61452,  1602,
     149, 42201, 61452, -3786,   793,  1746,   804,   238,   318,  1169,
    1602, 61452, -3786,   943,   -79,  1602,   263,   842, 53609, 42914,
     595, 61452,  2886, 25066, -3786, -3786, 53609,    72,   968,  1129,
     824,  1321, 61452, 54322,  1893, 20002,  2077,  1181,  1029,   -16,
   -3786,  -147,  1725, -3786,  1766, -3786, -3786,  1512, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, 48618, -3786, -3786,  1366, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,  1743,
     904,    48, -3786, -3786,  -165, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786,   401, -3786, -3786, -3786, -3786, -3786,
   62165, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,  1912, 61452,
    1940, 61452,  1647,  1920, 61452, 52183, 61452, 61452,  1909,  1943,
    2020, -3786, -3786,  2088, -3786, -3786,   -49,   595, -3786, -3786,
   61452, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786,  1477, -3786,  1493, -3786, -3786,
   -3786, -3786,  1663,  2100, -3786, -3786, 61452, 61452, -3786,  2273,
    2043,  2072,  2115,  1890, 52183,    -8, 61452, -3786, -3786,  2043,
    2043,  2146,  2130,  1802, -3786, -3786, -3786,  2088,  2363, -3786,
   11194,  1909,  1909,  1909, 61452,  2166,  1909,  1909,  1676, 61452,
    1909,  1909,  1909,  1909,  2200,   -49, -3786, -3786, -3786, -3786,
    2263,  1996,  1928,  2413, -3786,  1771, -3786, -3786, -3786,  2035,
   -3786,  1710, -3786,  1865, -3786,  2087,  1710, -3786,   173,  1710,
     279, -3786, -3786, -3786,  1710, -3786, -3786, -3786, -3786,  1603,
   -3786, -3786, -3786,  1057, -3786,  2076,    80, 52183,  2292, -3786,
   -3786, -3786,  2239, 61452,   -60, -3786, -3786, 14864, -3786,  2236,
   -3786,   273,  2298, -3786,   -49,  2313,   282, 61452, 49331, -3786,
     -49, -3786, -3786,  2278, -3786,    43,    68,  1930, -3786, -3786,
    2040, -3786,  1996,  2171,     8,   302, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, 11194,  2886, -3786, -3786,
     290,  2056,  1182,   469,   493, 45766,  1160,   500,   124, -3786,
   64304, -3786,  2350, 27208, 47192,  1836, -3786, 55035,  1835,   205,
    5733,  2040, -3786,    -7,   -24, -3786,    -7, -3786, 61452, 61452,
     -60, -3786,   -49, -3786, 61452,  1843, -3786,  1883, -3786,   189,
     189,   189,  2507,   189, -3786,   189,  1889,  1891,  1894, 20002,
   -3786,  1903,  1905,  1917, 14864,  1965,  1970,  1973,  1978,  1984,
    2004,  2026,  2029,  2029,  2044,  2054,  2057,  2114,  1144,  2134,
   -3786,  2137,  1029,  2140, -3786, -3786,  2152,  2161,  2163,  2179,
   -3786,  2184,  2190,  2196, 15598,  2199,  2212, -3786, 36482,  2231,
    2240,  2270,  2279,  2289,  2325,  2328,  2334,  2335, -3786, -3786,
    2044, -3786, -3786, -3786,  2340,  2348,  2351,  2353,  2362,  2367,
    2369,  2372,  2378,  2381,  2389,  2404,  2406,  2408,  2409,  2411,
    2044, -3786,  1226,  2414,  2415,  1316,  2430, -3786,  2433, -3786,
     202,  2434,  2029,  2044,  2044,  2436,  2439,  2440,  2442,  2446,
    2448,  2451,  2452,  2455,  2456,  2457,  2458,  2459,  2461,  2462,
    2463,  2467,  2469,  2471,  2473, 20002, 20002, 20002, 10460, 27922,
   -3786, 61452, -3786, -3786,  3314, 20002,  1086, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786,  2038, -3786, -3786,
   -3786, -3786,     4, -3786,  2475,  1933, -3786, -3786,  2480,  2625,
    2591,  1311,  2643, -3786,  2706,  2711,  2170,    10,   857,  -165,
   -3786, -3786,  2235, 61452,  2029, -3786,  2486,  2950, -3786, -3786,
    2478,  1280,  -135, -3786,  3482, -3786,  2583, 26494, -3786,  3168,
     415,  2941, -3786, 47905,   415,  2941,  1028,   904,  1810,  1730,
    2926,  3061,  1210, 50044,  2487,  1172, -3786, -3786, 49331, -3786,
   52183, -3786, 61452, -3786,  2839,  1121,  7369,  3053, -3786, 61452,
   61452,  2695, -3786, 61452, -3786,   294, -3786,  1224, 14864, -3786,
   61452, -3786, -3786,   144, -3786,   191,  1237,    93,  1276, 61452,
   61452, 61452,  2718,  3032, 61452,  2521,  3232, 49331, 66443, 61452,
   61452,  2043,  1702,  1256, -3786, -3786, 14864, -3786,  2506, -3786,
   45053,  4027, -3786,  2924, -3786,  2515, 61452, 61452, 61452,  2863,
   61452, 61452, 52183,  2542,  1381, 61452, 49331, 61452, 66443, 61452,
    1909,  2640,  3717, 29350, -3786, -3786, -3786, -3786, -3786,  2696,
   -3786, -3786, -3786, -3786, -3786, 61452, -3786, -3786, 49331, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, 52183, -3786,   110, 49331,
   43627,   155, -3786, 62878, 61452, -3786,   -60, -3786,  2278,  2748,
   -3786,  2532,   552,  3217, -3786, -3786,  2990,  3241, 61452, 61452,
    -174, -3786, -3786,  2986, -3786, -3786,  2545,  2693, 61452, 61452,
   -3786, 61452, 61452, -3786, -3786, -3786,  2546, -3786, -3786,  2038,
    4344, -3786,  2549, 49331, 49331,   110,  2794,    93,   248, -3786,
   -3786, 65017, 61452, -3786, -3786, -3786, -3786,  3213, 14864, -3786,
   49331,  2713,  3013,   -18, -3786,  2553,  2561, -3786,  2641, -3786,
   -3786,  2576, -3786,  2577, 61452,  1279,   205, -3786, -3786, -3786,
   -3786, -3786, 61452,  2575,   124, -3786,  1835,   205, 25780, -3786,
    8992,  3149, -3786,    28,  2587,  2855,    28, 50757,  2941,   250,
     443,   393,   161, -3786,  3123, -3786,  2778,  2760, -3786, -3786,
     190,  3239, -3786,  3158, -3786,    53, -3786,  2783,  2941,    28,
   -3786,  3038,  3170,  1189,  2169,   463,  1314, -3786, -3786, -3786,
   -3786,  2594, -3786,   828,  3242, -3786,  2598, -3786,  3141, -3786,
   -3786,  2532, -3786,  1843, 61452, 61452,  3315, -3786, -3786, -3786,
    2604, -3786,  2966,  2789, -3786,  2704, -3786, -3786,   136, 14864,
   14864,  1296,  3278,  3349,  3349,  3349,   552,  2737, 14864, 14864,
   14864, 14864, 14864, 14864,  1306,  2642, -3786, -3786,   829, -3786,
    2644, 14864, 14864, -3786, 14864, 14864, 61452, -3786,  3985, 14864,
   14864,  1024,  3235, 14864, 14864, 14864, 10460,  3947, 14864, 14864,
   61452,  3366,  2645, -3786,  2646,  1648, 14864, 14864,  1876, 14864,
   14864, 14864, 14864, 14864, -3786, 14864, 14864, 20002, 14864, 14864,
   14864, 14864, 14864, 14864,  2648, 14864,  3349,  3349, 14864, 14864,
    1918, -3786, -3786, 14864,  2215,  2215, -3786, 14864,  9726, 14864,
   -3786, -3786, -3786,  2650, -3786, -3786, -3786, 61452,  3349,  3349,
   14864, 14864, 14864,  3349,  3349, 14864,  2653,  2654, 14864, 14864,
   14864, 14864, 14864, 20002,  2657,  2660,  2662,  3278,  3278,  3278,
    2665,   857,   133,  1255, -3786,  2894, 14864, 20002, -3786, 20002,
   20002, 20002, 20002, 20002, 20736, 21470, 20002, 20002, 20002, 20002,
    3278, 52183, 20002, -3786,  2038,  2038, 14864, 61452, 14864,  1646,
   -3786, -3786,  3263,  2940,  3290, -3786, -3786, -3786,  3250, -3786,
   -3786,  2677,  3361, 52183,  2756,   181,   923, 49331,  2775,  3259,
    3260,  3270,  3276,  3279, -3786,  3283, -3786,  2710,  3285, -3786,
    3034,  2877,  2877, 52183,  2716, -3786, -3786, -3786, 14864, -3786,
   -3786,  -165,  1028, -3786, -3786, -3786, -3786, -3786,   835, -3786,
   -3786,  -165,  1028,   -69,  3203, -3786,  1028, -3786,  2941, -3786,
    2941,  1028, -3786, -3786, -3786, 55748,  1730,  2239, 52183,  3371,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786,  3336, -3786, -3786,  3146,  3458, -3786,  2739,  3359,
    3359,  2888,  3014,   205,  1342,  3072,   205,   205,  3402,   205,
    3074,  3080,   205,   205,   205,   205,  2899,  3341, -3786,   205,
    3223,    -4,  1288,  3226,   205,  3088, -3786,   946,  3357,   205,
     205,   205,   205,   205,  3402,  3094,  3446,   205,   205,  3096,
     454,  3097,  3098,   205,   205,   205,   205,   233,   205,   205,
    3099,   205,  2882,  2883,  6317, -3786, -3786, -3786,  2393, -3786,
   -3786,    55, -3786, -3786,  2771,  2772, -3786, -3786, -3786, -3786,
   -3786,  2798, -3786,  3019,  2884, -3786,  2695,    35, 56461, 61452,
   -3786, -3786,  2784,  2785,   214, -3786,   552,  2786,  2788, -3786,
    5312,  2896, -3786, -3786, 61452, -3786, -3786, -3786, -3786,  2907,
   -3786, -3786, -3786, -3786,  2692, -3786,  3461,  3071, -3786, -3786,
   -3786, -3786,  3354, -3786,  3148,  3520,  2811,  3418,  3156,  2043,
    3359,  3307,    83,  2577,  2945,  3161,  2927,  2949, 61452,  3345,
    2043, 61452, 61452, 61452, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, 61452, -3786, -3786, -3786, -3786, -3786, -3786,  2695, -3786,
   14864, -3786, -3786, 57174, -3786, -3786, 14864, -3786, 14864, 14864,
   -3786, -3786, -3786, -3786, -3786, -3786,  1790, -3786, -3786, -3786,
   16332, 20002,  2817, 20002, 20002,  3273,  1217, 38621, -3786, -3786,
    2814, 61452,  1381, -3786, -3786,  1909, -3786, -3786, -3786, -3786,
   -3786,    51, -3786,  3393, -3786, -3786,  2818,   141,  2577,  3365,
   61452,  2825, -3786,  3272,  3275,  3282,  3287, -3786, -3786, -3786,
   -3786,  3288, -3786,  3293, -3786, -3786,  2832, -3786, 61452, 24352,
   52183, -3786,  2849, -3786,  3425, -3786,  3208, -3786, -3786,  1610,
    3006, -3786, -3786, -3786, -3786, 39337,  -205, -3786, -3786, -3786,
   61452, -3786,    78,   713,  3528,  2956, -3786,  2532, 61452,   -60,
     -60, 61452, -3786,  3363, -3786,   203,  2861, -3786,  2867, 52183,
   -3786, -3786,   311, 49331, 49331,  2868, -3786,  3022,   143,  3215,
   -3786,  3039,  3604,    68, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786,  2887,  3463,  3417,
    3252,  3431,  2818, 39337, -3786, 61452, -3786, 22920,  2956, -3786,
    3436,  3054,  3056,   874, -3786, 52183, -3786,   552,   205, -3786,
   -3786,  1833, -3786, -3786,  3381, -3786,  3205, -3786, 66443, -3786,
   52183, 66443,  3447,  2905,  2919,  2920,  2921,  2922, 57887, 14864,
   -3786, -3786, -3786,  8992,  2928, -3786, 57887, -3786, -3786, 20002,
    2137, -3786,  2378, -3786,   552, -3786,  3411,  2038, 14864, -3786,
    2944,  2043, 61452, 61452, 61452, 61452, 61452, 49331, 61452, -3786,
    1320,  1320, -3786, -3786, -3786,    28, 61452, -3786, 61452,    28,
   49331, -3786,   250, 61452,    28, -3786,  3412,  3102, -3786, -3786,
   -3786,  3488, -3786, -3786,  3476,  2938, -3786,  3411, -3786,  3141,
     250, -3786, -3786, -3786, -3786, -3786,   250, -3786, -3786, -3786,
     250,   250,   250,    28,    28,    -7, -3786, -3786,  3159,   -24,
    3614, -3786, -3786,  1677, -3786,  1029,   189,  3284, -3786,  3481,
   -3786, -3786, -3786, -3786, -3786,   338,   351, -3786,  3349,  2947,
   14864,  2948,  2951,  2960, 14864,   280,   359,   526,  1376,  1708,
    1095,   164, 14864,  2962, 11928, -3786,  2971, -3786, -3786,   407,
     434,  1178,  1331,  2972, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786,  3483, -3786,   519,  2980, -3786, -3786,
   -3786, -3786,  2982, -3786, 14864,  1400,   557,   664,   316,  2998,
     795,  1749,  1754,  2993, 61452, 61452,  3349,  2995,  1422,  1455,
    3349,  2996,  1030,  1459,  1761,  1773,  1788,  1106,  1826,  3456,
    1513,  1124,  1126,  1534,  1128,  1132, -3786,  1575,  2997,  3000,
    1151,   283,  3349,  3001,   453,  2999,  3002,  1591, 12662, 13396,
   14130,   240,  1196, -3786,  3004, -3786,  2646,  3005,  3009,   483,
     288,  1613,  3010,  3015,  1834,  3042,  3042,  1615,  1233,  1630,
    1233,  1248,    89,  3042,  3042,  3042, -3786, 14864,  3008,  3011,
    3012, 52183, 14864,   204,  3023,  3023,  1665,  1665,  3127,  1939,
   15598,   603, 15598,   603,  3023,  3023,  3023, -3786, -3786,  3278,
   -3786, -3786, 45053,  3018,  3016, -3786,  1419,  1654, -3786,    82,
     119,  3338,   232,   205, -3786,  3618, -3786, -3786, -3786,  3196,
   -3786, 65730,  3197, 52183,  3199,  3200, -3786, -3786,  3204, -3786,
   -3786,   432, -3786,  2126,   276,   -60,   990,   -60,  2197,   -60,
     -60,  1811,   -60,  3141,  3601,  3652, -3786, -3786,  2482, -3786,
   28636,   275,  3045, -3786, -3786, -3786, -3786, 47905, 47905, -3786,
   -3786, -3786, -3786, -3786,  1841,  3277, -3786,  1028,  1028, -3786,
   61452,    52, -3786,  3049, -3786, 23636, -3786,  2880,    95, -3786,
   -3786, -3786,  3055,  3522,  3188,  3055,  2306,   -60,  1549,  1549,
   61452, -3786, 61452,   214,  1602,   214, -3786,   325, 61452, 37195,
   -3786, 58600, 61452, 61452,  1602,   990,  2197, 61452,  2197, 59313,
    1602,   -60,   -60,   -60,   -60,  2482,   205,  2197, -3786, 59313,
   -3786,  3530, 61452,  3535, 61452, 61452, -3786, 52183, 61452, 59313,
   -3786,   205,  1204,  2197, 60026,   990,   990, 61452,  1602, 61452,
    1543,   -60,  1602, -3786, 61452, -3786, -3786, 61452, 61452,  1602,
    1602,   251,  1543,  1543,  2466, -3786, -3786, 61452,  2197, 59313,
    3058, -3786, -3786, -3786,   205,   205,  3388, -3786, -3786,  8226,
    7936,   205,  3095,  3429,  1444, 61452, -3786,  3130,  3136, -3786,
   -3786, -3786, -3786, -3786,   214, 59313, 60739,  3562, -3786, 14864,
    3653,  3654,  3656,  3660,  3661,  3665,  3667,  3668,  3669,  3670,
    3671,  3674,  3675,  3676,  3680,  3684,  3694,  3696,  3697,  3699,
    3701,  3703,  3705,   201, -3786, -3786,  3708,  3710,  3711,  3712,
    3713,  3714,  3716,   247, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786,   129, 61452,  3188,  3103,  3236, 61452,  1346,  3266,  3229,
    3419,   205, 61452,  1130,  1130,  3818, 61452, 61452,  3157,   -92,
   -3786,   467, -3786, -3786, -3786, -3786,  2568,   217, -3786, -3786,
   -3786, -3786, -3786,   996, -3786,  3160, -3786,  1029,  2405, 10460,
   -3786,  1355,  3542, 20002, 20002,  3164, 20002, 20002, -3786,  1487,
   61452,  1212, -3786,  1346, -3786,   820,   205, 49331, -3786, -3786,
   -3786, -3786, -3786,   141, 52183,  3143, -3786, -3786, -3786, -3786,
   -3786,  3141, -3786,  3398,  2867, -3786,  3316,  3318,  3322, -3786,
   30778, -3786, -3786, -3786, -3786, 30778,    49,   110, -3786, 61452,
   49331,  3165, -3786,  3171,  3320,  3256, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786,  2956,  3185, 14864,
    2941, -3786,  3215, -3786, -3786,  3181, -3786,  1224,  2877,    11,
   61452, -3786, 14864,   -60, -3786,  3337, -3786, 61452, 61452, -3786,
   -3786, -3786, -3786,    77, -3786,  3192,  2438, -3786,  2880, -3786,
   -3786,  3141, -3786,  4344, 24352,  3537,   110, 49331,  3729, -3786,
   -3786,  3202, 22204, 61452, -3786,  3206,  3093, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786,  3215,  2989,  3722,  2956, 66443,
   66443, 66443, -3786, -3786,  2713,   315,  3503, -3786, -3786, -3786,
   -3786,  2577, -3786, -3786,  2880, -3786, -3786, -3786, -3786, -3786,
     205,   552, -3786, 25780, -3786,   -60,  3745, -3786,   552,  3214,
   61452, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786,  3331,   905, -3786,
   -3786, -3786, -3786, -3786,  3523,  2941,  3239,  3745, -3786,    28,
      28, 61452, 61452,    28, -3786, -3786, -3786, -3786, -3786,   -60,
   -3786, 61452, -3786,  3219, -3786,  3612, 17066, -3786,  3237,  3042,
     552,  3042,  3042,  3042,   329, 14864, 14864,  3802,  2424, -3786,
   51470, -3786, -3786, -3786, 51470,  2424,  1844,  3042,  3240, -3786,
    3724,  3727, -3786, -3786, -3786, 14864, 14864, -3786, 14864,   796,
   -3786, 14864, 14864, 14864, 14864, 14864, -3786, -3786, 20002, -3786,
    3224,  3243,  3042, -3786, -3786,  3245,  3042, 14864, -3786, -3786,
   -3786, -3786, 14864, -3786, 14864, -3786, 14864, 14864, -3786, 14864,
   14864, -3786,  3042,  3042, 17800, 14864, 14864,  3247,  3042, -3786,
   14864, 14864, 14864, -3786, 14864,  1517, 14864,  2226, 14864,  2234,
   14864, -3786, 14864, -3786,  3042,  3042, -3786, 14864,   423, -3786,
    2197, -3786,  3349,  3042, -3786, 37908, -3786, -3786,   400,  1787,
    3248,   400,  3249, 20002,  3042, -3786, -3786, -3786,  1863, -3786,
   -3786, -3786,  3227,   552, -3786,  3947,  3947, -3786, -3786, 14864,
   14864, 61452,  3833,  3264, 20002,  3265, 20002,  2880,  3435,  3267,
    3983,  2877,   205, -3786, -3786, -3786,  2577, -3786,   440, -3786,
   -3786, -3786, -3786,   207,  2197,  2197,  2197,  2197,  2126, -3786,
     847,    32, -3786,   276, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786,   -60,  3842,  3599, 51470,
    3936, -3786, -3786, -3786, -3786, 14864, -3786, -3786, 61452,  3342,
   -3786,  1849, -3786, -3786,  3672, -3786, -3786,  -176,  3215,  1353,
   23636, 61452, 40053, -3786,  -142, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786,   -60,  3477,  3480,  3486,  3487,
    3489,  3529, -3786, -3786, -3786,   -60,  1566,   -60,   -60,   -60,
     -60,  2197,   -60,   -60,  1874, -3786, -3786,   205,   205,   205,
   -3786,   142, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, 61452,  -106, 61452,  3294,  3753,  3761,   214,
   -3786, 61452,  3296, 46479, 74893, -3786, -3786, -3786,  2108,  1077,
   59313, -3786, -3786, 61452, -3786, -3786,  2692,  3292, -3786,  2880,
   -3786, -3786, -3786, -3786, 51470,   -60, -3786,  3466, 61452,  3292,
   -3786, -3786,   222, -3786,  3390,  3468,   -60, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, 74893, 59313,  3308,
   -3786,   390, -3786, -3786, -3786, -3786, 59313,  3462,  3465, -3786,
   61452, 59313, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, 61452, 52183, 51470, -3786,
    3597,  1572,  6317, -3786, -3786, -3786,  2771, -3786,  3677,   205,
    1596,   198, -3786,  3590, -3786, -3786,  1883,  3666,  3678,  3324,
   -3786,  3325, -3786,  3323, -3786, 56461,   552,  3329,  2197,   -60,
    2197,  2197,   -60,   -60,  2197,  2197,   -60,   -60,   -60,   -60,
     -60,   -60,   -60,   -60,  2197,  2197,   -60,  1776,   -60,  2197,
    5312, -3786,  3330,  3330,  3332,  3332,  3333,  3333,  3339,  2896,
   -3786, -3786,   157,  3340,  2573,  1346, 52183,  3344, -3786, -3786,
   -3786, -3786, -3786,  3766,  2449, 66443,  2775,   921,  3346, -3786,
   -3786, -3786, -3786, -3786,  1311, -3786, 61452, -3786, 35056, -3786,
   -3786, -3786, -3786,   179,  1623, -3786, -3786,    48, -3786,   122,
    3598, -3786, -3786,   999,  3347, -3786, -3786,   908, -3786, -3786,
   -3786, -3786, -3786, 20002,   528, 20002, -3786,  3542,  2431, 10460,
   -3786,  1355,  3542, 40769, -3786, -3786,  3785,  4066, -3786, -3786,
   52183, -3786, -3786, -3786,  2825, -3786, -3786,    61,  3919,  3348,
   -3786, -3786, -3786, -3786, -3786, 39337, -3786,  1254,  3358, 41485,
   49331,  3698,  2941, 18534,   552, -3786,  2453, 61452,   214,  3853,
    1050,  3443,  3805, -3786, -3786, -3786,   552, -3786, 49331, -3786,
   -3786, -3786, 61452, 61452, -3786, -3786, 32917, -3786, -3786, -3786,
   -3786,  3360, -3786, -3786,  3928, -3786,  3893, 39337,  2818, 49331,
   14864,  3362,  3364,  3367,  3369,  3376,  3377, 23636, 23636,  3834,
    3837, -3786,  3700,  1437,  3700, -3786, 35769, 23636, 23636,  2499,
    1883,  4062,  3894,  3722,  2577,  2577,  2577, -3786, -3786, -3786,
   -3786, -3786,   188, -3786,  8992, -3786, -3786,   990, -3786,   361,
   -3786, 49331,   -60, 14864, -3786,  3741, -3786, -3786, -3786, -3786,
   -3786,   250,   250, -3786, -3786, -3786,  2197, -3786, 15598,  1662,
    3042, -3786, -3786, -3786, -3786, -3786, 14864,   552,  1927, -3786,
    3389,  3389,  3391, -3786,  3392, -3786,  4055, -3786,  3875,  3391,
    3876,  3389,  3394,  3397,  3404,  3405,  3042, -3786,  3042, 14864,
   14864,  1748,   559,  1837,  4080,  3636,  1265,  1287,   568, -3786,
    1864,  3524,  3042, -3786,  3042, -3786,  1868,  1875,  1887,  1892,
    1304,  1952,  1881, -3786, -3786, 15598,  1966,   271,   676,  3042,
   -3786,  1979,  1339,  1365,  1990, 14864,  2010, 14864,  2018, 14864,
    2032,  2050, -3786, -3786,  2066,  3403,  3403,  3407,  3408, -3786,
   61452, -3786, -3786, -3786, -3786,  3451,  3454,  3042,  3413,  3413,
     400,  3042,   400,   102, -3786, -3786, 61452, -3786, -3786, -3786,
   -3786,  3416, -3786, -3786, 61452,  2582, 61452,  2889, -3786,  4100,
    3421, 20002,  3992,  3424, -3786,  2877,   -60,   -60, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786,  1299,  2547,  3909, -3786,
   -3786,   -60,  3995, -3786, -3786,  1108,  3878, -3786,  3423, -3786,
   -3786, -3786, 23636,  2956, 40053,  -224, -3786, -3786,  3426, 61452,
   -3786, -3786, -3786,  4056, -3786,  4057,  1696, -3786, -3786,   259,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786,  2306,  3303,  3303,  3303,   645,  3437,  2880,  3768,
    3445, 14864, 61452, -3786, -3786,  3455, 61452,  1895, -3786, -3786,
   -3786, 74893, -3786,  3389,  3389,  3389, -3786, -3786,   291,  3391,
   -3786, -3786,  3769,  3457, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786,   352,  1957, -3786, -3786,   352, -3786, -3786, -3786,
     176,   976, -3786, -3786, -3786, -3786, -3786, -3786,  3460, -3786,
    3389,  3391,  3391, -3786, -3786,   352,  3389, -3786,  3389,  1122,
    3137, -3786,   131,  3389,  3389,  3389,  3464,  3392, -3786, -3786,
   -3786,  4067,  4071, -3786, 74893, -3786, 61452, -3786,  3213, -3786,
   -3786, -3786, -3786,  3625, -3786, -3786,   383, -3786, 61452, -3786,
   -3786, 61452, 61452,    -2,    77,  3467, -3786, -3786,  3478,   -85,
   -3786,  -102, -3786, -3786,  3365,  1616,   380,  3615,  1923, -3786,
   61452, 61452, -3786, -3786, 60739, -3786,  2197, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   33630, -3786, -3786, 34343, -3786, -3786,   859, -3786, -3786,  1866,
   -3786, -3786, 61452,   205,   205,   205,   205, -3786,   266, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,  3816, 61452,
    1099,  3990,   205,   205, -3786,   287, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786,  2577,   276, -3786, -3786,
    2798, 61452, -3786, -3786, 61452,  1901, -3786, -3786,  6409, -3786,
     999,  3826, 61452, -3786, -3786, -3786, -3786,  3689, -3786, -3786,
   -3786, -3786,  3828, -3786, -3786, 14864,  1086, 20002,   836, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786,  3774, -3786,  4053, 30778,
    3629,  4004, -3786, -3786, -3786,  1300, -3786, -3786,  2137,   552,
    1907, -3786, 61452,  3840,  3840, -3786,   214,  3853,  3946, -3786,
    3974, -3786, -3786, -3786, -3786,  3493,  3292,  3492, -3786,   205,
    2275,  1914, -3786, -3786, -3786,  3495, 18534,  3498, -3786, 24352,
   49331,  4030,  2818,  1383, 23636, -3786, -3786, -3786, -3786, -3786,
    3093,  3496,  3497,  3499,  3093, -3786, -3786, -3786,  3979, -3786,
    3700,  3700,  3982,  3993, -3786,  2437,  3189,  1133, -3786, 14864,
   14864,  3554,  3894,  2880, -3786, -3786,  2941, -3786, -3786,  2818,
   -3786,   552, -3786,  2941,  2956,    28, -3786,  3947, -3786, -3786,
     552, 14864,   930, -3786, -3786,   352,  3880, -3786,  2159, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786,  3947,  3947, -3786, -3786, 14864, -3786, 14864,
     189,  3525, 14864, 14864, -3786, 14864, -3786,   292,  3526,  3617,
   -3786, -3786, -3786, -3786, -3786, -3786, 14864, -3786, -3786,  3947,
   -3786, 14864, -3786, -3786, 14864, -3786, -3786, 14864, 14864, -3786,
    2073, -3786,  2079, -3786,  2086, -3786, -3786, -3786,  2880,  3539,
    3540,  2197,  3042, -3786,  3541,  3858, -3786, -3786, -3786, 14864,
   -3786, -3786,  3042, -3786,  3042,  4075, -3786, -3786,  1937, -3786,
   -3786,  1944, -3786,  3996,  3768, -3786,  2974,  2880, 61452, -3786,
   -3786, -3786, -3786,  2880, -3786, -3786, -3786,  2703, -3786,   -60,
    4227,  4229,  4123,  4230,  1108, -3786,  1423, -3786,  -224,  3891,
    1578, -3786,  3564, -3786,  1016, -3786, -3786, -3786, -3786,  1249,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, 61452, -3786, 61452,
    1953, -3786, 61452,  2090,  3559, 61452,  1971, -3786,   139, -3786,
   46479,  1122, -3786, -3786, -3786,  4254,   299, -3786,  4255, -3786,
     352, 51470, -3786, -3786, -3786, -3786, -3786, -3786,   189, -3786,
     -74, -3786,   352, -3786, -3786,  3679, -3786, -3786, -3786,   189,
     352, -3786, -3786, -3786, -3786,  1292, 61452,   383, -3786, -3786,
   -3786, 52183,  2258,   -60,  3536, -3786,  3683, -3786,  4170,  1624,
    4037,  1346, -3786,  2876, -3786,  4099,  4040,  3935, -3786,  4273,
   -3786,   352,  4273,  1292,  3937, -3786,  1292,  1292, -3786,  3645,
     383, -3786, -3786, 61452, 61452, -3786, -3786, -3786, -3786, -3786,
    3580, -3786, -3786,  3940,  3677, -3786,  3941, -3786, -3786,  3899,
   -3786, 14864, 14864,  3938, 61452,  3939, -3786,  4241,  4304,  3292,
    1349, -3786,  1985, -3786, -3786, -3786,  1988, -3786, -3786, -3786,
    1998, -3786,  3591, -3786,  2033, -3786, -3786, -3786, 61452, -3786,
    2068,  2070,   -60,  2880,  3303,  3303,  2627,  1099,  3600,  2071,
     -60,   -60,   -60,   -60, 61452,  3303,  3303,  2796, -3786,  3095,
    2084,  3602,  4755, -3786,  3811,  3845,  3605,  3594, -3786, 74893,
     -60,   286, 61452,  2096, -3786, -3786, 14864,  4155,  4051, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, 49331,  3953,  4129, -3786,  2956, 18534,
     738,  4193, -3786, -3786, -3786, -3786,  3775, -3786, 61452, 18534,
   -3786, -3786,  2275, 61452, 38621,  3613,  3608,  3360, -3786,  2818,
   49331,   -60,  1190, -3786, -3786,  4088,  4089, -3786, -3786, 14864,
    3619, 14864,  3620, -3786, -3786,   214,   214, -3786,  1133, -3786,
   -3786,  1308, -3786,   552, 61452, -3786,  3554, -3786, -3786,  3141,
   -3786, -3786,  1219,   552,  3621,  3622,  3623,  3624, -3786,  3626,
    2097,  3627,  3631,  2106,  3616, -3786, -3786,  3042,  2158,  1395,
    2099,  4013,  4098, -3786,  3942, -3786,  2176,  1478,  2186,  2194,
    2202,  2219, -3786, -3786, -3786, -3786, -3786, -3786,  3630, -3786,
   -3786,  4320,  3981,   552, -3786, -3786,   249,   400, -3786, 61452,
   -3786,   241,  2121, -3786, -3786,  3641,  3638,  4253, -3786,  4256,
   -3786,   189,   189,  4327,   189, -3786,  4330,  4332,  1423, -3786,
   -3786,  4105,  3891, -3786,  2122,  3764, -3786,  3768,  2123, -3786,
   61452,  2168,   504, 61452,  4015, -3786, -3786, -3786, -3786, -3786,
   -3786, 51470, -3786, -3786,  4273,  2181, -3786, -3786, -3786,  2208,
   -3786, -3786, -3786, -3786, -3786,  1292, -3786,  3662, -3786,   386,
   -3786, -3786, -3786, -3786, -3786,  3316,  3318,  3322,  1776,  1776,
   -3786, -3786, -3786, -3786,  4021,  3771, -3786, -3786, -3786, -3786,
   -3786, -3786, 52183, -3786,  4378,  4373, -3786, -3786, -3786, -3786,
   -3786, -3786,  3663, -3786, -3786, -3786, -3786,  1453, -3786,  3768,
   -3786, -3786, -3786, -3786,   552,  3947,  4314, -3786, -3786,  3885,
     -60,  4258,  1311,  4025, -3786, -3786,  2197, -3786, 61452, -3786,
   61452, 61452, -3786,   -60,  3673, -3786,  3682,   323, -3786, -3786,
   -3786, -3786, -3786,  2306,   306, -3786, -3786, -3786,  4174, -3786,
   -3786, -3786, -3786,  1596,   504, -3786, -3786,   -60,   380, -3786,
   61452,  3213, -3786, -3786, -3786, -3786,  3685,  3688, -3786, 61452,
    4209, -3786,  2214, -3786, -3786,  1300, -3786,  4020,  2941, -3786,
   -3786,  4143, 61452, -3786, -3786, -3786, -3786, -3786,  3681, -3786,
   -3786,  2818,  4335, -3786, -3786, -3786,   552, 61452,   552, 61452,
    4215,  4215, -3786, -3786, 14864, -3786,  4392,  3690, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786,  4041, -3786, -3786,
   -3786, 14864, -3786, -3786, 14864, -3786, -3786,  4076,  4244, -3786,
   -3786, -3786, -3786, -3786, -3786,  3693,  2197, 14864,  4377,  1168,
   -3786, -3786,  3042, -3786,  3702,  3983, -3786, -3786, -3786, -3786,
   -3786, -3786,   189, -3786,   189,   189, -3786, 47905, -3786,  4105,
     323,   237,  2782, -3786,   306,  2228,   504,   -60,   205,  1130,
    1130, -3786,   504, -3786, -3786, -3786, -3786, -3786,  3709, -3786,
   -3786,   352,   189,   352, -3786, 61452,  4107, -3786, -3786, -3786,
   -3786, -3786, -3786,  3704, -3786, -3786,  2238, -3786, -3786, -3786,
   -3786, -3786,  3791, -3786,  3756, -3786, -3786, -3786, -3786, -3786,
   61452, 61452,  4034,  1212,   323, -3786, -3786,  2241,  1212,   306,
   -3786, -3786,  4393, -3786,  1212, -3786,  3938,  3967, -3786, -3786,
   -3786,  1069, 74893,  4293, -3786, -3786, -3786, -3786,  3835,  3215,
    3719,  3715,  3721,  3723,  1569,  3725,  3730, -3786,  3735, 61452,
    3726, -3786,  2249, -3786, -3786, -3786,  3728,  3718, 14864, -3786,
   -3786, -3786, -3786,   229, -3786, 20002,  3736, -3786, -3786, -3786,
   -3786, -3786, -3786,  3737,  3869,   205,  4310,  4331,   205,   205,
     205,   205,  3739,  2782, -3786,  4311, -3786,  4031, -3786, -3786,
    2197, -3786, -3786, -3786,   390, -3786, -3786, -3786,  2244, -3786,
    1080,  4095, 14864, -3786,  3944, -3786, 72851,   285, -3786, -3786,
    3744,  3743,  2077, -3786, -3786, -3786, -3786, -3786,  1346, -3786,
    1923, -3786, 74893, -3786, -3786,  3213,  3994, 61452,  2482, 63591,
    3076, -3786, -3786,  4431, -3786,  4432, 60739, 60739, -3786, -3786,
   -3786, -3786, -3786,  3045,  2548,  3999, 14864,  3792,  3806, -3786,
   -3786,  3794,  3795,  3261, 61452,  3760, -3786, -3786,   827,   -60,
     205,   205,  1346,  1346,  2880, 61452,  3943, -3786, -3786,   205,
   -3786, -3786, -3786, -3786, 61452, -3786, -3786, -3786,   458, -3786,
    2253, 14864,  4336,  3856, 61452,   199, -3786, 74275, 74275, 61452,
   -3786, -3786, -3786, -3786,  6629, -3786, -3786,   914, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,  4460,
   -3786,  3757, -3786,  4430,  4110,  4433, -3786, 61452, -3786, -3786,
    4241,  3213,  2216, -3786,   150,  3492,  4014,  3797,  2254, -3786,
    8233, -3786, -3786, -3786,  3773,  2255, 14864,  1452, -3786,  4482,
    1483,  1567, -3786,  3947, -3786,   234, -3786, -3786, -3786,  3951,
    2277, -3786,  2285, -3786, 19268, -3786, -3786, -3786, -3786,   -60,
     -60, -3786, -3786, -3786, -3786, 52183,  2286, -3786, 52183, -3786,
    1327,  1327,  1386,   552, 14864, -3786, 14864,  3872, -3786, -3786,
    4312, 61452, -3786, -3786, -3786, -3786, 14864, -3786, 72851, 72851,
   -3786, -3786, -3786, -3786,  4475,  4125, -3786,  4126,  3782,  4370,
   -3786, -3786, -3786, -3786,  4380, 72851, -3786, -3786, 52183, -3786,
    4287,  3936,   -60, -3786, 63591,  3814,  4346, -3786, -3786,  3947,
   -3786,  2548, -3786, -3786,  3827,  4036, -3786,  3832, -3786,  2880,
   -3786,  3951, -3786,  3760, -3786,  2305, -3786,  3542, -3786, -3786,
    2782, -3786,  3943, -3786, -3786,  4516, -3786,  1275,  4146,  4148,
   -3786, -3786,  2876,   552,   552, -3786,   399, -3786, -3786,  4281,
    4374, 14864,   552, 69291,  3798, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, 73563, 14864,
   -3786,   914,  4460, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, 72851,  4483,  3878,  4335, -3786, -3786, -3786,  3830,  1642,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, 19268, -3786,
   -3786, -3786, -3786, -3786,  3925,  4406, -3786,  3904, 14864, 72851,
   -3786,  4387, -3786,  4313,   552,  4252,  3813, -3786,  3810,   552,
    4424, 74275, 74275, -3786,  2216, -3786,   189,  4318, -3786,   -60,
   -3786, -3786,  1327,  1327, -3786,   411, -3786,   552, 70003,  4498,
   61452, -3786,  3978, -3786, -3786, 14864,  4411, 52896, 70715,  3823,
   -3786, -3786, -3786, 72851, -3786,  4185,  3831,  1699, -3786, -3786,
   14864, -3786,  4405,  3986, -3786,  3829, -3786, 72851,   552, 72851,
   -3786, -3786,  4347,  4760,   387, -3786,  3841, -3786, -3786,  1171,
   30064,  4063,   -60, -3786, -3786, -3786,  1699,  1699,  4189,   552,
    4515, 72851, 61452, 67155,  4418, 71427,  4381, 61452,  3213,  4382,
    4383, -3786, -3786, -3786, -3786, -3786, 52183,  2382, -3786, -3786,
   61452, -3786, -3786, -3786,  4196, -3786,  4200,   167,  4005, -3786,
   67867, -3786,  2538,  4127,  3945, -3786, -3786,  4458,  1208, -3786,
   -3786, -3786, 31492,  3850, -3786,   205,  4423,  3888, -3786, -3786,
   72851, 72851, -3786, -3786, -3786, -3786, 44340, 14864, -3786, -3786,
   -3786, -3786,  -147, -3786, 61452, 18534, 68579, 72139, -3786, -3786,
   -3786, 32204, -3786, -3786, -3786,  4394, -3786,   552, -3786, -3786,
   -3786, 44340, -3786, -3786, -3786
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3786, -3786, -3786, -3786, -3786, -3786,    57, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786,  1584, -3786, -3786, -3786, -3786,
   -3786, -3786,  1664,  1669, -3786, -3713, -3786, -3786,  1673, -3786,
     424,  1674, -3786,   427, -3786,  1683, -3786,   439,  -832, -1809,
   -3786, -3786, -3786, -3786, -3786, -3786,  1139, -3786, -3786,   425,
    1315,  3586, -3786,   412, -3786,   151, -3786, -3786, -3786, -3644,
      56,  -114, -3786, -3786,    54,  3147,  -109, -3247, -3786, -3786,
   -3786, -3786, -3786, -3786,   413, -3786, -3786,   252, -3786, -3786,
   -1238, -3786, -3786, -3786, -3786, -3786, -3786,  -302,  -258,  2237,
   -3786, -3786, -3786,  4576, -3786,  3863, -3786, -2296,  2203, -3786,
   -3786, -3786, -3786, -3786,  2262, -2247, -3786, -3786, -3786,  1101,
   -3786, -3786, -3786,  -341,   185, -3786,   186, -3786,   187, -3786,
     192, -3786,   193,   197,   200,   209, -3786,   210, -3786, -3786,
    -256, -3786, -3786, -3786, -3786,   211, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786,  -148, -3786, -3786,   -52, -3786, -3786,  -140,
     212, -3786,  -125,   213, -3786,   215, -3786,   -62, -3786,   -57,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,   760,
    2529, -3786,  1373, -3786, -3786,   776, -3786, -3786,   924, -1051,
    2398, -2639, -2803, -2800, -3786, -3786, -3786, -2799, -2798, -2048,
   -3786, -2032, -2595,   770,  1719,  1721,  1716,    24, -3786,   973,
     404, -3786, -3786, -3786, -3112,    34, -3786, -2658,   630, -3786,
   -3786, -3786, -3786, -2805, -3786, -3786,   -40, -3786, -3786,    29,
      33, -3786,   289, -3786,  2435, -1991,  -489,  2496, -3786, -1159,
   -1502,   681, -1378, -1370, -3786, -3786,  1221,  1759,   953, -3786,
     954, -1403,  2579, -3786, -2221, -3786, -3786, -3708, -3786,  -512,
    1391, -3786, -3786, -3786, -3786, -3786,  1360,  1362,  -890,  1488,
   -1365, -3786,   624,   636,  -576, -3786,    38, -3786,   911, -3786,
   -3786, -3502, -3786,   -39, -2464,   267, -3786, -3786, -2735, -3274,
   -3786, -3786, -3786, -3183, -2385,  1541, -3786, -3786,   319, -3786,
   -3786, -3786, -3786, -2989, -3786, -1433, -1932, -3786, -3786,   438,
   -3786,   391,   444, -3786,   388, -2329, -3786,   437, -1425, -1938,
   -3786,  1954, -2246, -3254,   667, -2007, -3786,   952, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786,  1266, -3786,  2089,  1808,
   -3786,  2078, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786,  2535, -3786,   612,  -824,  2551, -3786,  2555,   786, -2653,
    -923, -3786,  -934, -3786, -1381,  3328, -1753, -3340, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786,  2901, -3786, -3786,
   -3786, -3786, -3786,  4012, -3786,  2906, -3786, -3786, -3786, -3786,
   -3786,  1392, -3786,  2374, -3786, -3786, -3786, -3786, -3786,  1982,
    3211, -3786, -3786,    26, -3786, -3786, -3786, -3786,  2383, -3786,
   -3786,  3244,  1897, -3786, -3786,  1762,  2399, -1516,  1250,  -970,
    4737,     3,    15,     1,  -942, -3786,  3029, -3786, -3786, -1999,
   -3786, -3786,  4064,  -848, -3786,  3372, -3786, -3786,  2082, -3786,
    4073,  3187,  2758,   866,  4228, -3786, -1575,   -26, -3786, -3786,
    -997, -3786, -3786, -3786,  -738, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786,  2162, -3786, -3786, -3786,  2792,
    1604, -2543, -3786, -2315, -1982, -3786, -2445,   426, -3786, -3786,
   -3786, -3786, -3786, -3786,   414, -3786,   154, -3786, -3786, -3786,
   -1616, -3786, -3786, -3786, -3786, -3786, -1042,  2271, -1185, -1197,
   -3786,  3543, -3786, -3786, -3786, -2608, -3786, -2228, -3786, -3786,
   -3786, -3786, -2397, -2326, -3786,  -936,  2388,  2394,  2395,  2396,
   -3786, -3786,    87, -3786,   171, -3786, -3786,    -3,    -5, -1808,
     588, -3786,   852, -3786, -3786, -3786,   354,  1421,   366, -1706,
   -2030, -1270,  1728, -3786, -3786, -1701,  3592, -1737,  1230,  1243,
       6,  4074,  3628, -2462, -3786,   851, -3786,   460,  1860,  1770,
     578, -3786, -3786,  1468,  -949,   -97,   459, -2771,  -957,   -96,
   -3786, -2080,   560, -1840, -2302, -2008, -2261, -2208, -3786, -3786,
    2761,  3732, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
    -467, -1873,  -446,  4846,  3212, -3786,  2528,  3895,  3896, -3786,
   -3786,  3777,  1845,  1847, -3786, -2405, -2333, -3786, -3786,  -736,
    -712,   902, -3786,  1312, -3785, -3221,  3898, -3786, -3160,   916,
    3907,  3910, -3035,  3433, -3786, -3786, -3786, -3786, -3786,  2375,
   -3786, -3786, -3786, -3786, -3786, -3786,  3060,  4132,  -755, -1739,
   -3786, -3786, -3786,  1174,  3028,  2379, -3786, -1121, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786,  2540,  2028, -3786, -3786, -3786, -3786,  3153, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786,  1867,   253, -3786,  1165,   168, -3786,
     832, -3786, -3786, -3786, -3786, -3786,    25, -3786, -3786,     2,
   -3786,  -953,  -944,  1070, -1640, -2572, -3786,   947, -2936, -2640,
    -798, -1310, -1306,    90,  2183,  3401, -1669, -3786,  2837,  -729,
   -1345,    -6, -3786, -2258,   -19,   115,    12,  3125, -3786,    50,
     360,    79, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -3786,  3751, -3786,  2445,  4877, -3786, -3786, -3786,  3115,  4880,
    -633,  3767,  3142, -3786,  3150, -3786, -3786, -3786,  2476, -1695,
   -3786, -3786,   180, -3786,  2533, -3786, -3786, -3786, -3786, -3786,
   -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786, -3786,
   -1023,  4210,  4896,  3857, -3786, -3786,  2265, -3786, -1662, -1066,
    -950,  3922,  3544,  1449, -3786,  2652,   721, -3786, -3786, -3786,
     363,  4218,  3817, -3786, -3786, -3786, -3786, -3786,  3976, -3786,
     -14,    16, -3786,   497, -3786, -3786, -3786,   457,  4934,  4935,
   -3786, -3786,   231, -3786,  -649, -3786, -3786, -3786, -3786, -3786,
    3927, -3786, -3786,  3929, -3786, -3786, -3786, -3786,  3930, -3786,
   -3786, -3786, -3786, -3786, -3786,  1896, -3786, -3786, -3786, -3786,
   -3786, -3786,  -431, -3786, -3786, -3786, -3786,  1458, -3786,  1097,
   -3786,  1045,   762,  1552
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2641
static const yytype_int16 yytable[] =
{
     597,   111,  1450,   109,   754,  1202,   114,  1959,  1432,  1138,
    1141,  1582,   646,  1706,   965,   966,   686,  2004,  1438,  1429,
    1457,  2005,  2213,  1170,  2399,   705,  2941,  2716,  2717,   904,
    1283,  2447,   721,  2626,  2627,   726,  1646,   755,  2237,  2148,
     721,  2635,  2636,  2637,   932,   647,   773,   777,  2953,  2362,
    2508,  1242,  1539,  1908,  1909,  1829,   704,  3209,  1762,  2174,
     595,   710,   938,  1538,   937,  2316,  3026,  2098,  1593,  2146,
    3389,   680,  2998,  2361,   933,  3257,  3143,  2197,  1862,  2942,
    3144,   930,  1961,  3050,  2130,  1947,  3825,   949,  3211,   680,
    2776,  2776,  2131,  2153,  1974,  1975,  1976,  2157,  1668,  1978,
     681,  2428,  1763,  2498,  3842,   951,  2777,  2777,  2472,  3744,
    3563,  2175,   685,  3008,  3711,   968,  3052,  3281,   681,  3079,
    1439,  2509,  1406,  2187,  1167,  2942,  2734,  2510,  3055,   967,
    1017,  1018,  3396,  2513,   974,  2780,   679,  2744,  2014,  1003,
    1005,  3478,  2819,  2954,  3479,  3481,  3482,  2801,  1082,  3789,
    3793,  1621,  1622,  3794,   679,  2653,   984,  1347,  1348,  1349,
    1371,  2712,  3091,   977,  4219,   597,  3828,  1370,   597,   949,
     985,   974,  3803,  1371,  4224,  4174,  1708,  2835,  2836,  2227,
    3202,  1773,  1621,  1622,   974,  1036,  1037,  1038,  1373,   607,
    1041,  1042,  2655,  2338,  1045,  1046,  1047,  1048,  3891, -1931,
    2954,  1901,  1902,  1903,  3062,  1124,  3246, -1725,  2289,   703,
    2792,  4201,  1913,  2785,   709,  3899,  3123,  3124,  3125,  4157,
    1488,  1832,  1621,  1622,  1708,   979,  1227,  1014,   983,  2072,
     973,  1838,  3147,  3743, -2574,  1621,  1622,  3910,  3795,  1320,
    1070,  1861,   629,  1967,  3850,  3254,  1971,  2727,  2700,  2730,
    1566,  -891,   648,  2409,  1488,  3525,   957,  3163,  1621,  1622,
    1843,  3165,  4484,  1374,  1988,  1989,   934,   986,  1993,  1112,
    2713,  3855,  2074,   987,  2338,  1858,   762,  3173,  3174,  3405,
     997,  2680,  1488,  3180,  2705,  -582,  2007,  2008,  -594,  1621,
    1622,  2012,  2013,  1621,  1622,  3460,  3298,  2712,  -472,  3192,
    3193,  1621,  1622,  1817,  3031,  3477,  1621,  1622,  3199,  2618,
    1702, -1612,  4120,  -583,  3775,  1709,  2802,  1101,  2804,  2409,
    1562,  1006,  4089,  3953,   963,   695,  3776,  2816,    42,  4888,
    1396,  2852,  4485,  2853,  1621,  1622,  4021,  4665,  4553,  1221,
    3777,  4646,  2402,  2831, -2489,  3436,    42,  1621,  1622,  4554,
    3378,   810,  1172,   741, -2574,  3228,  1621,  1622,  1094,  3269,
    1172,   741,  1782,  1709,  2862,  1135,   993,  1567,  2864,  1621,
    1622,  1568,  2205,  1606,  1614,  3775,  2854,  1621,  1622,  1142,
    2538,  2973,  3950,  4307,  1114,  1569,  1125,  3776,  1073,  2786,
    1744,   711,  3844,  3088,  1892,  1880,  4619,  2169,   188,  2855,
    4307,  3777,  3263,   725,  3397,  3861,  2713,  -796,  1228,  1213,
    2955,  2389,  2712,  1172,   741,  -492,  2685,   815,  2693,  2139,
    1799,  1321,  -481,  3012,  3409,  1621,  1622,  1130,  1419,   698,
    2535,  1803,  2375,  3061,  2112,  4280,   959,  2610,  2856,  3262,
    1208,  1880,  4008,  -459,  3032,  1767,  4666,  1833,  2659,  1550,
   -2075,  2672,  1621,  1622,  2921,  4346,   929,  4284,  3195,  3580,
    3584,  3236,  1577,  2075,  2930,  3671, -1871,  4108,  1923,  3595,
    3596,  1621,  1622,  4849,  4486,  2193,  2975,  1551,  1372,  2105,
    2595,  2117,  1283,  2118,   604,  3196,  4413,   605,  3237,  2110,
      53,  1372,  4850,   190,   957,  2660, -1612, -2640,  2976,  1834,
    4146,  1621,  1622,  4074,  4285,  2216,  2410,  3377,  4078,  4414,
    3068,  4081,   188,  1083,   604,  4281, -1872,   605,  2787,   827,
    1624,  2713,  1570,  1625,  3607,  4203,  1547,  1209,  2194,  2337,
    1703,   969,  1598,   708,  3013,  4204,  1871,  1621,  1622,  2288,
    2113,  1578,  3005,  1548,  1621,  1622,  1621,  1622,  3862,  4759,
     994,  1624,  3779,   699,  1625,  1420,   712,  1143,  2731,  1729,
    2170,  4759,  4620,  4647,   931,  2206,  1095,  4555,  4308,  3845,
    1621,  1622,  2410,  1563,  2106,  1621,  1622,  1621,  1622,  1115,
    1667,  4307,    61,   763,  2111,  4308,  1621,  1622,  4610,  -796,
    3002,  1624,  3068,  2119,  1625,  1013,  1859,  4093,  1102,  1397,
     974,   974,   842,  4667,  1670,  2022,  4056,  1893,   949,  4097,
    1016,  2339,  3053,  1214,  2195,    42,  3386,  4100,  3598,  3856,
    1571,  3492,  4329,  3299,  1035,  1783,   843,  1624,  1039, -2235,
    1625,  3205,  1728,  1044,  2049,  2957, -1612,  4450,  4451,  2313,
     992,  1837,  1738,  1000,  2228,  2050,  2051,  4022,  4139,  2334,
    3022,   964,  3214, -2261,  3033,  1717,  1375,   764,  1624,   935,
   -2394,  1625,  1624,  1818,  4465,  1625,   696,  3702,  1085,  3704,
    1624,  2767,    42,  1625,  3467,  1624,  1704,  3593,  1625,  4205,
    2681,   949,  1621,  1622,  1071,   649,  3406,  1089, -2640,  1550,
    2411,  2857,  2339,  3050,  1621,  1622,  1004,  1004,  3526,  3754,
    3755,  1105,   949,  1624,  1839,  3743,  1625,  1136,  3282,  1015,
    2782,  3083,  2782, -2574,  2493,  2546,  1624,  1551,  2496,  1625,
    1107,  1199,  4461,  2500,  3283,  1624,  1139,  2942,  1625,  4220,
    1035,  3265,  3376,  1844,  1156,  1161,  3247,  3248,  1624,   949,
    1386,  1625,  1080,  2788,  1357,  3080,  1624,   949,   949,  1625,
    2130,   755,  2514,  2515,  4561,  3693,  2411,  2559,  2131,    53,
    2078,  1229,   974,  1220,  2155,  2156,  4308,  2158,   777,  1564,
    2161,  2162,  2163,  2164,  1322, -1931,  3297,  2167,  3300,  2544,
    3197,  1626,  2177, -1725,  2362,  2334,  2731,  2182,  2183,  2184,
    2185,  2186, -2075,  2965,  1624,  2190,  2191,  1625,  1267,  3796,
     680,  2201,  2202,  2203,  2204,  3619,  2207,  2208,  2361,  2210,
   -2574,  2654,  1626,  1621,  1622,  1084,    53,  1397,  2073,  2634,
    3393,  1624,  1284,   869,  1625,  1050,  4305,  -891,   933,   681,
    2638,  3641,  3705,  3642,  3239,  3240,  3241,  3242,  2461,  3582,
    1624,   965,   966,  1625,  4638,  3258, -1612,  3660,  2656,  3661,
    3114,   931,  1626,  3305,  1621,  1622,  2528,  3304,  1219,  1025,
    3622,  -582,  4656,  2026,  3675,  1626,  4889,  2027,  4084, -2575,
    1624,  1440,  1441,  1625,  -472,  1564,  2334,  1564,  1564,  2841,
    1355,  3029,  2768,  2005,  1099,  1126,  3465, -1612,  1626,  -583,
    1109,  2363,  3778,   949,  2403,  1356,  3483,  2226,  2545,  1351,
    4090,  1350,  3466,  2130,  3126,  2321,  1624,  1074,   931,  1625,
    3089,  2131,  3485,  1624,  2536,  1624,  1625,  3779,  1625,  1626,
   -2489,  3288,  2334,  1626,  2571,  1564,  4487,  4369,  2575,  2789,
    4668,  1626,   938,  2523,  1350,  2920,  1626,  1389,  1417,  1624,
     968,  2744,  1625,  2644,  1624,  3726,  1624,  1625,  1359,  1625,
    2597,   949,  1222,  3778,   967,  1624, -1871,  1430,  1625,  3992,
    4352,  1465,  3368,  3369,  1626,   700,  3972,  1458,  2769,  2302,
    2611, -2235,   949,   111,   949,   109,  1466,  1626,   114,  3368,
    3369,  2929,  1620,  1541,   597, -2640,  1626,   974,  2074, -2575,
    1463,  -492,  3608,  2334,  1559, -2261,  3758,  4085,  -481,  1626,
    2334,  3672, -2394,  1583,  1584,  1585, -1872,  1626,  1588,  4015,
     970,   949,  3556,  1594,  1597,  1656,  -281,  2596,  2619,  -459,
    3622,  2334,  2620,  1654,  1631, -2075,  1872,  3563,  1549,  1591,
    1648,   597,  1650,  4695,  1652,   597,   949,  2196,  3509,   597,
     949,   974,  2454,  1669,  1542,  4784,  2026,  1695,  1621,  1622,
    2563,  1624,  4004,  3030,  1625,  1626,  4052,  1701,  3417,  1698,
    3419,  3420,   949,  1624,  3423,  3424,  1625,  4611,   680,  3382,
     949,  1242,  2526,   949,  3433,  3434,  4109,  1714,  1716,  3438,
    1700,  2527,  1626,  1004,  1024,  2942,  2942,  2942,  2477,  3605,
    3771,  1649,   974,   974,  3206,  1653,  4309,   681,   680,  1664,
    2287,  1626,   974,   974,  3478,   974,  1740,  3479,  3481,  3482,
    3281,  2297,  2687,  1621,  1622,  4848,  3951,   949,   949,  4310,
    4920,  2666,  3503,  1023,  1621,  1622,  1774,   681,  1469,   754,
     680,  1626,  3244,   963,   949,  1761,  1948,  1004,  4435,  1949,
    4437,  2550,  1621,  1622,  1621,  1622,  1621,  1622,  1792,  3510,
    1621,  1622,  1778,  3840,  4595,  3960,  1800,  1371,  1831,   681,
    3368,  3369,   755,  1429,  1429,  2470,  2569,  1626,  2551,  1621,
    1622,   949,   765,  1167,  1626,  2978,  1626,  2949,  2688,  2075,
    3102,   680,  1624,  2599,  3154,  1625,  2786,  2600,  1725,  1004,
    1656,  4563,  1196,  3975,  3976,   679,  1621,  1622,  1737,  1004,
    1626,  1739,  1916,  2343, -2235,  1626,  4628,  1626,  1876,  2333,
     681,   693,  2107,  2616,  1621,  1622,  1626,  2617,   777,  1884,
    4005,  3371,  1433,  1624,  1473,  3698,  1625,  3961, -2261,  3703,
    3418,   769,  1688,  3421,  3422, -2394,   608,  3425,  3426,  3427,
    3428,  3429,  3430,  3431,  3432,   959,  3504,  3435,  2776,  3437,
    2324,  1621,  1622,  2556,   965,   966,  2539,  3460,  3514,  2703,
    1284,  3730,  3515,  3738,  2777,  1470,  1621,  1622,  3477,  2725,
    2726,  1979,  3731,  3968,  1284,  1657,  3616,  1351,  4515,  1350,
    2689,  2955,  3008,  1621,  1622,  1539,  1539,  4640,  2076,  3646,
    3069,  2561,   959,  3647,  1575,  3764,  1538,  1538,  3654,  4180,
    4181,  3997,  3655,  4006,  3017,  1621,  1622,  4565,  4203,  1897,
    4190,  4191,  1626,  1434,   602,  4642,  3234,  4094,  4204,  1897,
    1135,  2006,  1621,  1622,  1626,  3983,  1366,  1367,  1368,  1369,
    2694,  2034,  2480,  2035,  2036,  2037,  2038,  2039,  2041,  2043,
    2044,  2045,  2046,  2047,  3015,  2817,  2950,  2179, -2575,  1621,
    1622,  2661,  2048,  3530,  1140,  2825,  2782,  1621,  1622,   688,
    2148,  3058,  2141,  2690,  3984,   949,  2638,  1196,  2979,  4629,
    2213,  2056,  3614,  3615,  2070,  3218,  3219,  4039,  3597,  4684,
    3869,  3870,  4590,  1621,  1622,  2865,  4035,   949,  3109,  3110,
    2827,   949,  3113,  3172,  2099,  3571,  2695,  4331,  2562,  3604,
    4752,  1621,  1622,  3057,  1449,  1394,  3673,   949,  3513,  1591,
    3674,  2889,   702,  1621,  1622,  4054,  2141,  1624,  1621,  1622,
    1625,  4057,  2104,  1600,  3722,  4059,  1371,  2696,  3070,  2126,
     707,   188,  2109,  3025,  3505,  1078,  1898,  2148,  2174,  2123,
    1621,  1622,   949,  1626,  4138, -2575,  1912,  4140,  3071,  4852,
    1657,    25,  3900,  3245,  2815,   603,  1611,  2451,  2077,  1550,
     964,  3072,  4205,   694,  2028,  3221,  2325,  2146,  2735,  2826,
    2828,  1877,  3958,  1621,  1622,  1372,  2078,  1621,  1622,   766,
    4516,  2171,  1624,   770,  1626,  1625,  2768,  1551,  1793,  2215,
    2175,  4336,  2326,  1624,  3732,   715,  1625,  1501,  2697,  3084,
    3085,  3086,  2867,  2868,  4282,  1459,  2957,   960,  1395,  2878,
    2180,  1624,  3547,  1624,  1625,  1624,  1625,  3511,  1625,  1624,
    2985,  1618,  1625,  1550,  4007,  2148,  3739,  4642,  3741,  2565,
    2239,  1621,  1622,  3488,  2736,  1621,  1622,  2029,  1624, -1862,
    3103,  1625,  2232,   974,  3723,  3073,  4327,  4328,  3106,  3506,
    4630,  1551,  1621,  1622,  2130,  2217,  4591,  4225,   974,  1917,
    4131,  1794,  2131,  3806,   771,  1624,  3925,  2079,  1625,  2108,
    3926,  2884,  1471,  2829,  4877,  2767,  3874,  2152,  3372,  2947,
    3198,  2698,   929,  1624,  2691,  2980,  1625,  1387,  2991,  3883,
    4517,  4179,   974,  1621,  1622,  2299,   597,   597,  4399,  3797,
    1950,  2981,  3798,  1951,  4387,   597,  1576,  2488,  1791,  1621,
    1622,  1865,  3296,  2942,  1035,  2318,  2951,  2305,  2322,  1656,
    1624,  4391,  4689,  1625,  3000,  1552,  2363,  4319,  2320,  4226,
    3489,  1621,  1622,  1621,  1622,  1624,  2938,  3992,  1625,  2234,
    1079,  2329,  1580,  1581,  2954,   974,  2141,  4753,  1621,  1622,
    4400,  2389,  1624,  4853,  2275,  1625,  2300,  2301,   933,  2327,
    3724,  1897,  1136,  4512,   974,  2694,    36,  3074,  2842,  1257,
    2489,  2364,  1621,  1622,  1624,  3589,  1602,  1625,  1626,  3733,
    1621,  1622,   974,  1284,   949,  3208,  2942,  2942,  2295,  2172,
    4593,  1624,  2885,  4597,  1625,   767,  4685,  2942,  2942,  2373,
    4453,  3282,  4262,    42,  2377,  4456,  2173, -1862,  3590,  4320,
    2401,  4459,   974,  1599,  3185,   974,  1263,  3283,  1624,  2939,
    4044,  1625,  4045,   949, -1862,   940,  1624,   949,   949,  1625,
     717,  2695,   604,  3402,  3094,   605,  3564,  2005,  1324,  3075,
    2005,  2331,  1460,  1626,  1372,  2405,  2406,  3985,  3403,  4126,
    3958,  1656,  1624,  2030,  1626,  1625,  2453,  2373,   931,  2429,
    1004,   974,  2696,  4127,  2577,  2171,  1621,  1622,  1461,   949,
    1624,  2462,  1626,  1625,  1626,  1866,  1626,  1795,  1004,  -518,
    1626,  4473,  1624,   933,   949,  1625,  2768,  1624,  1966,  1543,
    1625,  1080,   755,  4808,  4809,  2372,  1196,  4686,  1312,  1626,
     755,  4101,  2699,  2768,    42,  3498,  1357,  1550,  2392,  1624,
    1390,  2397,  1625,  3901,  3902,  3903,   597,   597,   597,   974,
     597,   949,   974,  3747,  4832,  2543,  1626,  4474,  4687,  4342,
    2494,  4492,   597,  2697,   949,  1551,  1131,   597,   680,  2486,
    2582,   680,  1624,  1603,  1626,  1625,  1624,    53,  3465,  1625,
    4401,  4038,  2497,  2372,  2955,  1621,  1622,  1873,  2586,  3483,
    2587,  4833,  2589,  2490,  3466,  4364,  2590,   681,  4746,  1600,
     681,  2522,  2769,  1264,   689,  3485,  2481,  2482,  2483,  1657,
    2485,  1626,  1621,  1622,   184,  2594,  1621,  1622,  1316,  1897,
    3719,  3531,  2495,  1621,  1622,  3213,  1626,  2499,   810,  4102,
    1624,   933,  1601,  1625,  1624,  1621,  1622,  1625,  2552,   810,
    1621,  1622,  4581,  1626,  3591,  2484,  2698,  1132,  2487,  1656,
    4233,  1624,   941,  2058,  1625,   778,  2059,   943,  1196,  2362,
    2612,  1897,  1796,  3603,  4690,  1626,  1656,  3946,  1874,    61,
    2940,  2564,  3924,  4103,  3748,  1621,  1622,  4243,    53,  4251,
    3235,  1797,  1626,  2361,  3535,  1313,  4128,  4475,  1284,  2570,
    4066,  1442,  1624,  2005,   815,  1625,   690,  2629, -1783,  2309,
    1621,  1622,   779,   185,   954,   815,  3373,  4428,  1624,  1626,
    3775,  1625,  2633,  3859,  1621,  1622,  4163,  1626,  2337,   957,
    2173,  2540,  3776,  3572,  4067,  3486,  3913,  1621,  1622,  3652,
    1624,  4070,  1624,  1625,  1433,  1625,  3777,  4072,  1621,  1622,
    1359,  1657,  2642,  1626,  3387,  4691,  1970,  1624,  1172,  3790,
    1625,  3653,  3390,  1443,   929,   949,  3141,  3394,  1621,  1622,
    3029,  1626,  3860,  3141,  2337,  3609,  1621,  1622,  3666,   691,
     931,  1624,  4244,  1626,  1625,  1317,  1631,   780,  1626,  1624,
    1621,  1622,  1625,  4468,  2668,  3293,  3294,  3295,  1992,  2709,
    3865,  2553,  3521,  4431,  4432,  3537,   827,   949,  1621,  1622,
    1626,  4834,   975,  3677,  3522,  3866,  2060,   827,  2841,  2957,
    1357,  1417,  2005,  3376,  1621,  1622,   963, -1783,  3264,  4581,
    1522,  1621,  1622,  1523,   949,  1434,  1196,  1621,  1622,  3678,
     978,  1430,  1430,  1626,  1621,  1622,  2541,  1626,  1621,  1622,
    2239,  1399,  1400,  1196,  2729,  1069,    42,  3971,  1072,   974,
    3749,   680,  1602,  1075,  1621,  1622,  2814,   980,  1077,  4264,
    2560,  3583,   982,  4660,  2779,  1624,  2781,  2699,  1625,   987,
    3594,   933,  1597,  2794,  4584,  2797,  2798,  2799,  2650,   842,
     681,  2803,  2573,  2808,  2651,   989,  1580,  1581,  2823,  1444,
     842,  1626,  2310,  2808,  4662,  1626,  2808,  3401,  2821,  2822,
    2784,   949,  2824,  2808,  4123,  4587,  1621,  1622,  2834,  1657,
    2800,  2837,  1626,  2006,   843,  2574,  2809,   990,  2847,  2578,
    4250,  2848,   974, -1783,  1621,  1622,  1657,  4559,   959,  4123,
    2564,  2863,  4603,  2808,  1621,  1622,   998,  3556,  4270,  3556,
    2728,  4218,  1621,  1622,  2838,   170,  2650,  4410,  2846,   974,
    1621,  1622,  2993,  1626,  1624,  2850,  2851,  1625,  1000,  2808,
    2894,  4185,  4186,  4187,  4188,  1543,  2005,  1621,  1622,  1626,
    3854,  4601,  4602,  2585,  1621,  1622,  1001,  3516,  4663,  3634,
    2942,  1624,  1621,  1622,  1625,  1624,  1401,  1402,  1625,  4588,
      53,  1626,  1624,  1626,  2588,  1625,  2455,  1621,  1622,  4623,
    4624,  1621,  1622,  1008,  1624,   718,   974,  1625,  1626,  1624,
     974,  4004,  1625,   718,  1359,  1002,   974,  2456,  2849,  1603,
    2970,   597,  1006,  2745,  2942,  2942,  2967,  2987,  2988,  3896,
    4404,  2992,  1626,  2982,   314,  2591,   316,  1010,   781,  2746,
    1626,  2990, -1783,  3742,  1624,  2886,  3907,  1625,  3923,  2694,
    1351,  2603,  1350,  4780,  2994,  3003,  3874,  1011,  1294,  2457,
     782,   949,  1065,   933,  4741,  1928,  1076,  2148,   949,  1624,
    2368,   933,  1625,  2621,  2369,  2628,  1012,  4002,  1311,  3001,
    4641,  2971,   931,  1624,  1695,  -518,  1625,  2334,  1019,  1695,
    2631,  1325,  1326,  3016,   949,  1020,  1624,  4744,  1021,  1625,
     869,   783,  2933,  4011,  4012,   168,  2937,  1624,  1040,  2311,
    1625,   869,  2948,  4110,  2652,  2695,  1364,  1365,  1366,  1367,
    1368,  1369,  3618,  1043,   974,  2312,  1626,  1624,  1053,  4027,
    1625,   974,   974,  1867,  1868,  1624,  4111,  2520,  1625,  1056,
    2965,  2521,  1049,   964,  2757,  1054,  2696,  2967,  1284,  1624,
    1064,   949,  1625,  3187,  2983,  1063,   974,  3067,  1067,  3785,
    1869,  3189,   784,  1351,   754,  1350,  4396,  1624,  2542,  1065,
    1625,  1932,  2239,  1360,  1361,  4112,  2674,  2675,   933,  4005,
    3517,  2676,  2677,  1624,  1172,   741,  1625,  1081,  4020,  3130,
    1624,  3801,  3802,  1625,  2214,  1068,  1624,   755,  4141,  1625,
    1087,  4143,  4144,  1624,  3100,  2767,  1625,  1624,  3645,  2566,
    1625,  2747,  1093,  2239,  2567,  1626,  3131,  2697,  1964,  1086,
    1725,  2579,  1097,  1624,  4001,  2239,  1625,  1737,  3040,   680,
     680,   680,  3621,  2580,  3969,   974,   974,  2239,  2718,  2719,
    1100,  2720,  1626,  4801,  4801,  3115,  1626,  2719,  2581,  2720,
    1708,  1139,  2239,  1626,  1110,  1139,  3453,  2758,   681,   681,
     681,  4382,  4010,  4383,   949,  1626,  3132,  3069,   949,  3133,
    1626,  1120,  3161,  1172,   741,  1624,  1357,  3134,  1625,  1123,
    1933,  1118,  4240,  4241,  1936,  3625,  2583,  1130,  3778,  2748,
    2239,  1937,  1154,  1624,  2624,  3636,  1625,  3648,  2239,  1168,
    2698,  1162,  1357,  1624,  3146,  1626,  1625,  1224,  2239,  3791,
    3357,  1624,  1580,  1581,  1625,  2749,  1621,  1622,  2694,  1624,
    4511,  2861,  1625,  3215,  3656,  3888,  3889,  2239,  3662, -1612,
    1626,  3111,  3112,  1235,  3291,  3663,  1624, -1862,  3292,  1625,
    1229,  3668,  1225,  1624,  1626,  2239,  1625,  3664,  1239,  3204,
    1240,  1624,  3665,  1241,  1625,  3769,  3472,  1626,  3225,  3770,
    3227,  3912,  1243,  3473,  1244,  3770,  1624,  3948,  1626,  1625,
    1624,  3949,  1938,  1625,  3962,  3222,  1245,  2750,  3963,  3998,
    3453,  4485,  2005,  3564,  2695, -1612,  3999,  2005,  1626,  1709,
    1364,  1365,  1366,  1367,  1368,  1369,  1626,  4048,  1377,  2735,
     810,  4049,  3725,  1379,  4050,  3070,  1233,  1234,  4049,  1237,
    1626,  1238,  3667,  4076,  3135,  2696,  2768,  4077,  4891,  4892,
    1139, -1612,   168, -1612,  1248,  3071,  3670,  4016,  1626,  1249,
    2759,  4082,  1250,   949,  3453,  4083,  1940,  1251,  3072,  3676,
    2760, -1612,  2123,  1252,  1626,  4165, -1612,  2761,  4167,  4166,
    3679,  1626,  4168,  1357,   974,  2123,  3268,  1626,  4169,  4212,
   -1612, -1862,  4170,  1253,  1626,  2736,   815, -1612,  1626,  3774,
    3681,  3892,  3893,  3894,  3895, -1612,   933,  1380,  3683,  2751,
    1359,  1566,  4356,  4007,  1626,  1254,  2697, -1612,  1255,  4361,
    3905,  3906,  3685,  4172,  3368,  3369,  2737,  4173,    42,  4571,
   -1612,  2363,  2769,  1258,  3800, -1612,  1359,  2781,  3136,  2781,
    3686,  3137,  3805,  1260, -1612,  1597,  1261,  3311,   169,  3833,
    4071,  2699,  3073,  4576,  2808,  1139,  3687,  3374,  4175,  1381,
    4177,  4184,  4176,  4032,  4083,  4083,  1626,   170,   949,  4033,
    2768,   168,  3381,  3454,  4194,  3979,  4034,  1382,  4083,  1656,
    4079,  2762,  2767,  3959,  1626,  2735,  4211,  4254,  4058,  4265,
    2239,  4257,  2808,  2239,  1626,  4096,  4260,  2738,   827,  2698,
    2808,   189,  1626,  1262,  2808,  2808,  4096,  1941,  2453,  1139,
    1626,  4286,  4300,  4304, -1612,  4077,  4083,  4083,   677,  4415,
     974,   949,   949,  1265,  2768,  1943,  1266,  1626,  1567,  1268,
     965,   966,  1568,  3453,  1626,  4356,   677, -1612,  4215,  4361,
     171,  1269,  1626,  2859,  2860,  4337,  1569, -1612,  4263,  2232,
    1270,  2736,  1271,  4416,  1057,  3044,  3045,  1626,  4306,   727,
    1385,  1626,  4083,  3810,  4231,  1383,  4269,   610,  1272,  1360,
    1361,  4321,    53,  1273,  3074,  4322,  4271,  3468,  2763,  1274,
    2739,   842,  2737,   172,  4272,  1275,   170,  1359,  1278,  4356,
     949,    42,  4273,  3138,  4361,  1360,  1361,  3454,  4323,  3043,
   -1862,  1279,  4322,  1656,  4374,   843,    42,  4132,  2239,  4274,
     974,  3812,  3311,  3813,  3542,  2967,  1004,  1641,  4427,   938,
    1285,  1350,  4083,  1821,  2967,  2967,   173,  1388,  4443,  1286,
    2967,  4455,  4077,  3472,  4513,  3292, -1612,  1058,  4514,  4481,
    3473,  3523,  1059,  4612,  4653,  4658,  3075,  3222,  4654,  3414,
    1351,  3454,  1350,  2738,   949,   680,  1196,  1656,   611,  1287,
   -1612,  3814,  2735,  3139,   931,  2874,  2877,  4671,  1288,  2373,
    1708,  4049,  3455,  1716,   949,  4672,  4681,  4417,  1289,  4673,
    4682,   974,  1822,  1570,   681,  1060,   728,  2967,  4864,  4866,
    1357,  3140,   949,  2768,  -846,  4747,  2808,  2006,  4901,  4748,
    3565,  1061,  1995,  1996,  2511,  2512,  3493,   938, -1612,  1350,
    3554,  2373,  3980,   949,  1290,  1823,  4901,  1291,  3044,  3045,
    2699,   974,   974,  1292,  1293,  1357,  3455,  1062,  2736,  1295,
     974,   974,   974,  3044,  3045,    53,  2739,  1296,  -657,  1657,
    1297,  4901,  1298,   933,   933,   612,  1360,  1361,  2141, -1612,
      53,  1299,   933,   933,   933,   949,  1300,  1708,  1301,  2737,
     174,  1302, -1612,  2142,  4418,  2372,   729,  1303,  4290,  4291,
    1304,  4293,  4881, -1612, -1612,  1357,  4882,  3546,  1305,  2769,
    1196,  1571,  4419,  4299,  1362,  1363,  1364,  1365,  1366,  1367,
    1368,  1369,  2745,  1306, -1612,  1307, -1612,  1308,  1309,  -816,
    1310,  2740,   869,  1314,  1315, -1612,  4420,  2372,  2746,  1709,
    1362,  1363,  1364,  1365,  1366,  1367,  1368,  1369,  -795,  1318,
    3454,  2005,  1319,  1323,  3810,  1327,  1656,  3046,  1328,  1329,
    2738,  1330,  3456,  1642,  1196,  1331, -1612,  1332,  1392,   175,
    1333,  1334,  3046, -1612,  1335,  1336,  1337,  1338,  1339,   613,
    1340,  1341,  1342,  3069,  3204,  1408,  1343, -1612,  1344,  1643,
    1345, -1612,  1346,  1657,  1376,  3716, -1612,  -657,  3811,  1378,
    3706,  1393,  3812,  2143,  3813,  1391,  1418,   963,  3709,   712,
    3709,  1448,  1084,  1468,  1540,  1587,  3456, -1612,  1543, -1612,
    1589, -1612, -1612, -1612,  1359, -1612,  1709,  1586, -1612,  1590,
    1620,  1651,  1580,  1581,   176,  4577,   177, -1612,  3815,  1550,
    1647,  1655,  1845,  2739,  3816,  1671,   974,  1657,  3740,  1697,
   -1612,  4377,  3814,  2006,  1719, -1612,  1720,  1721,  1357,  1359,
   -1612,  1724,  1722,  1732, -1612,  1824,  1734,  1551,   933,  1733,
    1743,  1764,  1846,  1759,  1775,  1779,  1781,  1784, -1612,  3069,
    1580,  1581,   178, -1612,  3817,  1786,  2781,  2740,   614,  1788,
    3768,  1362,  1363,  1364,  1365,  1366,  1367,  1368,  1369,  1790,
    1132,  1791,  3710,  4664, -1612,  1816,  1820,  1840,   615,  1359,
    2747,  1841, -1612,  1842,  1857,  1863,  1860,  1864,  1875,  1196,
    1878,  3070,  1879,  1847, -1612,  1880,  1885,  1848,  1886,  4407,
    -795,  4408,  4409,  1196, -1612,  1887,  4421, -1612,  1889,  1371,
    1891,  3071, -1612,  1429,  2266,  2267,  2268,  2269,  2270,  2271,
    2272, -1612,  1897,   616,  3072, -1722,  1644, -1612,   617,  4436,
    3841,  1904,  1915,  3818,  1918,  1953,  1963, -1612,  1986,  1964,
    2003,  1965,  2006,  2015,  2016,  3848,  3849,  2023,   179,  4739,
    2024,  4718,  2025,  1360,  1361,  1386,  2032,  2064,  2748,  2063,
    -816,  2065,  1357,   618,  2808,  2808,  2066,  2068,  2894,  2069,
    2071,   619,  2083,   730,   731,  2144,   732,   733,   734,  2085,
    2086,  1825,   676,  3819,  2749,  2735,  1657,  3070,  1360,  1361,
    2087, -1612,  -657,  1673,  3878,   735,  2088,  3882,  2094,  2089,
     676,  1645,  1826,  2090,  2091,  2092,  3768,  3071,  3073,  2096,
    2100,   631,  2115,   620, -1612,  1357,   924,   928,  2127,  4491,
    3072,  1488,  2133,  3768, -1612,  2134, -1612,  1827,  2136,  2137,
    1358,  2140,  1359,  2154,  2740,  2159,  2141,  2166,  1360,  1361,
    3820,  2160,  2165,  1828,  2168,  3768,  2750,  2176,   974,  2178,
   -1612,  2736,  1849,  2181,  2189,  2188,  3919,  2192,  2199,  2200,
    2209,  2211,  2212,  1580,  1581,  2219,  2220,   621,  2221,  3815,
     632,  2224,  2225,  2235,  2236,  3816,  2238,  2276,  2278,  2279,
    4859,  4788,  2239,  1695,  2005,  2280,  2282,  2283,  2284,  2285,
     314,  1090,   316,  2145,  2286,  1395,  2006,  2291, -1612,  2292,
    4580,  2294,  2293,   633,  3073,  2296,  2319,  4425,  2323,  2330,
    4885,  2336,  2337, -1612,  2005,  3817,  1674,  2341,  2344,  2347,
    1675,  2967,  2348,  1284,   949,  4644,  2353,  3981,   974,  2349,
    3074,  1850,  4859,   790,  2350,  2351,  2005, -1612,   634,  4843,
    2352,  4845,  3821,  2365,  3911,  2366,  2367,   677,  2751,  2370,
     933,  2389, -1612,  2938,  4885,  2400,  4430,  1357,  2005,  2398,
    1676,  1564,  2407,  4870, -1612,  2408,  1359,  1090,  1362,  1363,
    1364,  1365,  1366,  1367,  1368,  1369,  2415,  2420,  -657,  3712,
    1677,  2423,  2418,  2424, -1612, -1612, -1612,  2425,  2427,   635,
    2426,  1360,  1361,  1767,  3818,  1851,  1142,  2449,  1143,  2450,
    2465,  2464,  3075,  1362,  1363,  1364,  1365,  1366,  1367,  1368,
    1369,  4115,  4906,  4907,  2466,  2467,  2468,  2469,   810,  1359,
    2475,  -657,  2473,  2502,  2501,  1357,  3074,  2479,  4425,  2503,
    2504,  2141,  2506,  2517,  2519,  2525,  2939,  2529,  2531, -1612,
    2555,  2532,   790,  1357,  3819,  1678,  2142, -1612,  2378,  2524,
    2533, -1612,  2547,  1362,  1363,  1364,  1365,  1366,  1367,  1368,
    1369,  2549,  2554,  4499,  4053,  2584,  4502,  4503,  4504,  4505,
    2557, -1612,  3709, -1612,  2379,   814,  2558,  4580, -1612, -1612,
    2564, -1612,  2568, -1612,   815,  2572,  2576,  2592, -1612,  2380,
    2593,  2598,  2625,  2601,  2613,  2614,  2602,  4091,  3075,  2615,
    2657,  3820,  2381,  2639,  2622,  2623,  2640,  2641,  2648,  1369,
    2649,  3768,  1673,  4075,  2662,   820,  3768,  1852,  -106,  3768,
    4115,  2706,  1139,   636,  3311,  1360,  1361,   810,  2663,  2667,
    3631,  2669,  2670,  3657, -1612,   949,  2671,  4644,  2707,  2715,
    2724,  1679,  1399,  1400,  2732,  2754,  2755,  2866,  4599,  4600,
    -657,  2869,  2453,  2818,  2382,  2383,  2143,  4608,  2820,  1853,
     974,  1359,  2879,  2887,  3982,   949, -1612,  2881, -1612,  2888,
   -1612,  2895,  2935,  2897,  2898, -1612,  2899,  1680,  1360,  1361,
    2900,  2901,  2384,  4804,   814,  2902,   827,  2903,  2904,  2905,
    2906,  2907,  1550,   815,  2908,  2909,  2910,   974,  4148,  2954,
    2911,  1681,   637,  3821,  2912,  1476,  1477,  1363,  1364,  1365,
    1366,  1367,  1368,  1369,  2913,   677,  2914,  2915,   597,  2916,
    1551,  2917,   638,  2918,   820,  2919,  1682,  1630,  2922,  1359,
    2923,  2924,  2925,  2926,  2927,  1674,  2928,  3004,  2936,  1675,
    2943,  1479,  3878,  2945,  1396,   677,  2972,  1359,  1263, -1254,
    1312,  2385,   838,  2989,  1316,  1482,  4107,  2940,  4189,  4915,
    3018,  1483,  1484,  3020,   840,  1485,  3019,   639,   841,   842,
    1683,  3021,   617,  2967,  3023,  3027,   974,   677,  4158,  1676,
    3038,  3042,  3056,  1090,  4915,  4425,  3059,  1401,  1402,  1487,
     640,  3060,  4918,  4147,  3081,   827,  3090,  1731,   949,  1677,
    3068,  1684,  3097,  1488,  3099,  2386,  3101,  1489,  3117,  3772,
    3773,  3105,  2006,  3116,  3780,   641,  3129,  3565,  4228,  2651,
    1360,  1361,  3216,  2967,   949,  1621,  1622,  3120,   677,  3149,
    3148,   642,  3150,  3162,  -518,  3164,  1494,  3179,  3210,  3212,
    1362,  1363,  1364,  1365,  1366,  1367,  1368,  1369,  3204,  3223,
    3229,  4589,  3804,  3224,  3226,  3232,  3231,   643,  3829,  3831,
    3832,   838,  3251,  3631,  1678,  3252,  1403,  1404,  1405,  3255,
    3271,  3259,  4210,  3272,  3261,  -657,  3302,   841,   842,  3273,
    3274,  3276,  3275,  3301,  3303,  3306,  3376,  3383,  1360,  1361,
    3380,   924,  3384,  1362,  1363,  1364,  1365,  1366,  1367,  1368,
    1369,  3407,  3388,  4283,  3410,  3391,  1360,  1361,  3392,  2955,
    3398,   644,  3471,  1498,  3412,  3413,  3411,  3414,  3416,  3440,
    1499,  3443,  3446,  1924,  1925,  1926,  1927,  1928,  3449,  3452,
    1501,  3500,  1139,  3469,  3768,  3491,  3508,  3768,  1473,  3528,
    1500,  3533,  3529,  3536,  3548,   949,  3552,  3553,  3569,  3566,
    3570,  3587,  3585,  2956,  3575,  3586,  3574,  3576,   924,  3577,
    1679,  1924,  1925,  1926,  1927,  1928,  3578,  3579,   861,  3929,
    3599,  3600,  4116,  2453,  3612,  4117,  2145,  3632,  3622,  3930,
    3626,  3628,  3633,  3635,  3637,   867,   949,  3638,  3649,  3931,
     869,  3650,  3688,   870,  3639,  3640,  1680,   924,  3692,  3696,
    1502,  3691,  3697,  3932,  3933,  3934,  3707,  3699,  3713,  4905,
    3714,   676,  3717,  3718,  3727,  3729,  3736,  2731,  1503,  3935,
    1681,  3742,  3878,  2967,  3882,  4348,  3757,  3745,  3746,  3759,
    1929,  1930,  1931,  1932,  3762,  1362,  1363,  1364,  1365,  1366,
    1367,  1368,  1369,  3786,  3765,  1682,  3788,  1632,  1633,  3799,
     924,  3843,  3838,  3834,  3919,   924,  3839,  3852,  3864,  3853,
    3898,  -657,  3904,  4372,  3915,  3920,  3922,  3928,  1929,  1930,
    1931,  1932,  3944,  1507,  3945,  3955,   974,   861,  3951,   929,
    3956,  4116,  1508,  3957,  4117,   924,  3958,  3970,  1634,  1683,
    3964,  2808,  3967,  2808,   867,  3973, -1506,  3974, -1505,   869,
    3977,  1635,   870,  1362,  1363,  1364,  1365,  1366,  1367,  1368,
    1369,  3978,  3994,  4009,  4024,  4017,  4023,  4118,  4119,  4041,
    1684,  1362,  1363,  1364,  1365,  1366,  1367,  1368,  1369,  4036,
    4037,  4040,  4046,  2058,  2957,  4061,  4063,  4062,  4064,   959,
     604,  1636,  1933,   605,  1934,  1935,  1936,  3267,  4080,  4088,
    4092,  1430,  4124,  1937,  1637,  4125,   924,   924,   924,   924,
    4130,  1513,  4134,  4136,  4729,  4098,   924,  4137,  3828,  4149,
    4142,    42,  4379,  4150,  4152,  4153,  4156,  4159,  4160,  4439,
    1933,  1638,  1934,  1935,  1936,  4162,  4171,  4197,  4200,  4183,
    4213,  1937,  4195,  4198,  1624,  4199,  4214,  1625,  4216,  4217,
    4221,  4222,  3949,  4229,  3878,  3878,  4234,  4235,  4237,  4239,
    4261,  4252,  4253,  4254,  4255,  4266,  4256,  4258,  1514,  1515,
    1516,  4259,  4766,  4267,  4276,  1517,  4118,  4119,  4277,  4278,
    4268,  4287,  4049,  4288,  1938,  4292,  4289,  4766,  4294,  4493,
    4295,  4297,  1518,  3204,  4301,  1519,  1639,  3936,  4318,   840,
    4775,  4325,  4330,  4332,  4333,  3405,  4338,  4257,  4344,   924,
    1745,  4340,  4362,  4373,  3937,  4376,  4378,  4350,  4380,  4384,
    1746,  4351,  1938,  4388,  4390,  4370,  2993,  4394,  4393,   676,
    1747,  1521,  4371,  4395,  4389,  4398,  4440,   924,  4447,  2709,
    4449,  4405,  4452,  4442,  1748,  1749,  1750,  1939,  1940,  4434,
    4462,  4458,  4466,  4498,  4467,  4470,  4500,  4766,  4469,   676,
    1751,  4471,  4244,  4472,  4476,    53,  4480,  4826,  4482,  4477,
    2304,  2006,  4828,  4570,  3200,  4494,  4495,  4501,  4506,  4509,
    2894,  2894,  3806,  4518,  4556,  1939,  1940,  4557,  4564,  4572,
    4573,   676,  4521,  4582,  4584,  4585,  4587,  4588,  3709,  4591,
    -420,  4614,  4632,  4634,  4635,  4636,  4650,  4637,  4605,  4604,
    4652,  4661,  4766,  4657,  4766,  4669,  4695,  -438,  4609,  4698,
    4723,  4724,  4725,  4726,  4728,  4732,  4736,  4737,  4618,  4741,
    4742,  4743,  4751,  4625,  4754,  3938,  4755,  4762,  4763,  4766,
    4767,  4776,   676,  4779,  4782,   111,  4783,   109,  4784,   924,
     114,  4789,  3939,  4791,  4793,  4794, -2450,  2958,  4797,  4805,
    -518,  3878,  4814,  4817,  4819,  4827,  2393,  2394,  4829,  4840,
    4830,  4841,  4846,  4842,  4860,  4766,  4766,  4867,  4677,  4869,
    4922,   924,  4873,  4851,  4886,  4875,  4878,  4879,  4887,  1941,
    4890,  4895,  4894,  4897,  4904,  4888,  4680,  4889,  3524,  4683,
    4923,  4627,  3442,  3451,  4347,  1626,  1942,  1943,  3445,   949,
    4349,  3448,   949,  3439,  3940,  4345,  3897,  3750,  4357,  1612,
    4366,  4560,  4773,  4368,  2135,  4699,  4639,  1941,  4774,  4924,
    4899,  3941,   761,  4464,  1207,   677,  3054,  3011,   677,  4730,
    3943,  4532,  4533,  4535,  1942,  1943,  4908,  4811,  4536,  4538,
     924,   924,   949,  4539,  4760,  4812,  4540,  4802,  4570,   924,
     924,   924,   924,   924,   924,  4541,  4542,  4543,  4546,  4547,
    4772,  4548,   924,   924,  4771,   924,   924,  4192,  2778,  3756,
     924,   924,  4182,  4073,   924,   924,   924,   924,  1752,   924,
     924,  2934,  4196,  3497,  3496,  3499,  4051,   924,   924,  4406,
     924,   924,   924,   924,   924,  1753,   924,   924,   924,   924,
     924,   924,   924,   924,   924,  4745,   924,  4303,  4781,   924,
     924,  4750,  4508,  4749,   924,  2872,  2932,  3495,   924,   924,
     924,  3914,  4677,  4086,  3792,  4087,  2790,  3837,  3835,  4324,
    4756,   924,   924,   924,  4133,  4566,   924,  3690,  4412,   924,
     924,   924,   924,   924,   924,  4454,  4510,  4457,  4426,  4433,
    4317,  4099,  3370,  3908,  3487,  2875,  3243,   924,   924,  4335,
     924,   924,   924,   924,   924,   924,   924,   924,   924,   924,
     924,  2876,  3249,   924,  2873,  2125,  2954,   924,  1218,   924,
    2518,  2516,  1476,  1477,  4816,  2277,  3851,  3041,  3375,  3545,
    3039,  4824,  3415,  2233,  3312,  3313,  3028,  3954,   936,  2448,
    3314,  1129,  3315,  3260,  3316,  3317,  4552,  2303,  2116,  1128,
    2647,  3220,  2632,  3701,  4478,  4740,  3145,  4489,  1479,   924,
    3063,  4778,  3318,  1962,  2006,  4735,  3064,  3065,  3066,  4386,
    4574,  4863,  1482,  1754,  4865,  3871,  4871,  4880,  1483,  1484,
    4242,  4876,  1485,  4575,  4000,  3996,  1914,  4249,  1223,  4479,
     949,  3519,  1882,  3602,  2006,  4397,  3847,  4483,  1030,  4411,
    1770,  2711,   645,  2999,  2332,  1718,  1487,  1451,  1452,  4230,
    1453,  3543,  3319,  3544,  4223,  3320,  2006,  1447,  3966,  2124,
    1488,  3107,  1454,  3321,  1489,  2507,  3108,  4552,  4552,  1630,
    4916,  2492,  1201,  3006,  3395,  1755,  2422,  3551,  2006,  4065,
    4296,  4777,  3322,   111,  4733,   109,  4919,  4903,   677,  4145,
    4227,  -518,  1756,  1494,  3266,  4916,  2463,  1802,  3095,  3323,
     757,  2474,  2686,   758,  2686,  1092,  2701,  2702,  2460,  2704,
    3087,  1801,  1122,  3035,  2459,   724,  4375,  1707,  3238,  1592,
    1431,  2082,  2946,  1127,  1766,   625,   626,  3324,  3909,  3325,
    1615,  4151,  1616,  1617,  4193,  4363,  3858,     0,     0,     0,
       0,     0,     0,     0,  1030,  3326,  3327,     0,     0,     0,
       0,     0,     0,     0,  2766,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2955,     0,  4552,  4552,
    1498,     0,     0,     0,     0,     0,     0,  1499,  2810,  2811,
    2812,  2813,     0,     0,     0,  4552,     0,  3328,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1500,     0,     0,
    3329,   924,  1246,     0,     0,     0,     0,   924,  2845,   924,
     924,     0,     0,     0,     0,     0,     0,     0,     0,  3330,
       0,   924,   924,     0,   924,   924,     0,     0,  3331,  3332,
       0,  3333,  1277,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4552,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1502,  4552,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3334,  3335,
    3336,  4552,     0,     0,     0,  1503,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3337,  3338,  3339,
       0,     0,     0,     0,  3340,     0,     0,  3341,     0,  4552,
       0,     0,     0,     0,     0,     0,  1352,     0,     0,     0,
       0,  4552,  4552,     0,     0,  3342,  3343,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4552,     0,
    1507,     0,     0,     0,     0,     0,   929,     0,  4552,  1508,
       0,     0,     0,  4552,     0,     0,     0,     0,     0,  3344,
    3345,     0,     0,     0,     0,     0,     0,  4552,     0,  4552,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   676,
       0,     0,   676,     0,     0,  3346,     0,     0,     0,     0,
     924,  4552,     0,  4552,   924,  4552,     0,     0,     0,     0,
     924,  2957,     0,     0,     0,     0,     0,     0,     0,   924,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4552,     0,     0,     0,     0,     0,     0,     0,  1513,     0,
    3037,     0,     0,     0,     0,     0,     0,     0,    42,     0,
    4552,  4552,     0,     0,  1619,     0,     0,  3347,     0,     0,
       0,  3348,     0,     0,     0,     0,  4552,  4552,     0,     0,
       0,  4552,     0,  3349,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   677,   677,   677,     0,
       0,     0,     0,     0,     0,  1514,  1515,  1516,     0,     0,
       0,   924,  1517,     0,     0,   924,     0,     0,     0,     0,
       0,     0,  3096,   924,     0,   924,     0,     0,     0,  1518,
       0,     0,  1519,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3350,     0,     0,  3351,     0,     0,  3352,
    3353,  3354,  3355,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   924,  2686,     0,  1521,     0,
       0,     0,     0,     0,     0,     0,  1777,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3356,  3357,     0,     0,     0,     0,     0,     0,
       0,     0,    53,     0,     0,     0,     0,     0,  1814,   924,
     924,   924,     0,     0,     0,     0,     0,     0,     0,     0,
    3358,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   924,     0,
       0,     0,     0,   924,     0,     0,     0,     0,     0,     0,
       0,   924,     0,   924,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1895,  1896,     0,
       0,     0,   676,     0,     0,     0,  1906,  1907,     0,     0,
    1910,  1911,     0,     0,   931,     0,     0,  -518,     0,  1919,
    1920,     0,  1921,  1922,  4847,     0,     0,  1946,     0,     0,
       0,  1955,  1956,  1957,  1958,     0,  1960,     0,     0,     0,
       0,     0,     0,     0,  1968,  1969,     0,  1972,  1973,     0,
       0,     0,     0,  1977,     0,     0,  1980,  1981,  1982,  1983,
    1984,  1985,     0,  1987,     0,     0,  1990,  1991,     0,     0,
       0,  1994,     0,  3250,  2240,  1997,  2001,  2002,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2009,  2010,
    2011,     0,     0,     0,     0,     0,  2017,  2018,  2019,  2020,
    2021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3270,     0,  2033,     0,     0,     0,     0,     0,
       0,     0,  3277,     0,  3284,  3285,  3286,  3287,     0,  3289,
    3290,     0,     0,     0,  2052,     0,  2057,  2241,  2242,  2243,
    2244,  2245,  1399,  1400,  2246,  2247,  2248,     0,  2249,  2250,
    2251,  2252,  2253,  2254,  2255,  2256,  2257,  2258,     0,  2259,
    2260,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     924,     0,     0,     0,     0,     0,  2101,     0,     0,     0,
       0,     0,  3379,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3385,     0,     0,     0,     1,     0,     0,
       2,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     3,     0,     0,     0,     4,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     5,     6,     0,     0,     0,     0,     0,
       0,     7,     0,     0,     0,     0,     8,     9,     0,     0,
     924,     0,     0,     0,   924,   924,     0,   924,   924,     0,
       0,     0,    10,     0,     0,     0,  2686,     0,     0,  2686,
    2686,     0,     0,  2686,  2686,  2686,  2686,  2686,  2686,  2686,
    2686,     0,    11,  2686,     0,  2686,     0,  1401,  1402,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1101,  1171,
       0,     0,     0,     0,    12,     0,     0,     0,     0,     0,
       0,     0,   677,     0,    13,    14,     0,     0,     0,     0,
     924,     0,     0,     0,  1172,   741,    15,    16,     0,     0,
       0,     0,     0,   924,     0,  1173, -1870,     0,     0,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,     0,     0,
    1174,     0,  1175,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1176,    19,     0,     0,     0,     0,  1030,     0,
     676,   676,   676,     0,  2306,     0,  2307,  2308,     0,     0,
       0,    20,     0,    21,     0,     0,     0,     0,    22,     0,
       0,    23,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    24,     0,     0,     0,
   -1862,  1177,     0,     0,    25,     0,  1178,    26,     0,  1179,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1180,
       0,     0,     0,     0,     0,     0,     0,    27,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   924,     0,     0,
       0,  1181,     0,  1182,    28,     0,   924,   924,    29,  3610,
       0,     0,  1183,     0,  1184,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   924,   924,     0,   924,
       0,     0,   924,   924,   924,   924,   924,     0,     0,   924,
       0,     0,     0,     0,     0,     0,     0,     0,   924,     0,
       0,     0,     0,   924,     0,   924,     0,   924,   924,     0,
     924,   924,     0,     0,     0,   924,   924,   924,     0,     0,
       0,   924,   924,   924,     0,   924,     0,   924,     0,   924,
       0,   924,     0,   924,     0,  1185,     0,     0,   924,     0,
       0,     0,     0,  2261,  2262,     0,     0,  2471,     0,     0,
       0,  1814,     0,     0,   924,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2478,     0,     0,  1186,
     924,   924,     0,     0,     0,   924,     0,   924,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,  3720,  3721,     0,     0,     0,     0,    32,
       0,     0,     0,     0,     0,     0,     0,     0,  3728,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,    34,     0,    35,     0,     0,    36,
       0,     0,     0,     0,  1187,     0,   924,     0,     0,    37,
      38,     0,     0,     0,     0,     0,     0,     0,  2530,    39,
       0,    40,  2534,     0,     0,     0,     0,     0,     0,     0,
      41,  1188,  2530,     0,     0,     0,    42,     0,     0,     0,
       0,     0,  1189,  1190,    43, -1866,  1191,  1192,     0,    44,
      45,    46,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1193,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,     0,     0,     0,     0,     0,     0,    48,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2605,  2607,  2609,     0,
       0,  1194,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    49,  1195,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    50,     0,     0,     0,    51,
    2643,     0,     0,     0,     0,     0,     0,    52,  2645,     0,
    2646,     0,     0,     0,     0,     0, -2503,     0,     0,     0,
    1196,     0,     0,  2686,     0,     0,     0,     0,     0,     0,
      53,     0,     0,     0,     0,     0, -1870,     0,    54,  1197,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    55,    56,    57,    58,     0, -1866,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    59,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1476,  1477,   676,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -2503,     0,     0,
       0,     0,     0,     0,  1198,     0,    60,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  -797,  -797,
    1479,     0,    61,     0,   924,     0,   924,     0,  -797,     0,
     924,     0,     0,     0,  1482,     0,     0,     0,     0,     0,
    1483,  1484,     0,     0,  1485,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   924,     0,     0,     0,  1487,     0,
       0,     0,     0,     0,     0,     0,  1476,  1477,     0,     0,
       0,     0,  1488,     0,     0,     0,  1489,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   924,     0,     0,     0,     0,     0,  2896,     0,     0,
       0,     0,  1479,     0,     0,  1494,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1482,     0,     0,     0,
       0,     0,  1483,  1484,     0,   924,  1485,     0,     0,     0,
       0,     0,     0,     0,   924,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   924,
    1487,     0,     0,     0,     0,     0,     0,   924,     0,     0,
       0,     0,     0,     0,  1488,     0,     0,     0,  1489,     0,
       0,     0,     0,     0,     0,     0,     0,  2984,     0,     0,
     924,   924,  1498,     0,     0,     0,     0,     0,     0,  1499,
       0,     0,     0,     0,     0,     0,  4060,  1494,     0,     0,
       0,     0,     0,     0,     0,     0,   924,     0,     0,  1500,
       0,     0,     0,     0,     0,     0,   924,     0,   924,     0,
     924,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3024,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3036,     0,   924,     0,     0,     0,     0,     0,     0,  1502,
       0,     0,     0,     1,  1498,     0,     2,     0,     0,     0,
    4114,  1499,     0,     0,     0,     0,     0,  1503,     0,     0,
       0,     0,     0,     0,     0,     4,     0,     0,     0,     0,
       0,  1500,     0,     0,     0,     0,     0,     0,     0,     5,
       6,     0,     0,     0,     0,     0,     0,     7,     0,     0,
       0,     0,     8,     9,  3753,  3753,  3753,     0,     0,     0,
       0,     0,   924,     0,     0,     0,     0,     0,    10,     0,
       0,     0,  1507,     0,     0,     0,     0,     0,     0,     0,
       0,  1508,     0,     0,     0,     0,     0,     0,    11,  4178,
       0,  1502,     0,     0,     0,     0,     0,  2686,  2686,  2686,
    2686,     0,     0,     0,     0,     0,     0,     0,     0,  1503,
      12,     0,     0,     0,  3119,     0,     0,  4202,     0,     0,
      13,    14,     0,  3127,  3128,     0,     0,     0,     0,     0,
       0,     0,    15,    16,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3151,  3152,     0,  3153,     0,     0,  3156,
    3157,  3158,  3159,  3160,     0,     0,     0,     0,     0,    18,
    1513,     0,     0,     0,  1507,  3166,     0,     0,  4232,     0,
    3167,     0,  3168,  1508,  3169,  3170,     0,  3171,     0,    19,
       0,     0,  3176,  3177,  3178,     0,     0,     0,  3181,  3182,
    3183,     0,  3184,     0,  3186,     0,  3188,    20,  3190,    21,
    3191,     0,     0,     0,    22,  3194,     0,    23,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1514,  1515,  1516,
       0,     0,    24,     0,  1517,     0,     0,     0,     0,     0,
      25,     0,     0,    26,     0,     0,     0,  2052,     0,     0,
       0,  1518,     0,     0,  1519,     0,     0,     0,     0,     0,
       0,     0,  1513,    27,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,    29,     0,   924,     0,   924,     0,
    1521,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2101,     0,     0,     0,     0,     0,  1514,
    1515,  1516,     0,     0,     0,     0,  1517,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   924,     0,     0,
       0,     0,     0,  1518,     0,     0,  1519,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4339,     0,     0,
     924,   924,     0,     0,     0,     0,     0,     0,     0,     0,
    2686,    30,  1521,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   924,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4365,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,   924,     0,
     924,     0,     0,   924,   924,    32,   924,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   924,     0,     0,
       0,     0,   924,     0,     0,   924,     0,    33,   924,   924,
      34,     0,    35,     0,     0,    36,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    37,    38,     0,     0,     0,
     924,     0,     0,     0,     0,    39,     0,    40,     0,     0,
       0,     0,     0,     0,     0,     0,    41,     0,     0,     0,
       0,     0,    42,     0,     0,     0,     0,     0,     0,     0,
      43,     0,     0,     0,     0,    44,    45,    46,     0,     0,
       0,     0,     0,     0,  4429,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,     0,
       0,     0,     0,     0,     0,    48,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3518,     0,    49,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    50,     0,     0,     0,    51,     0,     0,     0,     0,
       0,     0,     0,    52,     0,     0,     0,     0,     0,     0,
       0,  3539,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   924,   924,     0,     0,    53,     0,     0,     0,
       0,     0,     0,     0,    54,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3573,     0,
       0,     0,     0,     0,     0,  3753,  3753,     0,     0,     0,
       0,     0,     0,     0,     0,    59,  3753,  3753,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1814,     0,     0,     0,     0,   924,     0,     0,
       0,  3611,     0,     0,     0,     0,  4598,     0,     0,     0,
       0,     0,    60,     0,     0,     0,  3617,     0,     0,     0,
     924,     0,     0,     0,  3620,     0,     0,     0,    61,     0,
     924,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1472,  3643,  3644,     0,
     924,  1473,   924,  1474,     0,     0,  1475,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1476,  1477,     0,     0,
       0,     0,     0,  3669,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3680,     0,  3682,     0,  3684,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1478,     0,     0,
    -797,  -797,  1479,  1480,     0,     0,  4678,  4679,  1481,     0,
    -797,     0,     0,     0,     0,     0,  1482,     0,     0,     0,
       0,     0,  1483,  1484,     0,     0,  1485,     0,     0,     0,
       0,     0,     0,     0,     0,  1486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1487,     0,     0,     0,     0,     0,     0,     0,     0,  4734,
       0,     0,     0,     0,  1488,     0,     0,     0,  1489,     0,
       0,     0,     0,     0,     0,     0,  1490,  1491,     0,     0,
       0,     0,     0,  1492,     0,     0,     0,     0,     0,     0,
       0,  1493,     0,     0,     0,     0,     0,  1494,     0,  3763,
       0,     0,     0,     0,     0,     0,     0,     0,  1495,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1497,     0,  1498,     0,     0,     0,     0,     0,
       0,  1499,     0,     0,     0,     0,  4807,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1500,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   924,     0,     0,     0,     0,
       0,     0,     0,     0,  1501,     0,     0,     0,     0,     0,
       0,     0,   924,     0,     0,   924,     0,     0,     0,  4862,
       0,     0,     0,     0,     0,     0,     0,     0,   924,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1502,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1503,
       0,     0,     0,  1504,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1505,     0,     0,     0,     0,     0,  1506,     0,     0,
       0,     0,     0,     0,  1507,     0,     0,     0,     0,     0,
       0,     0,     0,  1508,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3539,     0,     0,     0,     0,   924,
       0,     0,     0,     0,     0,  1509,   924,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1510,  1511,  1512,     0,     0,     0,     0,  2101,  3993,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   924,     0,     0,     0,  4550,     0,  4003,
       0,     0,  1513,  4558,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4013,     0,  2101,     0,     0,
    4018,  4019,     0,     0,     0,     0,     0,   924,     0,     0,
       0,     0,     0,     0,  4026,     0,     0,     0,     0,  4028,
       0,     0,  4029,     0,     0,  4030,  4031,     0,     0,  1514,
    1515,  1516,     0,     0,     0,     0,  1517,     0,     0,     0,
       0,     0,   924,     0,     0,     0,     0,  4043,  4550,  4550,
       0,     0,     0,  1518,     0,     0,  1519,     0,     0,     0,
       0,     0,     0,  1472,     0,     0,     0,     0,  1473,     0,
    1474,     0,     0,  1475,     0,     0,     0,     0,     0,  1520,
       0,     0,     0,  1476,  1477,     0,     0,     0,     0,     0,
       0,     0,  1521,     0,     0,     0,     0,   924,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1478,   924,     0,     0,     0,  1479,
    1480,     0,     0,     0,     0,  1481,  1522,     0,     0,  1523,
       0,     0,     0,  1482,     0,   924,     0,   924,     0,  1483,
    1484,     0,     0,  1485,     0,     0,     0,   924,     0,  4550,
    4550,     0,  1486,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4550,  1487,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1488,     0,     0,     0,  1489,     0,     0,     0,     0,
       0,     0,     0,  1490,  1491,     0,     0,     0,     0,     0,
    1492,     0,     0,     0,     0,     0,     0,     0,  1493,  4154,
    4155,     0,     0,     0,  1494,     0,     0,     0,     0,     0,
       0,     0,   924,     0,  4550,  1495,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4550,
     924,     0,     0,     0,     0,     0,     0,     0,  1496,     0,
       0,     0,  4550,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   924,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   924,
    4550,     0,     0,     0,     0,     0,     0,     0,     0,  1497,
       0,  1498,  4550,  4550,     0,     0,     0,  3539,  1499,     0,
       0,     0,     0,     0,     0,     0,     0,  3539,     0,  4550,
       0,     0,     0,     0,     0,     0,   924,     0,  1500,  4550,
       0,     0,     0,     0,  4550,     0,     0,  4236,     0,  4238,
       0,   924,     0,     0,     0,     0,     0,     0,  4550,     0,
    4550,  1501,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2870,     0,     0,     0,     0,  1473,     0,
    1474,     0,  4550,     0,  4550,     0,  4550,     0,     0,     0,
       0,     0,     0,  1476,  1477,     0,     0,     0,  1502,     0,
       0,     0,     0,     0,     0,     0,     0,  3312,  3313,     0,
       0,  4550,     0,  3314,     0,  3315,  1503,  3316,  3317,     0,
    1504,     0,     0,     0,  1478,     0,     0,     0,     0,  1479,
       0,  4550,  4550,     0,     0,  3318,     0,     0,   924,     0,
       0,     0,     0,  1482,     0,     0,   924,  4550,  4550,  1483,
    1484,     0,  4550,  1485,     0,     0,     0,     0,  1505,     0,
       0,     0,  1486,     0,  1506,     0,     0,     0,     0,     0,
       0,  1507,     0,     0,     0,     0,     0,  1487,     0,     0,
    1508,     0,     0,     0,     0,  3319,     0,     0,  3320,     0,
       0,  1488,     0,     0,     0,  1489,  3321,     0,     0,     0,
       0,     0,     0,  1490,     0,     0,     0,     0,     0,     0,
    2871,     0,  1509,     0,     0,  3322,     0,     0,  1493,     0,
       0,     0,     0,     0,  1494,     0,     0,  1510,  1511,  1512,
       0,     0,  3323,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1496,  1513,
    3324,     0,  3325,     0,     0,     0,     0,  4655,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3326,  3327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1498,     0,     0,     0,     0,     0,     0,  1499,     0,
       0,     0,  2101,     0,     0,     0,  1514,  1515,  1516,     0,
    3328,     0,     0,  1517,     0,     0,     0,     0,  1500,  2101,
       0,     0,  4392,  3329,     0,     0,     0,     0,     0,     0,
    1518,     0,     0,  1519,     0,  2101,     0,     0,     0,     0,
       0,  1501,  3330,     0,     0,     0,     0,     0,     0,     0,
       0,  3331,  3332,     0,  3333,     0,  1520,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1521,
       0,     0,     0,     0,     0,     0,     0,     0,  1502,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3334,  3335,  3336,     0,     0,  1503,     0,     0,     0,
    1504,     0,     0,  1522,     0,     0,  1523,     0,     0,     0,
    3337,  3338,  3339,     0,     0,     0,     0,  3340,     0,     0,
    3341,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3342,  3343,
       0,     0,     0,     0,  1506,     0,     0,     0,     0,     0,
       0,  1507,     0,     0,     0,     0,  2101,     0,     0,     0,
    1508,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3344,  3345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3346,     0,
    4520,     0,     0,     0,     0,     0,     0,  1510,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1513,
       0,     0,     0,     0,  4583,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3347,     0,     0,     0,  3348,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3349,     0,     0,  4613,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1514,  1515,  1516,     0,
       0,     0,     0,  1517,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1518,     0,     0,  1519,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4659,     0,  3350,     0,     0,  3351,
       0,     0,  3352,  3353,  3354,  3355,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1521,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4693,     0,  4694,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4702,  3356,  3357,     0,     0,     0,
       0,     0,     0,  1522,     0,     0,  1523,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3358,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4764,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4769,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4787,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   191,   192,     0,
     786,   194,   195,   196,   197,  1808,     0,   198,     0,     0,
       0,     0,   199,     0,     0,   787,     0,   201,   202,   203,
     204,   788,   206,  4818,   207,     0,     0,  1809,   208,   790,
     791,   792,   209,   793,     0,   210,   211,   212,  4839,   213,
       0,   214,   215,     0,     0,   216,   794,   795,   217,   218,
       0,   219,   220,   796,   797,   222,     0,   223,   224,   225,
     226,   798,   228,     0,   799,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,   800,   801,
     249,     0,     0,     0,   802,   250,   803,     0,   251,   804,
     805,     0,   252,   253,   254,   806,   807,   808,     0,     0,
       0,     0,   809,   257,   810,     0,     0,  1810,   258,   259,
       0,   260,     0,     0,     0,  4917,     0,   261,   262,   263,
     264,   265,     0,  3539,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   812,     0,   284,   285,   286,   287,   288,
     813,   814,   289,   290,     0,   291,   292,   293,   294,   295,
     815,     0,   296,   297,     0,     0,     0,   816,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   817,   304,   818,
       0,   306,     0,   307,     0,   819,     0,   308,   309,     0,
     310,   820,     0,   311,   312,     0,     0,     0,   821,   314,
     315,   316,   822,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   823,   321,   322,   323,   824,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,   825,   334,   335,     0,     0,     0,     0,
       0,   826,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,   827,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   828,   364,   365,   366,   367,   829,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   830,   375,     0,
       0,   831,   377,   832,   378,     0,   379,   833,   834,   835,
     836,   837,   384,   385,   386,   387,   388,     0,   838,   389,
     390,     0,     0,   391,   392,   393,   394,   395,   839,  1026,
     840,   396,   397,     0,   841,   842,   398,     0,   399,   400,
    1811,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,   843,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   844,   845,   419,   846,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   847,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,   848,   849,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   850,     0,   851,
     463,   464,   465,   466,     0,   467,  1812,   853,   469,   470,
     471,   472,     0,   854,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,   855,   856,   503,   504,
       0,     0,   505,   506,   857,   508,   509,   510,   858,   859,
     511,   512,   513,   514,   860,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   861,   521,   522,     0,   862,   863,
     864,   865,     0,     0,     0,     0,     0,   527,   528,     0,
     866,   867,   868,   530,   531,   532,   869,   533,   534,   870,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   871,   543,     0,     0,   872,   873,
     874,   544,   875,   545,     0,     0,   546,   876,     0,   877,
     547,     0,   548,   549,   878,   879,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   880,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,   881,   882,     0,
     564,   565,   566,   883,     0,   567,   568,   569,   570,   884,
     885,   571,   886,   572,     0,   887,   888,   889,   890,   891,
     573,   574,     0,   892,   575,   893,   576,   894,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,  1813,   587,   588,   589,   590,   591,   592,   593,   594,
       0,     0,     0,   895,   896,     0,     0,     0,     0,   897,
       0,   898,     0,     0,     0,   899,     0,     0,     0,   900,
     901,   191,   192,     0,   786,   194,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,     0,     0,   787,
       0,   201,   202,   203,   204,   788,   206,     0,   207,     0,
       0,   789,   208,   790,   791,   792,   209,   793,     0,   210,
     211,   212,  1998,   213,     0,   214,   215,     0,     0,   216,
     794,   795,   217,   218,     0,   219,   220,   796,   797,   222,
       0,   223,   224,   225,   226,   798,   228,     0,   799,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,     0,   800,   801,   249,     0,     0,     0,   802,   250,
     803,     0,   251,   804,   805,     0,   252,   253,   254,   806,
     807,   808,     0,     0,     0,     0,   809,   257,   810,     0,
       0,   811,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   812,     0,   284,
     285,   286,   287,   288,   813,   814,   289,   290,     0,   291,
     292,   293,   294,   295,   815,     0,   296,   297,     0,     0,
       0,   816,   299,     0,   300,     0,     0,     0,   301,     0,
     302,   817,   304,   818,     0,   306,     0,   307,     0,   819,
       0,   308,   309,     0,   310,   820,     0,   311,   312,     0,
       0,     0,   821,   314,   315,   316,   822,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   823,   321,   322,
     323,   824,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,  1999,   333,     0,   825,   334,   335,
       0,     0,     0,     0,     0,   826,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,   827,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,   828,   364,   365,   366,   367,
     829,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   830,   375,     0,     0,   831,   377,   832,   378,     0,
     379,   833,   834,   835,   836,   837,   384,   385,   386,   387,
     388,     0,   838,   389,   390,     0,     0,   391,   392,   393,
     394,   395,   839,  1026,   840,   396,   397,     0,   841,   842,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,   843,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   844,   845,   419,   846,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   847,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,   848,   849,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   850,     0,   851,   463,   464,   465,   466,     0,   467,
     852,   853,   469,   470,   471,   472,     0,   854,   474,     0,
       0,     0,   475,   476,   477,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
     855,   856,   503,   504,     0,     0,   505,   506,   857,   508,
     509,   510,   858,   859,   511,   512,   513,   514,   860,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   861,   521,
     522,     0,   862,   863,   864,   865,     0,     0,     0,     0,
    2000,   527,   528,     0,   866,   867,   868,   530,   531,   532,
     869,   533,   534,   870,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   871,   543,
       0,     0,   872,   873,   874,   544,   875,   545,     0,     0,
     546,   876,     0,   877,   547,     0,   548,   549,   878,   879,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   880,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,   881,   882,     0,   564,   565,   566,   883,     0,   567,
     568,   569,   570,   884,   885,   571,   886,   572,     0,   887,
     888,   889,   890,   891,   573,   574,     0,   892,   575,   893,
     576,   894,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,     0,     0,   895,   896,     0,
       0,     0,     0,   897,     0,   898,     0,     0,     0,   899,
       0,     0,     0,   900,   901,   191,   192,     0,   786,   194,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,   787,     0,   201,   202,   203,   204,   788,
     206,     0,   207,     0,     0,   789,   208,   790,   791,   792,
     209,   793,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,   794,   795,   217,   218,     0,   219,
     220,   796,   797,   222,     0,   223,   224,   225,   226,   798,
     228,     0,   799,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,   800,   801,   249,     0,
       0,     0,   802,   250,   803,     0,   251,   804,   805,     0,
     252,   253,   254,   806,   807,   808,     0,     0,     0,     0,
     809,   257,   810,     0,     0,   811,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   812,     0,   284,   285,   286,   287,   288,   813,   814,
     289,   290,     0,   291,   292,   293,   294,   295,   815,     0,
     296,   297,     0,     0,     0,   816,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   817,   304,   818,     0,   306,
       0,   307,     0,   819,     0,   308,   309,     0,   310,   820,
       0,   311,   312,     0,     0,     0,   821,   314,   315,   316,
     822,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   823,   321,   322,   323,   824,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,   825,   334,   335,     0,     0,     0,     0,     0,   826,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
     827,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,   828,
     364,   365,   366,   367,   829,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   830,   375,     0,     0,   831,
     377,   832,   378,     0,   379,   833,   834,   835,   836,   837,
     384,   385,   386,   387,   388,     0,   838,   389,   390,     0,
       0,   391,   392,   393,   394,   395,   839,  1026,   840,   396,
     397,     0,   841,   842,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,   843,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   844,
     845,   419,   846,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   847,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,   848,   849,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   850,     0,   851,   463,   464,
     465,   466,     0,   467,   852,   853,   469,   470,   471,   472,
       0,   854,   474,    42,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,   855,   856,   503,   504,     0,     0,
     505,   506,   857,   508,   509,   510,   858,   859,   511,   512,
     513,   514,   860,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   861,   521,   522,     0,   862,   863,   864,   865,
       0,     0,     0,     0,     0,   527,   528,     0,   866,   867,
     868,   530,   531,   532,   869,   533,   534,   870,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   871,   543,     0,     0,   872,   873,   874,   544,
     875,   545,     0,     0,   546,   876,     0,   877,   547,     0,
     548,   549,   878,   879,     0,     0,     0,    53,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     880,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,   881,   882,     0,   564,   565,
     566,   883,     0,   567,   568,   569,   570,   884,   885,   571,
     886,   572,     0,   887,   888,   889,   890,   891,   573,   574,
       0,   892,   575,   893,   576,   894,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,     0,
       0,   895,   896,     0,     0,     0,     0,   897,     0,   898,
       0,     0,     0,   899,     0,     0,     0,   900,   901,   191,
     192,     0,   786,   194,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,     0,     0,   787,     0,   201,
     202,   203,   204,   788,   206,     0,   207,     0,     0,   789,
     208,   790,   791,   792,   209,   793,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,   794,   795,
     217,   218,     0,   219,   220,   796,   797,   222,     0,   223,
     224,   225,   226,   798,   228,     0,   799,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
     800,   801,   249,     0,     0,     0,   802,   250,   803,     0,
     251,   804,   805,     0,   252,   253,   254,   806,   807,   808,
       0,     0,     0,     0,   809,   257,   810,     0,     0,   811,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   812,     0,   284,   285,   286,
     287,   288,   813,   814,   289,   290,     0,   291,   292,   293,
     294,   295,   815,     0,   296,   297,     0,     0,     0,   816,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   817,
     304,   818,     0,   306,     0,   307,     0,   819,     0,   308,
     309,     0,   310,   820,     0,   311,   312,     0,     0,     0,
     821,   314,   315,   316,   822,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   823,   321,   322,   323,   824,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,   825,   334,   335,     0,     0,
       0,     0,     0,   826,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,   827,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,   828,   364,   365,   366,   367,   829,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   830,
     375,     0,     0,   831,   377,   832,   378,     0,   379,   833,
     834,   835,   836,   837,   384,   385,   386,   387,   388,     0,
     838,   389,   390,     0,     0,   391,   392,   393,   394,   395,
     839,  1026,   840,   396,   397,     0,   841,   842,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   405,   406,
     407,   843,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   844,   845,   419,   846,   420,     0,   421,
     422,   423,     0,   424,     0,   425,   426,   427,   428,   429,
       0,   847,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   443,   444,     0,   445,   446,   447,   848,
     849,   448,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   850,
       0,   851,   463,   464,   465,   466,     0,   467,   852,   853,
     469,   470,   471,   472,     0,   854,   474,     0,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
       0,   480,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,   855,   856,
     503,   504,     0,     0,   505,   506,   857,   508,   509,   510,
     858,   859,   511,   512,   513,   514,   860,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   861,   521,   522,     0,
     862,   863,   864,   865,     0,     0,     0,     0,     0,   527,
     528,     0,   866,   867,   868,   530,   531,   532,   869,   533,
     534,   870,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,     0,   541,     0,   871,   543,     0,     0,
     872,   873,   874,   544,   875,   545,     0,     0,   546,   876,
       0,   877,   547,     0,   548,   549,   878,   879,     0,     0,
       0,     0,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   880,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,   881,
     882,     0,   564,   565,   566,   883,     0,   567,   568,   569,
     570,   884,   885,   571,   886,   572,     0,   887,   888,   889,
     890,   891,   573,   574,     0,   892,   575,   893,   576,   894,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,   586,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,     0,     0,   895,   896,  1027,     0,     0,
       0,   897,     0,   898,     0,     0,     0,   899,     0,     0,
       0,   900,   901,   191,   192,     0,   786,   194,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,     0,
       0,   787,     0,   201,   202,   203,   204,   788,   206,     0,
     207,     0,     0,   789,   208,   790,   791,   792,   209,   793,
       0,   210,   211,   212,     0,   213,     0,   214,   215,     0,
       0,   216,   794,   795,   217,   218,     0,   219,   220,   796,
     797,   222,     0,   223,   224,   225,   226,   798,   228,     0,
     799,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,   243,     0,   244,   245,
     246,   247,   248,     0,   800,   801,   249,     0,     0,     0,
     802,   250,   803,     0,   251,   804,   805,     0,   252,   253,
     254,   806,   807,   808,     0,     0,     0,     0,   809,   257,
     810,     0,     0,   811,   258,   259,     0,   260,     0,     0,
       0,     0,     0,   261,   262,   263,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,   269,     0,     0,     0,
     270,     0,   271,   272,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   812,
       0,   284,   285,   286,   287,   288,   813,   814,   289,   290,
       0,   291,   292,   293,   294,   295,   815,     0,   296,   297,
       0,     0,     0,   816,   299,     0,   300,     0,     0,     0,
     301,     0,   302,   817,   304,   818,     0,   306,     0,   307,
       0,   819,     0,   308,   309,     0,   310,   820,     0,   311,
     312,     0,     0,     0,   821,   314,   315,   316,   822,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   823,
     321,   322,   323,   824,     0,     0,   324,     0,     0,     0,
     325,   326,     0,   327,   328,     0,     0,     0,   329,     0,
     330,     0,     0,   331,   332,     0,     0,   333,     0,   825,
     334,   335,     0,     0,     0,     0,     0,   826,   337,     0,
     338,     0,   339,     0,   340,   341,     0,     0,   827,     0,
       0,     0,     0,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,   828,   364,   365,
     366,   367,   829,   368,   369,     0,     0,     0,     0,   370,
     371,   372,   373,   830,   375,     0,     0,   831,   377,   832,
     378,     0,   379,   833,   834,   835,   836,   837,   384,   385,
     386,   387,   388,     0,   838,   389,   390,     0,     0,   391,
     392,   393,   394,   395,   839,  1026,   840,   396,   397,     0,
     841,   842,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   405,   406,   407,   843,   408,     0,   409,     0,
     410,   411,   412,   413,   414,   415,   416,   844,   845,   419,
     846,   420,     0,   421,   422,   423,     0,   424,     0,   425,
     426,   427,   428,   429,     0,   847,   431,   432,     0,     0,
     433,     0,     0,     0,   434,   435,     0,   436,   437,     0,
       0,   438,   439,   440,   441,   442,     0,   443,   444,     0,
     445,   446,   447,   848,   849,   448,   449,   450,   451,   452,
     453,   454,   455,     0,   456,     0,   457,   458,     0,   459,
     460,   461,     0,   850,     0,   851,   463,   464,   465,   466,
       0,   467,   852,   853,   469,   470,   471,   472,     0,   854,
     474,     0,     0,     0,   475,   476,   477,   478,     0,     0,
       0,   479,     0,     0,     0,   480,     0,   481,   482,   483,
     484,     0,   485,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,   492,     0,   493,     0,     0,   494,
       0,     0,   495,     0,   496,     0,   497,   498,   499,   500,
     501,   502,   855,   856,   503,   504,     0,     0,   505,   506,
     857,   508,   509,   510,   858,   859,   511,   512,   513,   514,
     860,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     861,   521,   522,     0,   862,   863,   864,   865,     0,     0,
       0,     0,     0,   527,   528,     0,   866,   867,   868,   530,
     531,   532,   869,   533,   534,   870,   535,   536,     0,   537,
     538,     0,     0,   539,     0,     0,   540,     0,   541,     0,
     871,   543,     0,     0,   872,   873,   874,   544,   875,   545,
       0,     0,   546,   876,     0,   877,   547,     0,   548,   549,
     878,   879,     0,     0,     0,     0,     0,     0,   552,   553,
     554,     0,   555,   556,   557,   558,     0,     0,   880,     0,
       0,     0,   560,     0,   561,   562,     0,   563,     0,     0,
       0,     0,     0,   881,   882,     0,   564,   565,   566,   883,
       0,   567,   568,   569,   570,   884,   885,   571,   886,   572,
       0,   887,   888,   889,   890,   891,   573,   574,     0,   892,
     575,   893,   576,   894,   577,   578,     0,     0,     0,   579,
     580,   581,   582,   583,   584,   585,   586,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,     0,     0,   895,
     896,  2548,     0,     0,     0,   897,     0,   898,     0,     0,
       0,   899,     0,     0,     0,   900,   901,   191,   192,     0,
     786,   194,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,     0,     0,   787,     0,   201,   202,   203,
     204,   788,   206,     0,   207,     0,     0,   789,   208,   790,
     791,   792,   209,   793,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,   794,   795,   217,   218,
       0,   219,   220,   796,   797,   222,     0,   223,   224,   225,
     226,   798,   228,     0,   799,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,   800,   801,
     249,     0,     0,     0,   802,   250,   803,     0,   251,   804,
     805,     0,   252,   253,   254,   806,   807,   808,     0,     0,
       0,     0,   809,   257,   810,     0,     0,   811,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   812,     0,   284,   285,   286,   287,   288,
     813,   814,   289,   290,     0,   291,   292,   293,   294,   295,
     815,     0,   296,   297,     0,     0,     0,   816,   299,  2604,
     300,     0,     0,     0,   301,     0,   302,   817,   304,   818,
       0,   306,     0,   307,     0,   819,     0,   308,   309,     0,
     310,   820,     0,   311,   312,     0,     0,     0,   821,   314,
     315,   316,   822,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   823,   321,   322,   323,   824,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,   825,   334,   335,     0,     0,     0,     0,
       0,   826,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,   827,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   828,   364,   365,   366,   367,   829,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   830,   375,     0,
       0,   831,   377,   832,   378,     0,   379,   833,   834,   835,
     836,   837,   384,   385,   386,   387,   388,     0,   838,   389,
     390,     0,     0,   391,   392,   393,   394,   395,   839,  1026,
     840,   396,   397,     0,   841,   842,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,   843,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   844,   845,   419,   846,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   847,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,   848,   849,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   850,     0,   851,
     463,   464,   465,   466,     0,   467,   852,   853,   469,   470,
     471,   472,     0,   854,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,   855,   856,   503,   504,
       0,     0,   505,   506,   857,   508,   509,   510,   858,   859,
     511,   512,   513,   514,   860,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   861,   521,   522,     0,   862,   863,
     864,   865,     0,     0,     0,     0,     0,   527,   528,     0,
     866,   867,   868,   530,   531,   532,   869,   533,   534,   870,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   871,   543,     0,     0,   872,   873,
     874,   544,   875,   545,     0,     0,   546,   876,     0,   877,
     547,     0,   548,   549,   878,   879,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   880,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,   881,   882,     0,
     564,   565,   566,   883,     0,   567,   568,   569,   570,   884,
     885,   571,   886,   572,     0,   887,   888,   889,   890,   891,
     573,   574,     0,   892,   575,   893,   576,   894,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,     0,     0,   895,   896,     0,     0,     0,     0,   897,
       0,   898,     0,     0,     0,   899,     0,     0,     0,   900,
     901,   191,   192,     0,   786,   194,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,     0,     0,   787,
       0,   201,   202,   203,   204,   788,   206,     0,   207,     0,
       0,   789,   208,   790,   791,   792,   209,   793,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
     794,   795,   217,   218,     0,   219,   220,   796,   797,   222,
       0,   223,   224,   225,   226,   798,   228,     0,   799,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,     0,   800,   801,   249,     0,     0,     0,   802,   250,
     803,     0,   251,   804,   805,     0,   252,   253,   254,   806,
     807,   808,     0,     0,     0,     0,   809,   257,   810,     0,
       0,   811,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   812,     0,   284,
     285,   286,   287,   288,   813,   814,   289,   290,     0,   291,
     292,   293,   294,   295,   815,     0,   296,   297,     0,     0,
       0,   816,   299,  2606,   300,     0,     0,     0,   301,     0,
     302,   817,   304,   818,     0,   306,     0,   307,     0,   819,
       0,   308,   309,     0,   310,   820,     0,   311,   312,     0,
       0,     0,   821,   314,   315,   316,   822,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   823,   321,   322,
     323,   824,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,     0,   333,     0,   825,   334,   335,
       0,     0,     0,     0,     0,   826,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,   827,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,   828,   364,   365,   366,   367,
     829,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   830,   375,     0,     0,   831,   377,   832,   378,     0,
     379,   833,   834,   835,   836,   837,   384,   385,   386,   387,
     388,     0,   838,   389,   390,     0,     0,   391,   392,   393,
     394,   395,   839,  1026,   840,   396,   397,     0,   841,   842,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,   843,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   844,   845,   419,   846,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   847,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,   848,   849,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   850,     0,   851,   463,   464,   465,   466,     0,   467,
     852,   853,   469,   470,   471,   472,     0,   854,   474,     0,
       0,     0,   475,   476,   477,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
     855,   856,   503,   504,     0,     0,   505,   506,   857,   508,
     509,   510,   858,   859,   511,   512,   513,   514,   860,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   861,   521,
     522,     0,   862,   863,   864,   865,     0,     0,     0,     0,
       0,   527,   528,     0,   866,   867,   868,   530,   531,   532,
     869,   533,   534,   870,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   871,   543,
       0,     0,   872,   873,   874,   544,   875,   545,     0,     0,
     546,   876,     0,   877,   547,     0,   548,   549,   878,   879,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   880,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,   881,   882,     0,   564,   565,   566,   883,     0,   567,
     568,   569,   570,   884,   885,   571,   886,   572,     0,   887,
     888,   889,   890,   891,   573,   574,     0,   892,   575,   893,
     576,   894,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,     0,     0,   895,   896,     0,
       0,     0,     0,   897,     0,   898,     0,     0,     0,   899,
       0,     0,     0,   900,   901,   191,   192,     0,   786,   194,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,   787,     0,   201,   202,   203,   204,   788,
     206,     0,   207,     0,     0,   789,   208,   790,   791,   792,
     209,   793,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,   794,   795,   217,   218,     0,   219,
     220,   796,   797,   222,     0,   223,   224,   225,   226,   798,
     228,     0,   799,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,   800,   801,   249,     0,
       0,     0,   802,   250,   803,     0,   251,   804,   805,     0,
     252,   253,   254,   806,   807,   808,     0,     0,     0,     0,
     809,   257,   810,     0,     0,   811,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   812,     0,   284,   285,   286,   287,   288,   813,   814,
     289,   290,     0,   291,   292,   293,   294,   295,   815,     0,
     296,   297,     0,     0,     0,   816,   299,  2608,   300,     0,
       0,     0,   301,     0,   302,   817,   304,   818,     0,   306,
       0,   307,     0,   819,     0,   308,   309,     0,   310,   820,
       0,   311,   312,     0,     0,     0,   821,   314,   315,   316,
     822,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   823,   321,   322,   323,   824,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,   825,   334,   335,     0,     0,     0,     0,     0,   826,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
     827,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,   828,
     364,   365,   366,   367,   829,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   830,   375,     0,     0,   831,
     377,   832,   378,     0,   379,   833,   834,   835,   836,   837,
     384,   385,   386,   387,   388,     0,   838,   389,   390,     0,
       0,   391,   392,   393,   394,   395,   839,  1026,   840,   396,
     397,     0,   841,   842,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,   843,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   844,
     845,   419,   846,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   847,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,   848,   849,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   850,     0,   851,   463,   464,
     465,   466,     0,   467,   852,   853,   469,   470,   471,   472,
       0,   854,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,   855,   856,   503,   504,     0,     0,
     505,   506,   857,   508,   509,   510,   858,   859,   511,   512,
     513,   514,   860,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   861,   521,   522,     0,   862,   863,   864,   865,
       0,     0,     0,     0,     0,   527,   528,     0,   866,   867,
     868,   530,   531,   532,   869,   533,   534,   870,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   871,   543,     0,     0,   872,   873,   874,   544,
     875,   545,     0,     0,   546,   876,     0,   877,   547,     0,
     548,   549,   878,   879,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     880,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,   881,   882,     0,   564,   565,
     566,   883,     0,   567,   568,   569,   570,   884,   885,   571,
     886,   572,     0,   887,   888,   889,   890,   891,   573,   574,
       0,   892,   575,   893,   576,   894,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,     0,
       0,   895,   896,     0,     0,     0,     0,   897,     0,   898,
       0,     0,     0,   899,     0,     0,     0,   900,   901,   191,
     192,     0,   786,   194,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,     0,     0,   787,     0,   201,
     202,   203,   204,   788,   206,     0,   207,     0,     0,   789,
     208,   790,   791,   792,   209,   793,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,   794,   795,
     217,   218,     0,   219,   220,   796,   797,   222,     0,   223,
     224,   225,   226,   798,   228,     0,   799,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
     800,   801,   249,     0,     0,     0,   802,   250,   803,     0,
     251,   804,   805,     0,   252,   253,   254,   806,   807,   808,
       0,     0,     0,     0,   809,   257,   810,     0,     0,   811,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   812,     0,   284,   285,   286,
     287,   288,   813,   814,   289,   290,     0,   291,   292,   293,
     294,   295,   815,     0,   296,   297,     0,     0,     0,   816,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   817,
     304,   818,     0,   306,     0,   307,     0,   819,     0,   308,
     309,     0,   310,   820,     0,   311,   312,     0,     0,     0,
     821,   314,   315,   316,   822,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   823,   321,   322,   323,   824,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,   825,   334,   335,     0,     0,
       0,     0,     0,   826,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,   827,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,   828,   364,   365,   366,   367,   829,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   830,
     375,     0,     0,   831,   377,   832,   378,     0,   379,   833,
     834,   835,   836,   837,   384,   385,   386,   387,   388,     0,
     838,   389,   390,     0,     0,   391,   392,   393,   394,   395,
     839,  1026,   840,   396,   397,     0,   841,   842,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   405,   406,
     407,   843,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   844,   845,   419,   846,   420,     0,   421,
     422,   423,     0,   424,     0,   425,   426,   427,   428,   429,
       0,   847,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   443,   444,     0,   445,   446,   447,   848,
     849,   448,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   850,
       0,   851,   463,   464,   465,   466,     0,   467,   852,   853,
     469,   470,   471,   472,     0,   854,   474,     0,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
       0,   480,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,   855,   856,
     503,   504,     0,     0,   505,   506,   857,   508,   509,   510,
     858,   859,   511,   512,   513,   514,   860,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   861,   521,   522,     0,
     862,   863,   864,   865,     0,     0,     0,     0,     0,   527,
     528,     0,   866,   867,   868,   530,   531,   532,   869,   533,
     534,   870,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,     0,   541,     0,   871,   543,     0,     0,
     872,   873,   874,   544,   875,   545,     0,     0,   546,   876,
       0,   877,   547,     0,   548,   549,   878,   879,     0,     0,
       0,     0,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   880,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,   881,
     882,     0,   564,   565,   566,   883,     0,   567,   568,   569,
     570,   884,   885,   571,   886,   572,     0,   887,   888,   889,
     890,   891,   573,   574,     0,   892,   575,   893,   576,   894,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,   586,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,     0,     0,   895,   896,     0,     0,     0,
       0,   897,     0,   898,     0,     0,     0,   899,     0,     0,
       0,   900,   901,   191,   192,     0,   786,   194,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,     0,
       0,   787,     0,   201,   202,   203,   204,   788,   206,     0,
     207,     0,     0,   789,   208,   790,   791,   792,   209,   793,
       0,   210,   211,   212,     0,   213,     0,   214,   215,     0,
       0,   216,   794,   795,   217,   218,     0,   219,   220,   796,
     797,   222,     0,   223,   224,   225,   226,   798,   228,     0,
     799,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,   243,     0,   244,   245,
     246,   247,   248,     0,   800,   801,   249,     0,     0,     0,
     802,   250,   803,     0,   251,   804,   805,     0,   252,   253,
     254,   806,   807,   808,     0,     0,     0,     0,   809,   257,
     810,     0,     0,   811,   258,   259,     0,   260,     0,     0,
       0,     0,     0,   261,   262,   263,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,   269,     0,     0,     0,
     270,     0,   271,   272,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   812,
       0,   284,   285,   286,   287,   288,   813,   814,   289,   290,
       0,   291,   292,   293,   294,   295,   815,     0,   296,   297,
       0,     0,     0,   816,   299,     0,   300,     0,     0,     0,
     301,     0,   302,   817,   304,   818,     0,   306,     0,   307,
       0,   819,     0,   308,   309,     0,   310,   820,     0,   311,
     312,     0,     0,     0,   821,   314,   315,   316,   822,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   823,
     321,   322,   323,   824,     0,     0,   324,     0,     0,     0,
     325,   326,     0,   327,   328,     0,     0,     0,   329,     0,
     330,     0,     0,   331,   332,     0,     0,   333,     0,   825,
     334,   335,     0,     0,     0,     0,     0,   826,   337,     0,
     338,     0,   339,     0,   340,   341,     0,     0,   827,     0,
       0,     0,     0,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,   828,   364,   365,
     366,   367,   829,   368,   369,     0,     0,     0,     0,   370,
     371,   372,   373,   830,   375,     0,     0,   831,   377,   832,
     378,     0,   379,   833,   834,   835,   836,   837,   384,   385,
     386,   387,   388,     0,   838,   389,   390,     0,     0,   391,
     392,   393,   394,   395,   839,  1026,   840,   396,   397,     0,
     841,   842,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   405,   406,   407,   843,   408,     0,   409,     0,
     410,   411,   412,   413,   414,   415,   416,   844,   845,   419,
     846,   420,     0,   421,   422,   423,     0,   424,     0,   425,
     426,   427,   428,   429,     0,   847,   431,   432,     0,     0,
     433,     0,     0,     0,   434,   435,     0,   436,   437,     0,
       0,   438,   439,   440,   441,   442,     0,   443,   444,     0,
     445,   446,   447,   848,   849,   448,   449,   450,   451,   452,
     453,   454,   455,     0,   456,     0,   457,   458,     0,   459,
     460,   461,     0,   850,     0,   851,   463,   464,   465,   466,
       0,   467,   852,   853,   469,   470,   471,   472,     0,   854,
     474,     0,     0,     0,   475,   476,   477,   478,     0,     0,
       0,   479,     0,     0,     0,   480,     0,   481,   482,   483,
     484,     0,   485,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,   492,     0,   493,     0,     0,   494,
       0,     0,   495,     0,   496,     0,   497,   498,   499,   500,
     501,   502,   855,   856,   503,   504,     0,     0,   505,   506,
     857,   508,   509,   510,   858,   859,   511,   512,   513,   514,
     860,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     861,   521,   522,     0,   862,   863,   864,   865,     0,     0,
       0,     0,     0,   527,   528,     0,   866,   867,   868,   530,
     531,   532,   869,   533,   534,   870,   535,   536,     0,   537,
     538,     0,     0,   539,     0,     0,   540,     0,   541,     0,
     871,   543,     0,     0,   872,   873,   874,   544,   875,   545,
       0,     0,   546,   876,     0,   877,   547,     0,   548,   549,
     878,   879,     0,     0,     0,     0,     0,     0,   552,   553,
     554,     0,   555,   556,   557,   558,     0,     0,   880,     0,
       0,     0,   560,     0,   561,   562,     0,   563,     0,     0,
       0,     0,     0,   881,   882,     0,   564,   565,   566,   883,
       0,   567,   568,   569,   570,   884,   885,   571,   886,   572,
       0,   887,   888,   889,   890,   891,   573,   574,     0,   892,
     575,   893,   576,   894,   577,   578,     0,     0,     0,   579,
     580,   581,   582,   583,   584,   585,   586,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,     0,     0,   895,
     896,     0,     0,     0,     0,   897,     0,  1276,     0,     0,
       0,   899,     0,     0,     0,   900,   901,   191,   192,     0,
     786,   194,   195,   196,   197,  2314,     0,   198,     0,     0,
       0,     0,  2315,     0,     0,   787,     0,   201,   202,   203,
     204,   788,   206,     0,   207,     0,     0,   789,   208,   790,
     791,   792,   209,   793,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,   794,   795,   217,   218,
       0,   219,   220,   796,   797,   222,     0,   223,   224,   225,
     226,   798,   228,     0,   799,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,   800,   801,
     249,     0,     0,     0,   802,   250,   803,     0,   251,   804,
     805,     0,   252,   253,   254,   806,   807,   808,     0,     0,
       0,     0,   809,   257,   810,     0,     0,   811,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   812,     0,   284,   285,   286,   287,   288,
     813,   814,   289,   290,     0,   291,   292,   293,   294,   295,
     815,     0,   296,   297,     0,     0,     0,   816,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   817,   304,   818,
       0,   306,     0,   307,     0,   819,     0,   308,   309,     0,
     310,   820,     0,   311,   312,     0,     0,     0,   821,   314,
     315,   316,   822,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   823,   321,   322,   323,   824,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,   825,   334,   335,     0,     0,     0,     0,
       0,   826,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,   827,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   828,   364,   365,   366,   367,   829,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   830,   375,     0,
       0,   831,   377,   832,   378,     0,   379,   833,   834,   835,
     836,   837,   384,   385,   386,   387,   388,     0,   838,   389,
     390,     0,     0,   391,   392,   393,   394,   395,   839,     0,
     840,   396,   397,     0,   841,   842,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,   843,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   844,   845,   419,   846,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   847,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,   848,   849,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   850,     0,   851,
     463,   464,   465,   466,     0,   467,   852,   853,   469,   470,
     471,   472,     0,   854,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,   855,   856,   503,   504,
       0,     0,   505,   506,   857,   508,   509,   510,   858,   859,
     511,   512,   513,   514,   860,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   861,   521,   522,     0,   862,   863,
     864,   865,     0,     0,     0,     0,     0,   527,   528,     0,
     866,   867,   868,   530,   531,   532,   869,   533,   534,   870,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   871,   543,     0,     0,   872,   873,
     874,   544,   875,   545,     0,     0,   546,   876,     0,   877,
     547,     0,   548,   549,   878,   879,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   880,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,   881,   882,     0,
     564,   565,   566,   883,     0,   567,   568,   569,   570,   884,
     885,   571,   886,   572,     0,   887,   888,   889,   890,   891,
     573,   574,     0,   892,   575,   893,   576,   894,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,     0,     0,   895,   896,     0,     0,     0,     0,   897,
       0,   898,     0,     0,     0,   899,     0,     0,     0,   900,
     901,   191,   192,     0,   786,   194,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,     0,     0,   787,
       0,   201,   202,   203,   204,   788,   206,     0,   207,     0,
       0,   789,   208,   790,   791,   792,   209,   793,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
     794,   795,   217,   218,     0,   219,   220,   796,   797,   222,
       0,   223,   224,   225,   226,   798,   228,     0,   799,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,     0,   800,   801,   249,     0,     0,     0,   802,   250,
     803,     0,   251,   804,   805,     0,   252,   253,   254,   806,
     807,   808,     0,     0,     0,     0,   809,   257,   810,     0,
       0,   811,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   812,     0,   284,
     285,   286,   287,   288,   813,   814,   289,   290,     0,   291,
     292,   293,   294,   295,   815,     0,   296,   297,     0,     0,
       0,   816,   299,     0,   300,     0,     0,     0,   301,     0,
     302,   817,   304,   818,     0,   306,     0,   307,     0,   819,
       0,   308,   309,     0,   310,   820,     0,   311,   312,     0,
       0,     0,   821,   314,   315,   316,   822,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   823,   321,   322,
     323,  3118,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,     0,   333,     0,   825,   334,   335,
       0,     0,     0,     0,     0,   826,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,   827,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,   828,   364,   365,   366,   367,
     829,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   830,   375,     0,     0,   831,   377,   832,   378,     0,
     379,   833,   834,   835,   836,   837,   384,   385,   386,   387,
     388,     0,   838,   389,   390,     0,     0,   391,   392,   393,
     394,   395,   839,  1026,   840,   396,   397,     0,   841,   842,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,   843,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   844,   845,   419,   846,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   847,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,   848,   849,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   850,     0,   851,   463,   464,   465,   466,     0,   467,
     852,   853,   469,   470,   471,   472,     0,   854,   474,     0,
       0,     0,   475,   476,   477,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
     855,   856,   503,   504,     0,     0,   505,   506,   857,   508,
     509,   510,   858,   859,   511,   512,   513,   514,   860,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   861,   521,
     522,     0,   862,   863,   864,   865,     0,     0,     0,     0,
       0,   527,   528,     0,   866,   867,   868,   530,   531,   532,
     869,   533,   534,   870,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   871,   543,
       0,     0,   872,   873,   874,   544,   875,   545,     0,     0,
     546,   876,     0,   877,   547,     0,   548,   549,   878,   879,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   880,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,   881,   882,     0,   564,   565,   566,   883,     0,   567,
     568,   569,   570,   884,   885,   571,   886,   572,     0,   887,
     888,   889,   890,   891,   573,   574,     0,   892,   575,   893,
     576,   894,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,     0,     0,   895,   896,     0,
       0,     0,     0,   897,     0,   898,     0,     0,     0,   899,
       0,     0,     0,   900,   901,   191,   192,     0,   786,   194,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,   787,     0,   201,   202,   203,   204,   788,
     206,     0,   207,     0,     0,   789,   208,   790,   791,   792,
     209,   793,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,   794,   795,   217,   218,     0,   219,
     220,   796,   797,   222,     0,   223,   224,   225,   226,   798,
     228,     0,   799,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,   800,   801,   249,     0,
       0,     0,   802,   250,   803,     0,   251,   804,   805,     0,
     252,   253,   254,   806,   807,   808,     0,     0,     0,     0,
     809,   257,   810,     0,     0,   811,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   812,     0,   284,   285,   286,   287,   288,   813,   814,
     289,   290,     0,   291,   292,   293,   294,   295,   815,     0,
     296,   297,     0,     0,     0,   816,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   817,   304,   818,     0,   306,
       0,   307,     0,   819,     0,   308,   309,     0,   310,   820,
       0,   311,   312,     0,     0,     0,   821,   314,   315,   316,
     822,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   823,   321,   322,   323,  3175,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,   825,   334,   335,     0,     0,     0,     0,     0,   826,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
     827,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,   828,
     364,   365,   366,   367,   829,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   830,   375,     0,     0,   831,
     377,   832,   378,     0,   379,   833,   834,   835,   836,   837,
     384,   385,   386,   387,   388,     0,   838,   389,   390,     0,
       0,   391,   392,   393,   394,   395,   839,  1026,   840,   396,
     397,     0,   841,   842,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,   843,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   844,
     845,   419,   846,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   847,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,   848,   849,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   850,     0,   851,   463,   464,
     465,   466,     0,   467,   852,   853,   469,   470,   471,   472,
       0,   854,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,   855,   856,   503,   504,     0,     0,
     505,   506,   857,   508,   509,   510,   858,   859,   511,   512,
     513,   514,   860,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   861,   521,   522,     0,   862,   863,   864,   865,
       0,     0,     0,     0,     0,   527,   528,     0,   866,   867,
     868,   530,   531,   532,   869,   533,   534,   870,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   871,   543,     0,     0,   872,   873,   874,   544,
     875,   545,     0,     0,   546,   876,     0,   877,   547,     0,
     548,   549,   878,   879,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     880,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,   881,   882,     0,   564,   565,
     566,   883,     0,   567,   568,   569,   570,   884,   885,   571,
     886,   572,     0,   887,   888,   889,   890,   891,   573,   574,
       0,   892,   575,   893,   576,   894,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,     0,
       0,   895,   896,     0,     0,     0,     0,   897,     0,   898,
       0,     0,     0,   899,     0,     0,     0,   900,   901,   191,
     192,     0,   786,   194,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,     0,     0,   787,     0,   201,
     202,   203,   204,   788,   206,     0,   207,     0,     0,   789,
     208,   790,   791,   792,   209,   793,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,   794,   795,
     217,   218,     0,   219,   220,   796,   797,   222,     0,   223,
     224,   225,   226,   798,   228,     0,   799,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
     800,   801,   249,     0,     0,     0,   802,   250,   803,     0,
     251,   804,   805,     0,   252,   253,   254,   806,   807,   808,
       0,     0,     0,     0,   809,   257,   810,     0,     0,  3538,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   812,     0,   284,   285,   286,
     287,   288,   813,   814,   289,   290,     0,   291,   292,   293,
     294,   295,   815,     0,   296,   297,     0,     0,     0,   816,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   817,
     304,   818,     0,   306,     0,   307,     0,   819,     0,   308,
     309,     0,   310,   820,     0,   311,   312,     0,     0,     0,
     821,   314,   315,   316,   822,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   823,   321,   322,   323,   824,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,   825,   334,   335,     0,     0,
       0,     0,     0,   826,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,   827,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,   828,   364,   365,   366,   367,   829,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   830,
     375,     0,     0,   831,   377,   832,   378,     0,   379,   833,
     834,   835,   836,   837,   384,   385,   386,   387,   388,     0,
     838,   389,   390,     0,     0,   391,   392,   393,   394,   395,
     839,  1026,   840,   396,   397,     0,   841,   842,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   405,   406,
     407,   843,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   844,   845,   419,   846,   420,     0,   421,
     422,   423,     0,   424,     0,   425,   426,   427,   428,   429,
       0,   847,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   443,   444,     0,   445,   446,   447,   848,
     849,   448,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   850,
       0,   851,   463,   464,   465,   466,     0,   467,   852,   853,
     469,   470,   471,   472,     0,   854,   474,     0,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
       0,   480,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,   855,   856,
     503,   504,     0,     0,   505,   506,   857,   508,   509,   510,
     858,   859,   511,   512,   513,   514,   860,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   861,   521,   522,     0,
     862,   863,   864,   865,     0,     0,     0,     0,     0,   527,
     528,     0,   866,   867,   868,   530,   531,   532,   869,   533,
     534,   870,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,     0,   541,     0,   871,   543,     0,     0,
     872,   873,   874,   544,   875,   545,     0,     0,   546,   876,
       0,   877,   547,     0,   548,   549,   878,   879,     0,     0,
       0,     0,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   880,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,   881,
     882,     0,   564,   565,   566,   883,     0,   567,   568,   569,
     570,   884,   885,   571,   886,   572,     0,   887,   888,   889,
     890,   891,   573,   574,     0,   892,   575,   893,   576,   894,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,   586,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,     0,     0,   895,   896,     0,     0,     0,
       0,   897,     0,   898,     0,     0,     0,   899,     0,     0,
       0,   900,   901,   191,   192,     0,   786,   194,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,     0,
       0,   787,     0,   201,   202,   203,   204,   788,   206,     0,
     207,     0,     0,   789,   208,   790,   791,   792,   209,   793,
       0,   210,   211,   212,     0,   213,     0,   214,   215,     0,
       0,   216,   794,   795,   217,   218,     0,   219,   220,   796,
     797,   222,     0,   223,   224,   225,   226,   798,   228,     0,
     799,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,   243,     0,   244,   245,
     246,   247,   248,     0,   800,   801,   249,     0,     0,     0,
     802,   250,   803,     0,   251,   804,   805,     0,   252,   253,
     254,   806,   807,   808,     0,     0,     0,     0,   809,   257,
     810,     0,     0,   811,   258,   259,     0,   260,     0,     0,
       0,     0,     0,   261,   262,   263,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,   269,     0,     0,     0,
     270,     0,   271,   272,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   812,
       0,   284,   285,   286,   287,   288,   813,   814,   289,   290,
       0,   291,   292,   293,   294,   295,   815,     0,   296,   297,
       0,     0,     0,   816,   299,     0,   300,     0,     0,     0,
     301,     0,   302,   817,   304,   818,     0,   306,     0,   307,
       0,   819,     0,   308,   309,     0,   310,   820,     0,   311,
     312,     0,     0,     0,   821,   314,   315,   316,   822,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   823,
     321,   322,   323,   824,     0,     0,   324,     0,     0,     0,
     325,   326,     0,   327,   328,     0,     0,     0,   329,     0,
     330,     0,     0,   331,   332,     0,     0,   333,     0,   825,
     334,   335,     0,     0,     0,     0,     0,   826,   337,     0,
     338,     0,   339,     0,   340,   341,     0,     0,   827,     0,
       0,     0,     0,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,   828,   364,   365,
     366,   367,   829,   368,   369,  4674,     0,     0,     0,   370,
     371,   372,   373,   830,   375,     0,     0,   831,   377,   832,
     378,     0,   379,   833,   834,   835,   836,   837,   384,   385,
     386,   387,   388,     0,   838,   389,   390,     0,     0,   391,
     392,   393,   394,   395,   839,     0,   840,   396,   397,     0,
     841,   842,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   405,   406,   407,   843,   408,     0,   409,     0,
     410,   411,   412,   413,   414,   415,   416,   844,   845,   419,
     846,   420,     0,   421,   422,   423,     0,   424,     0,   425,
     426,   427,   428,   429,     0,   847,   431,   432,     0,     0,
     433,     0,     0,     0,   434,   435,     0,   436,   437,     0,
       0,   438,   439,   440,   441,   442,     0,   443,   444,     0,
     445,   446,   447,   848,   849,   448,   449,   450,   451,   452,
     453,   454,   455,     0,   456,     0,   457,   458,     0,   459,
     460,   461,     0,   850,     0,   851,   463,   464,   465,   466,
       0,   467,   852,   853,   469,   470,   471,   472,     0,   854,
     474,     0,     0,     0,   475,   476,   477,   478,     0,     0,
       0,   479,     0,     0,     0,   480,     0,   481,   482,   483,
     484,     0,   485,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,   492,     0,   493,     0,     0,   494,
       0,     0,   495,     0,   496,     0,   497,   498,   499,   500,
     501,   502,   855,   856,   503,   504,     0,     0,   505,   506,
     857,   508,   509,   510,   858,   859,   511,   512,   513,   514,
     860,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     861,   521,   522,     0,   862,   863,   864,   865,     0,     0,
       0,     0,     0,   527,   528,     0,   866,   867,   868,   530,
     531,   532,   869,   533,   534,   870,   535,   536,     0,   537,
     538,     0,     0,   539,     0,     0,   540,     0,   541,     0,
     871,   543,     0,     0,   872,   873,   874,   544,   875,   545,
       0,     0,   546,   876,     0,   877,   547,     0,   548,   549,
     878,   879,     0,     0,     0,     0,     0,     0,   552,   553,
     554,     0,   555,   556,   557,   558,     0,     0,   880,     0,
       0,     0,   560,     0,   561,   562,     0,   563,     0,     0,
       0,     0,     0,   881,   882,     0,   564,   565,   566,   883,
       0,   567,   568,   569,   570,   884,   885,   571,   886,   572,
       0,   887,   888,   889,   890,   891,   573,   574,     0,   892,
     575,   893,   576,   894,   577,   578,     0,     0,     0,   579,
     580,   581,   582,   583,   584,   585,   586,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,     0,     0,   895,
     896,     0,     0,     0,     0,   897,     0,   898,     0,     0,
       0,   899,     0,     0,     0,   900,   901,   191,   192,     0,
     786,   194,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,     0,     0,   787,     0,   201,   202,   203,
     204,   788,   206,     0,   207,     0,     0,   789,   208,   790,
     791,   792,   209,   793,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,   794,   795,   217,   218,
       0,   219,   220,   796,   797,   222,     0,   223,   224,   225,
     226,   798,   228,     0,   799,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,   800,   801,
     249,     0,     0,     0,   802,   250,   803,     0,   251,   804,
     805,     0,   252,   253,   254,   806,   807,   808,     0,     0,
       0,     0,   809,   257,   810,     0,     0,   811,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   812,     0,   284,   285,   286,   287,   288,
     813,   814,   289,   290,     0,   291,   292,   293,   294,   295,
     815,     0,   296,   297,     0,     0,     0,   816,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   817,   304,   818,
       0,   306,     0,   307,     0,   819,     0,   308,   309,     0,
     310,   820,     0,   311,   312,     0,     0,     0,   821,   314,
     315,   316,   822,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   823,   321,   322,   323,   824,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,   825,   334,   335,     0,     0,     0,     0,
       0,   826,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,   827,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   828,   364,   365,   366,   367,   829,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   830,   375,     0,
       0,   831,   377,   832,   378,     0,   379,   833,   834,   835,
     836,   837,   384,   385,   386,   387,   388,     0,   838,   389,
     390,     0,     0,   391,   392,   393,   394,   395,   839,     0,
     840,   396,   397,     0,   841,   842,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,   843,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   844,   845,   419,   846,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   847,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,   848,   849,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   850,     0,   851,
     463,   464,   465,   466,     0,   467,   852,   853,   469,   470,
     471,   472,     0,   854,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,   855,   856,   503,   504,
       0,     0,   505,   506,   857,   508,   509,   510,   858,   859,
     511,   512,   513,   514,   860,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   861,   521,   522,     0,   862,   863,
     864,   865,     0,     0,     0,     0,     0,   527,   528,     0,
     866,   867,   868,   530,   531,   532,   869,   533,   534,   870,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   871,   543,     0,     0,   872,   873,
     874,   544,   875,   545,     0,     0,   546,   876,     0,   877,
     547,     0,   548,   549,   878,   879,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   880,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,   881,   882,     0,
     564,   565,   566,   883,     0,   567,   568,   569,   570,   884,
     885,   571,   886,   572,     0,   887,   888,   889,   890,   891,
     573,   574,     0,   892,   575,   893,   576,   894,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,     0,     0,   895,   896,     0,     0,     0,     0,   897,
       0,   898,     0,     0,     0,   899,     0,     0,     0,   900,
     901,   191,   192,     0,   786,   194,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,     0,     0,   787,
       0,   201,   202,   203,   204,   788,   206,     0,   207,     0,
       0,   789,   208,   790,   791,   792,   209,   793,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
     794,   795,   217,   218,     0,   219,   220,   796,   797,   222,
       0,   223,   224,   225,   226,   798,   228,     0,   799,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,     0,   800,   801,   249,     0,     0,     0,   802,   250,
     803,     0,   251,   804,   805,     0,   252,   253,   254,   806,
     807,   808,     0,     0,     0,     0,   809,   257,   810,     0,
       0,   811,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   812,     0,   284,
     285,   286,   287,   288,   813,   814,   289,   290,     0,   291,
     292,   293,   294,   295,   815,     0,   296,   297,     0,     0,
       0,   816,   299,     0,   300,     0,     0,     0,   301,     0,
     302,   817,   304,   818,     0,   306,     0,   307,     0,   819,
       0,   308,   309,     0,   310,   820,     0,   311,   312,     0,
       0,     0,   821,   314,   315,   316,   822,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   823,   321,   322,
     323,  2040,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,     0,   333,     0,   825,   334,   335,
       0,     0,     0,     0,     0,   826,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,   827,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,   828,   364,   365,   366,   367,
     829,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   830,   375,     0,     0,   831,   377,   832,   378,     0,
     379,   833,   834,   835,   836,   837,   384,   385,   386,   387,
     388,     0,   838,   389,   390,     0,     0,   391,   392,   393,
     394,   395,   839,     0,   840,   396,   397,     0,   841,   842,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,   843,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   844,   845,   419,   846,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   847,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,   848,   849,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   850,     0,   851,   463,   464,   465,   466,     0,   467,
     852,   853,   469,   470,   471,   472,     0,   854,   474,     0,
       0,     0,   475,   476,   477,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
     855,   856,   503,   504,     0,     0,   505,   506,   857,   508,
     509,   510,   858,   859,   511,   512,   513,   514,   860,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   861,   521,
     522,     0,   862,   863,   864,   865,     0,     0,     0,     0,
       0,   527,   528,     0,   866,   867,   868,   530,   531,   532,
     869,   533,   534,   870,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   871,   543,
       0,     0,   872,   873,   874,   544,   875,   545,     0,     0,
     546,   876,     0,   877,   547,     0,   548,   549,   878,   879,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   880,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,   881,   882,     0,   564,   565,   566,   883,     0,   567,
     568,   569,   570,   884,   885,   571,   886,   572,     0,   887,
     888,   889,   890,   891,   573,   574,     0,   892,   575,   893,
     576,   894,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,     0,     0,   895,   896,     0,
       0,     0,     0,   897,     0,   898,     0,     0,     0,   899,
       0,     0,     0,   900,   901,   191,   192,     0,   786,   194,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,   787,     0,   201,   202,   203,   204,   788,
     206,     0,   207,     0,     0,   789,   208,   790,   791,   792,
     209,   793,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,   794,   795,   217,   218,     0,   219,
     220,   796,   797,   222,     0,   223,   224,   225,   226,   798,
     228,     0,   799,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,   800,   801,   249,     0,
       0,     0,   802,   250,   803,     0,   251,   804,   805,     0,
     252,   253,   254,   806,   807,   808,     0,     0,     0,     0,
     809,   257,   810,     0,     0,   811,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   812,     0,   284,   285,   286,   287,   288,   813,   814,
     289,   290,     0,   291,   292,   293,   294,   295,   815,     0,
     296,   297,     0,     0,     0,   816,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   817,   304,   818,     0,   306,
       0,   307,     0,   819,     0,   308,   309,     0,   310,   820,
       0,   311,   312,     0,     0,     0,   821,   314,   315,   316,
     822,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   823,   321,   322,   323,  2042,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,   825,   334,   335,     0,     0,     0,     0,     0,   826,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
     827,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,   828,
     364,   365,   366,   367,   829,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   830,   375,     0,     0,   831,
     377,   832,   378,     0,   379,   833,   834,   835,   836,   837,
     384,   385,   386,   387,   388,     0,   838,   389,   390,     0,
       0,   391,   392,   393,   394,   395,   839,     0,   840,   396,
     397,     0,   841,   842,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,   843,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   844,
     845,   419,   846,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   847,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,   848,   849,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   850,     0,   851,   463,   464,
     465,   466,     0,   467,   852,   853,   469,   470,   471,   472,
       0,   854,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,   855,   856,   503,   504,     0,     0,
     505,   506,   857,   508,   509,   510,   858,   859,   511,   512,
     513,   514,   860,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   861,   521,   522,     0,   862,   863,   864,   865,
       0,     0,     0,     0,     0,   527,   528,     0,   866,   867,
     868,   530,   531,   532,   869,   533,   534,   870,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   871,   543,     0,     0,   872,   873,   874,   544,
     875,   545,     0,     0,   546,   876,     0,   877,   547,     0,
     548,   549,   878,   879,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     880,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,   881,   882,     0,   564,   565,
     566,   883,     0,   567,   568,   569,   570,   884,   885,   571,
     886,   572,     0,   887,   888,   889,   890,   891,   573,   574,
       0,   892,   575,   893,   576,   894,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,     0,
       0,   895,   896,     0,     0,     0,     0,   897,     0,   898,
       0,     0,     0,   899,     0,     0,     0,   900,   901,   191,
     192,     0,   193,   194,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,     0,     0,   200,     0,   201,
     202,   203,   204,   205,   206,     0,   207,     0,     0,     0,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,     0,     0,
     217,   218,     0,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
       0,     0,   249,     0,     0,     0,     0,   250,     0,     0,
     251,     0,     0,     0,   252,   253,   254,     0,     0,   255,
       0,     0,     0,     0,   256,   257,     0,     0,     0,     0,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   280,   281,   282,   283,     0,     0,   284,   285,   286,
     287,   288,     0,     0,   289,   290,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,     0,     0,   298,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   303,
     304,   305,     0,   306,     0,   307,     0,     0,     0,   308,
     309,     0,   310,     0,     0,   311,   312,     0,     0,     0,
     313,   314,   315,   316,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,     0,   321,   322,   323,     0,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,     0,   334,   335,     0,     0,
       0,     0,     0,   336,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,     0,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,     0,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   374,
     375,     0,     0,   376,   377,     0,   378,     0,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
       0,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,     0,   396,   397,     0,     0,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   405,   406,
     407,     0,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,     0,   420,     0,   421,
     422,   423,     0,   424,     0,   425,   426,   427,   428,   429,
       0,   430,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   443,   444,     0,   445,   446,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   462,
       0,     0,   463,   464,   465,   466,     0,   467,     0,   468,
     469,   470,   471,   472,     0,   473,   474,    42,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
       0,   480,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,     0,     0,
     503,   504,     0,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,   513,   514,     0,   515,   516,     0,
       0,   517,   518,   519,   520,     0,     0,   521,   522,     0,
     523,   524,   525,   526,     0,     0,     0,     0,     0,   527,
     528,     0,     0,     0,   529,   530,   531,   532,     0,   533,
     534,     0,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,     0,   541,     0,   542,   543,     0,     0,
       0,     0,     0,   544,     0,   545,     0,     0,   546,     0,
       0,     0,   547,     0,   548,   549,   550,   551,     0,     0,
       0,    53,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   559,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,   564,   565,   566,     0,     0,   567,   568,   569,
     570,     0,     0,   571,     0,   572,     0,     0,     0,     0,
       0,     0,   573,   574,     0,     0,   575,     0,   576,     0,
     577,   578,     0,     0,  2431,   579,   580,   581,   582,   583,
     584,   585,   586,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,     0,     0,   191,   192,     0,   193,   194,
     195,   196,   197,  2432,     0,   198,     0,     0,     0,     0,
     199,     0,  2433,   200,     0,   201,   202,   203,   204,   205,
     206,     0,   207,     0,     0,     0,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,     0,     0,   217,   218,     0,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,     0,     0,   249,     0,
       0,     0,     0,   250,     0,     0,   251,     0,     0,     0,
     252,   253,   254,     0,     0,   255,     0,     0,     0,     0,
     256,   257,     0,     0,     0,     0,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,  2430,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,     0,     0,   284,   285,   286,   287,   288,     0,     0,
     289,   290,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,     0,   298,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   303,   304,   305,     0,   306,
       0,   307,     0,     0,     0,   308,   309,     0,   310,     0,
       0,   311,   312,     0,     0,     0,   313,   314,   315,   316,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,     0,   321,   322,   323,     0,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,     0,   334,   335,     0,     0,     0,     0,     0,   336,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
       0,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,     0,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   374,   375,     0,     0,   376,
     377,     0,   378,     0,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,     0,   389,   390,     0,
       0,   391,   392,   393,   394,   395,     0,     0,     0,   396,
     397,     0,     0,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,     0,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,     0,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   430,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   462,     0,     0,   463,   464,
     465,   466,     0,   467,     0,   468,   469,   470,   471,   472,
       0,   473,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,     0,     0,   503,   504,     0,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
     513,   514,     0,   515,   516,     0,     0,   517,   518,   519,
     520,     0,     0,   521,   522,     0,   523,   524,   525,   526,
       0,     0,     0,     0,     0,   527,   528,     0,     0,     0,
     529,   530,   531,   532,     0,   533,   534,     0,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   542,   543,     0,     0,     0,     0,     0,   544,
       0,   545,     0,     0,   546,     0,     0,     0,   547,     0,
     548,   549,   550,   551,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     559,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,     0,     0,     0,   564,   565,
     566,     0,     0,   567,   568,   569,   570,     0,     0,   571,
       0,   572,     0,     0,     0,     0,     0,     0,   573,   574,
       0,     0,   575,     0,   576,     0,   577,   578,     0,     0,
    2431,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,     0,
       0,   191,   192,     0,   193,   194,   195,   196,   197,  2432,
       0,   198,     0,     0,     0,     0,   199,     0,  2433,   200,
       0,   201,   202,   203,   204,   205,   206,     0,   207,     0,
       0,     0,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
       0,     0,   217,   218,     0,   219,   220,   221,     0,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,     0,     0,     0,   249,     0,     0,     0,     0,   250,
       0,     0,   251,     0,     0,     0,   252,   253,   254,     0,
       0,   255,     0,     0,     0,     0,   256,   257,     0,     0,
       0,     0,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,     0,     0,   284,
     285,   286,   287,   288,     0,     0,   289,   290,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
       0,   298,   299,     0,   300,     0,     0,     0,   301,     0,
     302,   303,   304,   305,     0,   306,     0,   307,     0,     0,
       0,   308,   309,     0,   310,     0,     0,   311,   312,     0,
       0,     0,   313,   314,   315,   316,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,     0,   321,   322,
     323,     0,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,     0,   333,     0,     0,   334,   335,
       0,     0,     0,     0,     0,   336,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,     0,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
       0,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   374,   375,     0,     0,   376,   377,     0,   378,     0,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,     0,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,     0,   396,   397,     0,     0,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,     0,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,     0,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   430,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   462,     0,     0,   463,   464,   465,   466,     0,   467,
       0,   468,   469,   470,   471,   472,     0,   473,   474,     0,
       0,     0,   475,   476,   477,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
       0,     0,   503,   504,     0,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,   513,   514,     0,   515,
     516,     0,     0,   517,   518,   519,   520,     0,     0,   521,
     522,     0,   523,   524,   525,   526,     0,     0,     0,     0,
       0,   527,   528,     0,     0,     0,   529,   530,   531,   532,
       0,   533,   534,     0,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   542,   543,
       0,     0,     0,     0,     0,   544,     0,   545,     0,     0,
     546,     0,     0,     0,   547,     0,   548,   549,   550,   551,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   559,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,     0,     0,     0,   564,   565,   566,     0,     0,   567,
     568,   569,   570,     0,     0,   571,     0,   572,     0,     0,
       0,     0,     0,     0,   573,   574,     0,     0,   575,     0,
     576,     0,   577,   578,     0,     0,  2431,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,     0,     0,   191,   192,     0,
     193,   194,   195,   196,   197,  2432,     0,   198,     0,     0,
       0,     0,   199,     0,  2433,   200,     0,   201,   202,   203,
     204,   205,   206,     0,   207,     0,     0,     0,   208,   790,
       0,     0,   209,     0,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,     0,     0,   217,   218,
       0,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,     0,     0,
     249,     0,     0,     0,     0,   250,     0,     0,   251,     0,
       0,     0,   252,   253,   254,     0,     0,  2356,     0,     0,
       0,     0,   256,   257,   810,     0,     0,     0,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,     0,     0,   284,   285,   286,   287,   288,
       0,   814,   289,   290,     0,   291,   292,   293,   294,   295,
     815,     0,   296,   297,     0,     0,     0,   298,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   303,   304,   305,
       0,   306,     0,   307,     0,     0,     0,   308,   309,     0,
     310,   820,     0,   311,   312,     0,     0,     0,   313,   314,
     315,   316,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,     0,   334,   335,     0,     0,     0,     0,
       0,   336,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,   827,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,     0,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   374,   375,     0,
       0,   376,   377,     0,   378,     0,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   838,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
       0,   396,   397,     0,   841,   842,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,     0,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,     0,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   430,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   462,     0,     0,
     463,   464,   465,   466,     0,   467,     0,   468,   469,   470,
     471,   472,     0,   473,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,     0,     0,   503,   504,
       0,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,   513,   514,     0,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   861,   521,   522,     0,  2357,   524,
     525,  2358,     0,     0,     0,     0,     0,   527,   528,     0,
       0,   867,   529,   530,   531,   532,   869,   533,   534,   870,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   542,   543,     0,     0,     0,     0,
       0,   544,     0,   545,     0,     0,   546,     0,     0,     0,
     547,     0,   548,   549,   550,   551,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   559,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,     0,     0,     0,
     564,   565,   566,     0,     0,   567,   568,   569,   570,     0,
       0,   571,     0,   572,     0,     0,     0,     0,     0,     0,
     573,   574,     0,     0,   575,     0,   576,     0,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   191,   192,     0,   193,   194,   195,   196,   197,     0,
       0,   198,     0,     0,     0,   899,   199,     0,     0,   200,
       0,   201,   202,   203,   204,   205,   206,     0,   207,     0,
       0,     0,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
       0,     0,   217,   218,     0,   219,   220,   740,   741,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,     0,     0,     0,   249,     0,     0,     0,     0,   250,
       0,     0,   251,     0,     0,     0,   252,   253,   254,     0,
       0,   255,     0,     0,     0,     0,   256,   257,     0,     0,
       0,   742,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,     0,     0,   284,
     285,   286,   287,   288,     0,     0,   289,   290,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
       0,   298,   299,     0,   300,     0,     0,     0,   301,     0,
     302,   303,   304,   305,     0,   743,     0,   307,     0,     0,
       0,   308,   309,     0,   310,     0,     0,   311,   312,     0,
       0,     0,   313,   314,   315,   316,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,     0,   321,   322,
     323,     0,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,     0,   333,     0,     0,   334,   335,
       0,     0,     0,     0,     0,   336,   337,     0,   744,     0,
     339,     0,   340,   341,     0,     0,     0,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
       0,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   374,   375,     0,     0,   376,   377,     0,   378,     0,
     379,     0,   380,   381,   382,   383,   384,   385,   745,   387,
     388,     0,     0,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,     0,   396,   397,     0,     0,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,     0,   408,     0,   409,     0,   410,   411,
     746,   413,   414,   415,   416,   417,   418,   419,     0,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   430,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   462,     0,     0,   463,   464,   465,   466,     0,   467,
       0,   468,   469,   470,   471,   472,     0,   473,   474,     0,
       0,     0,   475,   476,   747,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
       0,     0,   503,   504,     0,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,   513,   514,     0,   515,
     516,     0,     0,   517,   518,   519,   520,     0,     0,   521,
     522,     0,   523,   524,   525,   526,     0,     0,     0,     0,
       0,   748,   528,     0,     0,     0,   529,   530,   531,   532,
       0,   533,   534,     0,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   542,   543,
       0,     0,     0,     0,     0,   544,     0,   545,     0,     0,
     546,     0,     0,     0,   547,     0,   548,   549,   550,   551,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   559,     0,     0,   749,
     750,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,     0,     0,     0,   564,   565,   566,     0,   751,   567,
     568,   569,   570,     0,     0,   571,     0,   572,     0,     0,
       0,     0,     0,     0,   573,   574,     0,     0,   575,     0,
     576,     0,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   752,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   191,   192,     0,   193,   194,
     195,   196,   197,     0,     0,   198,     0,     0,     0,   753,
     199,     0,     0,   200,     0,   201,   202,   203,   204,   205,
     206,     0,   207,     0,     0,     0,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,     0,     0,   217,   218,     0,   219,
     220,   740,   741,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,     0,     0,   249,     0,
       0,     0,     0,   250,     0,     0,   251,     0,     0,     0,
     252,   253,   254,     0,     0,   255,     0,     0,     0,     0,
     256,   257,     0,     0,     0,  1163,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,     0,     0,   284,   285,   286,   287,   288,     0,     0,
     289,   290,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,     0,   298,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   303,   304,   305,     0,   743,
       0,   307,     0,     0,     0,   308,   309,     0,   310,     0,
       0,   311,   312,     0,     0,     0,   313,   314,   315,   316,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,     0,   321,   322,   323,     0,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,     0,   334,   335,     0,     0,     0,     0,     0,   336,
     337,     0,   744,     0,   339,     0,   340,   341,     0,     0,
       0,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,     0,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   374,   375,     0,     0,   376,
     377,     0,   378,     0,   379,     0,   380,   381,   382,   383,
     384,   385,   745,   387,   388,     0,     0,   389,   390,     0,
       0,   391,   392,   393,   394,   395,     0,     0,     0,   396,
     397,     0,     0,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,     0,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,     0,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   430,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   462,     0,     0,   463,   464,
     465,   466,     0,   467,     0,   468,   469,   470,   471,   472,
       0,   473,   474,     0,     0,     0,   475,   476,   747,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,     0,     0,   503,   504,     0,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
     513,   514,     0,   515,   516,     0,     0,   517,   518,   519,
     520,     0,     0,   521,   522,     0,   523,   524,   525,   526,
       0,     0,     0,     0,     0,   527,   528,     0,     0,     0,
     529,   530,   531,   532,     0,   533,   534,     0,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   542,   543,     0,     0,     0,     0,     0,   544,
       0,   545,     0,     0,   546,     0,     0,     0,   547,     0,
     548,   549,   550,   551,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     559,     0,     0,   749,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,     0,     0,     0,   564,   565,
     566,     0,   751,   567,   568,   569,   570,     0,     0,   571,
       0,   572,     0,     0,     0,     0,     0,     0,   573,   574,
       0,     0,   575,     0,   576,     0,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   191,
     192,     0,   193,   194,   195,   196,   197,     0,     0,   198,
       0,     0,     0,   753,   199,     0,     0,   200,     0,   201,
     202,   203,   204,   205,   206,     0,   207,     0,     0,     0,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,     0,     0,
     217,   218,     0,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
       0,     0,   249,     0,     0,     0,     0,   250,     0,     0,
     251,     0,     0,     0,   252,   253,   254,     0,     0,   255,
       0,     0,     0,     0,   256,   257,     0,     0,     0,     0,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,     0,     0,
    1411,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   280,   281,   282,   283,     0,     0,   284,   285,   286,
     287,   288,     0,     0,   289,   290,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,     0,     0,   298,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   303,
     304,   305,     0,   306,     0,   307,     0,     0,     0,   308,
     309,     0,   310,     0,     0,   311,   312,     0,     0,     0,
     313,   314,   315,   316,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,     0,   321,   322,   323,     0,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,     0,   334,   335,   945,     0,
       0,     0,     0,   336,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,     0,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,     0,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   374,
     375,     0,     0,   376,   377,     0,   378,     0,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
       0,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,     0,   396,   397,     0,     0,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,  1412,     0,   405,   406,
     407,     0,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,     0,   420,     0,   421,
     422,   423,     0,   424,     0,   425,   426,   427,   428,   429,
       0,   430,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   443,   444,     0,   445,   446,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   462,
       0,     0,   463,   464,   465,   466,     0,   467,     0,   468,
     469,   470,   471,   472,     0,   473,   474,     0,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
       0,   480,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,     0,     0,
     503,   504,     0,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,   513,   514,     0,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   188,   521,   522,     0,
     523,   524,   525,   526,     0,     0,     0,     0,     0,   527,
     528,     0,     0,     0,   529,   530,   531,   532,     0,   533,
     534,     0,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,     0,   541,     0,   542,   543,     0,     0,
       0,     0,     0,   544,     0,   545,     0,     0,   546,     0,
       0,     0,   547,     0,   548,   549,   550,   551,     0,     0,
       0,     0,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   559,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,   564,   565,   566,     0,     0,   567,   568,   569,
     570,     0,     0,   571,     0,   572,     0,     0,     0,     0,
       0,     0,   573,   574,     0,     0,   575,     0,   576,     0,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,   586,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   191,   192,     0,   193,   194,   195,   196,
     197,     0,     0,   198,     0,     0,     0,  1413,   199,     0,
       0,   200,     0,   201,   202,   203,   204,   205,   206,     0,
     207,     0,     0,     0,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,   213,     0,   214,   215,     0,
       0,   216,     0,     0,   217,   218,     0,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,   243,     0,   244,   245,
     246,   247,   248,     0,     0,     0,   249,     0,     0,     0,
       0,   250,     0,     0,   251,     0,     0,     0,   252,   253,
     254,     0,     0,   255,     0,     0,     0,     0,   256,   257,
       0,     0,     0,     0,   258,   259,     0,   260,     0,     0,
       0,     0,     0,   261,   262,   263,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,   269,     0,     0,     0,
     270,     0,   271,   272,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,   279,   280,   281,   282,   283,     0,
       0,   284,   285,   286,   287,   288,     0,     0,   289,   290,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,     0,     0,   298,   299,     0,   300,     0,     0,     0,
     301,     0,   302,   303,   304,   305,     0,   306,     0,   307,
       0,     0,     0,   308,   309,     0,   310,     0,     0,   311,
     312,     0,     0,     0,   313,   314,   315,   316,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,     0,
     321,   322,   323,     0,     0,     0,   324,     0,     0,     0,
     325,   326,     0,   327,   328,     0,     0,     0,   329,     0,
     330,     0,     0,   331,   332,     0,     0,   333,     0,     0,
     334,   335,   945,     0,     0,     0,     0,   336,   337,     0,
     338,     0,   339,     0,   340,   341,     0,     0,     0,     0,
       0,     0,     0,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,     0,   368,   369,     0,     0,     0,     0,   370,
     371,   372,   373,   374,   375,     0,     0,   376,   377,     0,
     378,     0,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,     0,   389,   390,     0,     0,   391,
     392,   393,   394,   395,     0,     0,     0,   396,   397,     0,
       0,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   405,   406,   407,     0,   408,     0,   409,     0,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
       0,   420,     0,   421,   422,   423,     0,   424,     0,   425,
     426,   427,   428,   429,     0,   430,   431,   432,     0,     0,
     433,     0,     0,     0,   434,   435,     0,   436,   437,     0,
       0,   438,   439,   440,   441,   442,     0,   443,   444,     0,
     445,   446,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,     0,   456,     0,   457,   458,     0,   459,
     460,   461,     0,   462,     0,     0,   463,   464,   465,   466,
       0,   467,     0,   468,   469,   470,   471,   472,     0,   473,
     474,     0,     0,     0,   475,   476,   477,   478,     0,     0,
       0,   479,     0,     0,     0,   480,     0,   481,   482,   483,
     484,     0,   485,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,   492,     0,   493,     0,     0,   494,
       0,     0,   495,     0,   496,     0,   497,   498,   499,   500,
     501,   502,     0,     0,   503,   504,     0,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,   513,   514,
       0,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     188,   521,   522,     0,   523,   524,   525,   526,     0,     0,
       0,     0,     0,   527,   528,     0,     0,     0,   529,   530,
     531,   532,     0,   533,   534,     0,   535,   536,     0,   537,
     538,     0,     0,   539,     0,     0,   540,     0,   541,     0,
     542,   543,     0,     0,     0,     0,     0,   544,     0,   545,
       0,     0,   546,     0,     0,     0,   547,     0,   548,   549,
     550,   551,     0,     0,     0,     0,     0,     0,   552,   553,
     554,     0,   555,   556,   557,   558,     0,     0,   559,     0,
       0,     0,   560,     0,   561,   562,     0,   563,     0,     0,
       0,     0,     0,     0,     0,     0,   564,   565,   566,     0,
       0,   567,   568,   569,   570,     0,     0,   571,     0,   572,
       0,     0,     0,     0,     0,     0,   573,   574,     0,     0,
     575,     0,   576,     0,   577,   578,     0,     0,     0,   579,
     580,   581,   582,   583,   584,   585,   586,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   191,   192,     0,
     193,   194,   195,   196,   197,     0,     0,   198,     0,     0,
       0,  1155,   199,     0,     0,   200,     0,   201,   202,   203,
     204,   205,   206,     0,   207,     0,     0,     0,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,     0,     0,   217,   218,
       0,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,     0,     0,
     249,     0,     0,     0,     0,   250,     0,     0,   251,     0,
       0,     0,   252,   253,   254,     0,     0,   255,     0,     0,
       0,     0,   256,   257,     0,     0,     0,     0,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,     0,     0,   284,   285,   286,   287,   288,
       0,     0,   289,   290,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,     0,     0,   298,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   303,   304,   305,
       0,   306,     0,   307,     0,     0,     0,   308,   309,     0,
     310,     0,     0,   311,   312,     0,     0,     0,   313,   314,
     315,   316,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,     0,   334,   335,   945,     0,     0,     0,
       0,   336,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,     0,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,     0,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   374,   375,     0,
       0,   376,   377,     0,   378,     0,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,     0,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
       0,   396,   397,     0,     0,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,     0,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,     0,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   430,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   462,     0,     0,
     463,   464,   465,   466,     0,   467,     0,   468,   469,   470,
     471,   472,     0,   473,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,     0,     0,   503,   504,
       0,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,   513,   514,     0,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   188,   521,   522,     0,   523,   524,
     525,   526,     0,     0,     0,     0,     0,   527,   528,     0,
       0,     0,   529,   530,   531,   532,     0,   533,   534,     0,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   542,   543,     0,     0,     0,     0,
       0,   544,     0,   545,     0,     0,   546,     0,     0,     0,
     547,     0,   548,   549,   550,   551,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   559,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,     0,     0,     0,
     564,   565,   566,     0,     0,   567,   568,   569,   570,     0,
       0,   571,     0,   572,     0,     0,     0,     0,     0,     0,
     573,   574,     0,     0,   575,     0,   576,     0,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   191,   192,     0,   193,   194,   195,   196,   197,     0,
       0,   198,     0,     0,     0,  1353,   199,     0,     0,   200,
       0,   201,   202,   203,   204,   205,   206,     0,   207,     0,
       0,     0,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
       0,     0,   217,   218,     0,   219,   220,   221,     0,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,     0,     0,     0,   249,     0,     0,     0,     0,   250,
       0,     0,   251,     0,     0,     0,   252,   253,   254,     0,
       0,   255,     0,     0,     0,     0,   256,   257,     0,     0,
       0,     0,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,     0,     0,   284,
     285,   286,   287,   288,     0,     0,   289,   290,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
       0,   298,   299,     0,   300,     0,     0,     0,   301,     0,
     302,   303,   304,   305,     0,   306,     0,   307,     0,     0,
       0,   308,   309,     0,   310,     0,     0,   311,   312,     0,
       0,     0,   313,   314,   315,   316,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,     0,   321,   322,
     323,     0,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,     0,   333,     0,     0,   334,   335,
     945,     0,     0,     0,     0,   336,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,     0,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
       0,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   374,   375,     0,     0,   376,   377,     0,   378,     0,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,     0,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,     0,   396,   397,     0,     0,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,     0,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,     0,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   430,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   462,     0,     0,   463,   464,   465,   466,     0,   467,
       0,   468,   469,   470,   471,   472,     0,   473,   474,     0,
       0,     0,   475,   476,   477,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
       0,     0,   503,   504,     0,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,   513,   514,     0,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   188,   521,
     522,     0,   523,   524,   525,   526,     0,     0,     0,     0,
       0,   527,   528,     0,     0,     0,   529,   530,   531,   532,
       0,   533,   534,     0,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   542,   543,
       0,     0,     0,     0,     0,   544,     0,   545,     0,     0,
     546,     0,     0,     0,   547,     0,   548,   549,   550,   551,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   559,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,     0,     0,     0,   564,   565,   566,     0,     0,   567,
     568,   569,   570,     0,     0,   571,     0,   572,     0,     0,
       0,     0,     0,     0,   573,   574,     0,     0,   575,     0,
     576,     0,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   191,   192,     0,   193,   194,
     195,   196,   197,     0,     0,   198,     0,     0,     0,  1413,
     199,     0,     0,   200,     0,   201,   202,   203,   204,   205,
     206,     0,   207,     0,     0,     0,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,     0,     0,   217,   218,     0,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,  1689,   242,   243,     0,
     244,   245,   246,   247,   248,     0,     0,     0,   249,     0,
       0,     0,     0,   250,     0,     0,   251,     0,     0,     0,
     252,   253,   254,     0,     0,   255,     0,     0,     0,     0,
     256,   257,     0,     0,     0,     0,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,     0,     0,   284,   285,   286,   287,   288,     0,     0,
     289,   290,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,     0,   298,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   303,   304,   305,     0,   306,
       0,   307,     0,     0,     0,   308,   309,     0,   310,     0,
       0,   311,   312,     0,     0,     0,   313,   314,   315,   316,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,     0,   321,   322,   323,     0,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,     0,   334,   335,     0,     0,     0,     0,     0,   336,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
       0,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,     0,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   374,   375,     0,     0,   376,
     377,     0,   378,     0,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,     0,   389,   390,     0,
       0,   391,   392,   393,   394,   395,     0,     0,     0,   396,
     397,     0,     0,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,     0,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,     0,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   430,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   462,     0,     0,   463,   464,
     465,   466,     0,   467,     0,   468,   469,   470,   471,   472,
       0,   473,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,     0,     0,   503,   504,     0,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
     513,   514,     0,   515,   516,     0,     0,   517,   518,   519,
     520,     0,     0,   521,   522,     0,   523,   524,   525,   526,
       0,     0,     0,     0,     0,   527,   528,     0,     0,     0,
     529,   530,   531,   532,     0,   533,   534,     0,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   542,   543,     0,     0,     0,     0,     0,   544,
       0,   545,     0,     0,   546,     0,     0,     0,   547,     0,
     548,   549,   550,   551,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     559,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,     0,     0,     0,   564,   565,
     566,     0,     0,   567,   568,   569,   570,     0,     0,   571,
       0,   572,     0,     0,     0,     0,     0,     0,   573,   574,
       0,     0,   575,     0,   576,     0,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   191,
     192,     0,   193,   194,   195,   196,   197,     0,     0,   198,
       0,     0,     0,  1690,   199,     0,     0,   200,     0,   201,
     202,   203,   204,   205,   206,     0,   207,     0,     0,     0,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,     0,     0,
     217,   218,     0,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
       0,     0,   249,     0,     0,     0,     0,   250,     0,     0,
     251,     0,     0,     0,   252,   253,   254,     0,     0,   255,
       0,     0,     0,     0,   256,   257,     0,     0,     0,     0,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   280,   281,   282,   283,     0,     0,   284,   285,   286,
     287,   288,     0,     0,   289,   290,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,     0,     0,   298,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   303,
     304,   305,     0,   306,     0,   307,     0,     0,     0,   308,
     309,     0,   310,     0,     0,   311,   312,     0,     0,     0,
     313,   314,   315,   316,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,     0,   321,   322,   323,     0,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,     0,   334,   335,     0,     0,
       0,     0,     0,   336,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,     0,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,     0,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   374,
     375,     0,     0,   376,   377,     0,   378,     0,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
       0,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,     0,   396,   397,     0,     0,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   405,   406,
     407,     0,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,     0,   420,     0,   421,
     422,   423,     0,   424,     0,   425,   426,   427,   428,   429,
       0,   430,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   443,   444,     0,   445,   446,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   462,
       0,     0,   463,   464,   465,   466,     0,   467,     0,   468,
     469,   470,   471,   472,     0,   473,   474,     0,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
       0,   480,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,     0,     0,
     503,   504,     0,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,   513,   514,     0,   515,   516,     0,
       0,   517,   518,   519,   520,     0,     0,   521,   522,     0,
     523,   524,   525,   526,     0,     0,     0,     0,     0,   527,
     528,     0,     0,     0,   529,   530,   531,   532,     0,   533,
     534,     0,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,     0,   541,     0,   542,   543,     0,     0,
       0,     0,     0,   544,     0,   545,     0,     0,   546,     0,
       0,     0,   547,     0,   548,   549,   550,   551,     0,     0,
       0,     0,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   559,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,   564,   565,   566,     0,     0,   567,   568,   569,
     570,     0,     0,   571,     0,   572,     0,     0,     0,     0,
       0,     0,   573,   574,     0,     0,   575,     0,   576,     0,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,   586,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   191,   192,     0,   193,   194,   195,   196,
     197,     0,     0,   198,  4855,     0,     0,  4856,   199,     0,
       0,   200,     0,   201,   202,   203,   204,   205,   206,     0,
     207,     0,     0,     0,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,   213,     0,   214,   215,     0,
       0,   216,     0,     0,   217,   218,     0,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,   243,     0,   244,   245,
     246,   247,   248,     0,     0,     0,   249,     0,     0,     0,
       0,   250,     0,     0,   251,     0,     0,     0,   252,   253,
     254,     0,     0,   255,     0,     0,     0,     0,   256,   257,
       0,     0,     0,     0,   258,   259,     0,   260,     0,     0,
       0,     0,     0,   261,   262,   263,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,   269,     0,     0,     0,
     270,     0,   271,   272,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,   279,   280,   281,   282,   283,     0,
       0,   284,   285,   286,   287,   288,     0,     0,   289,   290,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,     0,     0,   298,   299,     0,   300,     0,     0,     0,
     301,     0,   302,   303,   304,   305,     0,   306,     0,   307,
       0,     0,     0,   308,   309,     0,   310,     0,     0,   311,
     312,     0,     0,     0,   313,   314,   315,   316,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,     0,
     321,   322,   323,     0,     0,     0,   324,     0,     0,     0,
     325,   326,     0,   327,   328,     0,     0,     0,   329,     0,
     330,     0,     0,   331,   332,     0,     0,   333,     0,     0,
     334,   335,     0,     0,     0,     0,     0,   336,   337,     0,
     338,     0,   339,     0,   340,   341,     0,     0,     0,     0,
       0,     0,     0,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,     0,   368,   369,     0,     0,     0,     0,   370,
     371,   372,   373,   374,   375,     0,     0,   376,   377,     0,
     378,     0,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,     0,   389,   390,     0,     0,   391,
     392,   393,   394,   395,     0,     0,     0,   396,   397,     0,
       0,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   405,   406,   407,     0,   408,     0,   409,     0,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
       0,   420,     0,   421,   422,   423,     0,   424,     0,   425,
     426,   427,   428,   429,     0,   430,   431,   432,     0,     0,
     433,     0,     0,     0,   434,   435,     0,   436,   437,     0,
       0,   438,   439,   440,   441,   442,     0,   443,   444,     0,
     445,   446,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,     0,   456,     0,   457,   458,     0,   459,
     460,   461,     0,   462,     0,     0,   463,   464,   465,   466,
       0,   467,     0,   468,   469,   470,   471,   472,     0,   473,
     474,     0,     0,     0,   475,   476,   477,   478,     0,     0,
       0,   479,     0,     0,     0,   480,     0,   481,   482,   483,
     484,     0,   485,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,   492,     0,   493,     0,     0,   494,
       0,     0,   495,     0,   496,     0,   497,   498,   499,   500,
     501,   502,     0,     0,   503,   504,     0,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,   513,   514,
       0,   515,   516,     0,     0,   517,   518,   519,   520,     0,
       0,   521,   522,     0,   523,   524,   525,   526,     0,     0,
       0,     0,     0,   527,   528,     0,     0,     0,   529,   530,
     531,   532,     0,   533,   534,     0,   535,   536,     0,   537,
     538,     0,     0,   539,     0,     0,   540,     0,   541,     0,
     542,   543,     0,     0,     0,     0,     0,   544,     0,   545,
       0,     0,   546,     0,     0,     0,   547,     0,   548,   549,
     550,   551,     0,     0,     0,     0,     0,     0,   552,   553,
     554,     0,   555,   556,   557,   558,     0,     0,   559,     0,
       0,     0,   560,     0,   561,   562,     0,   563,     0,     0,
       0,     0,     0,     0,     0,     0,   564,   565,   566,     0,
       0,   567,   568,   569,   570,     0,     0,   571,     0,   572,
       0,     0,     0,     0,     0,     0,   573,   574,     0,     0,
     575,     0,   576,     0,   577,   578,     0,     0,     0,   579,
     580,   581,   582,   583,   584,   585,   586,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   191,   192,     0,
     193,   194,   195,   196,   197,     0,     0,   198,     0,     0,
       0,  1690,   199,     0,     0,   200,     0,   201,   202,   203,
     204,   205,   206,     0,   207,     0,     0,     0,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,     0,     0,   217,   218,
       0,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,     0,     0,
     249,     0,     0,     0,     0,   250,     0,     0,   251,     0,
       0,     0,   252,   253,   254,     0,     0,   255,     0,     0,
       0,     0,   256,   257,     0,     0,     0,     0,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,     0,     0,   284,   285,   286,   287,   288,
       0,     0,   289,   290,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,     0,     0,   298,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   303,   304,   305,
       0,   306,     0,   307,     0,     0,     0,   308,   309,     0,
     310,     0,     0,   311,   312,     0,     0,     0,   313,   314,
     315,   316,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,     0,   334,   335,     0,     0,     0,     0,
       0,   336,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,     0,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,     0,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   374,   375,     0,
       0,   376,   377,     0,   378,     0,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,     0,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
       0,   396,   397,     0,     0,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,     0,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,     0,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   430,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   462,     0,     0,
     463,   464,   465,   466,     0,   467,     0,   468,   469,   470,
     471,   472,     0,   473,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,     0,     0,   503,   504,
       0,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,   513,   514,     0,   515,   516,     0,     0,   517,
     518,   519,   520,     0,     0,   521,   522,     0,   523,   524,
     525,   526,     0,     0,     0,     0,     0,   527,   528,     0,
       0,     0,   529,   530,   531,   532,     0,   533,   534,     0,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   542,   543,     0,     0,     0,     0,
       0,   544,     0,   545,     0,     0,   546,     0,     0,     0,
     547,     0,   548,   549,   550,   551,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   559,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,     0,     0,     0,
     564,   565,   566,     0,     0,   567,   568,   569,   570,     0,
       0,   571,     0,   572,     0,     0,     0,     0,     0,     0,
     573,   574,     0,     0,   575,     0,   576,     0,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
     192,     0,   193,   194,   195,   196,   197,     0,     0,     0,
       0,     0,     0,     0,   199,  4856,     0,     0,     0,   201,
     202,   203,   204,   205,     0,     0,  -440,     0,     0,     0,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,   213,     0,     0,     0,     0,     0,   216,  4523,     0,
     217,   218,     0,   219,   220,     0,     0,     0,     0,   223,
     224,   225,  4524,   227,   228,     0,   229,   230,     0,   231,
     232,     0,   234,     0,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,     0,   248,     0,
       0,     0,   249,     0,     0,     0,     0,   250,     0,     0,
     251,     0,     0,     0,   252,   253,   254,     0,     0,   255,
       0,     0,     0,     0,   256,     0,     0,     0,     0,     0,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,     0,     0,     0,
     267,   268,   269,     0,     0,     0,   270,     0,     0,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   280,   281,   282,     0,     0,     0,   284,   285,   286,
     287,   288,     0,     0,   289,   290,  4525,   291,   292,   293,
     294,   295,     0,     0,     0,     0,     0,     0,     0,     0,
     299,     0,   300,     0,     0,     0,   301,     0,     0,   303,
     304,   305,     0,   306,     0,   307,     0,     0,     0,     0,
     309,     0,     0,     0,     0,     0,   312,     0,     0,     0,
     313,   314,   315,   316,  4526,     0,   317,     0,   319,     0,
       0,   320,     0,     0,     0,     0,   321,   322,     0,     0,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,  4527,     0,     0,   329,     0,   330,     0,     0,     0,
     332,     0,     0,   333,  4528,     0,   334,   335,     0,     0,
       0,     0,     0,   336,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,     0,     0,  -395,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,     0,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   374,
     375,     0,     0,   376,   377,     0,   378,     0,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
       0,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,     0,     0,   397,     0,     0,     0,   398,     0,
     399,   400,     0,   401,   402,  4529,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   406,
     407,     0,     0,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
     422,   423,     0,   424,     0,   425,   426,   427,   428,   429,
       0,   430,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   443,     0,     0,   445,     0,   447,  -395,
       0,   448,   449,   450,   451,   452,   453,   454,   455,     0,
       0,     0,   457,     0,     0,   459,   460,   461,  4530,   462,
       0,     0,     0,   464,   465,   466,     0,   467,     0,   468,
     469,     0,   471,   472,     0,   473,     0,     0,     0,     0,
     475,   476,   477,     0,     0,     0,     0,   479,     0,     0,
       0,     0,     0,     0,   482,     0,   484,     0,   485,     0,
       0,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,     0,   499,   500,   501,   502,     0,     0,
       0,   504,     0,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,   513,   514,     0,   515,   516,     0,
       0,   517,   518,   519,   520,     0,     0,   521,   522,     0,
     523,   524,   525,   526,     0,     0,     0,     0,     0,   527,
     528,     0,     0,     0,     0,   530,   531,   532,     0,   533,
     534,     0,   535,   536,     0,     0,     0,     0,     0,   539,
       0,     0,   540,     0,     0,     0,   542,   543,     0,     0,
       0,     0,     0,   544,     0,   545,     0,     0,   546,     0,
       0,     0,   547,     0,   548,   549,   550,   551,     0,     0,
    -395,     0,     0,     0,   552,   553,     0,     0,   555,     0,
     557,   558,     0,     0,   559,     0,     0,     0,     0,     0,
       0,     0,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,   564,   565,   566,     0,     0,   567,   568,   569,
       0,     0,     0,   571,     0,   572,     0,     0,     0,     0,
       0,     0,   573,   574,     0,     0,   575,     0,   576,     0,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,   586,     0,   587,   588,   589,     0,   591,   592,
     593,   594,   191,   192,     0,   193,   194,   195,   196,   197,
       0,     0,   198,     0,     0,     0,     0,   199,  4921,     0,
     200,     0,   201,   202,   203,   204,   205,   206,     0,   207,
       0,     0,     0,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,   213,     0,   214,   215,     0,     0,
     216,     0,     0,   217,   218,     0,   219,   220,   221,     0,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,     0,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,     0,   242,   243,     0,   244,   245,   246,
     247,   248,     0,     0,     0,   249,     0,     0,     0,     0,
     250,     0,     0,   251,     0,     0,     0,   252,   253,   254,
       0,     0,   255,     0,     0,     0,     0,   256,   257,     0,
       0,     0,     0,   258,   259,     0,   260,     0,     0,     0,
       0,     0,   261,   262,   263,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,   269,     0,     0,     0,   270,
       0,   271,   272,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,   279,   280,   281,   282,   283,     0,     0,
     284,   285,   286,   287,   288,     0,     0,   289,   290,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
       0,     0,   298,   299,     0,   300,     0,     0,     0,   301,
       0,   302,   303,   304,   305,     0,   306,     0,   307,     0,
       0,     0,   308,   309,     0,   310,     0,     0,   311,   312,
       0,     0,     0,   313,   314,   315,   316,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,     0,     0,   324,     0,     0,     0,   325,
     326,     0,   327,   328,     0,     0,     0,   329,     0,   330,
       0,     0,   331,   332,     0,     0,   333,     0,     0,   334,
     335,     0,     0,     0,     0,     0,   336,   337,     0,   338,
       0,   339,     0,   340,   341,     0,     0,     0,     0,     0,
       0,     0,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,     0,   368,   369,     0,     0,     0,     0,   370,   371,
     372,   373,   374,   375,     0,     0,   376,   377,     0,   378,
       0,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,     0,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,     0,   396,   397,     0,     0,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   405,   406,   407,     0,   408,     0,   409,     0,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,     0,
     420,     0,   421,   422,   423,     0,   424,     0,   425,   426,
     427,   428,   429,     0,   430,   431,   432,     0,     0,   433,
       0,     0,     0,   434,   435,     0,   436,   437,     0,     0,
     438,   439,   440,   441,   442,     0,   443,   444,     0,   445,
     446,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,     0,   456,     0,   457,   458,     0,   459,   460,
     461,     0,   462,     0,     0,   463,   464,   465,   466,     0,
     467,     0,   468,   469,   470,   471,   472,     0,   473,   474,
      42,     0,     0,   475,   476,   477,   478,     0,     0,     0,
     479,     0,     0,     0,   480,     0,   481,   482,   483,   484,
       0,   485,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,   492,     0,   493,     0,     0,   494,     0,
       0,   495,     0,   496,     0,   497,   498,   499,   500,   501,
     502,     0,     0,   503,   504,     0,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,   513,   514,     0,
     515,   516,     0,     0,   517,   518,   519,   520,     0,     0,
     521,   522,     0,   523,   524,   525,   526,     0,     0,     0,
       0,     0,   527,   528,     0,     0,     0,   529,   530,   531,
     532,     0,   533,   534,     0,   535,   536,     0,   537,   538,
       0,     0,   539,     0,     0,   540,     0,   541,     0,   542,
     543,     0,     0,     0,     0,     0,   544,     0,   545,     0,
       0,   546,     0,     0,     0,   547,     0,   548,   549,   550,
     551,     0,     0,     0,    53,     0,     0,   552,   553,   554,
       0,   555,   556,   557,   558,     0,     0,   559,     0,     0,
       0,   560,     0,   561,   562,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,   564,   565,   566,     0,     0,
     567,   568,   569,   570,     0,     0,   571,     0,   572,     0,
       0,     0,     0,     0,     0,   573,   574,     0,     0,   575,
       0,   576,     0,   577,   578,     0,     0,     0,   579,   580,
     581,   582,   583,   584,   585,   586,     0,   587,   588,   589,
     590,   591,   592,   593,   594,   191,   192,     0,   193,   194,
     195,   196,   197,     0,     0,   198,   931,  3560,     0,     0,
     199,     0,     0,   200,     0,   201,   202,   203,   204,   205,
     206,     0,   207,     0,     0,     0,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,     0,     0,   217,   218,     0,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,     0,     0,   249,     0,
       0,     0,     0,   250,     0,     0,   251,     0,     0,     0,
     252,   253,   254,     0,     0,   255,     0,     0,     0,     0,
     256,   257,     0,     0,     0,     0,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,     0,     0,   284,   285,   286,   287,   288,     0,     0,
     289,   290,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,     0,   298,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   303,   304,   305,     0,   306,
       0,   307,     0,     0,     0,   308,   309,     0,   310,     0,
       0,   311,   312,     0,     0,     0,   313,   314,   315,   316,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,     0,   321,   322,   323,     0,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,     0,   334,   335,     0,     0,     0,     0,     0,   336,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
       0,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,     0,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   374,   375,     0,     0,   376,
     377,     0,   378,     0,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,     0,   389,   390,     0,
       0,   391,   392,   393,   394,   395,     0,     0,     0,   396,
     397,     0,     0,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,     0,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,     0,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   430,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   462,     0,     0,   463,   464,
     465,   466,     0,   467,     0,   468,   469,   470,   471,   472,
       0,   473,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,     0,     0,   503,   504,     0,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
     513,   514,     0,   515,   516,     0,     0,   517,   518,   519,
     520,     0,     0,   521,   522,     0,   523,   524,   525,   526,
       0,     0,     0,     0,     0,   527,   528,     0,     0,     0,
     529,   530,   531,   532,     0,   533,   534,     0,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   542,   543,     0,     0,     0,     0,     0,   544,
       0,   545,     0,     0,   546,     0,     0,     0,   547,     0,
     548,   549,   550,   551,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     559,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,     0,     0,     0,   564,   565,
     566,     0,     0,   567,   568,   569,   570,     0,     0,   571,
       0,   572,     0,     0,     0,     0,     0,     0,   573,   574,
       0,     0,   575,     0,   576,     0,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,   191,   192,
       0,   193,   194,   195,   196,   197,     0,     0,   198,     0,
    3875,     0,     0,   199,     0,     0,   200,     0,   201,   202,
     203,   204,   205,   206,     0,   207,     0,     0,     0,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
     213,     0,   214,   215,     0,     0,   216,     0,     0,   217,
     218,     0,   219,   220,   221,     0,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,     0,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,     0,
     242,   243,     0,   244,   245,   246,   247,   248,     0,     0,
       0,   249,     0,     0,     0,     0,   250,     0,     0,   251,
       0,     0,     0,   252,   253,   254,     0,     0,   255,     0,
       0,     0,     0,   256,   257,     0,     0,     0,     0,   258,
     259,     0,   260,     0,     0,     0,     0,     0,   261,   262,
     263,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,   269,     0,     0,     0,   270,     0,   271,   272,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,   279,
     280,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,     0,     0,   289,   290,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,     0,     0,   298,   299,
       0,   300,     0,     0,     0,   301,     0,   302,   303,   304,
     305,     0,   306,     0,   307,     0,     0,     0,   308,   309,
       0,   310,     0,     0,   311,   312,     0,     0,     0,   313,
     314,   315,   316,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,     0,   321,   322,   323,     0,     0,
       0,   324,     0,     0,     0,   325,   326,     0,   327,   328,
       0,     0,     0,   329,     0,   330,     0,     0,   331,   332,
       0,     0,   333,     0,     0,   334,   335,     0,     0,     0,
       0,     0,   336,   337,     0,   338,     0,   339,     0,   340,
     341,     0,     0,     0,     0,     0,     0,     0,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,     0,   368,   369,
       0,     0,     0,     0,   370,   371,   372,   373,   374,   375,
       0,     0,   376,   377,     0,   378,     0,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,     0,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,     0,   396,   397,     0,     0,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,     0,   404,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   405,   406,   407,
       0,   408,     0,   409,     0,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,     0,   420,     0,   421,   422,
     423,     0,   424,     0,   425,   426,   427,   428,   429,     0,
     430,   431,   432,     0,     0,   433,     0,     0,     0,   434,
     435,     0,   436,   437,     0,     0,   438,   439,   440,   441,
     442,     0,   443,   444,     0,   445,   446,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,     0,   456,
       0,   457,   458,     0,   459,   460,   461,     0,   462,     0,
       0,   463,   464,   465,   466,     0,   467,     0,   468,   469,
     470,   471,   472,     0,   473,   474,     0,     0,     0,   475,
     476,   477,   478,     0,     0,     0,   479,     0,     0,     0,
     480,     0,   481,   482,   483,   484,     0,   485,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,   492,
       0,   493,     0,     0,   494,     0,     0,   495,     0,   496,
       0,   497,   498,   499,   500,   501,   502,     0,     0,   503,
     504,     0,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,   513,   514,     0,   515,   516,     0,     0,
     517,   518,   519,   520,     0,     0,   521,   522,     0,   523,
     524,   525,   526,     0,     0,     0,     0,     0,   527,   528,
       0,     0,     0,   529,   530,   531,   532,     0,   533,   534,
       0,   535,   536,     0,   537,   538,     0,     0,   539,     0,
       0,   540,     0,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   544,     0,   545,     0,     0,   546,     0,     0,
       0,   547,     0,   548,   549,   550,   551,     0,     0,     0,
       0,     0,     0,   552,   553,   554,     0,   555,   556,   557,
     558,     0,     0,   559,     0,     0,     0,   560,     0,   561,
     562,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,   564,   565,   566,     0,     0,   567,   568,   569,   570,
       0,     0,   571,     0,   572,     0,     0,     0,     0,     0,
       0,   573,   574,     0,     0,   575,     0,   576,     0,   577,
     578,     0,     0,     0,   579,   580,   581,   582,   583,   584,
     585,   586,     0,   587,   588,   589,   590,   591,   592,   593,
     594,   191,   192,     0,   193,   194,   195,   196,   197,     0,
       0,   198,     0,  3879,     0,     0,   199,     0,     0,   200,
       0,   201,   202,   203,   204,   205,   206,     0,   207,     0,
       0,     0,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
       0,     0,   217,   218,     0,   219,   220,   221,     0,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,  2142,   244,   245,   246,   247,
     248,     0,     0,     0,   249,     0,     0,     0,     0,   250,
       0,     0,   251,     0,     0,     0,   252,   253,   254,     0,
       0,   255,     0,     0,     0,     0,   256,   257,     0,     0,
       0,     0,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,     0,     0,   284,
     285,   286,   287,   288,     0,     0,   289,   290,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
       0,   298,   299,     0,   300,  2143,     0,     0,   301,     0,
     302,   303,   304,   305,     0,   306,     0,   307,     0,     0,
       0,   308,   309,     0,   310,     0,     0,   311,   312,     0,
       0,     0,   313,   314,   315,   316,     0,     0,   317,   318,
     319,  1550,     0,   320,     0,     0,     0,     0,   321,   322,
     323,     0,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,  1551,
       0,   331,   332,     0,     0,   333,     0,     0,   334,   335,
       0,  3494,     0,     0,     0,   336,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,     0,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
       0,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   374,   375,     0,     0,   376,   377,     0,   378,     0,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,     0,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,     0,   396,   397,     0,     0,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,     0,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,     0,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   430,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   462,     0,     0,   463,   464,   465,   466,     0,   467,
       0,   468,   469,   470,   471,   472,     0,   473,   474,    42,
       0,     0,   475,   476,   477,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,  2145,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
       0,     0,   503,   504,     0,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,   513,   514,     0,   515,
     516,     0,     0,   517,   518,   519,   520,     0,     0,   521,
     522,     0,   523,   524,   525,   526,     0,     0,     0,     0,
       0,   527,   528,     0,     0,     0,   529,   530,   531,   532,
       0,   533,   534,     0,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   542,   543,
       0,     0,     0,     0,     0,   544,     0,   545,     0,     0,
     546,     0,     0,     0,   547,     0,   548,   549,   550,   551,
       0,     0,     0,    53,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   559,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,     0,     0,     0,   564,   565,   566,     0,     0,   567,
     568,   569,   570,     0,     0,   571,     0,   572,     0,     0,
       0,     0,     0,     0,   573,   574,     0,     0,   575,     0,
     576,     0,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,   191,   192,     0,   193,   194,   195,
     196,   197,     0,     0,   198,   931,     0,     0,     0,   199,
       0,     0,   200,     0,   201,   202,   203,   204,   205,   206,
       0,   207,     0,     0,     0,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,   213,     0,   214,   215,
       0,     0,   216,     0,     0,   217,   218,     0,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,     0,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,     0,   242,   243,     0,   244,
     245,   246,   247,   248,     0,     0,     0,   249,     0,     0,
       0,     0,   250,     0,     0,   251,     0,     0,     0,   252,
     253,   254,     0,     0,   255,     0,     0,     0,     0,   256,
     257,     0,     0,     0,     0,   258,   259,     0,   260,     0,
       0,     0,     0,     0,   261,   262,   263,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,   269,     0,     0,
       0,   270,     0,   271,   272,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,   279,   280,   281,   282,   283,
       0,     0,   284,   285,   286,   287,   288,     0,     0,   289,
     290,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,     0,     0,   298,   299,     0,   300,     0,     0,
       0,   301,     0,   302,   303,   304,   305,     0,   306,     0,
     307,     0,     0,     0,   308,   309,     0,   310,     0,     0,
     311,   312,     0,     0,     0,   313,   314,   315,   316,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
       0,   321,   322,   323,     0,     0,     0,   324,     0,     0,
       0,   325,   326,     0,   327,   328,     0,     0,     0,   329,
       0,   330,     0,     0,   331,   332,     0,     0,   333,     0,
       0,   334,   335,     0,     0,     0,     0,     0,   336,   337,
       0,   338,     0,   339,     0,   340,   341,     0,     0,     0,
       0,     0,     0,     0,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,     0,   368,   369,     0,     0,     0,     0,
     370,   371,   372,   373,   374,   375,     0,     0,   376,   377,
       0,   378,     0,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,     0,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,     0,   396,   397,
       0,     0,     0,   398,     0,   399,   400,     0,   401,   402,
     403,     0,     0,   404,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   405,   406,   407,     0,   408,     0,   409,
       0,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,     0,   420,     0,   421,   422,   423,     0,   424,     0,
     425,   426,   427,   428,   429,     0,   430,   431,   432,     0,
       0,   433,     0,     0,     0,   434,   435,     0,   436,   437,
       0,     0,   438,   439,   440,   441,   442,     0,   443,   444,
       0,   445,   446,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,     0,   456,     0,   457,   458,     0,
     459,   460,   461,     0,   462,     0,     0,   463,   464,   465,
     466,     0,   467,     0,   468,   469,   470,   471,   472,     0,
     473,   474,     0,     0,     0,   475,   476,   477,   478,     0,
       0,     0,   479,     0,     0,     0,   480,     0,   481,   482,
     483,   484,     0,   485,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,   492,     0,   493,     0,     0,
     494,     0,     0,   495,     0,   496,     0,   497,   498,   499,
     500,   501,   502,     0,     0,   503,   504,     0,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,   513,
     514,     0,   515,   516,     0,     0,   517,   518,   519,   520,
       0,     0,   521,   522,     0,   523,   524,   525,   526,     0,
       0,     0,     0,     0,   527,   528,     0,     0,     0,   529,
     530,   531,   532,     0,   533,   534,     0,   535,   536,     0,
     537,   538,     0,     0,   539,     0,     0,   540,     0,   541,
       0,   542,   543,     0,     0,     0,     0,     0,   544,     0,
     545,     0,     0,   546,     0,     0,     0,   547,     0,   548,
     549,   550,   551,     0,     0,     0,     0,     0,     0,   552,
     553,   554,     0,   555,   556,   557,   558,     0,     0,   559,
       0,     0,     0,   560,     0,   561,   562,     0,   563,     0,
       0,     0,     0,     0,     0,     0,     0,   564,   565,   566,
       0,     0,   567,   568,   569,   570,     0,     0,   571,     0,
     572,     0,     0,     0,     0,     0,     0,   573,   574,     0,
       0,   575,     0,   576,     0,   577,   578,     0,     0,  2431,
     579,   580,   581,   582,   583,   584,   585,   586,     0,   587,
     588,   589,   590,   591,   592,   593,   594,   191,   192,     0,
     193,   194,   195,   196,   197,     0,     0,   198,  2432,     0,
       0,     0,   199,     0,     0,   200,     0,   201,   202,   203,
     204,   205,   206,     0,   207,     0,     0,     0,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,     0,     0,   217,   218,
       0,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,     0,     0,
     249,     0,     0,     0,     0,   250,     0,     0,   251,     0,
       0,     0,   252,   253,   254,     0,     0,   255,     0,     0,
       0,     0,   256,   257,     0,     0,     0,     0,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,     0,     0,   284,   285,   286,   287,   288,
       0,     0,   289,   290,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,     0,     0,   298,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   303,   304,   305,
       0,   306,     0,   307,     0,     0,     0,   308,   309,     0,
     310,     0,     0,   311,   312,     0,     0,     0,   313,   314,
     315,   316,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,     0,   334,   335,     0,     0,     0,     0,
       0,   336,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,     0,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,     0,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   374,   375,     0,
       0,   376,   377,     0,   378,     0,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,     0,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
       0,   396,   397,     0,     0,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,     0,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,     0,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   430,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   462,     0,     0,
     463,   464,   465,   466,     0,   467,     0,   468,   469,   470,
     471,   472,     0,   473,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,     0,     0,   503,   504,
       0,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,   513,   514,     0,   515,   516,     0,     0,   517,
     518,   519,   520,     0,     0,   521,   522,     0,   523,   524,
     525,   526,     0,     0,     0,     0,     0,   527,   528,     0,
       0,     0,   529,   530,   531,   532,     0,   533,   534,     0,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   542,   543,     0,     0,     0,     0,
       0,   544,     0,   545,     0,     0,   546,     0,     0,     0,
     547,     0,   548,   549,   550,   551,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   559,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,     0,     0,     0,
     564,   565,   566,     0,     0,   567,   568,   569,   570,     0,
       0,   571,     0,   572,     0,     0,     0,     0,     0,     0,
     573,   574,     0,     0,   575,     0,   576,     0,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
     191,   192,     0,   193,   194,   195,   196,   197,     0,     0,
     198,  1280,     0,     0,     0,   199,     0,     0,   200,     0,
     201,   202,   203,   204,   205,   206,     0,   207,     0,     0,
       0,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,   213,     0,   214,   215,     0,     0,   216,     0,
       0,   217,   218,     0,   219,   220,   221,     0,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,     0,   242,   243,     0,   244,   245,   246,   247,   248,
       0,     0,     0,   249,     0,     0,     0,     0,   250,     0,
       0,   251,     0,     0,     0,   252,   253,   254,     0,     0,
     255,     0,     0,     0,     0,   256,   257,     0,     0,     0,
       0,   258,   259,     0,   260,     0,     0,     0,     0,     0,
     261,   262,   263,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,   269,     0,     0,     0,   270,     0,   271,
     272,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,   279,   280,   281,   282,   283,     0,     0,   284,   285,
     286,   287,   288,     0,     0,   289,   290,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,     0,     0,
     298,   299,     0,   300,     0,     0,     0,   301,     0,   302,
     303,   304,   305,     0,   306,     0,   307,     0,     0,     0,
     308,   309,     0,   310,     0,     0,   311,   312,     0,     0,
       0,   313,   314,   315,   316,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,     0,   321,   322,   323,
       0,     0,     0,   324,     0,     0,     0,   325,   326,     0,
     327,   328,     0,     0,     0,   329,     0,   330,     0,     0,
     331,   332,     0,     0,   333,     0,     0,   334,   335,     0,
       0,     0,     0,     0,   336,   337,     0,   338,     0,   339,
       0,   340,   341,     0,     0,     0,     0,     0,     0,     0,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,     0,
     368,   369,     0,     0,     0,     0,   370,   371,   372,   373,
     374,   375,     0,     0,   376,   377,     0,   378,     0,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,     0,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,     0,   396,   397,     0,     0,     0,   398,
       0,   399,   400,     0,   401,   402,   403,     0,     0,   404,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   405,
     406,   407,     0,   408,     0,   409,     0,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,     0,   420,     0,
     421,   422,   423,     0,   424,     0,   425,   426,   427,   428,
     429,     0,   430,   431,   432,     0,     0,   433,     0,     0,
       0,   434,   435,     0,   436,   437,     0,     0,   438,   439,
     440,   441,   442,     0,   443,   444,     0,   445,   446,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
       0,   456,     0,   457,   458,     0,   459,   460,   461,     0,
     462,     0,     0,   463,   464,   465,   466,     0,   467,     0,
     468,   469,   470,   471,   472,     0,   473,   474,     0,     0,
       0,   475,   476,   477,   478,     0,     0,     0,   479,     0,
       0,     0,   480,     0,   481,   482,   483,   484,     0,   485,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,   492,     0,   493,     0,     0,   494,     0,     0,   495,
       0,   496,     0,   497,   498,   499,   500,   501,   502,     0,
       0,   503,   504,     0,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,   513,   514,     0,   515,   516,
       0,     0,   517,   518,   519,   520,     0,     0,   521,   522,
       0,   523,   524,   525,   526,     0,     0,     0,     0,     0,
     527,   528,     0,     0,     0,   529,   530,   531,   532,     0,
     533,   534,     0,   535,   536,     0,   537,   538,     0,     0,
     539,     0,     0,   540,     0,   541,     0,   542,   543,     0,
       0,     0,     0,     0,   544,     0,   545,     0,     0,   546,
       0,     0,     0,   547,     0,   548,   549,   550,   551,     0,
       0,     0,     0,     0,     0,   552,   553,   554,     0,   555,
     556,   557,   558,     0,     0,   559,     0,     0,     0,   560,
       0,   561,   562,     0,   563,     0,     0,     0,     0,     0,
       0,     0,     0,   564,   565,   566,     0,     0,   567,   568,
     569,   570,     0,     0,   571,     0,   572,     0,     0,     0,
       0,     0,     0,   573,   574,     0,     0,   575,     0,   576,
       0,   577,   578,     0,     0,     0,   579,   580,   581,   582,
     583,   584,   585,   586,     0,   587,   588,   589,   590,   591,
     592,   593,   594,   191,   192,     0,   193,   194,   195,   196,
     197,     0,     0,   198,  2793,     0,     0,     0,   199,     0,
       0,   200,     0,   201,   202,   203,   204,   205,   206,     0,
     207,     0,     0,     0,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,   213,     0,   214,   215,     0,
       0,   216,     0,     0,   217,   218,     0,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,   243,     0,   244,   245,
     246,   247,   248,     0,     0,     0,   249,     0,     0,     0,
       0,   250,     0,     0,   251,     0,     0,     0,   252,   253,
     254,     0,     0,   255,     0,     0,     0,     0,   256,   257,
       0,     0,     0,     0,   258,   259,     0,   260,     0,     0,
       0,     0,     0,   261,   262,   263,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,   269,     0,     0,     0,
     270,     0,   271,   272,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,   279,   280,   281,   282,   283,     0,
       0,   284,   285,   286,   287,   288,     0,     0,   289,   290,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,     0,     0,   298,   299,     0,   300,     0,     0,     0,
     301,     0,   302,   303,   304,   305,     0,   306,     0,   307,
       0,     0,     0,   308,   309,     0,   310,     0,     0,   311,
     312,     0,     0,     0,   313,   314,   315,   316,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,     0,
     321,   322,   323,     0,     0,     0,   324,     0,     0,     0,
     325,   326,     0,   327,   328,     0,     0,     0,   329,     0,
     330,     0,     0,   331,   332,     0,     0,   333,     0,     0,
     334,   335,     0,     0,     0,     0,     0,   336,   337,     0,
     338,     0,   339,     0,   340,   341,     0,     0,     0,     0,
       0,     0,     0,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,     0,   368,   369,     0,     0,     0,     0,   370,
     371,   372,   373,   374,   375,     0,     0,   376,   377,     0,
     378,     0,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,     0,   389,   390,     0,     0,   391,
     392,   393,   394,   395,     0,     0,     0,   396,   397,     0,
       0,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   405,   406,   407,     0,   408,     0,   409,     0,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
       0,   420,     0,   421,   422,   423,     0,   424,     0,   425,
     426,   427,   428,   429,     0,   430,   431,   432,     0,     0,
     433,     0,     0,     0,   434,   435,     0,   436,   437,     0,
       0,   438,   439,   440,   441,   442,     0,   443,   444,     0,
     445,   446,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,     0,   456,     0,   457,   458,     0,   459,
     460,   461,     0,   462,     0,     0,   463,   464,   465,   466,
       0,   467,     0,   468,   469,   470,   471,   472,     0,   473,
     474,     0,     0,     0,   475,   476,   477,   478,     0,     0,
       0,   479,     0,     0,     0,   480,     0,   481,   482,   483,
     484,     0,   485,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,   492,     0,   493,     0,     0,   494,
       0,     0,   495,     0,   496,     0,   497,   498,   499,   500,
     501,   502,     0,     0,   503,   504,     0,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,   513,   514,
       0,   515,   516,     0,     0,   517,   518,   519,   520,     0,
       0,   521,   522,     0,   523,   524,   525,   526,     0,     0,
       0,     0,     0,   527,   528,     0,     0,     0,   529,   530,
     531,   532,     0,   533,   534,     0,   535,   536,     0,   537,
     538,     0,     0,   539,     0,     0,   540,     0,   541,     0,
     542,   543,     0,     0,     0,     0,     0,   544,     0,   545,
       0,     0,   546,     0,     0,     0,   547,     0,   548,   549,
     550,   551,     0,     0,     0,     0,     0,     0,   552,   553,
     554,     0,   555,   556,   557,   558,     0,     0,   559,     0,
       0,     0,   560,     0,   561,   562,     0,   563,     0,     0,
       0,     0,     0,     0,     0,     0,   564,   565,   566,     0,
       0,   567,   568,   569,   570,     0,     0,   571,     0,   572,
       0,     0,     0,     0,     0,     0,   573,   574,     0,     0,
     575,     0,   576,     0,   577,   578,     0,     0,     0,   579,
     580,   581,   582,   583,   584,   585,   586,     0,   587,   588,
     589,   590,   591,   592,   593,   594,   191,   192,     0,   193,
     194,   195,   196,   197,     0,     0,   198,  3200,     0,     0,
       0,   199,     0,     0,   200,     0,   201,   202,   203,   204,
     205,   206,     0,   207,     0,     0,     0,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,   213,     0,
     214,   215,     0,     0,   216,     0,     0,   217,   218,     0,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,     0,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,     0,   242,   243,
       0,   244,   245,   246,   247,   248,     0,     0,     0,   249,
       0,     0,     0,     0,   250,     0,     0,   251,     0,     0,
       0,   252,   253,   254,     0,     0,   255,     0,     0,     0,
       0,   256,   257,     0,     0,     0,     0,   258,   259,     0,
     260,     0,     0,     0,     0,     0,   261,   262,   263,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,   269,
       0,     0,     0,   270,     0,   271,   272,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,   279,   280,   281,
     282,   283,     0,     0,   284,   285,   286,   287,   288,     0,
       0,   289,   290,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,     0,     0,   298,   299,     0,   300,
       0,     0,     0,   301,     0,   302,   303,   304,   305,     0,
     306,     0,   307,     0,     0,     0,   308,   309,     0,   310,
       0,     0,   311,   312,     0,     0,     0,   313,   314,   315,
     316,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,     0,   321,   322,   323,     0,     0,     0,   324,
       0,     0,     0,   325,   326,     0,   327,   328,     0,     0,
       0,   329,     0,   330,     0,     0,   331,   332,     0,     0,
     333,     0,     0,   334,   335,     0,     0,     0,     0,     0,
     336,   337,     0,   338,     0,   339,     0,   340,   341,     0,
       0,     0,     0,     0,     0,     0,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,     0,   368,   369,     0,     0,
       0,     0,   370,   371,   372,   373,   374,   375,     0,     0,
     376,   377,     0,   378,     0,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,     0,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,     0,
     396,   397,     0,     0,     0,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   405,   406,   407,     0,   408,
       0,   409,     0,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,     0,   420,     0,   421,   422,   423,     0,
     424,     0,   425,   426,   427,   428,   429,     0,   430,   431,
     432,     0,     0,   433,     0,     0,     0,   434,   435,     0,
     436,   437,     0,     0,   438,   439,   440,   441,   442,     0,
     443,   444,     0,   445,   446,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,     0,   456,     0,   457,
     458,     0,   459,   460,   461,     0,   462,     0,     0,   463,
     464,   465,   466,     0,   467,     0,   468,   469,   470,   471,
     472,     0,   473,   474,     0,     0,     0,   475,   476,   477,
     478,     0,     0,     0,   479,     0,     0,     0,   480,     0,
     481,   482,   483,   484,     0,   485,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,   492,     0,   493,
       0,     0,   494,     0,     0,   495,     0,   496,     0,   497,
     498,   499,   500,   501,   502,     0,     0,   503,   504,     0,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,   513,   514,     0,   515,   516,     0,     0,   517,   518,
     519,   520,     0,     0,   521,   522,     0,   523,   524,   525,
     526,     0,     0,     0,     0,     0,   527,   528,     0,     0,
       0,   529,   530,   531,   532,     0,   533,   534,     0,   535,
     536,     0,   537,   538,     0,     0,   539,     0,     0,   540,
       0,   541,     0,   542,   543,     0,     0,     0,     0,     0,
     544,     0,   545,     0,     0,   546,     0,     0,     0,   547,
       0,   548,   549,   550,   551,     0,     0,     0,     0,     0,
       0,   552,   553,   554,     0,   555,   556,   557,   558,     0,
       0,   559,     0,     0,     0,   560,     0,   561,   562,     0,
     563,     0,     0,     0,     0,     0,     0,     0,     0,   564,
     565,   566,     0,     0,   567,   568,   569,   570,     0,     0,
     571,     0,   572,     0,     0,     0,     0,     0,     0,   573,
     574,     0,     0,   575,     0,   576,     0,   577,   578,     0,
       0,     0,   579,   580,   581,   582,   583,   584,   585,   586,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
       0,     0,   191,   192,  2328,   193,   194,   195,   196,   197,
       0,     0,   198,     0,     0,     0,     0,   199,     0,     0,
     200,     0,   201,   202,   203,   204,   205,   206,     0,   207,
       0,     0,     0,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,   213,     0,   214,   215,     0,     0,
     216,     0,     0,   217,   218,     0,   219,   220,   221,     0,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,     0,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,     0,   242,   243,     0,   244,   245,   246,
     247,   248,     0,     0,     0,   249,     0,     0,     0,     0,
     250,     0,     0,   251,     0,     0,     0,   252,   253,   254,
       0,     0,   255,     0,     0,     0,     0,   256,   257,     0,
       0,     0,     0,   258,   259,     0,   260,     0,     0,     0,
       0,     0,   261,   262,   263,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,   269,     0,     0,     0,   270,
       0,   271,   272,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,   279,   280,   281,   282,   283,     0,     0,
     284,   285,   286,   287,   288,     0,     0,   289,   290,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
       0,     0,   298,   299,     0,   300,     0,     0,     0,   301,
       0,   302,   303,   304,   305,     0,   306,     0,   307,     0,
       0,     0,   308,   309,     0,   310,     0,     0,   311,   312,
       0,     0,     0,   313,   314,   315,   316,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,     0,     0,   324,     0,     0,     0,   325,
     326,     0,   327,   328,     0,     0,     0,   329,     0,   330,
       0,     0,   331,   332,     0,     0,   333,     0,     0,   334,
     335,     0,     0,     0,     0,     0,   336,   337,     0,   338,
       0,   339,     0,   340,   341,     0,     0,     0,     0,     0,
       0,     0,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,     0,   368,   369,     0,     0,     0,     0,   370,   371,
     372,   373,   374,   375,     0,     0,   376,   377,     0,   378,
       0,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,     0,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,     0,   396,   397,     0,     0,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   405,   406,   407,     0,   408,     0,   409,     0,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,     0,
     420,     0,   421,   422,   423,     0,   424,     0,   425,   426,
     427,   428,   429,     0,   430,   431,   432,     0,     0,   433,
       0,     0,     0,   434,   435,     0,   436,   437,     0,     0,
     438,   439,   440,   441,   442,     0,   443,   444,     0,   445,
     446,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,     0,   456,     0,   457,   458,     0,   459,   460,
     461,     0,   462,     0,     0,   463,   464,   465,   466,     0,
     467,     0,   468,   469,   470,   471,   472,     0,   473,   474,
       0,     0,     0,   475,   476,   477,   478,     0,     0,     0,
     479,     0,     0,     0,   480,     0,   481,   482,   483,   484,
       0,   485,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,   492,     0,   493,     0,     0,   494,     0,
       0,   495,     0,   496,     0,   497,   498,   499,   500,   501,
     502,     0,     0,   503,   504,     0,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,   513,   514,     0,
     515,   516,     0,     0,   517,   518,   519,   520,     0,     0,
     521,   522,     0,   523,   524,   525,   526,     0,     0,     0,
       0,     0,   527,   528,     0,     0,     0,   529,   530,   531,
     532,     0,   533,   534,     0,   535,   536,     0,   537,   538,
       0,     0,   539,     0,     0,   540,     0,   541,     0,   542,
     543,     0,     0,     0,     0,     0,   544,     0,   545,     0,
       0,   546,     0,     0,     0,   547,     0,   548,   549,   550,
     551,     0,     0,     0,     0,     0,     0,   552,   553,   554,
       0,   555,   556,   557,   558,     0,     0,   559,     0,     0,
       0,   560,     0,   561,   562,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,   564,   565,   566,     0,     0,
     567,   568,   569,   570,     0,     0,   571,     0,   572,     0,
       0,     0,     0,     0,     0,   573,   574,     0,     0,   575,
       0,   576,     0,   577,   578,     0,     0,     0,   579,   580,
     581,   582,   583,   584,   585,   586,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,     0,     0,   191,   192,
    2371,   193,   194,   195,   196,   197,     0,     0,   198,     0,
       0,     0,     0,   199,     0,     0,   200,     0,   201,   202,
     203,   204,   205,   206,     0,   207,     0,     0,     0,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
     213,     0,   214,   215,     0,     0,   216,     0,     0,   217,
     218,     0,   219,   220,   221,     0,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,     0,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,     0,
     242,   243,     0,   244,   245,   246,   247,   248,     0,     0,
       0,   249,     0,     0,     0,     0,   250,     0,     0,   251,
       0,     0,     0,   252,   253,   254,     0,     0,   255,     0,
       0,     0,     0,   256,   257,     0,     0,     0,     0,   258,
     259,     0,   260,     0,     0,     0,     0,     0,   261,   262,
     263,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,   269,     0,     0,     0,   270,     0,   271,   272,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,   279,
     280,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,     0,     0,   289,   290,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,     0,     0,   298,   299,
       0,   300,     0,     0,     0,   301,     0,   302,   303,   304,
     305,     0,   306,     0,   307,     0,     0,     0,   308,   309,
       0,   310,     0,     0,   311,   312,     0,     0,     0,   313,
     314,   315,   316,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,     0,   321,   322,   323,     0,     0,
       0,   324,     0,     0,     0,   325,   326,     0,   327,   328,
       0,     0,     0,   329,     0,   330,     0,     0,   331,   332,
       0,     0,   333,     0,     0,   334,   335,     0,     0,     0,
       0,     0,   336,   337,     0,   338,     0,   339,     0,   340,
     341,     0,     0,     0,     0,     0,     0,     0,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,     0,   368,   369,
       0,     0,     0,     0,   370,   371,   372,   373,   374,   375,
       0,     0,   376,   377,     0,   378,     0,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,     0,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,     0,   396,   397,     0,     0,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,     0,   404,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   405,   406,   407,
       0,   408,     0,   409,     0,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,     0,   420,     0,   421,   422,
     423,     0,   424,     0,   425,   426,   427,   428,   429,     0,
     430,   431,   432,     0,     0,   433,     0,     0,     0,   434,
     435,     0,   436,   437,     0,     0,   438,   439,   440,   441,
     442,     0,   443,   444,     0,   445,   446,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,     0,   456,
       0,   457,   458,     0,   459,   460,   461,     0,   462,     0,
       0,   463,   464,   465,   466,     0,   467,     0,   468,   469,
     470,   471,   472,     0,   473,   474,     0,     0,     0,   475,
     476,   477,   478,     0,     0,     0,   479,     0,     0,     0,
     480,     0,   481,   482,   483,   484,     0,   485,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,   492,
       0,   493,     0,     0,   494,     0,     0,   495,     0,   496,
       0,   497,   498,   499,   500,   501,   502,     0,     0,   503,
     504,     0,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,   513,   514,     0,   515,   516,     0,     0,
     517,   518,   519,   520,     0,     0,   521,   522,     0,   523,
     524,   525,   526,     0,     0,     0,     0,     0,   527,   528,
       0,     0,     0,   529,   530,   531,   532,     0,   533,   534,
       0,   535,   536,     0,   537,   538,     0,     0,   539,     0,
       0,   540,     0,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   544,     0,   545,     0,     0,   546,     0,     0,
       0,   547,     0,   548,   549,   550,   551,     0,     0,     0,
       0,     0,     0,   552,   553,   554,     0,   555,   556,   557,
     558,     0,     0,   559,     0,     0,     0,   560,     0,   561,
     562,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,   564,   565,   566,     0,     0,   567,   568,   569,   570,
       0,     0,   571,     0,   572,     0,     0,     0,     0,     0,
       0,   573,   574,     0,     0,   575,     0,   576,     0,   577,
     578,     0,     0,     0,   579,   580,   581,   582,   583,   584,
     585,   586,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,     0,     0,   191,   192,  3267,   193,   194,   195,
     196,   197,     0,     0,   198,     0,     0,     0,     0,   199,
       0,     0,   200,     0,   201,   202,   203,   204,   205,   206,
       0,   207,     0,     0,     0,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,   213,     0,   214,   215,
       0,     0,   216,     0,     0,   217,   218,     0,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,     0,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,     0,   242,   243,     0,   244,
     245,   246,   247,   248,     0,     0,     0,   249,     0,     0,
       0,     0,   250,     0,     0,   251,     0,     0,     0,   252,
     253,   254,     0,     0,   255,     0,     0,     0,     0,   256,
     257,     0,     0,     0,     0,   258,   259,     0,   260,     0,
       0,     0,     0,     0,   261,   262,   263,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,   269,     0,     0,
       0,   270,     0,   271,   272,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,   279,   280,   281,   282,   283,
       0,     0,   284,   285,   286,   287,   288,     0,     0,   289,
     290,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,     0,     0,   298,   299,     0,   300,     0,     0,
       0,   301,     0,   302,   303,   304,   305,     0,   306,     0,
     307,     0,     0,     0,   308,   309,     0,   310,     0,     0,
     311,   312,     0,     0,     0,   313,   314,   315,   316,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
       0,   321,   322,   323,     0,     0,     0,   324,     0,     0,
       0,   325,   326,     0,   327,   328,     0,     0,     0,   329,
       0,   330,     0,     0,   331,   332,     0,     0,   333,     0,
       0,   334,   335,     0,     0,     0,     0,     0,   336,   337,
       0,   338,     0,   339,     0,   340,   341,     0,     0,     0,
       0,     0,     0,     0,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,     0,   368,   369,     0,     0,     0,     0,
     370,   371,   372,   373,   374,   375,     0,     0,   376,   377,
       0,   378,     0,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,     0,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,     0,   396,   397,
       0,     0,     0,   398,     0,   399,   400,     0,   401,   402,
     403,     0,     0,   404,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   405,   406,   407,     0,   408,     0,   409,
       0,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,     0,   420,     0,   421,   422,   423,     0,   424,     0,
     425,   426,   427,   428,   429,     0,   430,   431,   432,     0,
       0,   433,     0,     0,     0,   434,   435,     0,   436,   437,
       0,     0,   438,   439,   440,   441,   442,     0,   443,   444,
       0,   445,   446,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,     0,   456,     0,   457,   458,     0,
     459,   460,   461,     0,   462,     0,     0,   463,   464,   465,
     466,     0,   467,     0,   468,   469,   470,   471,   472,     0,
     473,   474,     0,     0,     0,   475,   476,   477,   478,     0,
       0,     0,   479,     0,     0,     0,   480,     0,   481,   482,
     483,   484,     0,   485,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,   492,     0,   493,     0,     0,
     494,     0,     0,   495,     0,   496,     0,   497,   498,   499,
     500,   501,   502,     0,     0,   503,   504,     0,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,   513,
     514,     0,   515,   516,     0,     0,   517,   518,   519,   520,
       0,     0,   521,   522,     0,   523,   524,   525,   526,     0,
       0,     0,     0,     0,   527,   528,     0,     0,     0,   529,
     530,   531,   532,     0,   533,   534,     0,   535,   536,     0,
     537,   538,     0,     0,   539,     0,     0,   540,     0,   541,
       0,   542,   543,     0,     0,     0,     0,     0,   544,     0,
     545,     0,     0,   546,     0,     0,     0,   547,     0,   548,
     549,   550,   551,     0,     0,     0,     0,     0,     0,   552,
     553,   554,     0,   555,   556,   557,   558,     0,     0,   559,
       0,     0,     0,   560,     0,   561,   562,     0,   563,     0,
       0,     0,     0,     0,     0,     0,     0,   564,   565,   566,
       0,     0,   567,   568,   569,   570,     0,     0,   571,     0,
     572,     0,     0,     0,     0,     0,     0,   573,   574,     0,
       0,   575,     0,   576,     0,   577,   578,     0,     0,     0,
     579,   580,   581,   582,   583,   584,   585,   586,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,     0,     0,
     191,   192,  3520,   193,   194,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,     0,     0,   200,     0,
     201,   202,   203,   204,   205,   206,     0,   207,     0,     0,
       0,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,   213,     0,   214,   215,     0,     0,   216,     0,
       0,   217,   218,     0,   219,   220,   221,     0,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,     0,   242,   243,     0,   244,   245,   246,   247,   248,
       0,     0,     0,   249,     0,     0,     0,     0,   250,     0,
       0,   251,     0,     0,     0,   252,   253,   254,     0,     0,
     255,     0,     0,     0,     0,   256,   257,     0,     0,     0,
       0,   258,   259,     0,   260,     0,     0,     0,     0,     0,
     261,   262,   263,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,   269,     0,     0,     0,   270,     0,   271,
     272,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,   279,   280,   281,   282,   283,     0,     0,   284,   285,
     286,   287,   288,     0,     0,   289,   290,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,     0,     0,
     298,   299,     0,   300,     0,     0,     0,   301,     0,   302,
     303,   304,   305,     0,   306,     0,   307,     0,     0,     0,
     308,   309,     0,   310,     0,     0,   311,   312,     0,     0,
       0,   313,   314,   315,   316,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,     0,   321,   322,   323,
       0,     0,     0,   324,     0,     0,     0,   325,   326,     0,
     327,   328,     0,     0,     0,   329,     0,   330,     0,     0,
     331,   332,     0,     0,   333,     0,     0,   334,   335,     0,
       0,     0,     0,     0,   336,   337,     0,   338,     0,   339,
       0,   340,   341,     0,     0,     0,     0,     0,     0,     0,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,     0,
     368,   369,     0,     0,     0,     0,   370,   371,   372,   373,
     374,   375,     0,     0,   376,   377,     0,   378,     0,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,     0,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,     0,   396,   397,     0,     0,     0,   398,
       0,   399,   400,     0,   401,   402,   403,     0,     0,   404,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   405,
     406,   407,     0,   408,     0,   409,     0,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,     0,   420,     0,
     421,   422,   423,     0,   424,     0,   425,   426,   427,   428,
     429,     0,   430,   431,   432,     0,     0,   433,     0,     0,
       0,   434,   435,     0,   436,   437,     0,     0,   438,   439,
     440,   441,   442,     0,   443,   444,     0,   445,   446,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
       0,   456,     0,   457,   458,     0,   459,   460,   461,     0,
     462,     0,     0,   463,   464,   465,   466,     0,   467,     0,
     468,   469,   470,   471,   472,     0,   473,   474,     0,     0,
       0,   475,   476,   477,   478,     0,     0,     0,   479,     0,
       0,     0,   480,     0,   481,   482,   483,   484,     0,   485,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,   492,     0,   493,     0,     0,   494,     0,     0,   495,
       0,   496,     0,   497,   498,   499,   500,   501,   502,     0,
       0,   503,   504,     0,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,   513,   514,     0,   515,   516,
       0,     0,   517,   518,   519,   520,     0,     0,   521,   522,
       0,   523,   524,   525,   526,     0,     0,     0,     0,     0,
     527,   528,     0,     0,     0,   529,   530,   531,   532,     0,
     533,   534,     0,   535,   536,     0,   537,   538,     0,     0,
     539,     0,     0,   540,     0,   541,     0,   542,   543,     0,
       0,     0,     0,     0,   544,     0,   545,     0,     0,   546,
       0,     0,     0,   547,     0,   548,   549,   550,   551,     0,
       0,     0,     0,     0,     0,   552,   553,   554,     0,   555,
     556,   557,   558,     0,     0,   559,     0,     0,     0,   560,
       0,   561,   562,     0,   563,     0,     0,     0,     0,     0,
       0,     0,     0,   564,   565,   566,     0,     0,   567,   568,
     569,   570,     0,     0,   571,     0,   572,     0,     0,     0,
       0,     0,     0,   573,   574,     0,     0,   575,     0,   576,
       0,   577,   578,     0,     0,     0,   579,   580,   581,   582,
     583,   584,   585,   586,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,     0,     0,   191,   192,  3534,   193,
     194,   195,   196,   197,   651,   652,   198,     0,     0,     0,
       0,   199,     0,     0,   200,     0,   201,   202,   203,   204,
     205,   206,     0,   207,     0,     0,     0,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,   213,     0,
     214,   215,     0,     0,   216,     0,     0,   217,   218,     0,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,     0,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,     0,   242,   243,
       0,   244,   245,   246,   247,   248,     0,     0,     0,   249,
     653,     0,     0,     0,   250,     0,     0,   251,     0,     0,
       0,   252,   253,   254,     0,     0,   255,     0,     0,     0,
       0,   256,   257,     0,     0,     0,     0,   258,   259,     0,
     260,   654,     0,     0,     0,     0,   261,   262,   263,   264,
     265,     0,     0,     0,   266,   655,     0,   267,   268,   269,
       0,     0,     0,   270,     0,   271,   272,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,   279,   656,   281,
     282,   657,     0,     0,   284,   285,   286,   287,   288,     0,
       0,   289,   290,     0,   658,   292,   293,   294,   295,     0,
       0,   296,   297,     0,     0,     0,   298,   299,     0,   300,
       0,     0,     0,   301,     0,   302,   303,   304,   305,     0,
     306,   659,   307,     0,     0,     0,   308,   309,     0,   310,
       0,     0,   311,   312,     0,     0,     0,   313,   314,   315,
     316,     0,     0,   317,   318,   319,   660,     0,   320,     0,
       0,     0,   661,   321,   322,   323,     0,     0,     0,   324,
       0,     0,     0,   325,   326,     0,   327,   328,     0,     0,
       0,   329,     0,   330,     0,     0,   331,   332,     0,     0,
     333,     0,     0,   334,   335,   662,     0,     0,     0,     0,
     336,   337,     0,   338,     0,   339,   663,   340,   341,     0,
       0,     0,     0,     0,     0,     0,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,     0,   368,   369,     0,     0,
       0,     0,   370,   371,   372,   373,   374,   375,     0,     0,
     376,   377,     0,   378,     0,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,     0,   389,   390,
       0,     0,   391,   392,   393,   394,     0,     0,     0,     0,
     396,   397,     0,     0,     0,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   405,   406,   407,     0,   408,
       0,   409,     0,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,     0,   420,     0,   421,   422,   423,     0,
     424,     0,   664,   426,   427,   428,   665,     0,   430,   431,
     432,     0,     0,   433,     0,     0,     0,   434,   435,     0,
     436,   437,   666,     0,   438,   439,   440,   441,   442,     0,
     667,   444,     0,   445,   446,   447,     0,     0,   668,   449,
     450,   451,   452,   453,   454,   455,     0,   456,     0,   457,
     458,     0,   459,   460,   461,     0,   462,     0,     0,   463,
     464,   465,   466,     0,   467,     0,   468,   469,   470,   471,
     472,     0,   473,   474,   669,     0,     0,   475,   476,   477,
     478,     0,     0,     0,   479,     0,     0,   670,   671,     0,
     481,   482,   483,   484,     0,   485,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,   492,     0,   493,
       0,     0,   494,     0,     0,   495,     0,   496,     0,   497,
     498,   499,   500,   501,   502,     0,     0,   503,   504,     0,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   672,
     512,   513,   514,     0,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   188,   521,   522,     0,   523,   524,   525,
     526,     0,     0,     0,     0,     0,   527,   528,   673,     0,
       0,   529,   530,   531,   532,     0,   533,   534,     0,   535,
     536,     0,   537,   538,     0,     0,   539,     0,     0,   540,
     674,   541,   675,   542,   543,     0,     0,     0,     0,     0,
     544,     0,   545,     0,     0,   546,     0,     0,     0,   547,
       0,   548,   549,   550,   551,     0,     0,     0,     0,     0,
       0,   552,   553,   554,     0,   555,   556,   557,   558,     0,
       0,   559,     0,     0,     0,   560,     0,   561,   562,     0,
     563,     0,     0,     0,     0,     0,     0,     0,     0,   564,
     565,   566,     0,     0,   567,   568,   569,   570,     0,     0,
     571,     0,   572,     0,     0,     0,     0,     0,     0,   573,
     574,     0,     0,   575,     0,   576,     0,   577,   578,     0,
       0,     0,   579,   580,   581,   582,   583,   584,   585,     0,
       0,   587,   588,   589,     0,   591,   592,   593,   594,   191,
     192,     0,   193,   194,   195,   196,   197,   722,   652,   198,
       0,     0,     0,     0,   199,     0,     0,   200,     0,   201,
     202,   203,   204,   205,   206,     0,   207,     0,     0,     0,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,     0,     0,
     217,   218,     0,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
       0,     0,   249,   653,     0,     0,     0,   250,     0,     0,
     251,     0,     0,     0,   252,   253,   254,     0,     0,   255,
       0,     0,     0,     0,   256,   257,     0,     0,     0,     0,
     258,   259,     0,   260,   654,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,   655,     0,
     267,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   656,   281,   282,   657,     0,     0,   284,   285,   286,
     287,   288,     0,     0,   289,   290,     0,   658,   292,   293,
     294,   295,     0,     0,   296,   297,     0,     0,     0,   298,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   303,
     304,   305,     0,   306,   659,   307,     0,     0,     0,   308,
     309,     0,   310,     0,     0,   311,   312,     0,     0,     0,
     313,   314,   315,   316,     0,     0,   317,   318,   319,   660,
       0,   320,     0,     0,     0,   661,   321,   322,   323,     0,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,     0,   334,   335,   662,     0,
       0,     0,     0,   336,   337,     0,   338,     0,   339,   663,
     340,   341,     0,     0,     0,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,     0,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   374,
     375,     0,     0,   376,   377,     0,   378,     0,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
       0,   389,   390,     0,     0,   391,   392,   393,   394,     0,
       0,     0,     0,   396,   397,     0,     0,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   405,   406,
     407,     0,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,     0,   420,     0,   421,
     422,   423,     0,   424,     0,   664,   426,   427,   428,   723,
       0,   430,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,   666,     0,   438,   439,   440,
     441,   442,     0,   667,   444,     0,   445,   446,   447,     0,
       0,   668,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   462,
       0,     0,   463,   464,   465,   466,     0,   467,     0,   468,
     469,   470,   471,   472,     0,   473,   474,   669,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
     670,   671,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,     0,     0,
     503,   504,     0,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   672,   512,   513,   514,     0,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   188,   521,   522,     0,
     523,   524,   525,   526,     0,     0,     0,     0,     0,   527,
     528,   673,     0,     0,   529,   530,   531,   532,     0,   533,
     534,     0,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,   674,   541,   675,   542,   543,     0,     0,
       0,     0,     0,   544,     0,   545,     0,     0,   546,     0,
       0,     0,   547,     0,   548,   549,   550,   551,     0,     0,
       0,     0,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   559,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,   564,   565,   566,     0,     0,   567,   568,   569,
     570,     0,     0,   571,     0,   572,     0,     0,     0,     0,
       0,     0,   573,   574,     0,     0,   575,     0,   576,     0,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,     0,     0,   587,   588,   589,     0,   591,   592,
     593,   594,   191,   192,     0,   193,   194,   195,   196,   197,
       0,   652,   198,     0,     0,     0,     0,   199,     0,     0,
     200,     0,   201,   202,   203,   204,   205,   206,     0,   207,
       0,     0,     0,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,   213,     0,   214,   215,     0,     0,
     216,     0,     0,   217,   218,     0,   219,   220,   221,     0,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,     0,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,     0,   242,   243,     0,   244,   245,   246,
     247,   248,     0,     0,     0,   249,   653,     0,     0,     0,
     250,     0,     0,   251,     0,     0,     0,   252,   253,   254,
       0,     0,   255,     0,     0,     0,     0,   256,   257,     0,
       0,     0,     0,   258,   259,     0,   260,   654,     0,     0,
       0,     0,   261,   262,   263,   264,   265,     0,     0,     0,
     266,   655,     0,   267,   268,   269,     0,     0,     0,   270,
       0,   271,   272,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,   279,   656,   281,   282,   657,     0,     0,
     284,   285,   286,   287,   288,     0,     0,   289,   290,     0,
     658,   292,   293,   294,   295,     0,     0,   296,   297,     0,
       0,     0,   298,   299,     0,   300,     0,     0,     0,   301,
       0,   302,   303,   304,   305,     0,   306,   659,   307,     0,
       0,     0,   308,   309,     0,   310,     0,     0,   311,   312,
       0,     0,     0,   313,   314,   315,   316,     0,     0,   317,
     318,   319,   660,     0,   320,     0,     0,     0,   661,   321,
     322,   323,     0,     0,     0,   324,     0,     0,     0,   325,
     326,     0,   327,   328,     0,     0,     0,   329,     0,   330,
       0,     0,   331,   332,     0,     0,   333,     0,     0,   334,
     335,   662,     0,     0,     0,     0,   336,   337,     0,   338,
       0,   339,   663,   340,   341,     0,     0,     0,     0,     0,
       0,     0,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,     0,   368,   369,     0,     0,     0,     0,   370,   371,
     372,   373,   374,   375,     0,     0,   376,   377,     0,   378,
       0,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,     0,   389,   390,     0,     0,   391,   392,
     393,   394,     0,     0,     0,     0,   396,   397,     0,     0,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   405,   406,   407,     0,   408,     0,   409,     0,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,     0,
     420,     0,   421,   422,   423,     0,   424,     0,   664,   426,
     427,   428,     0,     0,   430,   431,   432,     0,     0,   433,
       0,     0,     0,   434,   435,     0,   436,   437,   666,     0,
     438,   439,   440,   441,   442,     0,   667,   444,     0,   445,
     446,   447,     0,     0,   668,   449,   450,   451,   452,   453,
     454,   455,     0,   456,     0,   457,   458,     0,   459,   460,
     461,     0,   462,     0,     0,   463,   464,   465,   466,     0,
     467,     0,   468,   469,   470,   471,   472,     0,   473,   474,
     669,     0,     0,   475,   476,   477,   478,     0,     0,     0,
     479,     0,     0,   670,   671,     0,   481,   482,   483,   484,
       0,   485,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,   492,     0,   493,     0,     0,   494,     0,
       0,   495,     0,   496,     0,   497,   498,   499,   500,   501,
     502,     0,     0,   503,   504,     0,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   672,   512,   513,   514,     0,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   188,
     521,   522,     0,   523,   524,   525,   526,     0,     0,     0,
       0,     0,   527,   528,   673,     0,     0,   529,   530,   531,
     532,     0,   533,   534,     0,   535,   536,     0,   537,   538,
       0,     0,   539,     0,     0,   540,   674,   541,   675,   542,
     543,     0,     0,     0,     0,     0,   544,     0,   545,     0,
       0,   546,     0,     0,     0,   547,     0,   548,   549,   550,
     551,     0,     0,     0,     0,     0,     0,   552,   553,   554,
       0,   555,   556,   557,   558,     0,     0,   559,     0,     0,
       0,   560,     0,   561,   562,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,   564,   565,   566,     0,     0,
     567,   568,   569,   570,     0,     0,   571,     0,   572,     0,
       0,     0,     0,     0,     0,   573,   574,     0,     0,   575,
       0,   576,     0,   577,   578,     0,     0,     0,   579,   580,
     581,   582,   583,   584,   585,     0,     0,   587,   588,   589,
       0,   591,   592,   593,   594,   191,   192,     0,   193,   194,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,   200,     0,   201,   202,   203,   204,   205,
     206,     0,   207,     0,     0,     0,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,     0,     0,   217,   218,     0,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,     0,     0,   249,     0,
       0,     0,     0,   250,     0,     0,   251,     0,     0,     0,
     252,   253,   254,     0,     0,   255,     0,     0,     0,     0,
     256,   257,  2694,     0,     0,     0,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,     0,     0,   284,   285,   286,   287,   288,     0,     0,
     289,   290,     0,   291,   292,   293,   294,   295,  2695,     0,
     296,   297,     0,     0,     0,   298,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   303,   304,   305,     0,   306,
       0,   307,     0,     0,     0,   308,   309,     0,   310,  2696,
       0,   311,   312,     0,     0,     0,   313,   314,   315,   316,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,     0,   321,   322,   323,     0,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,     0,   334,   335,     0,     0,     0,     0,     0,   336,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
    2697,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,     0,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   374,   375,     0,     0,   376,
     377,     0,   378,     0,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,     0,   389,   390,     0,
       0,   391,   392,   393,   394,   395,  1580,  1581,     0,   396,
     397,     0,     0,  2698,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,     0,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,     0,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   430,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   462,     0,     0,   463,   464,
     465,   466,     0,   467,     0,   468,   469,   470,   471,   472,
       0,   473,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,  4909,   717,  4910,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,     0,     0,   503,   504,     0,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
     513,   514,     0,   515,   516,     0,     0,   517,   518,   519,
     520,     0,     0,   521,   522,     0,   523,   524,   525,   526,
       0,     0,     0,     0,     0,   527,   528,     0,     0,     0,
     529,   530,   531,   532,  2699,   533,   534,     0,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   542,   543,     0,     0,     0,     0,     0,   544,
       0,   545,     0,     0,   546,     0,     0,     0,   547,     0,
     548,   549,   550,   551,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     559,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,     0,     0,     0,   564,   565,
     566,     0,     0,   567,   568,   569,   570,     0,     0,   571,
       0,   572,     0,     0,     0,     0,     0,     0,   573,   574,
       0,     0,   575,     0,   576,     0,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,   191,   192,
       0,   193,   194,   195,   196,   197,     0,     0,   198,     0,
       0,  1621,  1622,   199,  1623,     0,   200,     0,   201,   202,
     203,   204,   205,   206,     0,   207,     0,     0,     0,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
     213,     0,   214,   215,     0,     0,   216,     0,     0,   217,
     218,     0,   219,   220,   221,     0,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,     0,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,     0,
     242,   243,     0,   244,   245,   246,   247,   248,     0,     0,
       0,   249,     0,     0,     0,     0,   250,     0,     0,   251,
       0,     0,     0,   252,   253,   254,     0,     0,   255,     0,
       0,     0,     0,   256,   257,     0,     0,     0,     0,   258,
     259,     0,   260,     0,     0,     0,     0,     0,   261,   262,
     263,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,   269,     0,     0,     0,   270,     0,   271,   272,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,   279,
     280,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,     0,     0,   289,   290,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,     0,     0,   298,   299,
       0,   300,     0,     0,     0,   301,     0,   302,   303,   304,
     305,     0,   306,     0,   307,     0,     0,     0,   308,   309,
       0,   310,     0,     0,   311,   312,     0,     0,     0,   313,
     314,   315,   316,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,     0,   321,   322,   323,     0,     0,
       0,   324,     0,     0,     0,   325,   326,     0,   327,   328,
       0,     0,     0,   329,     0,   330,     0,     0,   331,   332,
       0,     0,   333,     0,     0,   334,   335,     0,     0,     0,
       0,     0,   336,   337,     0,   338,     0,   339,     0,   340,
     341,     0,     0,     0,     0,     0,     0,     0,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,     0,   368,   369,
       0,     0,     0,     0,   370,   371,   372,   373,   374,   375,
       0,     0,   376,   377,     0,   378,     0,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,     0,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,     0,   396,   397,     0,     0,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,     0,   404,     0,     0,
    1624,     0,     0,  1625,     0,     0,     0,   405,   406,   407,
       0,   408,     0,   409,     0,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,     0,   420,     0,   421,   422,
     423,     0,   424,     0,   425,   426,   427,   428,   429,     0,
     430,   431,   432,     0,     0,   433,     0,     0,     0,   434,
     435,     0,   436,   437,     0,     0,   438,   439,   440,   441,
     442,     0,   443,   444,     0,   445,   446,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,     0,   456,
       0,   457,   458,     0,   459,   460,   461,     0,   462,     0,
       0,   463,   464,   465,   466,     0,   467,     0,   468,   469,
     470,   471,   472,     0,   473,   474,     0,     0,     0,   475,
     476,   477,   478,     0,     0,     0,   479,     0,     0,     0,
     480,     0,   481,   482,   483,   484,     0,   485,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,   492,
       0,   493,     0,     0,   494,     0,     0,   495,     0,   496,
       0,   497,   498,   499,   500,   501,   502,     0,     0,   503,
     504,     0,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,   513,   514,     0,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   188,   521,   522,     0,   523,
     524,   525,   526,     0,     0,     0,     0,     0,   527,   528,
       0,     0,     0,   529,   530,   531,   532,     0,   533,   534,
       0,   535,   536,     0,   537,   538,     0,     0,   539,     0,
       0,   540,     0,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   544,     0,   545,     0,     0,   546,     0,     0,
       0,   547,     0,   548,   549,   550,   551,     0,     0,     0,
       0,     0,     0,   552,   553,   554,     0,   555,   556,   557,
     558,  1626,     0,   559,     0,     0,     0,   560,     0,   561,
     562,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,   564,   565,   566,     0,     0,   567,   568,   569,   570,
       0,     0,   571,     0,   572,     0,     0,     0,     0,     0,
       0,   573,   574,     0,     0,   575,     0,   576,     0,   577,
     578,     0,     0,     0,   579,   580,   581,   582,   583,   584,
     585,   586,     0,   587,   588,   589,   590,   591,   592,   593,
     594,   191,   192,     0,   193,   194,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,     0,     0,   200,
       0,   201,   202,   203,   204,   205,   206,     0,   207,     0,
       0,  1133,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
       0,     0,   217,   218,     0,   219,   220,   221,     0,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,     0,     0,     0,   249,     0,     0,     0,     0,   250,
       0,     0,   251,     0,     0,     0,   252,   253,   254,     0,
       0,   255,     0,     0,     0,     0,   256,   257,     0,     0,
       0,  1134,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,  1135,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,     0,     0,   284,
     285,   286,   287,   288,     0,     0,   289,   290,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
       0,   298,   299,     0,   300,     0,     0,     0,   301,     0,
     302,   303,   304,   305,     0,   306,     0,   307,     0,     0,
       0,   308,   309,     0,   310,     0,     0,   311,   312,     0,
       0,     0,   313,   314,   315,   316,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,     0,   321,   322,
     323,     0,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,     0,   333,     0,     0,   334,   335,
     945,     0,     0,     0,     0,   336,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,     0,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
       0,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   374,   375,     0,     0,   376,   377,     0,   378,     0,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,     0,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,     0,   396,   397,     0,     0,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,     0,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,     0,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   430,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   462,     0,     0,   463,   464,   465,   466,     0,   467,
       0,   468,   469,   470,   471,   472,     0,   473,   474,     0,
       0,     0,   475,   476,   477,   478,     0,     0,  1136,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
       0,     0,   503,   504,     0,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,   513,   514,     0,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   188,   521,
     522,     0,   523,   524,   525,   526,     0,     0,     0,     0,
       0,   527,   528,     0,     0,     0,   529,   530,   531,   532,
       0,   533,   534,     0,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   542,   543,
       0,     0,     0,     0,     0,   544,     0,   545,     0,     0,
     546,     0,     0,     0,   547,     0,   548,   549,   550,   551,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   559,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,     0,     0,     0,   564,   565,   566,     0,     0,   567,
     568,   569,   570,     0,     0,   571,     0,   572,     0,     0,
       0,     0,     0,     0,   573,   574,     0,     0,   575,     0,
     576,     0,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,   191,   192,     0,   193,   194,   195,
     196,   197,     0,     0,   198,     0,     0,     0,     0,   199,
       0,     0,   200,     0,   201,   202,   203,   204,   205,   206,
       0,   207,     0,     0,     0,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,   213,     0,   214,   215,
       0,     0,   216,     0,     0,   217,   218,     0,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,     0,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,     0,   242,   243,  2142,   244,
     245,   246,   247,   248,     0,     0,     0,   249,     0,     0,
       0,     0,   250,     0,     0,   251,     0,     0,     0,   252,
     253,   254,     0,     0,   255,     0,     0,     0,     0,   256,
     257,     0,     0,     0,     0,   258,   259,     0,   260,     0,
       0,     0,     0,     0,   261,   262,   263,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,   269,     0,     0,
       0,   270,     0,   271,   272,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,   279,   280,   281,   282,   283,
       0,     0,   284,   285,   286,   287,   288,     0,     0,   289,
     290,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,     0,     0,   298,   299,     0,   300,  2143,     0,
       0,   301,     0,   302,   303,   304,   305,     0,   306,     0,
     307,     0,     0,     0,   308,   309,     0,   310,     0,     0,
     311,   312,     0,     0,     0,   313,   314,   315,   316,     0,
       0,   317,   318,   319,  1550,     0,   320,     0,     0,     0,
       0,   321,   322,   323,     0,     0,     0,   324,     0,     0,
       0,   325,   326,     0,   327,   328,     0,     0,     0,   329,
       0,   330,  1551,     0,   331,   332,     0,     0,   333,     0,
       0,   334,   335,     0,     0,     0,     0,     0,   336,   337,
       0,   338,     0,   339,     0,   340,   341,     0,     0,     0,
       0,     0,     0,     0,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,     0,   368,   369,     0,     0,     0,     0,
     370,   371,   372,   373,   374,   375,     0,     0,   376,   377,
       0,   378,     0,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,     0,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,     0,   396,   397,
       0,     0,     0,   398,     0,   399,   400,     0,   401,   402,
     403,     0,     0,   404,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   405,   406,   407,     0,   408,     0,   409,
       0,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,     0,   420,     0,   421,   422,   423,     0,   424,     0,
     425,   426,   427,   428,   429,     0,   430,   431,   432,     0,
       0,   433,     0,     0,     0,   434,   435,     0,   436,   437,
       0,     0,   438,   439,   440,   441,   442,     0,   443,   444,
       0,   445,   446,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,     0,   456,     0,   457,   458,     0,
     459,   460,   461,     0,   462,     0,     0,   463,   464,   465,
     466,     0,   467,     0,   468,   469,   470,   471,   472,     0,
     473,   474,     0,     0,     0,   475,   476,   477,   478,     0,
       0,     0,   479,     0,     0,     0,   480,     0,   481,   482,
     483,   484,     0,   485,   486,   487,   488,   489,  2145,     0,
       0,     0,     0,   490,   491,   492,     0,   493,     0,     0,
     494,     0,     0,   495,     0,   496,     0,   497,   498,   499,
     500,   501,   502,     0,     0,   503,   504,     0,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,   513,
     514,     0,   515,   516,     0,     0,   517,   518,   519,   520,
       0,     0,   521,   522,     0,   523,   524,   525,   526,     0,
       0,     0,     0,     0,   527,   528,     0,     0,     0,   529,
     530,   531,   532,     0,   533,   534,     0,   535,   536,     0,
     537,   538,     0,     0,   539,     0,     0,   540,     0,   541,
       0,   542,   543,     0,     0,     0,     0,     0,   544,     0,
     545,     0,     0,   546,     0,     0,     0,   547,     0,   548,
     549,   550,   551,     0,     0,     0,     0,     0,     0,   552,
     553,   554,     0,   555,   556,   557,   558,     0,     0,   559,
       0,     0,     0,   560,     0,   561,   562,     0,   563,     0,
       0,     0,     0,     0,     0,     0,     0,   564,   565,   566,
       0,     0,   567,   568,   569,   570,     0,     0,   571,     0,
     572,     0,     0,     0,     0,     0,     0,   573,   574,     0,
       0,   575,     0,   576,     0,   577,   578,     0,     0,     0,
     579,   580,   581,   582,   583,   584,   585,   586,     0,   587,
     588,   589,   590,   591,   592,   593,   594,   191,   192,     0,
     193,   194,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,     0,     0,   200,     0,   201,   202,   203,
     204,   205,   206,     0,   207,     0,     0,  1157,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,     0,     0,   217,   218,
       0,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,     0,     0,
     249,     0,     0,     0,     0,   250,     0,     0,   251,     0,
       0,     0,   252,   253,   254,     0,     0,   255,     0,     0,
       0,     0,   256,   257,     0,     0,     0,  1158,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,     0,     0,   284,   285,   286,   287,   288,
       0,     0,   289,   290,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,     0,     0,   298,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   303,   304,   305,
       0,   306,     0,   307,     0,     0,     0,   308,   309,     0,
     310,     0,     0,   311,   312,     0,     0,     0,   313,   314,
     315,   316,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,     0,   334,   335,   945,     0,     0,     0,
       0,   336,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,     0,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,     0,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   374,   375,     0,
       0,   376,   377,     0,   378,     0,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,     0,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
       0,   396,   397,     0,     0,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,     0,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,     0,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   430,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   462,     0,     0,
     463,   464,   465,   466,     0,   467,     0,   468,   469,   470,
     471,   472,     0,   473,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,     0,     0,   503,   504,
       0,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,   513,   514,     0,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   188,   521,   522,     0,   523,   524,
     525,   526,     0,     0,     0,     0,     0,   527,   528,     0,
       0,     0,   529,   530,   531,   532,     0,   533,   534,     0,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   542,   543,     0,     0,     0,     0,
       0,   544,     0,   545,     0,     0,   546,     0,     0,     0,
     547,     0,   548,   549,   550,   551,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   559,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,     0,     0,     0,
     564,   565,   566,     0,     0,   567,   568,   569,   570,     0,
       0,   571,     0,   572,     0,     0,     0,     0,     0,     0,
     573,   574,     0,     0,   575,     0,   576,     0,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
     191,   192,     0,   193,   194,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,     0,     0,   200,     0,
     201,   202,   203,   204,   205,   206,     0,   207,     0,     0,
       0,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,   213,     0,   214,   215,     0,     0,   216,     0,
       0,   217,   218,     0,   219,   220,   221,     0,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,     0,   242,   243,     0,   244,   245,   246,   247,   248,
       0,     0,     0,   249,     0,     0,     0,     0,   250,     0,
       0,   251,     0,     0,     0,   252,   253,   254,     0,     0,
     255,     0,     0,     0,     0,   256,   257,     0,     0,     0,
       0,   258,   259,     0,   260,     0,     0,     0,     0,     0,
     261,   262,   263,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,   269,     0,     0,     0,   270,     0,   271,
     272,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,   279,   280,   281,   282,   283,     0,     0,   284,   285,
     286,   287,   288,     0,     0,   289,   290,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,     0,     0,
     298,   299,     0,   300,     0,     0,     0,   301,     0,   302,
     303,   304,   305,     0,   306,     0,   307,     0,     0,     0,
     308,   309,     0,   310,     0,     0,   311,   312,     0,     0,
       0,   313,   314,   315,   316,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,     0,   321,   322,   323,
       0,     0,     0,   324,     0,     0,     0,   325,   326,     0,
     327,   328,     0,     0,     0,   329,     0,   330,     0,     0,
     331,   332,     0,     0,   333,     0,     0,   334,   335,     0,
       0,     0,     0,     0,   336,   337,     0,   338,     0,   339,
       0,   340,   341,     0,     0,  1424,     0,     0,     0,     0,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,     0,
     368,   369,     0,     0,     0,     0,   370,   371,   372,   373,
     374,   375,     0,     0,   376,   377,     0,   378,     0,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,     0,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,     0,   396,   397,     0,     0,  1425,   398,
       0,   399,   400,     0,   401,   402,   403,     0,     0,   404,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   405,
     406,   407,   843,   408,     0,   409,     0,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,     0,   420,     0,
     421,   422,   423,     0,   424,     0,   425,   426,   427,   428,
     429,     0,   430,   431,   432,     0,     0,   433,     0,     0,
       0,   434,   435,     0,   436,   437,     0,     0,   438,   439,
     440,   441,   442,     0,   443,   444,     0,   445,   446,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
       0,   456,     0,   457,   458,     0,   459,   460,   461,     0,
     462,     0,     0,   463,   464,   465,   466,     0,   467,     0,
     468,   469,   470,   471,   472,     0,   473,   474,     0,     0,
       0,   475,   476,   477,   478,     0,     0,     0,   479,     0,
       0,     0,   480,     0,   481,   482,   483,   484,     0,   485,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,   492,     0,   493,     0,     0,   494,     0,     0,   495,
       0,   496,     0,   497,   498,   499,   500,   501,   502,     0,
       0,   503,   504,     0,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,   513,   514,     0,   515,   516,
       0,     0,   517,   518,   519,   520,     0,     0,   521,   522,
       0,   523,   524,   525,   526,     0,     0,     0,     0,     0,
     527,   528,     0,     0,     0,   529,   530,   531,   532,  1426,
     533,   534,     0,   535,   536,     0,   537,   538,     0,     0,
     539,     0,     0,   540,     0,   541,     0,   542,   543,     0,
       0,     0,     0,     0,   544,     0,   545,     0,     0,   546,
       0,     0,     0,   547,     0,   548,   549,   550,   551,     0,
       0,     0,     0,     0,     0,   552,   553,   554,     0,   555,
     556,   557,   558,     0,     0,   559,     0,     0,     0,   560,
       0,   561,   562,     0,   563,     0,     0,     0,     0,     0,
       0,     0,     0,   564,   565,   566,     0,     0,   567,   568,
     569,   570,     0,     0,   571,     0,   572,     0,     0,     0,
       0,     0,     0,   573,   574,     0,     0,   575,     0,   576,
       0,   577,   578,     0,     0,     0,   579,   580,   581,   582,
     583,   584,   585,   586,     0,   587,   588,   589,   590,   591,
     592,   593,   594,   191,   192,     0,   193,   194,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,     0,
       0,   200,     0,   201,   202,   203,   204,   205,   206,     0,
     207,     0,     0,     0,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,   213,     0,   214,   215,     0,
       0,   216,     0,     0,   217,   218,     0,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,   243,     0,   244,   245,
     246,   247,   248,     0,     0,     0,   249,     0,     0,     0,
       0,   250,   944,     0,   251,     0,     0,     0,   252,   253,
     254,     0,     0,   255,     0,     0,     0,     0,   256,   257,
       0,     0,     0,     0,   258,   259,     0,   260,     0,     0,
       0,     0,     0,   261,   262,   263,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,   269,     0,     0,     0,
     270,     0,   271,   272,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,   279,   280,   281,   282,   283,     0,
       0,   284,   285,   286,   287,   288,     0,     0,   289,   290,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,     0,     0,   298,   299,     0,   300,     0,     0,     0,
     301,     0,   302,   303,   304,   305,     0,   306,     0,   307,
       0,     0,     0,   308,   309,     0,   310,     0,     0,   311,
     312,     0,     0,     0,   313,   314,   315,   316,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,     0,
     321,   322,   323,     0,     0,     0,   324,     0,     0,     0,
     325,   326,     0,   327,   328,     0,     0,     0,   329,     0,
     330,     0,     0,   331,   332,     0,     0,   333,     0,     0,
     334,   335,   945,     0,     0,     0,     0,   336,   337,     0,
     338,     0,   339,     0,   340,   341,     0,     0,     0,     0,
       0,     0,     0,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,     0,   368,   369,     0,     0,     0,     0,   370,
     371,   372,   373,   374,   375,     0,     0,   376,   377,     0,
     378,     0,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,     0,   389,   390,     0,     0,   391,
     392,   393,   394,   395,     0,     0,     0,   396,   397,     0,
       0,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   405,   406,   407,     0,   408,     0,   409,     0,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
       0,   420,     0,   421,   422,   423,     0,   424,     0,   425,
     426,   427,   428,   429,     0,   430,   431,   432,     0,     0,
     433,     0,     0,     0,   434,   435,     0,   436,   437,     0,
       0,   438,   439,   440,   441,   442,     0,   443,   444,     0,
     445,   446,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,     0,   456,     0,   457,   458,     0,   459,
     460,   461,     0,   462,     0,     0,   463,   464,   465,   466,
       0,   467,     0,   468,   469,   470,   471,   472,     0,   473,
     474,     0,     0,     0,   475,   476,   477,   478,     0,     0,
       0,   479,     0,     0,     0,   480,     0,   481,   482,   483,
     484,     0,   485,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,   492,     0,   493,     0,     0,   494,
       0,     0,   495,     0,   496,     0,   497,   498,   499,   500,
     501,   502,     0,     0,   503,   504,     0,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,   513,   514,
       0,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     188,   521,   522,     0,   523,   524,   525,   526,     0,     0,
       0,     0,     0,   527,   528,     0,     0,     0,   529,   530,
     531,   532,     0,   533,   534,     0,   535,   536,     0,   537,
     538,     0,     0,   539,     0,     0,   540,     0,   541,     0,
     946,   543,     0,     0,     0,     0,     0,   544,     0,   545,
       0,     0,   546,     0,     0,     0,   547,     0,   548,   549,
     550,   551,     0,     0,     0,     0,     0,     0,   552,   553,
     554,     0,   555,   556,   557,   558,     0,     0,   559,     0,
       0,     0,   560,     0,   561,   562,     0,   563,     0,     0,
       0,     0,     0,     0,     0,     0,   564,   565,   566,     0,
       0,   567,   568,   569,   570,     0,     0,   571,     0,   572,
       0,     0,     0,     0,     0,     0,   573,   574,     0,     0,
     575,     0,   576,     0,   577,   578,     0,     0,     0,   579,
     580,   581,   582,   583,   584,   585,   586,     0,   587,   588,
     589,   590,   591,   592,   593,   594,   191,   192,     0,   193,
     194,   195,   196,   197,     0,     0,   198,     0,     0,     0,
       0,   199,     0,     0,   200,     0,   201,   202,   203,   204,
     205,   206,     0,   207,     0,     0,     0,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,   213,     0,
     214,   215,     0,     0,   216,     0,     0,   217,   218,     0,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,     0,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,     0,   242,   243,
       0,   244,   245,   246,   247,   248,     0,     0,     0,   249,
       0,     0,     0,     0,   250,   944,     0,   251,     0,     0,
       0,   252,   253,   254,     0,     0,   255,     0,     0,     0,
       0,   256,   257,     0,     0,     0,     0,   258,   259,     0,
     260,     0,     0,     0,     0,     0,   261,   262,   263,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,   269,
       0,     0,     0,   270,     0,   271,   272,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,   279,   280,   281,
     282,   283,     0,     0,   284,   285,   286,   287,   288,     0,
       0,   289,   290,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,     0,     0,   298,   299,     0,   300,
       0,     0,     0,   301,     0,   302,   303,   304,   305,     0,
     306,     0,   307,     0,     0,     0,   308,   309,     0,   310,
       0,     0,   311,   312,     0,     0,     0,   313,   314,   315,
     316,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,     0,   321,   322,   323,     0,     0,     0,   324,
       0,     0,     0,   325,   326,     0,   327,   328,     0,     0,
       0,   329,     0,   330,     0,     0,   331,   332,     0,     0,
     333,     0,     0,   334,   335,   945,     0,     0,     0,     0,
     336,   337,     0,   338,     0,   339,     0,   340,   341,     0,
       0,     0,     0,     0,     0,     0,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,     0,   368,   369,     0,     0,
       0,     0,   370,   371,   372,   373,   374,   375,     0,     0,
     376,   377,     0,   378,     0,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,     0,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,     0,
     396,   397,     0,     0,     0,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   405,   406,   407,     0,   408,
       0,   409,     0,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,     0,   420,     0,   421,   422,   423,     0,
     424,     0,   425,   426,   427,   428,   429,     0,   430,   431,
     432,     0,     0,   433,     0,     0,     0,   434,   435,     0,
     436,   437,     0,     0,   438,   439,   440,   441,   442,     0,
     443,   444,     0,   445,   446,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,     0,   456,     0,   457,
     458,     0,   459,   460,   461,     0,   462,     0,     0,   463,
     464,   465,   466,     0,   467,     0,   468,   469,   470,   471,
     472,     0,   473,   474,     0,     0,     0,   475,   476,   477,
     478,     0,     0,     0,   479,     0,     0,     0,   480,     0,
     481,   482,   483,   484,     0,   485,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,   492,     0,   493,
       0,     0,   494,     0,     0,   495,     0,   496,     0,   497,
     498,   499,   500,   501,   502,     0,     0,   503,   504,     0,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,   513,   514,     0,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   188,   521,   522,     0,   523,   524,   525,
     526,     0,     0,     0,     0,     0,   527,   528,     0,     0,
       0,   529,   530,   531,   532,     0,   533,   534,     0,   535,
     536,     0,   537,   538,     0,     0,   539,     0,     0,   540,
       0,   541,     0,   542,   543,     0,     0,     0,     0,     0,
     544,     0,   545,     0,     0,   546,     0,     0,     0,   547,
       0,   548,   549,   550,   551,     0,     0,     0,     0,     0,
       0,   552,   553,   554,     0,   555,   556,   557,   558,     0,
       0,   559,     0,     0,     0,   560,     0,   561,   562,     0,
     563,     0,     0,     0,     0,     0,     0,     0,     0,   564,
     565,   566,     0,     0,   567,   568,   569,   570,     0,     0,
     571,     0,   572,     0,     0,     0,     0,     0,     0,   573,
     574,     0,     0,   575,     0,   576,     0,   577,   578,     0,
       0,     0,   579,   580,   581,   582,   583,   584,   585,   586,
       0,   587,   588,   589,   590,   591,   592,   593,   594,   191,
     192,     0,   193,   194,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,     0,     0,   200,     0,   201,
     202,   203,   204,   205,   206,     0,   207,     0,     0,     0,
     208,  1227,     0,     0,   209,     0,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,     0,     0,
     217,   218,     0,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
       0,     0,   249,     0,     0,     0,     0,   250,     0,     0,
     251,     0,     0,     0,   252,   253,   254,     0,     0,   255,
       0,     0,     0,     0,   256,   257,     0,     0,     0,     0,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   280,   281,   282,   283,     0,     0,   284,   285,   286,
     287,   288,     0,     0,   289,   290,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,     0,     0,   298,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   303,
     304,   305,     0,   306,     0,   307,     0,     0,     0,   308,
     309,     0,   310,  1228,     0,   311,   312,     0,     0,     0,
     313,   314,   315,   316,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,     0,   321,   322,   323,     0,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,     0,   334,   335,     0,     0,
       0,     0,     0,   336,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,     0,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,     0,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   374,
     375,     0,     0,   376,   377,     0,   378,     0,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
       0,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,     0,   396,   397,     0,     0,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   405,   406,
     407,     0,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,     0,   420,     0,   421,
     422,   423,     0,   424,     0,   425,   426,   427,   428,   429,
       0,   430,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   443,   444,     0,   445,   446,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   462,
       0,     0,   463,   464,   465,   466,     0,   467,     0,   468,
     469,   470,   471,   472,     0,   473,   474,     0,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
       0,   480,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,     0,     0,
     503,   504,     0,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,   513,   514,     0,   515,   516,     0,
       0,   517,   518,   519,   520,     0,  1229,   521,   522,     0,
     523,   524,   525,   526,     0,     0,     0,     0,     0,   527,
     528,     0,     0,     0,   529,   530,   531,   532,     0,   533,
     534,     0,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,     0,   541,     0,   542,   543,     0,     0,
       0,     0,     0,   544,     0,   545,     0,     0,   546,     0,
       0,     0,   547,     0,   548,   549,   550,   551,     0,     0,
       0,     0,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   559,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,   564,   565,   566,     0,     0,   567,   568,   569,
     570,     0,     0,   571,     0,   572,     0,     0,     0,     0,
       0,     0,   573,   574,     0,     0,   575,     0,   576,     0,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,   586,     0,   587,   588,   589,   590,   591,   592,
     593,   594,   191,   192,     0,   193,   194,   195,   196,   197,
    1830,     0,   198,     0,     0,     0,     0,   199,     0,     0,
     200,     0,   201,   202,   203,   204,   205,   206,     0,   207,
       0,     0,     0,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,   213,     0,   214,   215,     0,     0,
     216,     0,     0,   217,   218,     0,   219,   220,   221,     0,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,     0,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,     0,   242,   243,     0,   244,   245,   246,
     247,   248,     0,     0,     0,   249,     0,     0,     0,     0,
     250,     0,     0,   251,     0,     0,     0,   252,   253,   254,
       0,     0,   255,     0,     0,     0,     0,   256,   257,     0,
       0,     0,     0,   258,   259,     0,   260,     0,     0,     0,
       0,     0,   261,   262,   263,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,   269,     0,     0,     0,   270,
       0,   271,   272,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,   279,   280,   281,   282,   283,     0,     0,
     284,   285,   286,   287,   288,     0,     0,   289,   290,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
       0,     0,   298,   299,     0,   300,     0,     0,     0,   301,
       0,   302,   303,   304,   305,     0,   306,     0,   307,     0,
       0,     0,   308,   309,     0,   310,     0,     0,   311,   312,
       0,     0,     0,   313,   314,   315,   316,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,     0,     0,   324,     0,     0,     0,   325,
     326,     0,   327,   328,     0,     0,     0,   329,     0,   330,
       0,     0,   331,   332,     0,     0,   333,     0,     0,   334,
     335,   945,     0,     0,     0,     0,   336,   337,     0,   338,
       0,   339,     0,   340,   341,     0,     0,     0,     0,     0,
       0,     0,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,     0,   368,   369,     0,     0,     0,     0,   370,   371,
     372,   373,   374,   375,     0,     0,   376,   377,     0,   378,
       0,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,     0,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,     0,   396,   397,     0,     0,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   405,   406,   407,     0,   408,     0,   409,     0,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,     0,
     420,     0,   421,   422,   423,     0,   424,     0,   425,   426,
     427,   428,   429,     0,   430,   431,   432,     0,     0,   433,
       0,     0,     0,   434,   435,     0,   436,   437,     0,     0,
     438,   439,   440,   441,   442,     0,   443,   444,     0,   445,
     446,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,     0,   456,     0,   457,   458,     0,   459,   460,
     461,     0,   462,     0,     0,   463,   464,   465,   466,     0,
     467,     0,   468,   469,   470,   471,   472,     0,   473,   474,
       0,     0,     0,   475,   476,   477,   478,     0,     0,     0,
     479,     0,     0,     0,   480,     0,   481,   482,   483,   484,
       0,   485,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,   492,     0,   493,     0,     0,   494,     0,
       0,   495,     0,   496,     0,   497,   498,   499,   500,   501,
     502,     0,     0,   503,   504,     0,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,   513,   514,     0,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   188,
     521,   522,     0,   523,   524,   525,   526,     0,     0,     0,
       0,     0,   527,   528,     0,     0,     0,   529,   530,   531,
     532,     0,   533,   534,     0,   535,   536,     0,   537,   538,
       0,     0,   539,     0,     0,   540,     0,   541,     0,   542,
     543,     0,     0,     0,     0,     0,   544,     0,   545,     0,
       0,   546,     0,     0,     0,   547,     0,   548,   549,   550,
     551,     0,     0,     0,     0,     0,     0,   552,   553,   554,
       0,   555,   556,   557,   558,     0,     0,   559,     0,     0,
       0,   560,     0,   561,   562,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,   564,   565,   566,     0,     0,
     567,   568,   569,   570,     0,     0,   571,     0,   572,     0,
       0,     0,     0,     0,     0,   573,   574,     0,     0,   575,
       0,   576,     0,   577,   578,     0,     0,     0,   579,   580,
     581,   582,   583,   584,   585,   586,     0,   587,   588,   589,
     590,   591,   592,   593,   594,   191,   192,     0,   193,   194,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,   200,     0,   201,   202,   203,   204,   205,
     206,     0,   207,     0,     0,  1133,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,     0,     0,   217,   218,     0,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,     0,     0,   249,     0,
       0,     0,     0,   250,     0,     0,   251,     0,     0,     0,
     252,   253,   254,     0,     0,   255,     0,     0,     0,     0,
     256,   257,     0,     0,     0,     0,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,     0,     0,   284,   285,   286,   287,   288,     0,     0,
     289,   290,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,     0,   298,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   303,   304,   305,     0,   306,
       0,   307,     0,     0,     0,   308,   309,     0,   310,     0,
       0,   311,   312,     0,     0,     0,   313,   314,   315,   316,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,     0,   321,   322,   323,     0,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,     0,   334,   335,   945,     0,     0,     0,     0,   336,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
       0,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,     0,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   374,   375,     0,     0,   376,
     377,     0,   378,     0,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,     0,   389,   390,     0,
       0,   391,   392,   393,   394,   395,     0,     0,     0,   396,
     397,     0,     0,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,     0,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,     0,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   430,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   462,     0,     0,   463,   464,
     465,   466,     0,   467,     0,   468,   469,   470,   471,   472,
       0,   473,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,     0,     0,   503,   504,     0,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
     513,   514,     0,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   188,   521,   522,     0,   523,   524,   525,   526,
       0,     0,     0,     0,     0,   527,   528,     0,     0,     0,
     529,   530,   531,   532,     0,   533,   534,     0,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   542,   543,     0,     0,     0,     0,     0,   544,
       0,   545,     0,     0,   546,     0,     0,     0,   547,     0,
     548,   549,   550,   551,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     559,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,     0,     0,     0,   564,   565,
     566,     0,     0,   567,   568,   569,   570,     0,     0,   571,
       0,   572,     0,     0,     0,     0,     0,     0,   573,   574,
       0,     0,   575,     0,   576,     0,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,   191,   192,
       0,   193,   194,   195,   196,   197,     0,     0,   198,     0,
       0,     0,     0,   199,     0,     0,   200,     0,   201,   202,
     203,   204,   205,   206,     0,   207,     0,     0,     0,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
     213,     0,   214,   215,     0,     0,   216,     0,     0,   217,
     218,     0,   219,   220,   221,     0,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,     0,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,     0,
     242,   243,     0,   244,   245,   246,   247,   248,     0,     0,
       0,   249,     0,     0,     0,     0,   250,     0,     0,   251,
       0,     0,     0,   252,   253,   254,     0,     0,   255,     0,
       0,     0,     0,   256,   257,     0,     0,     0,     0,   258,
     259,     0,   260,     0,     0,     0,     0,     0,   261,   262,
     263,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,   269,     0,     0,     0,   270,     0,   271,   272,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,   279,
     280,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,     0,     0,   289,   290,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,     0,     0,   298,   299,
       0,   300,     0,     0,     0,   301,     0,   302,   303,   304,
     305,     0,   306,     0,   307,     0,     0,     0,   308,   309,
       0,   310,     0,     0,   311,   312,     0,     0,     0,   313,
     314,   315,   316,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,     0,   321,   322,   323,     0,     0,
       0,   324,     0,     0,     0,   325,   326,     0,   327,   328,
       0,     0,     0,   329,     0,   330,     0,     0,   331,   332,
       0,     0,   333,     0,     0,   334,   335,   945,     0,     0,
       0,     0,   336,   337,     0,   338,     0,   339,     0,   340,
     341,     0,     0,     0,     0,     0,     0,     0,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,     0,   368,   369,
       0,     0,     0,     0,   370,   371,   372,   373,   374,   375,
       0,     0,   376,   377,     0,   378,     0,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,     0,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,     0,   396,   397,     0,     0,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,     0,   404,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   405,   406,   407,
       0,   408,     0,   409,     0,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,     0,   420,     0,   421,   422,
     423,     0,   424,     0,   425,   426,   427,   428,   429,     0,
     430,   431,   432,     0,     0,   433,     0,     0,     0,   434,
     435,     0,   436,   437,     0,     0,   438,   439,   440,   441,
     442,     0,   443,   444,     0,   445,   446,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,     0,   456,
       0,   457,   458,     0,   459,   460,   461,     0,   462,     0,
       0,   463,   464,   465,   466,     0,   467,     0,   468,   469,
     470,   471,   472,     0,   473,   474,     0,     0,     0,   475,
     476,   477,   478,     0,     0,     0,   479,     0,     0,     0,
     480,     0,   481,   482,   483,   484,     0,   485,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,   492,
       0,   493,     0,     0,   494,     0,     0,   495,     0,   496,
       0,   497,   498,   499,   500,   501,   502,     0,     0,   503,
     504,     0,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,   513,   514,     0,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   188,   521,   522,     0,   523,
     524,   525,   526,     0,     0,     0,     0,     0,   527,   528,
       0,     0,     0,   529,   530,   531,   532,     0,   533,   534,
       0,   535,   536,     0,   537,   538,     0,     0,   539,     0,
       0,   540,     0,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   544,     0,   545,     0,     0,   546,     0,     0,
       0,   547,     0,   548,   549,   550,   551,     0,     0,     0,
       0,     0,     0,   552,   553,   554,     0,   555,   556,   557,
     558,     0,     0,   559,     0,     0,     0,   560,     0,   561,
     562,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,   564,   565,   566,     0,     0,   567,   568,   569,   570,
       0,     0,   571,     0,   572,     0,     0,     0,     0,     0,
       0,   573,   574,     0,     0,   575,     0,   576,     0,   577,
     578,     0,     0,     0,   579,   580,   581,   582,   583,   584,
     585,   586,     0,   587,   588,   589,   590,   591,   592,   593,
     594,   191,   192,     0,   193,   194,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,     0,     0,   200,
       0,   201,   202,   203,   204,   205,   206,     0,   207,     0,
       0,     0,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
       0,     0,   217,   218,     0,   219,   220,   221,     0,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,  4820,     0,     0,   249,     0,     0,     0,     0,   250,
       0,     0,   251,     0,     0,     0,   252,   253,   254,     0,
       0,   255,     0,     0,     0,     0,   256,   257,     0,     0,
       0,     0,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,     0,  4821,   284,
     285,   286,   287,   288,     0,     0,   289,   290,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
       0,   298,   299,     0,   300,     0,     0,     0,   301,     0,
     302,   303,   304,   305,     0,   306,     0,   307,     0,     0,
       0,   308,   309,     0,   310,     0,     0,   311,   312,     0,
       0,     0,   313,   314,   315,   316,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,     0,   321,   322,
     323,     0,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,     0,   333,     0,     0,   334,   335,
       0,     0,     0,     0,     0,   336,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,     0,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
       0,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   374,   375,     0,     0,   376,   377,     0,   378,     0,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,     0,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,     0,   396,   397,     0,     0,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,     0,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,     0,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   430,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   462,     0,     0,   463,   464,   465,   466,     0,   467,
       0,   468,   469,   470,   471,   472,     0,   473,   474,     0,
       0,     0,   475,   476,   477,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
       0,     0,   503,   504,     0,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,   513,   514,     0,   515,
     516,     0,     0,   517,   518,   519,   520,     0,     0,   521,
     522,     0,   523,   524,   525,   526,     0,     0,     0,     0,
       0,   527,   528,     0,     0,     0,   529,   530,   531,   532,
       0,   533,   534,     0,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   542,   543,
       0,     0,     0,     0,     0,   544,     0,   545,     0,     0,
     546,     0,     0,     0,   547,     0,   548,   549,   550,   551,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   559,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,     0,     0,     0,   564,   565,   566,     0,     0,   567,
     568,   569,   570,     0,     0,   571,     0,   572,     0,     0,
       0,     0,     0,     0,   573,   574,     0,     0,   575,     0,
     576,     0,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,   191,   192,     0,   193,   194,   195,
     196,   197,     0,     0,   198,     0,     0,     0,     0,   199,
       0,     0,   200,     0,   201,   202,   203,   204,   205,   206,
       0,   207,     0,     0,     0,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,   213,     0,   214,   215,
       0,     0,   216,     0,     0,   217,   218,     0,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,     0,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,     0,   242,   243,     0,   244,
     245,   246,   247,   248,     0,     0,     0,   249,     0,     0,
       0,     0,   250,     0,     0,   251,     0,     0,     0,   252,
     253,   254,     0,     0,   255,     0,     0,     0,     0,   256,
     257,     0,     0,     0,     0,   258,   259,     0,   260,     0,
       0,     0,     0,     0,   261,   262,   263,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,   269,     0,     0,
       0,   270,     0,   271,   272,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,   279,   280,   281,   282,   283,
       0,     0,   284,   285,   286,   287,   288,     0,     0,   289,
     290,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,     0,     0,   298,   299,     0,   300,     0,     0,
       0,   301,     0,   302,   303,   304,   305,     0,   306,     0,
     307,     0,     0,     0,   308,   309,     0,   310,     0,     0,
     311,   312,     0,     0,     0,   313,   314,   315,   316,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
       0,   321,   322,   323,     0,     0,     0,   324,     0,     0,
       0,   325,   326,     0,   327,   328,     0,     0,     0,   329,
       0,   330,     0,     0,   331,   332,     0,     0,   333,     0,
       0,   334,   335,     0,     0,     0,     0,     0,   336,   337,
       0,   338,     0,   339,     0,   340,   341,     0,     0,     0,
       0,     0,     0,     0,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,     0,   368,   369,     0,     0,     0,     0,
     370,   371,   372,   373,   374,   375,     0,     0,   376,   377,
       0,   378,     0,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,     0,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,     0,   396,   397,
       0,     0,     0,   398,     0,   399,   400,     0,   401,   402,
     403,     0,     0,   404,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   405,   406,   407,     0,   408,     0,   409,
       0,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,     0,   420,     0,   421,   422,   423,     0,   424,     0,
     425,   426,   427,   428,   429,     0,   430,   431,   432,     0,
       0,   433,     0,     0,     0,   434,   435,     0,   436,   437,
       0,     0,   438,   439,   440,   441,   442,     0,   443,   444,
       0,   445,   446,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,     0,   456,     0,   457,   458,     0,
     459,   460,   461,     0,   462,     0,     0,   463,   464,   465,
     466,     0,   467,     0,   468,   469,   470,   471,   472,     0,
     473,   474,     0,     0,     0,   475,   476,   477,   478,     0,
       0,     0,   479,     0,     0,     0,   480,     0,   481,   482,
     483,   484,     0,   485,   486,   487,   488,   489,     0,     0,
       0,   717,     0,   490,   491,   492,     0,   493,     0,     0,
     494,     0,     0,   495,     0,   496,     0,   497,   498,   499,
     500,   501,   502,     0,     0,   503,   504,     0,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,   513,
     514,     0,   515,   516,     0,     0,   517,   518,   519,   520,
       0,     0,   521,   522,     0,   523,   524,   525,   526,     0,
       0,     0,     0,     0,   527,   528,     0,     0,     0,   529,
     530,   531,   532,     0,   533,   534,     0,   535,   536,     0,
     537,   538,     0,     0,   539,     0,     0,   540,     0,   541,
       0,   542,   543,     0,     0,     0,     0,     0,   544,     0,
     545,     0,     0,   546,     0,     0,     0,   547,     0,   548,
     549,   550,   551,     0,     0,     0,     0,     0,     0,   552,
     553,   554,     0,   555,   556,   557,   558,     0,     0,   559,
       0,     0,     0,   560,     0,   561,   562,     0,   563,     0,
       0,     0,     0,     0,     0,     0,     0,   564,   565,   566,
       0,     0,   567,   568,   569,   570,     0,     0,   571,     0,
     572,     0,     0,     0,     0,     0,     0,   573,   574,     0,
       0,   575,     0,   576,     0,   577,   578,     0,     0,     0,
     579,   580,   581,   582,   583,   584,   585,   586,     0,   587,
     588,   589,   590,   591,   592,   593,   594,   191,   192,     0,
     193,   194,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,     0,     0,   200,     0,   201,   202,   203,
     204,   205,   206,     0,   207,     0,     0,     0,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,     0,     0,   217,   218,
       0,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,     0,     0,
     249,     0,     0,     0,     0,   250,     0,     0,   251,     0,
       0,     0,   252,   253,   254,     0,     0,   255,     0,     0,
       0,     0,   256,   257,     0,     0,     0,     0,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,     0,     0,   284,   285,   286,   287,   288,
       0,     0,   289,   290,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,     0,     0,   298,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   303,   304,   305,
       0,   306,     0,   307,     0,     0,     0,   308,   309,     0,
     310,     0,     0,   311,   312,     0,     0,     0,   313,   314,
     315,   316,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,     0,   334,   335,     0,     0,     0,     0,
       0,   336,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,     0,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,     0,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   374,   375,     0,
       0,   376,   377,     0,   378,     0,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,     0,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
       0,   396,   397,     0,     0,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,     0,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,     0,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   430,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   462,     0,     0,
     463,   464,   465,   466,     0,   467,     0,   468,   469,   470,
     471,   472,     0,   473,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,     0,     0,   503,   504,
       0,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,   513,   514,     0,   515,   516,     0,     0,   517,
     518,   519,   520,     0,     0,   521,   522,     0,   523,   524,
     525,   526,     0,     0,     0,     0,     0,   527,   528,     0,
       0,     0,   529,   530,   531,   532,     0,   533,   534,     0,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   542,   543,     0,     0,     0,     0,
       0,   544,     0,   545,     0,     0,   546,     0,     0,     0,
     547,     0,   548,   549,   550,   551,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   559,     0,     0,     0,   560,     0,   561,   562,
       0,   563,   774,     0,     0,     0,     0,     0,     0,     0,
     564,   565,   566,     0,     0,   567,   568,   569,   570,     0,
       0,   571,     0,   572,     0,     0,     0,     0,     0,     0,
     573,   574,     0,     0,   575,     0,   576,     0,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
     191,   192,     0,   193,   194,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,     0,     0,   200,     0,
     201,   202,   203,   204,   205,   206,     0,   207,     0,     0,
       0,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,   213,     0,   214,   215,     0,     0,   216,     0,
       0,   217,   218,     0,   219,   220,   221,     0,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,     0,   242,   243,     0,   244,   245,   246,   247,   248,
       0,     0,     0,   249,     0,     0,     0,     0,   250,     0,
       0,   251,     0,     0,     0,   252,   253,   254,     0,     0,
     255,     0,     0,     0,     0,   256,   257,     0,     0,     0,
    1163,   258,   259,     0,   260,     0,     0,     0,     0,     0,
     261,   262,   263,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,   269,     0,     0,     0,   270,     0,   271,
     272,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,   279,   280,   281,   282,   283,     0,     0,   284,   285,
     286,   287,   288,     0,     0,   289,   290,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,     0,     0,
     298,   299,     0,   300,     0,     0,     0,   301,     0,   302,
     303,   304,   305,     0,   306,     0,   307,     0,     0,     0,
     308,   309,     0,   310,     0,     0,   311,   312,     0,     0,
       0,   313,   314,   315,   316,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,     0,   321,   322,   323,
       0,     0,     0,   324,     0,     0,     0,   325,   326,     0,
     327,   328,     0,     0,     0,   329,     0,   330,     0,     0,
     331,   332,     0,     0,   333,     0,     0,   334,   335,     0,
       0,     0,     0,     0,   336,   337,     0,   338,     0,   339,
       0,   340,   341,     0,     0,     0,     0,     0,     0,     0,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,     0,
     368,   369,     0,     0,     0,     0,   370,   371,   372,   373,
     374,   375,     0,     0,   376,   377,     0,   378,     0,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,     0,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,     0,   396,   397,     0,     0,     0,   398,
       0,   399,   400,     0,   401,   402,   403,     0,     0,   404,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   405,
     406,   407,     0,   408,     0,   409,     0,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,     0,   420,     0,
     421,   422,   423,     0,   424,     0,   425,   426,   427,   428,
     429,     0,   430,   431,   432,     0,     0,   433,     0,     0,
       0,   434,   435,     0,   436,   437,     0,     0,   438,   439,
     440,   441,   442,     0,   443,   444,     0,   445,   446,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
       0,   456,     0,   457,   458,     0,   459,   460,   461,     0,
     462,     0,     0,   463,   464,   465,   466,     0,   467,     0,
     468,   469,   470,   471,   472,     0,   473,   474,     0,     0,
       0,   475,   476,   477,   478,     0,     0,     0,   479,     0,
       0,     0,   480,     0,   481,   482,   483,   484,     0,   485,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,   492,     0,   493,     0,     0,   494,     0,     0,   495,
       0,   496,     0,   497,   498,   499,   500,   501,   502,     0,
       0,   503,   504,     0,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,   513,   514,     0,   515,   516,
       0,     0,   517,   518,   519,   520,     0,     0,   521,   522,
       0,   523,   524,   525,   526,     0,     0,     0,     0,     0,
    1164,   528,     0,     0,     0,   529,   530,   531,   532,     0,
     533,   534,     0,   535,   536,     0,   537,   538,     0,     0,
     539,     0,     0,   540,     0,   541,     0,   542,   543,     0,
       0,     0,     0,     0,   544,     0,   545,     0,     0,   546,
       0,     0,     0,   547,     0,   548,   549,   550,   551,     0,
       0,     0,     0,     0,     0,   552,   553,   554,     0,   555,
     556,   557,   558,     0,     0,   559,     0,     0,     0,   560,
       0,   561,   562,     0,   563,     0,     0,     0,     0,     0,
       0,     0,     0,   564,   565,   566,     0,     0,   567,   568,
     569,   570,     0,     0,   571,     0,   572,     0,     0,     0,
       0,     0,     0,   573,   574,     0,     0,   575,     0,   576,
       0,   577,   578,     0,     0,     0,   579,   580,   581,   582,
     583,   584,   585,   586,     0,   587,   588,   589,   590,   591,
     592,   593,   594,   191,   192,     0,   193,   194,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,     0,
       0,   200,     0,   201,   202,   203,   204,   205,   206,     0,
     207,     0,     0,     0,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,   213,     0,   214,   215,     0,
       0,   216,     0,     0,   217,   218,     0,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,   243,     0,   244,   245,
     246,   247,   248,     0,     0,     0,   249,     0,     0,     0,
       0,   250,     0,     0,   251,     0,     0,     0,   252,   253,
     254,     0,     0,   255,     0,     0,     0,     0,   256,   257,
       0,     0,     0,     0,   258,   259,     0,   260,     0,     0,
       0,     0,     0,   261,   262,   263,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,   269,     0,     0,     0,
     270,     0,   271,   272,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,   279,   280,   281,   282,   283,     0,
       0,   284,   285,   286,   287,   288,     0,     0,   289,   290,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,     0,     0,   298,   299,  2120,   300,     0,     0,     0,
     301,     0,   302,   303,   304,   305,     0,   306,     0,   307,
       0,     0,     0,   308,   309,     0,   310,     0,     0,   311,
     312,     0,     0,     0,   313,   314,   315,   316,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,     0,
     321,   322,   323,     0,     0,     0,   324,     0,     0,     0,
     325,   326,     0,   327,   328,     0,     0,     0,   329,     0,
     330,     0,     0,   331,   332,     0,     0,   333,     0,     0,
     334,   335,     0,     0,     0,     0,     0,   336,   337,     0,
     338,     0,   339,     0,   340,   341,     0,     0,     0,     0,
       0,     0,     0,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,     0,   368,   369,     0,     0,     0,     0,   370,
     371,   372,   373,   374,   375,     0,     0,   376,   377,     0,
     378,     0,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,     0,   389,   390,     0,     0,   391,
     392,   393,   394,   395,     0,     0,     0,   396,   397,     0,
       0,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   405,   406,   407,     0,   408,     0,   409,     0,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
       0,   420,     0,   421,   422,   423,     0,   424,     0,   425,
     426,   427,   428,   429,     0,   430,   431,   432,     0,     0,
     433,     0,     0,     0,   434,   435,     0,   436,   437,     0,
       0,   438,   439,   440,   441,   442,     0,   443,   444,     0,
     445,   446,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,     0,   456,     0,   457,   458,     0,   459,
     460,   461,     0,   462,     0,     0,   463,   464,   465,   466,
       0,   467,     0,   468,   469,   470,   471,   472,     0,   473,
     474,     0,     0,     0,   475,   476,   477,   478,     0,     0,
       0,   479,     0,     0,     0,   480,     0,   481,   482,   483,
     484,     0,   485,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,   492,     0,   493,     0,     0,   494,
       0,     0,   495,     0,   496,     0,   497,   498,   499,   500,
     501,   502,     0,     0,   503,   504,     0,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,   513,   514,
       0,   515,   516,     0,     0,   517,   518,   519,   520,     0,
       0,   521,   522,     0,   523,   524,   525,   526,     0,     0,
       0,     0,     0,   527,   528,     0,     0,     0,   529,   530,
     531,   532,     0,   533,   534,     0,   535,   536,     0,   537,
     538,     0,     0,   539,     0,     0,   540,     0,   541,     0,
     542,   543,     0,     0,     0,     0,     0,   544,     0,   545,
       0,     0,   546,     0,     0,     0,   547,     0,   548,   549,
     550,   551,     0,     0,     0,     0,     0,     0,   552,   553,
     554,     0,   555,   556,   557,   558,     0,     0,   559,     0,
       0,     0,   560,     0,   561,   562,     0,   563,     0,     0,
       0,     0,     0,     0,     0,     0,   564,   565,   566,     0,
       0,   567,   568,   569,   570,     0,     0,   571,     0,   572,
       0,     0,     0,     0,     0,     0,   573,   574,     0,     0,
     575,     0,   576,     0,   577,   578,     0,     0,     0,   579,
     580,   581,   582,   583,   584,   585,   586,     0,   587,   588,
     589,   590,   591,   592,   593,   594,   191,   192,     0,   193,
     194,   195,   196,   197,     0,     0,   198,     0,     0,     0,
       0,   199,     0,     0,   200,     0,   201,   202,   203,   204,
     205,   206,     0,   207,     0,     0,     0,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,   213,     0,
     214,   215,     0,     0,   216,     0,     0,   217,   218,     0,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,     0,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,     0,   242,   243,
       0,   244,   245,   246,   247,   248,     0,     0,     0,   249,
       0,     0,     0,     0,   250,     0,     0,   251,     0,     0,
       0,   252,   253,   254,     0,     0,   255,     0,     0,     0,
       0,   256,   257,     0,     0,     0,  2230,   258,   259,     0,
     260,     0,     0,     0,     0,     0,   261,   262,   263,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,   269,
       0,     0,     0,   270,     0,   271,   272,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,   279,   280,   281,
     282,   283,     0,     0,   284,   285,   286,   287,   288,     0,
       0,   289,   290,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,     0,     0,   298,   299,     0,   300,
       0,     0,     0,   301,     0,   302,   303,   304,   305,     0,
     306,     0,   307,     0,     0,     0,   308,   309,     0,   310,
       0,     0,   311,   312,     0,     0,     0,   313,   314,   315,
     316,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,     0,   321,   322,   323,     0,     0,     0,   324,
       0,     0,     0,   325,   326,     0,   327,   328,     0,     0,
       0,   329,     0,   330,     0,     0,   331,   332,     0,     0,
     333,     0,     0,   334,   335,     0,     0,     0,     0,     0,
     336,   337,     0,   338,     0,   339,     0,   340,   341,     0,
       0,     0,     0,     0,     0,     0,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,     0,   368,   369,     0,     0,
       0,     0,   370,   371,   372,   373,   374,   375,     0,     0,
     376,   377,     0,   378,     0,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,     0,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,     0,
     396,   397,     0,     0,     0,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   405,   406,   407,     0,   408,
       0,   409,     0,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,     0,   420,     0,   421,   422,   423,     0,
     424,     0,   425,   426,   427,   428,   429,     0,   430,   431,
     432,     0,     0,   433,     0,     0,     0,   434,   435,     0,
     436,   437,     0,     0,   438,   439,   440,   441,   442,     0,
     443,   444,     0,   445,   446,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,     0,   456,     0,   457,
     458,     0,   459,   460,   461,     0,   462,     0,     0,   463,
     464,   465,   466,     0,   467,     0,   468,   469,   470,   471,
     472,     0,   473,   474,     0,     0,     0,   475,   476,   477,
     478,     0,     0,     0,   479,     0,     0,     0,   480,     0,
     481,   482,   483,   484,     0,   485,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,   492,     0,   493,
       0,     0,   494,     0,     0,   495,     0,   496,     0,   497,
     498,   499,   500,   501,   502,     0,     0,   503,   504,     0,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,   513,   514,     0,   515,   516,     0,     0,   517,   518,
     519,   520,     0,     0,   521,   522,     0,   523,   524,   525,
     526,     0,     0,     0,     0,     0,   527,   528,     0,     0,
       0,   529,   530,   531,   532,     0,   533,   534,     0,   535,
     536,     0,   537,   538,     0,     0,   539,     0,     0,   540,
       0,   541,     0,   542,   543,     0,     0,     0,     0,     0,
     544,     0,   545,     0,     0,   546,     0,     0,     0,   547,
       0,   548,   549,   550,   551,     0,     0,     0,     0,     0,
       0,   552,   553,   554,     0,   555,   556,   557,   558,     0,
       0,   559,     0,     0,     0,   560,     0,   561,   562,     0,
     563,     0,     0,     0,     0,     0,     0,     0,     0,   564,
     565,   566,     0,     0,   567,   568,   569,   570,     0,     0,
     571,     0,   572,     0,     0,     0,     0,     0,     0,   573,
     574,     0,     0,   575,     0,   576,     0,   577,   578,     0,
       0,     0,   579,   580,   581,   582,   583,   584,   585,   586,
       0,   587,   588,   589,   590,   591,   592,   593,   594,   191,
     192,     0,   193,   194,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,     0,     0,   200,     0,   201,
     202,   203,   204,   205,   206,     0,   207,     0,     0,     0,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,     0,     0,
     217,   218,     0,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
       0,     0,   249,     0,     0,     0,     0,   250,     0,     0,
     251,     0,     0,     0,   252,   253,   254,     0,     0,   255,
       0,     0,     0,     0,   256,   257,     0,     0,     0,     0,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,   280,   281,   282,   283,     0,     0,   284,   285,   286,
     287,   288,     0,     0,   289,   290,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,     0,     0,   298,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   303,
     304,   305,     0,   306,     0,   307,     0,     0,     0,   308,
     309,     0,   310,     0,     0,   311,   312,     0,     0,     0,
     313,   314,   315,   316,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,     0,   321,   322,   323,     0,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,     0,   334,   335,     0,     0,
       0,     0,     0,   336,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,     0,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,     0,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   374,
     375,     0,     0,   376,   377,     0,   378,     0,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
       0,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,     0,   396,   397,     0,     0,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   405,   406,
     407,     0,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,     0,   420,     0,   421,
     422,   423,     0,   424,     0,   425,   426,   427,   428,   429,
       0,   430,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,   443,   444,     0,   445,   446,   447,     0,
       0,   448,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   462,
       0,     0,   463,   464,   465,   466,     0,   467,     0,   468,
     469,   470,   471,   472,     0,   473,   474,     0,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
       0,   480,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,     0,     0,
     503,   504,     0,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,   513,   514,     0,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   188,   521,   522,     0,
     523,   524,   525,   526,     0,     0,     0,     0,     0,   527,
     528,     0,     0,     0,   529,   530,   531,   532,     0,   533,
     534,     0,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,     0,   541,     0,   542,   543,     0,     0,
       0,     0,     0,   544,     0,   545,     0,     0,   546,     0,
       0,     0,   547,     0,   548,   549,   550,   551,     0,     0,
       0,     0,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   559,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,   564,   565,   566,     0,     0,   567,   568,   569,
     570,     0,     0,   571,     0,   572,     0,     0,     0,     0,
       0,     0,   573,   574,     0,     0,   575,     0,   576,     0,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,   586,     0,   587,   588,   589,   590,   591,   592,
     593,   594,   191,   192,     0,   193,   194,   195,   196,   197,
       0,     0,   198,     0,     0,     0,     0,   199,     0,     0,
     200,     0,   201,   202,   203,   204,   205,   206,     0,   207,
       0,     0,     0,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,   213,     0,   214,   215,     0,     0,
     216,     0,     0,   217,   218,     0,   219,   220,   221,     0,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,     0,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,     0,   242,   243,     0,   244,   245,   246,
     247,   248,     0,     0,     0,   249,     0,     0,     0,     0,
     250,     0,     0,   251,     0,     0,     0,   252,   253,   254,
       0,     0,   255,     0,     0,     0,     0,   256,   257,     0,
       0,     0,  1163,   258,   259,     0,   260,     0,     0,     0,
       0,     0,   261,   262,   263,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,   269,     0,     0,     0,   270,
       0,   271,   272,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,   279,   280,   281,   282,   283,     0,     0,
     284,   285,   286,   287,   288,     0,     0,   289,   290,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
       0,     0,   298,   299,     0,   300,     0,     0,     0,   301,
       0,   302,   303,   304,   305,     0,   306,     0,   307,     0,
       0,     0,   308,   309,     0,   310,     0,     0,   311,   312,
       0,     0,     0,   313,   314,   315,   316,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,     0,     0,   324,     0,     0,     0,   325,
     326,     0,   327,   328,     0,     0,     0,   329,     0,   330,
       0,     0,   331,   332,     0,     0,   333,     0,     0,   334,
     335,     0,     0,     0,     0,     0,   336,   337,     0,   338,
       0,   339,     0,   340,   341,     0,     0,     0,     0,     0,
       0,     0,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,     0,   368,   369,     0,     0,     0,     0,   370,   371,
     372,   373,   374,   375,     0,     0,   376,   377,     0,   378,
       0,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,     0,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,     0,   396,   397,     0,     0,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   405,   406,   407,     0,   408,     0,   409,     0,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,     0,
     420,     0,   421,   422,   423,     0,   424,     0,   425,   426,
     427,   428,   429,     0,   430,   431,   432,     0,     0,   433,
       0,     0,     0,   434,   435,     0,   436,   437,     0,     0,
     438,   439,   440,   441,   442,     0,   443,   444,     0,   445,
     446,   447,     0,     0,   448,   449,   450,   451,   452,   453,
     454,   455,     0,   456,     0,   457,   458,     0,   459,   460,
     461,     0,   462,     0,     0,   463,   464,   465,   466,     0,
     467,     0,   468,   469,   470,   471,   472,     0,   473,   474,
       0,     0,     0,   475,   476,   477,   478,     0,     0,     0,
     479,     0,     0,     0,   480,     0,   481,   482,   483,   484,
       0,   485,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,   492,     0,   493,     0,     0,   494,     0,
       0,   495,     0,   496,     0,   497,   498,   499,   500,   501,
     502,     0,     0,   503,   504,     0,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,   513,   514,     0,
     515,   516,     0,     0,   517,   518,   519,   520,     0,     0,
     521,   522,     0,   523,   524,   525,   526,     0,     0,     0,
       0,     0,   527,   528,     0,     0,     0,   529,   530,   531,
     532,     0,   533,   534,     0,   535,   536,     0,   537,   538,
       0,     0,   539,     0,     0,   540,     0,   541,     0,   542,
     543,     0,     0,     0,     0,     0,   544,     0,   545,     0,
       0,   546,     0,     0,     0,   547,     0,   548,   549,   550,
     551,     0,     0,     0,     0,     0,     0,   552,   553,   554,
       0,   555,   556,   557,   558,     0,     0,   559,     0,     0,
       0,   560,     0,   561,   562,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,   564,   565,   566,     0,     0,
     567,   568,   569,   570,     0,     0,   571,     0,   572,     0,
       0,     0,     0,     0,     0,   573,   574,     0,     0,   575,
       0,   576,     0,   577,   578,     0,     0,     0,   579,   580,
     581,   582,   583,   584,   585,   586,     0,   587,   588,   589,
     590,   591,   592,   593,   594,   191,   192,     0,   193,   194,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,   200,     0,   201,   202,   203,   204,   205,
     206,     0,   207,     0,     0,     0,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,     0,     0,   217,   218,     0,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,     0,     0,   249,     0,
       0,     0,     0,   250,     0,     0,   251,     0,     0,     0,
     252,   253,   254,     0,     0,   255,     0,     0,     0,     0,
     256,   257,     0,     0,     0,  2795,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,   280,   281,   282,
     283,     0,     0,   284,   285,   286,   287,   288,     0,     0,
     289,   290,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,     0,   298,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   303,   304,   305,     0,   306,
       0,   307,     0,     0,     0,   308,   309,     0,   310,     0,
       0,   311,   312,     0,     0,     0,   313,   314,   315,   316,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,     0,   321,   322,   323,     0,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,     0,   334,   335,     0,     0,     0,     0,     0,   336,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
       0,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,     0,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   374,   375,     0,     0,   376,
     377,     0,   378,     0,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,     0,   389,   390,     0,
       0,   391,   392,   393,   394,   395,     0,     0,     0,   396,
     397,     0,     0,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,     0,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,     0,   420,     0,   421,   422,   423,     0,   424,
       0,   425,   426,   427,   428,   429,     0,   430,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,   443,
     444,     0,   445,   446,   447,     0,     0,   448,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   462,     0,     0,   463,   464,
     465,   466,     0,   467,     0,   468,   469,   470,   471,   472,
       0,   473,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,   480,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,     0,     0,   503,   504,     0,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
     513,   514,     0,   515,   516,     0,     0,   517,   518,   519,
     520,     0,     0,   521,   522,     0,   523,   524,   525,   526,
       0,     0,     0,     0,     0,   527,   528,     0,     0,     0,
     529,   530,   531,   532,     0,   533,   534,     0,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   542,   543,     0,     0,     0,     0,     0,   544,
       0,   545,     0,     0,   546,     0,     0,     0,   547,     0,
     548,   549,   550,   551,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     559,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,     0,     0,     0,   564,   565,
     566,     0,     0,   567,   568,   569,   570,     0,     0,   571,
       0,   572,     0,     0,     0,     0,     0,     0,   573,   574,
       0,     0,   575,     0,   576,     0,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,   586,     0,
     587,   588,   589,   590,   591,   592,   593,   594,   191,   192,
       0,   193,   194,   195,   196,   197,  2805,     0,   198,     0,
       0,     0,     0,   199,     0,     0,   200,     0,   201,   202,
     203,   204,   205,   206,     0,   207,     0,     0,     0,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
     213,     0,   214,   215,     0,     0,   216,     0,     0,   217,
     218,     0,   219,   220,   221,     0,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,     0,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,     0,
     242,   243,     0,   244,   245,   246,   247,   248,     0,     0,
       0,   249,     0,     0,     0,     0,   250,     0,     0,   251,
       0,     0,     0,   252,   253,   254,     0,     0,   255,     0,
       0,     0,     0,   256,   257,     0,     0,     0,     0,   258,
     259,     0,   260,     0,     0,     0,     0,     0,   261,   262,
     263,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,   269,     0,     0,     0,   270,     0,   271,   272,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,   279,
     280,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,     0,     0,   289,   290,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,     0,     0,   298,   299,
       0,   300,     0,     0,     0,   301,     0,   302,   303,   304,
     305,     0,   306,     0,   307,     0,     0,     0,   308,   309,
       0,   310,     0,     0,   311,   312,     0,     0,     0,   313,
     314,   315,   316,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,     0,   321,   322,   323,     0,     0,
       0,   324,     0,     0,     0,   325,   326,     0,   327,   328,
       0,     0,     0,   329,     0,   330,     0,     0,   331,   332,
       0,     0,   333,     0,     0,   334,   335,     0,     0,     0,
       0,     0,   336,   337,     0,   338,     0,   339,     0,   340,
     341,     0,     0,     0,     0,     0,     0,     0,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,     0,   368,   369,
       0,     0,     0,     0,   370,   371,   372,   373,   374,   375,
       0,     0,   376,   377,     0,   378,     0,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,     0,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,     0,   396,   397,     0,     0,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,     0,   404,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   405,   406,   407,
       0,   408,     0,   409,     0,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,     0,   420,     0,   421,   422,
     423,     0,   424,     0,   425,   426,   427,   428,   429,     0,
     430,   431,   432,     0,     0,   433,     0,     0,     0,   434,
     435,     0,   436,   437,     0,     0,   438,   439,   440,   441,
     442,     0,   443,   444,     0,   445,   446,   447,     0,     0,
     448,   449,   450,   451,   452,   453,   454,   455,     0,   456,
       0,   457,   458,     0,   459,   460,   461,     0,   462,     0,
       0,   463,   464,   465,   466,     0,   467,     0,   468,   469,
     470,   471,   472,     0,   473,   474,     0,     0,     0,   475,
     476,   477,   478,     0,     0,     0,   479,     0,     0,     0,
     480,     0,   481,   482,   483,   484,     0,   485,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,   492,
       0,   493,     0,     0,   494,     0,     0,   495,     0,   496,
       0,   497,   498,   499,   500,   501,   502,     0,     0,   503,
     504,     0,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,   513,   514,     0,   515,   516,     0,     0,
     517,   518,   519,   520,     0,     0,   521,   522,     0,   523,
     524,   525,   526,     0,     0,     0,     0,     0,   527,   528,
       0,     0,     0,   529,   530,   531,   532,     0,   533,   534,
       0,   535,   536,     0,   537,   538,     0,     0,   539,     0,
       0,   540,     0,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   544,     0,   545,     0,     0,   546,     0,     0,
       0,   547,     0,   548,   549,   550,   551,     0,     0,     0,
       0,     0,     0,   552,   553,   554,     0,   555,   556,   557,
     558,     0,     0,   559,     0,     0,     0,   560,     0,   561,
     562,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,   564,   565,   566,     0,     0,   567,   568,   569,   570,
       0,     0,   571,     0,   572,     0,     0,     0,     0,     0,
       0,   573,   574,     0,     0,   575,     0,   576,     0,   577,
     578,     0,     0,     0,   579,   580,   581,   582,   583,   584,
     585,   586,     0,   587,   588,   589,   590,   591,   592,   593,
     594,   191,   192,     0,   193,   194,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,     0,     0,   200,
       0,   201,   202,   203,   204,   205,   206,     0,   207,     0,
       0,     0,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,   213,     0,   214,   215,     0,     0,   216,
       0,     0,   217,   218,     0,   219,   220,   221,     0,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,     0,   242,   243,     0,   244,   245,   246,   247,
     248,     0,     0,     0,   249,     0,     0,     0,     0,   250,
       0,     0,   251,     0,     0,     0,   252,   253,   254,     0,
       0,   255,     0,     0,     0,     0,   256,   257,     0,     0,
       0,  2832,   258,   259,     0,   260,     0,     0,     0,     0,
       0,   261,   262,   263,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,   269,     0,     0,     0,   270,     0,
     271,   272,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,   279,   280,   281,   282,   283,     0,     0,   284,
     285,   286,   287,   288,     0,     0,   289,   290,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
       0,   298,   299,     0,   300,     0,     0,     0,   301,     0,
     302,   303,   304,   305,     0,   306,     0,   307,     0,     0,
       0,   308,   309,     0,   310,     0,     0,   311,   312,     0,
       0,     0,   313,   314,   315,   316,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,     0,   321,   322,
     323,     0,     0,     0,   324,     0,     0,     0,   325,   326,
       0,   327,   328,     0,     0,     0,   329,     0,   330,     0,
       0,   331,   332,     0,     0,   333,     0,     0,   334,   335,
       0,     0,     0,     0,     0,   336,   337,     0,   338,     0,
     339,     0,   340,   341,     0,     0,     0,     0,     0,     0,
       0,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,   364,   365,   366,   367,
       0,   368,   369,     0,     0,     0,     0,   370,   371,   372,
     373,   374,   375,     0,     0,   376,   377,     0,   378,     0,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,     0,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,     0,   396,   397,     0,     0,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,     0,
     404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     405,   406,   407,     0,   408,     0,   409,     0,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,     0,   420,
       0,   421,   422,   423,     0,   424,     0,   425,   426,   427,
     428,   429,     0,   430,   431,   432,     0,     0,   433,     0,
       0,     0,   434,   435,     0,   436,   437,     0,     0,   438,
     439,   440,   441,   442,     0,   443,   444,     0,   445,   446,
     447,     0,     0,   448,   449,   450,   451,   452,   453,   454,
     455,     0,   456,     0,   457,   458,     0,   459,   460,   461,
       0,   462,     0,     0,   463,   464,   465,   466,     0,   467,
       0,   468,   469,   470,   471,   472,     0,   473,   474,     0,
       0,     0,   475,   476,   477,   478,     0,     0,     0,   479,
       0,     0,     0,   480,     0,   481,   482,   483,   484,     0,
     485,   486,   487,   488,   489,     0,     0,     0,     0,     0,
     490,   491,   492,     0,   493,     0,     0,   494,     0,     0,
     495,     0,   496,     0,   497,   498,   499,   500,   501,   502,
       0,     0,   503,   504,     0,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,   513,   514,     0,   515,
     516,     0,     0,   517,   518,   519,   520,     0,     0,   521,
     522,     0,   523,   524,   525,   526,     0,     0,     0,     0,
       0,   527,   528,     0,     0,     0,   529,   530,   531,   532,
       0,   533,   534,     0,   535,   536,     0,   537,   538,     0,
       0,   539,     0,     0,   540,     0,   541,     0,   542,   543,
       0,     0,     0,     0,     0,   544,     0,   545,     0,     0,
     546,     0,     0,     0,   547,     0,   548,   549,   550,   551,
       0,     0,     0,     0,     0,     0,   552,   553,   554,     0,
     555,   556,   557,   558,     0,     0,   559,     0,     0,     0,
     560,     0,   561,   562,     0,   563,     0,     0,     0,     0,
       0,     0,     0,     0,   564,   565,   566,     0,     0,   567,
     568,   569,   570,     0,     0,   571,     0,   572,     0,     0,
       0,     0,     0,     0,   573,   574,     0,     0,   575,     0,
     576,     0,   577,   578,     0,     0,     0,   579,   580,   581,
     582,   583,   584,   585,   586,     0,   587,   588,   589,   590,
     591,   592,   593,   594,   191,   192,     0,   193,   194,   195,
     196,   197,     0,     0,   198,     0,     0,     0,     0,   199,
       0,     0,   200,     0,   201,   202,   203,   204,   205,   206,
       0,   207,     0,     0,     0,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,   213,     0,   214,   215,
       0,     0,   216,     0,     0,   217,   218,     0,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,     0,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,     0,   242,   243,     0,   244,
     245,   246,   247,   248,     0,     0,     0,   249,     0,     0,
       0,     0,   250,     0,     0,   251,     0,     0,     0,   252,
     253,   254,     0,     0,   255,     0,     0,     0,     0,   256,
     257,     0,     0,     0,     0,   258,   259,     0,   260,     0,
       0,     0,     0,     0,   261,   262,   263,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,   269,     0,     0,
       0,   270,     0,   271,   272,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,   279,   280,   281,   282,   283,
       0,     0,   284,   285,   286,   287,   288,     0,     0,   289,
     290,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,     0,     0,   298,   299,     0,   300,     0,     0,
       0,   301,     0,   302,   303,   304,   305,     0,   306,     0,
     307,     0,     0,     0,   308,   309,     0,   310,     0,     0,
     311,   312,     0,     0,     0,   313,   314,   315,   316,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
       0,   321,   322,   323,     0,     0,     0,   324,     0,     0,
       0,   325,   326,     0,   327,   328,     0,     0,     0,   329,
       0,   330,     0,     0,   331,   332,     0,     0,   333,     0,
       0,   334,   335,     0,     0,     0,     0,     0,   336,   337,
       0,   338,     0,   339,     0,   340,   341,     0,     0,     0,
       0,     0,     0,     0,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,     0,   368,   369,     0,     0,     0,     0,
     370,   371,   372,   373,   374,   375,     0,     0,   376,   377,
       0,   378,     0,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,     0,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,     0,   396,   397,
       0,     0,     0,   398,     0,   399,   400,     0,   401,   402,
     403,     0,     0,   404,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   405,   406,   407,     0,   408,     0,   409,
       0,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,     0,   420,     0,   421,   422,   423,  2890,   424,     0,
     425,   426,   427,   428,   429,     0,   430,   431,   432,     0,
       0,   433,     0,     0,     0,   434,   435,     0,   436,   437,
       0,     0,   438,   439,   440,   441,   442,     0,   443,   444,
       0,   445,   446,   447,     0,     0,   448,   449,   450,   451,
     452,   453,   454,   455,     0,   456,     0,   457,   458,     0,
     459,   460,   461,     0,   462,     0,     0,   463,   464,   465,
     466,     0,   467,     0,   468,   469,   470,   471,   472,     0,
     473,   474,     0,     0,     0,   475,   476,   477,   478,     0,
       0,     0,   479,     0,     0,     0,   480,     0,   481,   482,
     483,   484,     0,   485,   486,   487,   488,   489,     0,     0,
       0,     0,     0,   490,   491,   492,     0,   493,     0,     0,
     494,     0,     0,   495,     0,   496,     0,   497,   498,   499,
     500,   501,   502,     0,     0,   503,   504,     0,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,   513,
     514,     0,   515,   516,     0,     0,   517,   518,   519,   520,
       0,     0,   521,   522,     0,   523,   524,   525,   526,     0,
       0,     0,     0,     0,   527,   528,     0,     0,     0,   529,
     530,   531,   532,     0,   533,   534,     0,   535,   536,     0,
     537,   538,     0,     0,   539,     0,     0,   540,     0,   541,
       0,   542,   543,     0,     0,     0,     0,     0,   544,     0,
     545,     0,     0,   546,     0,     0,     0,   547,     0,   548,
     549,   550,   551,     0,     0,     0,     0,     0,     0,   552,
     553,   554,     0,   555,   556,   557,   558,     0,     0,   559,
       0,     0,     0,   560,     0,   561,   562,     0,   563,     0,
       0,     0,     0,     0,     0,     0,     0,   564,   565,   566,
       0,     0,   567,   568,   569,   570,     0,     0,   571,     0,
     572,     0,     0,     0,     0,     0,     0,   573,   574,     0,
       0,   575,     0,   576,     0,   577,   578,     0,     0,     0,
     579,   580,   581,   582,   583,   584,   585,   586,     0,   587,
     588,   589,   590,   591,   592,   593,   594,   191,   192,     0,
     193,   194,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,     0,     0,   200,     0,   201,   202,   203,
     204,   205,   206,     0,   207,     0,     0,     0,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,   213,
       0,   214,   215,     0,     0,   216,     0,     0,   217,   218,
       0,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,     0,   242,
     243,     0,   244,   245,   246,   247,   248,     0,     0,     0,
     249,     0,     0,     0,     0,   250,     0,     0,   251,     0,
       0,     0,   252,   253,   254,     0,     0,   255,     0,     0,
       0,     0,   256,   257,     0,     0,     0,     0,   258,   259,
       0,   260,     0,     0,     0,     0,     0,   261,   262,   263,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
     269,     0,     0,     0,   270,     0,   271,   272,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,   279,   280,
     281,   282,   283,     0,     0,   284,   285,   286,   287,   288,
       0,     0,   289,   290,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,     0,     0,   298,   299,     0,
     300,     0,     0,     0,   301,     0,   302,   303,   304,   305,
       0,   306,     0,   307,     0,     0,     0,   308,   309,     0,
     310,     0,     0,   311,   312,     0,     0,     0,   313,   314,
     315,   316,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,     0,   321,   322,   323,     0,     0,     0,
     324,     0,     0,     0,   325,   326,     0,   327,   328,     0,
       0,     0,   329,     0,   330,     0,     0,   331,   332,     0,
       0,   333,     0,     0,   334,   335,     0,     0,     0,     0,
       0,   336,   337,     0,   338,     0,   339,     0,   340,   341,
       0,     0,     0,     0,     0,     0,     0,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,   364,   365,   366,   367,     0,   368,   369,     0,
       0,     0,     0,   370,   371,   372,   373,   374,   375,     0,
       0,   376,   377,     0,   378,     0,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,     0,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
       0,   396,   397,     0,     0,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,     0,   404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   405,   406,   407,     0,
     408,     0,   409,     0,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,     0,   420,     0,   421,   422,   423,
       0,   424,     0,   425,   426,   427,   428,   429,     0,   430,
     431,   432,     0,     0,   433,     0,     0,     0,   434,   435,
       0,   436,   437,     0,     0,   438,   439,   440,   441,   442,
       0,   443,   444,     0,   445,   446,   447,     0,     0,   448,
     449,   450,   451,   452,   453,   454,   455,     0,   456,     0,
     457,   458,     0,   459,   460,   461,     0,   462,     0,     0,
     463,   464,   465,   466,     0,   467,     0,   468,   469,   470,
     471,   472,     0,   473,   474,     0,     0,     0,   475,   476,
     477,   478,     0,     0,     0,   479,     0,     0,     0,   480,
       0,   481,   482,   483,   484,     0,   485,   486,   487,   488,
     489,     0,     0,     0,     0,     0,   490,   491,   492,     0,
     493,     0,     0,   494,     0,     0,   495,     0,   496,     0,
     497,   498,   499,   500,   501,   502,     0,     0,   503,   504,
       0,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,   513,   514,     0,   515,   516,     0,     0,   517,
     518,   519,   520,     0,     0,   521,   522,     0,   523,   524,
     525,   526,     0,     0,     0,     0,     0,   527,   528,     0,
       0,     0,   529,   530,   531,   532,     0,   533,   534,     0,
     535,   536,     0,   537,   538,     0,     0,   539,     0,     0,
     540,     0,   541,     0,   542,   543,     0,     0,     0,     0,
       0,   544,     0,   545,     0,     0,   546,     0,     0,     0,
     547,     0,   548,   549,   550,   551,     0,     0,     0,     0,
       0,     0,   552,   553,   554,     0,   555,   556,   557,   558,
       0,     0,   559,     0,     0,     0,   560,     0,   561,   562,
       0,   563,     0,     0,     0,     0,     0,     0,     0,     0,
     564,   565,   566,     0,     0,   567,   568,   569,   570,     0,
       0,   571,     0,   572,     0,     0,     0,     0,     0,     0,
     573,   574,     0,     0,   575,     0,   576,     0,   577,   578,
       0,     0,     0,   579,   580,   581,   582,   583,   584,   585,
     586,     0,   587,   588,   589,   590,   591,   592,   593,   594,
     191,   192,     0,   193,   194,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,     0,     0,   200,     0,
     201,   202,   203,   204,   205,   206,     0,   207,     0,     0,
       0,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,   213,     0,   214,   215,     0,     0,   216,     0,
       0,   217,   218,     0,   219,   220,   221,     0,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,     0,   242,   243,     0,   244,   245,   246,   247,   248,
       0,     0,     0,   249,     0,     0,     0,     0,   250,     0,
       0,   251,     0,     0,     0,   252,   253,   254,     0,     0,
     255,     0,     0,     0,     0,   256,   257,     0,     0,     0,
       0,   258,   259,     0,   260,     0,     0,     0,     0,     0,
     261,   262,   263,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,   269,     0,     0,     0,   270,     0,   271,
     272,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,   279,   280,   281,   282,   283,     0,     0,   284,   285,
     286,   287,   288,     0,     0,   289,   290,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,     0,     0,
     971,   299,     0,   300,     0,     0,     0,   301,     0,   302,
     303,   304,   305,     0,   306,     0,   307,     0,     0,     0,
     308,   309,     0,   310,     0,     0,   311,   312,     0,     0,
       0,   313,   314,   315,   316,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,     0,   321,   322,   323,
       0,     0,     0,   324,     0,     0,     0,   325,   326,     0,
     327,   328,     0,     0,     0,   329,     0,   330,     0,     0,
     331,   332,     0,     0,   333,     0,     0,   334,   335,     0,
       0,     0,     0,     0,   336,   337,     0,   338,     0,   339,
       0,   340,   341,     0,     0,     0,     0,     0,     0,     0,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,     0,
     368,   369,     0,     0,     0,     0,   370,   371,   372,   373,
     374,   375,     0,     0,   376,   377,     0,   378,     0,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,     0,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,     0,   396,   397,     0,     0,     0,   398,
       0,   399,   400,     0,   401,   402,   403,     0,     0,   404,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   405,
     406,   407,     0,   408,     0,   409,     0,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,     0,   420,     0,
     421,   422,   423,     0,   424,     0,   425,   426,   427,   428,
     429,     0,   430,   431,   432,     0,     0,   433,     0,     0,
       0,   434,   435,     0,   436,   437,     0,     0,   438,   439,
     440,   441,   442,     0,   443,   444,     0,   445,   446,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
       0,   456,     0,   457,   458,     0,   459,   460,   461,     0,
     462,     0,     0,   463,   464,   465,   466,     0,   467,     0,
     468,   469,   470,   471,   472,     0,   473,   474,     0,     0,
       0,   475,   476,   477,   478,     0,     0,     0,   479,     0,
       0,     0,   480,     0,   481,   482,   483,   484,     0,   485,
     486,   487,   488,   489,     0,     0,     0,     0,     0,   490,
     491,   492,     0,   493,     0,     0,   494,     0,     0,   495,
       0,   496,     0,   497,   498,   499,   500,   501,   502,     0,
       0,   503,   504,     0,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,   513,   514,     0,   515,   516,
       0,     0,   517,   518,   519,   520,     0,     0,   521,   522,
       0,   523,   524,   525,   526,     0,     0,     0,     0,     0,
     527,   528,     0,     0,     0,   529,   530,   531,   532,     0,
     533,   534,     0,   535,   536,     0,   537,   538,     0,     0,
     539,     0,     0,   540,     0,   541,     0,   542,   543,     0,
       0,     0,     0,     0,   544,     0,   545,     0,     0,   546,
       0,     0,     0,   547,     0,   548,   549,   550,   551,     0,
       0,     0,     0,     0,     0,   552,   553,   554,     0,   555,
     556,   557,   558,     0,     0,   559,     0,     0,     0,   560,
       0,   561,   562,     0,   563,     0,     0,     0,     0,     0,
       0,     0,     0,   564,   565,   566,     0,     0,   567,   568,
     569,   570,     0,     0,   571,     0,   572,     0,     0,     0,
       0,     0,     0,   573,   574,     0,     0,   575,     0,   576,
       0,   577,   578,     0,     0,     0,   579,   580,   581,   582,
     583,   584,   585,   586,     0,   587,   588,   589,   590,   591,
     592,   593,   594,   191,   192,     0,   193,   194,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,     0,
       0,   200,     0,   201,   202,   203,   204,   205,   206,     0,
     207,     0,     0,     0,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,   213,     0,   214,   215,     0,
       0,   216,     0,     0,   217,   218,     0,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,     0,   242,   243,     0,   244,   245,
     246,   247,   248,     0,     0,     0,   249,     0,     0,     0,
       0,   250,     0,     0,   251,     0,     0,     0,   252,   253,
     254,     0,     0,   255,     0,     0,     0,     0,   256,   257,
       0,     0,     0,     0,   258,   259,     0,   260,     0,     0,
       0,     0,     0,   261,   262,   263,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,   269,     0,     0,     0,
     270,     0,   271,   272,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,   279,   280,   281,   282,   283,     0,
       0,   284,   285,   286,   287,   288,     0,     0,   289,   290,
       0,   291,   292,   293,  1712,   295,     0,     0,   296,   297,
       0,     0,     0,   298,   299,     0,   300,     0,     0,     0,
     301,     0,   302,   303,   304,   305,     0,   306,     0,   307,
       0,     0,     0,   308,   309,     0,   310,     0,     0,   311,
     312,     0,     0,     0,   313,   314,   315,   316,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,     0,
     321,   322,   323,     0,     0,     0,   324,     0,     0,     0,
     325,   326,     0,   327,   328,     0,     0,     0,   329,     0,
     330,     0,     0,   331,   332,     0,     0,   333,     0,     0,
     334,   335,     0,     0,     0,     0,     0,   336,   337,     0,
     338,     0,   339,     0,   340,   341,     0,     0,     0,     0,
       0,     0,     0,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,   364,   365,
     366,   367,     0,   368,   369,     0,     0,     0,     0,   370,
     371,   372,   373,   374,   375,     0,     0,   376,   377,     0,
     378,     0,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,     0,   389,   390,     0,     0,   391,
     392,  1713,   394,   395,     0,     0,     0,   396,   397,     0,
       0,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,     0,   404,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   405,   406,   407,     0,   408,     0,   409,     0,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
       0,   420,     0,   421,   422,   423,     0,   424,     0,   425,
     426,   427,   428,   429,     0,   430,   431,   432,     0,     0,
     433,     0,     0,     0,   434,   435,     0,   436,   437,     0,
       0,   438,   439,   440,   441,   442,     0,   443,   444,     0,
     445,   446,   447,     0,     0,   448,   449,   450,   451,   452,
     453,   454,   455,     0,   456,     0,   457,   458,     0,   459,
     460,   461,     0,   462,     0,     0,   463,   464,   465,   466,
       0,   467,     0,   468,   469,   470,   471,   472,     0,   473,
     474,     0,     0,     0,   475,   476,   477,   478,     0,     0,
       0,   479,     0,     0,     0,   480,     0,   481,   482,   483,
     484,     0,   485,   486,   487,   488,   489,     0,     0,     0,
       0,     0,   490,   491,   492,     0,   493,     0,     0,   494,
       0,     0,   495,     0,   496,     0,   497,   498,   499,   500,
     501,   502,     0,     0,   503,   504,     0,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,   513,   514,
       0,   515,   516,     0,     0,   517,   518,   519,   520,     0,
       0,   521,   522,     0,   523,   524,   525,   526,     0,     0,
       0,     0,     0,   527,   528,     0,     0,     0,   529,   530,
     531,   532,     0,   533,   534,     0,   535,   536,     0,   537,
     538,     0,     0,   539,     0,     0,   540,     0,   541,     0,
     542,   543,     0,     0,     0,     0,     0,   544,     0,   545,
       0,     0,   546,     0,     0,     0,   547,     0,   548,   549,
     550,   551,     0,     0,     0,     0,     0,     0,   552,   553,
     554,     0,   555,   556,   557,   558,     0,     0,   559,     0,
       0,     0,   560,     0,   561,   562,     0,   563,     0,     0,
       0,     0,     0,     0,     0,     0,   564,   565,   566,     0,
       0,   567,   568,   569,   570,     0,     0,   571,     0,   572,
       0,     0,     0,     0,     0,     0,   573,   574,     0,     0,
     575,     0,   576,     0,   577,   578,     0,     0,     0,   579,
     580,   581,   582,   583,   584,   585,   586,     0,   587,   588,
     589,   590,   591,   592,   593,   594,   191,   192,     0,   193,
     194,   195,   196,   197,     0,     0,   198,     0,     0,     0,
       0,   199,     0,     0,   200,     0,   201,   202,   203,   204,
     205,   206,     0,   207,     0,     0,     0,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,   213,     0,
     214,   215,     0,     0,   216,     0,     0,   217,   218,     0,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,     0,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,     0,   242,   243,
       0,   244,   245,   246,   247,   248,     0,     0,     0,   249,
       0,     0,     0,     0,   250,     0,     0,   251,     0,     0,
       0,   252,   253,   254,     0,     0,   255,     0,     0,     0,
       0,   256,   257,     0,     0,     0,     0,   258,   259,     0,
     260,     0,     0,     0,     0,     0,   261,   262,   263,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,   269,
       0,     0,     0,   270,     0,   271,   272,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,   279,   280,   281,
     282,   283,     0,     0,   284,   285,   286,   287,   288,     0,
       0,   289,   290,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,     0,     0,   298,   299,     0,   300,
       0,     0,     0,   301,     0,   302,   303,   304,   305,     0,
     306,     0,   307,     0,     0,     0,   308,   309,     0,   310,
       0,     0,   311,   312,     0,     0,     0,   313,   314,   315,
     316,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,     0,   321,   322,   323,     0,     0,     0,   324,
       0,     0,     0,   325,   326,     0,   327,   328,     0,     0,
       0,   329,     0,   330,     0,     0,   331,   332,     0,     0,
     333,     0,     0,   334,   335,     0,     0,     0,     0,     0,
     336,   337,     0,   338,     0,   339,     0,   340,   341,     0,
       0,     0,     0,     0,     0,     0,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,     0,   368,   369,     0,     0,
       0,     0,   370,   371,   372,   373,   374,   375,     0,     0,
     376,   377,     0,   378,     0,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,     0,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,     0,
     396,   397,     0,     0,     0,   398,     0,   399,   400,     0,
     401,   402,   403,     0,     0,   404,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   405,   406,   407,     0,   408,
       0,   409,     0,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,     0,   420,     0,   421,   422,   423,     0,
     424,     0,   425,   426,   427,   428,   429,     0,   430,   431,
     432,     0,     0,   433,     0,     0,     0,   434,   435,     0,
     436,   437,     0,     0,   438,   439,   440,   441,   442,     0,
     443,   444,     0,   445,   446,   447,     0,     0,   448,   449,
     450,   451,   452,   453,   454,   455,     0,   456,     0,   457,
     458,     0,   459,   460,   461,     0,   462,     0,     0,   463,
     464,   465,   466,     0,   467,     0,   468,   469,   470,   471,
     472,     0,   473,   474,     0,     0,     0,   475,   476,   477,
     478,     0,     0,     0,   479,     0,     0,     0,   480,     0,
     481,   482,   483,   484,     0,   485,   486,   487,   488,   489,
       0,     0,     0,     0,     0,   490,   491,   492,     0,   493,
       0,     0,   494,     0,     0,   495,     0,   496,     0,   497,
     498,   499,   500,   501,   502,     0,     0,   503,   504,     0,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,   513,   514,     0,   515,   516,     0,     0,   517,   518,
     519,   520,     0,     0,   521,   522,     0,   523,   524,   525,
     526,     0,     0,     0,     0,     0,   527,   528,     0,     0,
       0,   529,   530,   531,   532,     0,   533,   534,     0,   535,
     536,     0,   537,   538,     0,     0,   539,     0,     0,   540,
       0,   541,     0,   542,   543,     0,     0,     0,     0,     0,
     544,     0,   545,     0,     0,   546,     0,     0,     0,   547,
       0,   548,   549,   550,   551,     0,     0,     0,     0,     0,
       0,   552,   553,   554,     0,   555,   556,   557,   558,     0,
       0,   559,     0,     0,     0,   560,     0,   561,   562,     0,
     563,     0,     0,     0,     0,     0,     0,     0,     0,   564,
     565,   566,     0,     0,   567,   568,   569,   570,     0,     0,
     571,     0,   572,     0,     0,     0,     0,     0,     0,   573,
     574,     0,     0,   575,     0,   576,     0,   577,   578,     0,
       0,     0,  4567,   580,   581,   582,   583,   584,   585,   586,
       0,   587,   588,   589,   590,   591,   592,   593,   594,   191,
     192,     0,   193,   194,   195,   196,   197,  1148,     0,   198,
       0,     0,     0,     0,   199,     0,     0,   200,     0,   201,
     202,   203,   204,   205,   206,     0,   207,     0,     0,     0,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,   213,     0,   214,   215,     0,     0,   216,     0,     0,
     217,   218,     0,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
       0,   242,   243,     0,   244,   245,   246,   247,   248,     0,
       0,     0,   249,     0,     0,     0,     0,   250,     0,     0,
     251,     0,     0,     0,   252,   253,   254,     0,     0,   255,
       0,     0,     0,     0,   256,   257,     0,     0,     0,  1149,
     258,   259,     0,   260,     0,     0,     0,     0,     0,   261,
     262,   263,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,   269,     0,     0,     0,   270,     0,   271,   272,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
     279,     0,   281,   282,     0,     0,     0,   284,   285,   286,
     287,   288,     0,     0,   289,   290,     0,     0,   292,   293,
     294,   295,     0,     0,   296,   297,     0,     0,     0,   298,
     299,     0,   300,     0,     0,     0,   301,     0,   302,   303,
     304,   305,     0,   306,     0,   307,     0,     0,     0,   308,
     309,     0,   310,     0,     0,   311,   312,     0,     0,     0,
     313,   314,   315,   316,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,     0,   321,   322,   323,     0,
       0,     0,   324,     0,     0,     0,   325,   326,     0,   327,
     328,     0,     0,     0,   329,     0,   330,     0,     0,   331,
     332,     0,     0,   333,     0,     0,   334,   335,   662,     0,
       0,     0,     0,   336,   337,     0,   338,     0,   339,     0,
     340,   341,     0,     0,     0,     0,     0,     0,     0,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,   364,   365,   366,   367,     0,   368,
     369,     0,     0,     0,     0,   370,   371,   372,   373,   374,
     375,     0,     0,   376,   377,     0,   378,     0,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
       0,   389,   390,     0,     0,   391,   392,   393,   394,  1150,
       0,     0,     0,   396,   397,     0,     0,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,     0,   404,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   405,   406,
     407,     0,   408,     0,   409,     0,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,     0,   420,     0,   421,
     422,   423,     0,   424,     0,     0,   426,   427,   428,     0,
       0,   430,   431,   432,     0,     0,   433,     0,     0,     0,
     434,   435,     0,   436,   437,     0,     0,   438,   439,   440,
     441,   442,     0,     0,   444,     0,   445,   446,   447,     0,
       0,     0,   449,   450,   451,   452,   453,   454,   455,     0,
     456,     0,   457,   458,     0,   459,   460,   461,     0,   462,
       0,     0,   463,   464,   465,   466,     0,   467,     0,   468,
     469,   470,   471,   472,     0,   473,   474,     0,     0,     0,
     475,   476,   477,   478,     0,     0,     0,   479,     0,     0,
       0,     0,     0,   481,   482,   483,   484,     0,   485,   486,
     487,   488,   489,     0,     0,     0,     0,     0,   490,   491,
     492,     0,   493,     0,     0,   494,     0,     0,   495,     0,
     496,     0,   497,   498,   499,   500,   501,   502,     0,     0,
     503,   504,     0,     0,   505,   506,   507,   508,   509,   510,
       0,     0,     0,   512,   513,   514,     0,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   188,   521,   522,     0,
     523,   524,   525,   526,     0,     0,     0,     0,     0,   527,
     528,     0,     0,     0,   529,   530,   531,   532,     0,   533,
     534,     0,   535,   536,     0,   537,   538,     0,     0,   539,
       0,     0,   540,     0,   541,     0,   542,   543,     0,     0,
       0,     0,     0,   544,     0,   545,     0,     0,   546,     0,
       0,     0,   547,     0,   548,   549,   550,   551,     0,     0,
       0,     0,     0,     0,   552,   553,   554,     0,   555,   556,
     557,   558,     0,     0,   559,     0,     0,     0,   560,     0,
     561,   562,     0,   563,     0,     0,     0,     0,     0,     0,
       0,     0,   564,   565,   566,     0,     0,   567,   568,   569,
     570,     0,     0,   571,     0,   572,     0,     0,     0,     0,
       0,     0,   573,   574,     0,     0,   575,     0,   576,     0,
     577,   578,     0,     0,     0,   579,   580,   581,   582,   583,
     584,   585,     0,     0,   587,   588,   589,     0,   591,   592,
     593,   594,   191,   192,     0,   193,   194,   195,   196,   197,
    1771,     0,   198,     0,     0,     0,     0,   199,     0,     0,
     200,     0,   201,   202,   203,   204,   205,   206,     0,   207,
       0,     0,     0,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,   213,     0,   214,   215,     0,     0,
     216,     0,     0,   217,   218,     0,   219,   220,   221,     0,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,     0,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,     0,   242,   243,     0,   244,   245,   246,
     247,   248,     0,     0,     0,   249,     0,     0,     0,     0,
     250,     0,     0,   251,     0,     0,     0,   252,   253,   254,
       0,     0,   255,     0,     0,     0,     0,   256,   257,     0,
       0,     0,     0,   258,   259,     0,   260,     0,     0,     0,
       0,     0,   261,   262,   263,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,   269,     0,     0,     0,   270,
       0,   271,   272,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,   279,     0,   281,   282,     0,     0,     0,
     284,   285,   286,   287,   288,     0,     0,   289,   290,     0,
       0,   292,   293,   294,   295,     0,     0,   296,   297,     0,
       0,     0,   298,   299,     0,   300,     0,     0,     0,   301,
       0,   302,   303,   304,   305,     0,   306,     0,   307,     0,
       0,     0,   308,   309,     0,   310,     0,     0,   311,   312,
       0,     0,     0,   313,   314,   315,   316,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,     0,   321,
     322,   323,     0,     0,     0,   324,     0,     0,     0,   325,
     326,     0,   327,   328,     0,     0,     0,   329,     0,   330,
       0,     0,   331,   332,     0,     0,   333,     0,     0,   334,
     335,   662,     0,     0,     0,     0,   336,   337,     0,   338,
       0,   339,     0,   340,   341,     0,     0,     0,     0,     0,
       0,     0,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,     0,   368,   369,     0,     0,     0,     0,   370,   371,
     372,   373,   374,   375,     0,     0,   376,   377,     0,   378,
       0,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,     0,   389,   390,     0,     0,   391,   392,
     393,   394,  1772,     0,     0,     0,   396,   397,     0,     0,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
       0,   404,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   405,   406,   407,     0,   408,     0,   409,     0,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,     0,
     420,     0,   421,   422,   423,     0,   424,     0,     0,   426,
     427,   428,     0,     0,   430,   431,   432,     0,     0,   433,
       0,     0,     0,   434,   435,     0,   436,   437,     0,     0,
     438,   439,   440,   441,   442,     0,     0,   444,     0,   445,
     446,   447,     0,     0,     0,   449,   450,   451,   452,   453,
     454,   455,     0,   456,     0,   457,   458,     0,   459,   460,
     461,     0,   462,     0,     0,   463,   464,   465,   466,     0,
     467,     0,   468,   469,   470,   471,   472,     0,   473,   474,
       0,     0,     0,   475,   476,   477,   478,     0,     0,     0,
     479,     0,     0,     0,     0,     0,   481,   482,   483,   484,
       0,   485,   486,   487,   488,   489,     0,     0,     0,     0,
       0,   490,   491,   492,     0,   493,     0,     0,   494,     0,
       0,   495,     0,   496,     0,   497,   498,   499,   500,   501,
     502,     0,     0,   503,   504,     0,     0,   505,   506,   507,
     508,   509,   510,     0,     0,     0,   512,   513,   514,     0,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   188,
     521,   522,     0,   523,   524,   525,   526,     0,     0,     0,
       0,     0,   527,   528,     0,     0,     0,   529,   530,   531,
     532,     0,   533,   534,     0,   535,   536,     0,   537,   538,
       0,     0,   539,     0,     0,   540,     0,   541,     0,   542,
     543,     0,     0,     0,     0,     0,   544,     0,   545,     0,
       0,   546,     0,     0,     0,   547,     0,   548,   549,   550,
     551,     0,     0,     0,     0,     0,     0,   552,   553,   554,
       0,   555,   556,   557,   558,     0,     0,   559,     0,     0,
       0,   560,     0,   561,   562,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,   564,   565,   566,     0,     0,
     567,   568,   569,   570,     0,     0,   571,     0,   572,     0,
       0,     0,     0,     0,     0,   573,   574,     0,     0,   575,
       0,   576,     0,   577,   578,     0,     0,     0,   579,   580,
     581,   582,   583,   584,   585,     0,     0,   587,   588,   589,
       0,   591,   592,   593,   594,   191,   192,     0,   193,   194,
     195,   196,   197,  2664,     0,   198,     0,     0,     0,     0,
     199,     0,     0,   200,     0,   201,   202,   203,   204,   205,
     206,     0,   207,     0,     0,     0,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,   213,     0,   214,
     215,     0,     0,   216,     0,     0,   217,   218,     0,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,     0,   242,   243,     0,
     244,   245,   246,   247,   248,     0,     0,     0,   249,     0,
       0,     0,     0,   250,     0,     0,   251,     0,     0,     0,
     252,   253,   254,     0,     0,   255,     0,     0,     0,     0,
     256,   257,     0,     0,     0,     0,   258,   259,     0,   260,
       0,     0,     0,     0,     0,   261,   262,   263,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,   269,     0,
       0,     0,   270,     0,   271,   272,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,   279,     0,   281,   282,
       0,     0,     0,   284,   285,   286,   287,   288,     0,     0,
     289,   290,     0,     0,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,     0,   298,   299,     0,   300,     0,
       0,     0,   301,     0,   302,   303,   304,   305,     0,   306,
       0,   307,     0,     0,     0,   308,   309,     0,   310,     0,
       0,   311,   312,     0,     0,     0,   313,   314,   315,   316,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,     0,   321,   322,   323,     0,     0,     0,   324,     0,
       0,     0,   325,   326,     0,   327,   328,     0,     0,     0,
     329,     0,   330,     0,     0,   331,   332,     0,     0,   333,
       0,     0,   334,   335,   662,     0,     0,     0,     0,   336,
     337,     0,   338,     0,   339,     0,   340,   341,     0,     0,
       0,     0,     0,     0,     0,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
     364,   365,   366,   367,     0,   368,   369,     0,     0,     0,
       0,   370,   371,   372,   373,   374,   375,     0,     0,   376,
     377,     0,   378,     0,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,     0,   389,   390,     0,
       0,   391,   392,   393,   394,  2665,     0,     0,     0,   396,
     397,     0,     0,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,     0,   404,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   405,   406,   407,     0,   408,     0,
     409,     0,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,     0,   420,     0,   421,   422,   423,     0,   424,
       0,     0,   426,   427,   428,     0,     0,   430,   431,   432,
       0,     0,   433,     0,     0,     0,   434,   435,     0,   436,
     437,     0,     0,   438,   439,   440,   441,   442,     0,     0,
     444,     0,   445,   446,   447,     0,     0,     0,   449,   450,
     451,   452,   453,   454,   455,     0,   456,     0,   457,   458,
       0,   459,   460,   461,     0,   462,     0,     0,   463,   464,
     465,   466,     0,   467,     0,   468,   469,   470,   471,   472,
       0,   473,   474,     0,     0,     0,   475,   476,   477,   478,
       0,     0,     0,   479,     0,     0,     0,     0,     0,   481,
     482,   483,   484,     0,   485,   486,   487,   488,   489,     0,
       0,     0,     0,     0,   490,   491,   492,     0,   493,     0,
       0,   494,     0,     0,   495,     0,   496,     0,   497,   498,
     499,   500,   501,   502,     0,     0,   503,   504,     0,     0,
     505,   506,   507,   508,   509,   510,     0,     0,     0,   512,
     513,   514,     0,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   188,   521,   522,     0,   523,   524,   525,   526,
       0,     0,     0,     0,     0,   527,   528,     0,     0,     0,
     529,   530,   531,   532,     0,   533,   534,     0,   535,   536,
       0,   537,   538,     0,     0,   539,     0,     0,   540,     0,
     541,     0,   542,   543,     0,     0,     0,     0,     0,   544,
       0,   545,     0,     0,   546,     0,     0,     0,   547,     0,
     548,   549,   550,   551,     0,     0,     0,     0,     0,     0,
     552,   553,   554,     0,   555,   556,   557,   558,     0,     0,
     559,     0,     0,     0,   560,     0,   561,   562,     0,   563,
       0,     0,     0,     0,     0,     0,     0,     0,   564,   565,
     566,     0,     0,   567,   568,   569,   570,     0,     0,   571,
       0,   572,     0,     0,     0,     0,     0,     0,   573,   574,
       0,     0,   575,     0,   576,     0,   577,   578,     0,     0,
       0,   579,   580,   581,   582,   583,   584,   585,     0,     0,
     587,   588,   589,     0,   591,   592,   593,   594,   191,   192,
       0,   193,   194,   195,   196,   197,     0,     0,   198,     0,
       0,     0,     0,   199,     0,     0,   200,     0,   201,   202,
     203,   204,   205,   206,     0,   207,     0,     0,     0,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
     213,     0,   214,   215,     0,     0,   216,     0,     0,   217,
     218,     0,   219,   220,   221,     0,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,     0,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,     0,
     242,   243,     0,   244,   245,   246,   247,   248,     0,     0,
       0,   249,     0,     0,     0,     0,   250,     0,     0,   251,
       0,     0,     0,   252,   253,   254,     0,     0,   255,     0,
       0,     0,     0,   256,   257,     0,     0,     0,     0,   258,
     259,     0,   260,     0,     0,     0,     0,     0,   261,   262,
     263,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,   269,     0,     0,     0,   270,     0,   271,   272,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,   279,
       0,   281,   282,     0,     0,     0,   284,   285,   286,   287,
     288,     0,     0,   289,   290,     0,     0,   292,   293,   294,
     295,     0,     0,   296,   297,     0,     0,     0,   298,   299,
       0,   300,     0,     0,     0,   301,     0,   302,   303,   304,
     305,     0,   306,     0,   307,     0,     0,     0,   308,   309,
       0,   310,     0,     0,   311,   312,     0,     0,     0,   313,
     314,   315,   316,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,     0,   321,   322,   323,     0,     0,
       0,   324,     0,     0,     0,   325,   326,     0,   327,   328,
       0,     0,     0,   329,     0,   330,     0,     0,   331,   332,
       0,     0,   333,     0,     0,   334,   335,   662,     0,     0,
       0,     0,   336,   337,     0,   338,     0,   339,     0,   340,
     341,     0,     0,     0,     0,     0,     0,     0,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,     0,   368,   369,
       0,     0,     0,     0,   370,   371,   372,   373,   374,   375,
       0,     0,   376,   377,     0,   378,     0,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,     0,
     389,   390,     0,     0,   391,   392,   393,   394,     0,     0,
       0,     0,   396,   397,     0,     0,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,     0,   404,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   405,   406,   407,
       0,   408,     0,   409,     0,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,     0,   420,     0,   421,   422,
     423,     0,   424,     0,     0,   426,   427,   428,     0,     0,
     430,   431,   432,     0,     0,   433,     0,     0,     0,   434,
     435,     0,   436,   437,     0,     0,   438,   439,   440,   441,
     442,     0,     0,   444,     0,   445,   446,   447,     0,     0,
       0,   449,   450,   451,   452,   453,   454,   455,     0,   456,
       0,   457,   458,     0,   459,   460,   461,     0,   462,     0,
       0,   463,   464,   465,   466,     0,   467,     0,   468,   469,
     470,   471,   472,     0,   473,   474,     0,     0,     0,   475,
     476,   477,   478,     0,     0,     0,   479,     0,     0,     0,
       0,     0,   481,   482,   483,   484,     0,   485,   486,   487,
     488,   489,     0,     0,     0,     0,     0,   490,   491,   492,
       0,   493,     0,     0,   494,     0,     0,   495,     0,   496,
       0,   497,   498,   499,   500,   501,   502,     0,     0,   503,
     504,     0,     0,   505,   506,   507,   508,   509,   510,     0,
       0,     0,   512,   513,   514,     0,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   188,   521,   522,     0,   523,
     524,   525,   526,     0,     0,     0,     0,     0,   527,   528,
       0,     0,     0,   529,   530,   531,   532,     0,   533,   534,
       0,   535,   536,     0,   537,   538,     0,     0,   539,     0,
       0,   540,     0,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   544,     0,   545,     0,     0,   546,     0,     0,
       0,   547,     0,   548,   549,   550,   551,     0,     0,     0,
       0,     0,     0,   552,   553,   554,     0,   555,   556,   557,
     558,     0,     0,   559,     0,     0,     0,   560,     0,   561,
     562,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,   564,   565,   566,     0,     0,   567,   568,   569,   570,
       0,     0,   571,     0,   572,     0,     0,     0,     0,     0,
       0,   573,   574,     0,     0,   575,     0,   576,     0,   577,
     578,     0,     0,     0,   579,   580,   581,   582,   583,   584,
     585,     0,     0,   587,   588,   589,     0,   591,   592,   593,
     594,   192,     0,   193,   194,   195,   196,   197,     0,     0,
       0,     0,     0,     0,     0,   199,     0,     0,     0,     0,
     201,   202,   203,   204,   205,     0,     0,  -440,     0,     0,
       0,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,   213,     0,     0,     0,     0,     0,   216,  4523,
       0,   217,   218,     0,   219,   220,     0,     0,     0,     0,
     223,   224,   225,  4524,   227,   228,     0,   229,   230,     0,
     231,   232,     0,   234,     0,   236,   237,   238,   239,   240,
     241,     0,   242,   243,     0,   244,   245,   246,     0,   248,
       0,     0,     0,   249,     0,     0,     0,     0,   250,     0,
       0,   251,     0,     0,     0,   252,   253,   254,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,     0,     0,
       0,   258,   259,     0,   260,     0,     0,     0,     0,     0,
     261,   262,   263,   264,   265,     0,     0,     0,     0,     0,
       0,   267,   268,   269,     0,  -410,  -410,   270,     0,  -410,
     272,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,   279,   280,   281,   282,     0,     0,     0,   284,   285,
     286,   287,   288,     0,     0,   289,   290,  4525,   291,   292,
     293,   294,   295,     0,     0,     0,     0,     0,     0,     0,
       0,   299,     0,   300,     0,     0,     0,   301,     0,     0,
     303,   304,   305,     0,   306,     0,   307,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   312,     0,     0,
       0,   313,   314,   315,   316,  4526,     0,   317,     0,   319,
       0,     0,   320,     0,     0,     0,     0,   321,   322,     0,
       0,     0,     0,   324,     0,     0,     0,   325,   326,     0,
     327,   328,  4527,     0,     0,   329,     0,   330,     0,     0,
       0,   332,     0,     0,   333,  4528,     0,   334,   335,     0,
       0,     0,     0,     0,   336,   337,     0,   338,     0,   339,
       0,   340,   341,     0,     0,     0,     0,  -395,     0,     0,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,     0,
     368,   369,     0,     0,     0,     0,   370,   371,   372,   373,
     374,   375,     0,     0,   376,   377,     0,   378,     0,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,     0,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,     0,     0,   397,     0,     0,     0,   398,
       0,   399,   400,     0,   401,   402,  4529,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     406,   407,     0,     0,     0,   409,     0,   410,   411,   412,
     413,   414,   415,   416,   417,   418,     0,     0,     0,     0,
       0,   422,   423,     0,   424,     0,   425,   426,   427,   428,
     429,     0,   430,   431,   432,     0,     0,   433,     0,     0,
       0,   434,   435,     0,   436,   437,     0,     0,   438,   439,
     440,   441,   442,     0,   443,     0,     0,   445,     0,   447,
    -395,     0,   448,   449,   450,   451,   452,   453,   454,   455,
       0,     0,     0,   457,     0,     0,   459,   460,   461,  4530,
     462,     0,     0,     0,   464,   465,   466,     0,   467,     0,
     468,   469,     0,   471,   472,     0,   473,     0,     0,     0,
       0,   475,   476,   477,     0,     0,     0,     0,   479,     0,
       0,     0,     0,     0,     0,   482,     0,   484,     0,   485,
       0,     0,   488,   489,     0,     0,     0,     0,     0,   490,
     491,   492,     0,   493,     0,     0,   494,     0,     0,   495,
       0,   496,     0,   497,     0,   499,   500,   501,   502,     0,
       0,     0,   504,     0,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,   513,   514,     0,   515,   516,
       0,     0,   517,   518,   519,   520,     0,     0,   521,   522,
       0,   523,   524,   525,   526,     0,     0,     0,     0,     0,
     527,   528,     0,     0,     0,     0,   530,   531,   532,     0,
     533,   534,     0,   535,   536,     0,     0,     0,     0,     0,
     539,     0,     0,   540,     0,     0,     0,   542,   543,     0,
       0,     0,     0,     0,   544,     0,   545,     0,     0,   546,
       0,     0,     0,   547,     0,   548,   549,   550,   551,     0,
       0,  -395,     0,     0,     0,   552,   553,     0,     0,   555,
       0,   557,   558,     0,     0,   559,     0,     0,     0,     0,
       0,     0,     0,     0,   563,     0,     0,     0,     0,     0,
       0,     0,     0,   564,   565,   566,     0,     0,   567,   568,
     569,     0,     0,     0,   571,     0,   572,     0,     0,     0,
       0,     0,     0,   573,   574,     0,     0,   575,     0,   576,
       0,   577,   578,     0,     0,     0,   579,   580,   581,   582,
     583,   584,   585,   586,     0,   587,   588,   589,     0,   591,
     592,   593,   594,   192,     0,   193,   194,   195,   196,   197,
       0,     0,     0,     0,     0,     0,     0,   199,     0,     0,
       0,     0,   201,   202,   203,   204,   205,     0,     0,  -440,
       0,     0,     0,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,   213,     0,     0,     0,     0,     0,
     216,  4523,     0,   217,   218,     0,   219,   220,     0,     0,
       0,     0,   223,   224,   225,  4524,   227,   228,     0,   229,
     230,     0,   231,   232,     0,   234,     0,   236,   237,   238,
     239,   240,   241,     0,   242,   243,     0,   244,   245,   246,
       0,   248,     0,     0,     0,   249,     0,     0,     0,     0,
     250,     0,     0,   251,     0,     0,     0,   252,   253,   254,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
       0,     0,     0,   258,   259,     0,   260,     0,     0,     0,
       0,     0,   261,   262,   263,   264,   265,     0,     0,     0,
       0,     0,     0,   267,   268,   269,     0,  -431,     0,   270,
       0,  -431,   272,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,   279,   280,   281,   282,     0,     0,     0,
     284,   285,   286,   287,   288,     0,     0,   289,   290,  4525,
     291,   292,   293,   294,   295,     0,     0,     0,     0,     0,
       0,     0,     0,   299,     0,   300,     0,     0,     0,   301,
       0,     0,   303,   304,   305,     0,   306,     0,   307,     0,
       0,     0,     0,   309,     0,     0,     0,     0,     0,   312,
       0,     0,     0,   313,   314,   315,   316,  4526,     0,   317,
       0,   319,     0,     0,   320,     0,     0,     0,     0,   321,
     322,     0,     0,     0,     0,   324,     0,     0,     0,   325,
     326,     0,   327,   328,  4527,     0,     0,   329,     0,   330,
       0,     0,     0,   332,     0,     0,   333,  4528,     0,   334,
     335,     0,     0,     0,     0,     0,   336,   337,     0,   338,
       0,   339,     0,   340,   341,     0,     0,     0,     0,  -395,
       0,     0,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,     0,   368,   369,     0,     0,     0,     0,   370,   371,
     372,   373,   374,   375,     0,     0,   376,   377,     0,   378,
       0,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,     0,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,     0,     0,   397,     0,     0,
       0,   398,     0,   399,   400,     0,   401,   402,  4529,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   406,   407,     0,     0,     0,   409,     0,   410,
     411,   412,   413,   414,   415,   416,   417,   418,     0,     0,
       0,     0,     0,   422,   423,     0,   424,     0,   425,   426,
     427,   428,   429,     0,   430,   431,   432,     0,     0,   433,
       0,     0,     0,   434,   435,     0,   436,   437,     0,     0,
     438,   439,   440,   441,   442,     0,   443,     0,     0,   445,
       0,   447,  -395,     0,   448,   449,   450,   451,   452,   453,
     454,   455,     0,     0,     0,   457,     0,     0,   459,   460,
     461,  4530,   462,     0,     0,     0,   464,   465,   466,     0,
     467,     0,   468,   469,     0,   471,   472,     0,   473,     0,
       0,     0,     0,   475,   476,   477,     0,     0,     0,     0,
     479,     0,     0,     0,     0,     0,     0,   482,     0,   484,
       0,   485,     0,     0,   488,   489,     0,     0,     0,     0,
       0,   490,   491,   492,     0,   493,     0,     0,   494,     0,
       0,   495,     0,   496,     0,   497,     0,   499,   500,   501,
     502,     0,     0,     0,   504,     0,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,   513,   514,     0,
     515,   516,     0,     0,   517,   518,   519,   520,     0,     0,
     521,   522,     0,   523,   524,   525,   526,     0,     0,     0,
       0,     0,   527,   528,     0,     0,     0,     0,   530,   531,
     532,     0,   533,   534,     0,   535,   536,     0,     0,     0,
       0,     0,   539,     0,     0,   540,     0,     0,     0,   542,
     543,     0,     0,     0,     0,     0,   544,     0,   545,     0,
       0,   546,     0,     0,     0,   547,     0,   548,   549,   550,
     551,  -431,     0,  -395,     0,     0,     0,   552,   553,     0,
       0,   555,     0,   557,   558,     0,     0,   559,     0,     0,
       0,     0,     0,     0,     0,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,   564,   565,   566,     0,     0,
     567,   568,   569,     0,     0,     0,   571,     0,   572,     0,
       0,     0,     0,     0,     0,   573,   574,     0,     0,   575,
       0,   576,     0,   577,   578,     0,     0,     0,   579,   580,
     581,   582,   583,   584,   585,   586,     0,   587,   588,   589,
       0,   591,   592,   593,   594,   192,     0,   193,   194,   195,
     196,   197,     0,     0,     0,     0,     0,     0,     0,   199,
       0,     0,     0,     0,   201,   202,   203,   204,   205,     0,
       0,  -440,     0,     0,     0,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,   213,     0,     0,     0,
       0,     0,   216,  4523,     0,   217,   218,     0,   219,   220,
       0,     0,     0,     0,   223,   224,   225,  4524,   227,   228,
       0,   229,   230,     0,   231,   232,     0,   234,     0,   236,
     237,   238,   239,   240,   241,     0,   242,   243,     0,   244,
     245,   246,     0,   248,     0,     0,     0,   249,     0,     0,
       0,     0,   250,     0,     0,   251,     0,     0,     0,   252,
     253,   254,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,     0,     0,     0,   258,   259,     0,   260,     0,
       0,     0,     0,     0,   261,   262,   263,   264,   265,     0,
       0,     0,     0,     0,     0,   267,   268,   269,     0,  -428,
       0,   270,     0,  -428,   272,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,   279,   280,   281,   282,     0,
       0,     0,   284,   285,   286,   287,   288,     0,     0,   289,
     290,  4525,   291,   292,   293,   294,   295,     0,     0,     0,
       0,     0,     0,     0,     0,   299,     0,   300,     0,     0,
       0,   301,     0,     0,   303,   304,   305,     0,   306,     0,
     307,     0,     0,     0,     0,   309,     0,     0,     0,     0,
       0,   312,     0,     0,     0,   313,   314,   315,   316,  4526,
       0,   317,     0,   319,     0,     0,   320,     0,     0,     0,
       0,   321,   322,     0,     0,     0,     0,   324,     0,     0,
       0,   325,   326,     0,   327,   328,  4527,     0,     0,   329,
       0,   330,     0,     0,     0,   332,     0,     0,   333,  4528,
       0,   334,   335,     0,     0,     0,     0,     0,   336,   337,
       0,   338,     0,   339,     0,   340,   341,     0,     0,     0,
       0,  -395,     0,     0,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,     0,   368,   369,     0,     0,     0,     0,
     370,   371,   372,   373,   374,   375,     0,     0,   376,   377,
       0,   378,     0,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,     0,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,     0,     0,   397,
       0,     0,     0,   398,     0,   399,   400,     0,   401,   402,
    4529,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   406,   407,     0,     0,     0,   409,
       0,   410,   411,   412,   413,   414,   415,   416,   417,   418,
       0,     0,     0,     0,     0,   422,   423,     0,   424,     0,
     425,   426,   427,   428,   429,     0,   430,   431,   432,     0,
       0,   433,     0,     0,     0,   434,   435,     0,   436,   437,
       0,     0,   438,   439,   440,   441,   442,     0,   443,     0,
       0,   445,     0,   447,  -395,     0,   448,   449,   450,   451,
     452,   453,   454,   455,     0,     0,     0,   457,     0,     0,
     459,   460,   461,  4530,   462,     0,     0,     0,   464,   465,
     466,     0,   467,     0,   468,   469,     0,   471,   472,     0,
     473,     0,     0,     0,     0,   475,   476,   477,     0,     0,
       0,     0,   479,     0,     0,     0,     0,     0,     0,   482,
       0,   484,     0,   485,     0,     0,   488,   489,     0,     0,
       0,     0,     0,   490,   491,   492,     0,   493,     0,     0,
     494,     0,     0,   495,     0,   496,     0,   497,     0,   499,
     500,   501,   502,     0,     0,     0,   504,     0,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,   513,
     514,     0,   515,   516,     0,     0,   517,   518,   519,   520,
       0,     0,   521,   522,     0,   523,   524,   525,   526,     0,
       0,     0,     0,     0,   527,   528,     0,     0,     0,     0,
     530,   531,   532,     0,   533,   534,     0,   535,   536,     0,
       0,     0,     0,     0,   539,     0,     0,   540,     0,     0,
       0,   542,   543,     0,     0,     0,     0,     0,   544,     0,
     545,     0,     0,   546,     0,     0,     0,   547,     0,   548,
     549,   550,   551,  -428,     0,  -395,     0,     0,     0,   552,
     553,     0,     0,   555,     0,   557,   558,     0,     0,   559,
       0,     0,     0,     0,     0,     0,     0,     0,   563,     0,
       0,     0,     0,     0,     0,     0,     0,   564,   565,   566,
       0,     0,   567,   568,   569,     0,     0,     0,   571,     0,
     572,     0,     0,     0,     0,     0,     0,   573,   574,     0,
       0,   575,     0,   576,     0,   577,   578,     0,     0,     0,
     579,   580,   581,   582,   583,   584,   585,   586,     0,   587,
     588,   589,     0,   591,   592,   593,   594,   192,     0,   193,
     194,   195,   196,   197,     0,     0,     0,     0,     0,     0,
       0,   199,     0,     0,     0,     0,   201,   202,   203,   204,
     205,     0,     0,  -440,     0,     0,     0,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,   213,     0,
       0,     0,     0,     0,   216,  4523,     0,   217,   218,     0,
     219,   220,     0,     0,     0,     0,   223,   224,   225,  4524,
     227,   228,     0,   229,   230,     0,   231,   232,     0,   234,
       0,   236,   237,   238,   239,   240,   241,     0,   242,   243,
       0,   244,   245,   246,     0,   248,     0,     0,     0,   249,
       0,     0,     0,     0,   250,     0,     0,   251,     0,     0,
       0,   252,   253,   254,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,     0,     0,     0,   258,   259,     0,
     260,     0,     0,     0,     0,     0,   261,   262,   263,   264,
     265,     0,     0,     0,     0,     0,     0,   267,   268,   269,
       0,     0,     0,   270,     0,  4765,   272,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,   279,   280,   281,
     282,     0,     0,     0,   284,   285,   286,   287,   288,     0,
       0,   289,   290,  4525,   291,   292,   293,   294,   295,     0,
       0,     0,     0,     0,     0,     0,     0,   299,     0,   300,
       0,     0,     0,   301,     0,     0,   303,   304,   305,     0,
     306,     0,   307,     0,     0,     0,     0,   309,     0,     0,
       0,     0,     0,   312,     0,     0,     0,   313,   314,   315,
     316,  4526,     0,   317,     0,   319,     0,     0,   320,     0,
       0,     0,     0,   321,   322,     0,     0,     0,     0,   324,
       0,     0,     0,   325,   326,     0,   327,   328,  4527,     0,
       0,   329,     0,   330,     0,     0,     0,   332,     0,     0,
     333,  4528,     0,   334,   335,     0,     0,     0,     0,     0,
     336,   337,     0,   338,     0,   339,     0,   340,   341,     0,
       0,     0,     0,  -395,     0,     0,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,     0,   368,   369,     0,     0,
       0,     0,   370,   371,   372,   373,   374,   375,     0,     0,
     376,   377,     0,   378,     0,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,     0,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,     0,
       0,   397,     0,     0,     0,   398,     0,   399,   400,     0,
     401,   402,  4529,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   406,   407,     0,     0,
       0,   409,     0,   410,   411,   412,   413,   414,   415,   416,
     417,   418,     0,     0,     0,     0,     0,   422,   423,     0,
     424,     0,   425,   426,   427,   428,   429,     0,   430,   431,
     432,     0,     0,   433,     0,     0,     0,   434,   435,     0,
     436,   437,     0,     0,   438,   439,   440,   441,   442,     0,
     443,     0,     0,   445,     0,   447,  -395,     0,   448,   449,
     450,   451,   452,   453,   454,   455,     0,     0,     0,   457,
       0,     0,   459,   460,   461,  4530,   462,     0,     0,     0,
     464,   465,   466,     0,   467,     0,   468,   469,     0,   471,
     472,     0,   473,     0,     0,     0,     0,   475,   476,   477,
       0,     0,     0,     0,   479,     0,     0,     0,     0,     0,
       0,   482,     0,   484,     0,   485,     0,     0,   488,   489,
       0,     0,     0,     0,     0,   490,   491,   492,     0,   493,
       0,     0,   494,     0,     0,   495,     0,   496,     0,   497,
       0,   499,   500,   501,   502,     0,     0,     0,   504,     0,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,   513,   514,     0,   515,   516,     0,     0,   517,   518,
     519,   520,     0,     0,   521,   522,     0,   523,   524,   525,
     526,     0,     0,     0,     0,     0,   527,   528,     0,     0,
       0,     0,   530,   531,   532,     0,   533,   534,     0,   535,
     536,     0,     0,     0,     0,     0,   539,     0,     0,   540,
       0,     0,     0,   542,   543,     0,     0,     0,     0,     0,
     544,     0,   545,     0,     0,   546,     0,     0,     0,   547,
       0,   548,   549,   550,   551,     0,     0,  -395,     0,     0,
       0,   552,   553,     0,     0,   555,     0,   557,   558,     0,
       0,   559,     0,     0,     0,     0,     0,     0,     0,     0,
     563,     0,     0,     0,     0,     0,     0,     0,     0,   564,
     565,   566,     0,     0,   567,   568,   569,     0,     0,     0,
     571,     0,   572,     0,     0,     0,     0,     0,     0,   573,
     574,     0,     0,   575,     0,   576,     0,   577,   578,     0,
       0,     0,   579,   580,   581,   582,   583,   584,   585,   586,
       0,   587,   588,   589,     0,   591,   592,   593,   594,   192,
       0,   193,   194,   195,   196,   197,     0,     0,     0,     0,
       0,     0,     0,   199,     0,     0,     0,     0,   201,   202,
     203,   204,   205,     0,     0,  -440,     0,     0,     0,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
     213,     0,     0,     0,     0,     0,   216,  4523,     0,   217,
     218,     0,   219,   220,     0,     0,     0,     0,   223,   224,
     225,  4524,   227,   228,     0,   229,   230,     0,   231,   232,
       0,   234,     0,   236,   237,   238,   239,   240,   241,     0,
     242,   243,     0,   244,   245,   246,     0,   248,     0,     0,
       0,   249,     0,     0,     0,     0,   250,     0,     0,   251,
       0,     0,     0,   252,   253,   254,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,     0,     0,     0,   258,
     259,     0,   260,     0,     0,     0,     0,     0,   261,   262,
     263,   264,   265,     0,     0,     0,     0,     0,     0,   267,
     268,   269,     0,     0,     0,   270,     0,  -433,   272,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,   279,
     280,   281,   282,     0,     0,     0,   284,   285,   286,   287,
     288,     0,     0,   289,   290,  4525,   291,   292,   293,   294,
     295,     0,     0,     0,     0,     0,     0,     0,     0,   299,
       0,   300,     0,     0,     0,   301,     0,     0,   303,   304,
     305,     0,   306,     0,   307,     0,     0,     0,     0,   309,
       0,     0,     0,     0,     0,   312,     0,     0,     0,   313,
     314,   315,   316,  4526,     0,   317,     0,   319,     0,     0,
     320,     0,     0,     0,     0,   321,   322,     0,     0,     0,
       0,   324,     0,     0,     0,   325,   326,     0,   327,   328,
    4527,     0,     0,   329,     0,   330,     0,     0,     0,   332,
       0,     0,   333,  4528,     0,   334,   335,     0,     0,     0,
       0,     0,   336,   337,     0,   338,     0,   339,     0,   340,
     341,     0,     0,     0,     0,  -395,     0,     0,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,     0,   368,   369,
       0,     0,     0,     0,   370,   371,   372,   373,   374,   375,
       0,     0,   376,   377,     0,   378,     0,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,     0,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,     0,     0,   397,     0,     0,     0,   398,     0,   399,
     400,     0,   401,   402,  4529,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   406,   407,
       0,     0,     0,   409,     0,   410,   411,   412,   413,   414,
     415,   416,   417,   418,     0,     0,     0,     0,     0,   422,
     423,     0,   424,     0,   425,   426,   427,   428,   429,     0,
     430,   431,   432,     0,     0,   433,     0,     0,     0,   434,
     435,     0,   436,   437,     0,     0,   438,   439,   440,   441,
     442,     0,   443,     0,     0,   445,     0,   447,  -395,     0,
     448,   449,   450,   451,   452,   453,   454,   455,     0,     0,
       0,   457,     0,     0,   459,   460,   461,  4530,   462,     0,
       0,     0,   464,   465,   466,     0,   467,     0,   468,   469,
       0,   471,   472,     0,   473,     0,     0,     0,     0,   475,
     476,   477,     0,     0,     0,     0,   479,     0,     0,     0,
       0,     0,     0,   482,     0,   484,     0,   485,     0,     0,
     488,   489,     0,     0,     0,     0,     0,   490,   491,   492,
       0,   493,     0,     0,   494,     0,     0,   495,     0,   496,
       0,   497,     0,   499,   500,   501,   502,     0,     0,     0,
     504,     0,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,   513,   514,     0,   515,   516,     0,     0,
     517,   518,   519,   520,     0,     0,   521,   522,     0,   523,
     524,   525,   526,     0,     0,     0,     0,     0,   527,   528,
       0,     0,     0,     0,   530,   531,   532,     0,   533,   534,
       0,   535,   536,     0,     0,     0,     0,     0,   539,     0,
       0,   540,     0,     0,     0,   542,   543,     0,     0,     0,
       0,     0,   544,     0,   545,     0,     0,   546,     0,     0,
       0,   547,     0,   548,   549,   550,   551,     0,     0,  -395,
       0,     0,     0,   552,   553,     0,     0,   555,     0,   557,
     558,     0,     0,   559,     0,     0,     0,     0,     0,     0,
       0,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,   564,   565,   566,     0,     0,   567,   568,   569,     0,
       0,     0,   571,     0,   572,     0,     0,     0,     0,     0,
       0,   573,   574,     0,     0,   575,     0,   576,     0,   577,
     578,     0,     0,     0,   579,   580,   581,   582,   583,   584,
     585,   586,     0,   587,   588,   589,     0,   591,   592,   593,
     594,   192,     0,   193,   194,   195,   196,   197,     0,     0,
       0,     0,     0,     0,     0,   199,     0,     0,     0,     0,
     201,   202,   203,   204,   205,     0,     0,  -440,     0,     0,
       0,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,   213,     0,     0,     0,     0,     0,   216,  4523,
       0,   217,   218,     0,   219,   220,     0,     0,     0,     0,
     223,   224,   225,  4524,   227,   228,     0,   229,   230,     0,
     231,   232,     0,   234,     0,   236,   237,   238,   239,   240,
     241,     0,   242,   243,     0,   244,   245,   246,     0,   248,
       0,     0,     0,   249,     0,     0,     0,     0,   250,     0,
       0,   251,     0,     0,     0,   252,   253,   254,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,     0,     0,
       0,   258,   259,     0,   260,     0,     0,     0,     0,     0,
     261,   262,   263,   264,   265,     0,     0,     0,     0,     0,
       0,   267,   268,   269,     0,     0,     0,   270,     0,  4825,
     272,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,   279,   280,   281,   282,     0,     0,     0,   284,   285,
     286,   287,   288,     0,     0,   289,   290,  4525,   291,   292,
     293,   294,   295,     0,     0,     0,     0,     0,     0,     0,
       0,   299,     0,   300,     0,     0,     0,   301,     0,     0,
     303,   304,   305,     0,   306,     0,   307,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   312,     0,     0,
       0,   313,   314,   315,   316,  4526,     0,   317,     0,   319,
       0,     0,   320,     0,     0,     0,     0,   321,   322,     0,
       0,     0,     0,   324,     0,     0,     0,   325,   326,     0,
     327,   328,  4527,     0,     0,   329,     0,   330,     0,     0,
       0,   332,     0,     0,   333,  4528,     0,   334,   335,     0,
       0,     0,     0,     0,   336,   337,     0,   338,     0,   339,
       0,   340,   341,     0,     0,     0,     0,  -395,     0,     0,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,     0,
     368,   369,     0,     0,     0,     0,   370,   371,   372,   373,
     374,   375,     0,     0,   376,   377,     0,   378,     0,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,     0,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,     0,     0,   397,     0,     0,     0,   398,
       0,   399,   400,     0,   401,   402,  4529,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     406,   407,     0,     0,     0,   409,     0,   410,   411,   412,
     413,   414,   415,   416,   417,   418,     0,     0,     0,     0,
       0,   422,   423,     0,   424,     0,   425,   426,   427,   428,
     429,     0,   430,   431,   432,     0,     0,   433,     0,     0,
       0,   434,   435,     0,   436,   437,     0,     0,   438,   439,
     440,   441,   442,     0,   443,     0,     0,   445,     0,   447,
    -395,     0,   448,   449,   450,   451,   452,   453,   454,   455,
       0,     0,     0,   457,     0,     0,   459,   460,   461,  4530,
     462,     0,     0,     0,   464,   465,   466,     0,   467,     0,
     468,   469,     0,   471,   472,     0,   473,     0,     0,     0,
       0,   475,   476,   477,     0,     0,     0,     0,   479,     0,
       0,     0,     0,     0,     0,   482,     0,   484,     0,   485,
       0,     0,   488,   489,     0,     0,     0,     0,     0,   490,
     491,   492,     0,   493,     0,     0,   494,     0,     0,   495,
       0,   496,     0,   497,     0,   499,   500,   501,   502,     0,
       0,     0,   504,     0,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,   513,   514,     0,   515,   516,
       0,     0,   517,   518,   519,   520,     0,     0,   521,   522,
       0,   523,   524,   525,   526,     0,     0,     0,     0,     0,
     527,   528,     0,     0,     0,     0,   530,   531,   532,     0,
     533,   534,     0,   535,   536,     0,     0,     0,     0,     0,
     539,     0,     0,   540,     0,     0,     0,   542,   543,     0,
       0,     0,     0,     0,   544,     0,   545,     0,     0,   546,
       0,     0,     0,   547,     0,   548,   549,   550,   551,     0,
       0,  -395,     0,     0,     0,   552,   553,     0,     0,   555,
       0,   557,   558,     0,     0,   559,     0,     0,     0,     0,
       0,     0,     0,     0,   563,     0,     0,     0,     0,     0,
       0,     0,     0,   564,   565,   566,     0,     0,   567,   568,
     569,     0,     0,     0,   571,     0,   572,     0,     0,     0,
       0,     0,     0,   573,   574,     0,     0,   575,     0,   576,
       0,   577,   578,     0,     0,     0,   579,   580,   581,   582,
     583,   584,   585,   586,     0,   587,   588,   589,     0,   591,
     592,   593,   594,   192,     0,   193,   194,   195,   196,   197,
       0,     0,     0,     0,     0,     0,     0,   199,     0,     0,
       0,     0,   201,   202,   203,   204,   205,     0,     0,  -440,
       0,     0,     0,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,   213,     0,     0,     0,     0,     0,
     216,  4523,     0,   217,   218,     0,   219,   220,     0,     0,
       0,     0,   223,   224,   225,  4524,   227,   228,     0,   229,
     230,     0,   231,   232,     0,   234,     0,   236,   237,   238,
     239,   240,   241,     0,   242,   243,     0,   244,   245,   246,
       0,   248,     0,     0,     0,   249,     0,     0,     0,     0,
     250,     0,     0,   251,     0,     0,     0,   252,   253,   254,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
       0,     0,     0,   258,   259,     0,   260,     0,     0,     0,
       0,     0,   261,   262,   263,   264,   265,     0,     0,     0,
       0,     0,     0,   267,   268,   269,     0,     0,     0,   270,
       0,  4874,   272,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,   279,   280,   281,   282,     0,     0,     0,
     284,   285,   286,   287,   288,     0,     0,   289,   290,  4525,
     291,   292,   293,   294,   295,     0,     0,     0,     0,     0,
       0,     0,     0,   299,     0,   300,     0,     0,     0,   301,
       0,     0,   303,   304,   305,     0,   306,     0,   307,     0,
       0,     0,     0,   309,     0,     0,     0,     0,     0,   312,
       0,     0,     0,   313,   314,   315,   316,  4526,     0,   317,
       0,   319,     0,     0,   320,     0,     0,     0,     0,   321,
     322,     0,     0,     0,     0,   324,     0,     0,     0,   325,
     326,     0,   327,   328,  4527,     0,     0,   329,     0,   330,
       0,     0,     0,   332,     0,     0,   333,  4528,     0,   334,
     335,     0,     0,     0,     0,     0,   336,   337,     0,   338,
       0,   339,     0,   340,   341,     0,     0,     0,     0,  -395,
       0,     0,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,   364,   365,   366,
     367,     0,   368,   369,     0,     0,     0,     0,   370,   371,
     372,   373,   374,   375,     0,     0,   376,   377,     0,   378,
       0,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,     0,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,     0,     0,   397,     0,     0,
       0,   398,     0,   399,   400,     0,   401,   402,  4529,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   406,   407,     0,     0,     0,   409,     0,   410,
     411,   412,   413,   414,   415,   416,   417,   418,     0,     0,
       0,     0,     0,   422,   423,     0,   424,     0,   425,   426,
     427,   428,   429,     0,   430,   431,   432,     0,     0,   433,
       0,     0,     0,   434,   435,     0,   436,   437,     0,     0,
     438,   439,   440,   441,   442,     0,   443,     0,     0,   445,
       0,   447,  -395,     0,   448,   449,   450,   451,   452,   453,
     454,   455,     0,     0,     0,   457,     0,     0,   459,   460,
     461,  4530,   462,     0,     0,     0,   464,   465,   466,     0,
     467,     0,   468,   469,     0,   471,   472,     0,   473,     0,
       0,     0,     0,   475,   476,   477,     0,     0,     0,     0,
     479,     0,     0,     0,     0,     0,     0,   482,     0,   484,
       0,   485,     0,     0,   488,   489,     0,     0,     0,     0,
       0,   490,   491,   492,     0,   493,     0,     0,   494,     0,
       0,   495,     0,   496,     0,   497,     0,   499,   500,   501,
     502,     0,     0,     0,   504,     0,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,   513,   514,     0,
     515,   516,     0,     0,   517,   518,   519,   520,     0,     0,
     521,   522,     0,   523,   524,   525,   526,     0,     0,     0,
       0,     0,   527,   528,     0,     0,     0,     0,   530,   531,
     532,     0,   533,   534,     0,   535,   536,     0,     0,     0,
       0,     0,   539,     0,     0,   540,     0,     0,     0,   542,
     543,     0,     0,     0,     0,     0,   544,     0,   545,     0,
       0,   546,     0,     0,     0,   547,     0,   548,   549,   550,
     551,     0,     0,  -395,     0,     0,     0,   552,   553,     0,
       0,   555,     0,   557,   558,     0,     0,   559,     0,     0,
       0,     0,     0,     0,     0,     0,   563,     0,     0,     0,
       0,     0,     0,     0,     0,   564,   565,   566,     0,     0,
     567,   568,   569,     0,     0,     0,   571,     0,   572,     0,
       0,     0,     0,     0,     0,   573,   574,     0,     0,   575,
       0,   576,     0,   577,   578,     0,     0,     0,   579,   580,
     581,   582,   583,   584,   585,   586,     0,   587,   588,   589,
       0,   591,   592,   593,   594,   192,     0,   193,   194,   195,
     196,   197,     0,     0,     0,     0,     0,     0,     0,   199,
       0,     0,     0,     0,   201,   202,   203,   204,   205,     0,
       0,  -440,     0,     0,     0,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,   213,     0,     0,     0,
       0,     0,   216,  4523,     0,   217,   218,     0,   219,   220,
       0,     0,     0,     0,   223,   224,   225,  4524,   227,   228,
       0,   229,   230,     0,   231,   232,     0,   234,     0,   236,
     237,   238,   239,   240,   241,     0,   242,   243,     0,   244,
     245,   246,     0,   248,     0,     0,     0,   249,     0,     0,
       0,     0,   250,     0,     0,   251,     0,     0,     0,   252,
     253,   254,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,     0,     0,     0,   258,   259,     0,   260,     0,
       0,     0,     0,     0,   261,   262,   263,   264,   265,     0,
       0,     0,     0,     0,     0,   267,   268,   269,     0,     0,
       0,   270,     0,  -414,   272,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,   279,   280,   281,   282,     0,
       0,     0,   284,   285,   286,   287,   288,     0,     0,   289,
     290,  4525,   291,   292,   293,   294,   295,     0,     0,     0,
       0,     0,     0,     0,     0,   299,     0,   300,     0,     0,
       0,   301,     0,     0,   303,   304,   305,     0,   306,     0,
     307,     0,     0,     0,     0,   309,     0,     0,     0,     0,
       0,   312,     0,     0,     0,   313,   314,   315,   316,  4526,
       0,   317,     0,   319,     0,     0,   320,     0,     0,     0,
       0,   321,   322,     0,     0,     0,     0,   324,     0,     0,
       0,   325,   326,     0,   327,   328,  4527,     0,     0,   329,
       0,   330,     0,     0,     0,   332,     0,     0,   333,  4528,
       0,   334,   335,     0,     0,     0,     0,     0,   336,   337,
       0,   338,     0,   339,     0,   340,   341,     0,     0,     0,
       0,  -395,     0,     0,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,   364,
     365,   366,   367,     0,   368,   369,     0,     0,     0,     0,
     370,   371,   372,   373,   374,   375,     0,     0,   376,   377,
       0,   378,     0,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,     0,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,     0,     0,   397,
       0,     0,     0,   398,     0,   399,   400,     0,   401,   402,
    4529,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   406,   407,     0,     0,     0,   409,
       0,   410,   411,   412,   413,   414,   415,   416,   417,   418,
       0,     0,     0,     0,     0,   422,   423,     0,   424,     0,
     425,   426,   427,   428,   429,     0,   430,   431,   432,     0,
       0,   433,     0,     0,     0,   434,   435,     0,   436,   437,
       0,     0,   438,   439,   440,   441,   442,     0,   443,     0,
       0,   445,     0,   447,  -395,     0,   448,   449,   450,   451,
     452,   453,   454,   455,     0,     0,     0,   457,     0,     0,
     459,   460,   461,  4530,   462,     0,     0,     0,   464,   465,
     466,     0,   467,     0,   468,   469,     0,   471,   472,     0,
     473,     0,     0,     0,     0,   475,   476,   477,     0,     0,
       0,     0,   479,     0,     0,     0,     0,     0,     0,   482,
       0,   484,     0,   485,     0,     0,   488,   489,     0,     0,
       0,     0,     0,   490,   491,   492,     0,   493,     0,     0,
     494,     0,     0,   495,     0,   496,     0,   497,     0,   499,
     500,   501,   502,     0,     0,     0,   504,     0,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,   513,
     514,     0,   515,   516,     0,     0,   517,   518,   519,   520,
       0,     0,   521,   522,     0,   523,   524,   525,   526,     0,
       0,     0,     0,     0,   527,   528,     0,     0,     0,     0,
     530,   531,   532,     0,   533,   534,     0,   535,   536,     0,
       0,     0,     0,     0,   539,     0,     0,   540,     0,     0,
       0,   542,   543,     0,     0,     0,     0,     0,   544,     0,
     545,     0,     0,   546,     0,     0,     0,   547,     0,   548,
     549,   550,   551,     0,     0,  -395,     0,     0,     0,   552,
     553,     0,     0,   555,     0,   557,   558,     0,     0,   559,
       0,     0,     0,     0,     0,     0,     0,     0,   563,     0,
       0,     0,     0,     0,     0,     0,     0,   564,   565,   566,
       0,     0,   567,   568,   569,     0,     0,     0,   571,     0,
     572,     0,     0,     0,     0,     0,     0,   573,   574,     0,
       0,   575,     0,   576,     0,   577,   578,     0,     0,     0,
     579,   580,   581,   582,   583,   584,   585,   586,     0,   587,
     588,   589,     0,   591,   592,   593,   594,   192,     0,   193,
     194,   195,   196,   197,     0,     0,     0,     0,     0,     0,
       0,   199,     0,     0,     0,     0,   201,   202,   203,   204,
     205,     0,     0,  -440,     0,     0,     0,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,   213,     0,
       0,     0,     0,     0,   216,  4523,     0,   217,   218,     0,
     219,   220,     0,     0,     0,     0,   223,   224,   225,  4524,
     227,   228,     0,   229,   230,     0,   231,   232,     0,   234,
       0,   236,   237,   238,   239,   240,   241,     0,   242,   243,
       0,   244,   245,   246,     0,   248,     0,     0,     0,   249,
       0,     0,     0,     0,   250,     0,     0,   251,     0,     0,
       0,   252,   253,   254,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,     0,     0,     0,   258,   259,     0,
     260,     0,     0,     0,     0,     0,   261,   262,   263,   264,
     265,     0,     0,     0,     0,     0,     0,   267,   268,   269,
       0,     0,     0,   270,     0,     0,   272,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,   279,   280,   281,
     282,     0,     0,     0,   284,   285,   286,   287,   288,     0,
       0,   289,   290,  4525,   291,   292,   293,   294,   295,     0,
       0,     0,     0,     0,     0,     0,     0,   299,     0,   300,
       0,     0,     0,   301,     0,     0,   303,   304,   305,     0,
     306,     0,   307,     0,     0,     0,     0,   309,     0,     0,
       0,     0,     0,   312,     0,     0,     0,   313,   314,   315,
     316,  4526,     0,   317,     0,   319,     0,     0,   320,     0,
       0,     0,     0,   321,   322,     0,     0,     0,     0,   324,
       0,     0,     0,   325,   326,     0,   327,   328,  4527,     0,
       0,   329,     0,   330,     0,     0,     0,   332,     0,     0,
     333,  4528,     0,   334,   335,     0,     0,     0,     0,     0,
     336,   337,     0,   338,     0,   339,     0,   340,   341,     0,
       0,     0,     0,  -395,     0,     0,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,   364,   365,   366,   367,     0,   368,   369,     0,     0,
       0,     0,   370,   371,   372,   373,   374,   375,     0,     0,
     376,   377,     0,   378,     0,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,     0,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,     0,
       0,   397,     0,     0,     0,   398,     0,   399,   400,     0,
     401,   402,  4529,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   406,   407,     0,     0,
       0,   409,     0,   410,   411,   412,   413,   414,   415,   416,
     417,   418,     0,     0,     0,     0,     0,   422,   423,     0,
     424,     0,   425,   426,   427,   428,   429,     0,   430,   431,
     432,     0,     0,   433,     0,     0,     0,   434,   435,     0,
     436,   437,     0,     0,   438,   439,   440,   441,   442,     0,
     443,     0,     0,   445,     0,   447,  -395,     0,   448,   449,
     450,   451,   452,   453,   454,   455,     0,     0,     0,   457,
       0,     0,   459,   460,   461,  4530,   462,     0,     0,     0,
     464,   465,   466,     0,   467,     0,   468,   469,     0,   471,
     472,     0,   473,     0,     0,     0,     0,   475,   476,   477,
       0,     0,     0,     0,   479,     0,     0,     0,     0,     0,
       0,   482,     0,   484,     0,   485,     0,     0,   488,   489,
       0,     0,     0,     0,     0,   490,   491,   492,     0,   493,
       0,     0,   494,     0,     0,   495,     0,   496,     0,   497,
       0,   499,   500,   501,   502,     0,     0,     0,   504,     0,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,   513,   514,     0,   515,   516,     0,     0,   517,   518,
     519,   520,     0,     0,   521,   522,     0,   523,   524,   525,
     526,     0,     0,     0,     0,     0,   527,   528,     0,     0,
       0,     0,   530,   531,   532,     0,   533,   534,     0,   535,
     536,     0,     0,     0,     0,     0,   539,     0,     0,   540,
       0,     0,     0,   542,   543,     0,     0,     0,     0,     0,
     544,     0,   545,     0,     0,   546,     0,     0,     0,   547,
       0,   548,   549,   550,   551,     0,     0,  -395,     0,     0,
       0,   552,   553,     0,     0,   555,     0,   557,   558,     0,
       0,   559,     0,     0,     0,     0,     0,     0,     0,     0,
     563,     0,     0,     0,     0,     0,     0,     0,     0,   564,
     565,   566,     0,     0,   567,   568,   569,     0,     0,     0,
     571,     0,   572,     0,     0,     0,     0,     0,     0,   573,
     574,     0,     0,   575,     0,   576,     0,   577,   578,     0,
       0,     0,   579,   580,   581,   582,   583,   584,   585,   586,
       0,   587,   588,   589,     0,   591,   592,   593,   594,   192,
       0,   193,   194,   195,   196,   197,     0,     0,     0,     0,
       0,     0,     0,   199,     0,     0,     0,     0,   201,   202,
     203,   204,   205,     0,     0,  -440,     0,     0,     0,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
     213,     0,     0,     0,     0,     0,   216,  4523,     0,   217,
     218,     0,   219,   220,     0,     0,     0,     0,   223,   224,
     225,  4524,   227,   228,     0,   229,   230,     0,   231,   232,
       0,   234,     0,   236,   237,   238,   239,   240,   241,     0,
     242,   243,     0,   244,   245,   246,     0,   248,     0,     0,
       0,   249,     0,     0,     0,     0,   250,     0,     0,   251,
       0,     0,     0,   252,   253,   254,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,     0,     0,     0,   258,
     259,     0,   260,     0,     0,     0,     0,     0,   261,   262,
     263,   264,   265,     0,     0,     0,     0,     0,     0,   267,
     268,   269,     0,     0,     0,   270,     0,     0,   272,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,   279,
     280,   281,   282,     0,     0,     0,   284,   285,   286,   287,
     288,     0,     0,   289,   290,  4525,   291,   292,   293,   294,
     295,     0,     0,     0,     0,     0,     0,     0,     0,   299,
       0,   300,     0,     0,     0,   301,     0,     0,   303,   304,
     305,     0,   306,     0,   307,     0,     0,     0,     0,   309,
       0,     0,     0,     0,     0,   312,     0,     0,     0,   313,
     314,   315,   316,  4526,     0,   317,     0,   319,     0,     0,
     320,     0,     0,     0,     0,   321,   322,     0,     0,     0,
       0,   324,     0,     0,     0,   325,   326,     0,   327,   328,
    4527,     0,     0,   329,     0,   330,     0,     0,     0,   332,
       0,     0,   333,  4528,     0,   334,   335,     0,     0,     0,
       0,     0,   336,   337,     0,   338,     0,   339,     0,   340,
     341,     0,     0,     0,     0,  -395,     0,     0,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,   364,   365,   366,   367,     0,   368,   369,
       0,     0,     0,     0,   370,   371,   372,   373,   374,   375,
       0,     0,   376,   377,     0,   378,     0,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,     0,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,     0,     0,   397,     0,     0,     0,   398,     0,   399,
     400,     0,   401,   402,  4529,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   406,   407,
       0,     0,     0,   409,     0,   410,   411,   412,   413,   414,
     415,   416,   417,   418,     0,     0,     0,     0,     0,   422,
     423,     0,   424,     0,   425,   426,   427,   428,   429,     0,
     430,   431,   432,     0,     0,   433,     0,     0,     0,   434,
     435,     0,   436,   437,     0,     0,   438,   439,   440,   441,
     442,     0,   443,     0,     0,   445,     0,   447,  -395,     0,
     448,   449,   450,   451,   452,   453,   454,   455,     0,     0,
       0,   457,     0,     0,   459,   460,   461,  4530,   462,     0,
       0,     0,   464,   465,   466,     0,   467,     0,   468,   469,
       0,   471,   472,     0,   473,     0,     0,     0,     0,   475,
     476,   477,     0,     0,     0,     0,   479,     0,     0,     0,
       0,     0,     0,   482,     0,   484,     0,   485,     0,     0,
     488,   489,     0,     0,     0,     0,     0,   490,   491,   492,
       0,   493,     0,     0,   494,     0,     0,   495,     0,   496,
       0,   497,     0,   499,   500,   501,   502,     0,     0,     0,
     504,     0,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,   513,   514,     0,   515,   516,     0,     0,
     517,   518,   519,   520,     0,     0,   521,   522,     0,   523,
     524,   525,   526,     0,     0,     0,     0,     0,   527,   528,
       0,     0,     0,     0,   530,   531,   532,     0,   533,   534,
       0,   535,   536,     0,     0,     0,     0,     0,   539,     0,
       0,  4768,     0,     0,     0,   542,   543,     0,     0,     0,
       0,     0,   544,     0,   545,     0,     0,   546,     0,     0,
       0,   547,     0,   548,   549,   550,   551,     0,     0,  -395,
       0,     0,     0,   552,   553,     0,     0,   555,     0,   557,
     558,     0,     0,   559,     0,     0,     0,     0,     0,     0,
       0,     0,   563,     0,     0,     0,     0,     0,     0,     0,
       0,   564,   565,   566,     0,     0,   567,   568,   569,     0,
       0,     0,   571,     0,   572,     0,     0,     0,     0,     0,
       0,   573,   574,     0,     0,   575,     0,   576,     0,   577,
     578,     0,     0,     0,   579,   580,   581,   582,   583,   584,
     585,   586,     0,   587,   588,   589,     0,   591,   592,   593,
     594,   192,     0,   193,   194,   195,   196,   197,     0,     0,
       0,     0,     0,     0,     0,   199,     0,     0,     0,     0,
     201,   202,   203,   204,   205,     0,     0,     0,     0,     0,
       0,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,   213,     0,     0,     0,     0,     0,   216,     0,
       0,   217,   218,     0,   219,   220,     0,     0,     0,     0,
     223,   224,   225,     0,   227,   228,     0,   229,   230,     0,
     231,   232,     0,   234,     0,   236,   237,   238,   239,   240,
     241,     0,   242,   243,     0,   244,   245,   246,     0,   248,
       0,     0,     0,   249,     0,     0,     0,     0,   250,     0,
       0,   251,     0,     0,     0,   252,   253,   254,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,     0,     0,
       0,   258,   259,     0,   260,     0,     0,     0,     0,     0,
     261,   262,   263,   264,   265,     0,     0,     0,     0,     0,
       0,   267,   268,   269,     0,     0,     0,   270,     0,     0,
     272,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,   279,   280,   281,   282,     0,     0,     0,   284,   285,
     286,   287,   288,     0,     0,   289,   290,     0,   291,   292,
     293,   294,   295,     0,     0,     0,     0,     0,     0,     0,
       0,   299,     0,   300,     0,     0,     0,   301,     0,     0,
     303,   304,   305,     0,   306,     0,   307,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   312,     0,     0,
       0,   313,   314,   315,   316,     0,     0,   317,     0,   319,
       0,     0,   320,     0,     0,     0,     0,   321,   322,     0,
       0,     0,     0,   324,     0,     0,     0,   325,   326,     0,
     327,   328,     0,     0,     0,   329,     0,   330,     0,     0,
       0,   332,     0,     0,   333,     0,     0,   334,   335,     0,
       0,     0,     0,     0,   336,   337,     0,   338,     0,   339,
       0,   340,   341,     0,     0,     0,     0,     0,     0,     0,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,   364,   365,   366,   367,     0,
     368,   369,     0,     0,     0,     0,   370,   371,   372,   373,
     374,   375,     0,     0,   376,   377,     0,   378,     0,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,     0,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,     0,     0,   397,     0,     0,     0,   398,
       0,   399,   400,     0,   401,   402,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     406,   407,     0,     0,     0,   409,     0,   410,   411,   412,
     413,   414,   415,   416,   417,   418,     0,     0,     0,     0,
       0,   422,   423,     0,   424,     0,   425,   426,   427,   428,
     429,     0,   430,   431,   432,     0,     0,   433,     0,     0,
       0,   434,   435,     0,   436,   437,     0,     0,   438,   439,
     440,   441,   442,     0,   443,     0,     0,   445,     0,   447,
       0,     0,   448,   449,   450,   451,   452,   453,   454,   455,
       0,     0,     0,   457,     0,     0,   459,   460,   461,     0,
     462,     0,     0,     0,   464,   465,   466,     0,   467,     0,
     468,   469,     0,   471,   472,     0,   473,     0,     0,     0,
       0,   475,   476,   477,     0,     0,     0,     0,   479,     0,
       0,     0,     0,     0,     0,   482,     0,   484,     0,   485,
       0,     0,   488,   489,     0,     0,     0,     0,     0,   490,
     491,   492,     0,   493,     0,     0,   494,     0,     0,   495,
       0,   496,     0,   497,     0,   499,   500,   501,   502,     0,
       0,     0,   504,     0,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,   513,   514,     0,   515,   516,
       0,     0,   517,   518,   519,   520,     0,     0,   521,   522,
       0,   523,   524,   525,   526,     0,     0,     0,     0,     0,
     527,   528,     0,     0,     0,     0,   530,   531,   532,     0,
     533,   534,     0,   535,   536,     0,     0,     0,     0,     0,
     539,     0,     0,   540,     0,     0,     0,   542,   543,     0,
       0,     0,     0,     0,   544,     0,   545,     0,     0,   546,
       0,     0,     0,   547,     0,   548,   549,   550,   551,     0,
       0,     0,     0,     0,     0,   552,   553,     0,     0,   555,
       0,   557,   558,     0,     0,   559,     0,  3312,  3313,     0,
       0,     0,     0,  3314,   563,  3315,     0,  3316,  3317,     0,
       0,     0,     0,   564,   565,   566,     0,     0,   567,   568,
     569,     0,     0,     0,   571,  3318,   572,     0,     0,     0,
       0,     0,     0,   573,   574,     0,     0,   575,     0,   576,
       0,   577,   578,     0,     0,     0,   579,   580,   581,   582,
     583,   584,   585,   586,     0,   587,   588,   589,     0,   591,
     592,   593,   594,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3319,     0,     0,  3320,     0,
       0,     0,     0,     0,     0,     0,  3321,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3322,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3323,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3324,     0,  3325,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3326,  3327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3328,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3329,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3330,     0,     0,     0,     0,     0,     0,     0,
       0,  3331,  3332,     0,  3333,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3334,  3335,  3336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3337,  3338,  3339,     0,     0,     0,     0,  3340,     0,     0,
    3341,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3342,  3343,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3344,  3345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3347,     0,     0,     0,  3348,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3349,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3350,     0,     0,  3351,
       0,     0,  3352,  3353,  3354,  3355,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3356,  3357,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3358
};

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-3786)))

#define yytable_value_is_error(Yytable_value) \
  YYID (0)

static const yytype_int16 yycheck[] =
{
       6,     0,   972,     0,    43,   760,     0,  1277,   965,   745,
     746,  1008,    18,  1079,   111,   111,    22,  1327,   967,   963,
     973,  1327,  1524,   759,  1725,    31,  2287,  2107,  2108,    55,
     828,  1768,    38,  2015,  2016,    41,  1033,    43,  1554,  1472,
      46,  2023,  2024,  2025,    58,    19,    52,    53,  2294,  1689,
    1859,   789,   986,  1250,  1251,  1176,    30,  2629,  1124,  1492,
       6,    35,    61,   986,    61,  1640,  2392,  1412,  1018,  1472,
    2841,    21,  2333,  1689,    58,  2715,  2540,  1510,  1199,  2287,
    2544,    57,  1279,  2416,  1462,  1270,  3360,    93,  2631,    39,
    2138,  2139,  1462,  1474,  1291,  1292,  1293,  1478,  1048,  1296,
      21,  1763,  1125,  1842,  3378,    93,  2138,  2139,  1803,  3269,
    3046,  1492,    22,  2360,  3226,   114,  2418,  2756,    39,  2445,
     968,  1860,   954,  1504,   757,  2333,  2125,  1866,  2424,   114,
     619,   620,  2867,  1872,   140,  2142,    21,  2128,  1335,   606,
     607,  2944,  2172,    21,  2944,  2944,  2944,  2155,    68,  3332,
    3333,    18,    19,  3336,    39,    73,   175,   895,   896,   897,
      71,    22,  2464,   169,  3949,   171,    35,   905,   174,   175,
     176,   177,  3355,    71,  3959,  3888,    21,  2185,  2186,   144,
    2625,  1131,    18,    19,   190,   631,   632,   633,   917,     9,
     636,   637,    73,    52,   640,   641,   642,   643,  3452,   156,
      21,  1243,  1244,  1245,  2432,   197,   174,   156,   125,    29,
    2148,  3919,  1254,  2145,    34,  3469,  2531,  2532,  2533,  3863,
     125,  1178,    18,    19,    21,   171,    37,   235,   174,    48,
     140,    70,  2547,  3268,   156,    18,    19,  3491,    62,    37,
      67,  1198,    11,  1285,   246,  2709,  1288,  2120,  2088,   197,
      59,   156,   103,   176,   125,   194,   246,  2572,    18,    19,
      70,  2576,    33,   259,  1306,  1307,   282,   177,  1310,   715,
     131,   373,    65,   230,    52,   222,   204,  2592,  2593,    81,
     190,     5,   125,  2598,  2093,   156,  1328,  1329,   373,    18,
      19,  1333,  1334,    18,    19,  2934,   402,    22,   156,  2614,
    2615,    18,    19,   275,   293,  2944,    18,    19,  2623,    21,
     200,   156,  3814,   156,    23,   160,  2156,    35,  2158,   176,
     176,    19,    23,  3544,   276,    87,    35,  2167,   493,   162,
     465,    80,   103,    82,    18,    19,    44,   103,    53,   770,
      49,   191,    31,  2183,   156,  2917,   493,    18,    19,    64,
    2814,   122,    61,    62,   276,  2657,    18,    19,    85,   501,
      61,    62,   380,   160,  2204,   160,   186,   176,  2208,    18,
      19,   180,   139,  1022,  1023,    23,   125,    18,    19,   255,
      21,   473,  3542,    77,   316,   194,   378,    35,   109,    64,
    1119,   128,     9,    78,   258,   194,   197,   401,   572,   148,
      77,    49,  2728,    40,  2868,    25,   131,    21,   219,   433,
     231,   635,    22,    61,    62,   156,  2085,   188,  2087,  1470,
    1156,   219,   156,   374,  2886,    18,    19,   501,    13,   111,
     150,  1167,   637,  2432,   503,   186,   388,   197,   187,   615,
     447,   194,  3625,   156,   433,   197,   212,   197,   216,   235,
     160,    19,    18,    19,  2263,  4168,   401,   216,    35,  3067,
    3068,    21,   369,   256,  2273,   194,    73,  3807,  1266,  3077,
    3078,    18,    19,    86,   245,    21,     9,   263,   389,  1421,
     197,  1438,  1280,  1440,   563,    62,   249,   566,    48,  1431,
     637,   389,   105,   235,   246,   263,   293,    65,    31,   249,
    3840,    18,    19,  3757,   263,   450,   429,  2809,  3762,   272,
     734,  3765,   572,   433,   563,   266,    73,   566,   193,   290,
     387,   131,   331,   390,   163,   239,   993,   534,    74,   734,
     420,   130,  1021,   612,   485,   249,    73,    18,    19,  1590,
     609,   448,  2351,   249,    18,    19,    18,    19,   168,   150,
     187,   387,   626,   235,   390,   140,   293,   433,   734,   733,
     564,   150,   363,   413,   729,   332,   293,   282,   262,   186,
      18,    19,   429,   429,  1422,    18,    19,    18,    19,   511,
    1047,    77,   729,   511,  1432,   262,    18,    19,   130,   203,
    2343,   387,   734,  1441,   390,   614,   543,  3780,   316,   734,
     606,   607,   373,   369,  1050,  1343,  3718,   471,   614,  3792,
     616,   470,  2421,   637,   160,   493,  2837,  3800,  3080,   721,
     429,  2954,  4124,   729,   630,   643,   397,   387,   634,   160,
     390,   231,  1099,   639,  1372,   456,   433,  4350,  4351,  1636,
     183,   198,  1109,   735,   609,  1374,  1375,   355,  3831,   734,
    2387,   603,  2634,   160,   643,  1086,   652,   585,   387,   675,
     160,   390,   387,   635,  4372,   390,   428,  3210,   687,  3212,
     387,    26,   493,   390,  2935,   387,   566,  3074,   390,   393,
     404,   687,    18,    19,   511,   536,   488,   693,   256,   235,
     613,   440,   470,  3026,    18,    19,   606,   607,   637,  3294,
    3295,   707,   708,   387,   543,  3740,   390,   502,  2756,   717,
    2143,  2448,  2145,   635,  1835,  1912,   387,   263,  1839,   390,
     708,   760,  4366,  1844,  2756,   387,   745,  2935,   390,  3950,
     736,  2730,   734,   543,   753,   754,   704,   705,   387,   745,
     730,   390,   734,   418,   141,  2446,   387,   753,   754,   390,
    2128,   757,  1873,  1874,  4462,  3200,   613,  1954,  2128,   637,
     553,   572,   768,   769,  1476,  1477,   262,  1479,   774,   734,
    1482,  1483,  1484,  1485,   572,   732,  2783,  1489,  2785,   615,
    2620,   648,  1494,   732,  2424,   734,   734,  1499,  1500,  1501,
    1502,  1503,   502,  2295,   387,  1507,  1508,   390,   812,   623,
     750,  1513,  1514,  1515,  1516,  3120,  1518,  1519,  2424,  1521,
     732,   729,   648,    18,    19,   735,   637,   734,   637,   730,
    2850,   387,   828,   594,   390,   645,  4080,   732,   812,   750,
    2027,  3146,   730,  3148,  2674,  2675,  2676,  2677,  1788,  3067,
     387,   938,   938,   390,  4557,  2718,   643,  3162,   729,  3164,
    2519,   729,   648,  2791,    18,    19,  1898,  2789,   768,   628,
     729,   732,  4570,   730,  3179,   648,   699,   734,   729,   156,
     387,   968,   968,   390,   732,   734,   734,   734,   734,  2189,
     899,  2397,   237,  2189,   704,   583,  2934,   732,   648,   732,
     710,  1689,   601,   899,   583,   901,  2944,  1546,   734,   898,
     601,   898,  2934,  2281,   575,  1643,   387,   628,   729,   390,
     595,  2281,  2944,   387,   634,   387,   390,   626,   390,   648,
     732,  2761,   734,   648,  1966,   734,   697,  4201,  1970,   604,
     696,   648,   931,  1886,   931,   734,   648,   943,   957,   387,
     939,  2932,   390,   739,   387,  3247,   387,   390,   345,   390,
    1992,   957,   772,   601,   939,   387,   563,   963,   390,  3599,
     637,   980,   656,   657,   648,   647,  3574,   973,   323,  1618,
     730,   502,   978,   972,   980,   972,   982,   648,   972,   656,
     657,   734,   734,   989,   990,   553,   648,   993,    65,   276,
     978,   732,   631,   734,  1000,   502,  3298,  3768,   732,   648,
     734,   730,   502,  1009,  1010,  1011,   563,   648,  1014,  3649,
     609,  1017,  3042,  1019,  1020,   370,   730,   734,   730,   732,
     729,   734,   734,  1042,  1030,   735,   563,  3963,   734,  1017,
    1036,  1037,  1038,   634,  1040,  1041,  1042,   583,   130,  1045,
    1046,  1047,  1778,  1049,   990,   634,   730,  1053,    18,    19,
     734,   387,   122,  2398,   390,   648,  3714,  1076,  2898,  1065,
    2900,  2901,  1068,   387,  2904,  2905,   390,   609,  1018,  2822,
    1076,  1809,   734,  1079,  2914,  2915,  3811,  1083,  1084,  2919,
    1068,   730,   648,   993,   627,  3293,  3294,  3295,  1817,  3097,
    3311,  1037,  1098,  1099,   694,  1041,   592,  1018,  1048,  1045,
    1589,   648,  1108,  1109,  3907,  1111,  1112,  3907,  3907,  3907,
    3749,  1600,   122,    18,    19,  4823,   378,  1123,  1124,   615,
    4905,  2071,   123,   626,    18,    19,  1132,  1048,     7,  1168,
    1080,   648,   285,   276,  1140,  1123,   112,  1047,  4321,   115,
    4323,   734,    18,    19,    18,    19,    18,    19,  1154,   241,
      18,    19,  1140,  3374,   327,  3560,  1162,    71,  1177,  1080,
     656,   657,  1168,  2107,  2108,  1798,  1964,   648,   734,    18,
      19,  1177,   204,  1806,   648,   179,   648,    47,   188,   256,
     275,  1131,   387,   730,   388,   390,    64,   734,  1098,  1099,
     370,  4465,   547,  3590,  3591,  1080,    18,    19,  1108,  1109,
     648,  1111,   373,  1670,   735,   648,   292,   648,   380,  1655,
    1131,   407,   377,   730,    18,    19,   648,   734,  1224,  1225,
     290,   144,   194,   387,    12,  3207,   390,  3560,   735,  3211,
    2899,   407,  1052,  2902,  2903,   735,   641,  2906,  2907,  2908,
    2909,  2910,  2911,  2912,  2913,   388,   247,  2916,  3296,  2918,
      33,    18,    19,   734,  1351,  1351,   730,  3896,   730,  2091,
    1266,   153,   734,  3262,  3296,   144,    18,    19,  3907,  2117,
    2118,  1297,   164,  3569,  1280,   630,  3116,  1276,   198,  1276,
     290,   231,  3529,    18,    19,  2219,  2220,  4561,   365,   730,
     100,   734,   388,   734,    57,  3302,  2219,  2220,   730,  3894,
    3895,  3603,   734,   373,  2370,    18,    19,  4467,   239,    13,
    3905,  3906,   648,   285,   316,  4562,  2661,  3781,   249,    13,
     160,  1327,    18,    19,   648,   192,   723,   724,   725,   726,
     122,  1357,  1821,  1359,  1360,  1361,  1362,  1363,  1364,  1365,
    1366,  1367,  1368,  1369,  2367,  2169,   216,   401,   635,    18,
      19,  2063,  1371,  3015,   194,  2179,  2789,    18,    19,   566,
    2793,  2427,    74,   373,   231,  1371,  2563,   547,   372,   455,
    2872,  1377,  3111,  3112,  1393,  2645,  2646,  3692,  3079,    52,
    3410,  3411,  4494,    18,    19,  2209,  3688,  1393,  2509,  2510,
     186,  1397,  2513,  2590,  1413,  3057,   188,  4132,   734,  3094,
     125,    18,    19,  2426,   194,   125,   730,  1413,  2983,  1397,
     734,  2235,   243,    18,    19,  3717,    74,   387,    18,    19,
     390,  3723,  1421,   167,   125,  3727,    71,   219,   238,  1448,
     487,   572,  1431,  2390,   435,   378,   140,  2870,  2871,  1445,
      18,    19,  1448,   648,  3829,   732,   140,  3832,   258,   278,
     630,   241,   353,   606,  2166,   457,   200,   583,   535,   235,
     603,   271,   393,   659,   209,  2650,   249,  2870,   122,  2181,
     266,   643,   734,    18,    19,   389,   553,    18,    19,   511,
     400,   193,   387,   659,   648,   390,   237,   263,   209,  1528,
    2871,  4149,   275,   387,   386,   653,   390,   285,   290,  2449,
    2450,  2451,  2214,  2215,  4047,   333,   456,   603,   228,  2221,
     564,   387,  3028,   387,   390,   387,   390,   609,   390,   387,
     165,  1024,   390,   235,   594,  2958,  3263,  4774,  3265,   734,
     734,    18,    19,   612,   188,    18,    19,   282,   387,   158,
     635,   390,  1548,  1549,   245,   355,  4118,  4119,  2505,   550,
     636,   263,    18,    19,  2932,  1531,   729,  3962,  1564,   730,
    3821,   282,  2932,   441,   243,   387,   730,   644,   390,   734,
     734,   127,   451,   369,  4848,    26,  3416,   235,   501,  2291,
    2622,   373,   401,   387,   594,   589,   390,   730,  2326,   730,
     510,  3893,  1598,    18,    19,  1601,  1602,  1603,   430,   623,
     576,   605,   626,   579,  4244,  1611,   369,   287,   734,    18,
      19,   422,  2771,  3821,  1620,  1641,   486,  1623,  1644,   370,
     387,  4261,  4611,   390,  2336,   401,  2424,  4091,  1642,  3962,
     709,    18,    19,    18,    19,   387,   290,  4277,   390,  1549,
     583,  1647,   366,   367,    21,  1651,    74,   372,    18,    19,
     482,   635,   387,   482,  1564,   390,  1602,  1603,  1642,   442,
     361,    13,   502,  4434,  1670,   122,   456,   477,   125,   803,
     350,  1690,    18,    19,   387,   238,   420,   390,   648,   571,
      18,    19,  1688,  1689,  1690,  2629,  3894,  3895,  1598,   401,
    4495,   387,   248,  4498,   390,   566,   369,  3905,  3906,  1705,
    4353,  3749,  4017,   493,  1710,  4358,   418,   158,   271,  4094,
    1729,  4364,  1718,    11,   197,  1721,   572,  3749,   387,   373,
    3702,   390,  3704,  1729,   158,     0,   387,  1733,  1734,   390,
     522,   188,   563,   137,  2470,   566,  3046,  3043,   872,   549,
    3046,  1651,   570,   648,   389,  1733,  1734,   614,   152,   125,
     734,   370,   387,   498,   648,   390,  1775,  1763,   729,  1765,
    1670,  1767,   219,   139,   734,   193,    18,    19,   596,  1775,
     387,  1790,   648,   390,   648,   586,   648,   498,  1688,   156,
     648,   212,   387,  1767,  1790,   390,   237,   387,   140,   533,
     390,   734,  1798,  4782,  4783,  1705,   547,   470,   572,   648,
    1806,   509,   594,   237,   493,  2964,   141,   235,  1718,   387,
     944,  1721,   390,   714,   715,   716,  1822,  1823,  1824,  1825,
    1826,  1827,  1828,   127,   125,   730,   648,   258,   501,  4162,
    1836,  4403,  1838,   290,  1840,   263,   654,  1843,  1788,  1827,
     734,  1791,   387,   587,   648,   390,   387,   637,  3896,   390,
     682,  3691,  1840,  1763,   231,    18,    19,   543,   734,  3907,
     734,   162,   734,   543,  3896,  4194,   734,  1788,  4673,   167,
    1791,  1885,   323,   729,   128,  3907,  1822,  1823,  1824,   630,
    1826,   648,    18,    19,   282,   734,    18,    19,   572,    13,
    3235,   637,  1838,    18,    19,  2633,   648,  1843,   122,   607,
     387,  1885,   200,   390,   387,    18,    19,   390,   730,   122,
      18,    19,  4484,   648,   477,  1825,   373,   735,  1828,   370,
     730,   387,   156,   277,   390,    32,   280,   415,   547,  3569,
     734,    13,   653,  3092,   548,   648,   370,   637,   624,   729,
     594,   722,  3517,   651,   248,    18,    19,   639,   637,   730,
    2662,   672,   648,  3569,  3020,   729,   332,   388,  1964,  1965,
     537,   231,   387,  3269,   188,   390,   220,   734,   615,   179,
      18,    19,    79,   371,   608,   188,  2800,  4306,   387,   648,
      23,   390,   734,   367,    18,    19,   637,   648,   734,   246,
     418,   615,    35,  3059,   571,  2945,  3498,    18,    19,   734,
     387,  3738,   387,   390,   194,   390,    49,  3744,    18,    19,
     345,   630,  2031,   648,  2838,   629,   140,   387,    61,    62,
     390,   734,  2846,   293,   401,  2031,  2538,  2851,    18,    19,
    3546,   648,   416,  2545,   734,  3101,    18,    19,   734,   293,
     729,   387,   734,   648,   390,   729,  2052,   154,   648,   387,
      18,    19,   390,  4379,  2073,  2767,  2768,  2769,   140,  2098,
     137,   730,  2996,  4309,  4310,  3022,   290,  2073,    18,    19,
     648,   372,   160,   734,  2997,   152,   430,   290,  3388,   456,
     141,  2100,  3388,   734,    18,    19,   276,   734,   735,  4661,
     637,    18,    19,   640,  2100,   285,   547,    18,    19,   734,
     160,  2107,  2108,   648,    18,    19,   730,   648,    18,    19,
     734,   300,   301,   547,  2120,   666,   493,   734,   669,  2125,
    3279,  2071,   420,   674,    18,    19,  2165,   480,   679,   734,
     730,  3067,   212,   681,  2140,   387,  2142,   594,   390,   230,
    3076,  2125,  2148,  2149,   692,  2151,  2152,  2153,   729,   373,
    2071,  2157,   730,  2159,   735,   212,   366,   367,  2177,   429,
     373,   648,   372,  2169,   681,   648,  2172,  2879,  2174,  2175,
    2144,  2177,  2178,  2179,  3814,   692,    18,    19,  2184,   630,
    2154,  2187,   648,  2189,   397,   730,  2160,   167,  2194,   730,
    3999,  2197,  2198,   615,    18,    19,   630,  4458,   388,  3839,
     722,  2207,  4504,  2209,    18,    19,   729,  4237,   730,  4239,
    2120,  3948,    18,    19,  2188,   127,   729,  4297,  2192,  2225,
      18,    19,   735,   648,   387,  2199,  2200,   390,   735,  2235,
    2236,  3900,  3901,  3902,  3903,   533,  3542,    18,    19,   648,
    3399,  4502,  4503,   730,    18,    19,   583,  2985,   681,  3139,
    4458,   387,    18,    19,   390,   387,   445,   446,   390,   692,
     637,   648,   387,   648,   730,   390,   433,    18,    19,  4527,
    4528,    18,    19,   230,   387,    38,  2282,   390,   648,   387,
    2286,   122,   390,    46,   345,   185,  2292,   454,  2198,   587,
    2296,  2297,    19,    77,  4502,  4503,  2295,  2323,  2324,  3458,
    4282,  2327,   648,  2317,   227,   730,   229,   235,   415,    93,
     648,  2325,   734,   735,   387,  2225,  3475,   390,  3515,   122,
    2319,   730,  2319,   681,  2330,  2344,  4166,   212,   840,   496,
     437,  2337,   729,  2317,   692,   120,   733,  3770,  2344,   387,
     730,  2325,   390,   730,   734,   730,   456,  3617,   860,  2337,
     134,  2297,   729,   387,  2360,   732,   390,   734,   212,  2365,
     730,   873,   874,  2369,  2370,   235,   387,  4669,   566,   390,
     594,   478,  2282,  3643,  3644,    12,  2286,   387,   212,   589,
     390,   594,  2292,   125,   730,   188,   721,   722,   723,   724,
     725,   726,   730,   717,  2400,   605,   648,   387,   135,  3669,
     390,  2407,  2408,   234,   235,   387,   148,   730,   390,   481,
    3912,   734,   212,   603,   108,   419,   219,  2416,  2424,   387,
     385,  2427,   390,   197,    19,   654,  2432,  2433,   563,  3319,
     261,   197,   539,  2432,  2473,  2432,  4276,   387,   730,   729,
     390,   226,   734,   504,   505,   187,   320,   321,  2432,   290,
      19,   325,   326,   387,    61,    62,   390,   381,  3655,    35,
     387,  3351,  3352,   390,    71,   378,   387,  2473,  3833,   390,
     231,  3836,  3837,   387,  2480,    26,   390,   387,   730,   730,
     390,   265,   246,   734,   730,   648,    62,   290,   734,   197,
    2400,   730,   194,   387,  3615,   734,   390,  2407,  2408,  2449,
    2450,  2451,   575,   730,  3570,  2511,  2512,   734,   667,   668,
     197,   670,   648,  4771,  4772,  2521,   648,   668,   730,   670,
      21,  2540,   734,   648,   246,  2544,    77,   221,  2449,  2450,
    2451,  4237,   373,  4239,  2540,   648,   112,   100,  2544,   115,
     648,   501,  2568,    61,    62,   387,   141,   123,   390,   378,
     335,   621,  3985,  3986,   339,  3131,   730,   501,   601,   343,
     734,   346,   212,   387,   730,  3141,   390,   730,   734,   734,
     373,   735,   141,   387,   730,   648,   390,   734,   734,   622,
     623,   387,   366,   367,   390,   369,    18,    19,   122,   387,
    4430,   125,   390,   730,   730,   729,   730,   734,   730,   100,
     648,  2511,  2512,    96,   730,   730,   387,   158,   734,   390,
     572,   730,   729,   387,   648,   734,   390,   730,   729,  2625,
     729,   387,   730,   729,   390,   730,   177,   648,  2654,   734,
    2656,   730,   729,   184,   729,   734,   387,   730,   648,   390,
     387,   734,   427,   390,   730,  2651,   729,   431,   734,  3606,
      77,   103,  3958,  3963,   188,   156,  3613,  3963,   648,   160,
     721,   722,   723,   724,   725,   726,   648,   730,   735,   122,
     122,   734,   125,    48,   730,   238,   780,   781,   734,   783,
     648,   785,   730,   730,   260,   219,   237,   734,   150,   151,
    2709,   192,    12,   194,   729,   258,   730,  3650,   648,   729,
     394,   730,   729,  2709,    77,   734,   491,   729,   271,   730,
     404,   212,  2718,   729,   648,   730,   217,   411,   730,   734,
     730,   648,   734,   141,  2730,  2731,  2732,   648,   730,  3926,
     231,   158,   734,   729,   648,   188,   188,   238,   648,  3315,
     730,  3453,  3454,  3455,  3456,   246,  2730,   156,   730,   533,
     345,    59,  4177,   594,   648,   729,   290,   258,   729,  4184,
    3472,  3473,   730,   730,   656,   657,   219,   734,   493,  4470,
     271,  3569,   323,   729,  3350,   276,   345,  2783,   354,  2785,
     730,   357,  3358,   729,   285,  2791,   729,  2793,   108,  3365,
    3739,   594,   355,   245,  2800,  2814,   730,  2803,   730,   156,
     730,   730,   734,   730,   734,   734,   648,   127,  2814,   730,
     237,    12,  2818,   364,   730,   378,   730,   111,   734,   370,
     730,   515,    26,  3559,   648,   122,   730,   730,   125,   730,
     734,   734,  2838,   734,   648,  3788,   730,   290,   290,   373,
    2846,     4,   648,   729,  2850,  2851,  3799,   632,  2867,  2868,
     648,   730,   730,   730,   355,   734,   734,   734,    21,    77,
    2866,  2867,  2868,   729,   237,   650,   729,   648,   176,   729,
    2967,  2967,   180,    77,   648,  4300,    39,   378,  3944,  4304,
     200,   729,   648,  2202,  2203,  4155,   194,   388,   730,  2895,
     729,   188,   729,   111,   481,   620,   621,   648,   730,    13,
     730,   648,   734,    27,  3970,   194,   730,   108,   729,   504,
     505,   730,   637,   729,   477,   734,   730,  2936,   612,   729,
     373,   373,   219,   243,   730,   729,   127,   345,   729,  4354,
    2936,   493,   730,   509,  4359,   504,   505,   364,   730,   501,
     158,   729,   734,   370,   730,   397,   493,    71,   734,   730,
    2956,    75,  2958,    77,   501,  2954,  2866,    33,   730,  2958,
     729,  2958,   734,   108,  2963,  2964,   286,   732,   730,   729,
    2969,   730,   734,   177,   730,   734,   477,   564,   734,   730,
     184,  3000,   569,   730,   730,   730,   549,  2993,   734,   734,
    2989,   364,  2989,   290,  3000,  2945,   547,   370,   199,   729,
     501,   125,   122,   579,   729,  2219,  2220,   730,   729,  3015,
      21,   734,   439,  3019,  3020,   730,   730,   235,   729,   734,
     734,  3027,   167,   331,  2945,   612,   140,  3026,  4836,  4837,
     141,   607,  3038,   237,   235,   730,  3042,  3043,  4878,   734,
    3046,   628,  1314,  1315,  1870,  1871,  2956,  3046,   549,  3046,
    3038,  3057,   615,  3059,   729,   200,  4896,   729,   620,   621,
     594,  3067,  3068,   729,   729,   141,   439,   654,   188,   729,
    3076,  3077,  3078,   620,   621,   637,   373,   729,    64,   630,
     729,  4921,   729,  3067,  3068,   286,   504,   505,    74,   100,
     637,   729,  3076,  3077,  3078,  3101,   729,    21,   729,   219,
     420,   729,   603,    89,   322,  3015,   220,   729,  4061,  4062,
     729,  4064,   730,   614,   615,   141,   734,  3027,   729,   323,
     547,   429,   340,  4072,   719,   720,   721,   722,   723,   724,
     725,   726,    77,   729,   635,   729,   637,   729,   729,   263,
     729,   594,   594,   729,   729,   156,   364,  3057,    93,   160,
     719,   720,   721,   722,   723,   724,   725,   726,    21,   729,
     364,  4467,   729,   729,    27,   729,   370,   729,   729,   729,
     290,   729,   599,   249,   547,   729,   100,   729,   228,   499,
     729,   729,   729,   194,   729,   729,   729,   729,   729,   390,
     729,   729,   729,   100,  3200,   612,   729,   698,   729,   275,
     729,   212,   729,   630,   729,  3231,   217,   193,    71,   729,
    3216,   733,    75,   199,    77,   729,    48,   276,  3224,   293,
    3226,   160,   735,   384,   171,   193,   599,   238,   533,   730,
     709,   732,   156,   734,   345,   246,   160,   519,   739,     7,
     734,   378,   366,   367,   564,   697,   566,   258,   372,   235,
     735,   709,    13,   373,   378,   615,  3262,   630,  3264,   563,
     271,  4218,   125,  3269,   516,   276,   734,    50,   141,   345,
     194,    30,   282,   287,   285,   420,   583,   263,  3262,   734,
     734,   487,    43,   734,    71,   572,   273,   734,   212,   100,
     366,   367,   612,   217,   418,   734,  3302,   594,   499,   658,
    3306,   719,   720,   721,   722,   723,   724,   725,   726,   733,
     735,   734,   730,  4583,   238,   166,   729,   194,   519,   345,
     265,   543,   246,   563,   166,   287,   543,   157,   734,   547,
      88,   238,   734,    94,   258,   194,    21,    98,   734,  4292,
     203,  4294,  4295,   547,   355,   379,   564,   271,   559,    71,
     646,   258,   276,  4297,   458,   459,   460,   461,   462,   463,
     464,   285,    13,   564,   271,   566,   442,   378,   569,  4322,
    3376,   634,   730,   497,   730,   140,    10,   388,   730,   734,
     730,   735,  3388,   730,   730,  3391,  3392,   730,   708,  4659,
     730,  4629,   730,   504,   505,   730,   502,   457,   343,   136,
     263,   111,   141,   604,  3410,  3411,   156,   730,  3414,    48,
     654,   612,   637,   527,   528,   401,   530,   531,   532,   160,
     160,   566,    21,   547,   369,   122,   630,   238,   504,   505,
     160,   355,   418,    35,  3440,   549,   160,  3443,   404,   160,
      39,   517,   587,   160,   734,   160,  3452,   258,   355,   572,
     734,   108,   249,   654,   378,   141,    55,    56,    87,  4403,
     271,   125,   316,  3469,   388,     7,   477,   612,   729,   110,
     156,   583,   345,   401,   594,   401,    74,   136,   504,   505,
     604,   401,   583,   628,   261,  3491,   431,   261,  3494,   401,
     501,   188,   253,   136,    48,   401,  3502,   401,   401,   401,
     401,   619,   619,   366,   367,   734,   734,   708,   710,   372,
     167,   492,   628,   729,   729,   378,   730,   610,    57,   448,
    4830,  4759,   734,  3529,  4830,   171,   378,     7,   717,   111,
     227,   694,   229,   519,   378,   228,  3542,   592,   549,   378,
    4484,   592,   615,   200,   355,   200,   729,  4302,   275,   735,
    4860,   158,   734,   477,  4860,   418,   158,   192,   733,   287,
     162,  3560,   287,  3569,  3570,  4562,   734,   378,  3574,   287,
     477,   332,  4882,    37,   287,   287,  4882,   501,   235,  4817,
     287,  4819,   706,   734,  3494,   160,   378,   750,   533,   583,
    3574,   635,   603,   290,  4904,   734,  4308,   141,  4904,   236,
     202,   734,   734,  4841,   615,   583,   345,   770,   719,   720,
     721,   722,   723,   724,   725,   726,   401,    13,   604,   730,
     222,   734,   583,   160,   635,   549,   637,   210,   197,   286,
     378,   504,   505,   197,   497,   396,   255,   583,   433,   583,
     735,   194,   549,   719,   720,   721,   722,   723,   724,   725,
     726,   115,  4890,  4891,   735,   735,   735,   735,   122,   345,
     249,    64,   734,   561,   252,   141,   477,   723,  4423,   181,
     194,    74,   734,   514,    60,   194,   373,   730,   730,   603,
     197,   730,    37,   141,   547,   287,    89,   698,   160,   405,
     730,   615,   730,   719,   720,   721,   722,   723,   724,   725,
     726,   730,   730,  4415,   730,   249,  4418,  4419,  4420,  4421,
     730,   635,  3718,   637,   186,   179,   734,  4661,   729,   730,
     722,   732,   729,   734,   188,   730,   730,   730,   739,   201,
     730,   730,   690,   734,   730,   730,   734,  3776,   549,   730,
     402,   604,   214,   735,   734,   730,   735,   735,   730,   726,
     734,  3757,    35,  3759,   136,   219,  3762,   518,   415,  3765,
     115,   160,  3781,   420,  3770,   504,   505,   122,   572,   572,
    3134,   572,   572,   249,   698,  3781,   572,  4774,   126,   734,
     503,   383,   300,   301,   735,   263,   598,   729,  4500,  4501,
     193,   403,  3811,   263,   266,   267,   199,  4509,   263,   560,
    3806,   345,   707,   673,   615,  3811,   730,   378,   732,   673,
     734,   249,   709,   160,   160,   739,   160,   419,   504,   505,
     160,   160,   294,  4776,   179,   160,   290,   160,   160,   160,
     160,   160,   235,   188,   160,   160,   160,  3843,  3844,    21,
     160,   443,   499,   706,   160,    27,    28,   720,   721,   722,
     723,   724,   725,   726,   160,  1018,   160,   160,  3864,   160,
     263,   160,   519,   160,   219,   160,   468,  1030,   160,   345,
     160,   160,   160,   160,   160,   158,   160,   734,   642,   162,
     614,    63,  3888,   654,   465,  1048,   729,   345,   572,   729,
     572,   363,   356,   729,   572,    77,  3806,   594,  3904,  4896,
     735,    83,    84,   583,   368,    87,   735,   564,   372,   373,
     512,   655,   569,  3912,   729,   734,  3922,  1080,  3864,   202,
     583,   729,   385,  1086,  4921,  4680,   197,   445,   446,   111,
     587,   729,  4902,  3843,   212,   290,   433,  1100,  3944,   222,
     734,   543,   197,   125,   730,   417,   615,   129,   336,  3313,
    3314,   428,  3958,   734,  3318,   612,   154,  3963,  3964,   735,
     504,   505,   735,  3962,  3970,    18,    19,   730,  1131,   245,
     730,   628,   245,   730,   156,   730,   158,   730,   730,   730,
     719,   720,   721,   722,   723,   724,   725,   726,  3994,   156,
     555,   730,  3356,   729,   729,    12,   729,   654,  3362,  3363,
    3364,   356,   160,  3367,   287,   406,   524,   525,   526,    73,
     533,   669,  3922,   533,   342,   418,   263,   372,   373,   533,
     533,   492,   533,   729,   263,   729,   734,   637,   504,   505,
     564,   630,   564,   719,   720,   721,   722,   723,   724,   725,
     726,   451,   734,  4049,   378,   583,   504,   505,   583,   231,
     373,   708,   286,   235,   730,   730,   378,   734,   729,   729,
     242,   729,   729,   116,   117,   118,   119,   120,   729,   729,
     285,   473,  4091,   729,  4080,   729,   729,  4083,    12,   160,
     262,   723,   734,   385,   231,  4091,   643,   282,   160,   729,
     197,   391,   258,   275,   730,   258,   734,   730,   697,   730,
     383,   116,   117,   118,   119,   120,   730,   730,   572,    56,
      48,   217,   576,  4132,   373,   579,   519,    62,   729,    66,
     729,   729,   247,   247,   730,   589,  4132,   730,    48,    76,
     594,   495,   729,   597,   730,   730,   419,   736,   730,   688,
     322,   734,   688,    90,    91,    92,   730,   734,    48,  4885,
     729,   750,   160,   729,   245,   160,   278,   734,   340,   106,
     443,   735,  4168,  4162,  4170,  4171,   729,   111,   111,   401,
     223,   224,   225,   226,   729,   719,   720,   721,   722,   723,
     724,   725,   726,   414,   729,   468,   729,   160,   161,   729,
     789,   566,   125,   729,  4200,   794,   125,   730,   583,   721,
     384,   604,   212,  4209,   378,   516,   378,   433,   223,   224,
     225,   226,   583,   395,   210,   269,  4222,   572,   378,   401,
     246,   576,   404,   730,   579,   824,   734,   197,   201,   512,
     735,  4237,   734,  4239,   589,   739,   739,   258,   739,   594,
     258,   214,   597,   719,   720,   721,   722,   723,   724,   725,
     726,   258,   698,   373,   637,   730,   730,   721,   722,   401,
     543,   719,   720,   721,   722,   723,   724,   725,   726,   730,
     730,   730,   197,   277,   456,    48,   153,    48,    48,   388,
     563,   254,   335,   566,   337,   338,   339,   723,   729,    35,
      35,  4297,   609,   346,   267,   125,   895,   896,   897,   898,
     263,   483,   203,   263,  4645,   626,   905,   372,    35,   729,
     373,   493,  4222,   373,   373,   416,   378,   378,    77,  4325,
     335,   294,   337,   338,   339,    21,   735,   516,   734,   729,
     175,   346,   730,   488,   387,   730,   285,   390,   385,   210,
     147,   566,   734,   730,  4350,  4351,   258,   258,   729,   729,
     734,   730,   730,   730,   730,   342,   730,   730,   540,   541,
     542,   730,  4703,   265,   734,   547,   721,   722,    48,   388,
     428,   730,   734,   120,   427,    48,   120,  4718,    48,  4405,
      48,   276,   564,  4389,   620,   567,   359,   334,   373,   368,
    4731,   729,   621,    15,    21,    81,   511,   734,   373,   998,
      56,   143,   228,   194,   351,   385,   263,   734,    73,   194,
      66,   729,   427,    21,   373,   730,   735,   173,   342,  1018,
      76,   603,   734,   730,   734,    48,   319,  1026,   637,  4468,
     674,   729,   398,   729,    90,    91,    92,   490,   491,   730,
     473,    48,   149,   574,   609,   730,   136,  4788,   729,  1048,
     106,   730,   734,   730,   729,   637,   730,  4798,   730,   729,
    1623,  4467,  4803,  4469,   729,   729,   729,   136,   729,   158,
    4476,  4477,   441,   378,   730,   490,   491,   734,   484,    48,
      48,  1080,   538,   484,   692,   679,   692,   692,  4494,   729,
     634,   155,    32,   736,    64,   385,   482,    64,   555,  4505,
     703,    19,  4843,   730,  4845,   554,   634,    32,  4514,   197,
     385,   385,   730,   143,   134,   228,   702,   171,  4524,   692,
     484,   689,     6,  4529,   378,   472,   378,   246,   154,  4870,
     732,    48,  1131,   703,   609,  4534,   130,  4534,   634,  1138,
    4534,   154,   489,   230,   292,   732,   736,   729,   124,   231,
     732,  4557,    54,   575,   143,   732,  1719,  1720,   373,   154,
     729,   575,   215,   734,   501,  4906,  4907,   378,  4594,    54,
    4911,  1170,   154,   732,   378,   194,   194,   194,   378,   632,
     575,   636,   455,   125,   734,   162,  4605,   699,  3004,  4608,
     196,  4534,  2923,  2929,  4170,   648,   649,   650,  2925,  4605,
    4173,  2927,  4608,  2920,   551,  4166,  3467,  3292,  4183,  1023,
    4198,  4460,  4726,  4200,  1467,  4621,  4560,   632,  4727,  4921,
    4878,   568,    46,  4371,   761,  1788,  2423,  2365,  1791,  4648,
    3529,  4446,  4446,  4446,   649,   650,  4892,  4785,  4446,  4446,
    1239,  1240,  4648,  4446,  4696,  4785,  4446,  4772,  4654,  1248,
    1249,  1250,  1251,  1252,  1253,  4446,  4446,  4446,  4446,  4446,
    4722,  4446,  1261,  1262,  4721,  1264,  1265,  3907,  2139,  3296,
    1269,  1270,  3896,  3749,  1273,  1274,  1275,  1276,   334,  1278,
    1279,  2283,  3912,  2964,  2963,  2969,  3713,  1286,  1287,  4285,
    1289,  1290,  1291,  1292,  1293,   351,  1295,  1296,  1297,  1298,
    1299,  1300,  1301,  1302,  1303,  4671,  1305,  4077,  4748,  1308,
    1309,  4682,  4423,  4680,  1313,  2219,  2281,  2958,  1317,  1318,
    1319,  3500,  4748,  3770,  3333,  3771,  2147,  3367,  3366,  4105,
    4692,  1330,  1331,  1332,  3823,  4468,  1335,  3196,  4300,  1338,
    1339,  1340,  1341,  1342,  1343,  4354,  4427,  4359,  4304,  4312,
    4083,  3799,  2798,  3487,  2946,  2220,  2678,  1356,  1357,  4147,
    1359,  1360,  1361,  1362,  1363,  1364,  1365,  1366,  1367,  1368,
    1369,  2220,  2683,  1372,  2219,  1447,    21,  1376,   766,  1378,
    1879,  1875,    27,    28,  4790,  1574,  3394,  2413,  2806,  3027,
    2407,  4797,  2895,  1549,    34,    35,  2397,  3547,    61,  1770,
      40,   737,    42,  2721,    44,    45,  4446,  1620,  1436,   736,
    2052,  2649,  2020,  3209,  4388,  4661,  2545,  4403,    63,  1418,
    2432,  4734,    62,  1280,  4830,  4654,  2432,  2432,  2432,  4241,
    4476,  4836,    77,   489,  4837,  3414,  4842,  4856,    83,    84,
    3988,  4847,    87,  4477,  3614,  3602,  1254,  3996,   774,  4389,
    4856,  2991,  1224,  3083,  4860,  4277,  3388,  4398,   630,  4299,
    1128,  2100,    16,  2335,  1652,  1088,   111,   972,   972,  3967,
     972,  3026,   112,  3026,  3958,   115,  4882,   970,  3566,  1446,
     125,  2506,   972,   123,   129,  1857,  2507,  4527,  4528,  2052,
    4896,  1831,   760,  2353,  2866,   551,  1743,  3030,  4904,  3734,
    4068,  4733,   142,  4902,  4651,  4902,  4904,  4882,  2071,  3839,
    3963,   156,   568,   158,  2731,  4921,  1791,  1166,  2473,   159,
      43,  1806,  2085,    43,  2087,   697,  2089,  2090,  1786,  2092,
    2454,  1164,   722,  2400,  1784,    39,  4215,  1080,  2673,  1017,
     964,  1397,  2290,   725,  1127,    11,    11,   187,  3490,   189,
    1023,  3854,  1023,  1023,  3909,  4193,  3404,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   736,   205,   206,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2137,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,  4628,  4629,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,  2161,  2162,
    2163,  2164,    -1,    -1,    -1,  4645,    -1,   247,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
     260,  1620,   794,    -1,    -1,    -1,    -1,  1626,  2191,  1628,
    1629,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
      -1,  1640,  1641,    -1,  1643,  1644,    -1,    -1,   288,   289,
      -1,   291,   824,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4703,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,  4718,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   328,   329,
     330,  4731,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   347,   348,   349,
      -1,    -1,    -1,    -1,   354,    -1,    -1,   357,    -1,  4759,
      -1,    -1,    -1,    -1,    -1,    -1,   898,    -1,    -1,    -1,
      -1,  4771,  4772,    -1,    -1,   375,   376,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4788,    -1,
     395,    -1,    -1,    -1,    -1,    -1,   401,    -1,  4798,   404,
      -1,    -1,    -1,  4803,    -1,    -1,    -1,    -1,    -1,   409,
     410,    -1,    -1,    -1,    -1,    -1,    -1,  4817,    -1,  4819,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1788,
      -1,    -1,  1791,    -1,    -1,   435,    -1,    -1,    -1,    -1,
    1799,  4841,    -1,  4843,  1803,  4845,    -1,    -1,    -1,    -1,
    1809,   456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1818,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4870,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
    2403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,    -1,
    4890,  4891,    -1,    -1,  1026,    -1,    -1,   497,    -1,    -1,
      -1,   501,    -1,    -1,    -1,    -1,  4906,  4907,    -1,    -1,
      -1,  4911,    -1,   513,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2449,  2450,  2451,    -1,
      -1,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,    -1,
      -1,  1900,   547,    -1,    -1,  1904,    -1,    -1,    -1,    -1,
      -1,    -1,  2475,  1912,    -1,  1914,    -1,    -1,    -1,   564,
      -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   573,    -1,    -1,   576,    -1,    -1,   579,
     580,   581,   582,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1954,  2519,    -1,   603,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1138,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   622,   623,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   637,    -1,    -1,    -1,    -1,    -1,  1170,  1998,
    1999,  2000,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     650,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2027,    -1,
      -1,    -1,    -1,  2032,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2040,    -1,  2042,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1239,  1240,    -1,
      -1,    -1,  2071,    -1,    -1,    -1,  1248,  1249,    -1,    -1,
    1252,  1253,    -1,    -1,   729,    -1,    -1,   732,    -1,  1261,
    1262,    -1,  1264,  1265,   734,    -1,    -1,  1269,    -1,    -1,
      -1,  1273,  1274,  1275,  1276,    -1,  1278,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1286,  1287,    -1,  1289,  1290,    -1,
      -1,    -1,    -1,  1295,    -1,    -1,  1298,  1299,  1300,  1301,
    1302,  1303,    -1,  1305,    -1,    -1,  1308,  1309,    -1,    -1,
      -1,  1313,    -1,  2706,   232,  1317,  1318,  1319,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1330,  1331,
    1332,    -1,    -1,    -1,    -1,    -1,  1338,  1339,  1340,  1341,
    1342,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2745,    -1,  1356,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2755,    -1,  2757,  2758,  2759,  2760,    -1,  2762,
    2763,    -1,    -1,    -1,  1376,    -1,  1378,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,   317,
     318,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2239,    -1,    -1,    -1,    -1,    -1,  1418,    -1,    -1,    -1,
      -1,    -1,  2815,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2826,    -1,    -1,    -1,    14,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    51,    -1,    -1,    -1,    -1,    -1,
      -1,    58,    -1,    -1,    -1,    -1,    63,    64,    -1,    -1,
    2319,    -1,    -1,    -1,  2323,  2324,    -1,  2326,  2327,    -1,
      -1,    -1,    79,    -1,    -1,    -1,  2899,    -1,    -1,  2902,
    2903,    -1,    -1,  2906,  2907,  2908,  2909,  2910,  2911,  2912,
    2913,    -1,    99,  2916,    -1,  2918,    -1,   445,   446,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    35,    36,
      -1,    -1,    -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2945,    -1,   131,   132,    -1,    -1,    -1,    -1,
    2389,    -1,    -1,    -1,    61,    62,   143,   144,    -1,    -1,
      -1,    -1,    -1,  2402,    -1,    72,    73,    -1,    -1,   156,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,    -1,
      97,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   190,    -1,    -1,    -1,    -1,  1620,    -1,
    2449,  2450,  2451,    -1,  1626,    -1,  1628,  1629,    -1,    -1,
      -1,   208,    -1,   210,    -1,    -1,    -1,    -1,   215,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
     157,   158,    -1,    -1,   241,    -1,   163,   244,    -1,   166,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2526,    -1,    -1,
      -1,   198,    -1,   200,   281,    -1,  2535,  2536,   285,  3102,
      -1,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2555,  2556,    -1,  2558,
      -1,    -1,  2561,  2562,  2563,  2564,  2565,    -1,    -1,  2568,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2577,    -1,
      -1,    -1,    -1,  2582,    -1,  2584,    -1,  2586,  2587,    -1,
    2589,  2590,    -1,    -1,    -1,  2594,  2595,  2596,    -1,    -1,
      -1,  2600,  2601,  2602,    -1,  2604,    -1,  2606,    -1,  2608,
      -1,  2610,    -1,  2612,    -1,   282,    -1,    -1,  2617,    -1,
      -1,    -1,    -1,   711,   712,    -1,    -1,  1799,    -1,    -1,
      -1,  1803,    -1,    -1,  2633,   382,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1818,    -1,    -1,   316,
    2649,  2650,    -1,    -1,    -1,  2654,    -1,  2656,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   415,    -1,
      -1,    -1,    -1,  3236,  3237,    -1,    -1,    -1,    -1,   426,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3251,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   448,    -1,    -1,   451,    -1,   453,    -1,    -1,   456,
      -1,    -1,    -1,    -1,   381,    -1,  2715,    -1,    -1,   466,
     467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1900,   476,
      -1,   478,  1904,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     487,   408,  1914,    -1,    -1,    -1,   493,    -1,    -1,    -1,
      -1,    -1,   419,   420,   501,   422,   423,   424,    -1,   506,
     507,   508,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   444,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   539,    -1,    -1,    -1,    -1,    -1,    -1,   546,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1998,  1999,  2000,    -1,
      -1,   498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   590,   511,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,    -1,   606,
    2032,    -1,    -1,    -1,    -1,    -1,    -1,   614,  2040,    -1,
    2042,    -1,    -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,
     547,    -1,    -1,  3446,    -1,    -1,    -1,    -1,    -1,    -1,
     637,    -1,    -1,    -1,    -1,    -1,   563,    -1,   645,   566,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   661,   662,   663,   664,    -1,   586,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   676,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    27,    28,  2945,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   624,    -1,    -1,
      -1,    -1,    -1,    -1,   631,    -1,   713,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    62,
      63,    -1,   729,    -1,  2983,    -1,  2985,    -1,    71,    -1,
    2989,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3023,    -1,    -1,    -1,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    27,    28,    -1,    -1,
      -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3060,    -1,    -1,    -1,    -1,    -1,  2239,    -1,    -1,
      -1,    -1,    63,    -1,    -1,   158,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    83,    84,    -1,  3094,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3103,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3118,
     111,    -1,    -1,    -1,    -1,    -1,    -1,  3126,    -1,    -1,
      -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2319,    -1,    -1,
    3149,  3150,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,
      -1,    -1,    -1,    -1,    -1,    -1,  3729,   158,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3175,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,  3185,    -1,  3187,    -1,
    3189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2389,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2402,    -1,  3231,    -1,    -1,    -1,    -1,    -1,    -1,   322,
      -1,    -1,    -1,    14,   235,    -1,    17,    -1,    -1,    -1,
    3813,   242,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,
      51,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,
      -1,    -1,    63,    64,  3293,  3294,  3295,    -1,    -1,    -1,
      -1,    -1,  3301,    -1,    -1,    -1,    -1,    -1,    79,    -1,
      -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,    99,  3892,
      -1,   322,    -1,    -1,    -1,    -1,    -1,  3900,  3901,  3902,
    3903,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,
     121,    -1,    -1,    -1,  2526,    -1,    -1,  3920,    -1,    -1,
     131,   132,    -1,  2535,  2536,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   143,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2555,  2556,    -1,  2558,    -1,    -1,  2561,
    2562,  2563,  2564,  2565,    -1,    -1,    -1,    -1,    -1,   170,
     483,    -1,    -1,    -1,   395,  2577,    -1,    -1,  3971,    -1,
    2582,    -1,  2584,   404,  2586,  2587,    -1,  2589,    -1,   190,
      -1,    -1,  2594,  2595,  2596,    -1,    -1,    -1,  2600,  2601,
    2602,    -1,  2604,    -1,  2606,    -1,  2608,   208,  2610,   210,
    2612,    -1,    -1,    -1,   215,  2617,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   540,   541,   542,
      -1,    -1,   233,    -1,   547,    -1,    -1,    -1,    -1,    -1,
     241,    -1,    -1,   244,    -1,    -1,    -1,  2649,    -1,    -1,
      -1,   564,    -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,   264,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     281,    -1,    -1,    -1,   285,    -1,  3515,    -1,  3517,    -1,
     603,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2715,    -1,    -1,    -1,    -1,    -1,   540,
     541,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3566,    -1,    -1,
      -1,    -1,    -1,   564,    -1,    -1,   567,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4160,    -1,    -1,
    3599,  3600,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4173,   382,   603,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3621,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4197,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   415,    -1,    -1,    -1,  3647,    -1,
    3649,    -1,    -1,  3652,  3653,   426,  3655,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3666,    -1,    -1,
      -1,    -1,  3671,    -1,    -1,  3674,    -1,   448,  3677,  3678,
     451,    -1,   453,    -1,    -1,   456,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   466,   467,    -1,    -1,    -1,
    3699,    -1,    -1,    -1,    -1,   476,    -1,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   487,    -1,    -1,    -1,
      -1,    -1,   493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,    -1,    -1,    -1,    -1,   506,   507,   508,    -1,    -1,
      -1,    -1,    -1,    -1,  4307,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   539,    -1,
      -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2989,    -1,   590,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   602,    -1,    -1,    -1,   606,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   614,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3023,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3861,  3862,    -1,    -1,   637,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   645,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3060,    -1,
      -1,    -1,    -1,    -1,    -1,  3894,  3895,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   676,  3905,  3906,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3094,    -1,    -1,    -1,    -1,  3926,    -1,    -1,
      -1,  3103,    -1,    -1,    -1,    -1,  4499,    -1,    -1,    -1,
      -1,    -1,   713,    -1,    -1,    -1,  3118,    -1,    -1,    -1,
    3949,    -1,    -1,    -1,  3126,    -1,    -1,    -1,   729,    -1,
    3959,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     7,  3149,  3150,    -1,
    3979,    12,  3981,    14,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    27,    28,    -1,    -1,
      -1,    -1,    -1,  3175,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3185,    -1,  3187,    -1,  3189,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,
      61,    62,    63,    64,    -1,    -1,  4599,  4600,    69,    -1,
      71,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4652,
      -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   137,   138,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   152,    -1,    -1,    -1,    -1,    -1,   158,    -1,  3301,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   233,    -1,   235,    -1,    -1,    -1,    -1,    -1,
      -1,   242,    -1,    -1,    -1,    -1,  4779,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4244,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4261,    -1,    -1,  4264,    -1,    -1,    -1,  4832,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,
      -1,    -1,    -1,   344,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   382,    -1,    -1,    -1,    -1,    -1,   388,    -1,    -1,
      -1,    -1,    -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3566,    -1,    -1,    -1,    -1,  4398,
      -1,    -1,    -1,    -1,    -1,   436,  4405,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     451,   452,   453,    -1,    -1,    -1,    -1,  3599,  3600,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4442,    -1,    -1,    -1,  4446,    -1,  3621,
      -1,    -1,   483,  4452,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3647,    -1,  3649,    -1,    -1,
    3652,  3653,    -1,    -1,    -1,    -1,    -1,  4486,    -1,    -1,
      -1,    -1,    -1,    -1,  3666,    -1,    -1,    -1,    -1,  3671,
      -1,    -1,  3674,    -1,    -1,  3677,  3678,    -1,    -1,   540,
     541,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,
      -1,    -1,  4521,    -1,    -1,    -1,    -1,  3699,  4527,  4528,
      -1,    -1,    -1,   564,    -1,    -1,   567,    -1,    -1,    -1,
      -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,
      14,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,   590,
      -1,    -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   603,    -1,    -1,    -1,    -1,  4576,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    58,  4594,    -1,    -1,    -1,    63,
      64,    -1,    -1,    -1,    -1,    69,   637,    -1,    -1,   640,
      -1,    -1,    -1,    77,    -1,  4614,    -1,  4616,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,  4626,    -1,  4628,
    4629,    -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4645,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,  3861,
    3862,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4701,    -1,  4703,   169,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4718,
    4719,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,
      -1,    -1,  4731,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4748,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4758,
    4759,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,   235,  4771,  4772,    -1,    -1,    -1,  3949,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3959,    -1,  4788,
      -1,    -1,    -1,    -1,    -1,    -1,  4795,    -1,   262,  4798,
      -1,    -1,    -1,    -1,  4803,    -1,    -1,  3979,    -1,  3981,
      -1,  4810,    -1,    -1,    -1,    -1,    -1,    -1,  4817,    -1,
    4819,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,
      14,    -1,  4841,    -1,  4843,    -1,  4845,    -1,    -1,    -1,
      -1,    -1,    -1,    27,    28,    -1,    -1,    -1,   322,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,    35,    -1,
      -1,  4870,    -1,    40,    -1,    42,   340,    44,    45,    -1,
     344,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,
      -1,  4890,  4891,    -1,    -1,    62,    -1,    -1,  4897,    -1,
      -1,    -1,    -1,    77,    -1,    -1,  4905,  4906,  4907,    83,
      84,    -1,  4911,    87,    -1,    -1,    -1,    -1,   382,    -1,
      -1,    -1,    96,    -1,   388,    -1,    -1,    -1,    -1,    -1,
      -1,   395,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,
     404,    -1,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,
      -1,   125,    -1,    -1,    -1,   129,   123,    -1,    -1,    -1,
      -1,    -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,   436,    -1,    -1,   142,    -1,    -1,   152,    -1,
      -1,    -1,    -1,    -1,   158,    -1,    -1,   451,   452,   453,
      -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,   483,
     187,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,  4244,    -1,    -1,    -1,   540,   541,   542,    -1,
     247,    -1,    -1,   547,    -1,    -1,    -1,    -1,   262,  4261,
      -1,    -1,  4264,   260,    -1,    -1,    -1,    -1,    -1,    -1,
     564,    -1,    -1,   567,    -1,  4277,    -1,    -1,    -1,    -1,
      -1,   285,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,   289,    -1,   291,    -1,   590,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   328,   329,   330,    -1,    -1,   340,    -1,    -1,    -1,
     344,    -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,
     347,   348,   349,    -1,    -1,    -1,    -1,   354,    -1,    -1,
     357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
      -1,    -1,    -1,    -1,   388,    -1,    -1,    -1,    -1,    -1,
      -1,   395,    -1,    -1,    -1,    -1,  4398,    -1,    -1,    -1,
     404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   409,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,
    4442,    -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,    -1,  4486,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,    -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,    -1,  4521,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,
      -1,    -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     564,    -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4576,    -1,   573,    -1,    -1,   576,
      -1,    -1,   579,   580,   581,   582,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4614,    -1,  4616,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4626,   622,   623,    -1,    -1,    -1,
      -1,    -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4701,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4719,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4758,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,  4795,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,  4810,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,  4897,    -1,   135,   136,   137,
     138,   139,    -1,  4905,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
      -1,    -1,    -1,   721,   722,    -1,    -1,    -1,    -1,   727,
      -1,   729,    -1,    -1,    -1,   733,    -1,    -1,    -1,   737,
     738,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    46,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,   268,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
     584,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,    -1,    -1,    -1,   721,   722,    -1,
      -1,    -1,    -1,   727,    -1,   729,    -1,    -1,    -1,   733,
      -1,    -1,    -1,   737,   738,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,   493,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,   637,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,    -1,    -1,
      -1,   721,   722,    -1,    -1,    -1,    -1,   727,    -1,   729,
      -1,    -1,    -1,   733,    -1,    -1,    -1,   737,   738,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,    -1,    -1,    -1,   721,   722,   723,    -1,    -1,
      -1,   727,    -1,   729,    -1,    -1,    -1,   733,    -1,    -1,
      -1,   737,   738,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,    -1,    -1,    -1,   721,
     722,   723,    -1,    -1,    -1,   727,    -1,   729,    -1,    -1,
      -1,   733,    -1,    -1,    -1,   737,   738,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
      -1,    -1,    -1,   721,   722,    -1,    -1,    -1,    -1,   727,
      -1,   729,    -1,    -1,    -1,   733,    -1,    -1,    -1,   737,
     738,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,    -1,    -1,    -1,   721,   722,    -1,
      -1,    -1,    -1,   727,    -1,   729,    -1,    -1,    -1,   733,
      -1,    -1,    -1,   737,   738,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,    -1,    -1,
      -1,   721,   722,    -1,    -1,    -1,    -1,   727,    -1,   729,
      -1,    -1,    -1,   733,    -1,    -1,    -1,   737,   738,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,    -1,    -1,    -1,   721,   722,    -1,    -1,    -1,
      -1,   727,    -1,   729,    -1,    -1,    -1,   733,    -1,    -1,
      -1,   737,   738,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,    -1,    -1,    -1,   721,
     722,    -1,    -1,    -1,    -1,   727,    -1,   729,    -1,    -1,
      -1,   733,    -1,    -1,    -1,   737,   738,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
      -1,    -1,    -1,   721,   722,    -1,    -1,    -1,    -1,   727,
      -1,   729,    -1,    -1,    -1,   733,    -1,    -1,    -1,   737,
     738,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,    -1,    -1,    -1,   721,   722,    -1,
      -1,    -1,    -1,   727,    -1,   729,    -1,    -1,    -1,   733,
      -1,    -1,    -1,   737,   738,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,    -1,    -1,
      -1,   721,   722,    -1,    -1,    -1,    -1,   727,    -1,   729,
      -1,    -1,    -1,   733,    -1,    -1,    -1,   737,   738,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,    -1,    -1,    -1,   721,   722,    -1,    -1,    -1,
      -1,   727,    -1,   729,    -1,    -1,    -1,   733,    -1,    -1,
      -1,   737,   738,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,    -1,    -1,    -1,   721,
     722,    -1,    -1,    -1,    -1,   727,    -1,   729,    -1,    -1,
      -1,   733,    -1,    -1,    -1,   737,   738,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
      -1,    -1,    -1,   721,   722,    -1,    -1,    -1,    -1,   727,
      -1,   729,    -1,    -1,    -1,   733,    -1,    -1,    -1,   737,
     738,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,    -1,    -1,    -1,   721,   722,    -1,
      -1,    -1,    -1,   727,    -1,   729,    -1,    -1,    -1,   733,
      -1,    -1,    -1,   737,   738,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,    -1,    -1,
      -1,   721,   722,    -1,    -1,    -1,    -1,   727,    -1,   729,
      -1,    -1,    -1,   733,    -1,    -1,    -1,   737,   738,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,   493,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,   637,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,   675,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,   729,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   738,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,   145,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,   729,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   738,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,   729,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   738,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,   675,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   733,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   733,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,   675,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,   733,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   392,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,   675,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,   733,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   733,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,   675,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   733,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   733,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,   733,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,   675,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,   730,    -1,    -1,   733,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   733,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,   675,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,   733,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,    -1,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,
     396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,    -1,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,    -1,
     496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,    -1,
      -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,   675,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,   734,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,   729,   730,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
     730,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,   675,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,   730,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,   199,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,   263,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,   275,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,   729,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,   729,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,   675,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,   729,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
     675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,   729,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,   729,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,    -1,
      -1,    -1,     5,     6,   723,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,    -1,    -1,    -1,     5,     6,
     723,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,   675,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,    -1,    -1,    -1,     5,     6,   723,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,    -1,    -1,    -1,
       5,     6,   723,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
     675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,    -1,    -1,    -1,     5,     6,   723,     8,
       9,    10,    11,    12,    13,    14,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,   285,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,   493,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,   506,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,   587,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
     609,   610,   611,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,    -1,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    14,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,   493,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
     506,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,   587,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,   609,   610,   611,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,   675,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,    -1,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,   210,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,   506,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,   587,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,   609,   610,   611,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,    -1,    -1,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,   521,   522,   523,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,   594,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    18,    19,    20,    21,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,    -1,    -1,   390,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,   648,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,   675,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,   502,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,   675,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,   594,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
     675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,   104,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,   675,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,   675,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    95,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,   522,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,   660,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,   675,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
     675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,   675,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,   675,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,   675,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
      -1,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
     675,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,   675,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,    -1,   422,   423,   424,    -1,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,   452,   453,   454,    -1,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,   675,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,    -1,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,
     423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,   452,
     453,   454,    -1,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,    -1,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,   675,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,    -1,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,    -1,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,   675,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,    -1,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
      -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,    -1,   422,   423,   424,    -1,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,   452,   453,   454,    -1,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,    -1,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,   675,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,    -1,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,   150,   151,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,    -1,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,
      -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
      -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
     675,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,   634,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,   675,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,    -1,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,   634,    -1,   636,    -1,    -1,    -1,   640,
     641,    -1,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,   675,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,    -1,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
      -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,
      -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,
      -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,   675,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,    -1,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
      -1,    -1,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,    -1,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,
     497,   498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,   636,
      -1,    -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,   675,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,    -1,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,
      -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
      -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
     675,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,   675,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,    -1,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,
     641,    -1,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,   675,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,    -1,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
      -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,
      -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,
      -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,   675,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,    -1,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
      -1,    -1,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,    -1,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,
     497,   498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,   636,
      -1,    -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,   675,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,    -1,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,
      -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
      -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    34,    35,    -1,
      -1,    -1,    -1,    40,   659,    42,    -1,    44,    45,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
     675,    -1,    -1,    -1,   679,    62,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,   289,    -1,   291,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   328,   329,   330,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     347,   348,   349,    -1,    -1,    -1,    -1,   354,    -1,    -1,
     357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   409,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,    -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,   576,
      -1,    -1,   579,   580,   581,   582,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   622,   623,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   650
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   590,
     602,   606,   614,   637,   645,   661,   662,   663,   664,   676,
     713,   729,   741,   742,   745,   746,   747,   748,   749,   751,
     756,   758,   780,   781,   782,   783,   785,   788,   810,   832,
     839,   840,  1058,  1059,  1061,  1063,  1065,  1068,  1070,  1071,
    1072,  1073,  1074,  1075,  1109,  1110,  1111,  1114,  1128,  1130,
    1134,  1137,  1138,  1142,  1144,  1149,  1153,  1159,  1160,  1161,
    1162,  1163,  1164,  1165,  1290,  1323,  1325,  1326,  1327,  1328,
    1329,  1330,  1331,  1332,  1333,  1334,  1335,  1336,  1337,  1338,
    1339,  1347,  1348,  1366,  1367,  1371,  1375,  1381,  1398,  1399,
    1401,  1404,  1413,  1422,  1426,  1428,  1429,  1483,  1485,  1487,
    1510,  1516,  1518,  1519,  1520,  1522,  1526,  1528,  1548,  1554,
    1555,  1556,  1557,  1593,  1600,  1601,  1603,  1604,    12,   108,
     127,   200,   243,   286,   420,   499,   564,   566,   612,   708,
    1567,  1568,  1569,  1572,   282,   371,  1143,  1549,   572,  1468,
     235,     5,     6,     8,     9,    10,    11,    12,    15,    20,
      23,    25,    26,    27,    28,    29,    30,    32,    36,    40,
      43,    44,    45,    47,    49,    50,    53,    56,    57,    59,
      60,    61,    63,    65,    66,    67,    68,    69,    70,    72,
      73,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    87,    88,    90,    91,    92,    93,    94,    98,
     103,   106,   110,   111,   112,   115,   120,   121,   126,   127,
     129,   135,   136,   137,   138,   139,   143,   146,   147,   148,
     152,   154,   155,   157,   158,   159,   162,   163,   165,   166,
     167,   168,   169,   170,   173,   174,   175,   176,   177,   180,
     181,   183,   184,   185,   186,   187,   190,   191,   195,   196,
     198,   202,   204,   205,   206,   207,   209,   211,   215,   216,
     218,   221,   222,   226,   227,   228,   229,   232,   233,   234,
     237,   242,   243,   244,   248,   252,   253,   255,   256,   260,
     262,   265,   266,   269,   272,   273,   279,   280,   282,   284,
     286,   287,   295,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   316,   317,   318,   320,   321,   322,   323,   325,   326,
     331,   332,   333,   334,   335,   336,   339,   340,   342,   344,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   357,
     358,   361,   362,   363,   364,   365,   369,   370,   374,   376,
     377,   379,   380,   381,   384,   394,   395,   396,   398,   400,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     413,   415,   416,   417,   419,   421,   422,   423,   424,   425,
     427,   428,   429,   432,   436,   437,   439,   440,   443,   444,
     445,   446,   447,   449,   450,   452,   453,   454,   457,   458,
     459,   460,   461,   462,   463,   464,   466,   468,   469,   471,
     472,   473,   475,   478,   479,   480,   481,   483,   485,   486,
     487,   488,   489,   491,   492,   496,   497,   498,   499,   503,
     507,   509,   510,   511,   512,   514,   515,   516,   517,   518,
     524,   525,   526,   528,   531,   534,   536,   538,   539,   540,
     541,   542,   543,   546,   547,   550,   551,   552,   553,   554,
     555,   558,   559,   560,   561,   563,   564,   567,   568,   569,
     570,   573,   574,   576,   577,   578,   579,   585,   586,   590,
     591,   592,   593,   595,   596,   598,   599,   601,   602,   605,
     608,   610,   612,   613,   619,   621,   624,   628,   630,   631,
     632,   633,   640,   641,   642,   644,   645,   646,   647,   650,
     654,   656,   657,   659,   668,   669,   670,   673,   674,   675,
     676,   679,   681,   688,   689,   692,   694,   696,   697,   701,
     702,   703,   704,   705,   706,   707,   708,   710,   711,   712,
     713,   714,   715,   716,   717,   804,  1465,  1471,  1478,  1479,
    1480,  1481,   316,   457,   563,   566,  1512,  1512,   641,  1550,
     108,   199,   286,   390,   499,   519,   564,   569,   604,   612,
     654,   708,  1038,  1343,  1564,  1568,  1569,  1570,  1571,  1572,
    1324,   108,   167,   200,   235,   286,   420,   499,   519,   564,
     587,   612,   628,   654,   708,  1343,  1471,  1143,   103,   536,
     841,    13,    14,    99,   130,   144,   167,   170,   183,   210,
     235,   241,   274,   285,   421,   425,   441,   449,   457,   493,
     506,   507,   558,   587,   609,   611,  1465,  1468,  1472,  1475,
    1479,  1481,  1482,  1532,  1533,  1463,  1471,   757,   566,   128,
     220,   293,  1349,   407,   659,    87,   428,  1427,   111,   235,
     647,  1430,   243,  1512,  1143,  1471,  1423,   487,   612,  1512,
    1143,   128,   293,  1350,  1370,   653,  1414,   522,   829,   833,
     834,  1471,    13,   425,  1532,  1550,  1471,    13,   140,   220,
     527,   528,   530,   531,   532,   549,  1170,  1171,  1172,  1562,
      61,    62,   125,   209,   282,   352,   404,   498,   585,   653,
     654,   672,   708,   733,  1013,  1471,  1484,  1494,  1499,  1500,
    1382,   833,   204,   511,   585,   204,   511,   566,  1376,   407,
     659,   243,  1517,  1471,   660,  1291,  1292,  1471,    32,    79,
     154,   415,   437,   478,   539,  1596,     8,    23,    29,    35,
      37,    38,    39,    41,    54,    55,    61,    62,    69,    72,
      96,    97,   102,   104,   107,   108,   113,   114,   115,   120,
     122,   125,   171,   178,   179,   188,   195,   205,   207,   213,
     219,   226,   230,   241,   245,   271,   279,   290,   319,   324,
     335,   339,   341,   345,   346,   347,   348,   349,   356,   366,
     368,   372,   373,   397,   409,   410,   412,   427,   455,   456,
     475,   477,   484,   485,   491,   544,   545,   552,   556,   557,
     562,   572,   576,   577,   578,   579,   588,   589,   590,   594,
     597,   612,   616,   617,   618,   620,   625,   627,   632,   633,
     650,   665,   666,   671,   677,   678,   680,   683,   684,   685,
     686,   687,   691,   693,   695,   721,   722,   727,   729,   733,
     737,   738,  1011,  1163,  1187,  1191,  1194,  1195,  1196,  1197,
    1198,  1199,  1206,  1207,  1208,  1229,  1230,  1450,  1452,  1454,
    1455,  1456,  1460,  1462,  1465,  1471,  1559,  1561,  1465,   401,
     937,   729,  1560,  1561,   282,   675,  1160,  1161,  1163,  1290,
       0,   156,   743,   415,   104,   274,   612,  1082,  1468,  1471,
    1474,  1476,  1541,  1542,   608,  1112,  1126,   246,  1321,   388,
     603,  1304,  1305,   276,   603,  1305,  1309,  1162,  1163,   130,
     609,   195,  1402,  1463,  1471,   160,  1086,  1471,   160,   804,
     480,  1521,   212,   804,  1474,  1471,  1463,   230,  1342,   212,
     167,  1067,  1567,  1512,  1550,  1150,  1151,  1463,   729,   811,
     735,   583,   185,  1340,  1463,  1340,    19,  1551,   230,   966,
     235,   212,   456,  1474,   235,   717,  1471,   966,   966,   212,
     235,   566,  1563,  1563,  1567,  1572,   367,   723,  1180,  1181,
    1184,  1185,  1186,  1187,  1458,  1471,  1342,  1342,  1342,  1471,
     212,  1342,  1342,   717,  1471,  1342,  1342,  1342,  1342,   212,
    1512,   752,  1405,   135,   419,  1531,   481,   481,   564,   569,
     612,   628,   654,   654,   385,   729,  1543,   563,   378,  1543,
      67,   511,  1543,   109,   628,  1543,   733,  1543,   378,   583,
     734,   381,    68,   433,   735,  1474,   197,   231,  1105,  1471,
    1468,  1602,  1184,   246,    85,   293,  1432,   194,  1511,  1512,
     197,    35,   316,  1387,  1424,  1471,  1146,  1476,  1145,  1512,
     246,  1351,  1342,  1416,   316,   511,  1415,  1417,   621,   830,
     501,   835,  1531,   378,   197,   378,   583,  1551,  1180,  1172,
     501,   654,   735,    35,   125,   160,   502,  1014,  1359,  1474,
     194,  1359,   255,   433,  1501,  1502,  1504,  1506,    13,   125,
     365,  1475,  1477,  1540,   212,   733,  1474,    35,   125,  1016,
    1017,  1474,   735,   125,   585,  1490,  1498,  1500,   734,  1491,
    1359,    36,    61,    72,    97,    99,   109,   158,   163,   166,
     176,   198,   200,   209,   211,   282,   316,   381,   408,   419,
     420,   423,   424,   444,   498,   511,   547,   566,   631,  1013,
    1383,  1387,  1388,  1390,  1391,  1392,  1495,   835,   447,   534,
    1123,  1124,  1125,   433,   637,  1115,  1116,  1117,  1123,  1463,
    1471,  1602,  1512,  1291,   734,   729,  1293,    37,   219,   572,
    1451,  1469,  1595,  1595,  1595,    96,  1594,  1595,  1595,   729,
     729,   729,  1194,   729,   729,   729,  1184,  1242,   729,   729,
     729,   729,   729,   729,   729,   729,  1183,  1183,   729,   999,
     729,   729,   729,   572,   729,   729,   729,  1560,   729,   729,
     729,   729,   729,   729,   729,   729,   729,  1184,   729,   729,
     729,  1240,  1241,  1460,  1471,   729,   729,   729,   729,   729,
     729,   729,   729,   729,   999,   729,   729,   729,   729,   729,
     729,   729,   729,   729,   729,   729,   729,   729,   729,   729,
     729,   999,   572,   729,   729,   729,   572,   729,   729,   729,
      37,   219,   572,   729,  1183,   999,   999,   729,   729,   729,
     729,   729,   729,   729,   729,   729,   729,   729,   729,   729,
     729,   729,   729,   729,   729,   729,   729,  1194,  1194,  1194,
    1161,  1163,  1184,   733,  1231,  1474,  1471,   141,   156,   345,
     504,   505,   719,   720,   721,   722,   723,   724,   725,   726,
    1194,    71,   389,  1469,   259,   652,   729,   735,   729,    48,
     156,   156,   111,   194,  1605,   730,   730,   730,   732,  1471,
    1183,   729,   228,   733,   125,   228,   465,   734,  1545,   300,
     301,   445,   446,   524,   525,   526,   778,  1127,   612,  1118,
    1119,   146,   392,   733,  1319,  1320,  1322,  1474,    48,    13,
     140,  1558,  1308,  1309,   290,   373,   594,  1310,  1311,  1452,
    1471,  1558,  1308,   194,   285,  1173,  1174,  1175,  1304,  1173,
    1305,  1309,   231,   293,   429,  1373,  1374,  1370,   160,   194,
    1159,  1347,  1348,  1366,  1371,  1400,  1403,  1451,  1471,   333,
     570,   596,  1060,  1476,  1064,  1474,  1471,  1062,   384,     7,
     144,   451,     7,    12,    14,    17,    27,    28,    58,    63,
      64,    69,    77,    83,    84,    87,    96,   111,   125,   129,
     137,   138,   144,   152,   158,   169,   192,   233,   235,   242,
     262,   285,   322,   340,   344,   382,   388,   395,   404,   436,
     451,   452,   453,   483,   540,   541,   542,   547,   564,   567,
     590,   603,   637,   640,   967,   970,   972,   973,  1020,  1087,
    1088,  1090,  1091,  1093,  1095,  1096,  1097,  1098,  1100,  1102,
     171,  1471,   804,   533,  1573,  1574,  1066,  1340,   249,   734,
     235,   263,   401,  1035,  1156,  1157,  1184,  1238,  1239,  1471,
     759,   760,   176,   429,   734,  1129,    59,   176,   180,   194,
     331,   429,  1139,  1140,  1141,    57,   369,   369,   448,  1552,
     366,   367,  1190,  1471,  1471,  1471,   519,   193,  1471,   709,
       7,  1476,  1541,  1540,  1471,  1049,  1055,  1471,   966,    11,
     167,   200,   420,   587,   791,  1566,  1574,  1580,  1582,  1583,
    1588,   200,   791,  1565,  1574,  1580,  1583,  1588,  1563,  1184,
     734,    18,    19,    21,   387,   390,   648,  1182,  1188,  1189,
    1468,  1471,   160,   161,   201,   214,   254,   267,   294,   359,
    1192,    33,   249,   275,   442,   517,  1190,   735,  1471,   804,
    1471,   378,  1471,   804,  1474,   709,   370,   630,   929,   931,
    1344,  1345,  1346,  1388,   804,  1476,  1539,  1340,  1540,  1471,
    1342,   615,   753,    35,   158,   162,   202,   222,   287,   383,
     419,   443,   468,   512,   543,  1406,  1410,  1411,  1512,    86,
     733,   842,   843,   844,   845,  1471,  1529,   563,  1471,  1544,
    1476,  1474,   200,   420,   566,  1530,  1539,  1533,    21,   160,
    1284,  1285,   186,   363,  1471,  1523,  1471,  1602,  1351,   516,
     734,    50,   282,  1431,    30,  1463,  1513,  1514,  1340,   733,
     750,  1468,   287,   734,   583,  1147,  1148,  1463,  1340,  1463,
    1471,  1419,  1418,   734,  1469,    56,    66,    76,    90,    91,
      92,   106,   334,   351,   489,   551,   568,   836,   838,   734,
    1527,  1476,  1539,  1530,   487,  1553,  1552,   197,  1166,  1167,
    1321,    13,   365,  1540,  1471,    71,  1019,  1184,  1476,   572,
    1508,   273,   380,   643,   734,  1505,   734,  1503,   658,  1486,
     733,   734,  1471,   209,   282,   498,   653,   672,  1497,  1359,
    1471,  1501,  1491,  1359,  1492,  1493,  1494,  1499,    13,    35,
     125,   378,   484,   709,  1184,  1509,   166,   275,   635,  1397,
     729,   108,   167,   200,   420,   566,   587,   612,   628,  1397,
      13,  1474,  1308,   197,   249,  1389,  1393,   198,    70,   543,
     194,   543,   563,    70,   543,    13,    43,    94,    98,   253,
     332,   396,   518,   560,  1377,  1378,  1379,   166,   222,   543,
     543,  1308,  1397,   287,   157,   422,   586,   234,   235,   261,
    1037,    73,   563,   543,   624,   734,   380,   643,    88,   734,
     194,   779,  1292,  1294,  1471,    21,   734,   379,  1598,   559,
    1599,   646,   258,   471,  1597,  1184,  1184,    13,   140,  1236,
    1286,  1236,  1236,  1236,   634,  1244,  1184,  1184,  1239,  1239,
    1184,  1184,   140,  1236,  1286,   730,   373,   730,   730,  1184,
    1184,  1184,  1184,  1460,   116,   117,   118,   119,   120,   223,
     224,   225,   226,   335,   337,   338,   339,   346,   427,   490,
     491,   632,   649,   650,  1281,  1282,  1184,  1238,   112,   115,
     576,   579,  1283,   140,  1232,  1184,  1184,  1184,  1184,  1281,
    1184,  1239,  1241,    10,   734,   735,   140,  1236,  1184,  1184,
     140,  1236,  1184,  1184,  1239,  1239,  1239,  1184,  1239,  1187,
    1184,  1184,  1184,  1184,  1184,  1184,   730,  1184,  1236,  1236,
    1184,  1184,   140,  1236,  1184,  1282,  1282,  1184,    46,   268,
     584,  1184,  1184,   730,  1461,  1462,  1471,  1236,  1236,  1184,
    1184,  1184,  1236,  1236,  1239,   730,   730,  1184,  1184,  1184,
    1184,  1184,  1194,   730,   730,   730,   730,   734,   209,   282,
     498,  1496,   502,  1184,  1187,  1187,  1187,  1187,  1187,  1187,
     245,  1187,   245,  1187,  1187,  1187,  1187,  1187,  1474,  1194,
    1469,  1469,  1184,  1203,  1204,  1205,  1471,  1184,   277,   280,
     430,   938,   939,   136,   457,   111,   156,   744,   730,    48,
    1474,   654,    48,   637,    65,   256,   365,   535,   553,   644,
    1536,  1537,  1542,   637,  1079,   160,   160,   160,   160,   160,
     160,   734,   160,  1113,   404,  1120,   572,  1470,  1470,  1474,
     734,  1184,  1306,  1459,  1163,  1164,  1173,   377,   734,  1163,
    1164,  1173,   503,   609,  1176,   249,  1175,  1308,  1308,  1173,
     197,  1341,  1464,  1471,  1373,  1105,  1474,    87,   964,   965,
     972,   973,   805,   316,     7,   805,   729,   110,   919,   919,
     583,    74,    89,   199,   401,   519,   981,   983,  1035,  1104,
    1359,  1360,   235,  1104,   401,  1360,  1360,  1104,  1360,   401,
     401,  1360,  1360,  1360,  1360,   583,   136,  1360,   261,   401,
     564,   193,   401,   418,  1035,  1104,   261,  1360,   401,   401,
     564,   136,  1360,  1360,  1360,  1360,  1360,  1104,   401,    48,
    1360,  1360,   401,    21,    74,   160,   583,  1035,  1108,   401,
     401,  1360,  1360,  1360,  1360,   139,   332,  1360,  1360,   401,
    1360,   619,   619,   970,    71,  1013,   450,   937,  1089,   734,
     734,   710,  1607,  1069,   492,   628,  1574,   144,   609,  1136,
     125,  1152,  1471,  1151,  1463,   729,   729,  1157,   730,   734,
     232,   295,   296,   297,   298,   299,   302,   303,   304,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   317,
     318,   711,   712,   774,   775,   778,   458,   459,   460,   461,
     462,   463,   464,   761,   762,  1463,   610,  1140,    57,   448,
     171,   784,   378,     7,   717,   111,   378,   966,   919,   125,
     787,   592,   378,   615,   592,  1463,   200,   966,   804,  1471,
     804,   804,  1574,  1181,  1468,  1471,  1184,  1184,  1184,   179,
     372,   589,   605,  1190,    13,    20,  1186,  1193,  1187,   729,
    1560,  1194,  1187,   275,    33,   249,   275,   442,   723,  1471,
     735,  1463,  1344,  1342,   734,   969,   158,   734,    52,   470,
    1106,   192,  1613,  1340,   733,   754,   755,   287,   287,   287,
     287,   287,   287,   734,  1340,  1412,   115,   576,   579,   837,
     847,  1230,  1454,  1460,  1474,   734,   160,   378,   730,   734,
     583,   723,  1463,  1471,  1538,   637,  1534,  1471,   160,   186,
     201,   214,   266,   267,   294,   363,   417,  1524,  1525,   635,
    1287,  1288,  1463,  1468,  1468,  1154,  1155,  1463,   236,  1285,
     734,  1474,    31,   583,  1425,  1476,  1476,   734,   583,   176,
     429,   613,  1131,  1132,  1133,   401,  1253,  1254,   583,  1421,
      13,  1420,  1417,   734,   160,   210,   378,   197,  1538,  1471,
     145,   700,   729,   738,  1168,  1169,  1245,  1247,  1255,  1256,
    1257,  1258,  1259,  1260,  1261,  1463,  1560,  1287,  1166,   583,
     583,   583,  1018,  1474,  1359,   433,   454,   496,  1507,  1504,
    1502,  1540,  1474,  1477,   194,   735,   735,   735,   735,   735,
    1500,  1184,  1509,   734,  1498,   249,  1394,  1469,  1184,   723,
     966,   804,   804,   804,  1463,   804,  1476,  1463,   287,   350,
     543,  1386,  1386,  1397,  1471,   804,  1397,  1476,  1389,   804,
    1397,   252,   561,   181,   194,  1380,   734,  1394,   779,  1389,
    1389,  1393,  1393,  1389,  1397,  1397,  1125,   514,  1117,    60,
     730,   734,  1560,  1451,   405,   194,   734,   730,  1236,   730,
    1184,   730,   730,   730,  1184,   150,   634,  1243,    21,   730,
     615,   730,   730,   730,   615,   734,  1239,   730,   723,   730,
     734,   734,   730,   730,   730,   197,   734,   730,   734,  1239,
     730,   734,   734,   734,   722,   734,   730,   730,   729,  1460,
    1471,  1236,   730,   730,   730,  1236,   730,   734,   730,   730,
     730,   730,   734,   730,   249,   730,   734,   734,   730,   734,
     734,   730,   730,   730,   734,   197,   734,  1236,   730,   730,
     734,   734,   734,   730,   197,  1184,   197,  1184,   197,  1184,
     197,   730,   734,   730,   730,   730,   730,   734,    21,   730,
     734,   730,   734,   730,   730,   690,  1214,  1214,   730,   734,
    1209,   730,  1209,   734,   730,  1214,  1214,  1214,  1239,   735,
     735,   735,  1474,  1184,   739,  1184,  1184,  1182,   730,   734,
     729,   735,   730,    73,   729,    73,   729,   402,   941,   216,
     263,  1360,   136,   572,    13,   365,  1540,   572,  1474,   572,
     572,   572,    19,  1535,   320,   321,   325,   326,  1080,  1081,
       5,   404,  1076,  1077,  1078,  1466,  1468,   122,   188,   290,
     373,   594,  1315,  1466,   122,   188,   219,   290,   373,   594,
    1313,  1468,  1468,   778,  1468,   779,   160,   126,  1121,  1013,
    1015,  1320,    22,   131,  1307,   734,  1311,  1311,   667,   668,
     670,  1177,  1178,  1179,   503,  1173,  1173,  1341,  1463,  1471,
     197,   734,   735,  1372,  1169,   122,   188,   219,   290,   373,
     594,  1314,  1317,  1318,   965,    77,    93,   265,   343,   369,
     431,   533,   807,   809,   263,   598,   920,   108,   221,   394,
     404,   411,   515,   612,   789,   790,  1468,    26,   237,   323,
     910,   911,   912,   921,   922,   923,   929,   931,   910,  1471,
    1055,  1471,  1035,  1036,  1143,  1036,    64,   193,   418,   604,
     982,  1034,  1049,   729,  1471,   125,  1101,  1471,  1471,  1471,
    1143,  1315,  1313,  1471,  1313,    13,  1094,  1280,  1471,  1143,
    1468,  1468,  1468,  1468,  1013,  1360,  1313,  1094,   263,  1280,
     263,  1471,  1471,  1474,  1471,  1094,  1360,   186,   266,   369,
     975,  1313,   125,  1103,  1471,  1315,  1315,  1471,  1143,  1302,
    1303,  1461,   125,   971,  1313,  1468,  1143,  1471,  1471,  1463,
    1143,  1143,    80,    82,   125,   148,   187,   440,   974,   971,
     971,   125,  1313,  1471,  1313,  1094,   729,  1360,  1360,   403,
       7,   144,   967,  1097,  1098,  1091,  1095,  1098,  1360,   707,
    1611,   378,   799,  1083,   127,   248,  1463,   673,   673,  1094,
     418,  1276,  1277,  1278,  1471,   249,  1184,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     734,   779,   160,   160,   160,   160,   160,   160,   160,   734,
     779,   963,   964,  1463,   920,   709,   642,  1463,   290,   373,
     594,  1316,  1317,   614,   906,   654,  1545,  1360,  1463,    47,
     216,   486,  1052,  1052,    21,   231,   275,   456,   729,   933,
     934,   935,   936,   937,   968,   970,  1161,  1163,  1356,  1434,
    1471,   804,   729,   473,  1589,     9,    31,   904,   179,   372,
     589,   605,  1560,    19,  1184,   165,  1298,  1187,  1187,   729,
    1560,  1194,  1187,   735,  1471,  1099,  1100,  1102,  1316,  1346,
    1360,  1476,  1106,  1474,   734,   779,  1411,  1407,   845,   848,
     849,   844,   374,   485,   846,  1530,  1471,  1539,   735,   735,
     583,   655,  1287,   729,  1184,  1308,  1253,   734,  1156,  1157,
    1470,   293,   433,   643,  1515,  1514,  1184,  1468,   583,  1148,
    1463,  1133,   729,   501,   620,   621,   729,  1352,  1353,  1355,
    1356,  1357,  1314,   779,   838,   837,   385,  1530,  1539,   197,
     729,  1169,  1247,  1256,  1257,  1258,  1259,  1471,   734,   100,
     238,   258,   271,   355,   477,   549,  1248,  1249,  1250,  1253,
    1285,   212,  1299,  1287,  1540,  1540,  1540,  1508,    78,   595,
     433,  1314,  1488,  1489,  1359,  1493,  1468,   197,  1395,   730,
    1471,   615,   275,   635,  1396,   428,  1308,  1379,  1395,  1397,
    1397,  1463,  1463,  1397,  1466,  1471,   734,   336,   245,  1184,
     730,  1213,  1214,  1213,  1213,  1213,   575,  1184,  1184,   154,
      35,    62,   112,   115,   123,   260,   354,   357,   509,   579,
     607,   989,  1237,  1014,  1014,  1237,   730,  1213,   730,   245,
     245,  1184,  1184,  1184,   388,  1234,  1184,  1184,  1184,  1184,
    1184,  1187,   730,  1213,   730,  1213,  1184,  1184,  1184,  1184,
    1184,  1184,  1239,  1213,  1213,   245,  1184,  1184,  1184,   730,
    1213,  1184,  1184,  1184,  1184,   197,  1184,   197,  1184,   197,
    1184,  1184,  1213,  1213,  1184,    35,    62,  1313,  1236,  1213,
     729,  1215,  1216,  1217,  1471,   231,   694,  1211,  1452,  1455,
     730,  1211,   730,  1194,  1214,   730,   735,  1056,  1281,  1281,
    1205,  1238,  1471,   156,   729,  1187,   729,  1187,  1314,   555,
     942,   729,    12,   940,  1470,  1360,    21,    48,  1536,  1313,
    1313,  1313,  1313,  1081,   285,   606,   174,   704,   705,  1078,
    1468,   160,   406,  1122,  1014,    73,  1435,  1459,  1341,   669,
    1178,   342,   615,  1253,   735,  1169,  1464,   723,  1471,   501,
    1468,   533,   533,   533,   533,   533,   492,  1468,   916,   917,
     918,   921,   929,   931,  1468,  1468,  1468,  1468,  1313,  1468,
    1468,   730,   734,  1360,  1360,  1360,   969,  1055,   402,   729,
    1055,   729,   263,   263,  1036,  1049,   729,   977,   978,   979,
     981,  1471,    34,    35,    40,    42,    44,    45,    62,   112,
     115,   123,   142,   159,   187,   189,   205,   206,   247,   260,
     279,   288,   289,   291,   328,   329,   330,   347,   348,   349,
     354,   357,   375,   376,   409,   410,   435,   497,   501,   513,
     573,   576,   579,   580,   581,   582,   622,   623,   650,   984,
     987,   988,   989,   990,   991,   992,   993,   995,   656,   657,
    1051,   144,   501,  1094,  1471,  1139,   734,  1314,  1014,  1468,
     564,  1471,  1106,   637,   564,  1468,   984,  1094,   734,  1307,
    1094,   583,   583,  1280,  1094,  1412,  1018,  1014,   373,  1608,
    1609,  1360,   137,   152,  1612,    81,   488,   451,  1084,  1293,
     378,   378,   730,   730,   734,  1152,   729,  1313,  1466,  1313,
    1313,  1466,  1466,  1313,  1313,  1466,  1466,  1466,  1466,  1466,
    1466,  1466,  1466,  1313,  1313,  1466,  1455,  1466,  1313,   775,
     729,   763,   763,   729,   768,   768,   729,   771,   771,   729,
     766,   762,   729,    77,   364,   439,   599,   913,   914,   915,
     921,   925,   926,   927,   928,   929,   931,  1316,  1474,   729,
     786,   286,   177,   184,   907,   908,   909,   921,   922,   923,
     924,   927,   928,   929,   930,   931,  1540,  1079,   612,   709,
    1606,   729,  1356,  1463,   275,   977,   935,   934,   969,   936,
     473,   792,  1584,   123,   247,   435,   550,   976,   729,   130,
     241,   609,   905,  1186,   730,   734,  1194,    19,  1184,  1298,
     723,  1102,  1100,  1474,   755,   194,   637,  1408,   160,   734,
    1538,   637,  1547,   723,   723,  1539,   385,  1308,   125,  1184,
    1363,  1364,   501,  1352,  1353,  1155,  1463,  1157,   231,  1158,
    1433,  1434,   643,   282,  1476,  1279,  1280,  1368,  1369,  1461,
     730,  1354,  1457,  1458,  1461,  1471,   729,  1358,  1361,   160,
     197,  1538,  1539,  1184,   734,   730,   730,   730,   730,   730,
    1245,  1246,  1247,  1255,  1245,   258,   258,   391,  1252,   238,
     271,   477,  1251,  1252,  1255,  1245,  1245,  1285,  1293,    48,
     217,  1289,  1299,   969,  1509,  1315,  1384,   163,   631,  1539,
    1468,  1184,   373,  1385,  1389,  1389,  1313,  1184,   730,  1213,
    1184,   575,   729,  1003,  1004,  1004,   729,   998,   729,   996,
     997,  1003,    62,   247,   998,   247,  1004,   730,   730,   730,
     730,  1213,  1213,  1184,  1184,   730,   730,   734,   730,    48,
     495,  1233,   734,   734,   730,   734,   730,   249,  1200,  1201,
    1213,  1213,   730,   730,   730,   730,   734,   730,   730,  1184,
     730,   194,   730,   730,   734,  1213,   730,   734,   734,   730,
    1184,   730,  1184,   730,  1184,   730,   730,   730,   729,  1025,
    1025,   734,   730,  1216,  1218,  1219,   688,   688,  1214,   734,
    1210,  1210,  1211,  1214,  1211,   730,  1471,   730,   944,  1471,
     730,   944,   730,    48,   729,   946,  1187,   160,   729,  1470,
    1468,  1468,   125,   245,   361,   125,  1314,   245,  1468,   160,
     153,   164,   386,   571,  1436,  1437,   278,  1438,  1169,  1287,
    1471,  1287,   735,  1372,  1368,   111,   111,   127,   248,   969,
     790,   932,  1316,  1465,   932,   932,   912,   729,  1314,   401,
     947,   948,   729,  1184,  1055,   729,  1053,  1054,  1471,   730,
     734,   984,  1003,  1003,  1004,    23,    35,    49,   601,   626,
    1003,  1013,  1021,  1022,  1023,   998,   414,   994,   729,  1023,
      62,   622,   990,  1023,  1023,    62,   623,   623,   626,   729,
    1004,   998,   998,  1023,  1003,  1004,   441,   980,   982,  1028,
      27,    71,    75,    77,   125,   372,   378,   418,   497,   547,
     604,   706,  1006,  1007,  1008,  1019,  1027,  1190,    35,  1003,
    1024,  1003,  1003,  1004,   729,   997,  1005,   996,   125,   125,
     984,  1471,  1019,   566,     9,   186,  1107,  1303,  1471,  1471,
     246,  1131,   730,   721,   969,   373,   721,  1610,  1613,   367,
     416,    25,   168,   793,   583,   137,   152,   795,  1575,  1280,
    1280,  1277,   776,   777,  1313,   730,   764,   765,  1471,   730,
     769,   770,  1471,   730,   772,   773,  1466,  1467,   729,   730,
     767,  1053,  1360,  1360,  1360,  1360,   969,   786,   384,  1053,
     353,   714,   715,   716,   212,  1360,  1360,   969,  1076,  1607,
    1053,  1463,   730,   970,   976,   378,   812,   813,   814,  1471,
     516,  1590,   378,  1239,  1186,   730,   734,  1409,   433,    56,
      66,    76,    90,    91,    92,   106,   334,   351,   472,   489,
     551,   568,   850,   849,   583,   210,   637,  1546,   730,   734,
    1368,   378,  1365,  1365,  1158,   269,   246,   730,   734,  1359,
    1355,  1356,   730,   734,   735,  1362,  1363,   734,   837,  1539,
     197,   734,  1245,   739,   258,  1252,  1252,   258,   258,   378,
     615,   378,   615,   192,   231,   614,  1271,  1272,  1273,  1274,
    1275,  1300,  1459,  1184,   698,  1295,  1289,  1314,  1308,  1308,
    1288,  1397,  1281,  1184,   122,   290,   373,   594,  1023,   373,
     373,  1281,  1281,  1184,  1235,  1459,  1451,   730,  1184,  1184,
    1239,    44,   355,   730,   637,  1202,  1184,  1281,  1184,  1184,
    1184,  1184,   730,   730,   730,  1314,   730,   730,  1313,  1213,
     730,   401,  1220,  1184,  1214,  1214,   197,  1212,   730,   734,
     730,   939,   947,   730,  1314,   943,   944,  1314,   125,  1314,
    1468,    48,    48,   153,    48,  1437,   537,   571,  1439,  1440,
    1287,  1304,  1287,   918,  1053,  1471,   730,   734,  1053,   730,
     729,  1053,   730,   734,   729,  1307,   978,   980,    35,    23,
     601,  1013,    35,  1023,  1014,  1057,  1451,  1023,   626,  1057,
    1023,   509,   607,   651,  1000,  1001,  1002,  1463,  1107,  1018,
     125,   148,   187,  1009,  1468,   115,   576,   579,   721,   722,
    1011,  1012,  1453,  1454,   609,   125,   125,   139,   332,  1010,
     263,  1316,    71,  1008,   203,   985,   263,   372,  1024,  1023,
    1024,  1000,   373,  1000,  1000,  1453,  1107,  1463,  1471,   729,
     373,  1609,   373,   416,  1184,  1184,   378,   799,   804,   378,
      77,   800,    21,   637,  1135,   730,   734,   730,   734,   730,
     734,   735,   730,   734,   765,   730,   734,   730,  1468,  1314,
     932,   932,   915,   729,   730,  1466,  1466,  1466,  1466,  1471,
     932,   932,   909,  1611,   730,   730,   933,   516,   488,   730,
     734,   987,  1468,   239,   249,   393,   815,   816,   817,   818,
    1463,   730,  1239,   175,   285,  1539,   385,   210,  1287,  1364,
    1365,   147,   566,  1369,  1364,  1355,  1356,  1457,  1471,   730,
    1361,  1539,  1468,   730,   258,   258,  1184,   729,  1184,   729,
    1035,  1035,  1272,   639,   734,  1301,  1216,  1296,  1297,  1295,
     779,   730,   730,   730,   730,   730,   730,   734,   730,   730,
     730,   734,  1213,   730,   734,   730,   342,   265,   428,   730,
     730,   730,   730,   730,   730,  1026,   734,    48,   388,  1221,
     186,   266,  1211,  1471,   216,   263,   730,   730,   120,   120,
    1451,  1451,    48,  1451,    48,    48,  1440,   276,  1312,  1304,
     730,   620,   949,   948,   730,  1053,   730,    77,   262,   592,
     615,  1045,  1046,  1047,  1048,  1050,  1051,  1054,   373,  1014,
    1024,   730,   734,   730,  1002,   729,  1029,  1455,  1455,  1011,
     621,  1018,    15,    21,  1092,  1093,   947,  1281,   511,  1468,
     143,  1085,  1356,  1576,   373,   777,   765,   770,  1471,   773,
     734,   729,   637,  1039,  1040,  1041,  1048,   789,  1042,  1043,
    1044,  1048,   228,  1612,  1045,  1468,   793,  1585,   814,  1019,
     730,   734,  1471,   194,   730,  1546,   385,  1308,   263,  1463,
      73,  1262,  1279,  1279,   194,  1270,  1270,  1459,    21,   734,
     373,  1459,  1184,   342,   173,   730,  1313,  1300,    48,   430,
     482,   682,  1222,  1228,  1214,   729,   940,  1451,  1451,  1451,
    1311,  1312,  1039,   249,   272,    77,   111,   235,   322,   340,
     364,   564,   960,   961,   962,  1388,  1042,   730,  1045,  1468,
    1360,  1052,  1052,  1047,   730,  1023,  1451,  1023,  1030,  1471,
     319,  1031,   729,   730,   794,   801,   802,   637,  1577,   674,
     765,   765,   398,  1099,  1041,   730,  1099,  1044,    48,  1099,
     798,   799,   473,  1591,   817,   987,   149,   609,  1253,   729,
     730,   730,   730,   212,   258,   388,   729,   729,  1217,  1297,
     730,   730,   730,  1306,    33,   103,   245,   697,  1223,  1224,
    1225,  1452,  1455,  1187,   729,   729,   951,   953,   574,  1360,
     136,   136,  1360,  1360,  1360,  1360,   729,   957,   962,   158,
    1028,  1313,  1307,   730,   734,   198,   400,   510,   378,  1032,
    1184,   538,   796,    54,    68,   182,   230,   257,   270,   381,
     474,   803,   854,   856,   857,   858,   860,   861,   862,   863,
     864,   865,   867,   875,   876,   879,   890,   893,   895,   896,
    1465,  1473,  1480,    53,    64,   282,   730,   734,  1465,  1316,
     795,   987,   806,  1019,   484,  1368,  1015,   701,  1263,  1264,
    1471,  1285,    48,    48,  1276,  1278,   245,   697,  1224,  1226,
    1452,  1455,   484,  1184,   692,   679,  1227,   692,   692,   730,
     944,   729,   952,   953,   954,   327,   950,   953,  1468,  1360,
    1360,  1316,  1316,  1314,  1471,   555,   958,   959,  1360,  1471,
     130,   609,   730,  1184,   155,   797,   877,   880,  1471,   197,
     363,   868,   855,  1473,  1473,  1471,   859,   746,   292,   455,
     636,   899,    32,   897,   736,    64,   385,    64,   765,   800,
    1019,   134,   807,   808,  1190,  1592,   191,   413,  1578,  1579,
     482,  1441,   703,   730,   734,   194,   987,   730,   730,  1184,
     681,    19,   681,   681,  1281,   103,   212,   369,   696,   554,
     945,   730,   730,   734,   327,   955,   956,  1187,  1468,  1468,
    1474,   730,   734,  1474,    52,   369,   470,   501,  1033,  1033,
     548,   629,   986,  1184,  1184,   634,   882,   886,   197,  1471,
     870,   871,  1184,   820,   853,   854,   856,   858,   860,   862,
     863,   864,   865,   867,   875,   890,   893,   895,   820,   900,
     898,   891,   894,   385,   385,   730,   143,  1586,   134,   853,
    1474,  1581,   228,  1435,  1468,  1264,   702,   171,  1265,  1281,
    1226,   692,   484,   689,  1314,   945,   953,   730,   734,   960,
     959,     6,   125,   372,   378,   378,  1006,   878,   887,   150,
     886,   889,   246,   154,  1184,   154,   853,   732,   608,  1184,
     821,   899,   897,   801,   806,   853,    48,  1438,  1262,   703,
     681,   956,   609,   130,   634,   881,   883,  1184,   820,   154,
     866,   230,   872,   292,   732,   902,   901,   124,   819,   822,
     892,  1473,   892,  1587,  1451,   231,  1442,  1468,  1033,  1033,
     884,   883,   889,   888,    54,   869,  1471,   575,  1184,   143,
      95,   172,   825,   851,  1471,   154,   853,   732,   853,   373,
     729,  1444,   125,   162,   372,  1266,  1267,  1268,  1269,  1184,
     154,   575,   734,   820,   903,   820,   215,   734,   987,    86,
     105,   732,   278,   482,  1443,   730,   733,  1445,  1446,  1461,
     501,  1447,  1468,  1268,  1269,  1267,  1269,   378,   885,    54,
     820,  1471,   873,   154,   154,   194,  1471,  1019,   194,   194,
    1474,   730,   734,  1448,  1449,  1461,   378,   378,   162,   699,
     575,   150,   151,   874,   455,   636,   823,   125,   852,   828,
     829,  1313,   824,  1446,   734,  1359,   820,   820,   870,   521,
     523,   826,   827,   828,   831,  1190,  1471,  1184,  1159,  1449,
    1364,   734,   853,   196,   827
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  However,
   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
   discussed.  */

#define YYFAIL		goto yyerrlab
#if defined YYFAIL
  /* This is here to suppress warnings from the GCC cpp's
     -Wunused-macros.  Normally we don't worry about that warning, but
     some users do, and we want to make it easy for users to remove
     YYFAIL uses, which will produce warnings from Bison 2.5.  */
#endif

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))

/* Error token number */
#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (YYID (N))                                                     \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (YYID (0))
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

__attribute__((__unused__))
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
#else
static unsigned
yy_location_print_ (yyo, yylocp)
    FILE *yyo;
    YYLTYPE const * const yylocp;
#endif
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += fprintf (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += fprintf (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += fprintf (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += fprintf (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += fprintf (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */
#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, YYTHD)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
        break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, YYTHD, parse_tree)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULL;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - Assume YYFAIL is not used.  It's too flawed to consider.  See
       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
       for details.  YYERROR is fine as it does not invoke this
       function.
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, YYTHD, parse_tree)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
        break;
    }
}




/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
#else
int
yyparse (YYTHD, parse_tree)
    class THD *YYTHD;
    class Parse_tree_root **parse_tree;
#endif
#endif
{
/* The lookahead symbol.  */
int yychar;


#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
static YYSTYPE yyval_default;
# define YY_INITIAL_VALUE(Value) = Value
#endif
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval YY_INITIAL_VALUE(yyval_default);

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc = yyloc_default;


    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
/* Line 1792 of yacc.c  */
#line 1905 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[(2) - (3)].item);
          }
    break;

  case 4:
/* Line 1792 of yacc.c  */
#line 1910 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[(2) - (3)].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[(2) - (3)].partition_clause)->part_info;
          }
    break;

  case 5:
/* Line 1792 of yacc.c  */
#line 1920 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[(2) - (6)].lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Generated_column;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[(4) - (6)].item), &(yyvsp[(4) - (6)].item));
            gcol_info->expr_item= (yyvsp[(4) - (6)].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
    break;

  case 6:
/* Line 1792 of yacc.c  */
#line 1938 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[(2) - (3)].subquery);
          }
    break;

  case 7:
/* Line 1792 of yacc.c  */
#line 1945 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 8:
/* Line 1792 of yacc.c  */
#line 1957 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 10:
/* Line 1792 of yacc.c  */
#line 1982 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 13:
/* Line 1792 of yacc.c  */
#line 1994 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { *parse_tree= (yyvsp[(1) - (1)].top_level_node); }
    break;

  case 15:
/* Line 1792 of yacc.c  */
#line 2000 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 16:
/* Line 1792 of yacc.c  */
#line 2001 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 17:
/* Line 1792 of yacc.c  */
#line 2002 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 19:
/* Line 1792 of yacc.c  */
#line 2004 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 20:
/* Line 1792 of yacc.c  */
#line 2005 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 22:
/* Line 1792 of yacc.c  */
#line 2007 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 23:
/* Line 1792 of yacc.c  */
#line 2008 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 25:
/* Line 1792 of yacc.c  */
#line 2010 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 26:
/* Line 1792 of yacc.c  */
#line 2011 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 28:
/* Line 1792 of yacc.c  */
#line 2013 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 30:
/* Line 1792 of yacc.c  */
#line 2015 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 32:
/* Line 1792 of yacc.c  */
#line 2017 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 33:
/* Line 1792 of yacc.c  */
#line 2018 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 34:
/* Line 1792 of yacc.c  */
#line 2019 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 35:
/* Line 1792 of yacc.c  */
#line 2020 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 41:
/* Line 1792 of yacc.c  */
#line 2026 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 45:
/* Line 1792 of yacc.c  */
#line 2030 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 46:
/* Line 1792 of yacc.c  */
#line 2031 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 47:
/* Line 1792 of yacc.c  */
#line 2032 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 49:
/* Line 1792 of yacc.c  */
#line 2034 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 50:
/* Line 1792 of yacc.c  */
#line 2035 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 53:
/* Line 1792 of yacc.c  */
#line 2038 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 55:
/* Line 1792 of yacc.c  */
#line 2040 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 56:
/* Line 1792 of yacc.c  */
#line 2041 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 57:
/* Line 1792 of yacc.c  */
#line 2042 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 58:
/* Line 1792 of yacc.c  */
#line 2043 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 59:
/* Line 1792 of yacc.c  */
#line 2044 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 60:
/* Line 1792 of yacc.c  */
#line 2045 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 62:
/* Line 1792 of yacc.c  */
#line 2047 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 63:
/* Line 1792 of yacc.c  */
#line 2048 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 64:
/* Line 1792 of yacc.c  */
#line 2049 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 65:
/* Line 1792 of yacc.c  */
#line 2050 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 67:
/* Line 1792 of yacc.c  */
#line 2052 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 68:
/* Line 1792 of yacc.c  */
#line 2053 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 70:
/* Line 1792 of yacc.c  */
#line 2055 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 71:
/* Line 1792 of yacc.c  */
#line 2056 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 73:
/* Line 1792 of yacc.c  */
#line 2058 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 77:
/* Line 1792 of yacc.c  */
#line 2062 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 78:
/* Line 1792 of yacc.c  */
#line 2063 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 79:
/* Line 1792 of yacc.c  */
#line 2064 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 80:
/* Line 1792 of yacc.c  */
#line 2065 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 83:
/* Line 1792 of yacc.c  */
#line 2068 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 84:
/* Line 1792 of yacc.c  */
#line 2069 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 86:
/* Line 1792 of yacc.c  */
#line 2071 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 87:
/* Line 1792 of yacc.c  */
#line 2072 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 88:
/* Line 1792 of yacc.c  */
#line 2073 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 90:
/* Line 1792 of yacc.c  */
#line 2075 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[(1) - (1)].set)); }
    break;

  case 93:
/* Line 1792 of yacc.c  */
#line 2078 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 94:
/* Line 1792 of yacc.c  */
#line 2079 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 96:
/* Line 1792 of yacc.c  */
#line 2081 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 97:
/* Line 1792 of yacc.c  */
#line 2082 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 99:
/* Line 1792 of yacc.c  */
#line 2084 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 100:
/* Line 1792 of yacc.c  */
#line 2085 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 102:
/* Line 1792 of yacc.c  */
#line 2087 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 103:
/* Line 1792 of yacc.c  */
#line 2088 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.top_level_node)= nullptr; }
    break;

  case 104:
/* Line 1792 of yacc.c  */
#line 2093 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 107:
/* Line 1792 of yacc.c  */
#line 2108 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (4)].lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
    break;

  case 108:
/* Line 1792 of yacc.c  */
#line 2128 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
    break;

  case 109:
/* Line 1792 of yacc.c  */
#line 2135 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
    break;

  case 110:
/* Line 1792 of yacc.c  */
#line 2145 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 111:
/* Line 1792 of yacc.c  */
#line 2152 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 116:
/* Line 1792 of yacc.c  */
#line 2167 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 117:
/* Line 1792 of yacc.c  */
#line 2179 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 118:
/* Line 1792 of yacc.c  */
#line 2187 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 119:
/* Line 1792 of yacc.c  */
#line 2198 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
    break;

  case 120:
/* Line 1792 of yacc.c  */
#line 2209 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 121:
/* Line 1792 of yacc.c  */
#line 2211 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 122:
/* Line 1792 of yacc.c  */
#line 2221 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 125:
/* Line 1792 of yacc.c  */
#line 2230 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_DB);
          }
    break;

  case 126:
/* Line 1792 of yacc.c  */
#line 2237 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_DB);
          }
    break;

  case 127:
/* Line 1792 of yacc.c  */
#line 2244 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_TABLE);
          }
    break;

  case 128:
/* Line 1792 of yacc.c  */
#line 2251 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
    break;

  case 129:
/* Line 1792 of yacc.c  */
#line 2258 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
    break;

  case 130:
/* Line 1792 of yacc.c  */
#line 2265 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
    break;

  case 131:
/* Line 1792 of yacc.c  */
#line 2273 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_REWRITE_DB);
          }
    break;

  case 132:
/* Line 1792 of yacc.c  */
#line 2282 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 133:
/* Line 1792 of yacc.c  */
#line 2288 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 134:
/* Line 1792 of yacc.c  */
#line 2295 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 135:
/* Line 1792 of yacc.c  */
#line 2302 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 136:
/* Line 1792 of yacc.c  */
#line 2310 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
    break;

  case 137:
/* Line 1792 of yacc.c  */
#line 2319 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 138:
/* Line 1792 of yacc.c  */
#line 2325 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 139:
/* Line 1792 of yacc.c  */
#line 2331 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (5)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (5)].item));
          }
    break;

  case 140:
/* Line 1792 of yacc.c  */
#line 2339 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(4) - (7)].item));
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(6) - (7)].item));
            (yyval.item_list)= (yyvsp[(1) - (7)].item_list);
          }
    break;

  case 141:
/* Line 1792 of yacc.c  */
#line 2347 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 142:
/* Line 1792 of yacc.c  */
#line 2353 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 143:
/* Line 1792 of yacc.c  */
#line 2360 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 144:
/* Line 1792 of yacc.c  */
#line 2367 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 145:
/* Line 1792 of yacc.c  */
#line 2375 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[(1) - (3)].lex_str).str, (yyvsp[(1) - (3)].lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            (yyval.item)= table_item;
          }
    break;

  case 146:
/* Line 1792 of yacc.c  */
#line 2387 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 147:
/* Line 1792 of yacc.c  */
#line 2393 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 148:
/* Line 1792 of yacc.c  */
#line 2400 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 149:
/* Line 1792 of yacc.c  */
#line 2407 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 150:
/* Line 1792 of yacc.c  */
#line 2415 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
    break;

  case 153:
/* Line 1792 of yacc.c  */
#line 2430 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 154:
/* Line 1792 of yacc.c  */
#line 2434 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 155:
/* Line 1792 of yacc.c  */
#line 2438 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 156:
/* Line 1792 of yacc.c  */
#line 2442 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
            if (strlen((yyvsp[(3) - (3)].lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
    break;

  case 157:
/* Line 1792 of yacc.c  */
#line 2452 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 158:
/* Line 1792 of yacc.c  */
#line 2456 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 159:
/* Line 1792 of yacc.c  */
#line 2460 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 160:
/* Line 1792 of yacc.c  */
#line 2465 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[(3) - (3)]).cpp.start, (yylsp[(3) - (3)]).cpp.end - (yylsp[(3) - (3)]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 161:
/* Line 1792 of yacc.c  */
#line 2476 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 162:
/* Line 1792 of yacc.c  */
#line 2481 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 163:
/* Line 1792 of yacc.c  */
#line 2485 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 164:
/* Line 1792 of yacc.c  */
#line 2489 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.tls_version= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 165:
/* Line 1792 of yacc.c  */
#line 2493 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 166:
/* Line 1792 of yacc.c  */
#line 2497 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 167:
/* Line 1792 of yacc.c  */
#line 2501 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 168:
/* Line 1792 of yacc.c  */
#line 2505 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 169:
/* Line 1792 of yacc.c  */
#line 2510 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 170:
/* Line 1792 of yacc.c  */
#line 2514 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 171:
/* Line 1792 of yacc.c  */
#line 2518 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.public_key_path= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 172:
/* Line 1792 of yacc.c  */
#line 2522 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.get_public_key= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 173:
/* Line 1792 of yacc.c  */
#line 2528 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Item *num= (yyvsp[(3) - (3)].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 174:
/* Line 1792 of yacc.c  */
#line 2562 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 175:
/* Line 1792 of yacc.c  */
#line 2567 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 180:
/* Line 1792 of yacc.c  */
#line 2584 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[(1) - (1)].ulong_num));
          }
    break;

  case 181:
/* Line 1792 of yacc.c  */
#line 2590 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 182:
/* Line 1792 of yacc.c  */
#line 2594 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 183:
/* Line 1792 of yacc.c  */
#line 2610 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 184:
/* Line 1792 of yacc.c  */
#line 2614 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 185:
/* Line 1792 of yacc.c  */
#line 2624 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
    break;

  case 186:
/* Line 1792 of yacc.c  */
#line 2629 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[(3) - (3)].lex_str).str);
         Lex->mi.channel= (yyvsp[(3) - (3)].lex_str).str;
         Lex->mi.for_channel= true;
       }
    break;

  case 187:
/* Line 1792 of yacc.c  */
#line 2645 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (9)].is_not_empty), (yyvsp[(4) - (9)].is_not_empty), (yyvsp[(5) - (9)].table),
                                             (yyvsp[(7) - (9)].table_element_list),
                                             (yyvsp[(9) - (9)].create_table_tail).opt_create_table_options,
                                             (yyvsp[(9) - (9)].create_table_tail).opt_partitioning,
                                             (yyvsp[(9) - (9)].create_table_tail).on_duplicate,
                                             (yyvsp[(9) - (9)].create_table_tail).opt_query_expression);
          }
    break;

  case 188:
/* Line 1792 of yacc.c  */
#line 2655 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (6)].is_not_empty), (yyvsp[(4) - (6)].is_not_empty), (yyvsp[(5) - (6)].table),
                                             NULL,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_create_table_options,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_partitioning,
                                             (yyvsp[(6) - (6)].create_table_tail).on_duplicate,
                                             (yyvsp[(6) - (6)].create_table_tail).opt_query_expression);
          }
    break;

  case 189:
/* Line 1792 of yacc.c  */
#line 2665 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (7)].is_not_empty), (yyvsp[(4) - (7)].is_not_empty), (yyvsp[(5) - (7)].table), (yyvsp[(7) - (7)].table));
          }
    break;

  case 190:
/* Line 1792 of yacc.c  */
#line 2670 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (9)].is_not_empty), (yyvsp[(4) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(8) - (9)].table));
          }
    break;

  case 191:
/* Line 1792 of yacc.c  */
#line 2677 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[(3) - (4)].is_not_empty), (yyvsp[(4) - (4)].user_list));
          }
    break;

  case 192:
/* Line 1792 of yacc.c  */
#line 2687 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[(4) - (10)].lex_str)), (yyvsp[(7) - (10)].resource_group_type), (yyvsp[(8) - (10)].resource_group_vcpu_list_type), (yyvsp[(9) - (10)].resource_group_priority_type),
                                                 (yyvsp[(10) - (10)].resource_group_state_type).is_default ? true :
                                                 (yyvsp[(10) - (10)].resource_group_state_type).value);
          }
    break;

  case 193:
/* Line 1792 of yacc.c  */
#line 2696 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
    break;

  case 194:
/* Line 1792 of yacc.c  */
#line 2704 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info->options= (yyvsp[(3) - (6)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
    break;

  case 195:
/* Line 1792 of yacc.c  */
#line 2711 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 196:
/* Line 1792 of yacc.c  */
#line 2715 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[(5) - (8)].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[(3) - (8)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
    break;

  case 197:
/* Line 1792 of yacc.c  */
#line 2726 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(7) - (7)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(7) - (7)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[(4) - (7)].lex_str), pc, (yyvsp[(6) - (7)].lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 198:
/* Line 1792 of yacc.c  */
#line 2746 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(7) - (7)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(7) - (7)].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[(3) - (7)].lex_str), (yyvsp[(5) - (7)].lex_str), (yyvsp[(6) - (7)].lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 199:
/* Line 1792 of yacc.c  */
#line 2765 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[(3) - (11)].lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[(3) - (11)].lex_str);
            Lex->server_options.set_scheme((yyvsp[(7) - (11)].lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
    break;

  case 200:
/* Line 1792 of yacc.c  */
#line 2782 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[(7) - (8)].ulonglong_number), *(yyvsp[(8) - (8)].sql_cmd_srs_attributes), true, false);
          }
    break;

  case 201:
/* Line 1792 of yacc.c  */
#line 2787 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[(6) - (7)].ulonglong_number), *(yyvsp[(7) - (7)].sql_cmd_srs_attributes), false, (yyvsp[(5) - (7)].is_not_empty));
          }
    break;

  case 202:
/* Line 1792 of yacc.c  */
#line 2794 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_OOM, MYF(0)); /* purecov: inspected */
          }
    break;

  case 203:
/* Line 1792 of yacc.c  */
#line 2800 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[(1) - (3)].sql_cmd_srs_attributes)->srs_name= (yyvsp[(3) - (3)].lex_str);
            }
          }
    break;

  case 204:
/* Line 1792 of yacc.c  */
#line 2812 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[(1) - (3)].sql_cmd_srs_attributes)->definition= (yyvsp[(3) - (3)].lex_str);
            }
          }
    break;

  case 205:
/* Line 1792 of yacc.c  */
#line 2825 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (6)].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[(1) - (6)].sql_cmd_srs_attributes)->organization= (yyvsp[(3) - (6)].lex_str);
              (yyvsp[(1) - (6)].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[(6) - (6)].ulonglong_number);
            }
          }
    break;

  case 206:
/* Line 1792 of yacc.c  */
#line 2838 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[(1) - (3)].sql_cmd_srs_attributes)->description= (yyvsp[(3) - (3)].lex_str);
            }
          }
    break;

  case 207:
/* Line 1792 of yacc.c  */
#line 2853 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= 0;
          }
    break;

  case 208:
/* Line 1792 of yacc.c  */
#line 2858 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(3) - (3)].user_list);
          }
    break;

  case 209:
/* Line 1792 of yacc.c  */
#line 2867 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[(2) - (11)].key_type), (yyvsp[(4) - (11)].index_name_and_type).name, (yyvsp[(4) - (11)].index_name_and_type).type,
                                             (yyvsp[(6) - (11)].table), (yyvsp[(8) - (11)].index_column_list), (yyvsp[(10) - (11)].index_options),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).lock.get_or_default());
          }
    break;

  case 210:
/* Line 1792 of yacc.c  */
#line 2875 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[(4) - (11)].lex_str),
                                             NULL, (yyvsp[(6) - (11)].table), (yyvsp[(8) - (11)].index_column_list), (yyvsp[(10) - (11)].index_options),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).lock.get_or_default());
          }
    break;

  case 211:
/* Line 1792 of yacc.c  */
#line 2883 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[(4) - (11)].lex_str),
                                             NULL, (yyvsp[(6) - (11)].table), (yyvsp[(8) - (11)].index_column_list), (yyvsp[(10) - (11)].index_options),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[(11) - (11)].opt_index_lock_and_algorithm).lock.get_or_default());
          }
    break;

  case 214:
/* Line 1792 of yacc.c  */
#line 2898 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_username((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 215:
/* Line 1792 of yacc.c  */
#line 2902 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_host((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 216:
/* Line 1792 of yacc.c  */
#line 2906 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_db((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 217:
/* Line 1792 of yacc.c  */
#line 2910 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_owner((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 218:
/* Line 1792 of yacc.c  */
#line 2914 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_password((yyvsp[(2) - (2)].lex_str));
            Lex->contains_plaintext_password= true;
          }
    break;

  case 219:
/* Line 1792 of yacc.c  */
#line 2919 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_socket((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 220:
/* Line 1792 of yacc.c  */
#line 2923 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_port((yyvsp[(2) - (2)].ulong_num));
          }
    break;

  case 221:
/* Line 1792 of yacc.c  */
#line 2930 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->create_info->options= (yyvsp[(2) - (3)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(3) - (3)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 222:
/* Line 1792 of yacc.c  */
#line 2950 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 223:
/* Line 1792 of yacc.c  */
#line 2961 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (3)].item), &(yyvsp[(2) - (3)].item));

            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 225:
/* Line 1792 of yacc.c  */
#line 2970 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 226:
/* Line 1792 of yacc.c  */
#line 2978 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 227:
/* Line 1792 of yacc.c  */
#line 2980 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 228:
/* Line 1792 of yacc.c  */
#line 2986 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 229:
/* Line 1792 of yacc.c  */
#line 2992 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 230:
/* Line 1792 of yacc.c  */
#line 3001 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 231:
/* Line 1792 of yacc.c  */
#line 3008 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 233:
/* Line 1792 of yacc.c  */
#line 3018 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 234:
/* Line 1792 of yacc.c  */
#line 3026 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 236:
/* Line 1792 of yacc.c  */
#line 3032 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 237:
/* Line 1792 of yacc.c  */
#line 3038 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 238:
/* Line 1792 of yacc.c  */
#line 3046 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 239:
/* Line 1792 of yacc.c  */
#line 3048 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 240:
/* Line 1792 of yacc.c  */
#line 3055 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[(0) - (0)]).cpp.end);
          }
    break;

  case 241:
/* Line 1792 of yacc.c  */
#line 3101 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
    break;

  case 255:
/* Line 1792 of yacc.c  */
#line 3130 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (*THR_MALLOC) sp_name(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 256:
/* Line 1792 of yacc.c  */
#line 3144 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (*THR_MALLOC) sp_name(db, (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 257:
/* Line 1792 of yacc.c  */
#line 3162 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 258:
/* Line 1792 of yacc.c  */
#line 3163 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 259:
/* Line 1792 of yacc.c  */
#line 3167 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 260:
/* Line 1792 of yacc.c  */
#line 3168 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 261:
/* Line 1792 of yacc.c  */
#line 3174 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[(2) - (2)].lex_str)); }
    break;

  case 262:
/* Line 1792 of yacc.c  */
#line 3176 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 263:
/* Line 1792 of yacc.c  */
#line 3178 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 264:
/* Line 1792 of yacc.c  */
#line 3180 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 265:
/* Line 1792 of yacc.c  */
#line 3182 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 266:
/* Line 1792 of yacc.c  */
#line 3184 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 267:
/* Line 1792 of yacc.c  */
#line 3186 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 268:
/* Line 1792 of yacc.c  */
#line 3191 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 269:
/* Line 1792 of yacc.c  */
#line 3192 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= true; }
    break;

  case 270:
/* Line 1792 of yacc.c  */
#line 3193 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= false; }
    break;

  case 271:
/* Line 1792 of yacc.c  */
#line 3198 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 272:
/* Line 1792 of yacc.c  */
#line 3202 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 273:
/* Line 1792 of yacc.c  */
#line 3209 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[(2) - (3)].spname), (yyvsp[(3) - (3)].item_list2));
          }
    break;

  case 274:
/* Line 1792 of yacc.c  */
#line 3215 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 275:
/* Line 1792 of yacc.c  */
#line 3217 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
              (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2);
            }
    break;

  case 280:
/* Line 1792 of yacc.c  */
#line 3235 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[(2) - (3)].type));
            enum_field_types field_type= (yyvsp[(2) - (3)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(2) - (3)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(3) - (3)].charset)))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[(1) - (3)].lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[(2) - (3)].type)->get_length(), (yyvsp[(2) - (3)].type)->get_dec(),
                                      (yyvsp[(2) - (3)].type)->get_type_flags(),
                                      NULL, NULL, &NULL_STR, 0,
                                      (yyvsp[(2) - (3)].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[(3) - (3)].charset) != nullptr,
                                      (yyvsp[(2) - (3)].type)->get_uint_geom_type(), nullptr, {}))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
    break;

  case 285:
/* Line 1792 of yacc.c  */
#line 3296 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[(2) - (4)].lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[(2) - (4)].lex_str), true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(2) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[(3) - (4)].type));
            enum_field_types field_type= (yyvsp[(3) - (4)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(3) - (4)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(4) - (4)].charset)))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(2) - (4)].lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[(3) - (4)].type)->get_length(), (yyvsp[(3) - (4)].type)->get_dec(),
                                      (yyvsp[(3) - (4)].type)->get_type_flags(),
                                      NULL, NULL, &NULL_STR, 0,
                                      (yyvsp[(3) - (4)].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[(4) - (4)].charset) != nullptr,
                                      (yyvsp[(3) - (4)].type)->get_uint_geom_type(), nullptr, {}))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
    break;

  case 286:
/* Line 1792 of yacc.c  */
#line 3344 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 287:
/* Line 1792 of yacc.c  */
#line 3345 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 288:
/* Line 1792 of yacc.c  */
#line 3346 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 289:
/* Line 1792 of yacc.c  */
#line 3347 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 290:
/* Line 1792 of yacc.c  */
#line 3351 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 292:
/* Line 1792 of yacc.c  */
#line 3356 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 294:
/* Line 1792 of yacc.c  */
#line 3362 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 295:
/* Line 1792 of yacc.c  */
#line 3366 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 296:
/* Line 1792 of yacc.c  */
#line 3394 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[(2) - (5)].num));

            CONTEXTUALIZE((yyvsp[(3) - (5)].type));
            enum enum_field_types var_type= (yyvsp[(3) - (5)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(3) - (5)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(4) - (5)].charset)))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[(5) - (5)].sp_default).expr;

            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[(5) - (5)].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[(5) - (5)]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[(3) - (5)].type)->get_length(), (yyvsp[(3) - (5)].type)->get_dec(),
                                        (yyvsp[(3) - (5)].type)->get_type_flags(),
                                        NULL, NULL, &NULL_STR, 0,
                                        (yyvsp[(3) - (5)].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[(4) - (5)].charset) != nullptr,
                                        (yyvsp[(3) - (5)].type)->get_uint_geom_type(), nullptr, {}))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.maybe_null= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 297:
/* Line 1792 of yacc.c  */
#line 3488 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 298:
/* Line 1792 of yacc.c  */
#line 3505 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
    break;

  case 299:
/* Line 1792 of yacc.c  */
#line 3546 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 300:
/* Line 1792 of yacc.c  */
#line 3583 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[(4) - (4)]).raw.end);
          }
    break;

  case 301:
/* Line 1792 of yacc.c  */
#line 3592 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {             /*$7*/
            MAKE_CMD((yyvsp[(6) - (6)].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(6) - (6)]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 302:
/* Line 1792 of yacc.c  */
#line 3655 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 303:
/* Line 1792 of yacc.c  */
#line 3656 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 304:
/* Line 1792 of yacc.c  */
#line 3662 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 305:
/* Line 1792 of yacc.c  */
#line 3664 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 306:
/* Line 1792 of yacc.c  */
#line 3669 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 307:
/* Line 1792 of yacc.c  */
#line 3692 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 309:
/* Line 1792 of yacc.c  */
#line 3707 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 310:
/* Line 1792 of yacc.c  */
#line 3728 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 311:
/* Line 1792 of yacc.c  */
#line 3729 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 312:
/* Line 1792 of yacc.c  */
#line 3734 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 313:
/* Line 1792 of yacc.c  */
#line 3738 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 314:
/* Line 1792 of yacc.c  */
#line 3751 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 315:
/* Line 1792 of yacc.c  */
#line 3757 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 316:
/* Line 1792 of yacc.c  */
#line 3763 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 317:
/* Line 1792 of yacc.c  */
#line 3772 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 318:
/* Line 1792 of yacc.c  */
#line 3785 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 319:
/* Line 1792 of yacc.c  */
#line 3811 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 320:
/* Line 1792 of yacc.c  */
#line 3816 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 321:
/* Line 1792 of yacc.c  */
#line 3818 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 322:
/* Line 1792 of yacc.c  */
#line 3823 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
    break;

  case 323:
/* Line 1792 of yacc.c  */
#line 3825 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= (yyvsp[(2) - (2)].signal_item_list); }
    break;

  case 324:
/* Line 1792 of yacc.c  */
#line 3830 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[(1) - (3)].da_condition_item_name), (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 325:
/* Line 1792 of yacc.c  */
#line 3837 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= (yyvsp[(1) - (5)].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[(3) - (5)].da_condition_item_name), (yyvsp[(5) - (5)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 326:
/* Line 1792 of yacc.c  */
#line 3849 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 327:
/* Line 1792 of yacc.c  */
#line 3851 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(1) - (1)].item), &(yyvsp[(1) - (1)].item));

            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 328:
/* Line 1792 of yacc.c  */
#line 3871 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { ITEMIZE((yyvsp[(1) - (1)].item), &(yyval.item)); }
    break;

  case 329:
/* Line 1792 of yacc.c  */
#line 3877 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
    break;

  case 330:
/* Line 1792 of yacc.c  */
#line 3879 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
    break;

  case 331:
/* Line 1792 of yacc.c  */
#line 3881 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
    break;

  case 332:
/* Line 1792 of yacc.c  */
#line 3883 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
    break;

  case 333:
/* Line 1792 of yacc.c  */
#line 3885 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
    break;

  case 334:
/* Line 1792 of yacc.c  */
#line 3887 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
    break;

  case 335:
/* Line 1792 of yacc.c  */
#line 3889 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
    break;

  case 336:
/* Line 1792 of yacc.c  */
#line 3891 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
    break;

  case 337:
/* Line 1792 of yacc.c  */
#line 3893 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
    break;

  case 338:
/* Line 1792 of yacc.c  */
#line 3895 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
    break;

  case 339:
/* Line 1792 of yacc.c  */
#line 3897 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
    break;

  case 340:
/* Line 1792 of yacc.c  */
#line 3899 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
    break;

  case 341:
/* Line 1792 of yacc.c  */
#line 3904 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 342:
/* Line 1792 of yacc.c  */
#line 3918 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 343:
/* Line 1792 of yacc.c  */
#line 3934 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 344:
/* Line 1792 of yacc.c  */
#line 3936 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 345:
/* Line 1792 of yacc.c  */
#line 3938 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
    break;

  case 346:
/* Line 1792 of yacc.c  */
#line 3943 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 347:
/* Line 1792 of yacc.c  */
#line 3949 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 348:
/* Line 1792 of yacc.c  */
#line 3958 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 349:
/* Line 1792 of yacc.c  */
#line 3964 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 350:
/* Line 1792 of yacc.c  */
#line 3973 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 351:
/* Line 1792 of yacc.c  */
#line 3981 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[(1) - (1)].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[(1) - (1)]).raw.start,
                (yylsp[(1) - (1)]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 352:
/* Line 1792 of yacc.c  */
#line 4009 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[(2) - (2)].lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
    break;

  case 353:
/* Line 1792 of yacc.c  */
#line 4017 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 354:
/* Line 1792 of yacc.c  */
#line 4019 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 355:
/* Line 1792 of yacc.c  */
#line 4028 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 356:
/* Line 1792 of yacc.c  */
#line 4033 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 357:
/* Line 1792 of yacc.c  */
#line 4039 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 358:
/* Line 1792 of yacc.c  */
#line 4048 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 359:
/* Line 1792 of yacc.c  */
#line 4056 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 360:
/* Line 1792 of yacc.c  */
#line 4058 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 361:
/* Line 1792 of yacc.c  */
#line 4060 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 362:
/* Line 1792 of yacc.c  */
#line 4062 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 363:
/* Line 1792 of yacc.c  */
#line 4064 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 364:
/* Line 1792 of yacc.c  */
#line 4066 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 365:
/* Line 1792 of yacc.c  */
#line 4068 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 366:
/* Line 1792 of yacc.c  */
#line 4070 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 367:
/* Line 1792 of yacc.c  */
#line 4072 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 368:
/* Line 1792 of yacc.c  */
#line 4074 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 369:
/* Line 1792 of yacc.c  */
#line 4076 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 370:
/* Line 1792 of yacc.c  */
#line 4078 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 371:
/* Line 1792 of yacc.c  */
#line 4080 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 372:
/* Line 1792 of yacc.c  */
#line 4085 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 373:
/* Line 1792 of yacc.c  */
#line 4105 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 374:
/* Line 1792 of yacc.c  */
#line 4128 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
    break;

  case 375:
/* Line 1792 of yacc.c  */
#line 4133 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.sp_default).expr_start= (yylsp[(1) - (2)]).raw.end;
            (yyval.sp_default).expr= (yyvsp[(2) - (2)].item);
          }
    break;

  case 389:
/* Line 1792 of yacc.c  */
#line 4157 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 390:
/* Line 1792 of yacc.c  */
#line 4159 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 391:
/* Line 1792 of yacc.c  */
#line 4167 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
    break;

  case 392:
/* Line 1792 of yacc.c  */
#line 4176 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[(2) - (2)].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(2) - (2)]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 393:
/* Line 1792 of yacc.c  */
#line 4227 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 394:
/* Line 1792 of yacc.c  */
#line 4235 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;

            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 395:
/* Line 1792 of yacc.c  */
#line 4283 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 396:
/* Line 1792 of yacc.c  */
#line 4294 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 397:
/* Line 1792 of yacc.c  */
#line 4306 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 398:
/* Line 1792 of yacc.c  */
#line 4363 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 399:
/* Line 1792 of yacc.c  */
#line 4410 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 400:
/* Line 1792 of yacc.c  */
#line 4433 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 401:
/* Line 1792 of yacc.c  */
#line 4453 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 402:
/* Line 1792 of yacc.c  */
#line 4458 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 406:
/* Line 1792 of yacc.c  */
#line 4487 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 407:
/* Line 1792 of yacc.c  */
#line 4505 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 408:
/* Line 1792 of yacc.c  */
#line 4525 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 409:
/* Line 1792 of yacc.c  */
#line 4533 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(0) - (2)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(2) - (2)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 410:
/* Line 1792 of yacc.c  */
#line 4571 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 411:
/* Line 1792 of yacc.c  */
#line 4589 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 417:
/* Line 1792 of yacc.c  */
#line 4612 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
    break;

  case 418:
/* Line 1792 of yacc.c  */
#line 4622 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 419:
/* Line 1792 of yacc.c  */
#line 4667 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 420:
/* Line 1792 of yacc.c  */
#line 4674 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 421:
/* Line 1792 of yacc.c  */
#line 4681 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 426:
/* Line 1792 of yacc.c  */
#line 4698 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 427:
/* Line 1792 of yacc.c  */
#line 4706 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 428:
/* Line 1792 of yacc.c  */
#line 4748 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 429:
/* Line 1792 of yacc.c  */
#line 4756 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 430:
/* Line 1792 of yacc.c  */
#line 4764 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 431:
/* Line 1792 of yacc.c  */
#line 4802 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 432:
/* Line 1792 of yacc.c  */
#line 4810 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 434:
/* Line 1792 of yacc.c  */
#line 4828 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 435:
/* Line 1792 of yacc.c  */
#line 4846 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 436:
/* Line 1792 of yacc.c  */
#line 4865 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 437:
/* Line 1792 of yacc.c  */
#line 4866 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 438:
/* Line 1792 of yacc.c  */
#line 4871 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 439:
/* Line 1792 of yacc.c  */
#line 4887 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 440:
/* Line 1792 of yacc.c  */
#line 4904 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 441:
/* Line 1792 of yacc.c  */
#line 4915 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 442:
/* Line 1792 of yacc.c  */
#line 4923 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 443:
/* Line 1792 of yacc.c  */
#line 4938 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 444:
/* Line 1792 of yacc.c  */
#line 4972 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 445:
/* Line 1792 of yacc.c  */
#line 4985 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 446:
/* Line 1792 of yacc.c  */
#line 4993 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(1) - (3)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 447:
/* Line 1792 of yacc.c  */
#line 5034 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 448:
/* Line 1792 of yacc.c  */
#line 5051 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
    break;

  case 449:
/* Line 1792 of yacc.c  */
#line 5059 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                             /*$6*/
            ITEMIZE((yyvsp[(5) - (5)].item), &(yyvsp[(5) - (5)].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[(3) - (5)]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(5) - (5)]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 451:
/* Line 1792 of yacc.c  */
#line 5102 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 452:
/* Line 1792 of yacc.c  */
#line 5104 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 453:
/* Line 1792 of yacc.c  */
#line 5109 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 454:
/* Line 1792 of yacc.c  */
#line 5111 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 455:
/* Line 1792 of yacc.c  */
#line 5113 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 456:
/* Line 1792 of yacc.c  */
#line 5127 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= { nullptr, 0}; }
    break;

  case 457:
/* Line 1792 of yacc.c  */
#line 5129 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str)= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 458:
/* Line 1792 of yacc.c  */
#line 5135 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 460:
/* Line 1792 of yacc.c  */
#line 5141 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 461:
/* Line 1792 of yacc.c  */
#line 5147 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 471:
/* Line 1792 of yacc.c  */
#line 5167 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 473:
/* Line 1792 of yacc.c  */
#line 5173 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 474:
/* Line 1792 of yacc.c  */
#line 5179 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 480:
/* Line 1792 of yacc.c  */
#line 5195 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 482:
/* Line 1792 of yacc.c  */
#line 5201 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 483:
/* Line 1792 of yacc.c  */
#line 5207 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 491:
/* Line 1792 of yacc.c  */
#line 5225 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 493:
/* Line 1792 of yacc.c  */
#line 5231 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 494:
/* Line 1792 of yacc.c  */
#line 5237 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 498:
/* Line 1792 of yacc.c  */
#line 5251 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 499:
/* Line 1792 of yacc.c  */
#line 5255 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 500:
/* Line 1792 of yacc.c  */
#line 5260 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 501:
/* Line 1792 of yacc.c  */
#line 5267 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 502:
/* Line 1792 of yacc.c  */
#line 5274 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 503:
/* Line 1792 of yacc.c  */
#line 5281 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 504:
/* Line 1792 of yacc.c  */
#line 5288 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 505:
/* Line 1792 of yacc.c  */
#line 5295 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 506:
/* Line 1792 of yacc.c  */
#line 5302 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 507:
/* Line 1792 of yacc.c  */
#line 5309 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 508:
/* Line 1792 of yacc.c  */
#line 5316 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine((yyvsp[(4) - (4)].lex_str));
          }
    break;

  case 509:
/* Line 1792 of yacc.c  */
#line 5323 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 510:
/* Line 1792 of yacc.c  */
#line 5330 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
    break;

  case 511:
/* Line 1792 of yacc.c  */
#line 5334 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
    break;

  case 512:
/* Line 1792 of yacc.c  */
#line 5340 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulonglong_number);}
    break;

  case 513:
/* Line 1792 of yacc.c  */
#line 5342 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            size_t str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 514:
/* Line 1792 of yacc.c  */
#line 5418 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail)= (yyvsp[(2) - (2)].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[(1) - (2)].create_table_options);
          }
    break;

  case 516:
/* Line 1792 of yacc.c  */
#line 5427 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail)= (yyvsp[(2) - (2)].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[(1) - (2)].partition_clause);
          }
    break;

  case 518:
/* Line 1792 of yacc.c  */
#line 5436 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
    break;

  case 519:
/* Line 1792 of yacc.c  */
#line 5444 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[(1) - (2)].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[(2) - (2)].query_expression);
          }
    break;

  case 520:
/* Line 1792 of yacc.c  */
#line 5451 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[(1) - (1)].query_expression);
          }
    break;

  case 521:
/* Line 1792 of yacc.c  */
#line 5460 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.query_expression)= (yyvsp[(2) - (2)].query_expression); }
    break;

  case 523:
/* Line 1792 of yacc.c  */
#line 5477 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[(3) - (6)].part_type_def), (yyvsp[(4) - (6)].ulong_num), (yyvsp[(5) - (6)].opt_sub_part), (yylsp[(6) - (6)]), (yyvsp[(6) - (6)].part_def_list));
          }
    break;

  case 524:
/* Line 1792 of yacc.c  */
#line 5484 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[(1) - (6)].is_not_empty), (yyvsp[(3) - (6)].opt_key_algo), (yyvsp[(5) - (6)].name_list));
          }
    break;

  case 525:
/* Line 1792 of yacc.c  */
#line 5488 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[(1) - (5)].is_not_empty), (yylsp[(4) - (5)]), (yyvsp[(4) - (5)].item));
          }
    break;

  case 526:
/* Line 1792 of yacc.c  */
#line 5492 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[(3) - (4)]), (yyvsp[(3) - (4)].item));
          }
    break;

  case 527:
/* Line 1792 of yacc.c  */
#line 5496 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[(4) - (5)].name_list));
          }
    break;

  case 528:
/* Line 1792 of yacc.c  */
#line 5500 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[(3) - (4)]), (yyvsp[(3) - (4)].item));
          }
    break;

  case 529:
/* Line 1792 of yacc.c  */
#line 5504 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[(4) - (5)].name_list));
          }
    break;

  case 530:
/* Line 1792 of yacc.c  */
#line 5510 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 531:
/* Line 1792 of yacc.c  */
#line 5511 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 532:
/* Line 1792 of yacc.c  */
#line 5516 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
    break;

  case 533:
/* Line 1792 of yacc.c  */
#line 5518 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
    break;

  case 534:
/* Line 1792 of yacc.c  */
#line 5535 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 535:
/* Line 1792 of yacc.c  */
#line 5537 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 536:
/* Line 1792 of yacc.c  */
#line 5548 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_sub_part)= NULL; }
    break;

  case 537:
/* Line 1792 of yacc.c  */
#line 5551 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[(3) - (8)].is_not_empty), (yylsp[(6) - (8)]), (yyvsp[(6) - (8)].item), (yyvsp[(8) - (8)].ulong_num));
          }
    break;

  case 538:
/* Line 1792 of yacc.c  */
#line 5556 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].opt_key_algo), (yyvsp[(7) - (9)].name_list), (yyvsp[(9) - (9)].ulong_num));
          }
    break;

  case 539:
/* Line 1792 of yacc.c  */
#line 5563 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.name_list)= NULL; }
    break;

  case 541:
/* Line 1792 of yacc.c  */
#line 5570 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[(1) - (1)].lex_str).str))
              MYSQL_YYABORT;
          }
    break;

  case 542:
/* Line 1792 of yacc.c  */
#line 5576 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.name_list)= (yyvsp[(1) - (3)].name_list);
            if ((yyval.name_list)->push_back((yyvsp[(3) - (3)].lex_str).str))
              MYSQL_YYABORT;
          }
    break;

  case 543:
/* Line 1792 of yacc.c  */
#line 5585 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 544:
/* Line 1792 of yacc.c  */
#line 5587 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 545:
/* Line 1792 of yacc.c  */
#line 5598 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.part_def_list)= NULL; }
    break;

  case 546:
/* Line 1792 of yacc.c  */
#line 5599 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.part_def_list)= (yyvsp[(2) - (3)].part_def_list); }
    break;

  case 547:
/* Line 1792 of yacc.c  */
#line 5604 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[(1) - (1)].part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 548:
/* Line 1792 of yacc.c  */
#line 5610 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_def_list)= (yyvsp[(1) - (3)].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[(3) - (3)].part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 549:
/* Line 1792 of yacc.c  */
#line 5619 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[(0) - (5)]), (yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].opt_part_values).type, (yyvsp[(3) - (5)].opt_part_values).values, (yylsp[(3) - (5)]),
                                           (yyvsp[(4) - (5)].partition_option_list), (yyvsp[(5) - (5)].sub_part_list), (yylsp[(5) - (5)]));
          }
    break;

  case 550:
/* Line 1792 of yacc.c  */
#line 5627 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
    break;

  case 551:
/* Line 1792 of yacc.c  */
#line 5631 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[(4) - (4)].part_value_item_list_paren);
          }
    break;

  case 552:
/* Line 1792 of yacc.c  */
#line 5636 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[(3) - (3)].part_values);
          }
    break;

  case 553:
/* Line 1792 of yacc.c  */
#line 5643 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.part_value_item_list_paren)= NULL; }
    break;

  case 555:
/* Line 1792 of yacc.c  */
#line 5649 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].part_value_item_list_paren));
          }
    break;

  case 556:
/* Line 1792 of yacc.c  */
#line 5653 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[(3) - (3)]), (yyvsp[(2) - (3)].part_value_list));
          }
    break;

  case 557:
/* Line 1792 of yacc.c  */
#line 5660 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[(1) - (1)].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 558:
/* Line 1792 of yacc.c  */
#line 5667 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_list)= (yyvsp[(1) - (3)].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[(3) - (3)].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 559:
/* Line 1792 of yacc.c  */
#line 5676 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
    break;

  case 560:
/* Line 1792 of yacc.c  */
#line 5687 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[(3) - (4)].part_value_item_list), (yylsp[(4) - (4)]));
          }
    break;

  case 561:
/* Line 1792 of yacc.c  */
#line 5694 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[(1) - (1)].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 562:
/* Line 1792 of yacc.c  */
#line 5700 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.part_value_item_list)= (yyvsp[(1) - (3)].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[(3) - (3)].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 563:
/* Line 1792 of yacc.c  */
#line 5708 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[(1) - (1)])); }
    break;

  case 564:
/* Line 1792 of yacc.c  */
#line 5709 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].item)); }
    break;

  case 565:
/* Line 1792 of yacc.c  */
#line 5714 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.sub_part_list)= NULL; }
    break;

  case 566:
/* Line 1792 of yacc.c  */
#line 5715 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.sub_part_list)= (yyvsp[(2) - (3)].sub_part_list); }
    break;

  case 567:
/* Line 1792 of yacc.c  */
#line 5720 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[(1) - (1)].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 568:
/* Line 1792 of yacc.c  */
#line 5726 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.sub_part_list)= (yyvsp[(1) - (3)].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[(3) - (3)].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 569:
/* Line 1792 of yacc.c  */
#line 5735 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[(1) - (3)]), (yyvsp[(2) - (3)].lex_str).str, (yyvsp[(3) - (3)].partition_option_list));
          }
    break;

  case 570:
/* Line 1792 of yacc.c  */
#line 5741 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option_list)= NULL; }
    break;

  case 572:
/* Line 1792 of yacc.c  */
#line 5747 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.partition_option_list)= (yyvsp[(1) - (2)].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[(2) - (2)].partition_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 573:
/* Line 1792 of yacc.c  */
#line 5753 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[(1) - (1)].partition_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 574:
/* Line 1792 of yacc.c  */
#line 5762 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[(3) - (3)].lex_str).str); }
    break;

  case 575:
/* Line 1792 of yacc.c  */
#line 5764 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_engine((yyvsp[(4) - (4)].lex_str)); }
    break;

  case 576:
/* Line 1792 of yacc.c  */
#line 5766 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[(3) - (3)].ulong_num)); }
    break;

  case 577:
/* Line 1792 of yacc.c  */
#line 5768 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[(3) - (3)].ulonglong_number)); }
    break;

  case 578:
/* Line 1792 of yacc.c  */
#line 5770 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[(3) - (3)].ulonglong_number)); }
    break;

  case 579:
/* Line 1792 of yacc.c  */
#line 5772 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[(4) - (4)].lex_str).str); }
    break;

  case 580:
/* Line 1792 of yacc.c  */
#line 5774 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[(4) - (4)].lex_str).str); }
    break;

  case 581:
/* Line 1792 of yacc.c  */
#line 5776 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[(3) - (3)].lex_str).str); }
    break;

  case 582:
/* Line 1792 of yacc.c  */
#line 5784 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 583:
/* Line 1792 of yacc.c  */
#line 5785 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 584:
/* Line 1792 of yacc.c  */
#line 5789 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 585:
/* Line 1792 of yacc.c  */
#line 5790 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 586:
/* Line 1792 of yacc.c  */
#line 5795 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (set_default_collation(Lex->create_info, (yyvsp[(1) - (1)].charset)))
              MYSQL_YYABORT;
          }
    break;

  case 587:
/* Line 1792 of yacc.c  */
#line 5800 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (set_default_charset(Lex->create_info, (yyvsp[(1) - (1)].charset)))
              MYSQL_YYABORT;
          }
    break;

  case 588:
/* Line 1792 of yacc.c  */
#line 5807 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 589:
/* Line 1792 of yacc.c  */
#line 5808 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 590:
/* Line 1792 of yacc.c  */
#line 5813 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[(1) - (1)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 591:
/* Line 1792 of yacc.c  */
#line 5819 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[(1) - (2)].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[(2) - (2)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 592:
/* Line 1792 of yacc.c  */
#line 5828 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[(1) - (1)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 593:
/* Line 1792 of yacc.c  */
#line 5834 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_options)= (yyvsp[(1) - (3)].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[(3) - (3)].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 596:
/* Line 1792 of yacc.c  */
#line 5848 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 597:
/* Line 1792 of yacc.c  */
#line 5852 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 598:
/* Line 1792 of yacc.c  */
#line 5856 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 599:
/* Line 1792 of yacc.c  */
#line 5860 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 600:
/* Line 1792 of yacc.c  */
#line 5864 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 601:
/* Line 1792 of yacc.c  */
#line 5868 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 602:
/* Line 1792 of yacc.c  */
#line 5872 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[(3) - (3)].lex_str));
	  }
    break;

  case 603:
/* Line 1792 of yacc.c  */
#line 5876 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[(3) - (3)].lex_str));
	  }
    break;

  case 604:
/* Line 1792 of yacc.c  */
#line 5880 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[(3) - (3)].ulonglong_number));
          }
    break;

  case 605:
/* Line 1792 of yacc.c  */
#line 5884 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 606:
/* Line 1792 of yacc.c  */
#line 5888 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 607:
/* Line 1792 of yacc.c  */
#line 5892 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[(3) - (3)].ternary_option));
          }
    break;

  case 608:
/* Line 1792 of yacc.c  */
#line 5896 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 609:
/* Line 1792 of yacc.c  */
#line 5913 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
    break;

  case 610:
/* Line 1792 of yacc.c  */
#line 5917 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 611:
/* Line 1792 of yacc.c  */
#line 5921 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 612:
/* Line 1792 of yacc.c  */
#line 5925 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 613:
/* Line 1792 of yacc.c  */
#line 5929 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[(3) - (3)].row_type));
          }
    break;

  case 614:
/* Line 1792 of yacc.c  */
#line 5933 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[(4) - (5)].table_list));
          }
    break;

  case 615:
/* Line 1792 of yacc.c  */
#line 5937 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[(1) - (1)].charset));
          }
    break;

  case 616:
/* Line 1792 of yacc.c  */
#line 5941 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[(1) - (1)].charset));
          }
    break;

  case 617:
/* Line 1792 of yacc.c  */
#line 5945 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 618:
/* Line 1792 of yacc.c  */
#line 5949 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 619:
/* Line 1792 of yacc.c  */
#line 5953 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 620:
/* Line 1792 of yacc.c  */
#line 5957 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 621:
/* Line 1792 of yacc.c  */
#line 5961 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
    break;

  case 622:
/* Line 1792 of yacc.c  */
#line 5965 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
    break;

  case 623:
/* Line 1792 of yacc.c  */
#line 5969 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 624:
/* Line 1792 of yacc.c  */
#line 5973 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 625:
/* Line 1792 of yacc.c  */
#line 5980 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(1) - (1)].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
    break;

  case 626:
/* Line 1792 of yacc.c  */
#line 5993 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
    break;

  case 627:
/* Line 1792 of yacc.c  */
#line 5997 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset) = (yyvsp[(4) - (4)].charset); }
    break;

  case 628:
/* Line 1792 of yacc.c  */
#line 6001 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset) = (yyvsp[(4) - (4)].charset);}
    break;

  case 629:
/* Line 1792 of yacc.c  */
#line 6005 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 630:
/* Line 1792 of yacc.c  */
#line 6006 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 631:
/* Line 1792 of yacc.c  */
#line 6007 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 632:
/* Line 1792 of yacc.c  */
#line 6008 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 633:
/* Line 1792 of yacc.c  */
#line 6009 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 634:
/* Line 1792 of yacc.c  */
#line 6010 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 635:
/* Line 1792 of yacc.c  */
#line 6014 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 636:
/* Line 1792 of yacc.c  */
#line 6015 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 637:
/* Line 1792 of yacc.c  */
#line 6016 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 638:
/* Line 1792 of yacc.c  */
#line 6020 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 639:
/* Line 1792 of yacc.c  */
#line 6021 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 640:
/* Line 1792 of yacc.c  */
#line 6022 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 641:
/* Line 1792 of yacc.c  */
#line 6023 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 642:
/* Line 1792 of yacc.c  */
#line 6028 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[(1) - (1)].table_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 643:
/* Line 1792 of yacc.c  */
#line 6034 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_element_list)= (yyvsp[(1) - (3)].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[(3) - (3)].table_element)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 644:
/* Line 1792 of yacc.c  */
#line 6042 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_element)= (yyvsp[(1) - (1)].column_def); }
    break;

  case 645:
/* Line 1792 of yacc.c  */
#line 6043 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_element)= (yyvsp[(1) - (1)].table_constraint_def); }
    break;

  case 646:
/* Line 1792 of yacc.c  */
#line 6048 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[(1) - (3)].lex_str), (yyvsp[(2) - (3)].field_def), (yyvsp[(3) - (3)].check_constraint));
          }
    break;

  case 647:
/* Line 1792 of yacc.c  */
#line 6054 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.check_constraint)= NULL; }
    break;

  case 648:
/* Line 1792 of yacc.c  */
#line 6056 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              Currently we ignore the CHECK clause.

              Return expression for syntax validation purposes only:
            */
            (yyval.check_constraint)= (yyvsp[(1) - (1)].check_constraint);
          }
    break;

  case 649:
/* Line 1792 of yacc.c  */
#line 6065 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* Currently we ignore FK references here: */
            (yyval.check_constraint)= NULL;
          }
    break;

  case 650:
/* Line 1792 of yacc.c  */
#line 6074 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[(2) - (6)].index_name_and_type).name, (yyvsp[(2) - (6)].index_name_and_type).type, (yyvsp[(4) - (6)].index_column_list), (yyvsp[(6) - (6)].index_options));
          }
    break;

  case 651:
/* Line 1792 of yacc.c  */
#line 6080 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[(3) - (7)].lex_str), NULL,
                                                   (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 652:
/* Line 1792 of yacc.c  */
#line 6086 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[(3) - (7)].lex_str), NULL, (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 653:
/* Line 1792 of yacc.c  */
#line 6091 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[(3) - (7)].index_name_and_type).name.str != NULL ? (yyvsp[(3) - (7)].index_name_and_type).name : (yyvsp[(1) - (7)].lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[(2) - (7)].key_type), name, (yyvsp[(3) - (7)].index_name_and_type).type, (yyvsp[(5) - (7)].index_column_list), (yyvsp[(7) - (7)].index_options));
          }
    break;

  case 654:
/* Line 1792 of yacc.c  */
#line 6100 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[(1) - (8)].lex_str), (yyvsp[(4) - (8)].lex_str), (yyvsp[(6) - (8)].index_column_list), (yyvsp[(8) - (8)].fk_references).table_name,
                                                  (yyvsp[(8) - (8)].fk_references).reference_list,
                                                  (yyvsp[(8) - (8)].fk_references).fk_match_option,
                                                  (yyvsp[(8) - (8)].fk_references).fk_update_opt,
                                                  (yyvsp[(8) - (8)].fk_references).fk_delete_opt);
          }
    break;

  case 655:
/* Line 1792 of yacc.c  */
#line 6108 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_constraint_def)= (yyvsp[(2) - (2)].check_constraint);
          }
    break;

  case 656:
/* Line 1792 of yacc.c  */
#line 6115 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              Currently we ignore CHECK clauses in the query executor.

              Return expression for syntax validation purposes only:
            */
            (yyval.check_constraint)= NEW_PTN PT_check_constraint((yyvsp[(3) - (4)].item));
          }
    break;

  case 657:
/* Line 1792 of yacc.c  */
#line 6126 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= NULL_STR; }
    break;

  case 658:
/* Line 1792 of yacc.c  */
#line 6127 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 659:
/* Line 1792 of yacc.c  */
#line 6132 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[(1) - (2)].type), (yyvsp[(2) - (2)].col_attr_list));
          }
    break;

  case 660:
/* Line 1792 of yacc.c  */
#line 6138 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto *opt_attrs= (yyvsp[(9) - (9)].col_attr_list);
            if ((yyvsp[(2) - (9)].charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yyvsp[(2) - (9)].charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[(1) - (9)].type), (yyvsp[(6) - (9)].item), (yyvsp[(8) - (9)].virtual_or_stored), opt_attrs);
          }
    break;

  case 663:
/* Line 1792 of yacc.c  */
#line 6162 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
    break;

  case 664:
/* Line 1792 of yacc.c  */
#line 6163 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
    break;

  case 665:
/* Line 1792 of yacc.c  */
#line 6164 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
    break;

  case 666:
/* Line 1792 of yacc.c  */
#line 6169 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[(1) - (3)].int_type), (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 667:
/* Line 1792 of yacc.c  */
#line 6173 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[(1) - (3)].numeric_type), (yyvsp[(2) - (3)].precision).length, (yyvsp[(2) - (3)].precision).dec, (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 668:
/* Line 1792 of yacc.c  */
#line 6177 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[(1) - (3)].numeric_type), (yyvsp[(2) - (3)].precision).length, (yyvsp[(2) - (3)].precision).dec, (yyvsp[(3) - (3)].field_option));
          }
    break;

  case 669:
/* Line 1792 of yacc.c  */
#line 6181 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
    break;

  case 670:
/* Line 1792 of yacc.c  */
#line 6185 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 671:
/* Line 1792 of yacc.c  */
#line 6189 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
    break;

  case 672:
/* Line 1792 of yacc.c  */
#line 6193 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
    break;

  case 673:
/* Line 1792 of yacc.c  */
#line 6197 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 674:
/* Line 1792 of yacc.c  */
#line 6202 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 675:
/* Line 1792 of yacc.c  */
#line 6207 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(3) - (3)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (3)].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 676:
/* Line 1792 of yacc.c  */
#line 6216 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(2) - (2)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 677:
/* Line 1792 of yacc.c  */
#line 6225 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[(2) - (2)].c_str), &my_charset_bin);
          }
    break;

  case 678:
/* Line 1792 of yacc.c  */
#line 6229 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
    break;

  case 679:
/* Line 1792 of yacc.c  */
#line 6233 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 680:
/* Line 1792 of yacc.c  */
#line 6238 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            const CHARSET_INFO *cs= (yyvsp[(3) - (3)].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (3)].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 681:
/* Line 1792 of yacc.c  */
#line 6247 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[(2) - (2)].c_str), &my_charset_bin);
          }
    break;

  case 682:
/* Line 1792 of yacc.c  */
#line 6251 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (3)].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[(2) - (3)].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
    break;

  case 683:
/* Line 1792 of yacc.c  */
#line 6267 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
    break;

  case 684:
/* Line 1792 of yacc.c  */
#line 6271 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[(2) - (2)].c_str));
          }
    break;

  case 685:
/* Line 1792 of yacc.c  */
#line 6275 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 686:
/* Line 1792 of yacc.c  */
#line 6279 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[(2) - (2)].c_str));
          }
    break;

  case 687:
/* Line 1792 of yacc.c  */
#line 6283 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
    break;

  case 688:
/* Line 1792 of yacc.c  */
#line 6287 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[(2) - (2)].c_str));
          }
    break;

  case 690:
/* Line 1792 of yacc.c  */
#line 6292 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
    break;

  case 691:
/* Line 1792 of yacc.c  */
#line 6296 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
    break;

  case 692:
/* Line 1792 of yacc.c  */
#line 6300 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
    break;

  case 693:
/* Line 1792 of yacc.c  */
#line 6304 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 694:
/* Line 1792 of yacc.c  */
#line 6309 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 695:
/* Line 1792 of yacc.c  */
#line 6314 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[(2) - (3)].c_str), (yyvsp[(3) - (3)].charset_with_opt_binary).charset,
                                     (yyvsp[(3) - (3)].charset_with_opt_binary).force_binary);
          }
    break;

  case 696:
/* Line 1792 of yacc.c  */
#line 6319 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 697:
/* Line 1792 of yacc.c  */
#line 6324 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 698:
/* Line 1792 of yacc.c  */
#line 6329 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[(3) - (5)].string_list), (yyvsp[(5) - (5)].charset_with_opt_binary).charset, (yyvsp[(5) - (5)].charset_with_opt_binary).force_binary);
          }
    break;

  case 699:
/* Line 1792 of yacc.c  */
#line 6333 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[(3) - (5)].string_list), (yyvsp[(5) - (5)].charset_with_opt_binary).charset, (yyvsp[(5) - (5)].charset_with_opt_binary).force_binary);
          }
    break;

  case 700:
/* Line 1792 of yacc.c  */
#line 6337 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[(2) - (2)].charset_with_opt_binary).charset,
                                     (yyvsp[(2) - (2)].charset_with_opt_binary).force_binary);
          }
    break;

  case 701:
/* Line 1792 of yacc.c  */
#line 6342 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
    break;

  case 702:
/* Line 1792 of yacc.c  */
#line 6346 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
    break;

  case 703:
/* Line 1792 of yacc.c  */
#line 6353 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
    break;

  case 704:
/* Line 1792 of yacc.c  */
#line 6355 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
    break;

  case 705:
/* Line 1792 of yacc.c  */
#line 6357 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
    break;

  case 706:
/* Line 1792 of yacc.c  */
#line 6359 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
    break;

  case 707:
/* Line 1792 of yacc.c  */
#line 6361 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
    break;

  case 708:
/* Line 1792 of yacc.c  */
#line 6363 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
    break;

  case 709:
/* Line 1792 of yacc.c  */
#line 6365 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
    break;

  case 710:
/* Line 1792 of yacc.c  */
#line 6367 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
    break;

  case 711:
/* Line 1792 of yacc.c  */
#line 6371 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 712:
/* Line 1792 of yacc.c  */
#line 6372 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 713:
/* Line 1792 of yacc.c  */
#line 6376 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 714:
/* Line 1792 of yacc.c  */
#line 6377 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 715:
/* Line 1792 of yacc.c  */
#line 6381 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 716:
/* Line 1792 of yacc.c  */
#line 6382 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 717:
/* Line 1792 of yacc.c  */
#line 6383 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 718:
/* Line 1792 of yacc.c  */
#line 6384 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 719:
/* Line 1792 of yacc.c  */
#line 6385 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 720:
/* Line 1792 of yacc.c  */
#line 6389 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::INT; }
    break;

  case 721:
/* Line 1792 of yacc.c  */
#line 6390 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::TINYINT; }
    break;

  case 722:
/* Line 1792 of yacc.c  */
#line 6391 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::SMALLINT; }
    break;

  case 723:
/* Line 1792 of yacc.c  */
#line 6392 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::MEDIUMINT; }
    break;

  case 724:
/* Line 1792 of yacc.c  */
#line 6393 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.int_type)=Int_type::BIGINT; }
    break;

  case 725:
/* Line 1792 of yacc.c  */
#line 6398 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
    break;

  case 726:
/* Line 1792 of yacc.c  */
#line 6403 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
    break;

  case 729:
/* Line 1792 of yacc.c  */
#line 6412 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
    break;

  case 730:
/* Line 1792 of yacc.c  */
#line 6413 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 731:
/* Line 1792 of yacc.c  */
#line 6414 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 732:
/* Line 1792 of yacc.c  */
#line 6415 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
    break;

  case 733:
/* Line 1792 of yacc.c  */
#line 6420 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
    break;

  case 734:
/* Line 1792 of yacc.c  */
#line 6425 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(1) - (1)].c_str);
            (yyval.precision).dec= NULL;
          }
    break;

  case 736:
/* Line 1792 of yacc.c  */
#line 6434 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= (yyvsp[(2) - (5)].lex_str).str;
            (yyval.precision).dec= (yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 737:
/* Line 1792 of yacc.c  */
#line 6442 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 738:
/* Line 1792 of yacc.c  */
#line 6443 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 739:
/* Line 1792 of yacc.c  */
#line 6447 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 740:
/* Line 1792 of yacc.c  */
#line 6448 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 741:
/* Line 1792 of yacc.c  */
#line 6450 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 742:
/* Line 1792 of yacc.c  */
#line 6457 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::NONE; }
    break;

  case 744:
/* Line 1792 of yacc.c  */
#line 6463 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_option)= static_cast<Field_option>(static_cast<ulong>((yyvsp[(1) - (2)].field_option)) |
                                          static_cast<ulong>((yyvsp[(2) - (2)].field_option)));
          }
    break;

  case 746:
/* Line 1792 of yacc.c  */
#line 6471 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::NONE; }
    break;

  case 747:
/* Line 1792 of yacc.c  */
#line 6472 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::UNSIGNED; }
    break;

  case 748:
/* Line 1792 of yacc.c  */
#line 6473 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.field_option)= Field_option::ZEROFILL_UNSIGNED; }
    break;

  case 749:
/* Line 1792 of yacc.c  */
#line 6477 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 750:
/* Line 1792 of yacc.c  */
#line 6478 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 751:
/* Line 1792 of yacc.c  */
#line 6479 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 752:
/* Line 1792 of yacc.c  */
#line 6480 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 753:
/* Line 1792 of yacc.c  */
#line 6483 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; /* use default length */ }
    break;

  case 755:
/* Line 1792 of yacc.c  */
#line 6489 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
    break;

  case 757:
/* Line 1792 of yacc.c  */
#line 6497 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.col_attr_list)= NULL; }
    break;

  case 759:
/* Line 1792 of yacc.c  */
#line 6503 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr_list)= (yyvsp[(1) - (2)].col_attr_list);
            if ((yyval.col_attr_list)->push_back((yyvsp[(2) - (2)].col_attr)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 760:
/* Line 1792 of yacc.c  */
#line 6509 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[(1) - (1)].col_attr)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 761:
/* Line 1792 of yacc.c  */
#line 6519 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
    break;

  case 762:
/* Line 1792 of yacc.c  */
#line 6523 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
    break;

  case 763:
/* Line 1792 of yacc.c  */
#line 6527 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[(2) - (2)].item));
          }
    break;

  case 764:
/* Line 1792 of yacc.c  */
#line 6531 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[(3) - (3)].ulong_num)));
          }
    break;

  case 765:
/* Line 1792 of yacc.c  */
#line 6535 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
    break;

  case 766:
/* Line 1792 of yacc.c  */
#line 6539 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
    break;

  case 767:
/* Line 1792 of yacc.c  */
#line 6543 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
    break;

  case 768:
/* Line 1792 of yacc.c  */
#line 6547 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
    break;

  case 769:
/* Line 1792 of yacc.c  */
#line 6551 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
    break;

  case 770:
/* Line 1792 of yacc.c  */
#line 6555 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 771:
/* Line 1792 of yacc.c  */
#line 6559 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yyvsp[(2) - (2)].charset));
          }
    break;

  case 772:
/* Line 1792 of yacc.c  */
#line 6563 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[(2) - (2)].column_format));
          }
    break;

  case 773:
/* Line 1792 of yacc.c  */
#line 6567 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[(2) - (2)].storage_media));
          }
    break;

  case 774:
/* Line 1792 of yacc.c  */
#line 6571 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[(2) - (2)].ulonglong_number)));
          }
    break;

  case 775:
/* Line 1792 of yacc.c  */
#line 6582 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
    break;

  case 776:
/* Line 1792 of yacc.c  */
#line 6583 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
    break;

  case 777:
/* Line 1792 of yacc.c  */
#line 6584 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
    break;

  case 778:
/* Line 1792 of yacc.c  */
#line 6588 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_DEFAULT; }
    break;

  case 779:
/* Line 1792 of yacc.c  */
#line 6589 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_DISK; }
    break;

  case 780:
/* Line 1792 of yacc.c  */
#line 6590 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.storage_media)= HA_SM_MEMORY; }
    break;

  case 781:
/* Line 1792 of yacc.c  */
#line 6595 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 782:
/* Line 1792 of yacc.c  */
#line 6601 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 786:
/* Line 1792 of yacc.c  */
#line 6614 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (native_strcasecmp((yyvsp[(1) - (1)].lex_str).str, "utf8") == 0)
              push_warning(YYTHD, ER_DEPRECATED_UTF8_ALIAS);
          }
    break;

  case 787:
/* Line 1792 of yacc.c  */
#line 6623 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 788:
/* Line 1792 of yacc.c  */
#line 6627 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 789:
/* Line 1792 of yacc.c  */
#line 6628 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset) = (yyvsp[(2) - (2)].charset); }
    break;

  case 790:
/* Line 1792 of yacc.c  */
#line 6633 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 791:
/* Line 1792 of yacc.c  */
#line 6641 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 792:
/* Line 1792 of yacc.c  */
#line 6645 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 793:
/* Line 1792 of yacc.c  */
#line 6646 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 794:
/* Line 1792 of yacc.c  */
#line 6651 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 795:
/* Line 1792 of yacc.c  */
#line 6658 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset) = nullptr; }
    break;

  case 796:
/* Line 1792 of yacc.c  */
#line 6659 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset) = (yyvsp[(2) - (2)].charset); }
    break;

  case 797:
/* Line 1792 of yacc.c  */
#line 6663 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 798:
/* Line 1792 of yacc.c  */
#line 6664 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 799:
/* Line 1792 of yacc.c  */
#line 6669 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1; }
    break;

  case 800:
/* Line 1792 of yacc.c  */
#line 6670 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 801:
/* Line 1792 of yacc.c  */
#line 6671 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_latin1_bin; }
    break;

  case 802:
/* Line 1792 of yacc.c  */
#line 6676 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 803:
/* Line 1792 of yacc.c  */
#line 6684 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 804:
/* Line 1792 of yacc.c  */
#line 6689 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 805:
/* Line 1792 of yacc.c  */
#line 6697 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 806:
/* Line 1792 of yacc.c  */
#line 6702 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 807:
/* Line 1792 of yacc.c  */
#line 6707 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(1) - (1)].charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 808:
/* Line 1792 of yacc.c  */
#line 6712 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 809:
/* Line 1792 of yacc.c  */
#line 6717 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[(3) - (3)].is_not_empty) ? get_bin_collation((yyvsp[(2) - (3)].charset)) : (yyvsp[(2) - (3)].charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 810:
/* Line 1792 of yacc.c  */
#line 6724 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
    break;

  case 811:
/* Line 1792 of yacc.c  */
#line 6729 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[(3) - (3)].charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
    break;

  case 812:
/* Line 1792 of yacc.c  */
#line 6738 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 813:
/* Line 1792 of yacc.c  */
#line 6739 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 814:
/* Line 1792 of yacc.c  */
#line 6744 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
    break;

  case 815:
/* Line 1792 of yacc.c  */
#line 6752 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 818:
/* Line 1792 of yacc.c  */
#line 6766 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_references).table_name= (yyvsp[(2) - (5)].table);
            (yyval.fk_references).reference_list= (yyvsp[(3) - (5)].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[(4) - (5)].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[(5) - (5)].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[(5) - (5)].fk_options).fk_delete_opt;
          }
    break;

  case 819:
/* Line 1792 of yacc.c  */
#line 6776 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.reference_list)= NULL; }
    break;

  case 820:
/* Line 1792 of yacc.c  */
#line 6777 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.reference_list)= (yyvsp[(2) - (3)].reference_list); }
    break;

  case 821:
/* Line 1792 of yacc.c  */
#line 6782 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.reference_list)= (yyvsp[(1) - (3)].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[(3) - (3)].lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
    break;

  case 822:
/* Line 1792 of yacc.c  */
#line 6789 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[(1) - (1)].lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
    break;

  case 823:
/* Line 1792 of yacc.c  */
#line 6798 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
    break;

  case 824:
/* Line 1792 of yacc.c  */
#line 6799 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
    break;

  case 825:
/* Line 1792 of yacc.c  */
#line 6800 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
    break;

  case 826:
/* Line 1792 of yacc.c  */
#line 6801 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
    break;

  case 827:
/* Line 1792 of yacc.c  */
#line 6806 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 828:
/* Line 1792 of yacc.c  */
#line 6811 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
    break;

  case 829:
/* Line 1792 of yacc.c  */
#line 6816 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 830:
/* Line 1792 of yacc.c  */
#line 6822 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 831:
/* Line 1792 of yacc.c  */
#line 6828 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 832:
/* Line 1792 of yacc.c  */
#line 6835 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
    break;

  case 833:
/* Line 1792 of yacc.c  */
#line 6836 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
    break;

  case 834:
/* Line 1792 of yacc.c  */
#line 6837 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
    break;

  case 835:
/* Line 1792 of yacc.c  */
#line 6838 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
    break;

  case 836:
/* Line 1792 of yacc.c  */
#line 6839 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
    break;

  case 837:
/* Line 1792 of yacc.c  */
#line 6843 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
    break;

  case 838:
/* Line 1792 of yacc.c  */
#line 6844 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 839:
/* Line 1792 of yacc.c  */
#line 6848 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 840:
/* Line 1792 of yacc.c  */
#line 6849 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 841:
/* Line 1792 of yacc.c  */
#line 6853 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 843:
/* Line 1792 of yacc.c  */
#line 6858 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 844:
/* Line 1792 of yacc.c  */
#line 6859 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 845:
/* Line 1792 of yacc.c  */
#line 6860 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 846:
/* Line 1792 of yacc.c  */
#line 6864 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
    break;

  case 847:
/* Line 1792 of yacc.c  */
#line 6865 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
    break;

  case 848:
/* Line 1792 of yacc.c  */
#line 6869 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 850:
/* Line 1792 of yacc.c  */
#line 6875 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 851:
/* Line 1792 of yacc.c  */
#line 6881 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 853:
/* Line 1792 of yacc.c  */
#line 6891 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX_CSTRING plugin_name= {(yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
          }
    break;

  case 854:
/* Line 1792 of yacc.c  */
#line 6904 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 856:
/* Line 1792 of yacc.c  */
#line 6910 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 857:
/* Line 1792 of yacc.c  */
#line 6916 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 859:
/* Line 1792 of yacc.c  */
#line 6928 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_options).init(YYMEM_ROOT); }
    break;

  case 861:
/* Line 1792 of yacc.c  */
#line 6934 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[(1) - (1)].index_option)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 862:
/* Line 1792 of yacc.c  */
#line 6940 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].index_options).push_back((yyvsp[(2) - (2)].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[(1) - (2)].index_options);
          }
    break;

  case 863:
/* Line 1792 of yacc.c  */
#line 6948 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_option)= (yyvsp[(1) - (1)].index_option); }
    break;

  case 864:
/* Line 1792 of yacc.c  */
#line 6949 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_option)= (yyvsp[(1) - (1)].index_type); }
    break;

  case 865:
/* Line 1792 of yacc.c  */
#line 6954 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[(3) - (3)].ulong_num)); }
    break;

  case 866:
/* Line 1792 of yacc.c  */
#line 6956 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[(2) - (2)].lex_str)));
          }
    break;

  case 867:
/* Line 1792 of yacc.c  */
#line 6960 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[(1) - (1)].visibility));
          }
    break;

  case 868:
/* Line 1792 of yacc.c  */
#line 6983 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (1)].lex_str), NULL}; }
    break;

  case 869:
/* Line 1792 of yacc.c  */
#line 6984 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (3)].lex_str), NEW_PTN PT_index_type((yyvsp[(3) - (3)].key_alg))}; }
    break;

  case 870:
/* Line 1792 of yacc.c  */
#line 6985 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_name_and_type)= {(yyvsp[(1) - (3)].lex_str), NEW_PTN PT_index_type((yyvsp[(3) - (3)].key_alg))}; }
    break;

  case 871:
/* Line 1792 of yacc.c  */
#line 6989 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_type)= NEW_PTN PT_index_type((yyvsp[(2) - (2)].key_alg)); }
    break;

  case 872:
/* Line 1792 of yacc.c  */
#line 6990 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_type)= NEW_PTN PT_index_type((yyvsp[(2) - (2)].key_alg)); }
    break;

  case 873:
/* Line 1792 of yacc.c  */
#line 6994 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.visibility)= true; }
    break;

  case 874:
/* Line 1792 of yacc.c  */
#line 6995 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.visibility)= false; }
    break;

  case 875:
/* Line 1792 of yacc.c  */
#line 6999 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 876:
/* Line 1792 of yacc.c  */
#line 7000 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 877:
/* Line 1792 of yacc.c  */
#line 7001 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 878:
/* Line 1792 of yacc.c  */
#line 7006 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].index_column_list)->push_back((yyvsp[(3) - (3)].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[(1) - (3)].index_column_list);
          }
    break;

  case 879:
/* Line 1792 of yacc.c  */
#line 7012 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            // The order is ignored.
            (yyval.index_column_list)= new (*THR_MALLOC) List<Key_part_spec>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[(1) - (1)].key_part)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 880:
/* Line 1792 of yacc.c  */
#line 7022 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new (*THR_MALLOC) Key_part_spec(to_lex_cstring((yyvsp[(1) - (2)].lex_str)), 0, (enum_order) (yyvsp[(2) - (2)].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 881:
/* Line 1792 of yacc.c  */
#line 7028 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (5)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
            }
            (yyval.key_part)= new (*THR_MALLOC) Key_part_spec(to_lex_cstring((yyvsp[(1) - (5)].lex_str)),
                                                (uint) key_part_len,
                                                (enum_order) (yyvsp[(5) - (5)].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 882:
/* Line 1792 of yacc.c  */
#line 7043 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= NULL_STR; }
    break;

  case 884:
/* Line 1792 of yacc.c  */
#line 7048 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 885:
/* Line 1792 of yacc.c  */
#line 7049 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 886:
/* Line 1792 of yacc.c  */
#line 7054 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[(1) - (1)].string)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 887:
/* Line 1792 of yacc.c  */
#line 7060 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.string_list)->push_back((yyvsp[(3) - (3)].string)))
              MYSQL_YYABORT;
          }
    break;

  case 888:
/* Line 1792 of yacc.c  */
#line 7072 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[(3) - (4)].table),
                  (yyvsp[(4) - (4)].alter_list).actions,
                  (yyvsp[(4) - (4)].alter_list).flags.algo.get_or_default(),
                  (yyvsp[(4) - (4)].alter_list).flags.lock.get_or_default(),
                  (yyvsp[(4) - (4)].alter_list).flags.validation.get_or_default());
          }
    break;

  case 889:
/* Line 1792 of yacc.c  */
#line 7082 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[(3) - (4)].table),
                  (yyvsp[(4) - (4)].standalone_alter_table_action).action,
                  (yyvsp[(4) - (4)].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[(4) - (4)].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[(4) - (4)].standalone_alter_table_action).flags.validation.get_or_default());
          }
    break;

  case 890:
/* Line 1792 of yacc.c  */
#line 7095 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
    break;

  case 891:
/* Line 1792 of yacc.c  */
#line 7103 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 892:
/* Line 1792 of yacc.c  */
#line 7115 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 893:
/* Line 1792 of yacc.c  */
#line 7126 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 894:
/* Line 1792 of yacc.c  */
#line 7136 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 895:
/* Line 1792 of yacc.c  */
#line 7147 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 896:
/* Line 1792 of yacc.c  */
#line 7157 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
    break;

  case 897:
/* Line 1792 of yacc.c  */
#line 7168 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 898:
/* Line 1792 of yacc.c  */
#line 7175 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
    break;

  case 899:
/* Line 1792 of yacc.c  */
#line 7187 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 900:
/* Line 1792 of yacc.c  */
#line 7192 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 901:
/* Line 1792 of yacc.c  */
#line 7212 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 902:
/* Line 1792 of yacc.c  */
#line 7229 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(7) - (7)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(7) - (7)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[(4) - (7)].lex_str), pc, (yyvsp[(6) - (7)].lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 903:
/* Line 1792 of yacc.c  */
#line 7251 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(6) - (6)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(6) - (6)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[(3) - (6)].lex_str), (yyvsp[(5) - (6)].lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 904:
/* Line 1792 of yacc.c  */
#line 7270 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(6) - (6)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(6) - (6)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[(3) - (6)].lex_str), (yyvsp[(5) - (6)].lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 905:
/* Line 1792 of yacc.c  */
#line 7289 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[(3) - (6)].lex_str), (yyvsp[(6) - (6)].lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 906:
/* Line 1792 of yacc.c  */
#line 7300 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[(3) - (7)].lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
    break;

  case 908:
/* Line 1792 of yacc.c  */
#line 7313 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (5)].lex_user)->auth.str= (yyvsp[(5) - (5)].lex_str).str;
            (yyvsp[(2) - (5)].lex_user)->auth.length= (yyvsp[(5) - (5)].lex_str).length;
            (yyvsp[(2) - (5)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 909:
/* Line 1792 of yacc.c  */
#line 7320 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            List<LEX_USER> *users= new (*THR_MALLOC) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (*THR_MALLOC) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
    break;

  case 910:
/* Line 1792 of yacc.c  */
#line 7332 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            List<LEX_USER> *users= new (*THR_MALLOC) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (*THR_MALLOC) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
    break;

  case 911:
/* Line 1792 of yacc.c  */
#line 7344 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            List<LEX_USER> *users= new (*THR_MALLOC) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[(2) - (5)].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[(5) - (5)].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
    break;

  case 912:
/* Line 1792 of yacc.c  */
#line 7360 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[(4) - (8)].lex_str)),
                                                (yyvsp[(5) - (8)].resource_group_vcpu_list_type), (yyvsp[(6) - (8)].resource_group_priority_type), (yyvsp[(7) - (8)].resource_group_state_type), (yyvsp[(8) - (8)].resource_group_flag_type));
          }
    break;

  case 913:
/* Line 1792 of yacc.c  */
#line 7368 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
          }
    break;

  case 914:
/* Line 1792 of yacc.c  */
#line 7376 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 918:
/* Line 1792 of yacc.c  */
#line 7387 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
    break;

  case 919:
/* Line 1792 of yacc.c  */
#line 7393 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
    break;

  case 920:
/* Line 1792 of yacc.c  */
#line 7399 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
    break;

  case 921:
/* Line 1792 of yacc.c  */
#line 7407 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(4) - (5)].ulong_num) == 0 || (yyvsp[(4) - (5)].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[(4) - (5)].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[(4) - (5)].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 922:
/* Line 1792 of yacc.c  */
#line 7422 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
    break;

  case 923:
/* Line 1792 of yacc.c  */
#line 7430 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
    break;

  case 924:
/* Line 1792 of yacc.c  */
#line 7438 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[(3) - (3)].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
    break;

  case 925:
/* Line 1792 of yacc.c  */
#line 7445 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
    break;

  case 926:
/* Line 1792 of yacc.c  */
#line 7452 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[(4) - (5)].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
    break;

  case 927:
/* Line 1792 of yacc.c  */
#line 7459 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
    break;

  case 928:
/* Line 1792 of yacc.c  */
#line 7468 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 930:
/* Line 1792 of yacc.c  */
#line 7473 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 931:
/* Line 1792 of yacc.c  */
#line 7474 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 932:
/* Line 1792 of yacc.c  */
#line 7479 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 933:
/* Line 1792 of yacc.c  */
#line 7485 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 934:
/* Line 1792 of yacc.c  */
#line 7491 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 935:
/* Line 1792 of yacc.c  */
#line 7497 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 936:
/* Line 1792 of yacc.c  */
#line 7506 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
    break;

  case 937:
/* Line 1792 of yacc.c  */
#line 7519 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 938:
/* Line 1792 of yacc.c  */
#line 7520 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 939:
/* Line 1792 of yacc.c  */
#line 7521 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 940:
/* Line 1792 of yacc.c  */
#line 7522 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 941:
/* Line 1792 of yacc.c  */
#line 7526 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 942:
/* Line 1792 of yacc.c  */
#line 7528 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname);
            (yyval.num)= 1;
          }
    break;

  case 943:
/* Line 1792 of yacc.c  */
#line 7539 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 944:
/* Line 1792 of yacc.c  */
#line 7540 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 945:
/* Line 1792 of yacc.c  */
#line 7544 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 946:
/* Line 1792 of yacc.c  */
#line 7545 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 948:
/* Line 1792 of yacc.c  */
#line 7551 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_list)= (yyvsp[(1) - (2)].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[(2) - (2)].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 949:
/* Line 1792 of yacc.c  */
#line 7566 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[(1) - (1)].alter_table_standalone_action);
          }
    break;

  case 950:
/* Line 1792 of yacc.c  */
#line 7571 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[(1) - (3)].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[(3) - (3)].alter_table_standalone_action);
          }
    break;

  case 951:
/* Line 1792 of yacc.c  */
#line 7579 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[(1) - (1)].partition_clause));
          }
    break;

  case 952:
/* Line 1792 of yacc.c  */
#line 7583 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
    break;

  case 953:
/* Line 1792 of yacc.c  */
#line 7590 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
    break;

  case 954:
/* Line 1792 of yacc.c  */
#line 7595 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_list).flags= (yyvsp[(1) - (1)].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
    break;

  case 956:
/* Line 1792 of yacc.c  */
#line 7601 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_list).flags= (yyvsp[(1) - (3)].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[(3) - (3)].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[(3) - (3)].alter_list).actions;
          }
    break;

  case 957:
/* Line 1792 of yacc.c  */
#line 7610 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
    break;

  case 958:
/* Line 1792 of yacc.c  */
#line 7614 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
    break;

  case 959:
/* Line 1792 of yacc.c  */
#line 7625 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[(3) - (3)].num));
          }
    break;

  case 960:
/* Line 1792 of yacc.c  */
#line 7629 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].part_def_list));
          }
    break;

  case 961:
/* Line 1792 of yacc.c  */
#line 7633 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[(3) - (5)].num), (yyvsp[(5) - (5)].ulong_num));
          }
    break;

  case 962:
/* Line 1792 of yacc.c  */
#line 7637 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[(3) - (3)].string_list));
          }
    break;

  case 963:
/* Line 1792 of yacc.c  */
#line 7642 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].string_list));
          }
    break;

  case 964:
/* Line 1792 of yacc.c  */
#line 7647 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].string_list));
          }
    break;

  case 965:
/* Line 1792 of yacc.c  */
#line 7652 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].string_list));
          }
    break;

  case 966:
/* Line 1792 of yacc.c  */
#line 7656 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[(3) - (4)].string_list),
                                                       (yyvsp[(4) - (4)].mi_type).flags, (yyvsp[(4) - (4)].mi_type).sql_flags);
          }
    break;

  case 967:
/* Line 1792 of yacc.c  */
#line 7663 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[(3) - (5)].num), (yyvsp[(4) - (5)].string_list),
                                                        (yyvsp[(5) - (5)].mi_type).flags, (yyvsp[(5) - (5)].mi_type).sql_flags);
          }
    break;

  case 968:
/* Line 1792 of yacc.c  */
#line 7668 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].ulong_num));
          }
    break;

  case 969:
/* Line 1792 of yacc.c  */
#line 7672 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[(3) - (3)].string_list));
          }
    break;

  case 970:
/* Line 1792 of yacc.c  */
#line 7676 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[(3) - (3)].num));
          }
    break;

  case 971:
/* Line 1792 of yacc.c  */
#line 7681 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[(3) - (8)].num), *(yyvsp[(4) - (8)].string_list), (yyvsp[(7) - (8)].part_def_list));
          }
    break;

  case 972:
/* Line 1792 of yacc.c  */
#line 7686 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[(3) - (7)].lex_str), (yyvsp[(6) - (7)].table), (yyvsp[(7) - (7)].with_validation));
          }
    break;

  case 973:
/* Line 1792 of yacc.c  */
#line 7691 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[(3) - (4)].string_list));
          }
    break;

  case 974:
/* Line 1792 of yacc.c  */
#line 7696 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[(3) - (4)].string_list));
          }
    break;

  case 975:
/* Line 1792 of yacc.c  */
#line 7702 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
    break;

  case 977:
/* Line 1792 of yacc.c  */
#line 7708 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
    break;

  case 978:
/* Line 1792 of yacc.c  */
#line 7712 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
    break;

  case 979:
/* Line 1792 of yacc.c  */
#line 7718 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 981:
/* Line 1792 of yacc.c  */
#line 7728 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[(1) - (1)].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 982:
/* Line 1792 of yacc.c  */
#line 7735 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[(3) - (3)].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 983:
/* Line 1792 of yacc.c  */
#line 7740 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_list).flags.merge((yyvsp[(3) - (3)].algo_and_lock_and_validation));
          }
    break;

  case 984:
/* Line 1792 of yacc.c  */
#line 7744 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[(1) - (1)].space_separated_alter_table_opts);
          }
    break;

  case 985:
/* Line 1792 of yacc.c  */
#line 7749 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            for (auto *option : *(yyvsp[(3) - (3)].space_separated_alter_table_opts))
            {
              if ((yyvsp[(1) - (3)].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
    break;

  case 987:
/* Line 1792 of yacc.c  */
#line 7761 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[(1) - (3)].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[(3) - (3)].algo_and_lock_and_validation));
          }
    break;

  case 988:
/* Line 1792 of yacc.c  */
#line 7769 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[(3) - (6)].lex_str), (yyvsp[(4) - (6)].field_def), (yyvsp[(5) - (6)].check_constraint), (yyvsp[(6) - (6)].c_str));
          }
    break;

  case 989:
/* Line 1792 of yacc.c  */
#line 7773 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[(4) - (5)].table_element_list));
          }
    break;

  case 990:
/* Line 1792 of yacc.c  */
#line 7777 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[(2) - (2)].table_constraint_def));
          }
    break;

  case 991:
/* Line 1792 of yacc.c  */
#line 7781 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[(3) - (6)].lex_str), (yyvsp[(4) - (6)].lex_str), (yyvsp[(5) - (6)].field_def), (yyvsp[(6) - (6)].c_str));
          }
    break;

  case 992:
/* Line 1792 of yacc.c  */
#line 7785 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[(3) - (5)].lex_str), (yyvsp[(4) - (5)].field_def), (yyvsp[(5) - (5)].c_str));
          }
    break;

  case 993:
/* Line 1792 of yacc.c  */
#line 7789 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[(3) - (4)].lex_str).str);
          }
    break;

  case 994:
/* Line 1792 of yacc.c  */
#line 7794 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[(4) - (4)].lex_str).str);
          }
    break;

  case 995:
/* Line 1792 of yacc.c  */
#line 7798 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
    break;

  case 996:
/* Line 1792 of yacc.c  */
#line 7802 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 997:
/* Line 1792 of yacc.c  */
#line 7806 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
    break;

  case 998:
/* Line 1792 of yacc.c  */
#line 7810 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
    break;

  case 999:
/* Line 1792 of yacc.c  */
#line 7814 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[(3) - (6)].lex_str).str, (yyvsp[(6) - (6)].item));
          }
    break;

  case 1000:
/* Line 1792 of yacc.c  */
#line 7818 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[(3) - (5)].lex_str).str, NULL);
          }
    break;

  case 1001:
/* Line 1792 of yacc.c  */
#line 7822 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[(3) - (4)].lex_str).str, (yyvsp[(4) - (4)].visibility));
          }
    break;

  case 1002:
/* Line 1792 of yacc.c  */
#line 7826 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[(3) - (3)].table));
          }
    break;

  case 1003:
/* Line 1792 of yacc.c  */
#line 7830 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
          }
    break;

  case 1004:
/* Line 1792 of yacc.c  */
#line 7834 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
          }
    break;

  case 1005:
/* Line 1792 of yacc.c  */
#line 7838 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[(4) - (5)].charset), (yyvsp[(5) - (5)].charset));
          }
    break;

  case 1006:
/* Line 1792 of yacc.c  */
#line 7842 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
    break;

  case 1007:
/* Line 1792 of yacc.c  */
#line 7846 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1008:
/* Line 1792 of yacc.c  */
#line 7853 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[(1) - (1)].alter_table_algorithm));
          }
    break;

  case 1009:
/* Line 1792 of yacc.c  */
#line 7858 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[(1) - (1)].alter_table_lock));
          }
    break;

  case 1010:
/* Line 1792 of yacc.c  */
#line 7863 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[(1) - (1)].with_validation));
          }
    break;

  case 1011:
/* Line 1792 of yacc.c  */
#line 7870 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_index_lock_and_algorithm).init(); }
    break;

  case 1012:
/* Line 1792 of yacc.c  */
#line 7872 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[(1) - (1)].alter_table_lock));
          }
    break;

  case 1013:
/* Line 1792 of yacc.c  */
#line 7877 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[(1) - (1)].alter_table_algorithm));
          }
    break;

  case 1014:
/* Line 1792 of yacc.c  */
#line 7882 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[(1) - (2)].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[(2) - (2)].alter_table_algorithm));
          }
    break;

  case 1015:
/* Line 1792 of yacc.c  */
#line 7888 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[(1) - (2)].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[(2) - (2)].alter_table_lock));
          }
    break;

  case 1016:
/* Line 1792 of yacc.c  */
#line 7896 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.alter_table_algorithm)= (yyvsp[(3) - (3)].alter_table_algorithm); }
    break;

  case 1017:
/* Line 1792 of yacc.c  */
#line 7901 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
    break;

  case 1018:
/* Line 1792 of yacc.c  */
#line 7905 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (is_identifier((yyvsp[(1) - (1)].lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[(1) - (1)].lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1019:
/* Line 1792 of yacc.c  */
#line 7919 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.alter_table_lock)= (yyvsp[(3) - (3)].alter_table_lock); }
    break;

  case 1020:
/* Line 1792 of yacc.c  */
#line 7924 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
    break;

  case 1021:
/* Line 1792 of yacc.c  */
#line 7928 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (is_identifier((yyvsp[(1) - (1)].lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[(1) - (1)].lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[(1) - (1)].lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1024:
/* Line 1792 of yacc.c  */
#line 7949 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1025:
/* Line 1792 of yacc.c  */
#line 7950 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1026:
/* Line 1792 of yacc.c  */
#line 7954 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_DEFAULT; }
    break;

  case 1027:
/* Line 1792 of yacc.c  */
#line 7955 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_RESTRICT; }
    break;

  case 1028:
/* Line 1792 of yacc.c  */
#line 7956 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_restrict)= DROP_CASCADE; }
    break;

  case 1029:
/* Line 1792 of yacc.c  */
#line 7960 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= NULL; }
    break;

  case 1030:
/* Line 1792 of yacc.c  */
#line 7961 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1031:
/* Line 1792 of yacc.c  */
#line 7962 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.c_str)= first_keyword; }
    break;

  case 1032:
/* Line 1792 of yacc.c  */
#line 7966 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1033:
/* Line 1792 of yacc.c  */
#line 7967 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1034:
/* Line 1792 of yacc.c  */
#line 7968 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1035:
/* Line 1792 of yacc.c  */
#line 7969 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1036:
/* Line 1792 of yacc.c  */
#line 7974 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
    break;

  case 1037:
/* Line 1792 of yacc.c  */
#line 7979 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
    break;

  case 1038:
/* Line 1792 of yacc.c  */
#line 7986 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1039:
/* Line 1792 of yacc.c  */
#line 7988 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[(3) - (4)].num);
        }
    break;

  case 1040:
/* Line 1792 of yacc.c  */
#line 7998 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1041:
/* Line 1792 of yacc.c  */
#line 8013 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1043:
/* Line 1792 of yacc.c  */
#line 8034 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1044:
/* Line 1792 of yacc.c  */
#line 8050 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1045:
/* Line 1792 of yacc.c  */
#line 8054 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1046:
/* Line 1792 of yacc.c  */
#line 8061 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1047:
/* Line 1792 of yacc.c  */
#line 8065 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1048:
/* Line 1792 of yacc.c  */
#line 8072 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1049:
/* Line 1792 of yacc.c  */
#line 8076 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1050:
/* Line 1792 of yacc.c  */
#line 8080 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1052:
/* Line 1792 of yacc.c  */
#line 8091 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1053:
/* Line 1792 of yacc.c  */
#line 8095 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1054:
/* Line 1792 of yacc.c  */
#line 8101 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1055:
/* Line 1792 of yacc.c  */
#line 8105 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1056:
/* Line 1792 of yacc.c  */
#line 8111 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1057:
/* Line 1792 of yacc.c  */
#line 8115 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1058:
/* Line 1792 of yacc.c  */
#line 8121 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1059:
/* Line 1792 of yacc.c  */
#line 8125 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1060:
/* Line 1792 of yacc.c  */
#line 8132 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1061:
/* Line 1792 of yacc.c  */
#line 8136 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1062:
/* Line 1792 of yacc.c  */
#line 8143 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1063:
/* Line 1792 of yacc.c  */
#line 8147 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1064:
/* Line 1792 of yacc.c  */
#line 8154 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1065:
/* Line 1792 of yacc.c  */
#line 8158 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1066:
/* Line 1792 of yacc.c  */
#line 8165 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
    break;

  case 1067:
/* Line 1792 of yacc.c  */
#line 8170 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
    break;

  case 1070:
/* Line 1792 of yacc.c  */
#line 8197 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1071:
/* Line 1792 of yacc.c  */
#line 8202 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1072:
/* Line 1792 of yacc.c  */
#line 8207 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1073:
/* Line 1792 of yacc.c  */
#line 8214 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[(3) - (4)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 1074:
/* Line 1792 of yacc.c  */
#line 8227 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 1075:
/* Line 1792 of yacc.c  */
#line 8228 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= T_QUICK; }
    break;

  case 1076:
/* Line 1792 of yacc.c  */
#line 8229 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= T_EXTEND; }
    break;

  case 1077:
/* Line 1792 of yacc.c  */
#line 8235 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (5)].num), (yyvsp[(4) - (5)].table_list),
                                             (yyvsp[(5) - (5)].mi_type).flags, (yyvsp[(5) - (5)].mi_type).sql_flags);
          }
    break;

  case 1078:
/* Line 1792 of yacc.c  */
#line 8242 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1081:
/* Line 1792 of yacc.c  */
#line 8249 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.mi_type).flags= (yyvsp[(1) - (2)].mi_type).flags | (yyvsp[(2) - (2)].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[(1) - (2)].mi_type).sql_flags | (yyvsp[(2) - (2)].mi_type).sql_flags;
          }
    break;

  case 1082:
/* Line 1792 of yacc.c  */
#line 8256 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
    break;

  case 1083:
/* Line 1792 of yacc.c  */
#line 8257 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1084:
/* Line 1792 of yacc.c  */
#line 8258 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
    break;

  case 1085:
/* Line 1792 of yacc.c  */
#line 8264 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (5)].num), (yyvsp[(4) - (5)].table_list),
                                              (yyvsp[(5) - (5)].histogram).command, (yyvsp[(5) - (5)].histogram).num_buckets,
                                              (yyvsp[(5) - (5)].histogram).columns);
          }
    break;

  case 1086:
/* Line 1792 of yacc.c  */
#line 8272 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
    break;

  case 1087:
/* Line 1792 of yacc.c  */
#line 8274 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            int error;
            longlong num= my_strtoll10((yyvsp[(2) - (3)].lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
    break;

  case 1088:
/* Line 1792 of yacc.c  */
#line 8292 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
    break;

  case 1089:
/* Line 1792 of yacc.c  */
#line 8298 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[(4) - (5)].string_list);
            (yyval.histogram).num_buckets= (yyvsp[(5) - (5)].num);
          }
    break;

  case 1090:
/* Line 1792 of yacc.c  */
#line 8305 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[(4) - (4)].string_list);
            (yyval.histogram).num_buckets= 0;
          }
    break;

  case 1091:
/* Line 1792 of yacc.c  */
#line 8315 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1092:
/* Line 1792 of yacc.c  */
#line 8323 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[(3) - (4)].table_list),
                                            (yyvsp[(4) - (4)].mi_type).flags, (yyvsp[(4) - (4)].mi_type).sql_flags);
          }
    break;

  case 1093:
/* Line 1792 of yacc.c  */
#line 8330 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1096:
/* Line 1792 of yacc.c  */
#line 8337 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.mi_type).flags= (yyvsp[(1) - (2)].mi_type).flags | (yyvsp[(2) - (2)].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[(1) - (2)].mi_type).sql_flags | (yyvsp[(2) - (2)].mi_type).sql_flags;
          }
    break;

  case 1097:
/* Line 1792 of yacc.c  */
#line 8345 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
    break;

  case 1098:
/* Line 1792 of yacc.c  */
#line 8347 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
    break;

  case 1099:
/* Line 1792 of yacc.c  */
#line 8349 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
    break;

  case 1100:
/* Line 1792 of yacc.c  */
#line 8351 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
    break;

  case 1101:
/* Line 1792 of yacc.c  */
#line 8353 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
    break;

  case 1102:
/* Line 1792 of yacc.c  */
#line 8355 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
    break;

  case 1103:
/* Line 1792 of yacc.c  */
#line 8360 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[(2) - (4)].num), (yyvsp[(4) - (4)].table_list));
          }
    break;

  case 1104:
/* Line 1792 of yacc.c  */
#line 8366 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1105:
/* Line 1792 of yacc.c  */
#line 8367 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1106:
/* Line 1792 of yacc.c  */
#line 8368 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1107:
/* Line 1792 of yacc.c  */
#line 8373 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1108:
/* Line 1792 of yacc.c  */
#line 8377 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1109:
/* Line 1792 of yacc.c  */
#line 8379 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1110:
/* Line 1792 of yacc.c  */
#line 8386 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1111:
/* Line 1792 of yacc.c  */
#line 8391 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1114:
/* Line 1792 of yacc.c  */
#line 8404 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1115:
/* Line 1792 of yacc.c  */
#line 8417 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[(3) - (5)].keycache_list), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 1116:
/* Line 1792 of yacc.c  */
#line 8422 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[(3) - (7)].table), (yyvsp[(4) - (7)].adm_partition), (yyvsp[(5) - (7)].key_usage_list), (yyvsp[(7) - (7)].lex_str));
          }
    break;

  case 1117:
/* Line 1792 of yacc.c  */
#line 8430 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[(1) - (1)].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1118:
/* Line 1792 of yacc.c  */
#line 8436 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.keycache_list)= (yyvsp[(1) - (3)].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[(3) - (3)].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1119:
/* Line 1792 of yacc.c  */
#line 8445 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[(1) - (2)].table), (yyvsp[(2) - (2)].key_usage_list));
          }
    break;

  case 1120:
/* Line 1792 of yacc.c  */
#line 8451 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1121:
/* Line 1792 of yacc.c  */
#line 8452 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1122:
/* Line 1792 of yacc.c  */
#line 8458 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[(5) - (8)].table),(yyvsp[(6) - (8)].adm_partition), (yyvsp[(7) - (8)].key_usage_list), (yyvsp[(8) - (8)].is_not_empty));
          }
    break;

  case 1123:
/* Line 1792 of yacc.c  */
#line 8462 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[(5) - (5)].preload_list));
          }
    break;

  case 1124:
/* Line 1792 of yacc.c  */
#line 8469 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[(1) - (1)].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1125:
/* Line 1792 of yacc.c  */
#line 8475 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.preload_list)= (yyvsp[(1) - (3)].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[(3) - (3)].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1126:
/* Line 1792 of yacc.c  */
#line 8484 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].key_usage_list), (yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 1127:
/* Line 1792 of yacc.c  */
#line 8491 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[(3) - (4)].string_list));
          }
    break;

  case 1128:
/* Line 1792 of yacc.c  */
#line 8497 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1129:
/* Line 1792 of yacc.c  */
#line 8499 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(3) - (4)].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[(3) - (4)].key_usage_list);
          }
    break;

  case 1130:
/* Line 1792 of yacc.c  */
#line 8508 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1131:
/* Line 1792 of yacc.c  */
#line 8509 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1132:
/* Line 1792 of yacc.c  */
#line 8514 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 1133:
/* Line 1792 of yacc.c  */
#line 8518 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 1135:
/* Line 1792 of yacc.c  */
#line 8560 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= (yyvsp[(2) - (3)].top_level_node);
          }
    break;

  case 1136:
/* Line 1792 of yacc.c  */
#line 8564 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (2)].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[(2) - (2)]));

            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyvsp[(1) - (2)].query_expression), (yyvsp[(2) - (2)].into_destination));
          }
    break;

  case 1137:
/* Line 1792 of yacc.c  */
#line 8612 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (4)].query_expression_body), (yyvsp[(2) - (4)].order), (yyvsp[(3) - (4)].limit_clause), (yyvsp[(4) - (4)].locking_clause_list));
          }
    break;

  case 1138:
/* Line 1792 of yacc.c  */
#line 8620 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (5)].with_clause), (yyvsp[(2) - (5)].query_expression_body), (yyvsp[(3) - (5)].order), (yyvsp[(4) - (5)].limit_clause), (yyvsp[(5) - (5)].locking_clause_list));
          }
    break;

  case 1139:
/* Line 1792 of yacc.c  */
#line 8627 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto nested= NEW_PTN PT_nested_query_expression((yyvsp[(1) - (4)].query_expression));
            auto body= NEW_PTN PT_query_expression_body_primary(nested);
            (yyval.query_expression)= NEW_PTN PT_query_expression(body, (yyvsp[(2) - (4)].order), (yyvsp[(3) - (4)].limit_clause), (yyvsp[(4) - (4)].locking_clause_list));
          }
    break;

  case 1140:
/* Line 1792 of yacc.c  */
#line 8637 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto nested= NEW_PTN PT_nested_query_expression((yyvsp[(2) - (5)].query_expression));
            auto body= NEW_PTN PT_query_expression_body_primary(nested);
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (5)].with_clause), body, (yyvsp[(3) - (5)].order), (yyvsp[(4) - (5)].limit_clause), (yyvsp[(5) - (5)].locking_clause_list));
          }
    break;

  case 1141:
/* Line 1792 of yacc.c  */
#line 8645 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (3)].query_expression)->body(), NULL, (yyvsp[(2) - (3)].limit_clause), (yyvsp[(3) - (3)].locking_clause_list));
          }
    break;

  case 1142:
/* Line 1792 of yacc.c  */
#line 8654 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (4)].with_clause), (yyvsp[(2) - (4)].query_expression)->body(), NULL, (yyvsp[(3) - (4)].limit_clause), (yyvsp[(4) - (4)].locking_clause_list));
          }
    break;

  case 1143:
/* Line 1792 of yacc.c  */
#line 8662 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (3)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[(1) - (3)].with_clause), (yyvsp[(2) - (3)].query_expression)->body(), NULL, NULL, (yyvsp[(3) - (3)].locking_clause_list));
          }
    break;

  case 1144:
/* Line 1792 of yacc.c  */
#line 8671 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression_body)= NEW_PTN PT_query_expression_body_primary((yyvsp[(1) - (1)].query_primary));
          }
    break;

  case 1145:
/* Line 1792 of yacc.c  */
#line 8675 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_expression_body)= NEW_PTN PT_union(NEW_PTN PT_query_expression((yyvsp[(1) - (4)].query_expression_body)), (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].query_primary));
          }
    break;

  case 1146:
/* Line 1792 of yacc.c  */
#line 8679 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            (yyvsp[(1) - (4)].query_expression)->set_parentheses();

            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[(1) - (4)].query_expression), (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].query_primary));
          }
    break;

  case 1147:
/* Line 1792 of yacc.c  */
#line 8688 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(4) - (4)].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[(4) - (4)]));

            auto lhs_qe= NEW_PTN PT_query_expression((yyvsp[(1) - (4)].query_expression_body));
            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[(4) - (4)].query_expression));

            (yyval.query_expression_body)= NEW_PTN PT_union(lhs_qe, (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), nested_qe);
          }
    break;

  case 1148:
/* Line 1792 of yacc.c  */
#line 8702 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (4)].query_expression) == NULL || (yyvsp[(4) - (4)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(4) - (4)].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[(4) - (4)]));

            (yyvsp[(1) - (4)].query_expression)->set_parentheses();

            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[(4) - (4)].query_expression));
            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[(1) - (4)].query_expression), (yylsp[(1) - (4)]), (yyvsp[(3) - (4)].num), nested_qe);
          }
    break;

  case 1149:
/* Line 1792 of yacc.c  */
#line 8719 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.query_expression)= (yyvsp[(2) - (3)].query_expression); }
    break;

  case 1150:
/* Line 1792 of yacc.c  */
#line 8721 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              We don't call set_parentheses() on a query expression here. It
              makes no difference to the contextualization phase whether a
              query expression was within parentheses unless it is used in
              conjunction with UNION. Therefore set_parentheses() is called
              only in the rules producing UNION syntax.

              The need for set_parentheses() is purely to support legacy parse
              rules, and we are gradually moving away from them and using the
              query_expression_body to define UNION syntax. When this move is
              complete, we will not need set_parentheses() any more, and the
              contextualize() phase can be greatly simplified.
            */
            (yyval.query_expression)= (yyvsp[(2) - (3)].query_expression);
          }
    break;

  case 1151:
/* Line 1792 of yacc.c  */
#line 8741 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[(1) - (1)].query_primary);
          }
    break;

  case 1152:
/* Line 1792 of yacc.c  */
#line 8757 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[(1) - (9)].optimizer_hints),  // SELECT_SYM
                                      (yyvsp[(2) - (9)].select_options),  // select_options
                                      (yyvsp[(3) - (9)].item_list2),  // select_item_list
                                      (yyvsp[(4) - (9)].into_destination),  // into_clause
                                      (yyvsp[(5) - (9)].table_reference_list),  // from
                                      (yyvsp[(6) - (9)].item),  // where
                                      (yyvsp[(7) - (9)].group),  // group
                                      (yyvsp[(8) - (9)].item),  // having
                                      (yyvsp[(9) - (9)].windows)); // windows
          }
    break;

  case 1153:
/* Line 1792 of yacc.c  */
#line 8777 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[(1) - (8)].optimizer_hints),  // SELECT_SYM
                                      (yyvsp[(2) - (8)].select_options),  // select_options
                                      (yyvsp[(3) - (8)].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[(4) - (8)].table_reference_list),  // from
                                      (yyvsp[(5) - (8)].item),  // where
                                      (yyvsp[(6) - (8)].group),  // group
                                      (yyvsp[(7) - (8)].item),  // having
                                      (yyvsp[(8) - (8)].windows)); // windows
          }
    break;

  case 1154:
/* Line 1792 of yacc.c  */
#line 8792 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
    break;

  case 1156:
/* Line 1792 of yacc.c  */
#line 8797 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (2)].table_reference_list); }
    break;

  case 1157:
/* Line 1792 of yacc.c  */
#line 8801 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
    break;

  case 1159:
/* Line 1792 of yacc.c  */
#line 8807 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[(1) - (1)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1160:
/* Line 1792 of yacc.c  */
#line 8813 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= (yyvsp[(1) - (3)].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[(3) - (3)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1161:
/* Line 1792 of yacc.c  */
#line 8822 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
          }
    break;

  case 1163:
/* Line 1792 of yacc.c  */
#line 8830 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.select_options).merge((yyvsp[(1) - (2)].select_options), (yyvsp[(2) - (2)].select_options)))
              MYSQL_YYABORT;
          }
    break;

  case 1165:
/* Line 1792 of yacc.c  */
#line 8839 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= (yyvsp[(1) - (1)].ulonglong_number);
          }
    break;

  case 1166:
/* Line 1792 of yacc.c  */
#line 8843 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
    break;

  case 1167:
/* Line 1792 of yacc.c  */
#line 8851 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.locking_clause_list)= NULL; }
    break;

  case 1169:
/* Line 1792 of yacc.c  */
#line 8857 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause_list)= (yyvsp[(1) - (2)].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[(2) - (2)].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1170:
/* Line 1792 of yacc.c  */
#line 8863 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[(1) - (1)].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1171:
/* Line 1792 of yacc.c  */
#line 8872 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[(2) - (3)].lock_strength), (yyvsp[(3) - (3)].locked_row_action));
          }
    break;

  case 1172:
/* Line 1792 of yacc.c  */
#line 8876 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[(2) - (4)].lock_strength), (yyvsp[(3) - (4)].table_ident_list), (yyvsp[(4) - (4)].locked_row_action));
          }
    break;

  case 1173:
/* Line 1792 of yacc.c  */
#line 8880 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
    break;

  case 1174:
/* Line 1792 of yacc.c  */
#line 8886 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
    break;

  case 1175:
/* Line 1792 of yacc.c  */
#line 8887 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_strength)= Lock_strength::SHARE; }
    break;

  case 1176:
/* Line 1792 of yacc.c  */
#line 8891 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_ident_list)= (yyvsp[(2) - (2)].table_ident_list); }
    break;

  case 1177:
/* Line 1792 of yacc.c  */
#line 8895 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
    break;

  case 1179:
/* Line 1792 of yacc.c  */
#line 8900 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
    break;

  case 1180:
/* Line 1792 of yacc.c  */
#line 8901 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
    break;

  case 1181:
/* Line 1792 of yacc.c  */
#line 8906 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1182:
/* Line 1792 of yacc.c  */
#line 8912 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1183:
/* Line 1792 of yacc.c  */
#line 8918 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
    break;

  case 1184:
/* Line 1792 of yacc.c  */
#line 8927 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1185:
/* Line 1792 of yacc.c  */
#line 8929 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[(1) - (2)].item), (yylsp[(1) - (2)]).cpp, (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1186:
/* Line 1792 of yacc.c  */
#line 8936 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1187:
/* Line 1792 of yacc.c  */
#line 8937 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1188:
/* Line 1792 of yacc.c  */
#line 8938 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1189:
/* Line 1792 of yacc.c  */
#line 8939 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1190:
/* Line 1792 of yacc.c  */
#line 8940 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1191:
/* Line 1792 of yacc.c  */
#line 8944 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1192:
/* Line 1792 of yacc.c  */
#line 8945 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1193:
/* Line 1792 of yacc.c  */
#line 8951 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1194:
/* Line 1792 of yacc.c  */
#line 8957 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1195:
/* Line 1792 of yacc.c  */
#line 8962 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1196:
/* Line 1792 of yacc.c  */
#line 8968 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1197:
/* Line 1792 of yacc.c  */
#line 8972 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_istrue((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1198:
/* Line 1792 of yacc.c  */
#line 8976 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnottrue((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1199:
/* Line 1792 of yacc.c  */
#line 8980 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isfalse((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1200:
/* Line 1792 of yacc.c  */
#line 8984 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotfalse((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1201:
/* Line 1792 of yacc.c  */
#line 8988 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1202:
/* Line 1792 of yacc.c  */
#line 8992 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1204:
/* Line 1792 of yacc.c  */
#line 9000 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[(1) - (3)].item));
          }
    break;

  case 1205:
/* Line 1792 of yacc.c  */
#line 9004 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[(1) - (4)].item));
          }
    break;

  case 1206:
/* Line 1792 of yacc.c  */
#line 9008 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(2) - (3)].boolfunc2creator), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1207:
/* Line 1792 of yacc.c  */
#line 9012 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (4)].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[(2) - (4)]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(2) - (4)].boolfunc2creator), (yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].subquery));
          }
    break;

  case 1209:
/* Line 1792 of yacc.c  */
#line 9029 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].subquery));
          }
    break;

  case 1210:
/* Line 1792 of yacc.c  */
#line 9033 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(4) - (4)].subquery));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1211:
/* Line 1792 of yacc.c  */
#line 9038 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
          }
    break;

  case 1212:
/* Line 1792 of yacc.c  */
#line 9042 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].item_list2) == NULL || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(4) - (7)].item)) || (yyvsp[(6) - (7)].item_list2)->push_front((yyvsp[(1) - (7)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(6) - (7)].item_list2), false);
          }
    break;

  case 1213:
/* Line 1792 of yacc.c  */
#line 9049 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
          }
    break;

  case 1214:
/* Line 1792 of yacc.c  */
#line 9053 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(7) - (8)].item_list2) == NULL || (yyvsp[(7) - (8)].item_list2)->push_front((yyvsp[(5) - (8)].item)) || (yyvsp[(7) - (8)].item_list2)->value.push_front((yyvsp[(1) - (8)].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[(7) - (8)].item_list2), true);
          }
    break;

  case 1215:
/* Line 1792 of yacc.c  */
#line 9060 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].item), false);
          }
    break;

  case 1216:
/* Line 1792 of yacc.c  */
#line 9064 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[(1) - (6)].item), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].item), true);
          }
    break;

  case 1217:
/* Line 1792 of yacc.c  */
#line 9068 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(1) - (4)].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
    break;

  case 1218:
/* Line 1792 of yacc.c  */
#line 9076 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (4)].item), (yyvsp[(3) - (4)].item), (yyvsp[(4) - (4)].item));
          }
    break;

  case 1219:
/* Line 1792 of yacc.c  */
#line 9080 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Item *item= NEW_PTN Item_func_like((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_not((yyloc), item);
          }
    break;

  case 1220:
/* Line 1792 of yacc.c  */
#line 9087 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[(1) - (3)].item));
            args->push_back((yyvsp[(3) - (3)].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[(1) - (3)]), args);
          }
    break;

  case 1221:
/* Line 1792 of yacc.c  */
#line 9095 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[(1) - (4)].item));
            args->push_back((yyvsp[(4) - (4)].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
    break;

  case 1223:
/* Line 1792 of yacc.c  */
#line 9107 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1224:
/* Line 1792 of yacc.c  */
#line 9111 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1225:
/* Line 1792 of yacc.c  */
#line 9115 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1226:
/* Line 1792 of yacc.c  */
#line 9119 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1227:
/* Line 1792 of yacc.c  */
#line 9123 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1228:
/* Line 1792 of yacc.c  */
#line 9127 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1229:
/* Line 1792 of yacc.c  */
#line 9131 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 0);
          }
    break;

  case 1230:
/* Line 1792 of yacc.c  */
#line 9135 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].item), (yyvsp[(5) - (5)].interval), 1);
          }
    break;

  case 1231:
/* Line 1792 of yacc.c  */
#line 9139 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1232:
/* Line 1792 of yacc.c  */
#line 9143 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1233:
/* Line 1792 of yacc.c  */
#line 9147 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1234:
/* Line 1792 of yacc.c  */
#line 9151 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
          }
    break;

  case 1235:
/* Line 1792 of yacc.c  */
#line 9155 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1236:
/* Line 1792 of yacc.c  */
#line 9159 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1246:
/* Line 1792 of yacc.c  */
#line 9186 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1247:
/* Line 1792 of yacc.c  */
#line 9187 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
    break;

  case 1248:
/* Line 1792 of yacc.c  */
#line 9188 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1249:
/* Line 1792 of yacc.c  */
#line 9189 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1250:
/* Line 1792 of yacc.c  */
#line 9190 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1251:
/* Line 1792 of yacc.c  */
#line 9191 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1252:
/* Line 1792 of yacc.c  */
#line 9192 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1253:
/* Line 1792 of yacc.c  */
#line 9196 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1254:
/* Line 1792 of yacc.c  */
#line 9197 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1260:
/* Line 1792 of yacc.c  */
#line 9207 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1262:
/* Line 1792 of yacc.c  */
#line 9211 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].param_marker); }
    break;

  case 1266:
/* Line 1792 of yacc.c  */
#line 9216 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1267:
/* Line 1792 of yacc.c  */
#line 9220 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
    break;

  case 1268:
/* Line 1792 of yacc.c  */
#line 9224 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1269:
/* Line 1792 of yacc.c  */
#line 9228 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1270:
/* Line 1792 of yacc.c  */
#line 9232 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1271:
/* Line 1792 of yacc.c  */
#line 9236 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[(1) - (1)].subquery));
          }
    break;

  case 1272:
/* Line 1792 of yacc.c  */
#line 9239 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1273:
/* Line 1792 of yacc.c  */
#line 9241 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item_list2)->value);
          }
    break;

  case 1274:
/* Line 1792 of yacc.c  */
#line 9245 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item_list2)->value);
          }
    break;

  case 1275:
/* Line 1792 of yacc.c  */
#line 9249 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[(2) - (2)].subquery));
          }
    break;

  case 1276:
/* Line 1792 of yacc.c  */
#line 9253 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[(2) - (4)].lex_str), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1277:
/* Line 1792 of yacc.c  */
#line 9257 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[(2) - (7)].item_list2), (yyvsp[(5) - (7)].item), (yyvsp[(6) - (7)].num));
          }
    break;

  case 1278:
/* Line 1792 of yacc.c  */
#line 9261 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(2) - (2)]), (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
    break;

  case 1279:
/* Line 1792 of yacc.c  */
#line 9265 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1280:
/* Line 1792 of yacc.c  */
#line 9269 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
          }
    break;

  case 1281:
/* Line 1792 of yacc.c  */
#line 9273 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[(3) - (6)]), (yyvsp[(3) - (6)].item), &(yyvsp[(5) - (6)].cast_type));
          }
    break;

  case 1282:
/* Line 1792 of yacc.c  */
#line 9277 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
          }
    break;

  case 1283:
/* Line 1792 of yacc.c  */
#line 9281 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1284:
/* Line 1792 of yacc.c  */
#line 9285 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1285:
/* Line 1792 of yacc.c  */
#line 9290 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(5) - (5)].item), (yyvsp[(2) - (5)].item), (yyvsp[(3) - (5)].interval), 0);
          }
    break;

  case 1286:
/* Line 1792 of yacc.c  */
#line 9294 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
          }
    break;

  case 1287:
/* Line 1792 of yacc.c  */
#line 9301 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[(1) - (3)].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
    break;

  case 1288:
/* Line 1792 of yacc.c  */
#line 9318 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1289:
/* Line 1792 of yacc.c  */
#line 9322 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[(3) - (6)].item_list2), (yyvsp[(5) - (6)].charset));
          }
    break;

  case 1290:
/* Line 1792 of yacc.c  */
#line 9326 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
    break;

  case 1291:
/* Line 1792 of yacc.c  */
#line 9330 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1292:
/* Line 1792 of yacc.c  */
#line 9334 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1293:
/* Line 1792 of yacc.c  */
#line 9338 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1294:
/* Line 1792 of yacc.c  */
#line 9342 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].item), (yyvsp[(7) - (10)].item), (yyvsp[(9) - (10)].item));
          }
    break;

  case 1295:
/* Line 1792 of yacc.c  */
#line 9346 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1296:
/* Line 1792 of yacc.c  */
#line 9350 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item_list2));
          }
    break;

  case 1297:
/* Line 1792 of yacc.c  */
#line 9354 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1298:
/* Line 1792 of yacc.c  */
#line 9358 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1299:
/* Line 1792 of yacc.c  */
#line 9362 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1300:
/* Line 1792 of yacc.c  */
#line 9366 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1301:
/* Line 1792 of yacc.c  */
#line 9370 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1302:
/* Line 1792 of yacc.c  */
#line 9374 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_time_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1303:
/* Line 1792 of yacc.c  */
#line 9378 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_datetime_typecast((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1304:
/* Line 1792 of yacc.c  */
#line 9382 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
          }
    break;

  case 1305:
/* Line 1792 of yacc.c  */
#line 9386 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(3) - (4)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1306:
/* Line 1792 of yacc.c  */
#line 9391 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1307:
/* Line 1792 of yacc.c  */
#line 9396 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1308:
/* Line 1792 of yacc.c  */
#line 9401 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(6) - (7)].item), (yyvsp[(4) - (7)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1309:
/* Line 1792 of yacc.c  */
#line 9405 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_LEADING);
          }
    break;

  case 1310:
/* Line 1792 of yacc.c  */
#line 9409 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_TRAILING);
          }
    break;

  case 1311:
/* Line 1792 of yacc.c  */
#line 9413 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), Item_func_trim::TRIM_BOTH);
          }
    break;

  case 1312:
/* Line 1792 of yacc.c  */
#line 9417 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[(5) - (6)].item), (yyvsp[(3) - (6)].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
    break;

  case 1313:
/* Line 1792 of yacc.c  */
#line 9422 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
    break;

  case 1314:
/* Line 1792 of yacc.c  */
#line 9426 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1315:
/* Line 1792 of yacc.c  */
#line 9445 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 0);
          }
    break;

  case 1316:
/* Line 1792 of yacc.c  */
#line 9449 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1317:
/* Line 1792 of yacc.c  */
#line 9453 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
    break;

  case 1318:
/* Line 1792 of yacc.c  */
#line 9457 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1319:
/* Line 1792 of yacc.c  */
#line 9462 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
          }
    break;

  case 1320:
/* Line 1792 of yacc.c  */
#line 9467 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1321:
/* Line 1792 of yacc.c  */
#line 9471 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1322:
/* Line 1792 of yacc.c  */
#line 9475 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1323:
/* Line 1792 of yacc.c  */
#line 9479 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 1324:
/* Line 1792 of yacc.c  */
#line 9484 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
          }
    break;

  case 1325:
/* Line 1792 of yacc.c  */
#line 9488 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), INTERVAL_DAY, 1);
          }
    break;

  case 1326:
/* Line 1792 of yacc.c  */
#line 9492 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
          }
    break;

  case 1327:
/* Line 1792 of yacc.c  */
#line 9496 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1328:
/* Line 1792 of yacc.c  */
#line 9500 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1329:
/* Line 1792 of yacc.c  */
#line 9504 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1330:
/* Line 1792 of yacc.c  */
#line 9508 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1331:
/* Line 1792 of yacc.c  */
#line 9512 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1332:
/* Line 1792 of yacc.c  */
#line 9517 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[(7) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(3) - (8)].interval_time_st), 0);
          }
    break;

  case 1333:
/* Line 1792 of yacc.c  */
#line 9521 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
          }
    break;

  case 1334:
/* Line 1792 of yacc.c  */
#line 9525 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
    break;

  case 1335:
/* Line 1792 of yacc.c  */
#line 9529 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1336:
/* Line 1792 of yacc.c  */
#line 9533 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[(2) - (2)].ulong_num)));
          }
    break;

  case 1337:
/* Line 1792 of yacc.c  */
#line 9545 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1338:
/* Line 1792 of yacc.c  */
#line 9549 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1339:
/* Line 1792 of yacc.c  */
#line 9553 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1340:
/* Line 1792 of yacc.c  */
#line 9557 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1341:
/* Line 1792 of yacc.c  */
#line 9561 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
    break;

  case 1342:
/* Line 1792 of yacc.c  */
#line 9565 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1343:
/* Line 1792 of yacc.c  */
#line 9569 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1344:
/* Line 1792 of yacc.c  */
#line 9573 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
          }
    break;

  case 1345:
/* Line 1792 of yacc.c  */
#line 9577 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1346:
/* Line 1792 of yacc.c  */
#line 9581 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1347:
/* Line 1792 of yacc.c  */
#line 9585 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1348:
/* Line 1792 of yacc.c  */
#line 9589 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1349:
/* Line 1792 of yacc.c  */
#line 9593 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
          }
    break;

  case 1350:
/* Line 1792 of yacc.c  */
#line 9597 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[(3) - (4)].item));
          }
    break;

  case 1351:
/* Line 1792 of yacc.c  */
#line 9601 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
    break;

  case 1352:
/* Line 1792 of yacc.c  */
#line 9605 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
          }
    break;

  case 1353:
/* Line 1792 of yacc.c  */
#line 9609 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (4)].item), NULL);
          }
    break;

  case 1354:
/* Line 1792 of yacc.c  */
#line 9613 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
          }
    break;

  case 1355:
/* Line 1792 of yacc.c  */
#line 9617 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (4)].item), 0, 0, 0);
          }
    break;

  case 1356:
/* Line 1792 of yacc.c  */
#line 9621 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), 0);
          }
    break;

  case 1357:
/* Line 1792 of yacc.c  */
#line 9625 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (7)].item), 0, (yyvsp[(6) - (7)].ulong_num), 0, true);
          }
    break;

  case 1358:
/* Line 1792 of yacc.c  */
#line 9629 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
          }
    break;

  case 1360:
/* Line 1792 of yacc.c  */
#line 9637 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
    break;

  case 1361:
/* Line 1792 of yacc.c  */
#line 9643 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
    break;

  case 1362:
/* Line 1792 of yacc.c  */
#line 9649 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
    break;

  case 1363:
/* Line 1792 of yacc.c  */
#line 9655 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
    break;

  case 1364:
/* Line 1792 of yacc.c  */
#line 9661 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
    break;

  case 1365:
/* Line 1792 of yacc.c  */
#line 9667 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
          }
    break;

  case 1366:
/* Line 1792 of yacc.c  */
#line 9671 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[(3) - (4)].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
    break;

  case 1367:
/* Line 1792 of yacc.c  */
#line 9689 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1368:
/* Line 1792 of yacc.c  */
#line 9693 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), (yyvsp[(5) - (6)].item_list2));
          }
    break;

  case 1369:
/* Line 1792 of yacc.c  */
#line 9700 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1370:
/* Line 1792 of yacc.c  */
#line 9702 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                MYSQLerror(NULL,thd,NULL,"syntax error");
                            });
          }
    break;

  case 1371:
/* Line 1792 of yacc.c  */
#line 9714 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1372:
/* Line 1792 of yacc.c  */
#line 9715 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1373:
/* Line 1792 of yacc.c  */
#line 9719 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1374:
/* Line 1792 of yacc.c  */
#line 9720 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1375:
/* Line 1792 of yacc.c  */
#line 9724 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1376:
/* Line 1792 of yacc.c  */
#line 9725 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1377:
/* Line 1792 of yacc.c  */
#line 9730 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1378:
/* Line 1792 of yacc.c  */
#line 9736 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1379:
/* Line 1792 of yacc.c  */
#line 9745 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].lex_str), (yylsp[(1) - (2)]).cpp);
          }
    break;

  case 1382:
/* Line 1792 of yacc.c  */
#line 9757 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(3) - (5)].item), false, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1383:
/* Line 1792 of yacc.c  */
#line 9761 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[(4) - (6)].item), true, (yyvsp[(6) - (6)].window));
          }
    break;

  case 1384:
/* Line 1792 of yacc.c  */
#line 9765 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1385:
/* Line 1792 of yacc.c  */
#line 9769 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1386:
/* Line 1792 of yacc.c  */
#line 9773 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_json_array((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1387:
/* Line 1792 of yacc.c  */
#line 9777 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_json_object((yyloc), (yyvsp[(3) - (7)].item), (yyvsp[(5) - (7)].item), (yyvsp[(7) - (7)].window));
          }
    break;

  case 1388:
/* Line 1792 of yacc.c  */
#line 9781 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1389:
/* Line 1792 of yacc.c  */
#line 9785 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1390:
/* Line 1792 of yacc.c  */
#line 9789 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1391:
/* Line 1792 of yacc.c  */
#line 9793 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[(4) - (6)].item_list2), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1392:
/* Line 1792 of yacc.c  */
#line 9797 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1393:
/* Line 1792 of yacc.c  */
#line 9806 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1394:
/* Line 1792 of yacc.c  */
#line 9810 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1395:
/* Line 1792 of yacc.c  */
#line 9814 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[(4) - (6)].item), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1396:
/* Line 1792 of yacc.c  */
#line 9818 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (5)].item), 0, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1397:
/* Line 1792 of yacc.c  */
#line 9822 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (5)].item), 0, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1398:
/* Line 1792 of yacc.c  */
#line 9826 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[(3) - (5)].item), 1, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1399:
/* Line 1792 of yacc.c  */
#line 9830 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[(3) - (5)].item), 1, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1400:
/* Line 1792 of yacc.c  */
#line 9834 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(3) - (5)].item), false, (yyvsp[(5) - (5)].window));
          }
    break;

  case 1401:
/* Line 1792 of yacc.c  */
#line 9838 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[(4) - (6)].item), true, (yyvsp[(6) - (6)].window));
          }
    break;

  case 1402:
/* Line 1792 of yacc.c  */
#line 9845 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[(3) - (8)].num), (yyvsp[(4) - (8)].item_list2), (yyvsp[(5) - (8)].order_list), (yyvsp[(6) - (8)].string), (yyvsp[(8) - (8)].window));
          }
    break;

  case 1403:
/* Line 1792 of yacc.c  */
#line 9852 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[(4) - (4)].window));
          }
    break;

  case 1404:
/* Line 1792 of yacc.c  */
#line 9856 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[(4) - (4)].window));
          }
    break;

  case 1405:
/* Line 1792 of yacc.c  */
#line 9860 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[(4) - (4)].window));
          }
    break;

  case 1406:
/* Line 1792 of yacc.c  */
#line 9864 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[(4) - (4)].window));
          }
    break;

  case 1407:
/* Line 1792 of yacc.c  */
#line 9868 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[(4) - (4)].window));
          }
    break;

  case 1408:
/* Line 1792 of yacc.c  */
#line 9872 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[(3) - (5)].item), (yyvsp[(5) - (5)].window));
          }
    break;

  case 1409:
/* Line 1792 of yacc.c  */
#line 9876 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[(3) - (7)].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(4) - (7)].lead_lag_info).offset != NULL && args->push_back((yyvsp[(4) - (7)].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(4) - (7)].lead_lag_info).default_value != NULL && args->push_back((yyvsp[(4) - (7)].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[(6) - (7)].null_treatment), (yyvsp[(7) - (7)].window));
          }
    break;

  case 1410:
/* Line 1792 of yacc.c  */
#line 9887 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[(3) - (7)].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(4) - (7)].lead_lag_info).offset != NULL && args->push_back((yyvsp[(4) - (7)].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[(4) - (7)].lead_lag_info).default_value != NULL && args->push_back((yyvsp[(4) - (7)].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[(6) - (7)].null_treatment), (yyvsp[(7) - (7)].window));
          }
    break;

  case 1411:
/* Line 1792 of yacc.c  */
#line 9898 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].null_treatment), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1412:
/* Line 1792 of yacc.c  */
#line 9902 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].null_treatment), (yyvsp[(6) - (6)].window));
          }
    break;

  case 1413:
/* Line 1792 of yacc.c  */
#line 9906 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[(3) - (9)].item)) ||
                args->push_back((yyvsp[(5) - (9)].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[(7) - (9)].from_first_last) == NFL_FROM_LAST, (yyvsp[(8) - (9)].null_treatment), (yyvsp[(9) - (9)].window));
          }
    break;

  case 1414:
/* Line 1792 of yacc.c  */
#line 9918 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
    break;

  case 1415:
/* Line 1792 of yacc.c  */
#line 9923 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lead_lag_info).offset= (yyvsp[(2) - (3)].item_num);
            (yyval.lead_lag_info).default_value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1416:
/* Line 1792 of yacc.c  */
#line 9928 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lead_lag_info).offset= (yyvsp[(2) - (3)].param_marker);
            (yyval.lead_lag_info).default_value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1417:
/* Line 1792 of yacc.c  */
#line 9936 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NULL;
          }
    break;

  case 1418:
/* Line 1792 of yacc.c  */
#line 9940 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1419:
/* Line 1792 of yacc.c  */
#line 9947 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.null_treatment)= NT_NONE;
          }
    break;

  case 1420:
/* Line 1792 of yacc.c  */
#line 9951 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
    break;

  case 1421:
/* Line 1792 of yacc.c  */
#line 9955 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
    break;

  case 1422:
/* Line 1792 of yacc.c  */
#line 9963 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.from_first_last)= NFL_NONE;
          }
    break;

  case 1423:
/* Line 1792 of yacc.c  */
#line 9967 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
    break;

  case 1424:
/* Line 1792 of yacc.c  */
#line 9971 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
    break;

  case 1425:
/* Line 1792 of yacc.c  */
#line 9978 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.window)= NULL;
          }
    break;

  case 1426:
/* Line 1792 of yacc.c  */
#line 9982 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(1) - (1)].window);
          }
    break;

  case 1427:
/* Line 1792 of yacc.c  */
#line 9989 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(2) - (2)].window);
          }
    break;

  case 1428:
/* Line 1792 of yacc.c  */
#line 9996 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[(1) - (1)].item_string));
          }
    break;

  case 1429:
/* Line 1792 of yacc.c  */
#line 10000 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(1) - (1)].window);
          }
    break;

  case 1430:
/* Line 1792 of yacc.c  */
#line 10007 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, YYTHD->charset());
          }
    break;

  case 1431:
/* Line 1792 of yacc.c  */
#line 10014 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(2) - (3)].window);
          }
    break;

  case 1432:
/* Line 1792 of yacc.c  */
#line 10024 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
             auto frame= (yyvsp[(4) - (4)].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[(3) - (4)].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[(2) - (4)].order_list), (yyvsp[(3) - (4)].order_list), frame, (yyvsp[(1) - (4)].item_string));
           }
    break;

  case 1433:
/* Line 1792 of yacc.c  */
#line 10041 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_string)= NULL;
          }
    break;

  case 1434:
/* Line 1792 of yacc.c  */
#line 10045 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_string)= (yyvsp[(1) - (1)].item_string);
          }
    break;

  case 1435:
/* Line 1792 of yacc.c  */
#line 10052 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NULL;
          }
    break;

  case 1436:
/* Line 1792 of yacc.c  */
#line 10056 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= (yyvsp[(3) - (3)].order_list);
          }
    break;

  case 1437:
/* Line 1792 of yacc.c  */
#line 10063 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NULL;
          }
    break;

  case 1438:
/* Line 1792 of yacc.c  */
#line 10067 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= (yyvsp[(3) - (3)].order_list);
          }
    break;

  case 1439:
/* Line 1792 of yacc.c  */
#line 10074 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.window_frame)= NULL;
          }
    break;

  case 1440:
/* Line 1792 of yacc.c  */
#line 10080 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[(1) - (3)].frame_units), (yyvsp[(2) - (3)].frame_extent), (yyvsp[(3) - (3)].frame_exclusion));
          }
    break;

  case 1441:
/* Line 1792 of yacc.c  */
#line 10087 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[(1) - (1)].bound), end_bound);
          }
    break;

  case 1442:
/* Line 1792 of yacc.c  */
#line 10092 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.frame_extent)= (yyvsp[(1) - (1)].frame_extent);
          }
    break;

  case 1443:
/* Line 1792 of yacc.c  */
#line 10099 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
    break;

  case 1444:
/* Line 1792 of yacc.c  */
#line 10103 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[(1) - (2)].item_num));
          }
    break;

  case 1445:
/* Line 1792 of yacc.c  */
#line 10107 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[(1) - (2)].param_marker));
          }
    break;

  case 1446:
/* Line 1792 of yacc.c  */
#line 10111 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[(2) - (4)].item), (yyvsp[(3) - (4)].interval));
          }
    break;

  case 1447:
/* Line 1792 of yacc.c  */
#line 10115 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
    break;

  case 1448:
/* Line 1792 of yacc.c  */
#line 10122 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[(2) - (4)].bound), (yyvsp[(4) - (4)].bound));
          }
    break;

  case 1449:
/* Line 1792 of yacc.c  */
#line 10129 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= (yyvsp[(1) - (1)].bound);
          }
    break;

  case 1450:
/* Line 1792 of yacc.c  */
#line 10133 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
    break;

  case 1451:
/* Line 1792 of yacc.c  */
#line 10137 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[(1) - (2)].item_num));
          }
    break;

  case 1452:
/* Line 1792 of yacc.c  */
#line 10141 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[(1) - (2)].param_marker));
          }
    break;

  case 1453:
/* Line 1792 of yacc.c  */
#line 10145 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[(2) - (4)].item), (yyvsp[(3) - (4)].interval));
          }
    break;

  case 1454:
/* Line 1792 of yacc.c  */
#line 10152 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.frame_exclusion)= NULL;
          }
    break;

  case 1455:
/* Line 1792 of yacc.c  */
#line 10156 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
    break;

  case 1456:
/* Line 1792 of yacc.c  */
#line 10160 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
    break;

  case 1457:
/* Line 1792 of yacc.c  */
#line 10164 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
    break;

  case 1458:
/* Line 1792 of yacc.c  */
#line 10168 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
    break;

  case 1459:
/* Line 1792 of yacc.c  */
#line 10173 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.frame_units)= WFU_ROWS; }
    break;

  case 1460:
/* Line 1792 of yacc.c  */
#line 10174 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.frame_units)= WFU_RANGE; }
    break;

  case 1461:
/* Line 1792 of yacc.c  */
#line 10175 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.frame_units)= WFU_GROUPS; }
    break;

  case 1462:
/* Line 1792 of yacc.c  */
#line 10180 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[(3) - (4)].item_list2));
          }
    break;

  case 1463:
/* Line 1792 of yacc.c  */
#line 10186 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1464:
/* Line 1792 of yacc.c  */
#line 10191 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
          }
    break;

  case 1465:
/* Line 1792 of yacc.c  */
#line 10195 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1466:
/* Line 1792 of yacc.c  */
#line 10199 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yylsp[(3) - (4)]), (yyvsp[(4) - (4)].lex_str));
          }
    break;

  case 1467:
/* Line 1792 of yacc.c  */
#line 10205 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1468:
/* Line 1792 of yacc.c  */
#line 10206 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1469:
/* Line 1792 of yacc.c  */
#line 10211 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1470:
/* Line 1792 of yacc.c  */
#line 10216 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1471:
/* Line 1792 of yacc.c  */
#line 10220 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= NULL; }
    break;

  case 1472:
/* Line 1792 of yacc.c  */
#line 10221 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.order_list)= (yyvsp[(3) - (3)].order_list); }
    break;

  case 1473:
/* Line 1792 of yacc.c  */
#line 10226 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1474:
/* Line 1792 of yacc.c  */
#line 10231 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1475:
/* Line 1792 of yacc.c  */
#line 10241 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1476:
/* Line 1792 of yacc.c  */
#line 10248 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1477:
/* Line 1792 of yacc.c  */
#line 10255 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[(2) - (3)].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[(3) - (3)].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[(3) - (3)].charset_with_opt_binary).charset ? (yyvsp[(3) - (3)].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[(3) - (3)].charset_with_opt_binary).charset;
          }
    break;

  case 1478:
/* Line 1792 of yacc.c  */
#line 10274 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 1479:
/* Line 1792 of yacc.c  */
#line 10282 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1480:
/* Line 1792 of yacc.c  */
#line 10289 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1481:
/* Line 1792 of yacc.c  */
#line 10296 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1482:
/* Line 1792 of yacc.c  */
#line 10303 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1483:
/* Line 1792 of yacc.c  */
#line 10310 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1484:
/* Line 1792 of yacc.c  */
#line 10317 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1485:
/* Line 1792 of yacc.c  */
#line 10324 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].c_str);
          }
    break;

  case 1486:
/* Line 1792 of yacc.c  */
#line 10331 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[(2) - (2)].precision).length;
            (yyval.cast_type).dec= (yyvsp[(2) - (2)].precision).dec;
          }
    break;

  case 1487:
/* Line 1792 of yacc.c  */
#line 10338 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
    break;

  case 1488:
/* Line 1792 of yacc.c  */
#line 10347 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= NULL; }
    break;

  case 1490:
/* Line 1792 of yacc.c  */
#line 10353 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1491:
/* Line 1792 of yacc.c  */
#line 10359 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1492:
/* Line 1792 of yacc.c  */
#line 10367 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(1) - (1)].item_list2); }
    break;

  case 1493:
/* Line 1792 of yacc.c  */
#line 10368 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1494:
/* Line 1792 of yacc.c  */
#line 10373 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1495:
/* Line 1792 of yacc.c  */
#line 10379 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2) == NULL || (yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1496:
/* Line 1792 of yacc.c  */
#line 10387 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1497:
/* Line 1792 of yacc.c  */
#line 10388 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1498:
/* Line 1792 of yacc.c  */
#line 10392 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1499:
/* Line 1792 of yacc.c  */
#line 10393 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1500:
/* Line 1792 of yacc.c  */
#line 10398 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (*THR_MALLOC) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1501:
/* Line 1792 of yacc.c  */
#line 10406 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1502:
/* Line 1792 of yacc.c  */
#line 10414 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1503:
/* Line 1792 of yacc.c  */
#line 10415 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].join_table); }
    break;

  case 1504:
/* Line 1792 of yacc.c  */
#line 10416 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(3) - (4)].table_reference); }
    break;

  case 1505:
/* Line 1792 of yacc.c  */
#line 10427 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1506:
/* Line 1792 of yacc.c  */
#line 10428 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(1) - (1)].join_table); }
    break;

  case 1507:
/* Line 1792 of yacc.c  */
#line 10510 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[(1) - (5)].table_reference), (yylsp[(2) - (5)]), (yyvsp[(2) - (5)].join_type), (yyvsp[(3) - (5)].table_reference), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1508:
/* Line 1792 of yacc.c  */
#line 10515 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (7)].table_reference), (yylsp[(2) - (7)]), (yyvsp[(2) - (7)].join_type), (yyvsp[(3) - (7)].table_reference), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1509:
/* Line 1792 of yacc.c  */
#line 10519 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[(1) - (5)].table_reference), (yylsp[(2) - (5)]), (yyvsp[(2) - (5)].join_type), (yyvsp[(3) - (5)].table_reference), (yyvsp[(5) - (5)].item));
          }
    break;

  case 1510:
/* Line 1792 of yacc.c  */
#line 10523 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (7)].table_reference), (yylsp[(2) - (7)]), (yyvsp[(2) - (7)].join_type), (yyvsp[(3) - (7)].table_reference), (yyvsp[(6) - (7)].string_list));
          }
    break;

  case 1511:
/* Line 1792 of yacc.c  */
#line 10528 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[(1) - (3)].table_reference), (yylsp[(2) - (3)]), (yyvsp[(2) - (3)].join_type), NULL);

            if ((yyvsp[(3) - (3)].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[(3) - (3)].table_reference)->add_cross_join(this_cross_join);
          }
    break;

  case 1512:
/* Line 1792 of yacc.c  */
#line 10537 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[(1) - (3)].table_reference), (yylsp[(2) - (3)]), (yyvsp[(2) - (3)].join_type), (yyvsp[(3) - (3)].table_reference));
          }
    break;

  case 1513:
/* Line 1792 of yacc.c  */
#line 10543 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_INNER; }
    break;

  case 1514:
/* Line 1792 of yacc.c  */
#line 10544 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
    break;

  case 1515:
/* Line 1792 of yacc.c  */
#line 10545 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
    break;

  case 1516:
/* Line 1792 of yacc.c  */
#line 10549 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1517:
/* Line 1792 of yacc.c  */
#line 10550 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1518:
/* Line 1792 of yacc.c  */
#line 10551 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_INNER; }
    break;

  case 1519:
/* Line 1792 of yacc.c  */
#line 10552 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
    break;

  case 1520:
/* Line 1792 of yacc.c  */
#line 10555 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_LEFT; }
    break;

  case 1521:
/* Line 1792 of yacc.c  */
#line 10556 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_type)= JTT_RIGHT; }
    break;

  case 1526:
/* Line 1792 of yacc.c  */
#line 10574 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= NULL; }
    break;

  case 1528:
/* Line 1792 of yacc.c  */
#line 10580 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (4)].string_list);
          }
    break;

  case 1531:
/* Line 1792 of yacc.c  */
#line 10610 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference) = (yyvsp[(1) - (1)].derived_table); }
    break;

  case 1532:
/* Line 1792 of yacc.c  */
#line 10612 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[(1) - (1)].join_table)); }
    break;

  case 1533:
/* Line 1792 of yacc.c  */
#line 10614 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[(1) - (1)].table_reference_list)); }
    break;

  case 1534:
/* Line 1792 of yacc.c  */
#line 10615 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference) = (yyvsp[(1) - (1)].table_reference); }
    break;

  case 1535:
/* Line 1792 of yacc.c  */
#line 10619 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference_list)= (yyvsp[(2) - (3)].table_reference_list); }
    break;

  case 1536:
/* Line 1792 of yacc.c  */
#line 10621 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference_list)= (yyvsp[(2) - (5)].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[(4) - (5)].table_reference)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1537:
/* Line 1792 of yacc.c  */
#line 10629 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(2) - (3)].table_reference); }
    break;

  case 1538:
/* Line 1792 of yacc.c  */
#line 10630 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_reference)= (yyvsp[(2) - (3)].table_reference); }
    break;

  case 1539:
/* Line 1792 of yacc.c  */
#line 10635 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[(1) - (4)].table), (yyvsp[(2) - (4)].string_list), (yyvsp[(3) - (4)].lex_cstr), (yyvsp[(4) - (4)].key_usage_list));
          }
    break;

  case 1540:
/* Line 1792 of yacc.c  */
#line 10641 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_table)= (yyvsp[(2) - (3)].join_table); }
    break;

  case 1541:
/* Line 1792 of yacc.c  */
#line 10642 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.join_table)= (yyvsp[(2) - (3)].join_table); }
    break;

  case 1542:
/* Line 1792 of yacc.c  */
#line 10647 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[(2) - (3)].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table((yyvsp[(1) - (3)].subquery), (yyvsp[(2) - (3)].lex_cstr), &(yyvsp[(3) - (3)].simple_ident_list));
          }
    break;

  case 1543:
/* Line 1792 of yacc.c  */
#line 10664 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[(8) - (8)].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].lex_str), (yyvsp[(6) - (8)].jtc_list), to_lex_string((yyvsp[(8) - (8)].lex_cstr)));
          }
    break;

  case 1544:
/* Line 1792 of yacc.c  */
#line 10679 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jtc_list)= (yyvsp[(3) - (4)].jtc_list);
          }
    break;

  case 1545:
/* Line 1792 of yacc.c  */
#line 10686 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[(1) - (1)].jt_column)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1546:
/* Line 1792 of yacc.c  */
#line 10692 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jtc_list)= (yyvsp[(1) - (3)].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[(3) - (3)].jt_column)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1547:
/* Line 1792 of yacc.c  */
#line 10701 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[(1) - (3)].lex_str));
          }
    break;

  case 1548:
/* Line 1792 of yacc.c  */
#line 10706 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_path((yyvsp[(1) - (6)].lex_str), (yyvsp[(2) - (6)].type), (yyvsp[(3) - (6)].jt_column_type), (yyvsp[(5) - (6)].lex_str) ,
                                                       (yyvsp[(6) - (6)].jt_on_error_or_empty).error.type,
                                                       *(yyvsp[(6) - (6)].jt_on_error_or_empty).error.default_str,
                                                       (yyvsp[(6) - (6)].jt_on_error_or_empty).empty.type,
                                                       *(yyvsp[(6) - (6)].jt_on_error_or_empty).empty.default_str);
          }
    break;

  case 1549:
/* Line 1792 of yacc.c  */
#line 10714 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[(3) - (4)].lex_str), (yyvsp[(4) - (4)].jtc_list));
          }
    break;

  case 1550:
/* Line 1792 of yacc.c  */
#line 10720 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
    break;

  case 1551:
/* Line 1792 of yacc.c  */
#line 10724 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
    break;

  case 1552:
/* Line 1792 of yacc.c  */
#line 10731 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_on_error_or_empty).error.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).error.default_str= &NULL_STR;

            (yyval.jt_on_error_or_empty).empty.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).empty.default_str= &NULL_STR;
          }
    break;

  case 1553:
/* Line 1792 of yacc.c  */
#line 10739 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_on_error_or_empty).error.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).error.default_str= &NULL_STR;

            (yyval.jt_on_error_or_empty).empty.type= (yyvsp[(1) - (1)].jt_on_response).type;
            (yyval.jt_on_error_or_empty).empty.default_str= (yyvsp[(1) - (1)].jt_on_response).default_str;
          }
    break;

  case 1554:
/* Line 1792 of yacc.c  */
#line 10747 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_on_error_or_empty).error.type= (yyvsp[(1) - (1)].jt_on_response).type;
            (yyval.jt_on_error_or_empty).error.default_str= (yyvsp[(1) - (1)].jt_on_response).default_str;

            (yyval.jt_on_error_or_empty).empty.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).empty.default_str= &NULL_STR;
          }
    break;

  case 1555:
/* Line 1792 of yacc.c  */
#line 10755 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_on_error_or_empty).error.type= (yyvsp[(2) - (2)].jt_on_response).type;
            (yyval.jt_on_error_or_empty).error.default_str= (yyvsp[(2) - (2)].jt_on_response).default_str;

            (yyval.jt_on_error_or_empty).empty.type= (yyvsp[(1) - (2)].jt_on_response).type;
            (yyval.jt_on_error_or_empty).empty.default_str= (yyvsp[(1) - (2)].jt_on_response).default_str;
          }
    break;

  case 1556:
/* Line 1792 of yacc.c  */
#line 10763 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_on_error_or_empty).error.type= (yyvsp[(1) - (2)].jt_on_response).type;
            (yyval.jt_on_error_or_empty).error.default_str= (yyvsp[(1) - (2)].jt_on_response).default_str;

            (yyval.jt_on_error_or_empty).empty.type= (yyvsp[(2) - (2)].jt_on_response).type;
            (yyval.jt_on_error_or_empty).empty.default_str= (yyvsp[(2) - (2)].jt_on_response).default_str;
          }
    break;

  case 1557:
/* Line 1792 of yacc.c  */
#line 10773 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.jt_on_response)= (yyvsp[(1) - (3)].jt_on_response); }
    break;

  case 1558:
/* Line 1792 of yacc.c  */
#line 10776 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.jt_on_response)= (yyvsp[(1) - (3)].jt_on_response); }
    break;

  case 1559:
/* Line 1792 of yacc.c  */
#line 10780 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_on_response).type= enum_jtc_on::JTO_ERROR;
            (yyval.jt_on_response).default_str= &NULL_STR;
          }
    break;

  case 1560:
/* Line 1792 of yacc.c  */
#line 10785 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_on_response).type= enum_jtc_on::JTO_NULL;
            (yyval.jt_on_response).default_str= &NULL_STR;
          }
    break;

  case 1561:
/* Line 1792 of yacc.c  */
#line 10790 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.jt_on_response).type= enum_jtc_on::JTO_DEFAULT;
            (yyval.jt_on_response).default_str= YYTHD->memdup_typed(&(yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1562:
/* Line 1792 of yacc.c  */
#line 10798 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
    break;

  case 1563:
/* Line 1792 of yacc.c  */
#line 10801 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1564:
/* Line 1792 of yacc.c  */
#line 10802 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1565:
/* Line 1792 of yacc.c  */
#line 10803 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1566:
/* Line 1792 of yacc.c  */
#line 10807 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1567:
/* Line 1792 of yacc.c  */
#line 10808 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1568:
/* Line 1792 of yacc.c  */
#line 10814 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), (yyvsp[(1) - (6)].index_hint), (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1569:
/* Line 1792 of yacc.c  */
#line 10820 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            init_index_hints((yyvsp[(5) - (6)].key_usage_list), INDEX_HINT_USE, (yyvsp[(3) - (6)].num));
            (yyval.key_usage_list)= (yyvsp[(5) - (6)].key_usage_list);
          }
    break;

  case 1571:
/* Line 1792 of yacc.c  */
#line 10829 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].key_usage_list)->concat((yyvsp[(1) - (2)].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[(2) - (2)].key_usage_list);
          }
    break;

  case 1572:
/* Line 1792 of yacc.c  */
#line 10836 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.key_usage_list)= NULL; }
    break;

  case 1575:
/* Line 1792 of yacc.c  */
#line 10846 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
    break;

  case 1577:
/* Line 1792 of yacc.c  */
#line 10857 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1578:
/* Line 1792 of yacc.c  */
#line 10863 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1579:
/* Line 1792 of yacc.c  */
#line 10872 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[(1) - (1)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1580:
/* Line 1792 of yacc.c  */
#line 10878 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[(3) - (3)].key_usage_element)))
              MYSQL_YYABORT;
          }
    break;

  case 1582:
/* Line 1792 of yacc.c  */
#line 10890 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[(1) - (1)].lex_str).str),
                                               (yyvsp[(1) - (1)].lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
    break;

  case 1583:
/* Line 1792 of yacc.c  */
#line 10899 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[(3) - (3)].lex_str).str),
                                               (yyvsp[(3) - (3)].lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[(1) - (3)].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1584:
/* Line 1792 of yacc.c  */
#line 10910 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1585:
/* Line 1792 of yacc.c  */
#line 10911 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1586:
/* Line 1792 of yacc.c  */
#line 10912 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1587:
/* Line 1792 of yacc.c  */
#line 10913 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1588:
/* Line 1792 of yacc.c  */
#line 10914 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1589:
/* Line 1792 of yacc.c  */
#line 10915 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1590:
/* Line 1792 of yacc.c  */
#line 10916 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1591:
/* Line 1792 of yacc.c  */
#line 10917 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1592:
/* Line 1792 of yacc.c  */
#line 10918 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1593:
/* Line 1792 of yacc.c  */
#line 10919 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1594:
/* Line 1792 of yacc.c  */
#line 10920 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1595:
/* Line 1792 of yacc.c  */
#line 10921 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1596:
/* Line 1792 of yacc.c  */
#line 10925 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1597:
/* Line 1792 of yacc.c  */
#line 10926 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1598:
/* Line 1792 of yacc.c  */
#line 10927 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1599:
/* Line 1792 of yacc.c  */
#line 10928 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1600:
/* Line 1792 of yacc.c  */
#line 10929 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1601:
/* Line 1792 of yacc.c  */
#line 10930 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1602:
/* Line 1792 of yacc.c  */
#line 10931 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1603:
/* Line 1792 of yacc.c  */
#line 10932 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1604:
/* Line 1792 of yacc.c  */
#line 10933 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1605:
/* Line 1792 of yacc.c  */
#line 10937 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1606:
/* Line 1792 of yacc.c  */
#line 10938 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1607:
/* Line 1792 of yacc.c  */
#line 10939 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1608:
/* Line 1792 of yacc.c  */
#line 10940 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1612:
/* Line 1792 of yacc.c  */
#line 10950 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_cstr)= NULL_CSTR; }
    break;

  case 1613:
/* Line 1792 of yacc.c  */
#line 10951 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[(2) - (2)].lex_str)); }
    break;

  case 1616:
/* Line 1792 of yacc.c  */
#line 10961 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].item) != NULL)
              (yyval.item)= new PTI_context<CTX_WHERE>((yyloc), (yyvsp[(1) - (1)].item));
            else
              (yyval.item)= NULL;
          }
    break;

  case 1617:
/* Line 1792 of yacc.c  */
#line 10969 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1618:
/* Line 1792 of yacc.c  */
#line 10971 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1619:
/* Line 1792 of yacc.c  */
#line 10977 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1620:
/* Line 1792 of yacc.c  */
#line 10979 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new PTI_context<CTX_HAVING>((yyloc), (yyvsp[(2) - (2)].item));
          }
    break;

  case 1621:
/* Line 1792 of yacc.c  */
#line 10986 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[(2) - (2)].with_list), false);
          }
    break;

  case 1622:
/* Line 1792 of yacc.c  */
#line 10990 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[(3) - (3)].with_list), true);
          }
    break;

  case 1623:
/* Line 1792 of yacc.c  */
#line 10997 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].with_list)->push_back((yyvsp[(3) - (3)].common_table_expr)))
              MYSQL_YYABORT;
          }
    break;

  case 1624:
/* Line 1792 of yacc.c  */
#line 11002 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[(1) - (1)].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
    break;

  case 1625:
/* Line 1792 of yacc.c  */
#line 11011 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[(4) - (4)]).raw.length();
            subq_text.str= YYTHD->strmake((yylsp[(4) - (4)]).raw.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[(4) - (4)]).raw.start - YYLIP->get_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[(1) - (4)].lex_str), subq_text, subq_text_offset,
                                             (yyvsp[(4) - (4)].subquery), &(yyvsp[(2) - (4)].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
    break;

  case 1626:
/* Line 1792 of yacc.c  */
#line 11027 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
    break;

  case 1627:
/* Line 1792 of yacc.c  */
#line 11036 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_ident_list)= (yyvsp[(2) - (3)].simple_ident_list);
          }
    break;

  case 1628:
/* Line 1792 of yacc.c  */
#line 11043 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[(1) - (1)].lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
    break;

  case 1629:
/* Line 1792 of yacc.c  */
#line 11049 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_ident_list)= (yyvsp[(1) - (3)].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
    break;

  case 1630:
/* Line 1792 of yacc.c  */
#line 11058 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.windows)= NULL;
          }
    break;

  case 1631:
/* Line 1792 of yacc.c  */
#line 11062 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.windows)= (yyvsp[(2) - (2)].windows);
          }
    break;

  case 1632:
/* Line 1792 of yacc.c  */
#line 11069 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[(1) - (1)].window)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1633:
/* Line 1792 of yacc.c  */
#line 11075 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].windows)->push_back((yyvsp[(3) - (3)].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[(1) - (3)].windows);
          }
    break;

  case 1634:
/* Line 1792 of yacc.c  */
#line 11084 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.window)= (yyvsp[(3) - (3)].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[(1) - (3)].item_string));
          }
    break;

  case 1635:
/* Line 1792 of yacc.c  */
#line 11093 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1636:
/* Line 1792 of yacc.c  */
#line 11094 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1637:
/* Line 1792 of yacc.c  */
#line 11102 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.group)= NULL; }
    break;

  case 1638:
/* Line 1792 of yacc.c  */
#line 11104 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[(3) - (4)].order_list), (yyvsp[(4) - (4)].olap_type));
          }
    break;

  case 1639:
/* Line 1792 of yacc.c  */
#line 11111 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1640:
/* Line 1792 of yacc.c  */
#line 11116 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1641:
/* Line 1792 of yacc.c  */
#line 11125 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
    break;

  case 1642:
/* Line 1792 of yacc.c  */
#line 11126 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.olap_type)= ROLLUP_TYPE; }
    break;

  case 1643:
/* Line 1792 of yacc.c  */
#line 11142 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
            (yyval.order_list)->push_back((yyvsp[(3) - (3)].order_expr));
          }
    break;

  case 1644:
/* Line 1792 of yacc.c  */
#line 11147 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1645:
/* Line 1792 of yacc.c  */
#line 11157 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].order_direction));
          }
    break;

  case 1646:
/* Line 1792 of yacc.c  */
#line 11167 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.order)= NULL; }
    break;

  case 1648:
/* Line 1792 of yacc.c  */
#line 11173 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[(3) - (3)].order_list));
          }
    break;

  case 1649:
/* Line 1792 of yacc.c  */
#line 11180 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].order_list)->push_back((yyvsp[(3) - (3)].order_expr));
            (yyval.order_list)= (yyvsp[(1) - (3)].order_list);
          }
    break;

  case 1650:
/* Line 1792 of yacc.c  */
#line 11185 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyvsp[(1) - (1)].order_expr) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[(1) - (1)].order_expr));
          }
    break;

  case 1651:
/* Line 1792 of yacc.c  */
#line 11194 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
    break;

  case 1652:
/* Line 1792 of yacc.c  */
#line 11195 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.order_direction)= ORDER_ASC; }
    break;

  case 1653:
/* Line 1792 of yacc.c  */
#line 11196 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.order_direction)= ORDER_DESC; }
    break;

  case 1654:
/* Line 1792 of yacc.c  */
#line 11200 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.limit_clause)= NULL; }
    break;

  case 1656:
/* Line 1792 of yacc.c  */
#line 11206 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[(2) - (2)].limit_options));
          }
    break;

  case 1657:
/* Line 1792 of yacc.c  */
#line 11213 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (1)].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1658:
/* Line 1792 of yacc.c  */
#line 11219 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).is_offset_first= true;
          }
    break;

  case 1659:
/* Line 1792 of yacc.c  */
#line 11225 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.limit_options).limit= (yyvsp[(1) - (3)].item);
            (yyval.limit_options).opt_offset= (yyvsp[(3) - (3)].item);
            (yyval.limit_options).is_offset_first= false;
          }
    break;

  case 1660:
/* Line 1792 of yacc.c  */
#line 11234 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), (yyvsp[(1) - (1)].lex_str), (yylsp[(1) - (1)]).raw);
          }
    break;

  case 1661:
/* Line 1792 of yacc.c  */
#line 11238 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[(1) - (1)].param_marker));
          }
    break;

  case 1662:
/* Line 1792 of yacc.c  */
#line 11242 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1663:
/* Line 1792 of yacc.c  */
#line 11246 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1664:
/* Line 1792 of yacc.c  */
#line 11250 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 1665:
/* Line 1792 of yacc.c  */
#line 11256 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1666:
/* Line 1792 of yacc.c  */
#line 11257 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1667:
/* Line 1792 of yacc.c  */
#line 11261 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1668:
/* Line 1792 of yacc.c  */
#line 11262 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1669:
/* Line 1792 of yacc.c  */
#line 11263 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1670:
/* Line 1792 of yacc.c  */
#line 11264 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1671:
/* Line 1792 of yacc.c  */
#line 11265 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1672:
/* Line 1792 of yacc.c  */
#line 11266 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1673:
/* Line 1792 of yacc.c  */
#line 11270 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1674:
/* Line 1792 of yacc.c  */
#line 11271 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1675:
/* Line 1792 of yacc.c  */
#line 11272 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1676:
/* Line 1792 of yacc.c  */
#line 11273 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1677:
/* Line 1792 of yacc.c  */
#line 11274 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1678:
/* Line 1792 of yacc.c  */
#line 11278 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1679:
/* Line 1792 of yacc.c  */
#line 11279 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1680:
/* Line 1792 of yacc.c  */
#line 11280 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1681:
/* Line 1792 of yacc.c  */
#line 11281 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1682:
/* Line 1792 of yacc.c  */
#line 11282 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1683:
/* Line 1792 of yacc.c  */
#line 11286 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1684:
/* Line 1792 of yacc.c  */
#line 11287 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1685:
/* Line 1792 of yacc.c  */
#line 11288 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1686:
/* Line 1792 of yacc.c  */
#line 11289 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1687:
/* Line 1792 of yacc.c  */
#line 11294 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
    break;

  case 1690:
/* Line 1792 of yacc.c  */
#line 11304 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= (yyvsp[(1) - (3)].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(3) - (3)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1691:
/* Line 1792 of yacc.c  */
#line 11310 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[(1) - (1)].select_var_ident)))
              MYSQL_YYABORT;
          }
    break;

  case 1692:
/* Line 1792 of yacc.c  */
#line 11319 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1693:
/* Line 1792 of yacc.c  */
#line 11323 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1694:
/* Line 1792 of yacc.c  */
#line 11330 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= (yyvsp[(2) - (2)].into_destination);
          }
    break;

  case 1695:
/* Line 1792 of yacc.c  */
#line 11339 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[(2) - (5)].lex_str), (yyvsp[(3) - (5)].charset), (yyvsp[(4) - (5)].field_separators), (yyvsp[(5) - (5)].line_separators));
          }
    break;

  case 1696:
/* Line 1792 of yacc.c  */
#line 11343 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1697:
/* Line 1792 of yacc.c  */
#line 11346 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.into_destination)= (yyvsp[(1) - (1)].select_var_list); }
    break;

  case 1698:
/* Line 1792 of yacc.c  */
#line 11355 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_expression_body_primary(
                      NEW_PTN PT_query_specification((yyvsp[(2) - (3)].select_options), (yyvsp[(3) - (3)].item_list2)))));
          }
    break;

  case 1699:
/* Line 1792 of yacc.c  */
#line 11365 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_options).query_spec_options= 0;
          }
    break;

  case 1700:
/* Line 1792 of yacc.c  */
#line 11376 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (6)].is_not_empty);
            lex->drop_if_exists= (yyvsp[(4) - (6)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[(5) - (6)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1701:
/* Line 1792 of yacc.c  */
#line 11392 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[(3) - (6)].lex_str).str, (yyvsp[(5) - (6)].table),
                                           (yyvsp[(6) - (6)].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[(6) - (6)].opt_index_lock_and_algorithm).lock.get_or_default());
          }
    break;

  case 1702:
/* Line 1792 of yacc.c  */
#line 11401 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1703:
/* Line 1792 of yacc.c  */
#line 11411 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(6) - (6)].lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new (*THR_MALLOC) sp_name(to_lex_cstring((yyvsp[(4) - (6)].lex_str)), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1704:
/* Line 1792 of yacc.c  */
#line 11434 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(4) - (4)].lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new (*THR_MALLOC) sp_name(to_lex_cstring(db), (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1705:
/* Line 1792 of yacc.c  */
#line 11469 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[(4) - (5)].lex_str)), (yyvsp[(5) - (5)].resource_group_flag_type));
          }
    break;

  case 1706:
/* Line 1792 of yacc.c  */
#line 11476 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1707:
/* Line 1792 of yacc.c  */
#line 11491 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[(3) - (4)].num);
             lex->users_list= *(yyvsp[(4) - (4)].user_list);
          }
    break;

  case 1708:
/* Line 1792 of yacc.c  */
#line 11501 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (5)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[(4) - (5)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1709:
/* Line 1792 of yacc.c  */
#line 11516 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1710:
/* Line 1792 of yacc.c  */
#line 11525 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
    break;

  case 1711:
/* Line 1792 of yacc.c  */
#line 11536 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(4) - (4)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(4) - (4)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[(3) - (4)].lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1712:
/* Line 1792 of yacc.c  */
#line 11556 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[(5) - (5)].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[(5) - (5)].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[(4) - (5)].lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 1713:
/* Line 1792 of yacc.c  */
#line 11579 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[(4) - (4)].lex_str), (yyvsp[(3) - (4)].num));
          }
    break;

  case 1714:
/* Line 1792 of yacc.c  */
#line 11587 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
	    (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[(6) - (6)].ulonglong_number), (yyvsp[(5) - (6)].num));
	  }
    break;

  case 1715:
/* Line 1792 of yacc.c  */
#line 11594 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[(3) - (4)].num), (yyvsp[(4) - (4)].user_list));
          }
    break;

  case 1716:
/* Line 1792 of yacc.c  */
#line 11601 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[(1) - (1)].table)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1717:
/* Line 1792 of yacc.c  */
#line 11607 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_list)= (yyvsp[(1) - (3)].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[(3) - (3)].table)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1718:
/* Line 1792 of yacc.c  */
#line 11616 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[(1) - (1)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1719:
/* Line 1792 of yacc.c  */
#line 11622 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident_list)= (yyvsp[(1) - (3)].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[(3) - (3)].table_ident)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1720:
/* Line 1792 of yacc.c  */
#line 11630 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1721:
/* Line 1792 of yacc.c  */
#line 11631 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1722:
/* Line 1792 of yacc.c  */
#line 11635 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1723:
/* Line 1792 of yacc.c  */
#line 11636 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1724:
/* Line 1792 of yacc.c  */
#line 11640 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ts_options)= NULL; }
    break;

  case 1726:
/* Line 1792 of yacc.c  */
#line 11646 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[(1) - (1)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 1727:
/* Line 1792 of yacc.c  */
#line 11652 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.ts_options)= (yyvsp[(1) - (3)].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[(3) - (3)].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
    break;

  case 1730:
/* Line 1792 of yacc.c  */
#line 11676 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].column_row_value_list_pair).column_list, (yyvsp[(7) - (8)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1731:
/* Line 1792 of yacc.c  */
#line 11691 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(8) - (9)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[(1) - (9)].optimizer_hints), (yyvsp[(2) - (9)].lock_type), (yyvsp[(3) - (9)].is_not_empty), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list),
                                  (yyvsp[(8) - (9)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[(9) - (9)].column_value_list_pair).column_list, (yyvsp[(9) - (9)].column_value_list_pair).value_list);
          }
    break;

  case 1732:
/* Line 1792 of yacc.c  */
#line 11708 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[(1) - (8)].optimizer_hints), (yyvsp[(2) - (8)].lock_type), (yyvsp[(3) - (8)].is_not_empty), (yyvsp[(5) - (8)].table), (yyvsp[(6) - (8)].string_list),
                                  (yyvsp[(7) - (8)].insert_query_expression).column_list, NULL,
                                  (yyvsp[(7) - (8)].insert_query_expression).insert_query_expression,
                                  (yyvsp[(8) - (8)].column_value_list_pair).column_list, (yyvsp[(8) - (8)].column_value_list_pair).value_list);
          }
    break;

  case 1733:
/* Line 1792 of yacc.c  */
#line 11723 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].column_row_value_list_pair).column_list, (yyvsp[(6) - (6)].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1734:
/* Line 1792 of yacc.c  */
#line 11736 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[(7) - (7)].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[(1) - (7)].optimizer_hints), (yyvsp[(2) - (7)].lock_type), false, (yyvsp[(4) - (7)].table), (yyvsp[(5) - (7)].string_list),
                                  (yyvsp[(7) - (7)].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          }
    break;

  case 1735:
/* Line 1792 of yacc.c  */
#line 11751 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[(1) - (6)].optimizer_hints), (yyvsp[(2) - (6)].lock_type), false, (yyvsp[(4) - (6)].table), (yyvsp[(5) - (6)].string_list),
                                  (yyvsp[(6) - (6)].insert_query_expression).column_list, NULL,
                                  (yyvsp[(6) - (6)].insert_query_expression).insert_query_expression,
                                  NULL, NULL);
          }
    break;

  case 1736:
/* Line 1792 of yacc.c  */
#line 11760 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
    break;

  case 1737:
/* Line 1792 of yacc.c  */
#line 11761 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1738:
/* Line 1792 of yacc.c  */
#line 11763 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1739:
/* Line 1792 of yacc.c  */
#line 11771 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1740:
/* Line 1792 of yacc.c  */
#line 11775 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1741:
/* Line 1792 of yacc.c  */
#line 11777 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1744:
/* Line 1792 of yacc.c  */
#line 11794 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(1) - (1)].values_list);
          }
    break;

  case 1745:
/* Line 1792 of yacc.c  */
#line 11799 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(3) - (3)].values_list);
          }
    break;

  case 1746:
/* Line 1792 of yacc.c  */
#line 11804 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[(4) - (4)].values_list);
          }
    break;

  case 1747:
/* Line 1792 of yacc.c  */
#line 11812 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(1) - (1)].query_expression);
          }
    break;

  case 1748:
/* Line 1792 of yacc.c  */
#line 11817 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(3) - (3)].query_expression);
          }
    break;

  case 1749:
/* Line 1792 of yacc.c  */
#line 11822 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.insert_query_expression).column_list= (yyvsp[(2) - (4)].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[(4) - (4)].query_expression);
          }
    break;

  case 1750:
/* Line 1792 of yacc.c  */
#line 11830 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1751:
/* Line 1792 of yacc.c  */
#line 11836 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1752:
/* Line 1792 of yacc.c  */
#line 11845 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= (yyvsp[(2) - (2)].values_list);
          }
    break;

  case 1757:
/* Line 1792 of yacc.c  */
#line 11862 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyval.values_list)->push_back(&(yyvsp[(3) - (3)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1758:
/* Line 1792 of yacc.c  */
#line 11867 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[(1) - (1)].item_list2)->value))
              MYSQL_YYABORT;
          }
    break;

  case 1763:
/* Line 1792 of yacc.c  */
#line 11886 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1764:
/* Line 1792 of yacc.c  */
#line 11891 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1766:
/* Line 1792 of yacc.c  */
#line 11901 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
          }
    break;

  case 1767:
/* Line 1792 of yacc.c  */
#line 11907 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1769:
/* Line 1792 of yacc.c  */
#line 11917 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
    break;

  case 1770:
/* Line 1792 of yacc.c  */
#line 11924 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
    break;

  case 1771:
/* Line 1792 of yacc.c  */
#line 11929 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(5) - (5)].column_value_list_pair);
          }
    break;

  case 1772:
/* Line 1792 of yacc.c  */
#line 11947 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[(1) - (10)].with_clause), (yyvsp[(2) - (10)].optimizer_hints), (yyvsp[(3) - (10)].lock_type), (yyvsp[(4) - (10)].is_not_empty), (yyvsp[(5) - (10)].table_reference_list), (yyvsp[(7) - (10)].column_value_list_pair).column_list, (yyvsp[(7) - (10)].column_value_list_pair).value_list,
                                  (yyvsp[(8) - (10)].item), (yyvsp[(9) - (10)].order), (yyvsp[(10) - (10)].item));
          }
    break;

  case 1773:
/* Line 1792 of yacc.c  */
#line 11954 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.with_clause)= NULL; }
    break;

  case 1774:
/* Line 1792 of yacc.c  */
#line 11955 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.with_clause)= (yyvsp[(1) - (1)].with_clause); }
    break;

  case 1775:
/* Line 1792 of yacc.c  */
#line 11960 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair)= (yyvsp[(1) - (3)].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[(3) - (3)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(3) - (3)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1776:
/* Line 1792 of yacc.c  */
#line 11967 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[(1) - (1)].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[(1) - (1)].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1777:
/* Line 1792 of yacc.c  */
#line 11979 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.column_value_pair).column= (yyvsp[(1) - (3)].item);
            (yyval.column_value_pair).value= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1778:
/* Line 1792 of yacc.c  */
#line 11986 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1779:
/* Line 1792 of yacc.c  */
#line 11987 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1780:
/* Line 1792 of yacc.c  */
#line 12002 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[(1) - (9)].with_clause), (yyvsp[(2) - (9)].optimizer_hints), (yyvsp[(3) - (9)].num), (yyvsp[(5) - (9)].table), (yyvsp[(6) - (9)].string_list), (yyvsp[(7) - (9)].item), (yyvsp[(8) - (9)].order), (yyvsp[(9) - (9)].item));
          }
    break;

  case 1781:
/* Line 1792 of yacc.c  */
#line 12012 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[(1) - (7)].with_clause), (yyvsp[(2) - (7)].optimizer_hints), (yyvsp[(3) - (7)].num), (yyvsp[(4) - (7)].table_ident_list), (yyvsp[(6) - (7)].table_reference_list), (yyvsp[(7) - (7)].item));
          }
    break;

  case 1782:
/* Line 1792 of yacc.c  */
#line 12023 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[(1) - (8)].with_clause), (yyvsp[(2) - (8)].optimizer_hints), (yyvsp[(3) - (8)].num), (yyvsp[(5) - (8)].table_ident_list), (yyvsp[(7) - (8)].table_reference_list), (yyvsp[(8) - (8)].item));
          }
    break;

  case 1785:
/* Line 1792 of yacc.c  */
#line 12034 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1786:
/* Line 1792 of yacc.c  */
#line 12035 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].opt_delete_option) | (yyvsp[(2) - (2)].num); }
    break;

  case 1787:
/* Line 1792 of yacc.c  */
#line 12039 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_QUICK; }
    break;

  case 1788:
/* Line 1792 of yacc.c  */
#line 12040 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
    break;

  case 1789:
/* Line 1792 of yacc.c  */
#line 12041 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
    break;

  case 1790:
/* Line 1792 of yacc.c  */
#line 12046 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[(3) - (3)].table));
          }
    break;

  case 1797:
/* Line 1792 of yacc.c  */
#line 12066 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1798:
/* Line 1792 of yacc.c  */
#line 12070 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1799:
/* Line 1792 of yacc.c  */
#line 12074 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1800:
/* Line 1792 of yacc.c  */
#line 12078 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1801:
/* Line 1792 of yacc.c  */
#line 12082 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1802:
/* Line 1792 of yacc.c  */
#line 12086 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1803:
/* Line 1792 of yacc.c  */
#line 12090 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1804:
/* Line 1792 of yacc.c  */
#line 12094 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1805:
/* Line 1792 of yacc.c  */
#line 12098 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1806:
/* Line 1792 of yacc.c  */
#line 12105 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      Lex->show_profile_query_id= 0;
    }
    break;

  case 1807:
/* Line 1792 of yacc.c  */
#line 12109 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
      int error;
      Lex->show_profile_query_id=
        static_cast<my_thread_id>(my_strtoll10((yyvsp[(3) - (3)].lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
    break;

  case 1808:
/* Line 1792 of yacc.c  */
#line 12122 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1810:
/* Line 1792 of yacc.c  */
#line 12133 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[(2) - (2)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[(2) - (2)].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1811:
/* Line 1792 of yacc.c  */
#line 12142 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[(1) - (4)].show_cmd_type), (yyvsp[(3) - (4)].simple_string), (yyvsp[(4) - (4)].wild_or_where).wild, (yyvsp[(4) - (4)].wild_or_where).where);

             MAKE_CMD(p);
           }
    break;

  case 1812:
/* Line 1792 of yacc.c  */
#line 12148 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[(1) - (4)].is_not_empty);
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (Lex->set_wild((yyvsp[(4) - (4)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[(4) - (4)].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1813:
/* Line 1792 of yacc.c  */
#line 12160 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[(2) - (3)].simple_string);
             if (Lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1814:
/* Line 1792 of yacc.c  */
#line 12171 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (Lex->set_wild((yyvsp[(4) - (4)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[(4) - (4)].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
    break;

  case 1815:
/* Line 1792 of yacc.c  */
#line 12182 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1816:
/* Line 1792 of yacc.c  */
#line 12190 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1817:
/* Line 1792 of yacc.c  */
#line 12197 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, (yyvsp[(2) - (3)].lex_str), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
    break;

  case 1818:
/* Line 1792 of yacc.c  */
#line 12205 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->create_info->db_type= NULL; }
    break;

  case 1819:
/* Line 1792 of yacc.c  */
#line 12212 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));

            Item *where= (yyvsp[(6) - (6)].wild_or_where).where;
            LEX_STRING wild= (yyvsp[(6) - (6)].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[(1) - (6)].show_cmd_type), (yyvsp[(4) - (6)].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[(1) - (6)].show_cmd_type), (yyvsp[(4) - (6)].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
    break;

  case 1820:
/* Line 1792 of yacc.c  */
#line 12230 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1821:
/* Line 1792 of yacc.c  */
#line 12234 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1822:
/* Line 1792 of yacc.c  */
#line 12238 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1823:
/* Line 1792 of yacc.c  */
#line 12243 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (6)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 1824:
/* Line 1792 of yacc.c  */
#line 12248 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1825:
/* Line 1792 of yacc.c  */
#line 12253 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(6) - (7)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(6) - (7)].limit_clause));
          }
    break;

  case 1826:
/* Line 1792 of yacc.c  */
#line 12263 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[(1) - (6)].is_not_empty), (yyvsp[(4) - (6)].table), (yyvsp[(6) - (6)].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
    break;

  case 1827:
/* Line 1792 of yacc.c  */
#line 12276 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1828:
/* Line 1792 of yacc.c  */
#line 12283 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
    break;

  case 1829:
/* Line 1792 of yacc.c  */
#line 12291 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
    break;

  case 1830:
/* Line 1792 of yacc.c  */
#line 12299 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
    break;

  case 1831:
/* Line 1792 of yacc.c  */
#line 12307 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(2) - (2)].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
    break;

  case 1832:
/* Line 1792 of yacc.c  */
#line 12315 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
    break;

  case 1833:
/* Line 1792 of yacc.c  */
#line 12323 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(4) - (4)].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[(4) - (4)].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1834:
/* Line 1792 of yacc.c  */
#line 12333 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1835:
/* Line 1792 of yacc.c  */
#line 12355 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[(1) - (2)].is_not_empty);
          }
    break;

  case 1836:
/* Line 1792 of yacc.c  */
#line 12360 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (3)].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1837:
/* Line 1792 of yacc.c  */
#line 12382 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[(2) - (2)].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[(2) - (2)].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1838:
/* Line 1792 of yacc.c  */
#line 12391 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[(2) - (2)].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[(2) - (2)].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1839:
/* Line 1792 of yacc.c  */
#line 12400 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
    break;

  case 1840:
/* Line 1792 of yacc.c  */
#line 12406 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0);
            MAKE_CMD(tmp);
          }
    break;

  case 1841:
/* Line 1792 of yacc.c  */
#line 12411 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[(3) - (3)].lex_user), 0);
            MAKE_CMD(tmp);
          }
    break;

  case 1842:
/* Line 1792 of yacc.c  */
#line 12416 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 1843:
/* Line 1792 of yacc.c  */
#line 12421 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[(3) - (4)].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1844:
/* Line 1792 of yacc.c  */
#line 12427 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1845:
/* Line 1792 of yacc.c  */
#line 12436 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1846:
/* Line 1792 of yacc.c  */
#line 12444 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1847:
/* Line 1792 of yacc.c  */
#line 12448 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1848:
/* Line 1792 of yacc.c  */
#line 12452 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1849:
/* Line 1792 of yacc.c  */
#line 12459 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1850:
/* Line 1792 of yacc.c  */
#line 12466 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1851:
/* Line 1792 of yacc.c  */
#line 12472 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1852:
/* Line 1792 of yacc.c  */
#line 12482 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[(3) - (3)].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[(3) - (3)].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 1853:
/* Line 1792 of yacc.c  */
#line 12492 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1854:
/* Line 1792 of yacc.c  */
#line 12497 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1855:
/* Line 1792 of yacc.c  */
#line 12502 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1856:
/* Line 1792 of yacc.c  */
#line 12507 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
          }
    break;

  case 1857:
/* Line 1792 of yacc.c  */
#line 12516 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1858:
/* Line 1792 of yacc.c  */
#line 12518 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1859:
/* Line 1792 of yacc.c  */
#line 12520 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1864:
/* Line 1792 of yacc.c  */
#line 12534 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1865:
/* Line 1792 of yacc.c  */
#line 12535 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1866:
/* Line 1792 of yacc.c  */
#line 12539 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= 0; }
    break;

  case 1867:
/* Line 1792 of yacc.c  */
#line 12540 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= 1; }
    break;

  case 1868:
/* Line 1792 of yacc.c  */
#line 12544 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= 0; }
    break;

  case 1869:
/* Line 1792 of yacc.c  */
#line 12545 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= 1; }
    break;

  case 1870:
/* Line 1792 of yacc.c  */
#line 12549 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
    break;

  case 1871:
/* Line 1792 of yacc.c  */
#line 12550 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
    break;

  case 1872:
/* Line 1792 of yacc.c  */
#line 12551 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
    break;

  case 1873:
/* Line 1792 of yacc.c  */
#line 12552 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
    break;

  case 1876:
/* Line 1792 of yacc.c  */
#line 12561 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1877:
/* Line 1792 of yacc.c  */
#line 12562 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1878:
/* Line 1792 of yacc.c  */
#line 12566 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1879:
/* Line 1792 of yacc.c  */
#line 12567 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1881:
/* Line 1792 of yacc.c  */
#line 12573 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (Lex->set_wild((yyvsp[(2) - (2)].lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1882:
/* Line 1792 of yacc.c  */
#line 12578 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            Select->set_where_cond((yyvsp[(2) - (2)].item));
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1883:
/* Line 1792 of yacc.c  */
#line 12588 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.wild_or_where)= { NULL_STR, nullptr }; }
    break;

  case 1884:
/* Line 1792 of yacc.c  */
#line 12589 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.wild_or_where)= { (yyvsp[(2) - (2)].lex_str), nullptr}; }
    break;

  case 1885:
/* Line 1792 of yacc.c  */
#line 12590 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.wild_or_where)= { NULL_STR, (yyvsp[(2) - (2)].item)}; }
    break;

  case 1886:
/* Line 1792 of yacc.c  */
#line 12596 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[(2) - (3)].table), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 1887:
/* Line 1792 of yacc.c  */
#line 12603 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[(2) - (3)].explain_format_type), (yyvsp[(3) - (3)].top_level_node));
          }
    break;

  case 1893:
/* Line 1792 of yacc.c  */
#line 12615 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[(3) - (3)].ulong_num)));
          }
    break;

  case 1896:
/* Line 1792 of yacc.c  */
#line 12627 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
          }
    break;

  case 1897:
/* Line 1792 of yacc.c  */
#line 12631 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (is_identifier((yyvsp[(3) - (3)].lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[(3) - (3)].lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1898:
/* Line 1792 of yacc.c  */
#line 12645 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= LEX_STRING{ nullptr, 0 }; }
    break;

  case 1899:
/* Line 1792 of yacc.c  */
#line 12647 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].string) != nullptr)
              (yyval.lex_str)= (yyvsp[(1) - (1)].string)->lex_string();
          }
    break;

  case 1901:
/* Line 1792 of yacc.c  */
#line 12659 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1902:
/* Line 1792 of yacc.c  */
#line 12666 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1903:
/* Line 1792 of yacc.c  */
#line 12671 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[(2) - (2)].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1904:
/* Line 1792 of yacc.c  */
#line 12683 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1906:
/* Line 1792 of yacc.c  */
#line 12688 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1907:
/* Line 1792 of yacc.c  */
#line 12690 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1908:
/* Line 1792 of yacc.c  */
#line 12702 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1909:
/* Line 1792 of yacc.c  */
#line 12710 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1911:
/* Line 1792 of yacc.c  */
#line 12726 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1912:
/* Line 1792 of yacc.c  */
#line 12731 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1913:
/* Line 1792 of yacc.c  */
#line 12733 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1914:
/* Line 1792 of yacc.c  */
#line 12735 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1915:
/* Line 1792 of yacc.c  */
#line 12737 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1916:
/* Line 1792 of yacc.c  */
#line 12739 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1917:
/* Line 1792 of yacc.c  */
#line 12741 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1918:
/* Line 1792 of yacc.c  */
#line 12743 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1919:
/* Line 1792 of yacc.c  */
#line 12745 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1920:
/* Line 1792 of yacc.c  */
#line 12747 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1921:
/* Line 1792 of yacc.c  */
#line 12749 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1922:
/* Line 1792 of yacc.c  */
#line 12751 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1923:
/* Line 1792 of yacc.c  */
#line 12753 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
    break;

  case 1924:
/* Line 1792 of yacc.c  */
#line 12757 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)= NULL; }
    break;

  case 1926:
/* Line 1792 of yacc.c  */
#line 12763 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1927:
/* Line 1792 of yacc.c  */
#line 12768 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1928:
/* Line 1792 of yacc.c  */
#line 12770 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
    break;

  case 1931:
/* Line 1792 of yacc.c  */
#line 12785 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
    break;

  case 1932:
/* Line 1792 of yacc.c  */
#line 12791 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[(1) - (2)].num);
            lex->name= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1933:
/* Line 1792 of yacc.c  */
#line 12799 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1935:
/* Line 1792 of yacc.c  */
#line 12802 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
    break;

  case 1937:
/* Line 1792 of yacc.c  */
#line 12821 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1938:
/* Line 1792 of yacc.c  */
#line 12822 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1939:
/* Line 1792 of yacc.c  */
#line 12826 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1940:
/* Line 1792 of yacc.c  */
#line 12828 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].ulong_num) == 0 || (yyvsp[(2) - (2)].ulong_num) > MAX_LOG_UNIQUE_FN_EXT)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[(2) - (2)].ulong_num), MAX_LOG_UNIQUE_FN_EXT);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 1941:
/* Line 1792 of yacc.c  */
#line 12842 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1942:
/* Line 1792 of yacc.c  */
#line 12848 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1944:
/* Line 1792 of yacc.c  */
#line 12857 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1945:
/* Line 1792 of yacc.c  */
#line 12861 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(2) - (2)].item), &(yyvsp[(2) - (2)].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1946:
/* Line 1792 of yacc.c  */
#line 12875 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            ITEMIZE((yyvsp[(3) - (3)].item), &(yyvsp[(3) - (3)].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1947:
/* Line 1792 of yacc.c  */
#line 12886 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1948:
/* Line 1792 of yacc.c  */
#line 12887 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1949:
/* Line 1792 of yacc.c  */
#line 12888 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1950:
/* Line 1792 of yacc.c  */
#line 12895 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1951:
/* Line 1792 of yacc.c  */
#line 12923 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[(2) - (18)].filetype),  // data_or_xml
                                      (yyvsp[(3) - (18)].lock_type),  // load_data_lock
                                      (yyvsp[(4) - (18)].is_not_empty),  // opt_local
                                      (yyvsp[(6) - (18)].lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[(7) - (18)].on_duplicate),  // opt_duplicate
                                      (yyvsp[(10) - (18)].table), // table_ident
                                      (yyvsp[(11) - (18)].string_list), // opt_use_partition
                                      (yyvsp[(12) - (18)].charset), // opt_load_data_charset
                                      (yyvsp[(13) - (18)].string), // opt_xml_rows_identified_by
                                      (yyvsp[(14) - (18)].field_separators), // opt_field_term
                                      (yyvsp[(15) - (18)].line_separators), // opt_line_term
                                      (yyvsp[(16) - (18)].ulong_num), // opt_ignore_lines
                                      (yyvsp[(17) - (18)].item_list2), // opt_field_or_var_spec
                                      (yyvsp[(18) - (18)].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[(18) - (18)].load_set_list).set_expr_list,
                                      (yyvsp[(18) - (18)].load_set_list).set_expr_str_list);
          }
    break;

  case 1952:
/* Line 1792 of yacc.c  */
#line 12944 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1953:
/* Line 1792 of yacc.c  */
#line 12945 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1954:
/* Line 1792 of yacc.c  */
#line 12949 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1955:
/* Line 1792 of yacc.c  */
#line 12950 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1956:
/* Line 1792 of yacc.c  */
#line 12954 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1957:
/* Line 1792 of yacc.c  */
#line 12955 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 1958:
/* Line 1792 of yacc.c  */
#line 12956 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1959:
/* Line 1792 of yacc.c  */
#line 12960 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
    break;

  case 1961:
/* Line 1792 of yacc.c  */
#line 12965 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
    break;

  case 1962:
/* Line 1792 of yacc.c  */
#line 12966 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
    break;

  case 1963:
/* Line 1792 of yacc.c  */
#line 12970 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators).cleanup(); }
    break;

  case 1964:
/* Line 1792 of yacc.c  */
#line 12971 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.field_separators)= (yyvsp[(2) - (2)].field_separators); }
    break;

  case 1965:
/* Line 1792 of yacc.c  */
#line 12976 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators)= (yyvsp[(1) - (2)].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[(2) - (2)].field_separators));
          }
    break;

  case 1967:
/* Line 1792 of yacc.c  */
#line 12985 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1968:
/* Line 1792 of yacc.c  */
#line 12990 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(4) - (4)].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
    break;

  case 1969:
/* Line 1792 of yacc.c  */
#line 12996 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1970:
/* Line 1792 of yacc.c  */
#line 13001 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1971:
/* Line 1792 of yacc.c  */
#line 13008 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators).cleanup(); }
    break;

  case 1972:
/* Line 1792 of yacc.c  */
#line 13009 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.line_separators)= (yyvsp[(2) - (2)].line_separators); }
    break;

  case 1973:
/* Line 1792 of yacc.c  */
#line 13014 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators)= (yyvsp[(1) - (2)].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[(2) - (2)].line_separators));
          }
    break;

  case 1975:
/* Line 1792 of yacc.c  */
#line 13023 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1976:
/* Line 1792 of yacc.c  */
#line 13028 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1977:
/* Line 1792 of yacc.c  */
#line 13035 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.string)= nullptr; }
    break;

  case 1978:
/* Line 1792 of yacc.c  */
#line 13036 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.string)= (yyvsp[(4) - (4)].string); }
    break;

  case 1979:
/* Line 1792 of yacc.c  */
#line 13040 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 1980:
/* Line 1792 of yacc.c  */
#line 13041 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= atol((yyvsp[(2) - (3)].lex_str).str); }
    break;

  case 1983:
/* Line 1792 of yacc.c  */
#line 13050 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= nullptr; }
    break;

  case 1984:
/* Line 1792 of yacc.c  */
#line 13051 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= (yyvsp[(2) - (3)].item_list2); }
    break;

  case 1985:
/* Line 1792 of yacc.c  */
#line 13052 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item_list2)= nullptr; }
    break;

  case 1986:
/* Line 1792 of yacc.c  */
#line 13057 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= (yyvsp[(1) - (3)].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1987:
/* Line 1792 of yacc.c  */
#line 13063 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1989:
/* Line 1792 of yacc.c  */
#line 13073 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1990:
/* Line 1792 of yacc.c  */
#line 13079 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
    break;

  case 1991:
/* Line 1792 of yacc.c  */
#line 13080 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.load_set_list)= (yyvsp[(2) - (2)].load_set_list); }
    break;

  case 1992:
/* Line 1792 of yacc.c  */
#line 13085 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.load_set_list)= (yyvsp[(1) - (3)].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[(3) - (3)].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[(3) - (3)].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[(3) - (3)].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1993:
/* Line 1792 of yacc.c  */
#line 13093 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[(1) - (1)].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[(1) - (1)].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[(1) - (1)].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1994:
/* Line 1792 of yacc.c  */
#line 13113 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            size_t length= (yylsp[(3) - (3)]).cpp.end - (yylsp[(2) - (3)]).cpp.start;

            if ((yyvsp[(3) - (3)].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[(3) - (3)].item)->item_name.copy((yylsp[(2) - (3)]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[(1) - (3)].item);
            (yyval.load_set_element).set_expr= (yyvsp[(3) - (3)].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[(2) - (3)]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 1995:
/* Line 1792 of yacc.c  */
#line 13134 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 1996:
/* Line 1792 of yacc.c  */
#line 13139 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (1)].lex_str));
            warn_about_deprecated_national(YYTHD);
          }
    break;

  case 1997:
/* Line 1792 of yacc.c  */
#line 13145 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1998:
/* Line 1792 of yacc.c  */
#line 13150 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[(1) - (2)].text_literal), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 1999:
/* Line 1792 of yacc.c  */
#line 13158 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= NEW_PTN String((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2000:
/* Line 1792 of yacc.c  */
#line 13165 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_hex_string::make_hex_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2001:
/* Line 1792 of yacc.c  */
#line 13172 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING s= Item_bin_string::make_bin_str((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2002:
/* Line 1792 of yacc.c  */
#line 13182 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[(1) - (1)]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
    break;

  case 2004:
/* Line 1792 of yacc.c  */
#line 13201 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item_num); }
    break;

  case 2005:
/* Line 1792 of yacc.c  */
#line 13203 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 2006:
/* Line 1792 of yacc.c  */
#line 13213 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].text_literal); }
    break;

  case 2007:
/* Line 1792 of yacc.c  */
#line 13214 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item_num); }
    break;

  case 2009:
/* Line 1792 of yacc.c  */
#line 13217 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
    break;

  case 2010:
/* Line 1792 of yacc.c  */
#line 13229 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("FALSE"), 0, 1);
          }
    break;

  case 2011:
/* Line 1792 of yacc.c  */
#line 13233 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("TRUE"), 1, 1);
          }
    break;

  case 2012:
/* Line 1792 of yacc.c  */
#line 13237 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2013:
/* Line 1792 of yacc.c  */
#line 13241 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2014:
/* Line 1792 of yacc.c  */
#line 13245 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 2015:
/* Line 1792 of yacc.c  */
#line 13249 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[(1) - (2)].charset), (yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 2016:
/* Line 1792 of yacc.c  */
#line 13256 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2017:
/* Line 1792 of yacc.c  */
#line 13260 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2018:
/* Line 1792 of yacc.c  */
#line 13264 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 2019:
/* Line 1792 of yacc.c  */
#line 13268 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, YYCSCL);
          }
    break;

  case 2020:
/* Line 1792 of yacc.c  */
#line 13272 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
          }
    break;

  case 2021:
/* Line 1792 of yacc.c  */
#line 13280 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
    break;

  case 2022:
/* Line 1792 of yacc.c  */
#line 13284 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
    break;

  case 2023:
/* Line 1792 of yacc.c  */
#line 13288 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[(2) - (2)].lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
    break;

  case 2026:
/* Line 1792 of yacc.c  */
#line 13307 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[(1) - (3)].lex_str).str);
          }
    break;

  case 2027:
/* Line 1792 of yacc.c  */
#line 13311 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str);
          }
    break;

  case 2028:
/* Line 1792 of yacc.c  */
#line 13318 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[(1) - (2)].item), (yyvsp[(2) - (2)].order_direction));
          }
    break;

  case 2029:
/* Line 1792 of yacc.c  */
#line 13325 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2031:
/* Line 1792 of yacc.c  */
#line 13333 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2033:
/* Line 1792 of yacc.c  */
#line 13341 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
          }
    break;

  case 2034:
/* Line 1792 of yacc.c  */
#line 13345 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[(1) - (5)].lex_str).str, (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
          }
    break;

  case 2035:
/* Line 1792 of yacc.c  */
#line 13352 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (1)].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2036:
/* Line 1792 of yacc.c  */
#line 13358 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (3)].lex_str)), to_lex_cstring((yyvsp[(3) - (3)].lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2037:
/* Line 1792 of yacc.c  */
#line 13371 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[(1) - (2)].lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2038:
/* Line 1792 of yacc.c  */
#line 13377 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[(1) - (4)].lex_str)),
                                    to_lex_cstring((yyvsp[(3) - (4)].lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2039:
/* Line 1792 of yacc.c  */
#line 13387 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 2040:
/* Line 1792 of yacc.c  */
#line 13389 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                     (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                     (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2041:
/* Line 1792 of yacc.c  */
#line 13419 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 2042:
/* Line 1792 of yacc.c  */
#line 13432 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (strcont((yyvsp[(1) - (1)].lex_str).str, "."))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2043:
/* Line 1792 of yacc.c  */
#line 13445 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2044:
/* Line 1792 of yacc.c  */
#line 13461 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2045:
/* Line 1792 of yacc.c  */
#line 13477 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2046:
/* Line 1792 of yacc.c  */
#line 13493 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2047:
/* Line 1792 of yacc.c  */
#line 13495 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].keyword).str, (yyvsp[(1) - (1)].keyword).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].keyword).length;
          }
    break;

  case 2049:
/* Line 1792 of yacc.c  */
#line 13507 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str).str= YYTHD->strmake((yyvsp[(1) - (1)].keyword).str, (yyvsp[(1) - (1)].keyword).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].keyword).length;
          }
    break;

  case 2050:
/* Line 1792 of yacc.c  */
#line 13516 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2051:
/* Line 1792 of yacc.c  */
#line 13518 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].keyword).str, (yyvsp[(1) - (1)].keyword).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].keyword).length;
          }
    break;

  case 2052:
/* Line 1792 of yacc.c  */
#line 13528 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2053:
/* Line 1792 of yacc.c  */
#line 13529 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2054:
/* Line 1792 of yacc.c  */
#line 13530 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2058:
/* Line 1792 of yacc.c  */
#line 13541 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[(1) - (1)].lex_str), NULL)))
              MYSQL_YYABORT;
          }
    break;

  case 2059:
/* Line 1792 of yacc.c  */
#line 13546 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[(1) - (3)].lex_str), &(yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT;
          }
    break;

  case 2060:
/* Line 1792 of yacc.c  */
#line 13551 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 2061:
/* Line 1792 of yacc.c  */
#line 13565 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[(1) - (1)].lex_str), NULL)))
              MYSQL_YYABORT;
          }
    break;

  case 2062:
/* Line 1792 of yacc.c  */
#line 13570 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[(1) - (3)].lex_str), &(yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT;
          }
    break;

  case 2470:
/* Line 1792 of yacc.c  */
#line 14050 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].start_option_value_list));
          }
    break;

  case 2471:
/* Line 1792 of yacc.c  */
#line 14059 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[(1) - (2)].option_value_no_option_type), (yylsp[(1) - (2)]), (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2472:
/* Line 1792 of yacc.c  */
#line 14063 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[(2) - (2)].transaction_characteristics), (yylsp[(2) - (2)]));
          }
    break;

  case 2473:
/* Line 1792 of yacc.c  */
#line 14067 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].start_option_value_list_following_option_type));
          }
    break;

  case 2474:
/* Line 1792 of yacc.c  */
#line 14071 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[(3) - (3)].simple_string), (yylsp[(3) - (3)]));
          }
    break;

  case 2475:
/* Line 1792 of yacc.c  */
#line 14075 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[(3) - (5)].lex_user), (yyvsp[(5) - (5)].simple_string), (yylsp[(5) - (5)]));
          }
    break;

  case 2476:
/* Line 1792 of yacc.c  */
#line 14082 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[(3) - (3)].user_list));
          }
    break;

  case 2477:
/* Line 1792 of yacc.c  */
#line 14086 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2478:
/* Line 1792 of yacc.c  */
#line 14091 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2479:
/* Line 1792 of yacc.c  */
#line 14096 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), (yyvsp[(4) - (6)].user_list),
                                                    role_enum::ROLE_NAME);
          }
    break;

  case 2480:
/* Line 1792 of yacc.c  */
#line 14101 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
    break;

  case 2481:
/* Line 1792 of yacc.c  */
#line 14106 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[(6) - (6)].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
    break;

  case 2482:
/* Line 1792 of yacc.c  */
#line 14111 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[(4) - (4)].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
    break;

  case 2483:
/* Line 1792 of yacc.c  */
#line 14118 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.user_list)= NULL; }
    break;

  case 2484:
/* Line 1792 of yacc.c  */
#line 14119 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.user_list)= (yyvsp[(2) - (2)].user_list); }
    break;

  case 2485:
/* Line 1792 of yacc.c  */
#line 14124 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[(4) - (4)].lex_str)), nullptr);
          }
    break;

  case 2486:
/* Line 1792 of yacc.c  */
#line 14128 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[(4) - (6)].lex_str)), (yyvsp[(6) - (6)].thread_id_list_type));
          }
    break;

  case 2487:
/* Line 1792 of yacc.c  */
#line 14135 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[(1) - (1)].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2488:
/* Line 1792 of yacc.c  */
#line 14141 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.thread_id_list_type)= (yyvsp[(1) - (3)].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[(3) - (3)].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2489:
/* Line 1792 of yacc.c  */
#line 14149 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.thread_id_list_type)= (yyvsp[(1) - (1)].thread_id_list_type); }
    break;

  case 2490:
/* Line 1792 of yacc.c  */
#line 14155 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[(1) - (2)].option_value_following_option_type),
                                                                          (yylsp[(1) - (2)]),
                                                                          (yyvsp[(2) - (2)].option_value_list));
          }
    break;

  case 2491:
/* Line 1792 of yacc.c  */
#line 14162 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[(2) - (2)].transaction_characteristics),
                                                                           (yylsp[(2) - (2)]));
          }
    break;

  case 2492:
/* Line 1792 of yacc.c  */
#line 14171 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= NULL; }
    break;

  case 2493:
/* Line 1792 of yacc.c  */
#line 14172 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.option_value_list)= (yyvsp[(2) - (2)].option_value_list); }
    break;

  case 2494:
/* Line 1792 of yacc.c  */
#line 14178 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[(0) - (1)]), (yyvsp[(1) - (1)].node), (yylsp[(1) - (1)]));
          }
    break;

  case 2495:
/* Line 1792 of yacc.c  */
#line 14182 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[(1) - (3)].option_value_list), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].node), (yylsp[(3) - (3)]));
          }
    break;

  case 2496:
/* Line 1792 of yacc.c  */
#line 14190 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[(1) - (2)].var_type), (yyvsp[(2) - (2)].option_value_following_option_type));
          }
    break;

  case 2497:
/* Line 1792 of yacc.c  */
#line 14193 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.node)= (yyvsp[(1) - (1)].option_value_no_option_type); }
    break;

  case 2498:
/* Line 1792 of yacc.c  */
#line 14197 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2499:
/* Line 1792 of yacc.c  */
#line 14198 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST; }
    break;

  case 2500:
/* Line 1792 of yacc.c  */
#line 14199 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
    break;

  case 2501:
/* Line 1792 of yacc.c  */
#line 14200 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2502:
/* Line 1792 of yacc.c  */
#line 14201 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2503:
/* Line 1792 of yacc.c  */
#line 14205 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2504:
/* Line 1792 of yacc.c  */
#line 14206 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2505:
/* Line 1792 of yacc.c  */
#line 14207 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2506:
/* Line 1792 of yacc.c  */
#line 14208 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2507:
/* Line 1792 of yacc.c  */
#line 14212 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2508:
/* Line 1792 of yacc.c  */
#line 14213 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2509:
/* Line 1792 of yacc.c  */
#line 14214 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2510:
/* Line 1792 of yacc.c  */
#line 14215 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2511:
/* Line 1792 of yacc.c  */
#line 14219 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2512:
/* Line 1792 of yacc.c  */
#line 14220 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_PERSIST; }
    break;

  case 2513:
/* Line 1792 of yacc.c  */
#line 14221 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
    break;

  case 2514:
/* Line 1792 of yacc.c  */
#line 14222 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2515:
/* Line 1792 of yacc.c  */
#line 14223 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2516:
/* Line 1792 of yacc.c  */
#line 14224 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2517:
/* Line 1792 of yacc.c  */
#line 14230 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item));
          }
    break;

  case 2518:
/* Line 1792 of yacc.c  */
#line 14240 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[(1) - (3)].internal_variable_name), (yyvsp[(3) - (3)].item), (yylsp[(3) - (3)]));
          }
    break;

  case 2519:
/* Line 1792 of yacc.c  */
#line 14244 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
          }
    break;

  case 2520:
/* Line 1792 of yacc.c  */
#line 14249 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[(3) - (6)].var_type), (yyvsp[(4) - (6)].internal_variable_name), (yyvsp[(6) - (6)].item));
          }
    break;

  case 2521:
/* Line 1792 of yacc.c  */
#line 14253 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[(2) - (2)].charset));
          }
    break;

  case 2522:
/* Line 1792 of yacc.c  */
#line 14257 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[(2) - (3)]));
          }
    break;

  case 2523:
/* Line 1792 of yacc.c  */
#line 14264 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[(2) - (3)].charset), (yyvsp[(3) - (3)].charset));
          }
    break;

  case 2524:
/* Line 1792 of yacc.c  */
#line 14268 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
    break;

  case 2525:
/* Line 1792 of yacc.c  */
#line 14275 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d((yyvsp[(1) - (1)].lex_str));
          }
    break;

  case 2526:
/* Line 1792 of yacc.c  */
#line 14279 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2527:
/* Line 1792 of yacc.c  */
#line 14283 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2528:
/* Line 1792 of yacc.c  */
#line 14290 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].transaction_access_mode), (yyvsp[(2) - (2)].isolation_level));
          }
    break;

  case 2529:
/* Line 1792 of yacc.c  */
#line 14294 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[(1) - (2)].isolation_level), (yyvsp[(2) - (2)].transaction_access_mode));
          }
    break;

  case 2530:
/* Line 1792 of yacc.c  */
#line 14301 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[(1) - (1)].num));
          }
    break;

  case 2531:
/* Line 1792 of yacc.c  */
#line 14307 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= NULL; }
    break;

  case 2532:
/* Line 1792 of yacc.c  */
#line 14308 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.transaction_access_mode)= (yyvsp[(2) - (2)].transaction_access_mode); }
    break;

  case 2533:
/* Line 1792 of yacc.c  */
#line 14313 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[(3) - (3)].tx_isolation));
          }
    break;

  case 2534:
/* Line 1792 of yacc.c  */
#line 14319 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= NULL; }
    break;

  case 2535:
/* Line 1792 of yacc.c  */
#line 14320 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.isolation_level)= (yyvsp[(2) - (2)].isolation_level); }
    break;

  case 2536:
/* Line 1792 of yacc.c  */
#line 14324 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2537:
/* Line 1792 of yacc.c  */
#line 14325 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2538:
/* Line 1792 of yacc.c  */
#line 14329 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2539:
/* Line 1792 of yacc.c  */
#line 14330 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2540:
/* Line 1792 of yacc.c  */
#line 14331 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2541:
/* Line 1792 of yacc.c  */
#line 14332 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2542:
/* Line 1792 of yacc.c  */
#line 14337 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2544:
/* Line 1792 of yacc.c  */
#line 14346 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 2545:
/* Line 1792 of yacc.c  */
#line 14348 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
    break;

  case 2546:
/* Line 1792 of yacc.c  */
#line 14352 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
    break;

  case 2547:
/* Line 1792 of yacc.c  */
#line 14356 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
    break;

  case 2548:
/* Line 1792 of yacc.c  */
#line 14360 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
    break;

  case 2549:
/* Line 1792 of yacc.c  */
#line 14364 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
    break;

  case 2550:
/* Line 1792 of yacc.c  */
#line 14373 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2551:
/* Line 1792 of yacc.c  */
#line 14384 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2552:
/* Line 1792 of yacc.c  */
#line 14386 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2557:
/* Line 1792 of yacc.c  */
#line 14406 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
    break;

  case 2558:
/* Line 1792 of yacc.c  */
#line 14433 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2559:
/* Line 1792 of yacc.c  */
#line 14434 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2560:
/* Line 1792 of yacc.c  */
#line 14436 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2561:
/* Line 1792 of yacc.c  */
#line 14440 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2562:
/* Line 1792 of yacc.c  */
#line 14445 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2563:
/* Line 1792 of yacc.c  */
#line 14456 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2564:
/* Line 1792 of yacc.c  */
#line 14458 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2565:
/* Line 1792 of yacc.c  */
#line 14469 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
    break;

  case 2566:
/* Line 1792 of yacc.c  */
#line 14477 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
    break;

  case 2567:
/* Line 1792 of yacc.c  */
#line 14484 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= NEW_PTN PT_alter_instance((yyvsp[(3) - (3)].alter_instance_action));
          }
    break;

  case 2568:
/* Line 1792 of yacc.c  */
#line 14491 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (is_identifier((yyvsp[(2) - (4)].lex_str), "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[(2) - (4)]));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2569:
/* Line 1792 of yacc.c  */
#line 14510 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_cstr));
          }
    break;

  case 2570:
/* Line 1792 of yacc.c  */
#line 14514 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[(2) - (3)].lex_str)));
          }
    break;

  case 2571:
/* Line 1792 of yacc.c  */
#line 14523 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[(2) - (6)].lex_str)), (yyvsp[(4) - (6)].ha_read_mode), (yyvsp[(5) - (6)].item), (yyvsp[(6) - (6)].limit_clause));
          }
    break;

  case 2572:
/* Line 1792 of yacc.c  */
#line 14533 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[(2) - (7)].lex_str)),
                                              to_lex_cstring((yyvsp[(4) - (7)].lex_str)), (yyvsp[(5) - (7)].ha_read_mode), (yyvsp[(6) - (7)].item), (yyvsp[(7) - (7)].limit_clause));
          }
    break;

  case 2573:
/* Line 1792 of yacc.c  */
#line 14545 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[(2) - (10)].lex_str)),
                                                    to_lex_cstring((yyvsp[(4) - (10)].lex_str)),
                                                    (yyvsp[(5) - (10)].ha_rkey_mode), (yyvsp[(7) - (10)].item_list2), (yyvsp[(9) - (10)].item), (yyvsp[(10) - (10)].limit_clause));
          }
    break;

  case 2574:
/* Line 1792 of yacc.c  */
#line 14553 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
    break;

  case 2575:
/* Line 1792 of yacc.c  */
#line 14554 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
    break;

  case 2576:
/* Line 1792 of yacc.c  */
#line 14558 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
    break;

  case 2577:
/* Line 1792 of yacc.c  */
#line 14559 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
    break;

  case 2578:
/* Line 1792 of yacc.c  */
#line 14560 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
    break;

  case 2579:
/* Line 1792 of yacc.c  */
#line 14561 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
    break;

  case 2580:
/* Line 1792 of yacc.c  */
#line 14565 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2581:
/* Line 1792 of yacc.c  */
#line 14566 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2582:
/* Line 1792 of yacc.c  */
#line 14567 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2583:
/* Line 1792 of yacc.c  */
#line 14568 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2584:
/* Line 1792 of yacc.c  */
#line 14569 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2585:
/* Line 1792 of yacc.c  */
#line 14576 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[(2) - (4)].role_or_privilege_list), (yyvsp[(4) - (4)].user_list));
            MAKE_CMD(tmp);
          }
    break;

  case 2586:
/* Line 1792 of yacc.c  */
#line 14581 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[(2) - (7)].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[(4) - (7)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(4) - (7)].acl_type));
            lex->users_list= *(yyvsp[(7) - (7)].user_list);
          }
    break;

  case 2587:
/* Line 1792 of yacc.c  */
#line 14596 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2588:
/* Line 1792 of yacc.c  */
#line 14601 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[(6) - (9)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(6) - (9)].acl_type));
            lex->users_list= *(yyvsp[(9) - (9)].user_list);
          }
    break;

  case 2589:
/* Line 1792 of yacc.c  */
#line 14615 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[(8) - (8)].user_list);
          }
    break;

  case 2590:
/* Line 1792 of yacc.c  */
#line 14620 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[(6) - (6)].user_list);
            lex->users_list.push_front ((yyvsp[(4) - (6)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2591:
/* Line 1792 of yacc.c  */
#line 14631 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[(2) - (5)].role_or_privilege_list), (yyvsp[(4) - (5)].user_list), (yyvsp[(5) - (5)].is_not_empty));
            MAKE_CMD(tmp);
          }
    break;

  case 2592:
/* Line 1792 of yacc.c  */
#line 14637 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[(2) - (8)].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[(4) - (8)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(4) - (8)].acl_type));
            lex->users_list= *(yyvsp[(7) - (8)].user_list);
          }
    break;

  case 2593:
/* Line 1792 of yacc.c  */
#line 14652 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2594:
/* Line 1792 of yacc.c  */
#line 14657 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[(6) - (10)].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[(6) - (10)].acl_type));
            lex->users_list= *(yyvsp[(9) - (10)].user_list);
          }
    break;

  case 2595:
/* Line 1792 of yacc.c  */
#line 14669 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[(7) - (7)].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[(6) - (7)].user_list);
            lex->users_list.push_front ((yyvsp[(4) - (7)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2596:
/* Line 1792 of yacc.c  */
#line 14681 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::TABLE; }
    break;

  case 2597:
/* Line 1792 of yacc.c  */
#line 14682 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::TABLE; }
    break;

  case 2598:
/* Line 1792 of yacc.c  */
#line 14683 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::FUNCTION; }
    break;

  case 2599:
/* Line 1792 of yacc.c  */
#line 14684 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
    break;

  case 2602:
/* Line 1792 of yacc.c  */
#line 14694 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[(1) - (1)].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2603:
/* Line 1792 of yacc.c  */
#line 14700 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.role_or_privilege_list)= (yyvsp[(1) - (3)].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[(3) - (3)].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2604:
/* Line 1792 of yacc.c  */
#line 14709 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (2)].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].lex_str));
          }
    break;

  case 2605:
/* Line 1792 of yacc.c  */
#line 14716 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str)); }
    break;

  case 2606:
/* Line 1792 of yacc.c  */
#line 14718 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), SELECT_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2607:
/* Line 1792 of yacc.c  */
#line 14720 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), INSERT_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2608:
/* Line 1792 of yacc.c  */
#line 14722 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), UPDATE_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2609:
/* Line 1792 of yacc.c  */
#line 14724 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), REFERENCES_ACL, (yyvsp[(2) - (2)].lex_cstring_list)); }
    break;

  case 2610:
/* Line 1792 of yacc.c  */
#line 14726 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), DELETE_ACL); }
    break;

  case 2611:
/* Line 1792 of yacc.c  */
#line 14728 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), 0); }
    break;

  case 2612:
/* Line 1792 of yacc.c  */
#line 14730 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), INDEX_ACL); }
    break;

  case 2613:
/* Line 1792 of yacc.c  */
#line 14732 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), ALTER_ACL); }
    break;

  case 2614:
/* Line 1792 of yacc.c  */
#line 14734 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), CREATE_ACL); }
    break;

  case 2615:
/* Line 1792 of yacc.c  */
#line 14736 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), DROP_ACL); }
    break;

  case 2616:
/* Line 1792 of yacc.c  */
#line 14738 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), EXECUTE_ACL); }
    break;

  case 2617:
/* Line 1792 of yacc.c  */
#line 14740 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), RELOAD_ACL); }
    break;

  case 2618:
/* Line 1792 of yacc.c  */
#line 14742 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), SHUTDOWN_ACL); }
    break;

  case 2619:
/* Line 1792 of yacc.c  */
#line 14744 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), PROCESS_ACL); }
    break;

  case 2620:
/* Line 1792 of yacc.c  */
#line 14746 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), FILE_ACL); }
    break;

  case 2621:
/* Line 1792 of yacc.c  */
#line 14748 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
    break;

  case 2622:
/* Line 1792 of yacc.c  */
#line 14753 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), SHOW_DB_ACL); }
    break;

  case 2623:
/* Line 1792 of yacc.c  */
#line 14755 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { 
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
    break;

  case 2624:
/* Line 1792 of yacc.c  */
#line 14769 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (3)]), CREATE_TMP_ACL); }
    break;

  case 2625:
/* Line 1792 of yacc.c  */
#line 14771 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), LOCK_TABLES_ACL); }
    break;

  case 2626:
/* Line 1792 of yacc.c  */
#line 14773 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), REPL_SLAVE_ACL); }
    break;

  case 2627:
/* Line 1792 of yacc.c  */
#line 14775 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), REPL_CLIENT_ACL); }
    break;

  case 2628:
/* Line 1792 of yacc.c  */
#line 14777 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_VIEW_ACL); }
    break;

  case 2629:
/* Line 1792 of yacc.c  */
#line 14779 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), SHOW_VIEW_ACL); }
    break;

  case 2630:
/* Line 1792 of yacc.c  */
#line 14781 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_PROC_ACL); }
    break;

  case 2631:
/* Line 1792 of yacc.c  */
#line 14783 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), ALTER_PROC_ACL); }
    break;

  case 2632:
/* Line 1792 of yacc.c  */
#line 14785 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_USER_ACL); }
    break;

  case 2633:
/* Line 1792 of yacc.c  */
#line 14787 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), EVENT_ACL); }
    break;

  case 2634:
/* Line 1792 of yacc.c  */
#line 14789 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (1)]), TRIGGER_ACL); }
    break;

  case 2635:
/* Line 1792 of yacc.c  */
#line 14791 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_TABLESPACE_ACL); }
    break;

  case 2636:
/* Line 1792 of yacc.c  */
#line 14793 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), CREATE_ROLE_ACL); }
    break;

  case 2637:
/* Line 1792 of yacc.c  */
#line 14795 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[(1) - (2)]), DROP_ROLE_ACL); }
    break;

  case 2638:
/* Line 1792 of yacc.c  */
#line 14799 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2639:
/* Line 1792 of yacc.c  */
#line 14800 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2644:
/* Line 1792 of yacc.c  */
#line 14815 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2645:
/* Line 1792 of yacc.c  */
#line 14825 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2646:
/* Line 1792 of yacc.c  */
#line 14835 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2647:
/* Line 1792 of yacc.c  */
#line 14848 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2648:
/* Line 1792 of yacc.c  */
#line 14862 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2649:
/* Line 1792 of yacc.c  */
#line 14874 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2650:
/* Line 1792 of yacc.c  */
#line 14886 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2651:
/* Line 1792 of yacc.c  */
#line 14898 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= new (*THR_MALLOC) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2652:
/* Line 1792 of yacc.c  */
#line 14904 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(1) - (3)].user_list);
            if ((yyval.user_list)->push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2653:
/* Line 1792 of yacc.c  */
#line 14913 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= new (*THR_MALLOC) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2654:
/* Line 1792 of yacc.c  */
#line 14919 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_list)= (yyvsp[(1) - (3)].user_list);
            if ((yyval.user_list)->push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2655:
/* Line 1792 of yacc.c  */
#line 14928 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2656:
/* Line 1792 of yacc.c  */
#line 14933 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2657:
/* Line 1792 of yacc.c  */
#line 14941 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->auth.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->auth.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2658:
/* Line 1792 of yacc.c  */
#line 14949 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin.str= (yyvsp[(4) - (4)].lex_str).str;
            (yyvsp[(1) - (4)].lex_user)->plugin.length= (yyvsp[(4) - (4)].lex_str).length;
            (yyvsp[(1) - (4)].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_with_clause= true;
          }
    break;

  case 2659:
/* Line 1792 of yacc.c  */
#line 14957 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_authentication_string_clause= true;
          }
    break;

  case 2660:
/* Line 1792 of yacc.c  */
#line 14967 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin.str= (yyvsp[(4) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->plugin.length= (yyvsp[(4) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->auth.str= (yyvsp[(6) - (6)].lex_str).str;
            (yyvsp[(1) - (6)].lex_user)->auth.length= (yyvsp[(6) - (6)].lex_str).length;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2661:
/* Line 1792 of yacc.c  */
#line 14978 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user);
            (yyvsp[(1) - (1)].lex_user)->auth= NULL_CSTR;
          }
    break;

  case 2662:
/* Line 1792 of yacc.c  */
#line 14985 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_cstring_list)= NULL; }
    break;

  case 2663:
/* Line 1792 of yacc.c  */
#line 14986 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.lex_cstring_list)= (yyvsp[(2) - (3)].lex_cstring_list); }
    break;

  case 2664:
/* Line 1792 of yacc.c  */
#line 14991 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[(1) - (1)].lex_str))))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2665:
/* Line 1792 of yacc.c  */
#line 14997 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_cstring_list)= (yyvsp[(1) - (3)].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[(3) - (3)].lex_str))))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2667:
/* Line 1792 of yacc.c  */
#line 15007 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2668:
/* Line 1792 of yacc.c  */
#line 15011 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2669:
/* Line 1792 of yacc.c  */
#line 15015 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2670:
/* Line 1792 of yacc.c  */
#line 15019 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2671:
/* Line 1792 of yacc.c  */
#line 15025 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2672:
/* Line 1792 of yacc.c  */
#line 15027 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2673:
/* Line 1792 of yacc.c  */
#line 15031 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2674:
/* Line 1792 of yacc.c  */
#line 15032 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2675:
/* Line 1792 of yacc.c  */
#line 15037 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2676:
/* Line 1792 of yacc.c  */
#line 15042 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2677:
/* Line 1792 of yacc.c  */
#line 15046 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2678:
/* Line 1792 of yacc.c  */
#line 15047 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2679:
/* Line 1792 of yacc.c  */
#line 15052 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2680:
/* Line 1792 of yacc.c  */
#line 15053 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2681:
/* Line 1792 of yacc.c  */
#line 15054 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2682:
/* Line 1792 of yacc.c  */
#line 15059 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2683:
/* Line 1792 of yacc.c  */
#line 15060 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2684:
/* Line 1792 of yacc.c  */
#line 15061 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2685:
/* Line 1792 of yacc.c  */
#line 15065 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2686:
/* Line 1792 of yacc.c  */
#line 15066 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2687:
/* Line 1792 of yacc.c  */
#line 15071 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2688:
/* Line 1792 of yacc.c  */
#line 15083 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2689:
/* Line 1792 of yacc.c  */
#line 15093 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2690:
/* Line 1792 of yacc.c  */
#line 15102 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2691:
/* Line 1792 of yacc.c  */
#line 15111 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2692:
/* Line 1792 of yacc.c  */
#line 15124 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2693:
/* Line 1792 of yacc.c  */
#line 15125 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2694:
/* Line 1792 of yacc.c  */
#line 15126 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2697:
/* Line 1792 of yacc.c  */
#line 15139 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[(1) - (1)].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[(1) - (1)]));

            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[(1) - (1)].query_expression));
          }
    break;

  case 2698:
/* Line 1792 of yacc.c  */
#line 15151 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
    break;

  case 2699:
/* Line 1792 of yacc.c  */
#line 15152 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
    break;

  case 2700:
/* Line 1792 of yacc.c  */
#line 15153 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
    break;

  case 2701:
/* Line 1792 of yacc.c  */
#line 15154 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
    break;

  case 2702:
/* Line 1792 of yacc.c  */
#line 15155 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
    break;

  case 2703:
/* Line 1792 of yacc.c  */
#line 15156 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
    break;

  case 2704:
/* Line 1792 of yacc.c  */
#line 15157 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= OPTION_FOUND_ROWS; }
    break;

  case 2705:
/* Line 1792 of yacc.c  */
#line 15158 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= SELECT_ALL; }
    break;

  case 2706:
/* Line 1792 of yacc.c  */
#line 15169 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2707:
/* Line 1792 of yacc.c  */
#line 15179 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2708:
/* Line 1792 of yacc.c  */
#line 15181 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2709:
/* Line 1792 of yacc.c  */
#line 15183 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2723:
/* Line 1792 of yacc.c  */
#line 15216 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2724:
/* Line 1792 of yacc.c  */
#line 15230 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2725:
/* Line 1792 of yacc.c  */
#line 15243 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2726:
/* Line 1792 of yacc.c  */
#line 15245 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2727:
/* Line 1792 of yacc.c  */
#line 15247 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2728:
/* Line 1792 of yacc.c  */
#line 15252 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
    break;

  case 2729:
/* Line 1792 of yacc.c  */
#line 15257 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2730:
/* Line 1792 of yacc.c  */
#line 15259 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2731:
/* Line 1792 of yacc.c  */
#line 15261 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
    break;

  case 2732:
/* Line 1792 of yacc.c  */
#line 15266 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2733:
/* Line 1792 of yacc.c  */
#line 15268 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2734:
/* Line 1792 of yacc.c  */
#line 15270 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2735:
/* Line 1792 of yacc.c  */
#line 15275 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[(4) - (4)].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[(4) - (4)].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[(4) - (4)].simple_ident_list)), sizeof((yyvsp[(4) - (4)].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
    break;

  case 2737:
/* Line 1792 of yacc.c  */
#line 15315 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[(1) - (2)].query_expression));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[(2) - (2)].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[(2) - (2)]).cpp.end - (yylsp[(1) - (2)]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[(1) - (2)]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
    break;

  case 2738:
/* Line 1792 of yacc.c  */
#line 15365 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_NONE; }
    break;

  case 2739:
/* Line 1792 of yacc.c  */
#line 15366 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_CASCADED; }
    break;

  case 2740:
/* Line 1792 of yacc.c  */
#line 15367 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_CASCADED; }
    break;

  case 2741:
/* Line 1792 of yacc.c  */
#line 15368 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= VIEW_CHECK_LOCAL; }
    break;

  case 2742:
/* Line 1792 of yacc.c  */
#line 15379 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
    break;

  case 2743:
/* Line 1792 of yacc.c  */
#line 15381 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
    break;

  case 2744:
/* Line 1792 of yacc.c  */
#line 15386 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
    break;

  case 2745:
/* Line 1792 of yacc.c  */
#line 15392 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[(1) - (2)].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length };
            }
    break;

  case 2746:
/* Line 1792 of yacc.c  */
#line 15409 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[(2) - (10)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[(3) - (10)].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[(4) - (10)].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[(10) - (10)].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[(10) - (10)].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[(1) - (10)]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[(6) - (10)]).cpp.start);
            lex->ident.length= (yylsp[(8) - (10)]).cpp.start - (yylsp[(6) - (10)]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[(2) - (10)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[(10) - (10)]).cpp.end);
          }
    break;

  case 2747:
/* Line 1792 of yacc.c  */
#line 15441 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (12)].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
    break;

  case 2748:
/* Line 1792 of yacc.c  */
#line 15478 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[(2) - (7)]).cpp.start;
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2749:
/* Line 1792 of yacc.c  */
#line 15496 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[(2) - (6)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(2) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[(1) - (6)]).cpp.start;
            lex->udf.name = (yyvsp[(2) - (6)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(4) - (6)].num);
            lex->udf.dl=(yyvsp[(6) - (6)].lex_str).str;
          }
    break;

  case 2750:
/* Line 1792 of yacc.c  */
#line 15518 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).cpp.start;
            lex->spname= (yyvsp[(2) - (3)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[(3) - (3)]).cpp.end);
          }
    break;

  case 2751:
/* Line 1792 of yacc.c  */
#line 15542 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(6) - (6)]).cpp.start);
          }
    break;

  case 2752:
/* Line 1792 of yacc.c  */
#line 15548 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[(9) - (10)].type));
            enum_field_types field_type= (yyvsp[(9) - (10)].type)->type;
            const CHARSET_INFO *cs= (yyvsp[(9) - (10)].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[(10) - (10)].charset)))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[(9) - (10)].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[(9) - (10)].type)->get_length(), (yyvsp[(9) - (10)].type)->get_dec(),
                                            (yyvsp[(9) - (10)].type)->get_type_flags(), NULL, NULL, &NULL_STR, 0,
                                            (yyvsp[(9) - (10)].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[(10) - (10)].charset) != nullptr,
                                            (yyvsp[(9) - (10)].type)->get_uint_geom_type(), nullptr,
                                            {}))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2753:
/* Line 1792 of yacc.c  */
#line 15589 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2754:
/* Line 1792 of yacc.c  */
#line 15597 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 2755:
/* Line 1792 of yacc.c  */
#line 15656 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[(2) - (2)]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[(2) - (2)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
    break;

  case 2756:
/* Line 1792 of yacc.c  */
#line 15676 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[(4) - (4)]).cpp.end);
          }
    break;

  case 2757:
/* Line 1792 of yacc.c  */
#line 15681 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(7) - (7)]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2758:
/* Line 1792 of yacc.c  */
#line 15689 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
    break;

  case 2759:
/* Line 1792 of yacc.c  */
#line 15697 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 2760:
/* Line 1792 of yacc.c  */
#line 15711 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2761:
/* Line 1792 of yacc.c  */
#line 15716 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2762:
/* Line 1792 of yacc.c  */
#line 15721 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2763:
/* Line 1792 of yacc.c  */
#line 15726 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[(3) - (4)].xid), (yyvsp[(4) - (4)].xa_option_type));
          }
    break;

  case 2764:
/* Line 1792 of yacc.c  */
#line 15731 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[(3) - (3)].xid));
          }
    break;

  case 2765:
/* Line 1792 of yacc.c  */
#line 15736 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[(3) - (3)].is_not_empty));
          }
    break;

  case 2766:
/* Line 1792 of yacc.c  */
#line 15743 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2767:
/* Line 1792 of yacc.c  */
#line 15744 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2768:
/* Line 1792 of yacc.c  */
#line 15748 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
    break;

  case 2769:
/* Line 1792 of yacc.c  */
#line 15757 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2770:
/* Line 1792 of yacc.c  */
#line 15767 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            // check for overwflow of xid format id 
            bool format_id_overflow_detected= ((yyvsp[(5) - (5)].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
            (yyval.xid)= xid;
          }
    break;

  case 2771:
/* Line 1792 of yacc.c  */
#line 15784 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2772:
/* Line 1792 of yacc.c  */
#line 15785 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2773:
/* Line 1792 of yacc.c  */
#line 15789 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2774:
/* Line 1792 of yacc.c  */
#line 15790 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_JOIN;        }
    break;

  case 2775:
/* Line 1792 of yacc.c  */
#line 15791 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_RESUME;      }
    break;

  case 2776:
/* Line 1792 of yacc.c  */
#line 15795 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2777:
/* Line 1792 of yacc.c  */
#line 15796 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
    break;

  case 2778:
/* Line 1792 of yacc.c  */
#line 15801 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_NONE;        }
    break;

  case 2779:
/* Line 1792 of yacc.c  */
#line 15803 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_SUSPEND;     }
    break;

  case 2780:
/* Line 1792 of yacc.c  */
#line 15805 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
    break;

  case 2781:
/* Line 1792 of yacc.c  */
#line 15810 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (*THR_MALLOC) Sql_cmd_install_plugin((yyvsp[(3) - (5)].lex_str), (yyvsp[(5) - (5)].lex_str));
          }
    break;

  case 2782:
/* Line 1792 of yacc.c  */
#line 15816 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (*THR_MALLOC) Sql_cmd_install_component((yyvsp[(3) - (3)].lex_str_list));
          }
    break;

  case 2783:
/* Line 1792 of yacc.c  */
#line 15825 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (*THR_MALLOC) Sql_cmd_uninstall_plugin((yyvsp[(3) - (3)].lex_str));
          }
    break;

  case 2784:
/* Line 1792 of yacc.c  */
#line 15831 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (*THR_MALLOC) Sql_cmd_uninstall_component((yyvsp[(3) - (3)].lex_str_list));
          }
    break;

  case 2785:
/* Line 1792 of yacc.c  */
#line 15840 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[(1) - (1)].lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2786:
/* Line 1792 of yacc.c  */
#line 15846 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_list)= (yyvsp[(1) - (3)].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[(3) - (3)].lex_str)))
              MYSQL_YYABORT; // OOM
          }
    break;

  case 2787:
/* Line 1792 of yacc.c  */
#line 15855 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[(4) - (4)].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
    break;

  case 2788:
/* Line 1792 of yacc.c  */
#line 15874 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone_local((yyvsp[(6) - (6)].lex_str).str);
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 2789:
/* Line 1792 of yacc.c  */
#line 15882 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone_remote((yyvsp[(3) - (7)].is_not_empty), (yyvsp[(7) - (7)].lex_str).str);
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 2790:
/* Line 1792 of yacc.c  */
#line 15891 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2791:
/* Line 1792 of yacc.c  */
#line 15892 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2792:
/* Line 1792 of yacc.c  */
#line 15896 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
    break;

  case 2793:
/* Line 1792 of yacc.c  */
#line 15897 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
    break;

  case 2794:
/* Line 1792 of yacc.c  */
#line 15902 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
    break;

  case 2795:
/* Line 1792 of yacc.c  */
#line 15908 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[(3) - (3)].resource_group_vcpu_list_type); }
    break;

  case 2796:
/* Line 1792 of yacc.c  */
#line 15913 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            resourcegroups::Range r((yyvsp[(1) - (1)].vcpu_range_type).start, (yyvsp[(1) - (1)].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
    break;

  case 2797:
/* Line 1792 of yacc.c  */
#line 15920 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            resourcegroups::Range r((yyvsp[(3) - (3)].vcpu_range_type).start, (yyvsp[(3) - (3)].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[(1) - (3)].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
    break;

  case 2798:
/* Line 1792 of yacc.c  */
#line 15930 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto cpu_id= my_strtoull((yyvsp[(1) - (1)].lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
    break;

  case 2799:
/* Line 1792 of yacc.c  */
#line 15937 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            auto start= my_strtoull((yyvsp[(1) - (3)].lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[(3) - (3)].lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
    break;

  case 2800:
/* Line 1792 of yacc.c  */
#line 15949 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[(1) - (1)].lex_str).str, nullptr, 10)); }
    break;

  case 2801:
/* Line 1792 of yacc.c  */
#line 15950 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[(2) - (2)].lex_str).str, nullptr, 10)); }
    break;

  case 2802:
/* Line 1792 of yacc.c  */
#line 15954 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.resource_group_priority_type).is_default= true; }
    break;

  case 2803:
/* Line 1792 of yacc.c  */
#line 15956 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[(3) - (3)].num);
          }
    break;

  case 2804:
/* Line 1792 of yacc.c  */
#line 15963 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.resource_group_state_type).is_default= true; }
    break;

  case 2805:
/* Line 1792 of yacc.c  */
#line 15965 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
    break;

  case 2806:
/* Line 1792 of yacc.c  */
#line 15970 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
    break;

  case 2807:
/* Line 1792 of yacc.c  */
#line 15977 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.resource_group_flag_type)= false; }
    break;

  case 2808:
/* Line 1792 of yacc.c  */
#line 15978 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/mysql-8.0.11-release-export-12871545_gpl/sql/sql_yacc.yy"
    { (yyval.resource_group_flag_type)= true; }
    break;


/* Line 1792 of yacc.c  */
#line 41633 "/export/home2/pb2/build/sb_2-28121909-1523169989.5/dist_GPL/sql/sql_yacc.cc"
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


