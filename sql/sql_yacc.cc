/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <limits>
#include <type_traits>                       // for std::remove_reference
#include <utility>

#include "my_alloc.h"
#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/plugin.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/dd/info_schema/show.h"             // build_show_...
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/derror.h"
#include "sql/event_parse_data.h"
                                             // used in RESET_MASTER parsing check
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/json_dom.h"
#include "sql/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/log_event.h"
#include "sql/opt_explain_json.h"
#include "sql/opt_explain_traditional.h"
#include "sql/parser_yystype.h"
#include "sql/protocol.h"
#include "sql/resourcegroups/resource_group_mgr.h" // resource_group_support
#include "sql/resourcegroups/resource_group_sql_cmd.h" // Sql_cmd_*_resource_group etc.
#include "sql/rpl_filter.h"
#include "sql/rpl_msr.h"       /* multisource replication */
#include "sql/rpl_slave.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/sp_rcontext.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance,
                                               // Sql_cmd_unlock_instance
#include "sql/sql_base.h"                        // find_temporary_table
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_partition.h"                    /* mem_alloc_error */
#include "sql/sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                        // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_show_status.h"                 // build_show_session_status, ...
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql/table_function.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    DBUG_ASSERT(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 478 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_EXPORT_HOME2_PB2_BUILD_SB_4_39697340_1592325428_65_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_EXPORT_HOME2_PB2_BUILD_SB_4_39697340_1592325428_65_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SERVER_ID_SYM = 560,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    KEYWORD_USED_AS_IDENT = 1157,
    KEYWORD_USED_AS_KEYWORD = 1158,
    CONDITIONLESS_JOIN = 1159,
    SUBQUERY_AS_EXPR = 1160,
    EMPTY_FROM_CLAUSE = 1161
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define KEYWORD_USED_AS_IDENT 1157
#define KEYWORD_USED_AS_KEYWORD 1158
#define CONDITIONLESS_JOIN 1159
#define SUBQUERY_AS_EXPR 1160
#define EMPTY_FROM_CLAUSE 1161

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_EXPORT_HOME2_PB2_BUILD_SB_4_39697340_1592325428_65_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2047 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1008
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   83837

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  775
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  931
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3018
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5304

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1161

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   772,     2,     2,     2,   760,   755,     2,
     764,   765,   758,   757,   769,   756,   770,   759,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   771,   767,
       2,     2,     2,     2,   768,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   761,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   773,   754,   774,   762,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     745,   746,   747,   748,   749,   750,     2,   751,   752,   753,
     763,   766
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2004,  2004,  2005,  2010,  2020,  2038,  2045,  2058,  2057,
    2082,  2089,  2091,  2095,  2096,  2101,  2102,  2103,  2104,  2105,
    2106,  2107,  2108,  2109,  2110,  2111,  2112,  2113,  2114,  2115,
    2116,  2117,  2118,  2119,  2120,  2121,  2122,  2123,  2124,  2125,
    2126,  2127,  2128,  2129,  2130,  2131,  2132,  2133,  2134,  2135,
    2136,  2137,  2138,  2139,  2140,  2141,  2142,  2143,  2144,  2145,
    2146,  2147,  2148,  2149,  2150,  2151,  2152,  2153,  2154,  2155,
    2156,  2157,  2158,  2159,  2160,  2161,  2162,  2163,  2164,  2165,
    2166,  2167,  2168,  2169,  2170,  2171,  2172,  2173,  2174,  2175,
    2176,  2177,  2178,  2179,  2180,  2181,  2182,  2183,  2184,  2185,
    2186,  2187,  2188,  2189,  2190,  2191,  2195,  2205,  2206,  2210,
    2230,  2237,  2248,  2247,  2258,  2260,  2264,  2265,  2269,  2282,
    2281,  2301,  2300,  2314,  2313,  2328,  2329,  2332,  2339,  2346,
    2353,  2360,  2367,  2375,  2384,  2390,  2397,  2404,  2412,  2421,
    2427,  2433,  2441,  2449,  2455,  2462,  2469,  2477,  2489,  2495,
    2502,  2509,  2517,  2527,  2528,  2532,  2536,  2540,  2544,  2548,
    2558,  2562,  2566,  2571,  2582,  2587,  2591,  2595,  2599,  2600,
    2604,  2608,  2612,  2617,  2621,  2625,  2629,  2635,  2669,  2673,
    2677,  2681,  2687,  2688,  2698,  2699,  2702,  2704,  2705,  2709,
    2715,  2721,  2730,  2734,  2738,  2745,  2750,  2758,  2762,  2778,
    2782,  2793,  2797,  2812,  2822,  2832,  2837,  2845,  2852,  2865,
    2864,  2879,  2881,  2894,  2914,  2933,  2953,  2970,  2975,  2984,
    2989,  3001,  3013,  3027,  3043,  3047,  3054,  3063,  3071,  3082,
    3083,  3087,  3091,  3095,  3099,  3103,  3108,  3112,  3120,  3119,
    3151,  3150,  3159,  3168,  3169,  3175,  3181,  3191,  3197,  3205,
    3207,  3216,  3217,  3221,  3227,  3236,  3237,  3245,  3245,  3303,
    3304,  3305,  3306,  3307,  3308,  3309,  3310,  3311,  3312,  3313,
    3314,  3315,  3319,  3333,  3352,  3353,  3357,  3358,  3363,  3365,
    3367,  3369,  3371,  3373,  3375,  3381,  3382,  3383,  3387,  3391,
    3398,  3405,  3406,  3413,  3415,  3419,  3420,  3424,  3475,  3477,
    3481,  3482,  3486,  3536,  3537,  3538,  3539,  3543,  3544,  3548,
    3549,  3554,  3557,  3581,  3680,  3698,  3697,  3776,  3772,  3848,
    3849,  3854,  3856,  3861,  3884,  3895,  3899,  3921,  3922,  3926,
    3930,  3943,  3949,  3955,  3964,  3977,  4003,  4009,  4010,  4016,
    4017,  4022,  4028,  4041,  4043,  4063,  4069,  4071,  4073,  4075,
    4077,  4079,  4081,  4083,  4085,  4087,  4089,  4091,  4096,  4110,
    4127,  4128,  4130,  4135,  4141,  4150,  4156,  4165,  4173,  4201,
    4209,  4211,  4220,  4225,  4231,  4240,  4248,  4250,  4252,  4254,
    4256,  4258,  4260,  4262,  4264,  4266,  4268,  4270,  4272,  4277,
    4297,  4321,  4325,  4333,  4334,  4335,  4336,  4337,  4338,  4339,
    4340,  4341,  4342,  4343,  4344,  4345,  4350,  4349,  4360,  4360,
    4420,  4419,  4476,  4476,  4498,  4555,  4602,  4626,  4625,  4650,
    4672,  4674,  4675,  4679,  4697,  4718,  4726,  4764,  4718,  4792,
    4794,  4795,  4799,  4800,  4805,  4815,  4804,  4867,  4866,  4880,
    4881,  4885,  4886,  4891,  4899,  4890,  4949,  4957,  4948,  5003,
    5016,  5021,  5020,  5058,  5059,  5064,  5063,  5097,  5097,  5116,
    5115,  5163,  5178,  5186,  5177,  5244,  5252,  5241,  5294,  5296,
    5301,  5303,  5305,  5320,  5321,  5328,  5329,  5336,  5337,  5341,
    5347,  5356,  5357,  5358,  5359,  5360,  5361,  5362,  5363,  5364,
    5365,  5366,  5370,  5371,  5375,  5381,  5390,  5391,  5392,  5393,
    5394,  5395,  5396,  5400,  5401,  5405,  5411,  5420,  5424,  5425,
    5429,  5435,  5444,  5445,  5446,  5447,  5448,  5449,  5450,  5454,
    5455,  5459,  5465,  5474,  5475,  5476,  5480,  5484,  5485,  5489,
    5493,  5500,  5507,  5514,  5521,  5528,  5535,  5542,  5549,  5556,
    5563,  5567,  5574,  5581,  5588,  5589,  5664,  5670,  5674,  5679,
    5684,  5690,  5698,  5708,  5709,  5723,  5731,  5735,  5739,  5743,
    5747,  5751,  5758,  5759,  5764,  5765,  5783,  5784,  5796,  5797,
    5802,  5811,  5812,  5817,  5823,  5833,  5834,  5846,  5847,  5851,
    5857,  5866,  5875,  5878,  5883,  5891,  5892,  5896,  5900,  5907,
    5914,  5924,  5923,  5941,  5947,  5956,  5957,  5962,  5963,  5967,
    5973,  5982,  5989,  5990,  5994,  6000,  6009,  6011,  6013,  6015,
    6017,  6019,  6021,  6023,  6032,  6033,  6037,  6038,  6042,  6047,
    6052,  6067,  6068,  6072,  6078,  6087,  6093,  6101,  6103,  6107,
    6111,  6115,  6119,  6123,  6127,  6131,  6135,  6139,  6143,  6147,
    6151,  6155,  6159,  6163,  6180,  6184,  6188,  6192,  6196,  6200,
    6204,  6208,  6212,  6216,  6220,  6224,  6228,  6232,  6236,  6240,
    6244,  6248,  6252,  6259,  6273,  6277,  6281,  6285,  6289,  6290,
    6291,  6292,  6293,  6294,  6298,  6299,  6300,  6304,  6305,  6306,
    6307,  6311,  6317,  6326,  6327,  6331,  6338,  6339,  6347,  6353,
    6359,  6364,  6374,  6382,  6390,  6394,  6395,  6399,  6400,  6404,
    6405,  6409,  6413,  6417,  6438,  6440,  6444,  6445,  6446,  6450,
    6454,  6458,  6462,  6466,  6470,  6474,  6478,  6483,  6488,  6497,
    6506,  6510,  6514,  6519,  6528,  6532,  6555,  6559,  6563,  6567,
    6571,  6575,  6579,  6580,  6584,  6588,  6592,  6597,  6602,  6607,
    6612,  6617,  6621,  6625,  6630,  6634,  6641,  6643,  6645,  6647,
    6649,  6651,  6653,  6655,  6660,  6661,  6665,  6666,  6670,  6671,
    6672,  6673,  6674,  6678,  6679,  6680,  6681,  6682,  6686,  6691,
    6695,  6697,  6701,  6702,  6703,  6704,  6709,  6713,  6722,  6726,
    6731,  6735,  6744,  6745,  6749,  6750,  6751,  6759,  6760,  6764,
    6768,  6772,  6773,  6774,  6783,  6784,  6785,  6786,  6789,  6790,
    6795,  6799,  6803,  6804,  6808,  6827,  6846,  6850,  6854,  6858,
    6862,  6866,  6870,  6874,  6878,  6882,  6886,  6890,  6894,  6898,
    6902,  6906,  6915,  6920,  6933,  6937,  6944,  6945,  6946,  6950,
    6951,  6952,  6956,  6962,  6966,  6970,  6971,  6975,  6984,  6988,
    6989,  6993,  7002,  7006,  7007,  7011,  7017,  7021,  7022,  7026,
    7027,  7032,  7033,  7037,  7044,  7052,  7058,  7068,  7072,  7077,
    7082,  7087,  7094,  7100,  7111,  7112,  7120,  7119,  7131,  7133,
    7137,  7152,  7153,  7157,  7164,  7174,  7175,  7176,  7177,  7182,
    7186,  7191,  7196,  7202,  7211,  7212,  7213,  7214,  7215,  7219,
    7220,  7224,  7225,  7229,  7230,  7234,  7235,  7236,  7240,  7241,
    7245,  7246,  7250,  7256,  7265,  7266,  7280,  7281,  7285,  7291,
    7300,  7304,  7305,  7309,  7315,  7324,  7325,  7330,  7331,  7335,
    7339,  7343,  7367,  7368,  7369,  7373,  7374,  7378,  7379,  7383,
    7384,  7388,  7389,  7390,  7394,  7400,  7410,  7416,  7431,  7437,
    7447,  7448,  7457,  7458,  7462,  7463,  7467,  7473,  7485,  7495,
    7509,  7508,  7529,  7528,  7550,  7549,  7571,  7570,  7589,  7583,
    7606,  7605,  7641,  7663,  7682,  7702,  7710,  7732,  7756,  7767,
    7769,  7784,  7798,  7804,  7816,  7828,  7842,  7843,  7847,  7857,
    7867,  7872,  7879,  7888,  7889,  7893,  7894,  7898,  7904,  7910,
    7918,  7933,  7941,  7949,  7956,  7963,  7970,  7977,  7983,  7989,
    7995,  8007,  8019,  8028,  8029,  8033,  8034,  8038,  8044,  8050,
    8056,  8065,  8079,  8080,  8081,  8082,  8086,  8087,  8099,  8100,
    8104,  8105,  8109,  8110,  8125,  8130,  8138,  8142,  8150,  8154,
    8159,  8160,  8169,  8173,  8184,  8188,  8192,  8196,  8200,  8205,
    8210,  8215,  8220,  8227,  8231,  8235,  8239,  8244,  8249,  8254,
    8259,  8263,  8270,  8271,  8275,  8279,  8286,  8287,  8295,  8302,
    8307,  8311,  8316,  8327,  8328,  8336,  8340,  8344,  8348,  8352,
    8356,  8361,  8365,  8369,  8373,  8377,  8381,  8385,  8389,  8393,
    8397,  8401,  8405,  8409,  8413,  8417,  8421,  8425,  8429,  8435,
    8439,  8446,  8451,  8456,  8464,  8465,  8470,  8475,  8481,  8490,
    8494,  8498,  8515,  8519,  8523,  8539,  8541,  8545,  8546,  8550,
    8551,  8552,  8556,  8557,  8558,  8562,  8563,  8564,  8565,  8569,
    8570,  8578,  8586,  8588,  8592,  8593,  8597,  8598,  8599,  8603,
    8615,  8628,  8635,  8636,  8646,  8662,  8660,  8682,  8699,  8702,
    8709,  8713,  8720,  8724,  8728,  8735,  8740,  8743,  8750,  8753,
    8760,  8763,  8770,  8773,  8781,  8784,  8791,  8795,  8802,  8806,
    8814,  8818,  8843,  8844,  8845,  8850,  8855,  8862,  8876,  8877,
    8878,  8882,  8891,  8892,  8896,  8897,  8905,  8906,  8907,  8911,
    8921,  8922,  8941,  8946,  8953,  8963,  8971,  8979,  8980,  8984,
    8985,  8993,  8995,  8997,  8999,  9001,  9003,  9008,  9015,  9016,
    9017,  9022,  9021,  9027,  9034,  9039,  9047,  9048,  9052,  9065,
    9069,  9078,  9084,  9093,  9100,  9101,  9105,  9110,  9117,  9123,
    9132,  9139,  9146,  9147,  9157,  9158,  9162,  9166,  9171,  9175,
    9211,  9215,  9219,  9223,  9262,  9268,  9275,  9281,  9288,  9293,
    9299,  9307,  9311,  9315,  9319,  9323,  9331,  9332,  9333,  9340,
    9345,  9349,  9361,  9383,  9407,  9408,  9412,  9416,  9417,  9421,
    9427,  9436,  9443,  9455,  9458,  9462,  9467,  9471,  9475,  9484,
    9490,  9499,  9503,  9507,  9514,  9515,  9519,  9523,  9524,  9528,
    9529,  9533,  9539,  9545,  9555,  9556,  9564,  9565,  9566,  9567,
    9568,  9572,  9573,  9578,  9584,  9589,  9595,  9599,  9603,  9607,
    9611,  9615,  9619,  9623,  9627,  9631,  9635,  9639,  9652,  9656,
    9660,  9665,  9669,  9676,  9680,  9687,  9691,  9695,  9699,  9707,
    9711,  9715,  9720,  9725,  9733,  9741,  9745,  9746,  9750,  9754,
    9758,  9762,  9766,  9770,  9774,  9778,  9782,  9786,  9790,  9794,
    9798,  9802,  9806,  9810,  9811,  9815,  9816,  9823,  9824,  9828,
    9829,  9833,  9834,  9835,  9836,  9837,  9838,  9839,  9843,  9844,
    9848,  9849,  9850,  9851,  9852,  9853,  9857,  9858,  9859,  9860,
    9861,  9862,  9866,  9870,  9874,  9878,  9882,  9886,  9887,  9891,
    9895,  9899,  9903,  9907,  9911,  9915,  9919,  9923,  9927,  9931,
    9935,  9940,  9947,  9958,  9959,  9969,  9973,  9977,  9981,  9985,
    9989,  9993,  9997, 10001, 10005, 10012, 10016, 10020, 10024, 10028,
   10032, 10036, 10040, 10044, 10049, 10054, 10059, 10063, 10067, 10071,
   10075, 10080, 10084, 10103, 10107, 10111, 10115, 10119, 10124, 10129,
   10133, 10137, 10142, 10146, 10150, 10154, 10158, 10162, 10166, 10170,
   10175, 10179, 10183, 10187, 10191, 10202, 10205, 10216, 10220, 10224,
   10228, 10232, 10236, 10240, 10244, 10248, 10252, 10256, 10260, 10264,
   10268, 10272, 10276, 10280, 10284, 10288, 10292, 10296, 10300, 10304,
   10308, 10314, 10320, 10326, 10332, 10338, 10342, 10360, 10364, 10371,
   10373, 10386, 10387, 10391, 10392, 10396, 10397, 10401, 10407, 10416,
   10423, 10424, 10428, 10432, 10436, 10440, 10444, 10454, 10464, 10468,
   10472, 10476, 10480, 10489, 10493, 10497, 10501, 10505, 10509, 10513,
   10517, 10521, 10525, 10535, 10539, 10543, 10547, 10551, 10555, 10559,
   10570, 10581, 10585, 10589, 10602, 10606, 10611, 10620, 10623, 10631,
   10634, 10638, 10647, 10650, 10654, 10662, 10665, 10672, 10679, 10683,
   10690, 10697, 10704, 10725, 10728, 10736, 10739, 10747, 10750, 10758,
   10761, 10770, 10775, 10782, 10786, 10790, 10794, 10798, 10805, 10812,
   10816, 10820, 10824, 10828, 10836, 10839, 10843, 10847, 10851, 10857,
   10858, 10859, 10863, 10870, 10874, 10881, 10885, 10892, 10893, 10898,
   10903, 10907, 10908, 10912, 10917, 10927, 10934, 10941, 10960, 10968,
   10975, 10982, 10989, 10996, 11003, 11010, 11017, 11024, 11031, 11039,
   11049, 11050, 11054, 11060, 11069, 11070, 11074, 11080, 11089, 11090,
   11094, 11095, 11099, 11107, 11116, 11117, 11118, 11131, 11132, 11213,
   11217, 11222, 11226, 11230, 11240, 11247, 11248, 11249, 11253, 11254,
   11255, 11256, 11259, 11260, 11263, 11265, 11268, 11270, 11278, 11279,
   11283, 11312, 11313, 11314, 11315, 11317, 11319, 11323, 11324, 11333,
   11334, 11338, 11345, 11346, 11350, 11363, 11374, 11390, 11397, 11403,
   11412, 11416, 11426, 11433, 11436, 11447, 11451, 11456, 11461, 11470,
   11471, 11482, 11485, 11488, 11492, 11496, 11504, 11507, 11508, 11509,
   11513, 11514, 11518, 11524, 11533, 11534, 11542, 11543, 11547, 11552,
   11558, 11562, 11568, 11577, 11583, 11591, 11595, 11604, 11616, 11617,
   11618, 11619, 11620, 11621, 11622, 11623, 11624, 11625, 11626, 11627,
   11631, 11632, 11633, 11634, 11635, 11636, 11637, 11638, 11639, 11643,
   11644, 11645, 11646, 11649, 11651, 11655, 11656, 11659, 11661, 11665,
   11666, 11670, 11674, 11675, 11682, 11686, 11693, 11698, 11707, 11724,
   11732, 11739, 11745, 11755, 11758, 11765, 11771, 11780, 11794, 11795,
   11802, 11807, 11818, 11819, 11834, 11839, 11849, 11856, 11857, 11861,
   11868, 11873, 11883, 11884, 11888, 11889, 11893, 11894, 11898, 11905,
   11911, 11917, 11926, 11930, 11934, 11938, 11942, 11949, 11950, 11954,
   11955, 11956, 11957, 11958, 11959, 11963, 11964, 11965, 11966, 11967,
   11971, 11972, 11973, 11974, 11975, 11979, 11980, 11981, 11982, 11983,
   11987, 11992, 11993, 11997, 12003, 12012, 12016, 12023, 12030, 12036,
   12040, 12048, 12061, 12077, 12086, 12096, 12119, 12154, 12161, 12176,
   12186, 12201, 12210, 12221, 12241, 12263, 12286, 12294, 12301, 12308,
   12314, 12323, 12329, 12338, 12339, 12343, 12344, 12348, 12349, 12353,
   12359, 12368, 12369, 12376, 12396, 12416, 12434, 12447, 12464, 12480,
   12481, 12482, 12491, 12495, 12496, 12507, 12509, 12513, 12518, 12523,
   12531, 12536, 12541, 12549, 12555, 12564, 12571, 12572, 12576, 12580,
   12581, 12585, 12590, 12600, 12605, 12614, 12615, 12618, 12620, 12624,
   12628, 12633, 12638, 12642, 12648, 12657, 12658, 12666, 12670, 12684,
   12688, 12697, 12714, 12715, 12719, 12726, 12738, 12746, 12747, 12753,
   12766, 12776, 12789, 12791, 12795, 12796, 12800, 12801, 12802, 12806,
   12812, 12814, 12817, 12819, 12822, 12823, 12826, 12830, 12834, 12838,
   12842, 12846, 12850, 12854, 12858, 12866, 12869, 12883, 12882, 12893,
   12902, 12908, 12920, 12931, 12942, 12957, 12964, 12972, 12974, 12997,
   13001, 13006, 13005, 13016, 13015, 13025, 13043, 13050, 13058, 13066,
   13074, 13082, 13090, 13100, 13122, 13127, 13149, 13158, 13167, 13173,
   13178, 13183, 13188, 13194, 13203, 13211, 13215, 13219, 13226, 13233,
   13239, 13249, 13259, 13264, 13269, 13274, 13283, 13285, 13287, 13292,
   13293, 13296, 13298, 13302, 13303, 13307, 13308, 13312, 13313, 13317,
   13318, 13319, 13320, 13324, 13325, 13329, 13330, 13334, 13335, 13339,
   13340, 13341, 13346, 13353, 13360, 13361, 13362, 13363, 13364, 13365,
   13372, 13373, 13378, 13381, 13397, 13415, 13425, 13426, 13431, 13439,
   13438, 13451, 13450, 13464, 13468, 13469, 13482, 13481, 13504, 13505,
   13510, 13512, 13514, 13516, 13518, 13520, 13522, 13524, 13526, 13528,
   13530, 13532, 13537, 13538, 13543, 13542, 13549, 13559, 13560, 13565,
   13570, 13579, 13579, 13582, 13581, 13601, 13602, 13606, 13607, 13622,
   13621, 13632, 13636, 13640, 13654, 13666, 13667, 13668, 13674, 13685,
   13724, 13725, 13729, 13730, 13734, 13735, 13736, 13740, 13741, 13745,
   13746, 13750, 13751, 13755, 13760, 13764, 13769, 13775, 13780, 13788,
   13789, 13793, 13798, 13802, 13807, 13815, 13816, 13820, 13821, 13825,
   13826, 13830, 13831, 13832, 13836, 13842, 13851, 13852, 13859, 13860,
   13864, 13872, 13892, 13913, 13918, 13924, 13929, 13937, 13944, 13951,
   13961, 13980, 13981, 13982, 13992, 13993, 13997, 14012, 14013, 14014,
   14015, 14019, 14023, 14027, 14031, 14035, 14042, 14043, 14047, 14051,
   14055, 14059, 14063, 14071, 14075, 14079, 14093, 14094, 14098, 14102,
   14112, 14119, 14126, 14130, 14134, 14138, 14142, 14146, 14155, 14161,
   14172, 14178, 14189, 14190, 14220, 14233, 14246, 14262, 14278, 14295,
   14299, 14300, 14307, 14323, 14324, 14335, 14336, 14346, 14347, 14358,
   14359, 14369, 14370, 14371, 14375, 14376, 14377, 14381, 14386, 14394,
   14398, 14412, 14417, 14425, 14449, 14450, 14451, 14452, 14453, 14460,
   14461, 14462, 14469, 14470, 14471, 14472, 14473, 14474, 14475, 14476,
   14477, 14478, 14479, 14480, 14481, 14482, 14483, 14484, 14485, 14486,
   14487, 14488, 14489, 14490, 14491, 14492, 14493, 14494, 14495, 14496,
   14497, 14498, 14499, 14500, 14501, 14502, 14503, 14518, 14519, 14520,
   14527, 14528, 14529, 14530, 14531, 14532, 14533, 14534, 14535, 14543,
   14544, 14545, 14546, 14547, 14548, 14549, 14550, 14551, 14552, 14553,
   14554, 14555, 14556, 14557, 14558, 14559, 14560, 14561, 14562, 14563,
   14564, 14565, 14566, 14567, 14568, 14569, 14570, 14571, 14572, 14573,
   14574, 14575, 14576, 14577, 14578, 14579, 14580, 14581, 14582, 14583,
   14584, 14585, 14586, 14587, 14588, 14589, 14590, 14591, 14592, 14593,
   14594, 14595, 14596, 14597, 14598, 14599, 14600, 14601, 14602, 14603,
   14604, 14605, 14606, 14607, 14608, 14609, 14610, 14611, 14612, 14613,
   14614, 14615, 14616, 14617, 14618, 14619, 14620, 14621, 14622, 14623,
   14624, 14625, 14626, 14627, 14628, 14629, 14630, 14631, 14632, 14633,
   14634, 14635, 14636, 14637, 14638, 14639, 14640, 14641, 14642, 14643,
   14644, 14645, 14646, 14647, 14648, 14649, 14650, 14651, 14652, 14653,
   14654, 14655, 14656, 14657, 14658, 14659, 14660, 14661, 14662, 14663,
   14664, 14665, 14666, 14667, 14668, 14669, 14670, 14671, 14672, 14673,
   14674, 14675, 14676, 14677, 14678, 14679, 14680, 14681, 14682, 14683,
   14684, 14685, 14686, 14687, 14688, 14689, 14690, 14691, 14692, 14693,
   14694, 14695, 14696, 14697, 14698, 14699, 14700, 14701, 14702, 14703,
   14704, 14705, 14706, 14707, 14708, 14709, 14710, 14711, 14712, 14713,
   14714, 14715, 14716, 14717, 14718, 14719, 14720, 14721, 14722, 14723,
   14724, 14725, 14726, 14727, 14728, 14729, 14730, 14731, 14732, 14733,
   14734, 14735, 14736, 14737, 14738, 14739, 14740, 14741, 14742, 14743,
   14744, 14745, 14746, 14747, 14748, 14749, 14750, 14751, 14752, 14753,
   14754, 14755, 14756, 14757, 14758, 14759, 14760, 14761, 14762, 14763,
   14764, 14765, 14766, 14767, 14768, 14769, 14770, 14771, 14772, 14773,
   14774, 14775, 14776, 14777, 14778, 14779, 14780, 14781, 14782, 14783,
   14784, 14785, 14786, 14787, 14788, 14789, 14790, 14791, 14792, 14793,
   14794, 14795, 14796, 14797, 14798, 14799, 14800, 14801, 14802, 14803,
   14804, 14805, 14806, 14807, 14808, 14809, 14810, 14811, 14812, 14813,
   14814, 14815, 14816, 14817, 14818, 14819, 14820, 14821, 14822, 14823,
   14824, 14825, 14826, 14827, 14828, 14829, 14830, 14831, 14832, 14833,
   14834, 14835, 14836, 14837, 14838, 14839, 14840, 14841, 14842, 14843,
   14844, 14845, 14846, 14847, 14848, 14849, 14850, 14851, 14852, 14853,
   14854, 14855, 14856, 14857, 14858, 14859, 14860, 14861, 14862, 14863,
   14864, 14865, 14866, 14867, 14868, 14869, 14870, 14871, 14872, 14873,
   14874, 14875, 14876, 14877, 14878, 14879, 14880, 14881, 14882, 14883,
   14884, 14885, 14886, 14887, 14888, 14889, 14890, 14891, 14892, 14893,
   14894, 14895, 14896, 14897, 14898, 14899, 14900, 14901, 14902, 14903,
   14904, 14905, 14906, 14907, 14908, 14909, 14910, 14911, 14912, 14913,
   14914, 14915, 14916, 14917, 14918, 14919, 14920, 14921, 14922, 14923,
   14924, 14936, 14937, 14938, 14950, 14951, 14952, 14953, 14962, 14963,
   14964, 14965, 14966, 14977, 14986, 14990, 14994, 14998, 15005, 15013,
   15021, 15033, 15037, 15042, 15047, 15052, 15057, 15062, 15070, 15071,
   15075, 15079, 15086, 15092, 15101, 15106, 15113, 15123, 15124, 15129,
   15133, 15141, 15145, 15149, 15150, 15151, 15152, 15153, 15157, 15158,
   15159, 15160, 15164, 15165, 15166, 15167, 15171, 15172, 15173, 15174,
   15175, 15176, 15181, 15189, 15195, 15199, 15204, 15208, 15215, 15219,
   15226, 15230, 15234, 15241, 15245, 15252, 15259, 15260, 15264, 15271,
   15272, 15276, 15277, 15281, 15282, 15283, 15284, 15288, 15289, 15290,
   15294, 15298, 15302, 15306, 15316, 15315, 15328, 15338, 15339, 15343,
   15344, 15348, 15376, 15377, 15378, 15383, 15388, 15387, 15400, 15411,
   15419, 15426, 15433, 15449, 15453, 15457, 15460, 15463, 15478, 15500,
   15504, 15508, 15517, 15528, 15544, 15545, 15549, 15550, 15551, 15552,
   15556, 15557, 15558, 15559, 15560, 15566, 15571, 15587, 15586, 15605,
   15610, 15621, 15626, 15643, 15642, 15659, 15672, 15673, 15674, 15675,
   15678, 15680, 15684, 15690, 15699, 15706, 15708, 15710, 15712, 15714,
   15716, 15718, 15720, 15722, 15724, 15726, 15728, 15730, 15732, 15734,
   15736, 15738, 15743, 15745, 15759, 15761, 15763, 15765, 15767, 15769,
   15771, 15773, 15775, 15777, 15779, 15781, 15783, 15785, 15790, 15791,
   15794, 15796, 15800, 15801, 15805, 15815, 15825, 15838, 15852, 15864,
   15876, 15888, 15905, 15911, 15920, 15926, 15935, 15936, 15940, 15941,
   15944, 15955, 15966, 15977, 15990, 16004, 16016, 16027, 16041, 16059,
   16070, 16081, 16095, 16106, 16120, 16135, 16148, 16159, 16164, 16172,
   16177, 16185, 16186, 16190, 16196, 16204, 16206, 16210, 16214, 16218,
   16225, 16226, 16231, 16232, 16236, 16237, 16241, 16246, 16248, 16253,
   16254, 16262, 16261, 16271, 16272, 16277, 16278, 16279, 16284, 16285,
   16286, 16290, 16291, 16295, 16307, 16316, 16326, 16335, 16349, 16350,
   16351, 16355, 16359, 16363, 16370, 16371, 16372, 16373, 16374, 16375,
   16376, 16382, 16393, 16402, 16404, 16406, 16411, 16412, 16413, 16414,
   16415, 16419, 16420, 16421, 16422, 16423, 16424, 16434, 16435, 16440,
   16453, 16466, 16468, 16470, 16475, 16480, 16482, 16484, 16490, 16491,
   16493, 16499, 16498, 16538, 16589, 16590, 16591, 16592, 16602, 16604,
   16610, 16615, 16633, 16623, 16700, 16718, 16742, 16766, 16772, 16813,
   16739, 16880, 16900, 16905, 16913, 16878, 16934, 16939, 16944, 16949,
   16954, 16959, 16967, 16968, 16971, 16980, 16990, 17008, 17009, 17013,
   17014, 17015, 17019, 17020, 17025, 17026, 17028, 17033, 17039, 17048,
   17054, 17063, 17069, 17078, 17095, 17104, 17127, 17131, 17139, 17142,
   17146, 17153, 17154, 17159, 17165, 17169, 17176, 17186, 17193, 17206,
   17207, 17211, 17212, 17220, 17221, 17226, 17234, 17235, 17240
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "KEYWORD_USED_AS_IDENT",
  "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'",
  "'{'", "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "privilege_check_def", "table_primary_key_check_def",
  "master_tls_ciphersuites_def", "master_file_def", "opt_channel",
  "create_table_stmt", "create_role_stmt", "create_resource_group_stmt",
  "create", "$@6", "create_srs_stmt", "srs_attributes",
  "default_role_clause", "create_index_stmt", "server_options_list",
  "server_option", "event_tail", "$@7", "ev_schedule_time", "$@8",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@9",
  "ev_sql_stmt_inner", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_engine_attribute", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "slave", "slave_start",
  "start_slave_opts", "$@43", "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_connection_opts", "slave_user_name_opt", "slave_user_pass_opt",
  "slave_plugin_auth_opt", "slave_plugin_dir_opt",
  "opt_slave_thread_option_list", "slave_thread_option_list",
  "slave_thread_option", "slave_until", "slave_until_opts", "checksum",
  "opt_checksum_type", "repair_table_stmt", "opt_mi_repair_types",
  "mi_repair_types", "mi_repair_type", "analyze_table_stmt",
  "opt_num_buckets", "opt_histogram", "binlog_base64_event",
  "check_table_stmt", "opt_mi_check_types", "mi_check_types",
  "mi_check_type", "optimize_table_stmt", "opt_no_write_to_binlog",
  "rename", "$@44", "rename_list", "table_to_table_list", "table_to_table",
  "keycache_stmt", "keycache_list", "assign_to_keycache", "key_cache_name",
  "preload_stmt", "preload_list", "preload_keys", "adm_partition",
  "opt_cache_key_list", "opt_ignore_leaves", "select_stmt",
  "select_stmt_with_into", "query_expression", "query_expression_body",
  "query_expression_parens", "query_primary", "query_specification",
  "opt_from_clause", "from_clause", "from_tables", "table_reference_list",
  "table_value_constructor", "explicit_table", "select_options",
  "select_option_list", "select_option", "locking_clause_list",
  "locking_clause", "lock_strength", "table_locking_list",
  "opt_locked_row_action", "locked_row_action", "select_item_list",
  "select_item", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "opt_of", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "opt_array_cast", "function_call_keyword",
  "function_call_nonkeyword", "opt_returning_type",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "opt_ll_default", "opt_null_treatment",
  "opt_from_first_last", "opt_windowing_clause", "windowing_clause",
  "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error",
  "opt_on_empty_or_error_json_table", "on_empty", "on_error",
  "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@45", "show_param", "$@46",
  "$@47", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "opt_extended", "opt_show_cmd_type", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where", "describe_stmt",
  "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_explain_analyze_type",
  "opt_describe_column", "flush", "$@48", "flush_options", "$@49",
  "opt_flush_lock", "$@50", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@51", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@52", "$@53",
  "slave_reset_options", "master_reset_options", "purge", "$@54",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "grouping_expr", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "TEXT_STRING_validated", "ident", "role_ident", "label_ident",
  "lvalue_ident", "ident_or_text", "role_ident_or_text",
  "user_ident_or_text", "user", "role", "schema", "ident_keyword",
  "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@55", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@56",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@57", "grant",
  "$@58", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password", "create_user",
  "alter_user", "create_user_list", "alter_user_list", "opt_column_list",
  "column_list", "require_clause", "grant_options", "opt_grant_option",
  "opt_with_roles", "opt_grant_as", "begin_stmt", "$@59", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_option", "row_subquery", "table_subquery",
  "subquery", "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@60",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@61", "udf_tail",
  "sf_tail", "$@62", "$@63", "$@64", "$@65", "sp_tail", "$@66", "$@67",
  "$@68", "$@69", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1156,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,
    1155,  1157,  1158,  1159,   124,    38,    45,    43,    42,    47,
      37,    94,   126,  1160,    40,    41,  1161,    59,    64,    44,
      46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4574

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4574)))

#define YYTABLE_NINF -2821

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6172,  2968,   208, -4574,   -21,   297, 68167,   147,  2009,  2009,
     476,  3776, -4574, -4574, -4574, 12578,  4285, -4574, 68167,   208,
     257, 45787, 68167, -4574,    19,  1560,   -11,   240,   300,  1154,
     208, 68167, -4574,   675,  1639,   208,  1717,   572, 60707, 46533,
     476, 68167,  2145, 28604, -4574, -4574, 60707,  1102,   171, 68167,
     709,     6,  1144, 68167,   932, 61453,  2256, 21806,   298,  1050,
     780,  1916, -4574,  1859,  1754, -4574,  1445, -4574, -4574,  1364,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, 53247, -4574,  1053, -4574,
    1176, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574,  2305,    21,  1166, -4574, -4574, -4574, -4574,
    1691, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574,   445, -4574, -4574, -4574, -4574, -4574, 62199, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574,  1860, 68167,  1873, 68167,  1453,
    1849, 68167, 59215, 68167, 68167,  1586,  1939,  1978,  2045, -4574,
   -4574,  2080, -4574, -4574,  2009,   476, -4574, -4574, 68167, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574,  1431, -4574,  1483, -4574, -4574,
   -4574, -4574, -4574, -4574,  1682,  2112, -4574, -4574, 68167, 68167,
   -4574,  2259,  2072,  2115,  2103,  2005, 59215,   273, 68167, -4574,
    1831, -4574,  2072,  2072,  2269,  2262,  1937, -4574, -4574, -4574,
    2080,  2577, -4574,  1757,  1783,  1806, 21806, -4574,  1861,  1874,
    1879, 16423,  1893,  1931,  1954,  1974,  1992,  2001,  2030,  2070,
    2070,  2084,  2091,  2096,  2105,  -150,  2116, -4574,  2122,   780,
    2146, -4574, -4574,  2153,  2176,  2196,  2203, -4574,  2210,  2213,
    2229, 17192,  2242,  2249, -4574, 39048,  2257,  2260,  2265,  2266,
    2268,  2280,  2288,  2290,  2304, -4574, -4574, 16423,  2084, -4574,
   -4574, -4574,  2306,  2311,  2335,  2346,  2354,  2370,  2371,  2381,
    2383,  2384,  2385,  2391,  2392,  2408,  2415,  2418,  2084, -4574,
     860,  2428,  2434,  1096,  2440, -4574,  2443, -4574,   342,  2450,
    2070,  2084,  2084,  2455,  2474,  2479,  2480,  2498,  2501,  2504,
    2524,  2527,  2532,  2540,  2541,  2549,  2550,  2560,  2574,  2586,
    2591,  2592,  2593,  2600, 21806, 21806, -4574, 21806, 10271, 29350,
   -4574, 68167, -4574, -4574,  1934, -4574, 48771,  3288, -4574,  3349,
   21806,  1177, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574,  2092, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
      63, -4574,  2607,  2007, -4574, -4574,  1939,  1939,  1939, 68167,
    2563,  1939,  1939,  2205, 68167,  1939,  2435,  1939,  1939,  1939,
    2620,  2009, -4574, -4574, -4574, -4574,  2873,  2619,  2565,  2697,
   -4574,  2393, -4574, -4574, -4574,  2722, -4574,  2622, -4574,  2553,
   -4574,  2739,  2622, -4574,   259,  2622,   306, -4574, -4574, -4574,
    2622, -4574, -4574, -4574, -4574,  1468, -4574, -4574, -4574, -4574,
     994, -4574,  2742,   153, 59215,  2964, -4574, -4574, -4574,  2939,
   68167,   -21, -4574, -4574, 16423, -4574,  2918, -4574,   343,  2990,
   -4574,  2009,  3027,   369, 68167, 53993, -4574,  2009, -4574, -4574,
    2979, -4574,    64,   121,  2634, -4574, -4574,  2780, -4574,  2619,
    2911,    96,   255, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, 12578,  2145, -4574, -4574,   126,  2796,  -186,
   -4574, -4574, 49517,  1156, -4574,   941, -4574, 71897, -4574,  3172,
   30096, 51009, -4574,  2624, -4574, -4574, -4574, -4574, -4574, -4574,
   70405,  2628,  1182,  7037,  2780, -4574,  1699,     0, -4574,  1699,
   -4574,  2625, -4574, 68167, 68167,   -21, -4574,  2009, -4574,  2635,
    2629, -4574, 68167,  2631, -4574,  2637, -4574,   398,   398,   398,
    3309,   398, -4574,   398,  3131,  2638,  2646,  3363,  3256,  2215,
    3261, -4574,  3221,  3312,  2665,   304,    70,  1691, -4574, -4574,
    2653, 68167,  2070, -4574,  2668,   337, -4574, -4574,  2666, -4574,
    2141, -4574,   838,  3273,  3275,  3282, -4574,  2674, -4574, -4574,
   -4574, -4574,  2509, -4574,  2832,  1607, 27858,  3196,  2305, -4574,
    1636,  3398,   479,  3174, -4574, 51755,   479,  3174, -4574,    21,
    1166,  1435,  3158,  3257,  3293, -4574,  2776, 54739,  1247, -4574,
   -4574, 53993, -4574, 68167, 68167,  2708, 59215, -4574, 68167, -4574,
    3073,  2238,  7762, 68167,  3297, -4574, 68167, 68167,  2936, -4574,
   68167, -4574,    41, -4574,  1701, 16423, -4574, 68167, -4574, -4574,
      83, -4574,   407,   314,  1610,  1683, 68167, 68167, 68167,  2951,
    3281, 68167,  2768,  3471, 68167, 53993, 74881, 68167, 68167,  2072,
    1568,  1461, -4574, -4574, 16423, 16423,  1953,  3409,  3468,  3468,
    3468,   291,  2848, 16423, 16423, 16423, 16423, 16423, 16423,  1959,
    2720, -4574, -4574,   -49, -4574,  2721, 16423, 16423, -4574, 16423,
   16423, 68167, -4574,  4790, 16423, 16423,  1130,  3348, 16423, 16423,
   16423, 10271,  4436, 16423, 16423, 68167,  3482,  2724, -4574,  2728,
    2041, 16423, 16423,  2082, 16423, 16423, 16423, 16423, 16423, -4574,
   -4574, 16423, 16423, 21806, 16423, 16423, 16423, 16423, 16423, 16423,
    2736, 16423,  3468,  3468, 16423, 16423,  2149, -4574, -4574, 16423,
    3013,  3013, -4574, 16423, 11040, 16423, -4574, -4574, -4574,  2738,
   -4574, -4574, -4574, 68167,  3468,  3468, 16423, 16423, 16423,  3468,
    3468, 16423,  2753,  2755, 16423, 16423, 16423, 16423, 16423, 21806,
    2757,  2758,  2760, 21806,  3409,  3409,  3409,  -106,    59,    70,
     210,  1628, -4574,  3024, 16423, 16423, -4574, -4574, 62945, -4574,
   -4574, -4574, 16423, -4574, 16423, 16423, -4574, -4574, -4574, -4574,
   -4574, -4574,  2695, -4574, -4574, -4574, 17961, 21806, 21806,  2764,
   21806, 21806, -4574, -4574, 21806, 21806, 21806,  3258,  2870, 21806,
   21806, 22575, 23344, 21806, 21806, 21806, 21806,  1618,  3409, 59215,
   21806, -4574, -4574,  2092,  2092, 16423, 42032, 68167, 68167, 68167,
    3161, 68167, 68167, 59215,  2835,  1025, 68167, 68167, 53993, 68167,
   74881, 68167,  1939,  2926,  4104, 32334, -4574, -4574, -4574, -4574,
   -4574,  2983, -4574, -4574, -4574, -4574, -4574, 68167, -4574, -4574,
   53993, -4574, -4574, -4574, -4574, -4574, -4574, -4574, 59215, -4574,
    1225, 53993, 47279,   176, -4574, 68913, 68167, -4574,   -21, -4574,
    2979,  3032, -4574,  2781,   291,  3506, -4574, -4574,  3276,  3529,
   68167, 68167,   867, -4574, -4574,  3274, -4574, -4574,  2797,  2984,
   68167, 68167, -4574, 68167, 68167, -4574, -4574, -4574,  2800, -4574,
   -4574,  2092,  4784, -4574,  2802, 53993, 53993,  1225,  3087,  1610,
     124, -4574, -4574, 73389, 68167, -4574, -4574, -4574, -4574,  3504,
   16423, -4574, 53993,  2844,  3006,  3310,    26, -4574,  2817,  2818,
   -4574,  2930, -4574, -4574,  2821, -4574,  2822, 68167,  1100,  1182,
   -4574, -4574, -4574, -4574, -4574, 68167,  2824,   941, -4574,  2628,
    1182, 30842, -4574, 11809,  3429, -4574,   885,  2837,  2545,   885,
   55485,  3174,  2047,   448,   267,   230, -4574,  3405, -4574,  3059,
    3040, -4574, -4574,   459,  3680, -4574,  3439, -4574,   987, -4574,
    3065,  3174,   885, -4574,  3324,  3455,  1337,  2352,   408,  1709,
   -4574, -4574, -4574, -4574,  2845, -4574,    49,  3525, -4574,  2846,
   -4574,  3426, -4574, -4574,  2781, -4574, 18730,   932,  2631, 68167,
   68167,  3600, -4574, -4574,  2858, -4574,  3249,  3071, -4574,  2988,
   -4574, -4574,   154, -4574, 68167, 16423,  2028, -4574, -4574, 53993,
    3502, -4574, -4574,   308, -4574,  3485, -4574, -4574,  2877,  2915,
    3601, 59215,  2998,  2927,   207, -4574,  1178, 53993,  3028,   -21,
     -21,   -21,  1053,  3501,  3507,  3510,  3518,  3521, -4574,  3524,
   -4574,  2895,  3526, -4574,  3283, -4574, -4574,  2424,  3117,  3117,
   59215,  2921, -4574, -4574, -4574,  3188, -4574, -4574,  1636, 16423,
   -4574, -4574,  1691, -4574, -4574, -4574, -4574, -4574, -4574,   -25,
   -4574, -4574,  1691, -4574,  3174,  3174, -4574, -4574, -4574, -4574,
   63691,  1435,  2939,  3293, -4574, 59215,  3609, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,  3573,
   -4574, -4574, 68167, 68167,   972,  3383,  3694, -4574,  2938,  3593,
    1182,  1182,  3593,  1182,  1182, -4574,  3121, -4574,  1182,    86,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,  3547,  3989,
    1182,  2655,  3306,  1182,  1182,  3645,  1182,  3320,  3321,  1182,
    1182,  1182,  1182,  3141,  3590, -4574,  1182,  3466,  1423,  3809,
    3470,  1182,  3331, -4574,  1544,  3597,  1182,  1182,  1182,  1182,
    1182,  3645,  3333,  3692,  1182,  1182,  3341,  1760,  3344,  3347,
    1182,  3165,  1182,  1182,  1182,   313,  1182,  1182,  3351,  1182,
    3136,  3142,  1182, -4574, -4574,  1182,  1182,  4406, -4574, -4574,
   -4574,  2548, -4574, -4574,  1572, -4574, -4574,  2991,  2993, -4574,
   -4574, -4574, -4574,  3262, -4574,  3056, -4574,  3278,  3139, -4574,
    2936,   119, 64437, 68167, -4574, -4574,  3007,  3012,   274, -4574,
     291,  3016,  3014, -4574,  6998,  3052, -4574, -4574, 68167, -4574,
   -4574, -4574, -4574,  3175, -4574, -4574, -4574, -4574,  2460, -4574,
    3732,  3342, -4574, -4574,  3625, -4574,  3419,  3792,  3083,  3702,
    3436,  2072,  3593,  3201,  3811,  3591, -4574,    93,  2822,  3230,
    1724, 68167,  3623,  2072, 68167, 68167, 68167, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, 68167, -4574, -4574, -4574, -4574, -4574,
   -4574,  2936,   355,  1209, -4574,  3468,  3060, 16423,  3062,  3063,
    3064, 16423,   132,  1519,  1329,  1665,  1698,  1417,   239, 16423,
    3066, 13347, -4574,  3072, -4574, -4574,   368,   373,  1441,  1465,
    3076, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574,  3627, -4574,   477,  3078, -4574, -4574, -4574, -4574,  3061,
   -4574, 16423,  1495,   492,   499,   287,  3079,   520,  1890,  1900,
    3080, 68167, 68167,  3468,  3082,  1505,  1509,  3468,  3084,   525,
    1538,  1998,  2011,  2054,   653,  2068,  3531,  1566,   716,   798,
    1602,   850,   873, -4574,  1613,  3090,  3091,   975,   222,  3468,
    3092,   318,  3089,  3093,  1619, 14116, 14885, 15654,   270,  1092,
   -4574,  3095, -4574,  2728,  3096,  3098,   350,   218,  1629,  3101,
    3099,  2076,  3162,  3162,  1652,  1139,  1656,  1139,  1163,   167,
    3162,  3162,  3162,   152,   209, -4574, 16423,  3102,  3105,  3107,
   59215, 16423,   181, -4574, -4574, -4574,  2535,   228, -4574, -4574,
   -4574, -4574, -4574,   999, -4574,  3114, -4574,   780,  2561,  3104,
   10271, -4574,  1113,  3104,  3854,  1467,  1467, 21806, -4574,  3116,
    2705,  2345, 17192,  1938, 17192,  1938,  3104,  3104,  3104, -4574,
   21806,  3118, 21806, 21806, -4574,  3409, -4574, -4574, 48771,  3128,
    3112, -4574, -4574,  1195, -4574, -4574,  3124, 68167,  1025, -4574,
   -4574,  1939, -4574, -4574, -4574,   211, -4574, -4574,   201, -4574,
    3126,   164,  2822,  3708, 68167,  3133, -4574,  3617,  3618,  3629,
    3631, -4574, -4574, -4574, -4574,  3636, -4574,  3637, -4574, -4574,
    3156, -4574, 68167, 27112, 59215, -4574,  3160, -4574,  3767, -4574,
    3552, -4574, -4574,  2102,  3353, -4574, -4574, -4574, -4574, 42783,
    1019, -4574, -4574, 68167, -4574,   162,   179,  3898,  3303, -4574,
    2781, 68167,   -21,   -21, 68167, -4574,  3709, -4574,   231,  3180,
   -4574,  3182, 59215, -4574, -4574,   238, 53993, 53993,  3183, -4574,
    3361,   281,  3553, -4574,  3373,  3947,   121, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
    3193,  3803,  3760,  3598,  3774,  3126, 42783, -4574, 68167, -4574,
   24864,  3303, -4574,  3781,  3397,  3415,   594, -4574, 56231, -4574,
     291,   530,  3543, -4574,  3543,    80, -4574, -4574,  3726, -4574,
    3568, -4574, 74881, -4574, 59215, 74881,  3810,  3236,  3237,  3239,
    3243,  3244, 71151, 16423, -4574, -4574, -4574, 11809,  3248, -4574,
   71151, -4574, -4574, 21806,  2122, -4574,  2383, -4574,   291, -4574,
    3770,  2092, 16423, -4574, -4574,  3263,  2072, 68167, 68167, 68167,
   68167, 68167, 53993, 68167, -4574,  1601,  1601, -4574, -4574, -4574,
     885, 68167, -4574, 68167,   885, 53993, -4574,  2047, 68167,   885,
   -4574,  3768,  3461, -4574, -4574, -4574,  3842, -4574, -4574,  3832,
    3259, -4574,  3770, -4574,  3426,  2047, -4574, -4574, -4574, -4574,
   -4574,  2047, -4574, -4574, -4574,  2047,  2047,  2047,   885,   885,
    1699, -4574, -4574,  3513,     0,  3969, -4574,  2122,   291,  3277,
    3265, -4574, -4574, -4574,  2107, -4574,   780,   398,  3633, -4574,
    3846, -4574, -4574, -4574, -4574, -4574,  1695,  1672, -4574,   137,
     142,  3643,  2056,  3285,  1182, -4574, -4574, -4574, -4574,  3644,
    -142, -4574, 74135,  3648,  1204, 59215,  3475,  3477, -4574, -4574,
    3488, -4574, -4574,   621,   345, -4574,  2390,   212, -4574, -4574,
   -4574, -4574, -4574,   -21,  1576,   -21,  2900,   -21,   -21,  2282,
     -21,  3426,  3894,  3938, 68167,  3399, -4574,  2233, -4574, -4574,
   -4574, -4574,  2626, -4574, 31588,  3724,  1573,  3304, -4574, -4574,
   -4574, 51755, 51755, -4574, -4574, -4574, -4574, 68167,   131, -4574,
    3305, -4574, 25615, -4574,  3365,   108, -4574, -4574, -4574, -4574,
    2568,  2777, -4574, -4574,  4007,  3603,  3816,  3484,  2777,  2111,
     -21,   416, -4574,  2707,   -21,   416,  2707,  2707, 68167,   -21,
   -4574,  1533,  1182, -4574, 68167,   274,   208,   274, -4574,   629,
   68167, 39794, 65183, 68167, 68167, 68167, 68167,   208,  1576,  2900,
   68167,  2900, 65929,   208,   -21,   -21,   -21,   -21,  2626,  1182,
    2900, -4574, 65929, -4574, 68167, 68167,  3822, 68167,  3823, 68167,
   68167, -4574, 59215, 68167, 65929, -4574,  1182,  1771,  2900, 66675,
    1576,  1576, 68167,   208, 68167,  1653,   -21,   208, -4574, 68167,
   -4574, -4574, 68167, 68167,   208,   208,  2048, -4574,  1653,  1653,
    2933, -4574, -4574, 68167,  2900, 65929,  3323, -4574, -4574, 56977,
     -21,   -21, -4574,  1182,  1182,  3689, -4574, -4574,  8098,  8455,
    1876,  1182,  3388,  3718,  1029, 68167, -4574,  3425,  3440, -4574,
   -4574, -4574, -4574, -4574,   274, 65929, 67421,  3853, -4574, 16423,
    3951,  3954,  3955,  3956,  3960,  3963,  3965,  3967,  3968,  3970,
    3971,  3972,  3973,  3974,  3978,  3980,  3985,  3986,  3988,  3991,
    3993,  3995,  3997,  3999,  4000,  4001,  4002,  4003,  4008,  4012,
      74, -4574, -4574,  4014,  4015,  4016,  4019,  4020,  4023,  4024,
      90, -4574, -4574, -4574, -4574, -4574, -4574, -4574,   135, 68167,
    3484,  3458,  3487, 68167,  3494, -4574,  3887,  2789,  3593,   253,
    3532, 53993,  3722,  1182,  1261,  1261,  3812, -4574,  6457, 68167,
   68167,  3427,   -63, -4574,  2169, -4574, 19499, -4574,  3430,  3162,
     291,  3162,  3162,  3162,   452, 16423, 16423,  4040,  4182, -4574,
   57723, -4574, -4574, -4574, 57723,  4182,  2118,  3162,  3432, -4574,
    3957,  3959, -4574, -4574, -4574, 16423, 16423, -4574, 16423,   -39,
   -4574, 16423, 16423, 16423, 16423, 16423, -4574, -4574, 21806, -4574,
    3431,  3435,  3162, -4574, -4574,  3442,  3162, 16423, -4574, -4574,
   -4574, -4574, 16423, -4574, 16423, -4574, 16423, 16423, -4574, 16423,
   16423, -4574,  3162,  3162, 20268, 16423, 16423,  3443,  3162, -4574,
   16423, 16423, 16423, -4574, 16423,   336, 16423,  1452, 16423,  1593,
   16423, -4574, 16423, -4574,  3162,  3162, -4574, 16423,  2310, -4574,
    2900, -4574,  3468,  3162, -4574, 40540, -4574, -4574,   351,  1354,
    3444,   351,  3446, 21806,  3162, -4574, -4574, -4574,  1304,  2129,
   -4574, -4574, -4574,  3450,   291, -4574, -4574, -4574, -4574, -4574,
   -4574, 21806,   362, 21806,  3854, 21806,  4436,  4436,  2573, 10271,
   -4574,  1250,  3854, -4574, -4574, 16423, 16423, 43534, 68167,   419,
   -4574,  3494,  1372, -4574,   112, -4574, -4574, 53993, -4574, -4574,
   -4574, -4574, -4574,   164, 59215,  3445, -4574, -4574, -4574, -4574,
   -4574,  3426, -4574,  5081,  3182, -4574,  3640,  3641,  3659, -4574,
   33826, -4574, -4574, -4574, -4574, 33826,  1151,  1225, -4574, 68167,
   53993,  3463,  3464,  3476,  3622,  3561, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574,  3303,  3474,  3174,
   -4574,  3553, -4574, -4574,  3472, -4574,  1701,  3117,  1086, 68167,
   -4574, 16423,   -21, -4574,  3662, -4574, 68167, 68167, -4574, -4574,
   -4574, -4574,   567, -4574,  3483,  2741, -4574,  3494, -4574, -4574,
    3426, -4574,  4784, 27112,  3865,  1225, 53993,  4054, -4574, -4574,
    3489,   780, 24113,  3528, -4574,  3486,  1567, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574,  3553,  2580,  4044,  3303, 74881,
   74881, 74881, -4574, -4574, -4574,  3530,  3006,  3006,  3536,  3536,
     423,  3834, -4574, -4574, -4574, -4574,  2822, -4574, -4574,  3365,
   -4574, -4574, -4574, -4574, -4574,  1182,   291, -4574, 30842, -4574,
     -21,  4068, -4574,   291,  3503, 68167, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574,  3654,   885, -4574, -4574, -4574, -4574, -4574,  3843,
    3174,  3680,  4068, -4574,   885,   885, 68167, 68167,   885, -4574,
   -4574, -4574, -4574, -4574,   -21, -4574, 18730, -4574, 68167, -4574,
    3505, -4574,  3934, 68167,  4116,  3509, 21806,  3512, 21806,  3365,
    3725,  3515,  4265,  2900,  3117, -4574,  3543,  3877, -4574, -4574,
    2822, -4574,  3826,  3879,  3536,  2353, -4574, -4574, -4574, -4574,
     475,  2900,  2900,  2900,  2900,  2390, -4574,   949,   911,  1475,
    3365,   149,   212, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574,   -21,  4136,  3892,  3539, -4574, -4574,
   57723,  4228, -4574, -4574, -4574, -4574, -4574, -4574, 16423, -4574,
   -4574,   538,   206,  1440, 25615, 68167, 44285, -4574,   -93, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,  1182,
     -21,  3783,  3784,  3786,  3794,  3795,  3817, -4574, -4574, 68167,
    3936, -4574,   -21,   970,   -21,   -21,   -21,   -21,  2900,   -21,
     -21,  2144, -4574, -4574, -4574,   237, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, 59215, -4574, -4574, -4574, 68167,   -69, 68167,  3566,
    4069,  4070,   274,   769, 68167,  3567,  3719,  3745, 50263,  9508,
   -4574, -4574, -4574,  3979,  3979,  2075,  1008, 65929, -4574, -4574,
   68167, -4574, -4574,  2460,  3569, -4574,  3365, -4574, -4574, -4574,
   -4574, 52501,   -21, -4574,  3775, -4574, -4574, 68167,  3569, -4574,
   -4574,   311, -4574,  3704,  3787,   -21, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574,  9508, 65929,  3578, -4574,
    1933, -4574, -4574, -4574, -4574, 65929,  3765,  3769, -4574, 68167,
   65929, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, 68167, -4574, -4574, -4574, -4574,
   56231, 57723, -4574,  3884,  2507,  4406, -4574, -4574, -4574,  2991,
   -4574, -4574, -4574,   201,  3977,  1182,  2380,   215, -4574,  3903,
   -4574, -4574,  2637,  3982,  3983,  3592, -4574,  3602, -4574,  3586,
   -4574, 64437,   291,  3599,  2900,   -21,  2900,  2900,   -21,   -21,
    2900,  2900,   -21,   -21,   -21,   -21,   -21,   -21,   -21,   -21,
    2900,  2900,   -21,  2283,   -21,  2900,   -21,   -21,  2900, 58469,
      55,  2900,   910,  6998, -4574,  3604,  3604,  3606,  3606,  3608,
    3608,  3610,  3052, -4574, -4574,   187,  3611,  3269,  3494, 59215,
    3614, -4574,  4150,  1182,  1182,  1182,  1182, -4574,   294, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574,   201,  1363, 59215, 74881, -4574,  3028,   840, -4574, -4574,
   -4574, -4574, -4574, 68167,  2215, -4574, 68167, -4574, 37556, -4574,
   -4574, -4574, -4574,   811,  1798, -4574,  1636,  1166, -4574,   411,
    3893, -4574, -4574,  1080,  3615, -4574, -4574,  1009, 17192,  1737,
    3162, -4574, -4574, -4574, -4574, -4574, 16423,   291,  2237, -4574,
    3619,  3619,  3620, -4574,  3621,  3981,  3619, -4574,  4303, -4574,
   -4574,  4126,  3620,  4134,  3619, -4574,  3661,  3634,  3635,  3639,
    3162, -4574,  3162, 16423, 16423,  1814,   364,  1828,  4338,  3897,
    1175,  1181,   381, -4574,  1850,  3976,  3162, -4574,  3162, -4574,
    1852,  1856,  1957,  1996,  1235,  2013,  2147, -4574, -4574, 17192,
    2059,   312,   461,  3162, -4574,  2093,  1239,  1299,  2156, 16423,
    2158, 16423,  2173, 16423,  2244,  2276, -4574, -4574,  2291,  3642,
    3642,  3646,  3653, -4574, 68167, -4574, -4574, -4574, -4574,  3713,
    3717,  3162,  3650,  3650,   351,  3162,   351,   183, -4574,  3824,
    1161, -4574, 68167, -4574, -4574, -4574, 16423,  1177,   191, -4574,
   -4574, 21806,   470, 21806, -4574,  3656, -4574, -4574, -4574, -4574,
    4123,  4397, -4574, -4574,  3864, -4574, -4574, -4574,  3133, -4574,
   -4574,    85,  4253,  3655, -4574, -4574, -4574, -4574, -4574, 42783,
   -4574,  1081,  3664, 45036, 53993,  4041,  3174, 18730, -4574,  3213,
   68167,   274,  4194,   174,  3785,  4145, -4574, -4574, -4574,   291,
   -4574, 53993, -4574, -4574, -4574, 68167, 68167,   932, -4574, 35318,
   -4574, -4574, -4574, -4574,  3665, -4574, -4574,  4271, -4574,  4235,
   42783,  3126, 53993, 16423,  2580,  3666,  3671,  3672,  3673,  3674,
    3675, 25615, 25615,  4183,  4186, -4574,  4055,   178,  4055, -4574,
   38302, 25615, 25615,  2982,  2637,  4399,  4231,  4044,  2822,  2822,
    2822,  3543,  3543, -4574,  4342, -4574, -4574, -4574, -4574, -4574,
   -4574,   309, -4574, 11809, -4574, -4574,  1576, -4574,   394, -4574,
   53993, -4574,  4076, -4574, -4574, -4574, -4574, -4574,  2047,  2047,
   -4574, -4574, -4574, -4574,  2900, -4574, -4574, 68167,  2491, 68167,
    3047, -4574,  4402,  3687, 21806,  4293,  3695,  4230, -4574,  3536,
    3543,  3006,   -62, -4574,   877,  1390, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574,  1669,  4353,  3438,  4216, -4574, -4574,
   -4574,  2092,  2092, -4574, -4574, -4574,   -21,  4305, -4574, -4574,
    1106,  4184, -4574, 25615,  3553, 44285,  -174, -4574, -4574,  3693,
   68167,   -21, -4574, -4574, -4574,  4355, -4574,  4359,  1753,  4102,
    4310, -4574, -4574,   347, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574,  2111, -4574,  3710,  3365,
    4072,  3711, 16423, 68167, -4574, -4574, -4574,  3748, -4574, -4574,
    3715, 41286,  1261,  1261,  2162, -4574, -4574, -4574,  9508, -4574,
    3619,  3619,  3619, -4574, -4574,   315,  3620, -4574, -4574,  3727,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,   600,   730,
   -4574, -4574,   600, -4574, -4574, -4574,   303,  2217, -4574, -4574,
   -4574, -4574, -4574,  3728, -4574,  3619,  3620,  3620, -4574, -4574,
     600,  3619, -4574,  3619,  4045,  3420, -4574,   166,  3619,  3619,
    3619,  3730,  3621, -4574, -4574, -4574, -4574, -4574,  4357,  4371,
   -4574,  9508, -4574, 68167, -4574,  3504,  3504, -4574, -4574, -4574,
   -4574,  3933, -4574, -4574,  1197, -4574, 68167, -4574, -4574, 68167,
   68167,   226,   567,  3735, -4574, -4574, -4574,  3751,   -44, -4574,
     -56, -4574, -4574,  3708,  1787,   435,  3918,  2400, -4574, 68167,
   68167, -4574, -4574, 67421, -4574,  2900, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, 36064, -4574, -4574, 36810, -4574, -4574,   809,
   -4574, -4574,  1983, -4574, -4574, 41286,  1182,  1182, -4574,   402,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,  4120,
   41286,   985, 68167,   -21,  2707,  2707,  3365,  3395, -4574,  4101,
   -4574,  2367,  2822,   212, -4574, -4574,  3056,  3746, -4574, -4574,
   68167,  2177, -4574, -4574,  5283,  1636, -4574,  1080,  4131, 68167,
   -4574, -4574, -4574, -4574,  3996, -4574, -4574, -4574, -4574,  4133,
    4436, -4574, -4574,   291, 16423,   163, -4574, -4574,   600,  4140,
   -4574,  1114, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574,  3750, -4574, -4574, -4574, -4574,
   -4574,  4436,  4436, -4574, -4574, 16423, -4574, 16423,   398,  3753,
   16423, 16423, -4574, 16423, -4574,  1302,  3754,  3885, -4574, -4574,
   -4574, -4574, -4574, -4574, 16423, -4574, -4574,  4436, -4574, 16423,
   -4574, -4574, 16423, -4574, -4574, 16423, 16423, -4574,  2295, -4574,
    2343, -4574,  2362, -4574, -4574, -4574,  3365,  3756,  3759,  2900,
    3162, -4574,  3761,  4113, -4574, -4574, -4574, 16423, -4574, -4574,
    3162, -4574,  3162,  4319,  4182,  1518, -4574,  2187, -4574, -4574,
   -4574, 16423,  1177, -4574, -4574, -4574, -4574, -4574, -4574,  4094,
   -4574,  4721, 33826,  3945,  4320, -4574, -4574, -4574, -4574,  1236,
   -4574, -4574,  2192, 68167,  4508,  4154, -4574,   274,  4194,  4264,
   -4574,  4291, -4574, -4574, -4574, -4574,  3773,  3569,  3771, -4574,
    1182,  1991,  2194, -4574, -4574, -4574,  3772, 18730,  3777, -4574,
   27112, 53993,  4344,  3126,  1370,  2637, 25615, -4574, -4574, -4574,
   -4574, -4574,  1567,  3788,  3789,  3791,  1567, -4574, -4574, -4574,
    4286, -4574,  4055,  4055,  4287,  4290, -4574,  3291,  3588,   483,
   -4574, 16423, 16423,  3845,  4231,  3536,  3536,  4146,  3365, -4574,
   -4574,  3174, -4574, -4574,  3126, -4574,  3174,  3303,   885, -4574,
    2219, -4574, -4574,  2220, -4574,  4272,  4072, -4574,  3154,  3365,
   68167,  4503, -4574,  3536,  3536,  3006, -4574, -4574, -4574,  3536,
    4153,   -58, -4574,  3365, -4574,   148, -4574, -4574,  3749, -4574,
   -4574, -4574,   -21,  4510,  4511,  4413,  4519,  1106, -4574,   -18,
   -4574,  -174,  3303,  1523, -4574,  3815, -4574,  1089, -4574, -4574,
   -4574, -4574, -4574,  4090, -4574,   116, -4574, 41286, -4574, 68167,
    2235, -4574, 41286,  2379,  3805, -4574, 41286, 16423, -4574,  2236,
   -4574,   189, -4574, -4574, -4574, 50263,  4045, -4574, -4574, -4574,
    4535,   384, -4574,  4539, -4574,   600, 57723, -4574, -4574, -4574,
   -4574,   398, -4574,  1489, -4574,   600, -4574, -4574,  3949, -4574,
   -4574, -4574,   398,   600, -4574, -4574, -4574, -4574,   -40, 68167,
    1197, -4574, -4574, 56231,  2322,   -21,  3385,  3848, -4574,  3975,
   -4574,  4451,  1752,  4317,  3494,  1182,  1182,  4517, -4574, -4574,
    3554, -4574,  4379,  4322,   817, -4574,  4548, -4574,   600,  4548,
     -40,  4214, -4574,   -40,   -40, -4574,  3421,  1197, -4574, -4574,
   -4574, 68167, 68167, -4574, -4574, -4574, -4574, -4574,  3825, -4574,
   -4574,  4215,  3977, -4574,  4217, -4574, -4574,  4175, -4574, 16423,
   16423,  4218, 68167,  4219, -4574,  4518,  4577,  3569,  1276, -4574,
    2274, -4574, -4574, -4574,  2318, -4574, -4574, -4574,  2324, -4574,
   -4574,  3829, -4574,  2344, -4574, -4574, -4574, 68167, -4574,  2357,
    2359,  2707,  2707,  3298,   985,  3836,  2372,   -21,   -21,   -21,
     -21, -4574, -4574, -4574, -4574, -4574, -4574, -4574,   877,  1427,
     149,  3388, 41286,  3839,  6882, -4574,  4105,  4118,  3855,  3849,
   -4574,  9508,   -21,   248, 68167,   969,   291,  3857,  3858,  3859,
    3860, -4574,  3861,  2397, -4574,  3863,  3866,  2421,  3867, -4574,
   -4574,  3162,  2426,  1387,  2406,  4292,  4364, -4574,  4205, -4574,
    2438,  1676,  2492,  2494,  2506,  2510, -4574, -4574, -4574, -4574,
   -4574, -4574,  3869, -4574, -4574,  4591,  4252,   291, -4574, -4574,
    1895,   351, -4574,  3660, -4574, -4574,  3878,  1518, -4574,  4266,
   -4574,  2412,  4467,  4365, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, 53993,
    4267,  4439,  4630,  3303,   173, 68167,  4154,  4507, -4574, -4574,
   -4574,  4092, -4574, 68167, 18730, -4574, -4574,  1991, 68167, 42032,
    3891,  3665, -4574,  3126, 53993,  1304, -4574,   284, -4574, -4574,
    4411,  4415, -4574, -4574, 16423,  3900, 16423,  3907, -4574, -4574,
     274,   274, -4574,   483, -4574, -4574,   291,   625, -4574,   291,
   68167, -4574,  3845, -4574, -4574, -4574, -4574, -4574,  3426, -4574,
   -4574, -4574, 68167, -4574,  2180,  2420, -4574, -4574,  3909,  3906,
     -21, -4574, -4574,  3536, -4574,  3536,  3006, -4574,  4556, -4574,
   -4574, -4574,  4557, -4574,   398,   398,  4631,   398, -4574,  4633,
    4634,   -18, -4574, -4574,  4295,  4295,  4300, -4574,  2436,  4064,
   -4574,  4072,  2461, -4574, 68167,  2464,  2512,  1835, 41286,  4315,
   -4574, -4574, -4574, -4574, -4574, -4574, 57723, -4574, -4574,  4548,
    2466, -4574, -4574, -4574,  2472, -4574, -4574, -4574, -4574, -4574,
     -40, -4574,  3925, -4574,   441, -4574, -4574, -4574, -4574, -4574,
    3640,  3641,  3659,  2283,  2283, 16423, -4574, -4574, -4574, -4574,
   -4574, -4574,  4326,  4074, -4574, -4574, -4574, -4574, -4574, -4574,
     -21,   -21, -4574, 56231, -4574,  4675,  4676, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574,  3927, -4574, -4574, 16423, -4574, -4574,
    2251, -4574,  4072, -4574, -4574, -4574, -4574,   291,  4436,  4617,
   -4574, -4574,  4188,   -21,  4558,  2215,  4329, -4574, -4574,  2900,
   -4574, 68167, -4574, 68167, 68167, -4574,   -21,  3935, -4574,  3939,
     344, -4574, -4574, -4574,  2111,   641, -4574, -4574, -4574,  4480,
   -4574,  4308, -4574, -4574,  2380,  2495, -4574, -4574,   -21,   435,
   -4574, 68167,  3504, -4574, -4574, -4574, -4574,  3944,  3946, -4574,
   68167,  4522, -4574, -4574, -4574, -4574, -4574, -4574,  4346, -4574,
   -4574, -4574, 16423, -4574, -4574, 16423, -4574, -4574,  4375,  4547,
   -4574, -4574, -4574, -4574, -4574, -4574,  3958,  2900, 16423,  4673,
    1608, -4574, -4574,  3162, -4574, -4574, -4574,  4349,   113, -4574,
   -4574, -4574,  1236, -4574,  4337, 53993, -4574,  3174,  4154,  2637,
   -4574,  4461, 68167, -4574, -4574, -4574, -4574, -4574,  3984, -4574,
   -4574,  3126,   378, -4574, -4574, -4574,   291, 68167,   291, 68167,
    4544,  4544, -4574, -4574, 16423, -4574,  4708,  3987, -4574, -4574,
   -4574, -4574,  3994,  4265, -4574, -4574,  1189, -4574, -4574,  3536,
   -4574, -4574, -4574, -4574,   398, -4574,   398,   398, -4574,  4463,
    4463,  4578,   344,  2164,  4013, -4574,   641,  2505, -4574,  1835,
    1933,   -21,  1182,  1182,  1182, -4574,  1835, -4574, -4574, -4574,
   -4574, -4574,  3990, -4574, -4574,   600,   398,   600, -4574, 68167,
    4422, -4574, -4574,  2517, -4574, -4574, -4574, -4574, -4574, -4574,
    3998,  2521, -4574, -4574,  2511, -4574, -4574, -4574, -4574, -4574,
    4106, -4574,  4073, -4574, -4574, -4574, -4574, -4574, 68167, 68167,
    4350,   419,   344, -4574, -4574,  2514,   419,   641, -4574, -4574,
    4694, -4574, -4574,  1835, -4574,  4218,  4276, -4574, -4574, -4574,
    1944,  9508,  4595,  3992, -4574,  2558, -4574, -4574, -4574,  4005,
    4009, 16423, -4574, -4574, -4574, -4574,  1388, -4574,  4588, -4574,
   -4574,  4630, -4574,  4114, -4574, -4574, -4574,  4144,  3553,  4004,
    4011,  4021,  4026,  1809,  4028,  4030, -4574,  4031, 68167, 21806,
    4032,  4623,   145, -4574, -4574, -4574, -4574, -4574, -4574, 51755,
   -4574, -4574, -4574, -4574,  4034,  4190,  1182,  4624,  4629,  1182,
    1182,  1182,  1182,  4036,  4013, -4574,  4608, -4574,  4045, 68167,
   -4574, -4574, -4574,  2900,   -21,   -21, -4574,  1933, -4574, -4574,
   -4574,  2525, -4574,  1305,  4389, -4574, 16423, -4574, -4574,  4234,
   -4574, 81595,   372, -4574, -4574,  4037,  4010,   298, -4574, -4574,
   -4574, -4574, -4574,  3494,   419,  2400, -4574,  9508, -4574, -4574,
    3504,  4296, -4574, -4574, -4574,  3304,  2717,  4304, 16423,  4111,
    4127, -4574, -4574,  4115,  4117, -4574,  4151, -4574, 68167,  2626,
   69659,  3454, -4574, -4574,  4766, -4574,  4767, 67421, 67421, -4574,
   -4574,  3231, 68167,  1182,  4282, -4574, -4574,  4057, -4574, -4574,
      -2,   -21,  1182,  1182,  3494,  3494,  3365, 68167,  4263, -4574,
   -4574,  1182, -4574, -4574, -4574, -4574, -4574, -4574, -4574, 68167,
   -4574, -4574, -4574,   480, -4574,  2588, 16423,  4664,  4191, 68167,
    1348, -4574, 83087, 83087, 68167, -4574, -4574, -4574, -4574,  4179,
   -4574, -4574,  1067, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574,  4796, -4574,  4051, -4574, -4574, -4574,
   -4574,  4765,  4445,  4768, -4574, 68167, -4574, -4574, -4574,  4518,
    3504,  4865, -4574,   979, 16423,  -161, -4574,  4812,  1863,  1910,
   -4574,  4436, -4574,   244, -4574, -4574, -4574, 72643,  3771,  4351,
    4132,  2533, -4574,  9197, -4574, -4574, -4574,  4071,  2534,  4280,
    2570,  3117, -4574, -4574,  2604, -4574, 21037, -4574, -4574, -4574,
   -4574,   -21,   -21, -4574, -4574, -4574, -4574, 59215,  2611, -4574,
   59215, -4574,  1093,  1093,  1750,   291, 16423, -4574, 16423,  4203,
   -4574, -4574,  4641, 68167, -4574, -4574, -4574, -4574, 16423, -4574,
   81595, 81595, -4574, -4574, -4574, -4574,  4807,  4456, -4574,  4458,
    4080,  4703, -4574, -4574, -4574, -4574,  4713, 81595, -4574, -4574,
   59215, -4574,  4436, -4574,  2717, -4574, -4574,  4156,  4369, -4574,
    4168, -4574,  2930, -4574, -4574,  2822,  4636,  4228,  1304, -4574,
   69659,  4159,  3504, -4574, -4574,  3365, -4574,  4280,  4393, -4574,
    4057, -4574,  2612, -4574,  3854, -4574, -4574,  4013, -4574,  4263,
   -4574, -4574,  4856, -4574,   322,  4487,  4488, -4574, -4574,  3554,
     291,   291, -4574,   354, -4574, -4574,  4621,  4714, 16423,   291,
   77865,  4103, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, 82341, 16423, -4574,  1067,  4796,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, 81595,  1941,
   -4574, -4574, -4574, -4574, -4574,  4821,  4184,   378, -4574, -4574,
    4706, -4574, -4574, -4574, -4574, -4574, 21037, -4574, -4574, -4574,
   -4574, -4574,  4269,  4749, -4574,  4246, 16423, 81595, -4574,  4727,
   -4574,  4652,   291,  4592,  4121, -4574,  4124,   291,  4763, 83087,
   83087, -4574,  4865, -4574, -4574,   398,  4660, -4574, -4574,  4193,
   -4574,  1093,  1093, -4574,   365, -4574,   291, 78611,  4840, 68167,
   -4574,  4324, -4574, -4574, 16423,  4757, 59961, 79357,  4135, -4574,
   -4574, -4574, 81595, -4574,  4528,  4139,  1304, -4574, -4574, 16423,
   -4574,  4750,  4330, -4574,  4142, -4574, 81595,   291, 81595, -4574,
   -4574,  4699,  8870,   440, -4574,  4148, -4574, -4574,   165, 33080,
    4417,  1369,   291,  4862, 81595, 68167, 75627,  4770, 80103,  4726,
   68167,  3504,  4728,  4731, -4574, -4574, -4574, -4574, -4574, 59215,
    2614, -4574, -4574, 68167, -4574, -4574, -4574,  1518,  4356, -4574,
   76373, -4574,  2636,  4466,  4294, -4574, -4574,  4803,  3632, -4574,
   -4574, -4574, 34572,  4164, -4574,  1182, -4574,  4559, 81595, 81595,
   -4574, -4574, -4574, -4574, 48025, 16423, -4574, -4574, -4574, -4574,
    1859, -4574, 68167, 18730,  4236, 77119, 80849, -4574, -4574, -4574,
   26365, -4574, -4574, -4574,  4738, -4574,   291, -4574, -4574, -4574,
   48025, -4574, -4574, -4574
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1892,  2929,  1198,  2881,     0,     0,     0,     0,     0,     0,
    2883,  2929,   107,  2010,  2011,     0,  1835,     7,     0,  1198,
     360,     0,     0,   119,     0,  1849,     0,  2065,     0,     0,
    1198,     0,  2059,     0,     0,  1198,  1897,  2044,   337,     0,
    2883,     0,  1263,     0,  1927,  2739,     0,     0,     0,     0,
    1910,     0,  2736,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2740,     0,     0,     2,     8,    13,    42,     0,
      79,    62,    69,    31,    41,    39,    38,    36,    40,    37,
      30,    95,    86,    65,    25,    15,    20,    17,    27,    16,
      19,    23,    24,    22,    26,    21,     0,    66,  1122,    98,
    1160,    99,    33,    83,    28,    29,    32,    76,    82,    77,
      78,    91,  1229,  1226,  1757,  1228,  1241,  1249,  1250,  1251,
    1893,    45,    58,    49,    46,    48,    52,    51,    60,    61,
      47,    59,    56,    57,    50,    54,    55,    53,    71,    84,
     103,     0,    43,   100,    96,    44,    63,  2012,    64,    85,
      80,    73,   104,    74,    92,    94,    93,    75,   102,    97,
      87,    18,    68,    88,    67,    14,    35,    89,    90,    81,
     105,    72,   101,    70,    34,     0,  1020,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1833,     0,   958,  2927,
    2928,  2929,  1200,  1199,     0,  2883,  2166,  1185,     0,  2250,
    2249,  2252,  2254,  2255,  2256,  2257,  2258,  2259,  2202,  2261,
    2263,  2264,  2265,  2266,  2267,  2203,  2268,  2269,  2270,  2271,
    2272,  2273,  2204,  2205,  2275,  2276,  2277,  2278,  2279,  2206,
    2207,  2280,  2281,  2282,  2283,  2284,  2285,  2286,  2287,  2288,
    2289,  2209,  2290,  2210,  2291,  2292,  2294,  2295,  2325,  2296,
    2297,  2298,  2299,  2300,  2301,  2211,  2302,  2303,  2304,  2305,
    2306,  2307,  2308,  2309,  2310,  2212,  2311,  2312,  2314,  2316,
    2317,  2318,  2319,  2320,  2213,  2321,  2322,  2323,  2324,  2214,
    2326,  2328,  2329,  2331,  2333,  2332,  2334,  2335,  2240,  2336,
    2337,  2199,  2339,  2340,  2341,  2342,  2343,  2345,  2346,  2241,
    2347,  2348,  2349,  2350,  2215,  2216,  2352,  2353,  2354,  2355,
    2361,  2356,  2357,  2358,  2638,  2360,  2217,  2362,  2218,  2366,
    2365,  2367,  2162,  2368,  2163,  2369,  2219,  2371,  2372,  2373,
    2374,  2220,  2376,  2377,  2378,  2379,  2380,  2381,  2383,  2221,
    2384,  2385,  2386,  2387,  2388,  2389,  2639,  2391,  2392,  2393,
    2394,  2396,  2397,  2399,  2401,  2402,  2403,  2404,  2406,  2407,
    2408,  2418,  2409,  2410,  2411,  2413,  2412,  2414,  2415,  2416,
    2419,  2398,  2421,  2422,  2423,  2424,  2425,  2426,  2427,  2429,
    2430,  2431,  2432,  2433,  2434,  2435,  2436,  2437,  2438,  2439,
    2440,  2441,  2442,  2443,  2444,  2445,  2446,  2447,  2448,  2450,
    2451,  2452,  2453,  2242,  2222,  2455,  2457,  2458,  2460,  2463,
    2464,  2465,  2467,  2471,  2472,  2473,  2474,  2475,  2477,  2476,
    2478,  2481,  2483,  2484,  2482,  2485,  2486,  2487,  2223,  2224,
    2489,  2490,  2491,  2243,  2493,  2495,  2494,  2244,  2496,  2497,
    2498,  2500,  2501,  2502,  2503,  2504,  2506,  2507,  2508,  2509,
    2510,  2245,  2511,  2512,  2225,  2513,  2246,  2514,  2516,  2515,
    2517,  2519,  2520,  2518,  2226,  2523,  2525,  2526,  2528,  2530,
    2532,  2227,  2534,  2535,  2536,  2538,  2537,  2539,  2228,  2540,
    2541,  2547,  2548,  2549,  2550,  2642,  2551,  2552,  2201,  2229,
    2553,  2230,  2555,  2556,  2557,  2558,  2559,  2560,  2561,  2562,
    2563,  2564,  2565,  2566,  2568,  2569,  2231,  2570,  2571,  2572,
    2573,  2232,  2574,  2576,  2577,  2578,  2579,  2580,  2581,  2248,
    2582,  2583,  2584,  2585,  2586,  2587,  2588,  2589,  2590,  2591,
    2592,  2597,  2595,  2596,  2598,  2600,  2601,  2233,  2602,  2603,
    2605,  2606,  2607,  2608,  2234,  2235,  2609,  2610,  2611,  2612,
    2613,  2614,  2615,  2616,  2618,  2620,  2621,  2622,  2623,  2624,
    2625,  2626,  2627,  2236,  2628,  2629,  2630,  2640,  2533,  2253,
    2375,  2619,  2293,  2554,  2390,  2454,  2641,  2363,  2274,  2208,
    2338,  2351,  2456,  2470,  2488,  2524,  2594,  2604,  2449,  2468,
    2480,  2364,  2531,  2567,  2593,  2247,  2617,  2405,  2359,  2200,
    2313,  2315,  2469,  2505,  2251,  2370,  2260,  2428,  2466,  2545,
    2542,  2544,  2546,  2527,  2462,  2327,  2461,  2400,  2499,  2395,
    2420,  2492,  2417,  2521,  2479,  2344,  2522,  2575,  2459,  2529,
    2382,  2599,  2262,  2330,  2543,   291,  2173,   273,  2174,  2195,
    2196,  2197,  2194,  2198,     0,     0,  2728,  2727,     0,     0,
    2884,  2885,   621,     0,     0,     0,     0,     0,     0,  1836,
       0,   899,   621,   621,     0,     0,     0,   211,  2912,  2912,
    2929,  2931,  2933,  2252,  2202,  2266,     0,  2133,     0,     0,
       0,  1608,     0,  2206,     0,  2284,  2286,     0,     0,  1291,
    1291,   784,     0,     0,     0,  2309,  2310,  2141,     0,     0,
       0,  2130,  2142,  2352,  2356,  2358,     0,  2132,  2367,     0,
       0,     0,     0,  2388,  2139,     0,     0,  2432,  2434,     0,
       0,  2438,  2439,  2440,  2441,  2114,  1350,     0,   784,  2126,
    2138,  2120,  2485,  2486,     0,  2496,     0,     0,  2532,     0,
       0,  2537,  2547,     0,     0,  2578,     0,     0,   784,  2113,
    2597,  2595,  2596,  2598,     0,  2131,  2233,  2140,     0,  2612,
    1291,   784,   784,     0,     0,     0,  2622,  2623,  2630,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2382,     0,     0,  1283,     0,     0,     0,
    1349,     0,  1431,  2903,  1811,  1282,  1286,  1303,  1308,  1325,
       0,  1342,  1361,  1362,  1364,  1469,  1363,  1369,  1490,  1370,
    1491,  1368,  2127,  1367,  2137,  2136,  1366,  2128,  2129,  1284,
    1360,  2153,  2173,  2152,  1376,  2901,  1833,  1833,  1833,     0,
       0,  1833,  1833,     0,     0,  1833,     0,  1833,  1833,  1833,
       0,     0,   112,  2019,   361,   362,     0,  2780,  2793,  2794,
    2790,  2795,  2813,  2796,  2800,     0,  2792,  2861,  2186,     0,
    2799,     0,  2861,  2797,     0,  2861,     0,  2798,  2803,  2814,
    2861,  2791,  2175,  2185,  2184,  2861,  2632,  2631,  2176,  2633,
       0,  2782,     0,  2158,     0,     0,  1851,  1852,  1850,  1107,
       0,     0,  2066,  2067,     0,  2070,     0,  2071,  2074,     0,
    2724,     0,     0,     0,     0,     0,  1201,     0,  1854,  1898,
    1855,  1853,  1833,     0,   327,   336,   338,   339,   335,  2780,
       0,     0,  2885,  2896,  2911,  2906,  2905,  2908,  2909,  2910,
    1268,  2907,  2904,     0,  1264,  1266,  1267,   836,     0,     0,
    2673,  2676,  2444,  2478,  2677,  2600,  2674,  2533,  2675,  2247,
       0,     0,  2179,  2700,  2635,  2636,  2637,  2634,  2180,  2643,
       0,  2667,     0,  1987,   339,  1121,  1154,  1138,  1120,  1154,
    1262,  2158,  1911,     0,     0,     0,  2738,     0,  2068,     0,
    1261,  1874,     0,  1734,  1737,  1739,  2977,     0,     0,     0,
    2972,     0,  2978,     0,     0,  2152,     0,     0,     0,     0,
       0,  2902,     0,     0,     0,     0,     0,     0,     1,    10,
       0,     0,  1291,  2183,  2612,     0,  2182,  2181,  2187,  2189,
    2838,  2859,  2865,     0,     0,     0,  1119,  1123,  1124,  1126,
    1127,  1128,     0,  1132,  1146,     0,     0,     0,  1227,  1270,
    1231,     0,  2898,  1766,  1758,     0,  2898,  1766,  1238,  1757,
    1240,  1904,  1897,  2012,  2352,  2015,  1892,  2016,     0,   950,
    1021,     0,   954,     0,     0,     0,     0,  2741,     0,   952,
       0,  1981,  1028,     0,     0,   979,     0,     0,  2938,   956,
       0,  2882,     0,  1211,  1222,  1600,   290,     0,   121,   123,
    1168,  1829,  1187,     0,  2888,     0,     0,     0,     0,  2934,
       0,     0,     0,   473,     0,     0,     0,     0,     0,   621,
    2938,  2938,  2912,  2932,     0,     0,  1727,  1383,  1727,  1727,
    1727,  1609,     0,     0,     0,     0,     0,     0,     0,  1727,
       0,  1425,  1397,     0,  1426,     0,     0,     0,  2143,     0,
       0,     0,  1380,     0,     0,  1600,     0,  1577,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1604,  1606,  2152,
    1727,     0,     0,  1727,     0,     0,     0,     0,     0,  1296,
     832,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1727,  1727,     0,     0,  1727,  1439,  2145,     0,
       0,     0,  2144,     0,     0,     0,  2135,  2134,  2115,     0,
    1442,  1444,  1443,     0,  1727,  1727,     0,     0,     0,  1727,
    1727,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1373,  1372,  1374,     0,     0,  2903,
       0,  2682,  1573,  1575,     0,     0,  1346,  1345,     0,  1344,
    1343,  2172,     0,  1285,     0,     0,  1290,  1289,  1351,  1352,
    1353,  1354,     0,  1355,  1356,  1357,     0,     0,     0,     0,
       0,     0,  1348,  1347,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1375,     0,
       0,  2167,  2116,     0,     0,  1485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1837,     0,     0,     0,     0,
       0,     0,  1833,   114,     0,     0,  2781,  2773,  2811,  2810,
    2815,     0,  2812,  2808,  2816,  2817,  2801,     0,  2787,  2805,
       0,  2789,  2807,  2806,  2786,  2802,  2809,  2788,     0,  2784,
    2776,     0,     0,  1723,  2750,     0,     0,   120,     0,  1108,
    1855,     0,  2991,  2988,  2064,     0,  2075,  2076,  2072,     0,
       0,     0,     0,  1980,  1979,     0,  2060,  2897,  1203,     0,
       0,     0,  1856,     0,     0,  2046,  2053,  2051,  2045,  2048,
     328,     0,     0,   358,  2767,     0,     0,  2776,  2891,  2888,
    1254,  1265,   835,     0,     0,   838,  2699,  1875,  1876,   847,
       0,   837,     0,     0,     0,     0,     0,  2645,  2709,  2706,
    2705,  2658,  2653,  2652,  2191,  2834,  2651,     0,  2686,     0,
     842,   844,   843,  2696,   841,     0,     0,  2600,  2646,  2667,
       0,     0,  2644,     0,     0,   836,  1999,     0,     0,  1999,
       0,  1766,  1983,  1988,  1986,     0,  2679,  1959,  2680,  1979,
       0,  1935,  1958,     0,  1912,  1951,     0,  2681,     0,  1982,
       0,  1766,  1999,  1928,     0,     0,     0,     0,     0,     0,
     334,  1159,  1158,  1134,  1155,  1156,     0,     0,  1137,  1139,
    1140,   201,  1909,  2989,  2990,  2737,  1881,     0,  1735,     0,
       0,     0,  2119,  2118,  2974,  2117,  2982,  2984,  2968,     0,
    2971,  2970,  2979,     3,     0,     0,   562,     4,     6,     0,
       0,  1230,  1247,     0,  1246,    11,   106,  2190,     0,     0,
       0,     0,     0,     0,     0,  2856,     0,     0,  1003,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1166,     0,
    1162,  1161,     0,  1135,  1148,  1275,  1274,  1277,  2321,     0,
       0,  1810,  1804,  1807,  1806,     0,  1269,  1233,  1232,     0,
    2900,  2899,     0,  1234,  1767,  1775,  1776,  1774,  1768,  1769,
    1773,  1772,     0,  1236,  1766,  1766,  1239,  1908,  1907,  1906,
       0,  1904,  1107,     0,  2014,     0,     0,  2004,  2005,  2006,
    2007,  2008,  2003,  2002,  2017,  2018,  2936,  2937,  2935,   849,
    2930,   274,     0,     0,  2743,     0,     0,   274,     0,     0,
    1877,  1877,     0,  1877,  1877,   541,     0,   540,  1877,   627,
     494,   496,   497,   498,   499,   500,   501,   502,     0,  1105,
    1877,  1105,     0,  1877,  1877,  1105,  1877,     0,     0,  1877,
    1877,  1877,  1877,     0,     0,   850,  1877,     0,     0,  1105,
       0,  1877,     0,  1089,     0,     0,  1877,  1877,  1877,  1877,
    1877,  1105,     0,     0,  1877,  1877,     0,  1115,     0,     0,
    1877,     0,  1877,  1877,  1877,     0,  1877,  1877,     0,  1877,
       0,     0,  1877,  1050,  1051,  1877,  1877,  1061,   623,   650,
     651,     0,   948,   949,  1022,  1024,  1093,  1030,  1029,  1058,
    1063,  1091,  1092,     0,  1834,  3003,   960,     0,     0,   959,
    2938,  1182,     0,     0,   892,   891,     0,     0,  1222,  1213,
    1602,     0,  1601,   272,     0,     0,  1170,  1169,     0,  1167,
    1195,  1194,  1192,     0,  1193,  1191,  1186,  1188,  1189,  2887,
       0,     0,  2889,  2893,     0,   209,     0,     0,     0,     0,
       0,   621,     0,   475,     0,  2846,  2857,   224,   207,     0,
     925,     0,     0,   621,     0,     0,     0,  2926,  2914,  2921,
    2922,  2925,  2924,  2923,     0,  2920,  2913,  2916,  2917,  2919,
    2918,  2938,     0,     0,  1728,  1727,     0,     0,     0,     0,
       0,     0,  1610,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1292,     0,   785,  1451,     0,     0,     0,     0,
       0,  1699,  1700,  1701,  1702,  1710,  1703,  1704,  1705,  1712,
    1717,  1706,  1707,  1713,  1714,  1715,  1708,  1716,  1711,  1709,
    1718,     0,  1698,     0,     0,  1722,  1719,  1721,  1720,     0,
    1578,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1727,     0,     0,     0,  1727,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1461,     0,     0,     0,     0,     0,  1727,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1421,     0,  2155,  2154,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1524,     0,  1524,     0,     0,
       0,     0,     0,     0,     0,  1377,     0,     0,     0,     0,
       0,     0,     0,  1281,  1288,  1287,  1294,  1293,  1295,  1299,
    1304,  1297,  1301,     0,  1358,  2259,  1306,     0,     0,  1339,
       0,  1309,  1319,  1340,  1323,  1330,  1331,     0,  1326,     0,
    1328,  1329,     0,  1333,     0,  1332,  1336,  1337,  1338,  1341,
       0,     0,     0,     0,  1365,  1371,  1391,  1392,  1286,     0,
    1486,  1487,  2148,  2156,  1814,  1821,  1816,     0,  1837,  1818,
    1826,  1833,  1841,  1842,  1823,   627,  1839,  1822,   503,  2832,
    1819,  1109,  1828,  3016,     0,     0,   113,     0,     0,     0,
       0,  2036,  2038,  2041,  2037,     0,  2040,     0,  2039,  2020,
    2023,  2029,  2042,     0,     0,   359,   363,   365,     0,   368,
       0,  2804,  2863,     0,     0,  2785,  2778,  2779,  2777,     0,
    2818,  2783,  1724,     0,  2749,  2349,  2452,     0,  1729,  2159,
    2993,     0,     0,     0,     0,  2073,     0,  2726,  1723,  2725,
    2729,  1197,     0,   109,   110,     0,     0,     0,  1202,  1206,
       0,  1172,  1638,  2050,  2057,  2055,     0,   326,   351,   346,
     354,   348,   350,   349,   355,   356,   357,   352,   347,   353,
     340,     0,     0,     0,     0,  2765,     0,  2892,     0,  2894,
       0,  1729,  1255,  1254,     0,     0,     0,  2702,     0,  2698,
    2697,     0,   976,  2169,   976,     0,  2711,  2712,     0,  2703,
       0,  2704,     0,  2657,     0,     0,  2660,     0,     0,     0,
       0,     0,     0,     0,  2701,  2666,  2665,     0,  2668,  2669,
       0,  2672,  2720,  2721,  2718,  2719,  2722,  2723,  2717,  2693,
    1995,     0,     0,  2001,  1957,     0,   621,     0,     0,     0,
       0,     0,     0,     0,  1929,     0,     0,  1950,  1993,  1994,
    1999,     0,  1992,     0,  1999,     0,  1965,  1983,     0,  1999,
    1924,     0,     0,  1916,  1921,  1917,     0,  1923,  1922,  1925,
    1913,  1914,  1995,  1940,   201,  1983,  1949,  1956,  1939,  1946,
    1954,  1983,   897,   896,   895,     0,     0,  1983,  1999,  1999,
       0,  1143,  1144,     0,     0,     0,  1133,  1886,  1885,     0,
    1882,  1884,  1873,  1736,     0,  1741,     0,     0,     0,  2969,
    2985,  2967,  2973,  2980,  2981,  2966,  2156,     0,   563,     0,
       0,   566,     0,     0,  1877,  1248,    12,     9,  1011,     0,
       0,  2188,     0,     0,     0,     0,     0,     0,  2869,  2867,
       0,  2868,  2866,  2823,  2838,  2860,     0,   983,  1131,  2164,
    1130,  1129,  1125,     0,     0,     0,     0,     0,     0,     0,
       0,   201,     0,  1150,     0,     0,  1280,  1277,  1271,  1278,
    2168,  1809,   839,  1805,     0,     0,  1762,  1759,  1761,  1244,
    1242,     0,     0,  1245,  1243,  1235,  1237,     0,     0,  1831,
    1902,  1905,     0,  2013,     0,   849,   616,   619,   618,   620,
       0,   955,  2748,  2747,     0,     0,     0,     0,   953,     0,
       0,   492,  1878,     0,     0,   492,     0,     0,     0,     0,
     628,  1981,  1877,  1106,   942,   893,  1198,   893,  1067,     0,
     942,     0,     0,     0,     0,     0,     0,  1198,     0,     0,
       0,     0,     0,  1198,     0,     0,     0,     0,     0,  1877,
       0,  1076,     0,  1032,     0,     0,     0,     0,     0,     0,
       0,  1077,     0,     0,     0,  1033,  1877,     0,     0,     0,
       0,     0,     0,  1198,     0,     0,     0,  1198,  1118,     0,
    1117,  1116,     0,     0,  1198,  1198,     0,   660,     0,     0,
       0,   656,   657,     0,     0,     0,     0,  1054,  1055,     0,
       0,     0,   624,  1877,  1877,     0,  1026,  1023,   849,   849,
       0,  1877,  3011,  1012,     0,     0,   957,     0,     0,  1179,
    1215,  1209,  1214,  1212,  1222,     0,  1689,     0,   292,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     201,   153,   185,     0,     0,     0,     0,     0,     0,     0,
     201,   125,  1830,  1196,  1190,  2886,  2890,   622,   849,     0,
       0,     0,     0,     0,     0,   474,     0,   477,     0,     0,
       0,     0,  2865,  1877,     0,     0,     0,   926,   849,     0,
       0,     0,   273,  2961,     0,  2915,     0,  1447,     0,  1535,
    1585,  1535,  1535,  1535,     0,     0,     0,     0,     0,  1448,
       0,  1395,  1449,  1450,     0,     0,     0,  1535,     0,   786,
       0,     0,  1398,  1399,  1388,     0,     0,  1470,     0,  1581,
    1400,     0,     0,     0,     0,     0,  1471,  1605,     0,  1607,
    2156,     0,  1535,  1455,  1406,     0,  1535,     0,  1407,  1472,
    1473,  1474,     0,  1476,     0,  1457,     0,     0,  1460,     0,
       0,  1409,  1535,  1535,     0,     0,     0,     0,  1535,  1411,
       0,     0,     0,  1410,     0,     0,     0,     0,     0,     0,
       0,  1413,     0,  1389,  1535,  1535,  1463,     0,     0,  1465,
       0,  1422,  1727,  1535,  1572,     0,  1516,  1515,  1529,     0,
       0,  1529,     0,     0,     0,  1517,  1514,  1513,     0,     0,
    2683,  2684,  2685,   944,  1574,  1381,  1300,  1305,  1298,  1302,
    1307,     0,     0,     0,  1318,     0,     0,     0,     0,     0,
    1310,  1321,  1324,  1489,  1477,     0,  1600,     0,     0,  1094,
    1825,     0,  1981,  1824,   504,   505,   507,     0,  1111,  1110,
    1820,  3017,  1817,  1109,     0,   115,   117,  2034,  2031,  2030,
    2032,   201,  2033,     0,  2043,  2021,  2309,  2597,  2598,   372,
       0,   344,   343,   345,   369,     0,     0,  2776,  2862,     0,
       0,  2827,  2830,     0,     0,     0,  2771,  1726,  2760,  2756,
    2761,  2763,  2759,  2762,  2764,  2757,  2758,  1729,     0,  1766,
    1730,  1638,  2987,  2992,  1217,  1218,  1222,     0,     0,     0,
     111,     0,     0,  2061,     0,  1204,     0,     0,  1177,  1176,
    1178,  1171,  1173,  1174,     0,     0,  1639,     0,  2054,  2056,
     201,  2047,     0,     0,     0,  2776,     0,     0,  2895,  1257,
       0,     0,     0,     0,  1256,  1258,  1259,  1615,  1614,  1645,
    1642,  1641,  1644,  1643,  1646,  1638,  1723,  1748,  1729,     0,
       0,     0,   846,   848,   845,     0,     0,     0,  2836,  2836,
       0,     0,  2716,  2708,  2710,  2707,  2659,  2192,  2835,     0,
    2689,  2690,  2691,  2687,  2688,     0,  2694,  2692,     0,  2671,
       0,  1997,  2000,  1731,     0,     0,  1974,  1968,  1967,  1963,
    1969,  1975,  1964,  1978,  1977,  1976,  1937,  1936,  1932,  1984,
    1973,  1971,  1960,  1999,  1972,  1970,  1918,  1919,  1920,     0,
    1766,     0,  1997,  1966,  1999,  1999,     0,     0,  1999,  1953,
    1955,  1157,  1142,  1141,     0,  1880,     0,  1740,     0,  1738,
    2975,  2983,     0,     0,     0,     0,     0,     0,     0,     0,
     568,     0,   564,     0,     0,   972,   976,     0,   973,   974,
     975,  2839,  2169,     0,  2836,  2852,  2826,  2825,  2824,  2821,
       0,     0,     0,     0,     0,  1004,  1006,     0,     0,     0,
       0,   980,   984,   985,   197,  1793,  1794,  1792,  1790,  1791,
     198,   199,  1783,  1784,  1780,  1781,  1779,  1782,   200,  1165,
    1164,  1163,  1147,  1136,     0,     0,  1152,  1276,  1279,  1272,
       0,  2081,  1803,  1273,  1764,  1765,  2150,  1763,     0,  1771,
    1770,     0,  1723,  2158,     0,     0,     0,  2160,     0,  1801,
    1802,  1786,  1787,  1785,  1788,  2009,  1789,  1800,   617,  1877,
       0,     0,     0,     0,     0,     0,     0,   275,   284,     0,
       0,  2742,     0,   519,     0,     0,     0,     0,     0,     0,
       0,     0,   229,   526,   963,   627,  1796,  1798,  1795,  1797,
     531,   544,  1799,   545,   542,   964,   530,   532,   965,  3018,
     543,   495,     0,   696,   943,   894,   942,  1034,   942,     0,
       0,     0,   893,   699,   942,     0,   922,   943,   695,     0,
    1100,  1099,  1101,   697,   697,     0,     0,     0,   639,   634,
       0,   645,  1056,  1187,  1057,  1696,     0,   636,   637,   638,
     658,     0,     0,   647,     0,  1074,  1075,     0,  1037,  1072,
    1073,  1109,   629,     0,     0,     0,   675,   676,   674,   652,
     659,  1103,  1102,  1104,   632,   633,     0,     0,  1090,  1755,
    1762,   664,   640,   663,   635,     0,     0,     0,  1084,  1045,
       0,   673,   671,   668,   670,   669,   672,   648,   641,   642,
     644,   643,   655,   646,  1044,  2042,   630,   631,   661,   662,
       0,     0,  1027,  1105,  1105,  1062,  1059,  1060,  1025,  1031,
    1064,   527,   528,   503,     0,  1877,  3013,     0,  1014,  1016,
    2939,  2940,  1739,     0,     0,     0,  1692,     0,  1693,  1690,
    1691,     0,  1603,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   122,     0,     0,     0,     0,     0,
       0,     0,     0,   124,   210,   849,     0,   508,     0,     0,
       0,   219,     0,  1877,  1877,  1877,  1877,   214,   627,   479,
     481,   482,   483,   484,   485,   488,   486,   489,   487,   490,
     491,   503,     0,     0,     0,  2858,  1003,     0,   931,   933,
     932,   928,   927,     0,     0,  2080,     0,  2079,   695,   204,
     547,   549,   552,   550,   627,   625,  1866,  1868,   554,     0,
       0,   238,  2956,     0,     0,   469,   468,     0,     0,     0,
    1535,  1492,  1536,  1494,  1495,  1498,     0,  1611,     0,  1385,
     798,   798,   782,  1593,   778,   770,   776,  1597,     0,   754,
     768,  1589,   782,  1591,   798,  1598,  1393,     0,     0,     0,
    1535,  1500,  1535,     0,     0,     0,     0,     0,     0,  1579,
       0,     0,     0,  1390,     0,  1481,  1535,  1504,  1535,  1502,
       0,     0,     0,     0,     0,     0,     0,  1508,  1506,     0,
       0,     0,     0,  1535,  1510,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1507,  1509,     0,     0,
       0,     0,     0,  1496,  1543,  1537,  1538,  1539,  1540,     0,
       0,     0,  1527,  1527,  1529,     0,  1529,     0,  1518,     0,
    1445,  1378,     0,  1576,  1316,  1311,     0,  1320,     0,  1335,
    1334,     0,     0,     0,  1488,     0,  2149,  2157,  1815,  1813,
    1096,  1095,  1827,  1840,  1981,  2833,  1812,   118,     0,  2035,
    2028,  2024,     0,   364,   373,   366,   370,   371,   367,     0,
    2864,  2872,     0,     0,     0,     0,  1766,     0,  2751,     0,
       0,  1222,  1224,  2077,     0,  2732,  2733,  2731,  2730,  2063,
    2062,     0,  1207,  1208,  1175,     0,     0,  1870,  1869,     0,
    1846,  1848,  1857,  1860,     0,  2058,  2052,     0,   341,     0,
       0,  2770,     0,     0,  1723,     0,  1615,  1645,  1642,  1641,
    1644,     0,     0,     0,     0,  1628,  1636,  1634,  1636,  1631,
       0,     0,     0,  1723,  1739,     0,  1732,  1748,  2656,  2655,
    2654,   976,   976,   977,     0,  2648,  2647,  2714,  2713,  2715,
    2662,   627,  2661,     0,  2670,  1996,     0,  1941,     0,  1962,
       0,  1934,     0,  1952,  1915,  1943,  1933,  1931,  1983,  1983,
    1930,   202,  1883,  1742,     0,  2986,     5,     0,     0,     0,
       0,   567,     0,   577,     0,     0,     0,     0,  2994,  2836,
     976,     0,  2836,  2849,     0,     0,  2822,  1009,  1007,  1008,
    1010,  1005,   988,   987,   989,     0,     0,     0,  1002,  1001,
    1000,     0,     0,   969,   986,  1149,     0,     0,  1145,   840,
       0,  2089,  1760,     0,  1638,     0,  1729,  1832,  1903,  1902,
       0,     0,   278,   281,   279,     0,   280,     0,     0,  2745,
       0,   529,   962,   627,   521,   523,   524,   525,   233,   232,
     234,   235,   237,   236,   231,   968,     0,   538,     0,     0,
       0,     0,     0,   942,   889,   890,   698,     0,   693,   700,
       0,     0,     0,     0,     0,   681,   683,   684,     0,   767,
     721,   712,   798,   715,   714,   857,   782,   726,   773,     0,
     775,   772,   747,   746,   763,   745,   750,   734,   857,   857,
     733,   766,   857,   751,   749,   753,     0,   754,   774,   759,
     748,   752,   744,     0,   765,   798,   782,   782,   730,   764,
     857,     0,   757,   798,   686,   802,   732,   864,     0,     0,
     798,   800,   778,  1082,  1083,   930,   929,  1081,     0,     0,
    1040,     0,  1041,     0,  1043,   847,   847,   653,  1048,  1071,
    1070,     0,  1049,   654,  1112,  1039,     0,  1756,  1038,     0,
       0,     0,  1172,     0,   666,   665,   967,  3007,  3004,  3005,
       0,  3015,  3014,  3016,     0,     0,     0,   243,  2941,     0,
       0,  1221,  1223,     0,  1210,   186,   181,   157,   161,   163,
     155,   159,   160,   162,   166,   167,   165,   169,   170,   173,
     174,   171,   164,   172,   158,   177,   175,   176,   156,   179,
     180,   191,   182,   190,   196,   168,   195,   183,   193,   192,
     194,   184,   154,     0,   127,   128,     0,   129,   130,     0,
     131,   132,     0,   133,   126,     0,  1877,  1877,   213,   627,
     510,   512,   513,   514,   515,   518,   516,   517,   219,     0,
       0,   218,     0,     0,     0,     0,     0,  1981,   215,     0,
    2840,  2842,   225,   983,  3001,  3002,  3003,     0,   553,   205,
       0,     0,   548,   546,   849,  1867,   551,     0,     0,   293,
     679,   680,   678,   677,     0,  2962,   472,   470,   471,     0,
       0,  1423,  1493,  1612,     0,     0,   799,  1586,   857,     0,
    1595,     0,  1596,   780,   779,   771,   769,  1599,   777,   755,
    1590,  1594,  1592,  1588,  1394,     0,  1396,  1387,  1386,  1501,
    1499,     0,     0,  1429,  1453,     0,  1430,     0,     0,     0,
       0,     0,  1402,     0,  1405,     0,     0,  1483,  1505,  1503,
    1456,  1475,  1432,  1458,     0,  1408,  1379,     0,  1433,     0,
    1438,  1436,     0,  1511,  1412,     0,     0,  1419,     0,  1417,
       0,  1418,     0,  1420,  1462,  1464,     0,     0,     0,     0,
    1535,  1544,     0,  1545,  1531,  1530,  1521,     0,  1526,  1525,
       0,  1522,     0,  1532,     0,  1665,   945,     0,  1315,  1317,
    1313,     0,  1322,  1478,  1098,  1097,   506,   116,  2026,     0,
    2022,     0,     0,     0,     0,  2775,  2829,  2828,  2831,  2870,
    2819,  2752,     0,     0,  1887,  1889,  1219,  1222,  1224,     0,
    1220,     0,  2078,  2734,  2735,  1205,     0,  1695,  1847,  1895,
       0,     0,     0,  1864,  2147,  2146,  2154,  1881,  1865,  1872,
       0,     0,     0,  2766,     0,  1739,     0,  1653,  1647,  1649,
    1650,  1652,     0,     0,  1615,  1614,  1260,  1630,  1629,  1637,
       0,  1635,  1636,  1636,     0,     0,  1624,  1623,     0,  1686,
    1654,     0,     0,  1743,  1732,  2836,  2836,     0,     0,  2695,
    1998,  1766,  1948,  1947,  1961,  1926,  1766,  1729,  1999,  2976,
       0,   573,   560,     0,   558,   562,     0,   555,     0,     0,
     571,     0,   971,  2836,  2836,     0,  2850,  2171,  2170,  2836,
       0,  2836,   992,     0,   991,   997,   994,   993,     0,   982,
     981,  1151,     0,     0,     0,     0,     0,  2082,  2084,     0,
    1808,  1729,  1729,  2159,  1900,     0,  2161,  1729,   667,   283,
     282,   288,   289,     0,  2744,  1981,   230,     0,  1036,     0,
       0,   579,     0,     0,     0,   701,     0,     0,   940,     0,
     939,  1762,   923,   924,  1066,   695,   686,   720,   713,   731,
     851,   862,   860,   854,   756,   857,     0,   858,   859,   717,
     729,     0,   740,     0,   735,   857,   743,   739,   755,   758,
     760,   762,     0,   857,   728,   727,   737,   724,   787,     0,
    1112,   687,   812,     0,     0,     0,     0,  1347,   806,     0,
     869,     0,     0,   815,     0,  1877,  1877,     0,   823,   702,
     803,   805,   704,     0,     0,   865,   864,   719,   857,   864,
     787,     0,   801,   787,   787,  1080,     0,  1112,  1697,  1088,
    1087,     0,     0,  1114,  1069,  1754,  1086,  1085,     0,  1042,
     649,     0,     0,  3009,     0,  3012,   978,     0,   253,     0,
       0,  1013,     0,   246,   244,   255,     0,  1184,  1180,  1694,
       0,   187,   189,   134,     0,   136,   138,   143,     0,   145,
    2193,     0,   148,     0,   150,  2165,   152,     0,   139,     0,
       0,     0,     0,  1981,   217,     0,     0,     0,     0,     0,
       0,   476,   537,   533,   539,   536,   480,  2841,     0,     0,
     980,  3011,     0,     0,   849,   626,     0,     0,     0,   294,
     296,     0,     0,   303,     0,     0,  1613,     0,     0,     0,
       0,  1587,     0,     0,  1384,     0,     0,     0,  1582,  1584,
    1580,  1535,     0,     0,     0,     0,     0,  1382,     0,  1479,
       0,     0,     0,     0,     0,     0,  1416,  1414,  1415,   866,
    1467,  1466,     0,  1497,  1541,     0,  1547,  1528,  1520,  1519,
       0,  1529,  1446,     0,  1673,  1674,     0,  1666,  1667,     0,
    1312,     0,     0,     0,   381,   376,   384,   378,   380,   379,
     385,   386,   387,   388,   382,   377,   383,   375,   374,     0,
       0,     0,  2879,  1729,  1887,     0,  1889,     0,  1845,  1216,
    1225,     0,  1640,     0,     0,  1858,  1861,     0,     0,     0,
       0,     0,   342,  2769,     0,     0,  1655,  1260,  1616,  1632,
       0,     0,  1625,  1633,     0,     0,     0,     0,  1680,  1681,
       0,     0,  1684,  1687,  1688,  1651,  2151,  1752,  1751,  1733,
       0,  1253,  1743,  2650,  2649,  2837,  2663,  1942,   201,  1945,
    1938,   561,     0,   559,     0,     0,   557,   565,     0,   572,
       0,   970,  2847,  2836,  2853,  2836,     0,  2854,     0,   998,
     999,   996,     0,  1153,     0,     0,     0,     0,  2083,     0,
       0,  2090,  2092,  1901,  1757,  1757,     0,   522,     0,   582,
    1035,     0,     0,   694,     0,     0,     0,   911,     0,     0,
     936,   682,   685,   853,   852,   856,     0,   855,   716,   864,
       0,   946,   736,   761,     0,   738,   791,   792,   793,   725,
     788,   790,   871,  1065,   818,   826,   828,   827,   819,   817,
       0,     0,     0,     0,     0,     0,   833,   809,  2124,   834,
    2125,  2121,     0,     0,   829,   830,   831,   820,   816,   821,
       0,     0,   822,     0,   804,     0,     0,   814,   807,   808,
     718,   722,   723,   709,     0,   710,   711,     0,  1078,  1068,
    1052,  1113,     0,  3008,  3006,  3010,   254,   242,     0,     0,
    1015,  1017,     0,     0,  1018,     0,     0,  1183,   178,     0,
     135,     0,   144,     0,     0,   149,     0,     0,   140,     0,
     900,   535,   534,   511,     0,   906,   220,   221,   223,     0,
    2843,     0,  2844,   212,  3013,     0,   206,   203,     0,     0,
    2957,     0,   847,  2955,   306,   304,   305,     0,   299,   301,
       0,     0,  1424,   796,   794,   797,   795,   783,     0,  1427,
    1428,  1454,     0,  1512,  1452,     0,  1403,  1480,     0,     0,
    1459,  1434,  1437,  1435,  1440,  1441,     0,     0,     0,     0,
    1549,  1533,  1534,     0,  1675,  1404,  1668,     0,     0,  1314,
    2027,  2025,  2870,  2873,     0,     0,  2772,  1766,  1889,  1739,
    1843,     0,     0,  1894,  1896,  1859,  1862,  1863,  2156,  1879,
    1871,  2768,     0,  1648,  1627,  1626,  1619,     0,  1621,     0,
    1676,  1676,  1685,  1753,     0,  1749,     0,  1744,  1745,  1252,
    1944,   574,     0,   564,   578,   556,  2998,  2851,  2855,  2836,
     990,   995,  2087,  2088,     0,  2085,     0,     0,  2091,  1777,
    1777,     0,   900,     0,   602,   580,   906,     0,   935,   911,
    1762,     0,  1877,  1877,  1877,   688,   912,   913,   915,   916,
     919,   938,     0,   863,   861,   857,     0,   857,   789,     0,
     875,  2123,  2122,     0,   811,   813,   824,   825,   818,   705,
       0,     0,  1047,  1053,     0,   240,   245,   256,   257,   961,
    2944,  2942,     0,   188,   137,   146,   147,   151,     0,     0,
       0,  1094,   901,   902,   904,     0,  1094,   907,   908,   910,
       0,  2845,   208,   911,  2954,   251,     0,   295,   297,  2963,
     303,     0,     0,     0,  1583,     0,  1482,  1484,   867,     0,
    1546,     0,  1570,  1569,  1571,  1542,     0,  1523,     0,  1672,
    1671,  2879,  2871,  2874,  2753,  1844,  1888,     0,  1638,     0,
       0,     0,     0,     0,     0,     0,  1750,     0,     0,     0,
       0,     0,     0,  2995,  2996,  2848,  2086,  2094,  2093,     0,
    1899,  1891,  2746,   689,     0,     0,  1877,     0,     0,  1877,
    1877,  1877,  1877,   597,   603,   605,     0,   690,     0,     0,
     691,   941,   918,     0,     0,     0,   914,  1762,   741,   947,
     742,     0,   874,     0,   879,   810,     0,  1079,  1046,   247,
    1019,   408,     0,  2943,  1181,     0,     0,     0,   227,   903,
     216,   228,   909,     0,  1094,   243,   252,     0,   276,   300,
     847,     0,   781,  1401,  1468,  1548,     0,     0,     0,     0,
    1564,  1551,  1552,     0,     0,  2774,     0,  2880,     0,   839,
       0,  1723,  1620,  1622,     0,  1677,     0,  1689,     0,  1747,
    1746,     0,     0,  1877,     0,  2999,  1778,   591,   584,   587,
       0,     0,  1877,  1877,     0,     0,     0,     0,     0,   581,
     604,  1877,   692,   934,   917,   920,   921,   937,   872,     0,
     876,   877,   878,     0,   870,     0,     0,   249,   434,  2283,
     420,   406,     0,     0,  2465,   410,   258,   261,   259,  1892,
     260,   266,     0,   267,   268,   269,   270,   271,   262,   432,
     433,   265,   263,   264,     0,  2177,     0,  2178,  2238,  2237,
    2239,     0,     0,     0,   141,     0,   905,   222,   226,   255,
     847,  2964,   302,  2950,     0,     0,  1559,     0,     0,     0,
    1557,     0,  1553,     0,  1550,  1555,  1554,     0,  1890,  2095,
    2449,     0,  1658,     0,  1656,  1679,  1678,     0,     0,   575,
       0,     0,  3000,   591,     0,   589,     0,   585,   583,   586,
     613,     0,     0,   609,   610,   608,   606,     0,     0,   599,
       0,   873,     0,     0,   706,   248,     0,   241,     0,     0,
     419,   422,     0,     0,   425,   415,   414,   416,     0,   409,
     408,   408,   462,   413,   459,   458,   451,     0,  2945,     0,
       0,     0,  2958,   286,   285,   277,     0,   408,  2948,  2949,
       0,  2952,     0,  1560,     0,  1562,  1561,     0,     0,  1566,
       0,  1567,  2658,  2878,  2877,  2875,     0,  2081,     0,  1657,
       0,     0,   847,  1683,  1682,     0,   569,   575,  2998,   588,
       0,   595,     0,   593,   596,   611,   612,   602,   598,     0,
     607,   885,     0,   884,     0,   881,   880,   708,   707,   802,
     250,   435,   446,   449,   441,   421,     0,     0,     0,   411,
     408,     0,   395,   393,   394,   400,   401,   402,   403,   404,
     405,   396,   399,   397,   398,   408,     0,   311,     0,     0,
    2946,  2947,   142,   257,   276,   287,  2965,  2951,   408,     0,
    1558,  1556,  1565,  1568,  2876,     0,  2089,     0,  1659,  1660,
    1663,   576,   570,  2997,   590,   592,     0,   601,   600,   887,
     888,   886,     0,     0,   703,     0,     0,   408,   442,     0,
     417,     0,   426,     0,     0,   309,   465,   463,   307,   453,
     453,   239,  2959,  2953,  1563,     0,  2097,  1662,  1664,     0,
     594,     0,     0,   443,   449,   439,   447,   408,     0,     0,
     407,     0,   461,   310,     0,     0,     0,   408,     0,   452,
     454,   456,   408,  2096,     0,  2101,     0,   883,   882,     0,
     440,     0,     0,   438,   418,   423,   408,   466,   408,   320,
     319,     0,     0,   389,   460,     0,   312,  2960,     0,     0,
    2108,  1665,   444,     0,   408,     0,   408,     0,   408,     0,
       0,   847,     0,     0,   308,  2099,  2100,  2098,  2103,     0,
       0,  2105,  2106,     0,  2069,  1669,  1661,  1667,     0,   436,
     408,   424,   429,     0,     0,   315,   390,   391,     0,   317,
    2107,  2102,     0,  2109,  2111,     0,  1670,     0,   408,   408,
     425,   428,   467,   464,     0,     0,   313,   314,   325,   324,
       0,  2104,     0,     0,     0,   408,   408,   430,   333,   331,
     408,   321,   329,   323,     0,   330,   392,   318,  2110,  2112,
       0,   316,   332,   322
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4574, -4574, -4574, -4574, -4574, -4574,    29, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574,  1578, -4574, -4574, -4574, -4574,
   -4574, -4574,  1778,  1785, -4574, -3978, -4574, -4574,  1786, -4574,
     446,  1790, -4574,   449, -4574,  1799, -4574,   455, -4574, -4574,
   -4574,  -903, -2109, -4574, -4574, -4574, -4574, -4574, -4574,  1203,
   -4574, -4574,   442,  1401,  3850, -4574,   431, -4574,   139, -4574,
   -4574, -4574, -3881,    23,  -148, -4574, -4574,    27,  3369,  -147,
   -3819, -4574, -4574, -4574, -4574, -4574, -4574,   437, -4574, -4574,
     249, -4574, -4574, -2349, -4574, -4574, -4574, -4574, -4574, -4574,
    -329,  -286,  2528, -4574, -4574, -4574,  4928, -4574,  4018, -4574,
   -2604,  2234, -4574, -4574, -4574, -4574, -4574,  2292, -2527, -4574,
   -4574, -4574,  1073, -4574, -4574, -4574,   464,   169, -4574,   172,
   -4574,   175, -4574,   177, -4574,   180,   184,   185,   190, -4574,
     192, -4574, -4574,  -292, -4574, -4574, -4574, -4574,   193, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574,  -189, -4574, -4574,   -96,
   -4574, -4574,  -185,   194, -4574,  -170,   195, -4574,   196, -4574,
    -117, -4574,  -114, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574,  1241,  2685,  3931,  2687, -1365, -4574,  1658,
   -4574, -4574,   824, -4574, -4574,   965, -1423, -4574,  2538, -2373,
   -2340, -2339, -4574, -4574, -4574, -3003, -3002, -1249, -4574, -1256,
   -2330, -2328, -2222,   805,  1807,  1810,  1801,    37, -4574,  1027,
     403, -4574, -4574, -4574, -3367,   -32, -4574, -3662,   626, -4574,
   -4574, -4574, -4574, -3049, -4574, -4574,  -108, -4574, -4574,   -38,
     -37, -4574,   245, -4574,  2555, -2097,  -543,  2627, -4574, -1841,
   -1626,   544, -1492, -1489, -4574, -4574, -4574,  1257,  1829,   971,
   -4574,   973, -1504,   921, -3518, -4574, -4574,  -643, -2791, -4574,
   -4574, -4025, -4574, -2395,  1443, -4574, -4574, -2387, -4574, -4574,
   -4574,  1411,  1415, -1850,  2040, -1380, -4574,   615,  -609, -1207,
   -4574,   -31, -4574,   927, -4574, -4574, -3716, -4574,   -41, -2435,
     229, -4574, -4574, -2973, -3479, -1486, -4574, -4574, -3396, -2240,
    1746, -4574, -4574,   269, -4574, -4574, -4574, -4574, -4573, -4574,
   -1558, -2078, -4574, -4574,   417, -4574,   356,   414, -4574,   357,
   -4150, -4574,   405, -2104,  2063, -4574,  3319,  2058, -2321, -4574,
   -3703, -1964,   673, -2151, -4574,   990, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -1986, -4574, -4574,   879,  1332, -4574,  2204,
    1912, -4574,  2221, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574,  2700, -4574,   632,  -501,  2713, -4574,  2706,   542,
   -2400, -1010, -4574,  -995, -4574, -1488,  3545, -2324, -3609, -4574,
   -4574, -4574, -4574, -4574,  3624, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574,  2929, -4574, -4574, -4574, -4574,
   -4574,  4155, -4574,  2949, -4574, -4574, -4574, -4574, -4574,  1464,
   -4574,  2416, -4574, -4574, -4574, -4574, -4574,  2124,  3422, -4574,
   -4574,   105, -4574, -4574, -4574, -4574,  2425, -4574, -4574,  3449,
    2032, -4574, -4574,  1774,  2441, -1644,  1244, -1045,  5096,    10,
      75,     8,   876, -4574,  3081, -4574, -4574, -2130, -4574, -4574,
   -4574, -4574,  4232,  -929,  -996, -4574, -4574,  2898, -4574,  4239,
    3932,  3211,  -301,  4948, -4574, -1190, -4574,   -53, -4574, -4574,
    -798, -4574, -4574, -4574,  -642, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574,  2529, -4574, -4574,
   -4574,  3279,  1854, -2525, -4574, -2155, -1809, -4574, -2401,   418,
   -4574, -4574, -4574, -4574, -4574, -4574,   443, -4574,   144, -4574,
   -4574, -4574, -1928, -4574, -4574, -4574, -4574, -4574,  -938, -2404,
   -1043, -1098, -4574,  4033, -4574, -4574, -4574, -2862, -4574, -2538,
   -4574, -4574, -4574, -4574, -3004, -2639, -4574, -1031,  2429,  2433,
    2437,  2442, -4574, -4574,    76, -4574,   157, -4574,    -9, -4574,
     -33, -4087, -4106,   598, -4574,   872, -4574, -4574, -4574,   359,
    1535,   363, -1883, -2269, -1130,  1792, -4574, -4574, -2007,  4091,
   -1980, -1912,  1248,     3,  4241,  3757, -3008, -4574,   875, -4574,
     467,  1791,   667, -4574, -4574,  1582, -1029,   -86,   509, -2981,
   -4574, -1017,   -78, -4574, -2228,   601, -2107, -2734, -2184, -2421,
   -2207, -4574, -4574,  2970,  -696, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574,  -488,   262,  -524,  5226,  3280, -4574,  2594,
    4189,  4195, -4574, -4574,  3910,  1868,  1870, -4574, -3280, -2655,
   -4574, -4574, -4574,  -936,  4302,   931,  3780,  1316,  1883, -2796,
     957, -3921,  4206, -4574, -3408,   950,  4212,  4209, -3251,  3696,
   -4574, -4574, -4574, -4574, -4574,  2439, -4574, -4574, -4574, -4574,
   -4574, -4574,  3120,  4306,  -949, -1968, -4574, -4574, -4574,   830,
    3103,  2445, -1370, -4574, -4574, -4574, -4574,  4221, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574,  2598,  2193, -4574,
   -4574, -4574, -4574,  3223, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574,
    1899,   246, -4574,  1258,   160, -4574,   896, -4574, -4574, -4574,
   -4574, -4574,    30, -4574, -4574,    13, -2582, -1044, -1026,  1018,
    1162, -3590, -2411, -1916, -2565, -4574,   981, -3206, -2830,   683,
    -677, -1182, -1188,   566,  2365,  3926, -1336, -4574,  5311,  -807,
   -1515, -2156,  1094,  4063,    -6, -4574, -2972, -4574,   516,   111,
    2155,   -79,  3200, -3538, -4574,     9,     2, -4574,   352,   302,
   -4574, -4574,   327, -4574, -4574, -4574,   264, -4574, -4574, -4574,
   -4574,  3888, -4574,  2516,  5265, -4574, -4574, -4574,  3197,  5275,
    -792,  3902,  3220, -4574,  3224, -4574, -4574, -4574, -1990, -4574,
   -4574,   247, -4574,  2602, -4574, -4574, -4574, -4574, -4574, -4574,
   -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -4574, -1259,
    4404,  5285,  4025, -4574, -4574,  2446, -4574, -1932, -1271, -1088,
   -2643, -4574,  2834,  3813, -4574, -4574,  1952, -4574,  2836,   745,
   -4574, -4574,   590, -4574, -4574,  1414,  4412,  3961, -4574, -4574,
   -4574, -4574, -4574,  4297, -4574,   -12,     7, -4574,  -371, -4574,
   -4574, -4574,   497,  5322,  5325, -4574, -4574,   224, -4574,  -860,
   -4574, -4574, -4574, -4574, -4574,  4233, -4574, -4574,  4237, -4574,
   -4574, -4574, -4574,  4240, -4574, -4574, -4574, -4574, -4574, -4574,
    1657, -4574, -4574, -4574, -4574, -4574, -4574,   220, -4574, -4574,
   -4574,   283, -4574,  1579, -4574,  1187, -4574,  1131,   829,  1685,
   -2343
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    64,    65,  1010,  2227,    66,    67,    68,    69,    70,
    2043,    71,  1303,  1986,  2665,  2666,    72,   884,    73,  1714,
    1715,  2470,  2471,  3724,  4174,  4175,  3733,  4189,  3727,  4178,
    4179,  3730,  4183,  4184,  2460,  2461,  4170,  4171,  3712,  3721,
    3715,  2462,  2196,    74,    75,    76,    77,  2478,    78,  3751,
    2492,    79,  2971,  2972,  1757,  3778,  4161,  4809,  4165,  4897,
    4997,  4825,  3108,  4494,  4810,  4811,  4906,  2501,  2301,  4941,
    2957,  5025,  2958,    80,  1086,  4218,  4219,  4220,  4537,  4538,
    4539,  4540,  5187,  5090,  5158,  5188,  5274,  5280,  5211,  5290,
    5291,  5292,  5278,  1371,  5293,    81,   916,   917,  1373,  2070,
    2679,  2071,    82,    83,   846,  2005,  2006,  2007,  2008,  3368,
    2680,  3363,  3364,  4297,  5212,  5276,  5091,  5092,  5004,  5093,
    4909,  5094,  5008,  5095,  4912,  5096,  5097,  5098,  5099,  5179,
    5100,  5003,  5204,  5087,  5088,  5181,  5252,  5271,  5101,  4919,
    4998,  5145,  4920,  4999,  5174,  5083,  5175,  5199,  5248,  5084,
    5146,  5202,  5149,  5102,  5108,  5189,  5103,  5109,  5104,  4924,
    5015,  5107,  5013,  5106,  5185,  5184,  5227,  3227,  3789,  1743,
    2487,  3177,  3178,  3179,  2974,  2975,  1610,  2653,  2654,  2655,
    3738,  3739,  3740,  3542,  3543,  3544,  2311,  3103,  2963,  1611,
    1612,  1613,  3183,  3742,  3743,  3184,  3185,  1614,  3187,  1615,
    1616,  1617,  2980,  3209,  3210,  3211,  3212,  3213,  2221,  2222,
    3486,  2860,  3483,  4368,  3990,  5056,  3997,  4050,  4051,  4644,
    4978,  4868,  4974,  4869,  4976,  5062,  5063,  4879,  4988,  4989,
    4783,  4784,  4785,  3164,  2295,  2296,  1096,  1677,  3214,  2321,
    1678,  3062,  1679,  1680,  2299,  3077,  3049,  3784,  3574,  3575,
    3576,  4100,  3577,  3003,  2329,  3567,  3568,  4118,  3624,  4466,
    5079,  3625,  3626,  3627,  3628,  3629,  3630,  3631,  3806,  3632,
    3807,  3802,  3803,  3800,  1134,  4429,  4430,  4431,  3796,  3797,
    4133,  4119,  4120,  4121,  4438,  4457,   792,  4447,  4076,  1389,
    2921,  1412,  1413,  2773,  2089,  1681,  4077,  4078,  4079,  4127,
    3867,  4566,  4123,  4101,  4670,  4801,  4804,  4894,  5075,  3004,
    1707,  2996,  2185,   665,  4701,  4702,  4703,  4706,  4707,  4708,
    4655,  4656,  4657,  4658,  3005,  2496,  4659,  4660,  3201,  4647,
    4058,  4059,  4060,  3006,  3333,  4420,    84,    85,  1589,    86,
    1597,    87,  1591,    88,  1700,  1078,    89,  2413,    90,    91,
      92,    93,    94,  2778,    95,    96,  3513,  2891,  2892,  2893,
    2247,  2885,  2886,  1015,  3109,  3677,  4689,  1059,  1682,  1683,
    2407,  1684,  1685,  4682,  1686,  3023,  1687,  1688,  1689,  1690,
    3349,  3350,  3011,  3351,  3052,  2331,  1340,  2660,  4144,  2383,
      97,    98,  1026,  1027,  1028,  1029,  1030,  1031,    99,   100,
    1033,  2261,   101,  1468,  1469,  1470,  1533,  1534,  2263,  2916,
    3518,  1463,  1464,  1465,  1034,  1531,   102,  1719,   103,  2731,
    2732,  2733,   104,  4497,  2419,   105,   106,  1726,  1727,  1728,
     107,   194,   108,  1360,  1358,  2048,  2049,   109,  1082,  1083,
    2421,   110,  2714,  2715,  1708,  1709,  3920,   111,   112,  3216,
     114,   793,   116,   117,  2081,  2082,  2754,  2755,   118,   119,
     933,   934,   935,  1038,  1039,  1537,  2267,  2268,  2269,   794,
     795,  1243,  1131,  1710,   797,   798,  1939,   799,  1244,  1245,
    4124,   800,  1256,  1927,   801,  3815,   802,   803,  3885,   804,
     805,   806,  3836,  3837,  4249,  1959,  1960,  1961,   807,   808,
     809,  2610,  3878,  3321,  4271,  3231,  3232,  3315,  4616,  3317,
    3872,  3873,  4266,  4570,  4735,  4840,  4946,  4842,  4947,  4954,
    4736,   810,   811,  1232,  1831,  3829,  3269,  4238,  1776,  3256,
    1711,  1712,  1156,  1157,  1122,  2517,  1782,  2756,  3953,  2757,
    3430,  3431,  3432,  3964,  3960,  2735,  2736,  2758,  2759,  2760,
    2761,  2762,  2763,  2764,  4750,  4961,  4962,  5169,  4276,  5246,
    4277,  4278,  4279,  4754,  4341,  4342,  4343,  4344,  4345,  3117,
    3118,  3119,  3926,  3024,  1821,  1822,  1829,  2023,  2024,  1777,
    2709,  2133,  3973,  1007,   983,   984,  1481,  2204,  4351,  4617,
    4618,  3436,  4347,  4615,  3058,  3059,  1043,  1044,  2277,  2926,
    2927,  1553,  1554,  1558,  1559,  4770,  3063,  2945,  2900,  2981,
    2946,  2947,  1541,  1542,  1040,  1543,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,  2674,  2288,  1075,   666,  1974,  1975,  1976,
     138,   139,   889,   910,  1363,  3400,  3401,  3932,  3402,  3218,
    3404,  3938,   980,  2312,  2313,  3939,   981,  2199,  2200,  2201,
    4306,  4308,   140,   141,  3928,  3929,   911,   142,  2937,  1570,
    1571,   143,   973,  2169,  2170,  2171,  2830,   144,   963,  1453,
    3981,  3986,  2816,  1355,  1618,  2150,  1456,  1457,  1458,  2151,
    2801,  3457,  2134,   145,   146,  1582,   147,  1055,  1056,  1583,
     148,  1304,  1999,  3361,  3900,  4282,  2000,  2001,  2675,   149,
     913,  1368,  1365,  1369,  2055,  2054,  2740,  2738,   150,   903,
    1356,  2723,   151,   894,   152,   153,   898,  2036,  1348,  3921,
    3219,  3521,  4027,  4028,  4030,  4391,  4392,  5047,  5195,  5237,
    5220,  5240,  5241,  5244,  5263,  5264,   812,  1484,   813,  4448,
    4449,   814,   815,   816,   817,   818,  3933,   819,  2278,  4348,
     820,  3930,   821,  2765,  2289,   636,  4185,  4186,  1016,  1485,
    2271,  2094,  4009,  1246,   995,   874,  4926,   953,  1018,  1404,
    1019,  1979,  1405,  2693,   638,   639,   640,  4927,   641,   642,
     878,   958,   643,   154,   959,   155,  2103,   156,  3451,  3452,
    1418,  1422,  2118,  2119,  2120,  1459,  1910,  2112,  1419,  2121,
     962,  1397,  1398,  2101,  1399,  2099,  1400,  2783,  2129,   157,
    1350,   648,  2039,  2040,  3387,   158,   977,   159,   160,   161,
    1067,   162,  2028,  2707,  2708,   163,  2073,   164,  2010,  2019,
    1307,   880,   881,  2696,  2880,  2242,  2243,  2694,  1980,  1406,
    3445,  1515,  1746,  1021,  1747,  1022,  1318,  2013,  1518,  4302,
    3905,  4847,  4586,   165,   195,   651,  1094,  1733,  2078,   166,
     167,   168,   169,  1552,   824,  2766,   825,   936,  1110,   667,
    1766,  1758,   188,   189,   190,   670,   671,   191,  1698,  1699,
    4166,  4691,  4813,  5030,  5031,  1760,  5118,  1761,  1762,  3779,
    4716,  5114,  5192,  1763,  3224,  4223,  4828,  5027,   170,  1490,
    1486,   993,  2215,  2209,  2211,   171,   172,  1343,   173,   174,
    4763,  4764,  3766,  2412,  3668,  3669,  4155,  3106,  3673,  2662,
    2990
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     637,  1277,   951,   120,   994,  1282,  1390,  1394,   115,   823,
     113,  1577,   842,  1584,  1455,  1882,   883,  1020,  1748,  1560,
    1564,  1881,  1836,   876,  2272,   902,  1423,  1785,  1786,  1047,
    1563,  2718,   918,   635,  1117,   923,  3330,  1048,  1158,  1973,
     918,   876,  1546,   971,  3323,   955,  1972,   978,  1000,   985,
    3472,  2402,   954,  2929,  2930,  3450,  1838,  3088,  3089,  2144,
    2020,  2330,  1691,  3171,  2427,  2833,  1926,  1001,  1851,  1852,
    1853,  1006,  3379,  1005,  1855,  2681,  1503,  1692,  2874,  3657,
    3403,  2359,  2177,  2606,  2607,  3257,  3325,  2682,  3038,  3258,
    1017,  2615,  2616,  2617,  2986,  2987,   998,  2297,  3522,  2382,
    2298,  2767,  1824,  2300,  3678,  2075,  2982,  4117,  2779,  2982,
    2982,  1548,  3993,  1891,  3180,  2328,  2710,  3664,  2076,  1105,
    1106,  3259,  4037,  3254,   843,  3481,  3433,  2797,  1050,  1530,
    3254,  3255,   875,  2336,  2652,   901,  3446,  2340,  3255,  3408,
     907,   971,  1224,  1225,  2747,  1226,  4122,  3181,  3182,  2908,
     875,  2360,  2913,  3362,  3018,  3509,  3510,  3189,  1278,  3190,
    1090,  1092,  2938,  2372,  3744,  3745,  4139,  4140,  1420,  2710,
    1060,  4577,   637,  2993,  3202,   637,  1017,  1071,   971,  2315,
    1778,  1779,  1780,  2248,  2250,  2251,  3054,  3055,  4181,  2823,
    4576,  1790,   971,  3934,  4305,  1049,  4532,  2022,  2948,  1236,
    1237,  4125,  4082,  4086,  3316,  1062,  4087,  2834,  1069,  4507,
    2855,  2924,  1982,  2835,  3416,  2857,  2658,  2887,  2490,  2838,
   -2049,  1334,  1844,  1279,  4096,  1848,  3511,  2022,  1236,  1237,
    3352,  3493,  3019,  1635,  3021,   672,  1236,  1237,  1279,  2598,
    1236,  1237,  -966,  3033,  1865,  1866,  1236,  1237,  1870,  2998,
    1759,  1767,  2022,  1035,  1279,  2234,   649,  1236,  1237,  1716,
    1635,  3050,  1279,  2417,  -951,  3654,  1884,  1885,  2195,  2721,
    -627,  1889,  1890,  4379,  1093,  4739,   900,  2982,  4036,  3898,
    4490,   906,  2515,  3081,  2195,  4227, -2206,  3083,  1236,  1237,
    1702,  -614,  3644,  1376,  1074,  2086,  3674,  1734,  1111,  1904,
    2153,  3192,  1287,  1288,  1289,  1236,  1237,  1292,  1293,  1236,
    1237,  1296,  1635,  1298,  1299,  1300,  3405,  4153, -2754,  2485,
    2925,  2080,  1283,   877,  1793,  4977,  1322,   892,  2934,  -627,
    1236,  1237, -1725,  3559,  4365, -2755,  1236,  1237,  4070,  3356,
   -1990,   877,  1547,  -615,  1037,   957,  1045,  5038,   879,  3268,
    4071,  3154,  2281,  1603,  1236,  1237,  3233,  3234,  3235, -1981,
     844,  3163, -1725,  2658,  4072,  4088,   879, -1838,  1236,  1237,
    1036,  1729,  3261,  1236,  1237,   968,  1425,   938,   979,  1196,
    1236,  1237,  1236,  1237,  3423,  4590,  1236,  1237,  1364,  1132,
    4446,  1236,  1237,  -493,  4005,   956,   890,  3277,  4376,  1236,
    1237,  3279,  4231,  1035,  1353,  3205,  2096,  4414,  3530,  1041,
    3223,   895,  2213,   974,  2147,  1325,  3961,  3287,  3288,  2575,
    5076,  4651,  1138,  3294,  3965,  4931,  3970,  3714,  1346,  2191,
    2866,  1620,  3204,  1466,  2176,  1482,  4932,  1366, -2754,  3306,
    3307,  1080,  1600,  5235,  2982,  1425,   938,  5140,  3313,  3962,
    -478,  4749,  2391,  4228,  1923, -2755,  5039,  2728,  1041,  1200,
    4159,  2132,  -848,   644,  1800, -2664,  1720,  2590,  1383,  4426,
    1236,  1237,  4148,  2113,  1377,  1509,  1956,  1957,  1158,  1236,
    1237,  2186, -1725,  1513,  2117,  3519,  1605,  4534,  1236,  1237,
     192,  4433,  1550,  3311,  1037,  1236,  1237,  4535,  1035,  4790,
    1601,  3447,  1035,  -520,  5147,  4304,  3849,  1546,  1101,  1704,
    1236,  1237,  1717,  2780,  4864,  5147,  4450,  1236,  1237,  4389,
    5033, -1991,  3424,  4694, -1725,   322,  5232,   324,  4479,  2158,
    2982,  4952,   198,  3299,  2781,   896,  4229,  1705,  1236,  1237,
    2236,  1280,  3425,  1236,  1237,  5233,  4450,  2285,  2286,  3768,
    1036,   196,  1546,  4390,  1036,  3426,  1280,  3982,  -509,  3952,
    3956,  1197,  3359,  4824,  2057,  1510,  1751,  4427,  1239,  3967,
    3968,  1240,  1280,  1514, -1981,  1051,  2782,  1899,  3705,   193,
    1280,  1903,  3319,  1721,  1384,   885,  1335,  1722,   882,  1037,
    3545,  2867,  1701,  1037, -1725,  3422,  3646,  1239,  5197,  5198,
    1240,  1723,  4117,  4160,   645,  1239,  4652, -1725,  1240,  1239,
    4992,  4428,  1240,  5040,  1139,   970,  2888,  1483,  1932,  1551,
    3442,  3443,  3415,  4070,  1042,  2214,  1239,   196, -2206,  1240,
    3207,  3406,  1367,  4369,  2659,  4071,  1347,  1467,  1955,  3427,
    2879,  4536,   971,   971,  -848,  2392,  2152,  5236,   891,  4072,
    1017,  4315,  1103,  1603,  4933,  3963,  3665,  1239,  1203,  -627,
    1240,  1425,   938,  1449, -1725,   975,  3444,  4745,   893,  2097,
    3444,  1236,  1237,  1046,  1239,  4338,  3422,  1240,  1239,  4418,
    4865,  1240,   969,  1730,  2083,  1354, -2820,  1142,  1079,  4422,
    1387,  2526,  2192,  2999,  5141,  3560,  4830,  4425,  1070,  1239,
    4154,  4648,  1240,  3675,  1648,  1239,  1001,  1087,  1240,  1159,
    2729,  1507,  1973,  1057,  4339,  1284,  1794,  3650,  4651,  1972,
    4815,  4816,  3899,  1239,  3403,  2320,  1240,  3376,  2418,  2656,
    2429,  2237,  4471,  2539,  1236,  1237,  4674,  1239,  1724,  1604,
    1240,  1771,  1239,  2728,  2282,  1240,  1607,  3748,  1449,  1239,
    1072,  1239,  1240,  4070,  1240,  1239,  3487,  4230,  1240,  3434,
    1239,  3428,  4973,  1240,  1084,  4071,  2516,  2995,  1239,  2995,
    1323,  1240,  4017,  2154,  3497,  3498,  3499,  3500,  1984,  4072,
    2818,  2659,  4036,  1017,  2821,  1234,  1605,  4066,  3437,  2825,
    1247,  1425,  4083,   845,  3741,  2710,  1229, -2754,  1228,  3880,
    3661,  3882,  4940,  2297,  3526,  3328,  2298,  1547,  2619,  2300,
    1703,  1981,  4740,  3354, -2755,  2681,  1236,  1237,  2839,  2840,
    4684,  2722,  3000,  1290,  1502,  4048,  1359,  2682,  1295,  1242,
   -1990, -2049,  3204,  3429,  4826,  1504,  1725,  2508,  1378,  1239,
    2416, -1725,  1240,  3153,  2235,  3558,  4002,  3561,  1239,  4006,
    4137,  1240,  1718,  -966,  2524,  2320,  2710,  1239,  1242,  3162,
    1240,  3552,  2491,  2041,  1239,  1332,  1242,  1240,  1236,  1237,
    1242,  4380,  3215,  2051, -1725,  -951,  1242, -2820,  1017,  1239,
    3489,  2320,  1240,  3954,  1341,  4032,  1239,  1242,  1718,  1240,
    3193,  1236,  1237,  1235,  2730,  1113, -2206,  3512,  1357,  1017,
    2935,  2856,  -614,  4652,    42,  2551,  2858,  1239,  1546,  2555,
    1240,  2505,  1239,  3871,  1198,  1240,  4073,  2894,  1242,  2901,
    1047,  2618,  1452,  1336,  3565,  3524,  4089,   823,  1048, -2754,
    3795,  2577,  2614,  1718,  1326,  1242,  1017,  4326,  5052,  1242,
    5041,  4074,  4313, -1725,  1017,  1017, -2755,   897,  3883,   876,
    1281,  2889,  2890,  4409,  -615,  2625,  3888,  5020,  4330,  4331,
    1242,  2982,   955,  1449,  1565,  4181,  1242,   971,  1473,   954,
    1281,  2187,  1566, -1725,  2225,  1905,   985,    49, -1838,  1906,
    2320,  4700,  1590,  2599,  1242,  4415,  2297,  2600,  5082,  2298,
    1102,  2576,  2300,  1236,  1237,  3643,  2729,  4239,  1242,  5173,
    3635,  3636,  2159,  1242,  -493,  1506,  2320,  1006,  2525,  1228,
    1242, -1991,  1242,  -298,  2786,  1050,  1242,  3686,  3448,  3688,
    3689,  1242,  4205,  3692,  3693,  3983,  1745,  3236,  2240,  1242,
    1017,    54,  1388,  3702,  3703,  2591,  3760,  4595,  3707,  1561,
    1239,  3710,  3205,  1240,  3717,  3320,  1607,  3001,    55,  4603,
    1718,  1585,  1905,  4718,  1052,  1017,  2543,  1592,  1593,   120,
    1017,  -478,  1596,  2320,   115,  3191,   113,  1693,  2948,  1502,
    1695,   637,  3382,  2225,   971,  3792, -2664,  3850,  2320,  3795,
    4410,  1713,  1049,  2579,  4327,  3504,  4883,  2580,  1302,  4993,
    1735,  1736,  1737,  4653,  4654,  1740,  4007,  4340,  1744,  1017,
    1242,  1749,  1750,  1239,  1696,  3819,  1240,  3820,   876,  1242,
    1236,  1237,  3934,  2775,  -520,  2596,  2320,   650,  1242,  2597,
    1856,  3838,  5024,  3839,  2506,  1242,  3927,  3335, -1981,  3824,
    4434,  3336,  4259,  3825,  5247,  1159,  3566,  2530,  3853,  3786,
    1242,  5267,  2531,  1047,  2870,  5071,  3832,  1242,  1351,  1159,
    3833,  1048,  3638,  3523,  1361,  2776,  3110,  1236,  1237,  1229,
    2131,  1228,   904,  2850,  2549,  1608,  2304,  1112,  1242,  -509,
    5028,  2320,  1100,  1242, -2820,   999,  1718,  2771,  2626,  1023,
    2730,  1236,  1237, -1981,  1279,  1239,  1882,  5231,  1240,  4468,
    3744,  3745,  3060,  1236,  1237,  1474,  1395,  1883,  2484,  1236,
    1237,  4073,  3383,  3780,  1928,  1929,  4142,  1603,  1933,  2173,
    2500,  1934,  1935,  1936,  1091,  1091,  1940,  1941,  1943,  1945,
    1946,  1947,  1948,  1949,  1475,   912,  3851,  1236,  1237,   823,
    3852,  3188,  1915,  3002,  3502,  3890,  4227,  1239,  3186,  3891,
    1240,  2014,  1825,  2236,  4356,  1826,  2536,  1931,  1279,   877,
    3787,  4062,  4063,  1236,  1237,  1560,  1560,  1236,  1237,  4023,
    1239,  2541,   957,  1240,  4613,  4367,  1001,  3207,  2542,  4798,
    4024,  4800,  3980,  1017,   879,   972,  4316,  3111,  2633,  4378,
    1963,  1964,   637,  1966,  4382,  1968,   637,  1017,  3718,  2545,
     637,  1978,  1017,   971,  2557,  1983,  2074,  3635,  3636,  2009,
    4761,  1242,   876,  1516,    42,  1233,   965,  2935,  3198,  2107,
    2641,  2012,   956,  2091,  1017,  1965,  1387,  1236,  1237,  1969,
    2795,  1279,  1017,  1977,  2802,  1017,  2683,  3781,  1420,  2027,
    2029,  4073,  4353,  4354,   876,  4004,  4322,  3757,  4197,  4011,
    1605,  2305,  1387,  5024,   971,   971,  4245,  1236,  1237,  3488,
    1392,  4942,  4084,  3622,   971,   971,  2911,   971,  2053,  5010,
    4371,  4372,  1239,  2105,  1242,  1240,  4374,  3989,  4377,  1017,
    1017,  2627,  1330,  3774,  1396,  3362,  3505,    49,  2087,  3384,
     951,   196,  2108,  4143,  3180,   876,  1017,   976,  1236,  1237,
    4653,  4654,  5029,  4031,  4614,  1605,  1973,   899,  1691,  1691,
    1337,  2106,  3811,  1972,  4228,  1236,  1237,  3945,   877,  2114,
    4167,  4168,  4054,  1692,  1692,  3343,   979,  3181,  3182,  3371,
    2223,  4836,  2562,   955,  1017,  2016,  3969,  3189,  3369,  3190,
     954,    54,  1188,   879,  2237,  1236,  1237,  3903,  2244,   196,
    4958,  3334,  1045,   875,  2995,  2619,  1242,  2651,    55,   196,
    2330,   997,  3764,  3461,   922,  3975,  3976,  1024,  1391,  1236,
    1237,  5022,  5072,  3979,  3466,  3467,  1409,  1414,  3470,  2402,
    1236,  1237,  3286,   985,  2205,  3411,   697,  3199,  3942,  1239,
    4272,  1117,  1240,  1236,  1237,  2566,  3410,  4233,  2216,  3254,
    4678,  4837,  4025,  1017,  4273,  4970,  2663,  3255,  1242,  -697,
    3987,  3988,  1280,  4890,  4003,  1017,  3339,  3340,  3471,  3639,
     697,  1017,  3876,  1236,  1237,  3782,  3881,  1449,  4594,  3385,
    2132,  1242,  5011,  1236,  1237,  3366,  1239,  1236,  1237,  1240,
    2174,  4274,  4203,  4204,  1017,  2330,  2359,  1236,  1237,  1472,
    2518,  4469,   702,  2238,   999,  5001,  4034,  2982,  2982,  3765,
    1239,  2002,  1544,  1240,  1041,  3503,  1236,  1237,  2030,  1600,
    2279,  4117,  1239,  5073,  2290,  1240,  1280,  2567,  1239,  1017,
    2283,  1240,  1449,  5130,  4182,   999,   702,  1331,  4172,  1752,
    1586,  4746,  1595,  3322,  1236,  1237,  2302,  2303,  2628,  2328,
    1063,  1236,  1237,  2805,  5074,  2924,  1239,  2939,  2109,  1240,
    1607,  1009,   877,  3345,  2629,  1064,  2360,  1517,  1258,  1081,
    3978,  1236,  1237,   966,  2710,  3506,  3507,  1601,  3788,  2569,
    1236,  1237,  1239,  1242,  1189,  1240,  1239,   879,  1753,  1240,
    3783,  1236,  1237,  4838,   877,  2042,  3367,  1236,  1237,  1280,
    2404,  4419,  2570,  4273,   714,  2017,  1091,  1236,  1237,  3301,
    2330,  1950,  3719,  3720,  4762,  1607,  2695,  4246,  1388,   879,
     725,  1764,  4596,  2940,  3312,  1025,  1567,  3423,  1192,  4791,
    1236,  1237,  3545,  2297,  1236,  1237,  2298,  4026,   714,  2300,
    4274,  3438,  3439,  3440,  1388,   877,  1239,   967,   886,  1240,
    1236,  1237,  3378,  4459,  2941,  4451,  2422,   971,  2895,  4198,
    4199,  4200,  4045,  5012,  2925,  4891,  1827,  3547,  4230,  1828,
     879,  5002,   971,  2239,  3546,  4263,  1239,   646,  3904,  1240,
     647,  2406,  4724,   957,  2132,  4451,  2544,   730,  1568,  3386,
    4627,  2240,  4628,  1281,  4542,  1753,  4080,  3918,  3666,  1393,
    1242,  4275,  1605,  4602,  2574,   971,  4573,  3200,  2502,   637,
     637,   731,  5257,  2110,  1008,  1236,  1237,  1239,   637,  2180,
    1240,   730,  4262,  1332,  2896,  2942,  4094,  4095,  1754,  1046,
    1603,  4190,  2111,   956,  1239,  2902,  2872,  1240,  3061,  1011,
     887,  2378,  2503,  2504,  1032,   731,  4196,  1242,  2657,  3687,
    3303,  2018,  3690,  3691,  4012,  1954,  3694,  3695,  3696,  3697,
    3698,  3699,  3700,  3701,  1239,  3424,  3704,  1240,  3706,  1970,
    3708,  1242,  1261,  3463,  3716,  4892,  4887,  1587,  4975,  3204,
    3741,  4979,  2241,  1242,  2352,  3425,  3758,  4152,  1239,  1242,
    1035,  1240,  1236,  1237,  2379,  1159,  2550,  1907,  3426,  1239,
    4690,  2903,  1240,  1588,  2015,   908,  1236,  1237,  2943,  4373,
    2657,  3034,  1239,   888,  2656,  1240,  1604,  1242,  4313,  3453,
    1193,  2592,  4451,  3044,  1569,  1091,  2897,  1951,  1236,  1237,
    1236,  1237,  2904,  4301,  1236,  1237,   749,  4454,  4671,  4672,
    4041,  1755,  1239,  1242,  2634,  1240,  4470,  1242,  2813,  4472,
    4275,  4455,  1239,  1952,  3084,  1240,  1239,  2638,  4193,  1240,
    2642,  3329,  1065,  1605,  1017,  3884,  1239,  2982,  2609,  1240,
    1908,  3747,  4651,  4496,  4013,  2630,  2038,  1091,  3746,  1449,
    2380,  1037,  3427,  2181,  3115,  1239,  2050,  1091,  1240,  2052,
    5005,  5006,  2613,  1066,  1001,  2093,  1704,  2873,  1229,  2640,
    1228,  1281,  2656,  2905,  3830,  2364,  2146,  1242,   757,  2898,
    3831,  2814,  1247,  1239,  -550,  2924,  1240,  3046,  1001,  2646,
    1239,   971,  2093,  1240,  1705,  2647,  1774,  2724,  2725,  4511,
    4512,  3327,  1774,   997,  2507,  1236,  1237,  1242,   971,  1731,
    1239,  4663,   757,  1240,  2982,  2982,  4765,  2353,  1755,  1239,
    1382,  3337,  1240,  3338,  1697,  1704,   971,  1159,  1017,  2093,
    1239,  4042,  1607,  1240,  3844,  2657,  1239,  4359,  3855,  1240,
     909,  5134,  2681,  2692,  1236,  1237,  1239,  2697,  1242,  1240,
    1058,  4854,  2405,  1705,  2682,   971,  2906,  2231,   971,  3205,
    4014,  1236,  1237,  1061,  3798,  1242,  1017,  3047,  4732,  1239,
    1017,  1017,  1240,  1239,  3428,  3643,  1240,  3813,  1756,  1262,
    1263,  4393,  4394,  4522,  1774, -1902,  2273,  4395,  1732,  1239,
    1953,  1068,  1240,  2811,  2925,  1242,  2683,  4855,  3856,  2944,
    2692,  4268,  2748,  4269,   971,  2710,  2822,  1236,  1237,  1258,
    1449,  4571,  1017,  4398,  4456,  4839,  4553,  1001,  4402,  1242,
    4733,  2293,  4405,  1775,  2519,  1774,  3759,  4652,  1017,  1789,
    1242,  1697,  1706,  3909,   876,  2656,  3762,   876,  2365,  4849,
    1535,  1236,  1237,  1242,   955,  4074,  3429,  4676,  4677,  2710,
    2710,   954,   955,  4010,  1239,  2710,  1909,  1240,  3071,   954,
    3072,   637,   637,   637,   971,   637,  1017,   971, -1902,  4325,
    3048,  3943,  4985,  1242,  2815,  2819,  1461,   637,  4215,  1017,
    1073,  3889,   637,  1242,  4157,  1756,  4555,  1242,   924,  1002,
    4521,  4572,  1774,  1607,  2806,  2807,  2808,  1242,  2810,  1074,
    2899,  4844,  3508,  3073,  1236,  1237,  1236,  1237,  3225,  4664,
    2820,  1843,  2523,  4534,    42,  2824,  1242,  5190,  5190,  3984,
    1076,  1236,  1237,  4535,  2849,  1085,  3074,  4856,  1003,   997,
    3226,  1239,   646,  4158,  1240,   647,  2532,   177,  1882, -1902,
    3525,  1882,  1077,  1001,  1242,  1239,  1536,  3935,  1240,  2964,
    4629,  1242,  1847,  1271,  1272,  1273,  1274,  1275,  1276,  1017,
    2533,  2920,  1317,  1462,   876,  3075,  1328,  1239,  3887,  1239,
    1240,  1242,  1240,  1239,  2148,  1599,  1240,  2907,  4525,  4620,
    1242,   905,  2188,  1087,  3207,  1236,  1237,    49,  2290,  2404,
    2540,  1242,  1236,  1237,  1600,  1088,  1512,  1242,  1017,  2424,
    2553,  4949,  2861,  3382,  2554,  1561,  1561,  1242,  1093,  1513,
    2520,  2933,  1608,  1261,  2472,   925,   971,  3775,   986,  1869,
    4734,    42, -1902,  4035,  1236,  1237,  2149,  1089,  5077,  1001,
    1242,  4818,  1095,  2558,  1242,  2218,  4821,  3031,  2219,  1236,
    1237,    54,  2988,  1236,  1237,  1098,  2494,  2498,  2994,  2862,
    1242,  5131,  1601,  4587,  3007,  3009,  3012,  3013,  3014,  3015,
    3016,  2565,  2965,  2189,  3020,   987,  3025,  4536,  3927,  2495,
    3927,  3895,  1882,  2381,  1239,  3309,  3025,  1240,  3035,  3036,
    1097,  3025,    42,  3040,  3041,  3894,  1017,  3043,  3025,  3911,
    3569,  1236,  1237,  3053,    49,   926,  3056,  2568,  1883,  1514,
    3633,  3634,  3310,  3066,  3494,  4069,  3067,   971,  2571,  5078,
    1236,  1237,  1602,  1239,  2583,  1242,  1240,  3082,  4208,  3025,
    3955,  2710,  4172,  1017,  2601,  1104,  4622,  1236,  1237,  3966,
    1239,  3495,  4937,  1240,   877,   697,  4704,   877,  4093,   971,
     988,  4709,  1745,  4774,   957,  4209,  4098,  2608,    54,  3025,
    3120,  2611,   957,  4130,  4938,    49,  2623,  2494,  2280,   879,
    2521,  2997,   879,  2544,  2429,    55,  4775,  2854,  2284,  1236,
    1237,  4561,  3017,  4623,  1236,  1237,  1239,  4435,  3026,  1240,
    2495,  4885,  4886,  4983,  4984,   999,  1236,  1237,  2220,  2646,
    4729,  1099,  1242,  2522,   956,  2853,  5127,  2429,  1882,  4949,
    4436,   702,   956,   971,  3060,  1603,  1242,   971,  3057,    54,
    1239,  1107,  3065,  1240,    42,  1017,  1258,  5299,  3076,  3069,
    3070,  3635,  3636,  3220,   637,  3275,    55,  1108,  1242,  1035,
    1242,  3188,  3791,  1109,  1242,  2966,  3217,  2330,  3186,  4437,
    1236,  1237,  1236,  1237,  1017,  2967,  3640,  3671,  1017,  1720,
    2684,  1114,  2968,  1282,  1236,  1237,  2917,  3221,  1236,  1237,
    1236,  1237,  3672,  2649,   877,  1236,  1237,  4163,  4704,  1236,
    1237,  4866,  4709,  1239,  5035,  1239,  1240,  1115,  1240,  2931,
    1091,  1036,  4164,  1236,  1237,  4955,  3655,    49,  2720,   879,
    1239,  1604,   999,  1240,  3658,  -550,   915,  2320,  1091,  3662,
    1116,  2354,   646,   714,   915,   647,  1236,  1237,  3355,  3823,
    2631,  2323,  1523,  1524,  4653,  4654,  2182,  2183,  3215,   175,
    1037,  5036,  3341,  3826,  3101,  3102,  2355,  2711,  4704,  3318,
    2716,  2022,  4956,  4709,  2774,  1242,  1236,  1237,  1605,  1425,
     938,  3397,  3398,  2184,  5221,  3834,  2982,  3840,  4360,  2403,
    2787,  3841,  5164,    63,  1239,  1118,  2969,  1240,    55,  1425,
     938,  1239,  1258,  5121,  1240,  3804,  1721,  3808,  1119,  2403,
    1722,  3347,  3348,  1120,  1242,  1487,  1488,  1229,  1491,  1228,
    1492,  1017,  2949,  2136,  1723,  2546,   730,  1123,  1017,  2429,
    4225,  1242,  5105,  1239,  1281,  2547,  1240,  2982,  2982,  1841,
    4323,   989,   927,   928,  2009,   929,   930,   931,  1239,  2009,
   -1725,  1240,  1239,  3370,  1017,  1240,  4884,  1425,   938,  1606,
    1261,  4235,  4236,   990,   932,  1124,  1273,  1274,  1275,  1276,
    2356,  3892,  1258,  1235,  4019,  4020,  2809,  1242,    42,  2812,
    2881,  2882,  2137,   971,  1258,  2883,  2884,  4251,  1125,  2333,
     971,   971,  3842,  2970,  4751,  1882,  4752,  1525,  1526,  2323,
    1239,  3635,  3636,  1240,   991,  4244, -1725,  1159,  1126,  3414,
    1017,  1242,  1704,  3217,  2334,  2138,   971,  4187,  4188,  1239,
    4473,  2875,  1240,  4475,  4476,   999,  1127,   951,  1001,  1001,
    1229,  3843,  1228,  2559,  4737,  1128,  1239,  2429,  1170,  1240,
    1705,   876,   876,   876, -1725,  1291,  2560,  1286,  3845,  1546,
    2429,    49,  4610,  4611,  4240,  1449,  5269,  5270,  1187,  3547,
    1544,  1724, -1725,  4281,  1129,   992,  3546, -1725,  5177,  3459,
     955,  1201,  1202,  3478,  1242,  3480,  1242,   954,  1239,  1523,
    1524,  1240,  3794,  1239,  1321,  1600,  1240,  1324, -1725,  2561,
    4837,  1242,  1327,  2429,  3848,  1239, -1725,  1329,  1240,  2939,
     971,   971,  1301,  2563,  1130,    54,  1261,  2429, -1725,   697,
    4090,  2604,  3473,  4091,  4964,  2429,  1258,  3347,  1133,  1265,
    1266, -1725,    55,  2932,  2950,  1135, -1725,  5226,  3854,  5228,
    1136,  4516,  4517,  4518,  4519, -1725,  3173,  2688,  1607,  1137,
    2951,  2689,  2847,  1601,  1919,  5250,  2848,   757,  3042,  1239,
    1140,  1239,  1240,  3260,  1240,  1242,  1141,  2429,  1670,  1725,
    2335,  1671,  1242,  1239,  3331,  2940,  1240,  1239,  2429,  1239,
    1240,  2265,  1240,  2266,  1239,   702,  1261,  1240,  1239,  3555,
    1143,  1240,  3846,  3556,  1017,  3087,  2429,  1144,  1261,  5285,
    5286,  3857,  1294,  3859,  1242,  2358,  2976,  4064,   971,  2290,
    3529,  4065,  3078,  3079,   322, -1725,   324,  3747,  3861,  1242,
    1145,  1001,  4214,  1242,  3746,  1239,  4065, -1981,  1240,  3068,
    3097,  3100,  4280,  3539,  1525,  1526,  2429,  4303, -1725,  4317,
    1146,  2846,  4944,  4318,  4357,  2139,  3174,  1147, -1725,  4358,
    1576,  4067,  4068,  3175,  1148,  1239,  4075,  1149,  1240,   999,
     175,  3112,  1872,  1873,  4361,  4363,  1017,  1608,  4362,  4362,
    2994,  1242,  2994,  1150,  4314,  1265,  1266,  2977,  3007,  1297,
    4400,  4407,  3578,  2022,  4401,  4408,  1153,   714,  1305,  3863,
    1242,  3025,  4097,  1154,  3641,  2836,  2837,    25,  4126,  4128,
    4129,  1160,  2902,  3804,  1161,  1017,  1603,  1242,  4582,  1162,
    1163,  3649,  1164,  1527,  1528,  1529,  1391,  4421,  1306,  4498,
    1391,  3864,  2952,  4499,  1165,  3166,  1308,  1315,  4421,  3170,
    1261,  3025,  1166,  4601,  1167,  2902,  3865, -1725,  3080,  3025,
    4256,  1262,  1263,  3025,  3025,  1265,  1266,  1920,  1168,  1242,
    1171,   877,   877,   877,  1242,  1172,   176,  1265,  1266,   971,
    2978, -1725, -1725,  4500,  1017,  1017,  1242,  4501,  2903,  4502,
     730,  2264,  2265,  4503,  2266,   177,   879,   879,   879,  1173,
     957,  1271,  1272,  1273,  1274,  1275,  1276,  1316,  4257,  4505,
    1174,  2140,  1604,  4506,   731,  2422,  1319,  1320,  1175,  2904,
    2953,  2903,  4508,  1333,  4510,  1882,  4509,  4258,  4408, -1725,
    1882,  1047,  2141,  1805,  1176,  1177,  3935,  4515, -1725,  1048,
    1242,  4408,  1242,  1017,  4403,  1178,  2954,  1179,  1180,  1181,
     956,  5279,  2904,  3176,  1242,  1182,  1183,  2142,  1242,  1605,
    1242,  1338,  4545,  1017,  1345,  1242,  4548,  5279,   178,  1242,
    1339,  4556,  1184,  2143, -1725,  2429, -1725,  4579,  1309,  1185,
    3357,  2429,  1186, -1725,  1349,  4624,  4551,  1017,  1258,  4401,
    2905,  4554,  1190,  5279, -1725, -1725,   876,   971,  1191, -1725,
     971,  4642,  3578,  4560,  1194,  4408,  1242,  1195,  2955,  1265,
    1266,   179,  3217, -1725,  1199, -1725,  1006, -1725,  1228,  1203,
   -1725,  3217,  3217,  2905,  1352,  1362,  4646,  3217, -1725,  4649,
    4408,  4665,    36,  4408,    42,  4666,  1242,  4667,  1204,  1809,
   -1725,  4666,  3396,  1205,  1206,  1269,  1270,  1271,  1272,  1273,
    1274,  1275,  1276, -1725,   180,  1370,  3992,  4562, -1725,  4563,
    4713,  1310,  1207,  2683,  4408,  1208,  1311, -1725,  1209,    42,
    4788,  4564,  1258,  2906,  4789,  4565,  4808,  4650, -1725,  4820,
    4401,  1372,  4805,  3556,  1921,  2038,  4807,  1493,  1210,  1375,
    4888,  1211,  2050,  3393,  4889,  1258,  1212,  1382,  5049,  5054,
    1922,  2979,  5050,  3683,  1213,  1214,  2906,    49,  3318,  1312,
    2956,   757,  3925,  1215,  1216,  1269,  1270,  1271,  1272,  1273,
    1274,  1275,  1276,  4833,  1217,  1313,  3886,  1269,  1270,  1271,
    1272,  1273,  1274,  1275,  1276,  5057,  1449, -1725,  1218,  4362,
    4632,  4633,    49,  4635, -1725, -1725,  3173, -1725,  1810, -1725,
    1219,  1314,  1813,  4994, -1725,  1220,  1221,  1222,  4685,  1814,
   -1725,  3397,  3398,  2692,  1223,  4639,  4640,  3908,  1017,  5059,
   -1725,  1285,  1258,  5060,   971,  3173,  5068,  5135,    55,  5261,
    5069,  5136,  1257,  5262,  1407,  1017,  1317,  3217,   181,  3025,
    1883,  3423,  1261,  3936,  1415,  1336,    54,  1421,  1477,  1476,
    1479,  1480,  3468,  3469,  2692,  1489,  1017,  1006,  1494,  1228,
    1495,  1496,  1497,    55,  4945,   971,   971,  1498,  1499,  1607,
    1505,  1600,   677,  1500,   971,   971,   971, -1981,  1001,  1001,
    1501,  3998,  1508,  1519,  1511,  1520,  1391,  1001,  1001,  1001,
    1815,  -847,  1521,  1522,  1532,  1545,  1549,  4102,  1248,  1249,
    1045,   909,  1573,  1575,  1017,  1594,  5058,  1598,   677, -1725,
    1270,  1271,  1272,  1273,  1274,  1275,  1276,   182,  1694,  1697,
    1738,  3991,  3173,  3991,  1739,  2022,  1261,  1741,  1742,  1601,
    1279,  1774,  1781, -1725,  -695,  1792,  1795,  2939,  1830,  1250,
    1258,  4103,  1840,  1841,  2907,  4104,   877,  4105,  1842,  1261,
    4440,  1863,  1251,  1880,  1817,  3399,  1603,   697,  3557,  2324,
    2463,  2464,  2465,  2466,  2467,  2468,  2469,   971,  1892,  4033,
    1893,   879,  1900,  1901,  1883,  1902,  1911,  2907,  1930,  3424,
    1001, -1725,   183,  1937,   184,  1603,  4440,  1938,  1608,  1967,
      63,  1985,  1252,   697,  1971,  4106,  2011,  1391,  2032,  3425,
    2033,  1265,  1266,  2940, -1725,  1253,  2034,  2994,  2035,  2037,
    2939,  2045,  3426,  4016,   701,  4061,  2046,  2047,   185,  2056,
    4744,  2072,  3174,   702,  2077,  2088,  1261,  2092,  2093,  3175,
     186,  4102,  1254,  2095,  2941, -1725,  2098,  2100,  2102,  2104,
    4766,  2105,  4767,  4768,  1384,  2130, -1725, -1725,  1259,  2155,
     701,  2135,  2156,  2157,   707,  2172,  2774,  1391,  2175,   702,
   -1725,  2178,  2179,  2193,  2190,  2194,  2939, -1725,  -695, -1725,
    2195,  2206,  4799,  -847,  1260,  4463,  2940,  2207,  2208,  4104,
    2210,  4105,  1603,  3176,  2212,  1265,  1266,  4138,  2224,  1605,
     707,  2226,  2228,  2324,  2229,  1818,  3427,  1255, -1725,  2230,
    1883,  1091,  2232,  4146,  4147,  2942,  2233,  2941,  1265,  1266,
    1882,  2253,  3176,  1820,  2259,  2246, -1725,  2254,  1605,  4334,
    2255, -1725,  1258,  3025,  3025,   714,   187,  3120,  2256,  4106,
   -1725,  2257,  2940,  -868,  2258,  3749,  2260,  2262,  3423,  2270,
    2274,  2275, -1725,  2160,  1261,  4786,  2294,   677,  1635,  2306,
   -1725,  2307,  2309,  2310,  2318,  2322,    42,  2337,  3736,  3761,
    4843,   714, -1725,  2976,  3913,  1262,  1263,  4176,  1604,  2323,
    4180,  2342,  2343,  2161,  2348, -1725,  2349,  2351,  2942,  4061,
   -1725,  2361,  2363,  2366,  2373,  1265,  1266,  3736,  2943, -1725,
    2374,   725,  2377,  1560,  4061,  2384,  4201, -1725,  2385, -1725,
    2387, -1725,  2395,   728,  2902,  2397, -1725,   729,   730,  3176,
    2408,  2398,  2409,  2410,   971,  1605,  2411,  2415,  3428,  3767,
    2414,  2425,  3769,  4221,  2162,  4440,  2426,   725,  2163,    49,
    2564,  2428,   697,  2429,  2977,  2473,  1262,  4107,   175,  2475,
    2476,  1264,  4108,   729,   730,  1282,  2477,  2479,  4109,  2480,
    2481,  1269,  1270,  1271,  1272,  1273,  1274,  1275,  1276, -1725,
    4948,  2943,  3994,  2482,  2483,  2486,  1449,  -868,  2488,  2489,
    2903,  5037,  2493,  2499,  2535,  2509,  3424,  2511,  2512,  2513,
    2538,  2527, -1725,  3397,  3398,  4786,  2544,  2529,  4110,   701,
    3429,  2534, -1725,  2537,  2548,  1449,  3425,  2552,   702,  2556,
      55,  2904,  2605,  1265,  1266,  2572,  2573,  2578,  2581,  3426,
    2593,  2594,  2582,  2595,  2603,  1276,  1267,  2978,  3737,  5045,
    2602,  2939,  2620,  2354,  4381,  2621,  1261,  2622, -1359,   707,
    2635,  2645,  2639,  2323,   652,  1269,  1270,  1271,  1272,  1273,
    1274,  1275,  1276,  2644,  2648,  2657,  2009,  3737,  2355,  1607,
    2661,  2664,  5119,   177,  2667,  2668,  4335,  1883,  1269,  1270,
    1271,  1272,  1273,  1274,  1275,  1276,  2669,  4111,  2670,  4366,
    1262,  4107,  2905,  2671,  2672,  2673,  4108,  2686,  1607,  2685,
    2687, -1725,  4109,  2164,  1159,  1017,  2690,  2940,  2132,  3217,
     971,   822,  1449,  3427,  2727,  2717,  3917,   872,  -695,  2719,
     714,  1718,  2726,  1001,  2734, -1725,  2737,   749,  2323,  2944,
    2739,  4441,  2742,  2743,  4442,   872,  4336,  4112,  2941,   952,
    2744,  2746,  4110,  2324,   755,   653,  2745,  3399,  2080,   757,
    2769,  1395,   758,   822,   996,  1269,  1270,  1271,  1272,  1273,
    1274,  1275,  1276,   749,  3991,  1258,  4969,  4441,  2770,  2777,
    4442,  1396,  2356, -1725,  2789,  2906,  2790,  2791,  4948,  2792,
     755,  -898,  2165,  2793,  2794,   757,   725,  2798,   758,  2800,
    2826,  2804,  2827,  2828,  4113,  1607,  2829,  2842,  2831,  2844,
    4416,  1882,  2944,   730,  2846,  1265,  1266,  5242,  2851,  2942,
    2852,  4061,  2845,  4399,  1704,  2859,  4061,  2876,  2865,  2877,
    4061,  4111,  2871,  -695,  2914,  1882,  2863, -1725,  2698,  3578,
    2878,  5265,   654,  2323,  2915,  3428,  2923,  2959,  2918, -1725,
    1017,  1268,  1705,  2928,  1882,  2936,  2166,  -695,  2324,  2961,
    5242,  2960,  2962,  2325,  2699,  3037,  3039,  3085,  2979, -1725,
    4776, -1725,  3092,   971,  1882,  3105,  3107,  1017,  3113,  2700,
    5265,  4112,  3121,  1269,  1270,  1271,  1272,  1273,  1274,  1275,
    1276,  3123,  2701,  3114,  3124,  3125,  3126,  1258,  4786,  1704,
    3127,  5193,  2943,  3128,  4777,  3129,  4114,  3130,  3131,  3169,
    3132,  3133,  3134,  3135,  3136,   971,  4481,  3429,  3137,  1987,
    3138,  4443,  4444,  5026,  1608,  3139,  3140,  1705,  3141,  4445,
    -697,  3142, -1725,  3143,   914,  3144,   637,  3145,  4113,  3146,
    3147,  3148,  3149,  3150,  2702,  2703,   655,  3168,  3151,  4115,
    4116, -1981,  3152,  3172,  3155,  3156,  3157,  4443,  4444,  3158,
    3159,  4176,  -695,  3160,  3161,  4477,  3194,  1516,  2325,  4491,
    3203,  3222,  2704,     1,  3239,  3230,     2,  3262,  2167,  1261,
    3276,  2853,  3263,  4337,  3264,  3374,  4061,  3278,  3293,  3324,
    2357,  3326,  1138,  1188,  3358,     4,  3375,  3240,   971, -1725,
    3332, -1725,  3217, -1725,  1704,  3835,  2907,  2358, -1725,     5,
       6,  1192,   749,  3372, -2193,  5297,  4441,     7,  3377,  4442,
    2168,  3380,     8,     9,  3241,  3391,  3373,  3395,  4778,   755,
    3409,  3412,  1705,  3413,   757,  3422,  3435,   758,    10,  3421,
    4114,  2705,  1988,  3441,  3444,  3456,  1989,  3449,  3458,  3460,
    3475,  3462,  3476,  3477,  3474,   656,  3479,  3485,    11,  3484,
    3482,  3490,  3491,  3492,  -697,  1269,  1270,  1271,  1272,  1273,
    1274,  1275,  1276,  1017,  3242,   657,  3516,  3243,  3517,  4589,
      12,  3520,  -695,  4115,  4116,  3244,  1990,  1883,  2935,  3538,
      13,    14,  3936,  4598,  3540,  2706,  3533,  3534,  1017,  3535,
    1282,  1261,    15,    16,  3245,  3217,  1991,  3536,  3537,  5283,
    3562,  3571,  3563,  3564,  3572,  4779,  4213,  3573,  3643,  3648,
     658,  3651, -1835,  2944,  3318,   659,  3566,  3656,  3659,    18,
    3667,  3652,  3660,  4780,  3676,  3683,  4621,  3681,  1265,  1266,
    3679,  3680,  3752,  3685,  5026,  3809,  3777,  3682,  3723,    19,
    3726,  3246,  3729,  3810,  3732,  3735,   660,  4781,  3750,  3785,
     661,  3812,  3814,  3795,  3799,  3801,  3827,    20,   662,    21,
    2326,  1992,  3828,   826,    22,  3805,  1198,    23,  4061,  3816,
    3817,  3874,  4061,  2327,  3818,  3875,  3866,  -695,  1648,  1620,
    1017,  1449,    24,  3901,  1282,  3869,  4443,  4444,  3870,  3877,
      25,  3893,  3906,    26,  3902,  3919,  3910,  3924,  3923,  3937,
     663,  3940,  3941,  1623,  1624,  3946,  3947,  3948,  3949,  3950,
    3951,  3957,  3247,    27,  3958,  3977,  3959,  3971,  3972,  3985,
    3995,  3996,   827,  3999,  1236,  1237,  4015,  1017,  4001,  4000,
      28,  4018,  4029,  4035,    29,  4022,  4039,  -849,  -849,  1626,
    4040,  4043,  4044,  4049,  4047,  4052,  5294,  -849,  4055,  4056,
    1265,  1266,  4135,  1629,   664,   828,  4099,  1993,  -695,  1630,
    1631,  4081,  4092,  1632,  4131,  4176,  4136,  4180,  4696,  4141,
    4150,  4162,  5294,  3217,  4195,  4207,  4743,  4151,  2327,  4217,
    4212,  4224,  4222,  4232,  4265,  4234,  4270,  1634,  4241,  4247,
     829,  4260,  4248,  1994,  4261,  4221,  4264,  4283,  4299,  4305,
    4300,  1635,  4307,  4310,  4721,  1636,  3248,  4311,  4312,  3249,
    4313,  4324,  4319,  4350,  4329,  4332,  4321,  1995,  4333,  2218,
    4355,  4370,  1801,  1802,  1803,  1804,  1805,  4375,  4384,  4385,
    1449,    30,  4328, -1618,  1641, -1617,  4386,  4387,  4396,  4404,
    4413,   830,  1996,  3528,  4417,  4423,  4453,  4782,  -698,  1017,
    4458,  2999,  4465,  4125,  4452,  4467,   971,  4474,  4483,  4482,
    4485,  4486,  1391,  -695,    31,  4493,  4489,  4492,  4495,  4504,
    4514,  3025,   822,  3025,  4526,    32,  4529,   822,  1269,  1270,
    1271,  1272,  1273,  1274,  1275,  1276,  1997,  3250,  4531,  2774,
    4530,  4528,  4543,  4544,  4545,  4546,  4547,    33,  4549,  4558,
      34,  4550,    35,  4559,  4557,    36,  4552,   822,  4567,  4568,
    4569,  1645,  4580,  4575,  4578,    37,    38,  1998,  1646,  4584,
    4581,  4585,  4583,   822,  4591,    39,  4599,    40,  4592,  1806,
    1807,  1808,  1809,  4802,  4607,  4432,    41,   646,  1647,  4604,
     647,  4609,    42,  4605,  4625,  4362,  4630,  4631,  4641,  4634,
      43,  4636,  4637,  1041,  4643,    44,    45,    46,  4662,  4669,
    4679,  3251,  4176,  4176,   728,  4675,  4548,  4680,  3674,  4686,
    -108,  4688,  4692,  4699,  4698,   831,  4861,  4480,  4710,  4719,
     822,   822,  4711,   822,   822,  4720,  4722,  4726,    47,  4723,
    4727,  4731,  4742,  4728,  4747,    48,   822,  4738,  1649,  4757,
    1269,  1270,  1271,  1272,  1273,  1274,  1275,  1276,  4753,  4769,
    4772,  4803,  4823,  4812,  4831,    49,  1650,  4814,  4817,  4827,
    4739,  4846,  3318,  4848,  2647,  4797,  4758,  4832,  4759,  4863,
    4872,  3252,  4806,  1561,  4870,  4873,  4881,  4893,  4850,    50,
    4834,  1810,  4896,  1811,  1812,  1813,  4851,  4284,  4614,  4935,
    4943,    51,  1814,  4061,   832,    52,  4852,  4285,  4950,  3253,
    4541,  4853,  4857,    53,  4858,  3314,  4862,  4286,  4867,    54,
    4878,  1654,  4934,  4952,   833,  4957,  4953,  4955,  2920,  4956,
    1655,  4287,  4288,  4289,  4965,  4966,    55,  4972,  4987,  4996,
     822,  4973,  5016,  1239,    56,  -437,  1240,  4290,  5014,  5017,
    5018,  5034,  5019,  5046,  5055,  5048,  5053,  5082,  5085,  -455,
    2058,  5110,  1883,  5111,  4963,  5112,  5113,  5115,  5121,   834,
    2059,  3120,  3120,  5122,   659,    61,  3991,  5123,  4762,   822,
    2060,  5129,  5139,  1815,  5125,  5142,  5143,  5150,  5151,  5165,
    5155,  4986,   835,   872,  2061,  2062,  2063,  5168,  5171,  5172,
    5173,  5178,  5180,  4991,  5182,   836,   952,  5186,  5183,  1660,
    2064,  5194,    62,  5000,  5203, -2610,  5196,   837,  5007,  5206,
    5208,  5218,  5216,  5219,  5223,  5224,  1801,  1802,  1803,  1804,
    1805,  5225,   120,   838,  5229,  5234,  5249,   115,  5243,   113,
    5255,  5272,  5258,  5064,  5253,  5259,  1816,  1817,  5275,  4176,
    5273,  5268,  1391,  5282,  5302,  4740,  3897,  5284,  5009,   839,
    3734,  3725,  2950,    63,  3728,  1661,  1662,  1663,  1664,  4695,
    3731,  4194,  3722,  1665,  4693,  4697,  4705,  4046,  2951,   876,
    4715,  1765,  5021,   796,  4939,  5161,  2308,  5162,  4717,  4829,
    1666,  5303,  5277,  1667,   964,  4298,  3407,  3365,  5287,  2774,
    4907,  1017,  1460,  4908,  1017,  5200,  4910,  5148,  4911,  5201,
    5191,  4913,  5160,   840,  5159,  4914,  4915,  5086,  4206,  5023,
    2985,  4916,  1609,  4917,  4918,  4921,  4922,  4923,  2991,  1669,
    4397,   822,  3896,  1806,  1807,  1808,  1809,  4513,  3167,  4527,
    3776,  3773,  4364,  3772,  1017,  5132,  4760,  4645,  5170,  4880,
    5137,  5138,   872,  3165,  4216,  3095,  4411,  3771,  4462,  4412,
     822,   822,  4085,  4134,  4963,  4668,  4132,  4464,  5144,   822,
     822,   822,   822,   822,   822,  4291,  3868,  4882,  4819,  4773,
    4787,  4796,   822,   822,  4822,   822,   822,  3570,  1818,  2497,
     822,   822,  4292,  3637,   822,   822,   822,   822,  4959,   822,
     822,  4661,  4424,  5064,  1242,  1819,  1820,   822,   822,  4523,
     822,   822,   822,   822,   822,  4210,  3514,   822,   822,   822,
     822,   822,   822,   822,   822,   822,  3501,   822,  3763,  3098,
     822,   822,  4683,  4929,  3096,   822,  1987,  2292,  2065,   822,
     822,   822,  3099,  2843,  1471,  1810,  4149,  1811,  1812,  1813,
    2952,  1672,   822,   822,   822,  2066,  1814,   822,  4930,  2841,
     822,   822,   822,   822,   822,   822,  2252,  3642,  3394,   822,
    2474,  3392,  2423,  3684,  3916,  1675,  1676,  3381,  4748,  1004,
     822,   822,  4309,  4928,  2768,  2919,  1381,  1913,   822,  2643,
     822,   822,  1380,  5205,  3344,  4859,  2612,  3879,  5120,  4841,
    5213,  3417,   822,   822,   822,  3418,   822,   822,  1839,  3419,
     822,   822,   822,  4293,  3420,   822,   822,   822,   822,   822,
     822,   822,   822,  5167,  4929,  4929,   822,  5128,  2953,  4755,
    4294,   822,  5245,  1883,  5266,  4612,  4967,  1815,  4169,  5251,
    1791,  4968,  4352,  1478,  5256,  4860,   872,  4619,  3974,  4930,
    4930,  1262,  1263,  1017,  2954,  4730,  2203,  1883,  4145,  1988,
    4835,  4771,   841,  1989,  2922,  1578,  3353,  3914,  2650,  3915,
    2031,  1579,  4600,  4320,  4928,  4928,  1883,  2202,   872,   877,
    3912,  4588,  1580,  4593,  1572,  1581,  2817,  2291,  5295,  1454,
    3464,  3360,  4295,  2067,  1574,  2832,  1883,  3465,  3663,  2741,
    1816,  1817,  3922,  1990,   879,  4388,  5166,  4638,   115,  4296,
     113,  4574,  5281,  5126,  5295,  5298,  2955,  4756,  4478,  4597,
    3527,  1914,  4520,  1991,  3713,  2788,  5124,  2116,   960,   872,
    1623,  1624,  4929,  4929,  3454,   197,   822,  2799,   961,  2115,
    2785,  3388,  2784,  1374,   921,  3195,  3496,  4741,  3196,  4929,
    2245,  4845,   873,   668,  1379,  2068,   669,  4930,  4930,  4484,
    2079,  5133,  4524,  1562,  1768,  4211,  1626,   952,  1769,   822,
     873,  1770,  2069,  4712,  4930,     0,     0,  2021,  4156,     0,
    1629,     0,  4928,  4928,     0,     0,  1630,  1631,  1992,     0,
    1632,     0,     0,     0,     0,     0,     0,     0,     0,  4928,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4929,     0,  1634,     0,     0,     0,  2956,     0,
       0,     0,   822,     0,     0,     0,     0,  4929,  1635,     0,
       0,     0,  1636,     0,     0,     0,     0,  4930,     0,     0,
    4929,   822,  1818,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4930,     0,     0,     0,     0,     0,     0,  1819,
    1820,  1641,  4928,     0,     0,  4930,     0,     0,     0,  4929,
       0,     0,     0,     0,     0,     0,     0,  4928,     0,     0,
       0,  4929,  4929,     0,  1993,     0,     0,     0,     0,     0,
    4928,     0,     0,     0,  4930,   822,     0,     0,     0,  4929,
       0,     0,     0,     0,     0,     0,  4930,  4930,     0,  4929,
       0,  5116,     0,     0,  4929,     0,     0,     0,     0,  4928,
    1994,     0,     0,  5067,  4930,     0,  5070,     0,  4929,     0,
    4929,  4928,  4928,     0,  4930,     0,     0,     0,  1645,  4930,
       0,     0,     0,     0,  1995,  1646,  4929,     0,  4929,  4928,
    4929,     0,     0,  4930,     0,  4930,     0,     0,     0,  4928,
       0,     0,     0,     0,  4928,  1647,  5117,     0,     0,  1996,
       0,  4930,  4929,  4930,  5154,  4930,     0,     0,  4928,     0,
    4928,     0,     0,     0,     0,     0,     0,     0,     0,  5154,
    4929,  4929,     0,     0,     0,     0,  4928,  4930,  4928,     0,
    4928,     0,  5163,     0,     0,     0,     0,  4929,  4929,     0,
       0,     0,  4929,  1997,     0,  4930,  4930,     0,     0,     0,
       0,     0,  4928,     0,     0,  1649,     0,     0,     0,     0,
       0,     0,  4930,  4930,     0,     0,     0,  4930,     0,     0,
    4928,  4928,     0,  1650,  1998,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,  4928,  4928,     0,
       0,  5154,  4928,     0,     0,     0,     0,     0,     0,     0,
       0,  5215,     0,     0,     0,     0,  5217,     0,     0,  1152,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1169,     0,     0,  1654,     0,
       0,     0,     0,     0,     0,     0,     0,  1655,     0,     0,
    5154,     0,  5154,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   822,     0,     0,     0,   822,     0,     0,
       0,     0,     0,     0,  5154,   822,     0,   822,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1230,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5154,
    5154,     0,     0,     0,  5301,  5260,     0,   822,     0,     0,
       0,     0,     0,     0,     0,     0,  1660,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   822,   822,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1661,  1662,  1663,  1664,     0,     0,     0,     0,
    1665,     0,   822,     0,     0,     0,     0,   822,     0,     0,
       0,     0,  1344,     0,     0,     0,     0,  1666,     0,     0,
    1667,     0,     0,     0,     0,     0,   822,     0,     0,     0,
       0,     0,     0,   822,     0,     0,     0,     0,   822,     0,
     822,     0,     0,     0,     0,     0,   822,     0,   822,   822,
       0,   796,     0,     0,     0,     0,  1669,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2314,     0,  2316,  2317,     0,     0,     0,
    2319,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2332,     0,     0,  2338,  2339,     0,  2341,     0,
       0,  2344,  2345,  2346,  2347,     0,     0,     0,  2350,     0,
       0,     0,     0,  2362,     0,     0,     0,     0,  2367,  2368,
    2369,  2370,  2371,     0,     0,     0,  2375,  2376,     0,     0,
       0,     0,  2386,     0,  2388,  2389,  2390,     0,  2393,  2394,
       0,  2396,     0,     0,  2399,     0,     0,  2400,  2401,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1672,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   872,     0,
       0,   872,  1675,  1676,     0,     0,     0,     0,   952,   822,
       0,     0,     0,   822,     0,     0,   952,     0,     0,   822,
       0,     0,     0,     0,     0,     0,     0,     0,   822,     0,
       0,     0,  1772,  1773,     0,     0,     0,     0,     0,     0,
       0,  1783,  1784,     0,     0,  1787,  1788,     0,     0,     0,
       0,     0,     0,     0,  1796,  1797,     0,  1798,  1799,     0,
       0,     0,  1823,     0,     0,     0,  1832,  1833,  1834,  1835,
       0,  1837,     0,     0,     0,     0,     0,     0,     0,  1845,
    1846,     0,  1849,  1850,     0,     0,     0,     0,     0,  1854,
       0,     0,  1857,  1858,  1859,  1860,  1861,  1862,     0,  1864,
       0,     0,  1867,  1868,     0,     0,     0,  1871,     0,     0,
       0,  1874,  1878,  1879,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1886,  1887,  1888,     0,   872,     0,
       0,     0,  1894,  1895,  1896,  1897,  1898,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1912,   796,     0,     0,     1,     0,     0,     2,
    1916,     0,  1917,  1918,     0,     0,     0,     0,     0,     0,
       0,     0,  1342,     0,     3,     0,     0,     0,     4,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     5,     6,     0,     0,     0,     0,     0,     0,
       7,     0,     0,  1958,     0,     8,     9,     0,     0,  2983,
       0,     0,  2983,  2983,     0,     0,     0,     0,     0,     0,
       0,    10,     0,     0,     0,     0,     0,     0,   873,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    11,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1342,     0,     0,     0,
       0,     0,     0,    12,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,    14,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    15,    16,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2090,     0,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   822,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,  2128,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,    21,     0,     0,     0,     0,    22,     0,     0,
      23,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    24,     0,     0,     0,     0,
       0,     0,     0,    25,     0,     0,    26,   873,     0,     0,
       0,     0,     0,     0,  2198,     0,     0,     0,     0,     0,
       0,     0,   822,     0,     0,     0,    27,     0,     0,     0,
       0,   822,   822,  2217,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,    29,     0,     0,
       0,   822,   822,     0,   822,     0,     0,   822,   822,   822,
     822,   822,     0,     0,   822,     0,     0,     0,  3204,     0,
       0,     0,     0,   822,  1623,  1624,     0,     0,   822,     0,
     822,     0,   822,   822,     0,   822,   822,  2276,     0,     0,
     822,   822,   822,     0,     0,     0,   822,   822,   822,     0,
     822,     0,   822,     0,   822,     0,   822,     0,   822,     0,
    1626,     0,     0,   822,     0,     0,  2864,     0,     0,     0,
       0,     0,     0,     0,  1629,     0,     0,     0,     0,   822,
    1630,  1631,     0,     0,  1632,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,   822,     0,   822,
       0,   822,     0,     0,     0,   822,     0,     0,  1634,     0,
       0,   822,   822,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1635,     0,     0,     0,  1636,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    32,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   873,     0,  -550,     0,  1641,     0,     0,     0,     0,
      33,     0,     0,    34,  2992,    35,     0,     0,    36,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    37,    38,
       0,     0,     0,   873,     0,     0,     0,   822,    39,  1342,
      40,  3032,     0,     0,     0,     0,     0,     0,     0,    41,
       0,     0,     0,  2044,     0,    42,     0,     0,  3045,     0,
       0,     0,     0,    43,     0,     0,     0,     0,    44,    45,
      46,     0,     0,     0,     0,     0,     0,     0,  3205,     0,
       0,     0,  1645,     0,   873,   872,   872,   872,     0,  1646,
       0,     0,     0,     0,     0,  3090,  3091,     0,     0,     0,
       0,    47,     0,  3104,     0,     0,     0,     0,    48,  1647,
       0,     0,     0,     0,   952,  2510,     0,     0,     0,  2514,
       0,     0,  3206,     0,     0,     0,     0,     0,    49,  2510,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    50,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   822,     0,    51,     0,     0,     0,    52,  1649,
       0,     0,   822,     0,   822,     0,    53,     0,     0,     0,
       0,     0,    54,     0,     0,  3197,     0,  1650,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
       0,     0,     0,     0,     0,     0,     0,    56,     0,     0,
       0,     0,     0,  2585,  2587,  2589,     0,     0,     0,     0,
    2249,  2249,  2249,    57,    58,    59,    60,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    61,     0,
       0,     0,  1654,     0,   822,     0,     0,     0,   997,  2624,
       0,  1655,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2632,     0,
       0,     0,     0,     0,     0,    62,     0,     0,     0,     0,
    2636,     0,  2637,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3204,     0,     0,     0,     0,     0,  1623,
    1624,     0,     0,  3207,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    63,     0,     0,     0,
    1660,     0,     0,     0,     0,  1626,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,     0,  1629,
       0,     0,     0,     0,     0,  1630,  1631,     0,     0,  1632,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1634,     0,     0,  1661,  1662,  1663,  1664,
       0,     0,     0,     0,  1665,     0,     0,  1635,     0,     0,
       0,  1636,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1666,     0,    49,  1667,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  -550,     0,
    1641,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1669,  2796,     0,     0,     0,  2128,     0,     0,     0,     0,
       0,     0,  1353,  1424,     0,     0,     0,    54,     0,     0,
    2803,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    55,     0,     0,     0,  1425,   938,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1426,
   -1989,     0,     0,  3205,     0,     0,     0,  1645,     0,     0,
     872,     0,     0,     0,  1646,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1427,     0,  1428,     0,     0,     0,
       0,     0,     0,     0,  1647,     0,  1429,     0,     0,     0,
       0,     0,     0,     0,   822,     0,     0,     0,     0,     0,
       0,     0,   822,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1672,     0,     0,     0,     0,     0,     0,   822,
     822,     0,     0,     0, -1981,  1430,     0,     0,     0,     0,
    1431,     0,     0,  1432,  1649,     0,  1675,  1676,     0,     0,
       0,     0,     0,  1433,     0,   822,     0,     0,     0,     0,
       0,  3208,  1650,     0,  -550,   822,     0,   822,     0,   822,
    2430,     0,     0,     0,     0,  1434,     0,  1435,     0,     0,
       0,     0,     0,     0,     0,     0,  1436,     0,  1437,     0,
       0,  3531,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   822,     0,     0,     0,     0,   822,     0,   822,
       0,     0,     0,     0,     0,     0,     0,  1654,     0,     0,
       0,     0,     0,   997,     0,     0,  1655,     0,     0,     0,
       0,     0,     0,  2431,  2432,  2433,  2434,  2435,  1523,  1524,
    2436,  2437,  2438,   822,  2439,  2440,  2441,  2442,  2443,  2444,
    2445,  2446,  2447,  2448,     0,  2449,  2450,     0,     0,  1438,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3207,   822,
       0,     0,     0,  2712,  2713,     0,     0,     0,     0,     0,
       0,     0,     0,  1439,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1660,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    42,     0,  3122,     0,   822,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3670,     0,     0,
     822,     0,     0,   873,     0,     0,   873,     0,  1440,     0,
       0,  1661,  1662,  1663,  1664,     0,     0,     0,     0,  1665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1525,  1526,  1441,  1666,     0,    49,  1667,
       0,     0,     0,     0,  3229,     0,  1442,  1443,     0, -1985,
    1444,  1445,     0,  3237,  3238,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3753,  3754,  3755,  3756,     0,
       0,  1446,     0,  3265,  3266,  1669,  3267,     0,   822,  3270,
    3271,  3272,  3273,  3274,     0,     0,     0,     0,     0,     0,
       0,     0,    54,     0,     0,  3280,     0,     0,     0,     0,
    3281,     0,  3282,     0,  3283,  3284,     0,  3285,     0,    55,
       0,     0,  3290,  3291,  3292,     0,     0,     0,  3295,  3296,
    3297,     0,  3298,     0,  3300,  1447,  3302,     0,  3304,     0,
    3305,     0,     0,   873,     0,  3308,     0,     0,  1448,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2249,     0,  2249,     0,  2909,  2910,
       0,  2912,     0,     0,     0,     0,     0,     0,     0,     0,
   -2678,     0,     0,     0,  1449,     0,     0,  3342,     0,     0,
       0,     0,     0,  1958,     0,     0,     0,     0,     0,     0,
   -1989,     0,     0,  1450,     0,     0,     0,  1672,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2973,     0, -1985,     0,  2984,     0,     0,     0,     0,
    2989,  1675,  1676,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   999,     0,     0,  -550,
       0,     0,     0,     0,     0,  3027,  3028,  3029,  3030,     0,
       0, -2678,     0,     0,     0,     0,     0,     0,  1451,  3389,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2983,  2983,     0,     0,     0,     0,     0,  3064,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2451,
    2452,  2989,  2989,     0,     0,     0,     0,     0,     0,     0,
     822,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2453,     0,  2454,  2455,  2456,  2457,  2458,     0,     0,  2459,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   822,     0,   822,     0,     0,   822,   822,     0,   822,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1619,
     822,     0,     0,     0,  1620,   822,  1621,     0,   822,  1622,
       0,   822,   822,     0,     0,     0,     0,     0,     0,  1623,
    1624,     0,     0,     0,  2198,     0,     0,     0,     0,     0,
       0,     0,     0,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   822,     0,     0,
    1625,     0,     0,  -849,  -849,  1626,  1627,     0,     0,     0,
       0,  1628,     0,  -849,     0,     0,     0,     0,     0,  1629,
       0,     0,     0,     0,     0,  1630,  1631,     0,     0,  1632,
       0,     0,     0,     0,     0,     0,     0,     0,  1633,     0,
       0,     0,     0,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1634,     0,     0,  2276,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1635,     0,     0,
       0,  1636,     0,     0,     0,     0,     0,   822,   822,  1637,
    1638,     0,     0,     0,     0,     0,  1639,     0,     0,     0,
       0,     0,     0,     0,  1640,     0,     0,     0,     0,     0,
    1641,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1642,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1643,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1644,     0,  1645,     0,     0,
       0,     0,     0,     0,  1646,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1647,     0,     0,     0,     0,     0,
       0,     0,     0,  3390,     0,     0,     0,     0,  4191,  4192,
       0,     0,     0,     0,     0,     0,     0,  1648,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     873,   873,   873,     0,  1649,   822,   822,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1650,     0,     0,  3093,  1651,     0,     0,     0,
    1620,  3455,  1621,     0,     0,     0,     0,  2983,  2983,     0,
       0,     0,     0,     0,     0,  1623,  1624,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1652,     0,     0,     0,     0,     0,
    1653,     0,     0,     0,     0,  2249,  1625,  1654,     0,     0,
       0,  1626,     0,     0,     0,     0,  1655,     0,     0,     0,
       0,     0,     0,     0,     0,  1629,  3790,     0,     0,     0,
       0,  1630,  1631,     0,  3793,  1632,     0,     0,     0,     0,
       0,     0,     0,     0,  1633,     0,     0,     0,  1656,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1634,
       0,  3821,  3822,  1657,  1658,  1659,     0,     0,     0,     0,
       0,     0,     0,  1635,     0,  3515,     0,  1636,     0,     0,
       0,     0,     0,     0,     0,  1637,     0,  3847,     0,     0,
     822,     0,  3094,     0,     0,  1660,     0,  3858,     0,  3860,
    1640,  3862,     0,     0,     0,     0,  1641,     0,     0,     0,
     822,  3532,   822,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3541,     0,  3548,  3549,  3550,  3551,     0,
    3553,  3554,     0,     0,     0,     0,     0,     0,     0,     0,
    1643,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1661,  1662,  1663,  1664,     0,     0,     0,     0,  1665,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2198,  1666,     0,     0,  1667,
       0,     0,     0,  1645,     0,     0,     0,     0,     0,     0,
    1646,     0,     0,  3647,     0,     0,     0,     0,     0,     0,
       0,     0,  1668,     0,     0,     0,  3653,     0,     0,     0,
    1647,  3944,     0,     0,     0,  1669,     0,     0,     0,     0,
       0,   822,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1648,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1670,
       0,  2128,  1671,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4460,  4461,     0,
    1649,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2249,     0,  1650,  2249,
    2249,     0,  1651,  2249,  2249,  2249,  2249,  2249,  2249,  2249,
    2249,     0,     0,  2249,     0,  2249,     0,  2249,  3709,     0,
       0,  2249,  1619,     0,     0,     0,     0,  1620,     0,  1621,
       0,     0,  1622,     0,     0,     0,     0,     0,   822,     0,
       0,   822,  1623,  1624,     0,     0,  1653,  1672,  1673,  1674,
       0,     0,     0,  1654,   822,     0,     0,     0,     0,     0,
       0,     0,  1655,     0,     0,   873,     0,     0,     0,     0,
    4053,  1675,  1676,  1625,     0,     0,     0,     0,  1626,  1627,
       0,     0,     0,     0,  1628,     0,     0,     0,     0,     0,
       0,     0,  1629,     0,     0,     0,     0,     0,  1630,  1631,
     822,     0,  1632,     0,     0,     0,     0,     0,     0,  1657,
       0,  1633,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1634,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1635,  1660,     0,     0,  1636,     0,     0,     0,     0,     0,
       0,     0,  1637,  1638,     0,     0,     0,     0,     0,  1639,
       0,     0,     0,     0,     0,     0,     0,  1640,     0,     0,
       0,     0,     0,  1641,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1642,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1661,  1662,  1663,
    1664,     0,     0,     0,     0,  1665,     0,  1643,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   822,     0,     0,
       0,     0,  1666,     0,     0,  1667,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   822,     0,     0,  1644,     0,
    1645,     0,     0,     0,     0,     0,     0,  1646,     0,     0,
       0,  1669,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1647,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   822,     0,     0,  1670,     0,  4925,  1671,     0,
    1648,     0,  4226,  4936,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   822,     0,     0,     0,     0,     0,
       0,     0,     0,  4237,     0,  2276,     0,  1649,  4242,  4243,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4250,     0,     0,  1650,     0,  4252,     0,  1651,
    4253,     0,     0,  4254,  4255,  4008,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   822,  1672,     0,  4267,     0,  4021,  4925,  4925,
       0,     0,     0,     0,     0,     0,     0,  1652,     0,     0,
       0,     0,  4038,  1653,     0,     0,     0,  1675,  1676,     0,
    1654,     0,     0,     0,     0,     0,     0,     0,     0,  1655,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     822,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   872,     0,  2198,     0,     0,     0,     0,
       0,  1656,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   822,     0,  3579,  3580,  1657,  1658,  1659,     0,
    3581,     0,  3582,     0,  3583,  3584,     0,     0,     0,  4346,
    4349,     0,   822,     0,   822,     0,     0,     0,     0,     0,
       0,     0,  3585,     0,   822,     0,  4925,  4925,  1660,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4925,  4793,  4794,  4795,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3586,     0,     0,  3587,     0,     0,     0,     0,
       0,     0,     0,  3588,  1661,  1662,  1663,  1664,     0,     0,
       0,     0,  1665,     0,     0,  4406,     0,     0,     0,     0,
       0,     0,  3245,     0,   822,     0,  4925,     0,     0,  1666,
       0,     0,  1667,     0,     0,     0,     0,     0,     0,  3589,
       0,  4925,   822,     0,     0,     0,     0,     0,     0,     0,
    2249,     0,     0,     0,  4925,  1668,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3590,  1669,  3591,
       0,     0,   822,     0,  4202,     0,     0,     0,     0,     0,
       0,     0,   822,  4925,     0,  3592,  3593,     0,  4871,     0,
       0,  4874,  4875,  4876,  4877,  4925,  4925,     0,     0,     0,
       0,     0,  1670,     0,     0,  1671,     0,     0,     0,     0,
       0,     0,     0,  4925,     0,     0,     0,  4487,  4488,     0,
     822,     0,     0,  4925,     0,     0,     0,  3594,  4925,     0,
       0,     0,     0,     0,     0,   822,     0,     0,     0,     0,
    3595,     0,  4925,     0,  4925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3596,
    4925,     0,  4925,     0,  4925,     0,     0,     0,  3597,  3598,
       0,  3599,     0,     0,     0,  4971,     0,     0,     0,     0,
       0,     0,     0,     0,  4981,  4982,  4925,     0,     0,     0,
    1672,  1673,  1674,  4990,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4925,  4925,     0,     0,  3600,  3601,
    3602,   822,     0,     0,  1675,  1676,     0,     0,     0,   822,
       0,  4925,  4925,     0,     0,     0,  4925,  3603,  3604,  3605,
       0,     0,     0,     0,  3606,     0,     0,  3607,     0,     0,
       0,  3579,  3580,     0,     0,     0,     0,  3581,     0,  3582,
       0,  3583,  3584,     0,     0,  3608,  3609,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3585,
       0,     0,  2198,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3610,
    3611,     0,  4606,     0,  4608,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3250,     0,     0,     0,  3586,
       0,     0,  3587,     0,     0,     0,     0,     0,     0,     0,
    3588,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4383,     0,     0,     0,     0,     0,  3245,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3589,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3612,     0,     0,
       0,  3613,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3614,  3590,     0,  3591,     0,     0,     0,
       0,  5051,     0,  4673,     0,     0,     0,     0,     0,     0,
       0,     0,  3592,  3593,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4439,     0,     0,     0,
       0,     0,     0,     0,     0,  4681,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3615,  3594,     0,  3616,     0,     0,  3617,
    3618,  3619,  3620,     0,     0,     0,     0,  3595,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3596,     0,     0,     0,
       0,     0,     0,     0,     0,  3597,  3598,     0,  3599,     0,
       0,     0,  3621,  3622,     0,     0,     0,     0,     0,     0,
    2276,     0,     0,  4725,     0,     0,     0,     0,  2249,  2249,
    2249,  2249,     0,     0,     0,     0,  4346,     0,     0,  4008,
    3623,     0,     0,     0,     0,  3600,  3601,  3602,     0,     0,
       0,     0,     0,  4533,     0,     0,     0,     0,     0,     0,
       0,     0,  3579,  3580,  3603,  3604,  3605,     0,  3581,     0,
    3582,  3606,  3583,  3584,  3607,     0,     0,     0,     0,     0,
       0,     0,  4346,     0,     0,     0,     0,     0,     0,     0,
    3585,     0,  3608,  3609,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3610,  3611,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3586,     0,     0,  3587,     0,     0,     0,     0,     0,     0,
       0,  3588,  3250,     0,     0,     0,     0,     0,     0,  5230,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3245,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3589,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2276,
       0,  4626,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3612,  3590,     0,  3591,  3613,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3614,     0,     0,  3592,  3593,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4895,  3594,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3595,     0,
    3615,  2989,  2989,  3616,     0,     0,  3617,  3618,  3619,  3620,
       0,     0,     0,     0,     0,     0,  4951,  3596,     0,     0,
       0,     0,     0,     0,     0,     0,  3597,  3598,     0,  3599,
       0,     0,     0,     0,  4687,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2249,     0,  3621,
    3622,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3600,  3601,  3602,  4714,
       0,     0,     0,     0,  4995,     0,     0,  3623,     0,     0,
       0,     0,     0,     0,     0,  3603,  3604,  3605,     0,     0,
       0,     0,  3606,     0,     0,  3607,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3608,  3609,     0,     0,     0,     0,     0,
       0,     0,  5032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3610,  3611,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3250,  5080,     0,  5081,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5089,     0,     0,     0,
       0,     0,  4792,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3612,     0,     0,     0,  3613,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3614,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5152,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5157,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3615,     0,     0,  3616,     0,     0,  3617,  3618,  3619,
    3620,     0,     0,     0,  5176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2989,  2989,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3621,  3622,  5207,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5222,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3623,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4980,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5296,     0,     0,     0,     0,     0,     0,
       0,  2198,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   873,     0,
       0,     0,     0,     0,     0,     0,   199,   200,     0,   673,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,  5065,  5066,   674,     0,   209,   210,   211,   212,
     675,   214,     0,   215,     0,     0,   676,   216,   677,   678,
     679,   217,   680,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,   681,   682,   225,   226,     0,
     227,   228,   683,   684,   230,     0,   231,   232,   233,   234,
     685,   236,     0,   686,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,   687,   688,   257,
       0,     0,     0,   689,   258,   690,     0,   259,   691,   692,
       0,   260,   261,   262,   693,   694,   695,     0,     0,     0,
       0,   696,   265,   697,     0,     0,   698,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,   699,     0,   292,   293,   294,   295,   296,   700,
     701,   297,   298,     0,   299,   300,   301,   302,   303,   702,
       0,   304,   305,     0,     0,     0,   703,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   704,   312,   705,     0,
     314,     0,   315,     0,   706,     0,   316,   317,     0,   318,
     707,     0,   319,   320,     0,     0,     0,   708,   322,   323,
     324,   709,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,   710,   329,   330,   331,   711,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,   712,   342,   343,     0,     0,     0,     0,     0,
     713,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,   714,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     715,   372,   373,   374,   375,   716,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   717,   383,     0,     0,
     718,   385,   719,   386,     0,   387,   720,   721,   722,   723,
     724,   392,   393,   394,   395,   396,     0,   725,   397,   398,
       0,     0,   399,   400,   401,   402,   403,   726,   727,   728,
     404,   405,     0,   729,   730,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,   731,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     732,   733,   427,   734,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   735,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,   736,   737,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   738,     0,   739,   471,
     472,   473,   474,     0,   475,   740,   741,   477,   478,   479,
     480,     0,   742,   482,    42,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,   743,   744,   511,   512,     0,
       0,   513,   514,   745,   516,   517,   518,   746,   747,   519,
     520,   521,   522,   748,   523,   524,     0,    49,   525,   526,
     527,   528,     0,   749,   529,   530,     0,   750,   751,   752,
     753,     0,     0,     0,     0,     0,   535,   536,     0,   754,
     755,   756,   538,   539,     0,   757,   540,   541,   758,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   759,   550,     0,     0,   760,   761,   762,
     551,  1227,   552,     0,     0,   553,   764,     0,   765,   554,
       0,   555,   556,   766,   767,     0,     0,     0,    55,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   768,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,   769,   770,     0,   573,
     574,   575,   771,   576,   577,   578,     0,   579,   772,   773,
     580,   774,   581,     0,   775,   776,   777,   778,   779,   582,
     583,     0,   780,   584,   781,   585,   782,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   783,   631,   632,
     633,   634,     0,     0,     0,     0,     0,   784,   785,     0,
       0,     0,     0,   787,     0,   788,     0,     0,     0,   789,
       0,     0,     0,   790,   791,   199,   200,     0,   673,   202,
     203,   204,   205,     0,     0,   206,     0,     0,     0,     0,
     207,     0,     0,   674,     0,   209,   210,   211,   212,   675,
     214,     0,   215,     0,     0,   676,   216,   677,   678,   679,
     217,   680,     0,   218,   219,   220,  1875,   221,     0,   222,
     223,     0,     0,   224,   681,   682,   225,   226,     0,   227,
     228,   683,   684,   230,     0,   231,   232,   233,   234,   685,
     236,     0,   686,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,   255,   256,     0,   687,   688,   257,     0,
       0,     0,   689,   258,   690,     0,   259,   691,   692,     0,
     260,   261,   262,   693,   694,   695,     0,     0,     0,     0,
     696,   265,   697,     0,     0,   698,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,   279,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
     291,   699,     0,   292,   293,   294,   295,   296,   700,   701,
     297,   298,     0,   299,   300,   301,   302,   303,   702,     0,
     304,   305,     0,     0,     0,   703,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   704,   312,   705,     0,   314,
       0,   315,     0,   706,     0,   316,   317,     0,   318,   707,
       0,   319,   320,     0,     0,     0,   708,   322,   323,   324,
     709,     0,   325,   326,   327,     0,     0,   328,     0,     0,
       0,   710,   329,   330,   331,   711,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,     0,     0,     0,
     337,     0,   338,     0,     0,   339,   340,     0,  1876,   341,
       0,   712,   342,   343,     0,     0,     0,     0,     0,   713,
     345,     0,   346,     0,   347,     0,   348,   349,     0,     0,
     714,     0,     0,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   715,
     372,   373,   374,   375,   716,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   717,   383,     0,     0,   718,
     385,   719,   386,     0,   387,   720,   721,   722,   723,   724,
     392,   393,   394,   395,   396,     0,   725,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   726,   727,   728,   404,
     405,     0,   729,   730,   406,     0,   407,   408,     0,   409,
     410,   411,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,   731,   416,     0,
     417,     0,   418,   419,   420,   421,   422,   423,   424,   732,
     733,   427,   734,   428,     0,   429,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   735,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,   454,   455,   736,   737,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   464,     0,   465,   466,
       0,   467,   468,   469,     0,   738,     0,   739,   471,   472,
     473,   474,     0,   475,   740,   741,   477,   478,   479,   480,
       0,   742,   482,     0,     0,     0,   483,   484,   485,   486,
       0,     0,     0,   487,     0,     0,     0,   488,     0,   489,
     490,   491,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
     507,   508,   509,   510,   743,   744,   511,   512,     0,     0,
     513,   514,   745,   516,   517,   518,   746,   747,   519,   520,
     521,   522,   748,   523,   524,     0,     0,   525,   526,   527,
     528,     0,   749,   529,   530,     0,   750,   751,   752,   753,
       0,     0,     0,     0,  1877,   535,   536,     0,   754,   755,
     756,   538,   539,     0,   757,   540,   541,   758,   542,   543,
       0,   544,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   759,   550,     0,     0,   760,   761,   762,   551,
     763,   552,     0,     0,   553,   764,     0,   765,   554,     0,
     555,   556,   766,   767,     0,     0,     0,     0,     0,     0,
     559,   560,   561,     0,   562,   563,   564,   565,     0,     0,
     768,     0,     0,   567,   568,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,   769,   770,     0,   573,   574,
     575,   771,   576,   577,   578,     0,   579,   772,   773,   580,
     774,   581,     0,   775,   776,   777,   778,   779,   582,   583,
       0,   780,   584,   781,   585,   782,   586,   587,     0,     0,
       0,   588,   589,   590,   591,   592,   593,   594,   595,     0,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
       0,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   783,   631,   632,   633,
     634,     0,     0,     0,     0,     0,   784,   785,     0,     0,
       0,     0,   787,     0,   788,     0,     0,     0,   789,     0,
       0,     0,   790,   791,   199,   200,     0,   673,   202,   203,
     204,   205,  2122,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   674,     0,   209,   210,   211,   212,   675,   214,
       0,   215,     0,     0,  2123,   216,   677,   678,   679,   217,
     680,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,   681,   682,   225,   226,     0,   227,   228,
     683,   684,   230,     0,   231,   232,   233,   234,   685,   236,
       0,   686,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,   687,   688,   257,     0,     0,
       0,   689,   258,   690,     0,   259,   691,   692,     0,   260,
     261,   262,   693,   694,   695,     0,     0,     0,     0,   696,
     265,   697,     0,     0,  2124,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
     699,     0,   292,   293,   294,   295,   296,   700,   701,   297,
     298,     0,   299,   300,   301,   302,   303,   702,     0,   304,
     305,     0,     0,     0,   703,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   704,   312,   705,     0,   314,     0,
     315,     0,   706,     0,   316,   317,     0,   318,   707,     0,
     319,   320,     0,     0,     0,   708,   322,   323,   324,   709,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
     710,   329,   330,   331,   711,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
     712,   342,   343,     0,     0,     0,     0,     0,   713,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,   714,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   715,   372,
     373,   374,   375,   716,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   717,   383,     0,     0,   718,   385,
     719,   386,     0,   387,   720,   721,   722,   723,   724,   392,
     393,   394,   395,   396,     0,   725,   397,   398,     0,     0,
     399,   400,   401,   402,   403,   726,   727,   728,   404,   405,
       0,   729,   730,   406,     0,   407,   408,  2125,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,   731,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   732,   733,
     427,   734,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   735,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,   736,   737,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   738,     0,   739,   471,   472,   473,
     474,     0,   475,  2126,   741,   477,   478,   479,   480,     0,
     742,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,   743,   744,   511,   512,     0,     0,   513,
     514,   745,   516,   517,   518,   746,   747,   519,   520,   521,
     522,   748,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   749,   529,   530,     0,   750,   751,   752,   753,     0,
       0,     0,     0,     0,   535,   536,     0,   754,   755,   756,
     538,   539,     0,   757,   540,   541,   758,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   759,   550,     0,     0,   760,   761,   762,   551,   763,
     552,     0,     0,   553,   764,     0,   765,   554,     0,   555,
     556,   766,   767,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   768,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,   769,   770,     0,   573,   574,   575,
     771,   576,   577,   578,     0,   579,   772,   773,   580,   774,
     581,     0,   775,   776,   777,   778,   779,   582,   583,     0,
     780,   584,   781,   585,   782,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,  2127,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   783,   631,   632,   633,   634,
       0,     0,     0,     0,     0,   784,   785,     0,     0,     0,
       0,   787,     0,   788,     0,     0,     0,   789,     0,     0,
       0,   790,   791,   199,   200,     0,   673,   202,   203,   204,
     205,     0,     0,   206,     0,     0,     0,     0,   207,     0,
       0,   674,     0,   209,   210,   211,   212,   675,   214,     0,
     215,     0,     0,   676,   216,   677,   678,   679,   217,   680,
       0,   218,   219,   220,     0,   221,     0,   222,   223,     0,
       0,   224,   681,   682,   225,   226,     0,   227,   228,   683,
     684,   230,     0,   231,   232,   233,   234,   685,   236,     0,
     686,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,     0,   252,   253,
     254,   255,   256,     0,   687,   688,   257,     0,     0,     0,
     689,   258,   690,     0,   259,   691,   692,     0,   260,   261,
     262,   693,   694,   695,     0,     0,     0,     0,   696,   265,
     697,     0,     0,   698,   266,   267,     0,   268,     0,     0,
       0,     0,     0,   269,   270,   271,   272,   273,     0,     0,
       0,   274,     0,     0,   275,   276,   277,     0,     0,     0,
     278,     0,   279,   280,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,   287,   288,   289,   290,   291,   699,
       0,   292,   293,   294,   295,   296,   700,   701,   297,   298,
       0,   299,   300,   301,   302,   303,   702,     0,   304,   305,
       0,     0,     0,   703,   307,     0,   308,     0,     0,     0,
     309,     0,   310,   704,   312,   705,     0,   314,     0,   315,
       0,   706,     0,   316,   317,     0,   318,   707,     0,   319,
     320,     0,     0,     0,   708,   322,   323,   324,   709,     0,
     325,   326,   327,     0,     0,   328,     0,     0,     0,   710,
     329,   330,   331,   711,     0,     0,   332,     0,     0,     0,
     333,   334,     0,   335,   336,     0,     0,     0,   337,     0,
     338,     0,     0,   339,   340,     0,     0,   341,     0,   712,
     342,   343,     0,     0,     0,     0,     0,   713,   345,     0,
     346,     0,   347,     0,   348,   349,     0,     0,   714,     0,
       0,     0,     0,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   715,   372,   373,
     374,   375,   716,   376,   377,     0,     0,     0,     0,   378,
     379,   380,   381,   717,   383,     0,     0,   718,   385,   719,
     386,     0,   387,   720,   721,   722,   723,   724,   392,   393,
     394,   395,   396,     0,   725,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   726,   727,   728,   404,   405,     0,
     729,   730,   406,     0,   407,   408,     0,   409,   410,   411,
       0,     0,   412,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   413,   414,   415,   731,   416,     0,   417,     0,
     418,   419,   420,   421,   422,   423,   424,   732,   733,   427,
     734,   428,     0,   429,   430,   431,     0,   432,     0,   433,
     434,   435,   436,   437,     0,   735,   439,   440,     0,     0,
     441,     0,     0,     0,   442,   443,     0,   444,   445,     0,
       0,   446,   447,   448,   449,   450,     0,   451,   452,     0,
     453,   454,   455,   736,   737,   456,   457,   458,   459,   460,
     461,   462,   463,     0,   464,     0,   465,   466,     0,   467,
     468,   469,     0,   738,     0,   739,   471,   472,   473,   474,
       0,   475,   740,   741,   477,   478,   479,   480,     0,   742,
     482,     0,     0,     0,   483,   484,   485,   486,     0,     0,
       0,   487,     0,     0,     0,   488,     0,   489,   490,   491,
     492,     0,   493,   494,   495,   496,   497,     0,     0,     0,
       0,     0,   498,   499,   500,     0,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,   507,   508,
     509,   510,   743,   744,   511,   512,     0,     0,   513,   514,
     745,   516,   517,   518,   746,   747,   519,   520,   521,   522,
     748,   523,   524,     0,     0,   525,   526,   527,   528,     0,
     749,   529,   530,     0,   750,   751,   752,   753,     0,     0,
       0,     0,     0,   535,   536,     0,   754,   755,   756,   538,
     539,     0,   757,   540,   541,   758,   542,   543,     0,   544,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     759,   550,     0,     0,   760,   761,   762,   551,   763,   552,
       0,     0,   553,   764,     0,   765,   554,     0,   555,   556,
     766,   767,     0,     0,     0,     0,     0,     0,   559,   560,
     561,     0,   562,   563,   564,   565,     0,     0,   768,     0,
       0,   567,   568,   569,   570,   571,     0,   572,     0,     0,
       0,     0,     0,   769,   770,     0,   573,   574,   575,   771,
     576,   577,   578,     0,   579,   772,   773,   580,   774,   581,
       0,   775,   776,   777,   778,   779,   582,   583,     0,   780,
     584,   781,   585,   782,   586,   587,     0,     0,     0,   588,
     589,   590,   591,   592,   593,   594,   595,     0,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,     0,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,     0,   783,   631,   632,   633,   634,     0,
       0,     0,     0,     0,   784,   785,   786,     0,     0,     0,
     787,     0,   788,     0,     0,     0,   789,     0,     0,     0,
     790,   791,   199,   200,     0,   673,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     674,     0,   209,   210,   211,   212,   675,   214,     0,   215,
       0,     0,   676,   216,   677,   678,   679,   217,   680,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,   681,   682,   225,   226,     0,   227,   228,   683,   684,
     230,     0,   231,   232,   233,   234,   685,   236,     0,   686,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,   687,   688,   257,     0,     0,     0,   689,
     258,   690,     0,   259,   691,   692,     0,   260,   261,   262,
     693,   694,   695,     0,     0,     0,     0,   696,   265,   697,
       0,     0,   698,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,   699,     0,
     292,   293,   294,   295,   296,   700,   701,   297,   298,     0,
     299,   300,   301,   302,   303,   702,     0,   304,   305,     0,
       0,     0,   703,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   704,   312,   705,     0,   314,     0,   315,     0,
     706,     0,   316,   317,     0,   318,   707,     0,   319,   320,
       0,     0,     0,   708,   322,   323,   324,   709,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,   710,   329,
     330,   331,   711,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,   712,   342,
     343,     0,     0,     0,     0,     0,   713,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,   714,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   715,   372,   373,   374,
     375,   716,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   717,   383,     0,     0,   718,   385,   719,   386,
       0,   387,   720,   721,   722,   723,   724,   392,   393,   394,
     395,   396,     0,   725,   397,   398,     0,     0,   399,   400,
     401,   402,   403,   726,   727,   728,   404,   405,     0,   729,
     730,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,   731,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   732,   733,   427,   734,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   735,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,   736,   737,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   738,     0,   739,   471,   472,   473,   474,     0,
     475,   740,   741,   477,   478,   479,   480,     0,   742,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,   743,   744,   511,   512,     0,     0,   513,   514,   745,
     516,   517,   518,   746,   747,   519,   520,   521,   522,   748,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   749,
     529,   530,     0,   750,   751,   752,   753,     0,     0,     0,
       0,     0,   535,   536,     0,   754,   755,   756,   538,   539,
       0,   757,   540,   541,   758,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   759,
     550,     0,     0,   760,   761,   762,   551,   763,   552,     0,
       0,   553,   764,     0,   765,   554,     0,   555,   556,   766,
     767,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   768,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,   769,   770,     0,   573,   574,   575,   771,   576,
     577,   578,     0,   579,   772,   773,   580,   774,   581,     0,
     775,   776,   777,   778,   779,   582,   583,     0,   780,   584,
     781,   585,   782,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   783,   631,   632,   633,   634,     0,     0,
       0,     0,     0,   784,   785,  2528,     0,     0,     0,   787,
       0,   788,     0,     0,     0,   789,     0,     0,     0,   790,
     791,   199,   200,     0,   673,   202,   203,   204,   205,     0,
       0,   206,     0,     0,     0,     0,   207,     0,     0,   674,
       0,   209,   210,   211,   212,   675,   214,     0,   215,     0,
       0,   676,   216,   677,   678,   679,   217,   680,     0,   218,
     219,   220,     0,   221,     0,   222,   223,     0,     0,   224,
     681,   682,   225,   226,     0,   227,   228,   683,   684,   230,
       0,   231,   232,   233,   234,   685,   236,     0,   686,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,     0,   252,   253,   254,   255,
     256,     0,   687,   688,   257,     0,     0,     0,   689,   258,
     690,     0,   259,   691,   692,     0,   260,   261,   262,   693,
     694,   695,     0,     0,     0,     0,   696,   265,   697,     0,
       0,   698,   266,   267,     0,   268,     0,     0,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,   277,     0,     0,     0,   278,     0,
     279,   280,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   286,   287,   288,   289,   290,   291,   699,     0,   292,
     293,   294,   295,   296,   700,   701,   297,   298,     0,   299,
     300,   301,   302,   303,   702,     0,   304,   305,     0,     0,
       0,   703,   307,  2584,   308,     0,     0,     0,   309,     0,
     310,   704,   312,   705,     0,   314,     0,   315,     0,   706,
       0,   316,   317,     0,   318,   707,     0,   319,   320,     0,
       0,     0,   708,   322,   323,   324,   709,     0,   325,   326,
     327,     0,     0,   328,     0,     0,     0,   710,   329,   330,
     331,   711,     0,     0,   332,     0,     0,     0,   333,   334,
       0,   335,   336,     0,     0,     0,   337,     0,   338,     0,
       0,   339,   340,     0,     0,   341,     0,   712,   342,   343,
       0,     0,     0,     0,     0,   713,   345,     0,   346,     0,
     347,     0,   348,   349,     0,     0,   714,     0,     0,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   715,   372,   373,   374,   375,
     716,   376,   377,     0,     0,     0,     0,   378,   379,   380,
     381,   717,   383,     0,     0,   718,   385,   719,   386,     0,
     387,   720,   721,   722,   723,   724,   392,   393,   394,   395,
     396,     0,   725,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   726,   727,   728,   404,   405,     0,   729,   730,
     406,     0,   407,   408,     0,   409,   410,   411,     0,     0,
     412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     413,   414,   415,   731,   416,     0,   417,     0,   418,   419,
     420,   421,   422,   423,   424,   732,   733,   427,   734,   428,
       0,   429,   430,   431,     0,   432,     0,   433,   434,   435,
     436,   437,     0,   735,   439,   440,     0,     0,   441,     0,
       0,     0,   442,   443,     0,   444,   445,     0,     0,   446,
     447,   448,   449,   450,     0,   451,   452,     0,   453,   454,
     455,   736,   737,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   464,     0,   465,   466,     0,   467,   468,   469,
       0,   738,     0,   739,   471,   472,   473,   474,     0,   475,
     740,   741,   477,   478,   479,   480,     0,   742,   482,     0,
       0,     0,   483,   484,   485,   486,     0,     0,     0,   487,
       0,     0,     0,   488,     0,   489,   490,   491,   492,     0,
     493,   494,   495,   496,   497,     0,     0,     0,     0,     0,
     498,   499,   500,     0,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,   507,   508,   509,   510,
     743,   744,   511,   512,     0,     0,   513,   514,   745,   516,
     517,   518,   746,   747,   519,   520,   521,   522,   748,   523,
     524,     0,     0,   525,   526,   527,   528,     0,   749,   529,
     530,     0,   750,   751,   752,   753,     0,     0,     0,     0,
       0,   535,   536,     0,   754,   755,   756,   538,   539,     0,
     757,   540,   541,   758,   542,   543,     0,   544,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   759,   550,
       0,     0,   760,   761,   762,   551,   763,   552,     0,     0,
     553,   764,     0,   765,   554,     0,   555,   556,   766,   767,
       0,     0,     0,     0,     0,     0,   559,   560,   561,     0,
     562,   563,   564,   565,     0,     0,   768,     0,     0,   567,
     568,   569,   570,   571,     0,   572,     0,     0,     0,     0,
       0,   769,   770,     0,   573,   574,   575,   771,   576,   577,
     578,     0,   579,   772,   773,   580,   774,   581,     0,   775,
     776,   777,   778,   779,   582,   583,     0,   780,   584,   781,
     585,   782,   586,   587,     0,     0,     0,   588,   589,   590,
     591,   592,   593,   594,   595,     0,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,     0,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,     0,   783,   631,   632,   633,   634,     0,     0,     0,
       0,     0,   784,   785,     0,     0,     0,     0,   787,     0,
     788,     0,     0,     0,   789,     0,     0,     0,   790,   791,
     199,   200,     0,   673,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   674,     0,
     209,   210,   211,   212,   675,   214,     0,   215,     0,     0,
     676,   216,   677,   678,   679,   217,   680,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   681,
     682,   225,   226,     0,   227,   228,   683,   684,   230,     0,
     231,   232,   233,   234,   685,   236,     0,   686,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   687,   688,   257,     0,     0,     0,   689,   258,   690,
       0,   259,   691,   692,     0,   260,   261,   262,   693,   694,
     695,     0,     0,     0,     0,   696,   265,   697,     0,     0,
     698,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   699,     0,   292,   293,
     294,   295,   296,   700,   701,   297,   298,     0,   299,   300,
     301,   302,   303,   702,     0,   304,   305,     0,     0,     0,
     703,   307,  2586,   308,     0,     0,     0,   309,     0,   310,
     704,   312,   705,     0,   314,     0,   315,     0,   706,     0,
     316,   317,     0,   318,   707,     0,   319,   320,     0,     0,
       0,   708,   322,   323,   324,   709,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   710,   329,   330,   331,
     711,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   712,   342,   343,     0,
       0,     0,     0,     0,   713,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   714,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   715,   372,   373,   374,   375,   716,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     717,   383,     0,     0,   718,   385,   719,   386,     0,   387,
     720,   721,   722,   723,   724,   392,   393,   394,   395,   396,
       0,   725,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   726,   727,   728,   404,   405,     0,   729,   730,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   731,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   732,   733,   427,   734,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   735,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     736,   737,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     738,     0,   739,   471,   472,   473,   474,     0,   475,   740,
     741,   477,   478,   479,   480,     0,   742,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   743,
     744,   511,   512,     0,     0,   513,   514,   745,   516,   517,
     518,   746,   747,   519,   520,   521,   522,   748,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   749,   529,   530,
       0,   750,   751,   752,   753,     0,     0,     0,     0,     0,
     535,   536,     0,   754,   755,   756,   538,   539,     0,   757,
     540,   541,   758,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   759,   550,     0,
       0,   760,   761,   762,   551,   763,   552,     0,     0,   553,
     764,     0,   765,   554,     0,   555,   556,   766,   767,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   768,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     769,   770,     0,   573,   574,   575,   771,   576,   577,   578,
       0,   579,   772,   773,   580,   774,   581,     0,   775,   776,
     777,   778,   779,   582,   583,     0,   780,   584,   781,   585,
     782,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   783,   631,   632,   633,   634,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,   787,     0,   788,
       0,     0,     0,   789,     0,     0,     0,   790,   791,   199,
     200,     0,   673,   202,   203,   204,   205,     0,     0,   206,
       0,     0,     0,     0,   207,     0,     0,   674,     0,   209,
     210,   211,   212,   675,   214,     0,   215,     0,     0,   676,
     216,   677,   678,   679,   217,   680,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,   681,   682,
     225,   226,     0,   227,   228,   683,   684,   230,     0,   231,
     232,   233,   234,   685,   236,     0,   686,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,     0,   252,   253,   254,   255,   256,     0,
     687,   688,   257,     0,     0,     0,   689,   258,   690,     0,
     259,   691,   692,     0,   260,   261,   262,   693,   694,   695,
       0,     0,     0,     0,   696,   265,   697,     0,     0,   698,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,   699,     0,   292,   293,   294,
     295,   296,   700,   701,   297,   298,     0,   299,   300,   301,
     302,   303,   702,     0,   304,   305,     0,     0,     0,   703,
     307,  2588,   308,     0,     0,     0,   309,     0,   310,   704,
     312,   705,     0,   314,     0,   315,     0,   706,     0,   316,
     317,     0,   318,   707,     0,   319,   320,     0,     0,     0,
     708,   322,   323,   324,   709,     0,   325,   326,   327,     0,
       0,   328,     0,     0,     0,   710,   329,   330,   331,   711,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,     0,     0,   339,
     340,     0,     0,   341,     0,   712,   342,   343,     0,     0,
       0,     0,     0,   713,   345,     0,   346,     0,   347,     0,
     348,   349,     0,     0,   714,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   715,   372,   373,   374,   375,   716,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   717,
     383,     0,     0,   718,   385,   719,   386,     0,   387,   720,
     721,   722,   723,   724,   392,   393,   394,   395,   396,     0,
     725,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     726,   727,   728,   404,   405,     0,   729,   730,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,   731,   416,     0,   417,     0,   418,   419,   420,   421,
     422,   423,   424,   732,   733,   427,   734,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   735,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,   736,
     737,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   738,
       0,   739,   471,   472,   473,   474,     0,   475,   740,   741,
     477,   478,   479,   480,     0,   742,   482,     0,     0,     0,
     483,   484,   485,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,   743,   744,
     511,   512,     0,     0,   513,   514,   745,   516,   517,   518,
     746,   747,   519,   520,   521,   522,   748,   523,   524,     0,
       0,   525,   526,   527,   528,     0,   749,   529,   530,     0,
     750,   751,   752,   753,     0,     0,     0,     0,     0,   535,
     536,     0,   754,   755,   756,   538,   539,     0,   757,   540,
     541,   758,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   759,   550,     0,     0,
     760,   761,   762,   551,   763,   552,     0,     0,   553,   764,
       0,   765,   554,     0,   555,   556,   766,   767,     0,     0,
       0,     0,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   768,     0,     0,   567,   568,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,   769,
     770,     0,   573,   574,   575,   771,   576,   577,   578,     0,
     579,   772,   773,   580,   774,   581,     0,   775,   776,   777,
     778,   779,   582,   583,     0,   780,   584,   781,   585,   782,
     586,   587,     0,     0,     0,   588,   589,   590,   591,   592,
     593,   594,   595,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,     0,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     783,   631,   632,   633,   634,     0,     0,     0,     0,     0,
     784,   785,     0,     0,     0,     0,   787,     0,   788,     0,
       0,     0,   789,     0,     0,     0,   790,   791,   199,   200,
       0,   673,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   674,     0,   209,   210,
     211,   212,   675,   214,     0,   215,     0,     0,   676,   216,
     677,   678,   679,   217,   680,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,   681,   682,   225,
     226,     0,   227,   228,   683,   684,   230,     0,   231,   232,
     233,   234,   685,   236,     0,   686,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,   687,
     688,   257,     0,     0,     0,   689,   258,   690,     0,   259,
     691,   692,     0,   260,   261,   262,   693,   694,   695,     0,
       0,     0,     0,   696,   265,   697,     0,     0,   698,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,   699,     0,   292,   293,   294,   295,
     296,   700,   701,   297,   298,     0,   299,   300,   301,   302,
     303,   702,     0,   304,   305,     0,     0,     0,   703,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   704,   312,
     705,     0,   314,     0,   315,     0,   706,     0,   316,   317,
       0,   318,   707,     0,   319,   320,     0,     0,     0,   708,
     322,   323,   324,   709,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,   710,   329,   330,   331,   711,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,   712,   342,   343,     0,     0,     0,
       0,     0,   713,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,   714,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   715,   372,   373,   374,   375,   716,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   717,   383,
       0,     0,   718,   385,   719,   386,     0,   387,   720,   721,
     722,   723,   724,   392,   393,   394,   395,   396,     0,   725,
     397,   398,     0,     0,   399,   400,   401,   402,   403,   726,
     727,   728,   404,   405,     0,   729,   730,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
     731,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   732,   733,   427,   734,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     735,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,   736,   737,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   738,     0,
     739,   471,   472,   473,   474,     0,   475,   740,   741,   477,
     478,   479,   480,     0,   742,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,   743,   744,   511,
     512,     0,     0,   513,   514,   745,   516,   517,   518,   746,
     747,   519,   520,   521,   522,   748,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   749,   529,   530,     0,   750,
     751,   752,   753,     0,     0,     0,     0,     0,   535,   536,
       0,   754,   755,   756,   538,   539,     0,   757,   540,   541,
     758,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   759,   550,     0,     0,   760,
     761,   762,   551,   763,   552,     0,     0,   553,   764,     0,
     765,   554,     0,   555,   556,   766,   767,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   768,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,   769,   770,
       0,   573,   574,   575,   771,   576,   577,   578,     0,   579,
     772,   773,   580,   774,   581,     0,   775,   776,   777,   778,
     779,   582,   583,     0,   780,   584,   781,   585,   782,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   783,
     631,   632,   633,   634,     0,     0,     0,     0,     0,   784,
     785,     0,     0,     0,     0,   787,     0,   788,     0,     0,
       0,   789,     0,     0,     0,   790,   791,   199,   200,     0,
     673,   202,   203,   204,   205,     0,     0,   206,     0,     0,
       0,     0,   207,     0,     0,   674,     0,   209,   210,   211,
     212,   675,   214,     0,   215,     0,     0,   676,   216,   677,
     678,   679,   217,   680,     0,   218,   219,   220,     0,   221,
       0,   222,   223,     0,     0,   224,   681,   682,   225,   226,
       0,   227,   228,   683,   684,   230,     0,   231,   232,   233,
     234,   685,   236,     0,   686,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,     0,   252,   253,   254,   255,   256,     0,   687,   688,
     257,     0,     0,     0,   689,   258,   690,     0,   259,   691,
     692,     0,   260,   261,   262,   693,   694,   695,     0,     0,
       0,     0,   696,   265,   697,     0,     0,   698,   266,   267,
       0,   268,     0,     0,     0,     0,     0,   269,   270,   271,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
     277,     0,     0,     0,   278,     0,   279,   280,     0,   281,
     282,   283,     0,     0,   284,   285,     0,   286,   287,   288,
     289,   290,   291,   699,     0,   292,   293,   294,   295,   296,
     700,   701,   297,   298,     0,   299,   300,   301,   302,   303,
     702,     0,   304,   305,     0,     0,     0,   703,   307,     0,
     308,     0,     0,     0,   309,     0,   310,   704,   312,   705,
       0,   314,     0,   315,     0,   706,     0,   316,   317,     0,
     318,   707,     0,   319,   320,     0,     0,     0,   708,   322,
     323,   324,   709,     0,   325,   326,   327,     0,     0,   328,
       0,     0,     0,   710,   329,   330,   331,   711,     0,     0,
     332,     0,     0,     0,   333,   334,     0,   335,   336,     0,
       0,     0,   337,     0,   338,     0,     0,   339,   340,     0,
       0,   341,     0,   712,   342,   343,     0,     0,     0,     0,
       0,   713,   345,     0,   346,     0,   347,     0,   348,   349,
       0,     0,   714,     0,     0,     0,     0,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   715,   372,   373,   374,   375,   716,   376,   377,     0,
       0,     0,     0,   378,   379,   380,   381,   717,   383,     0,
       0,   718,   385,   719,   386,     0,   387,   720,   721,   722,
     723,   724,   392,   393,   394,   395,   396,     0,   725,   397,
     398,     0,     0,   399,   400,   401,   402,   403,   726,   727,
     728,   404,   405,     0,   729,   730,   406,     0,   407,   408,
       0,   409,   410,   411,     0,     0,   412,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   413,   414,   415,   731,
     416,     0,   417,     0,   418,   419,   420,   421,   422,   423,
     424,   732,   733,   427,   734,   428,     0,   429,   430,   431,
       0,   432,     0,   433,   434,   435,   436,   437,     0,   735,
     439,   440,     0,     0,   441,     0,     0,     0,   442,   443,
       0,   444,   445,     0,     0,   446,   447,   448,   449,   450,
       0,   451,   452,     0,   453,   454,   455,   736,   737,   456,
     457,   458,   459,   460,   461,   462,   463,     0,   464,     0,
     465,   466,     0,   467,   468,   469,     0,   738,     0,   739,
     471,   472,   473,   474,     0,   475,   740,   741,   477,   478,
     479,   480,     0,   742,   482,     0,     0,     0,   483,   484,
     485,   486,     0,     0,     0,   487,     0,     0,     0,   488,
       0,   489,   490,   491,   492,     0,   493,   494,   495,   496,
     497,     0,     0,     0,     0,     0,   498,   499,   500,     0,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,   507,   508,   509,   510,   743,   744,   511,   512,
       0,     0,   513,   514,   745,   516,   517,   518,   746,   747,
     519,   520,   521,   522,   748,   523,   524,     0,     0,   525,
     526,   527,   528,     0,   749,   529,   530,     0,   750,   751,
     752,   753,     0,     0,     0,     0,     0,   535,   536,     0,
     754,   755,   756,   538,   539,     0,   757,   540,   541,   758,
     542,   543,     0,   544,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   759,   550,     0,     0,   760,   761,
     762,   551,   763,   552,     0,     0,   553,   764,     0,   765,
     554,     0,   555,   556,   766,   767,     0,     0,     0,     0,
       0,     0,   559,   560,   561,     0,   562,   563,   564,   565,
       0,     0,   768,     0,     0,   567,   568,   569,   570,   571,
       0,   572,     0,     0,     0,     0,     0,   769,   770,     0,
     573,   574,   575,   771,   576,   577,   578,     0,   579,   772,
     773,   580,   774,   581,     0,   775,   776,   777,   778,   779,
     582,   583,     0,   780,   584,   781,   585,   782,   586,   587,
       0,     0,     0,   588,   589,   590,   591,   592,   593,   594,
     595,     0,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,     0,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,     0,   783,   631,
     632,   633,   634,     0,     0,     0,     0,     0,   784,   785,
       0,     0,     0,     0,   787,     0,  1151,     0,     0,     0,
     789,     0,     0,     0,   790,   791,   199,   200,     0,   673,
     202,   203,   204,   205,  1924,     0,   206,     0,     0,     0,
       0,  1925,     0,     0,   674,     0,   209,   210,   211,   212,
     675,   214,     0,   215,     0,     0,   676,   216,   677,   678,
     679,   217,   680,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,   681,   682,   225,   226,     0,
     227,   228,   683,   684,   230,     0,   231,   232,   233,   234,
     685,   236,     0,   686,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,   687,   688,   257,
       0,     0,     0,   689,   258,   690,     0,   259,   691,   692,
       0,   260,   261,   262,   693,   694,   695,     0,     0,     0,
       0,   696,   265,   697,     0,     0,   698,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,   699,     0,   292,   293,   294,   295,   296,   700,
     701,   297,   298,     0,   299,   300,   301,   302,   303,   702,
       0,   304,   305,     0,     0,     0,   703,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   704,   312,   705,     0,
     314,     0,   315,     0,   706,     0,   316,   317,     0,   318,
     707,     0,   319,   320,     0,     0,     0,   708,   322,   323,
     324,   709,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,   710,   329,   330,   331,   711,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,   712,   342,   343,     0,     0,     0,     0,     0,
     713,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,   714,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     715,   372,   373,   374,   375,   716,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   717,   383,     0,     0,
     718,   385,   719,   386,     0,   387,   720,   721,   722,   723,
     724,   392,   393,   394,   395,   396,     0,   725,   397,   398,
       0,     0,   399,   400,   401,   402,   403,   726,     0,   728,
     404,   405,     0,   729,   730,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,   731,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     732,   733,   427,   734,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   735,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,   736,   737,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   738,     0,   739,   471,
     472,   473,   474,     0,   475,   740,   741,   477,   478,   479,
     480,     0,   742,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,   743,   744,   511,   512,     0,
       0,   513,   514,   745,   516,   517,   518,   746,   747,   519,
     520,   521,   522,   748,   523,   524,     0,     0,   525,   526,
     527,   528,     0,   749,   529,   530,     0,   750,   751,   752,
     753,     0,     0,     0,     0,     0,   535,   536,     0,   754,
     755,   756,   538,   539,     0,   757,   540,   541,   758,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   759,   550,     0,     0,   760,   761,   762,
     551,   763,   552,     0,     0,   553,   764,     0,   765,   554,
       0,   555,   556,   766,   767,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   768,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,   769,   770,     0,   573,
     574,   575,   771,   576,   577,   578,     0,   579,   772,   773,
     580,   774,   581,     0,   775,   776,   777,   778,   779,   582,
     583,     0,   780,   584,   781,   585,   782,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   783,   631,   632,
     633,   634,     0,     0,     0,     0,     0,   784,   785,     0,
       0,     0,     0,   787,     0,   788,     0,     0,     0,   789,
       0,     0,     0,   790,   791,   199,   200,     0,   673,   202,
     203,   204,   205,     0,     0,   206,     0,     0,     0,     0,
     207,     0,     0,   674,     0,   209,   210,   211,   212,   675,
     214,     0,   215,     0,     0,   676,   216,   677,   678,   679,
     217,   680,     0,   218,   219,   220,     0,   221,     0,   222,
     223,     0,     0,   224,   681,   682,   225,   226,     0,   227,
     228,   683,   684,   230,     0,   231,   232,   233,   234,   685,
     236,     0,   686,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,   255,   256,     0,   687,   688,   257,     0,
       0,     0,   689,   258,   690,     0,   259,   691,   692,     0,
     260,   261,   262,   693,   694,   695,     0,     0,     0,     0,
     696,   265,   697,     0,     0,  2197,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,   279,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
     291,   699,     0,   292,   293,   294,   295,   296,   700,   701,
     297,   298,     0,   299,   300,   301,   302,   303,   702,     0,
     304,   305,     0,     0,     0,   703,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   704,   312,   705,     0,   314,
       0,   315,     0,   706,     0,   316,   317,     0,   318,   707,
       0,   319,   320,     0,     0,     0,   708,   322,   323,   324,
     709,     0,   325,   326,   327,     0,     0,   328,     0,     0,
       0,   710,   329,   330,   331,   711,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,     0,     0,     0,
     337,     0,   338,     0,     0,   339,   340,     0,     0,   341,
       0,   712,   342,   343,     0,     0,     0,     0,     0,   713,
     345,     0,   346,     0,   347,     0,   348,   349,     0,     0,
     714,     0,     0,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   715,
     372,   373,   374,   375,   716,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   717,   383,     0,     0,   718,
     385,   719,   386,     0,   387,   720,   721,   722,   723,   724,
     392,   393,   394,   395,   396,     0,   725,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   726,   727,   728,   404,
     405,     0,   729,   730,   406,     0,   407,   408,     0,   409,
     410,   411,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,   731,   416,     0,
     417,     0,   418,   419,   420,   421,   422,   423,   424,   732,
     733,   427,   734,   428,     0,   429,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   735,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,   454,   455,   736,   737,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   464,     0,   465,   466,
       0,   467,   468,   469,     0,   738,     0,   739,   471,   472,
     473,   474,     0,   475,   740,   741,   477,   478,   479,   480,
       0,   742,   482,     0,     0,     0,   483,   484,   485,   486,
       0,     0,     0,   487,     0,     0,     0,   488,     0,   489,
     490,   491,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
     507,   508,   509,   510,   743,   744,   511,   512,     0,     0,
     513,   514,   745,   516,   517,   518,   746,   747,   519,   520,
     521,   522,   748,   523,   524,     0,     0,   525,   526,   527,
     528,     0,   749,   529,   530,     0,   750,   751,   752,   753,
       0,     0,     0,     0,     0,   535,   536,     0,   754,   755,
     756,   538,   539,     0,   757,   540,   541,   758,   542,   543,
       0,   544,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   759,   550,     0,     0,   760,   761,   762,   551,
     763,   552,     0,     0,   553,   764,     0,   765,   554,     0,
     555,   556,   766,   767,     0,     0,     0,     0,     0,     0,
     559,   560,   561,     0,   562,   563,   564,   565,     0,     0,
     768,     0,     0,   567,   568,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,   769,   770,     0,   573,   574,
     575,   771,   576,   577,   578,     0,   579,   772,   773,   580,
     774,   581,     0,   775,   776,   777,   778,   779,   582,   583,
       0,   780,   584,   781,   585,   782,   586,   587,     0,     0,
       0,   588,   589,   590,   591,   592,   593,   594,   595,     0,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
       0,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   783,   631,   632,   633,
     634,     0,     0,     0,     0,     0,   784,   785,     0,     0,
       0,     0,   787,     0,   788,     0,     0,     0,   789,     0,
       0,     0,   790,   791,   199,   200,     0,   673,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   674,     0,   209,   210,   211,   212,   675,   214,
       0,   215,     0,     0,   676,   216,   677,   678,   679,   217,
     680,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,   681,   682,   225,   226,     0,   227,   228,
     683,   684,   230,     0,   231,   232,   233,   234,   685,   236,
       0,   686,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,   687,   688,   257,     0,     0,
       0,   689,   258,   690,     0,   259,   691,   692,     0,   260,
     261,   262,   693,   694,   695,     0,     0,     0,     0,   696,
     265,   697,     0,     0,   698,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
     699,     0,   292,   293,   294,   295,   296,   700,   701,   297,
     298,     0,   299,   300,   301,   302,   303,   702,     0,   304,
     305,     0,     0,     0,   703,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   704,   312,   705,     0,   314,     0,
     315,     0,   706,     0,   316,   317,     0,   318,   707,     0,
     319,   320,     0,     0,     0,   708,   322,   323,   324,   709,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
     710,   329,   330,   331,  3228,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
     712,   342,   343,     0,     0,     0,     0,     0,   713,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,   714,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   715,   372,
     373,   374,   375,   716,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   717,   383,     0,     0,   718,   385,
     719,   386,     0,   387,   720,   721,   722,   723,   724,   392,
     393,   394,   395,   396,     0,   725,   397,   398,     0,     0,
     399,   400,   401,   402,   403,   726,   727,   728,   404,   405,
       0,   729,   730,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,   731,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   732,   733,
     427,   734,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   735,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,   736,   737,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   738,     0,   739,   471,   472,   473,
     474,     0,   475,   740,   741,   477,   478,   479,   480,     0,
     742,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,   743,   744,   511,   512,     0,     0,   513,
     514,   745,   516,   517,   518,   746,   747,   519,   520,   521,
     522,   748,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   749,   529,   530,     0,   750,   751,   752,   753,     0,
       0,     0,     0,     0,   535,   536,     0,   754,   755,   756,
     538,   539,     0,   757,   540,   541,   758,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   759,   550,     0,     0,   760,   761,   762,   551,   763,
     552,     0,     0,   553,   764,     0,   765,   554,     0,   555,
     556,   766,   767,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   768,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,   769,   770,     0,   573,   574,   575,
     771,   576,   577,   578,     0,   579,   772,   773,   580,   774,
     581,     0,   775,   776,   777,   778,   779,   582,   583,     0,
     780,   584,   781,   585,   782,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   783,   631,   632,   633,   634,
       0,     0,     0,     0,     0,   784,   785,     0,     0,     0,
       0,   787,     0,   788,     0,     0,     0,   789,     0,     0,
       0,   790,   791,   199,   200,     0,   673,   202,   203,   204,
     205,     0,     0,   206,     0,     0,     0,     0,   207,     0,
       0,   674,     0,   209,   210,   211,   212,   675,   214,     0,
     215,     0,     0,   676,   216,   677,   678,   679,   217,   680,
       0,   218,   219,   220,     0,   221,     0,   222,   223,     0,
       0,   224,   681,   682,   225,   226,     0,   227,   228,   683,
     684,   230,     0,   231,   232,   233,   234,   685,   236,     0,
     686,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,     0,   252,   253,
     254,   255,   256,     0,   687,   688,   257,     0,     0,     0,
     689,   258,   690,     0,   259,   691,   692,     0,   260,   261,
     262,   693,   694,   695,     0,     0,     0,     0,   696,   265,
     697,     0,     0,   698,   266,   267,     0,   268,     0,     0,
       0,     0,     0,   269,   270,   271,   272,   273,     0,     0,
       0,   274,     0,     0,   275,   276,   277,     0,     0,     0,
     278,     0,   279,   280,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,   287,   288,   289,   290,   291,   699,
       0,   292,   293,   294,   295,   296,   700,   701,   297,   298,
       0,   299,   300,   301,   302,   303,   702,     0,   304,   305,
       0,     0,     0,   703,   307,     0,   308,     0,     0,     0,
     309,     0,   310,   704,   312,   705,     0,   314,     0,   315,
       0,   706,     0,   316,   317,     0,   318,   707,     0,   319,
     320,     0,     0,     0,   708,   322,   323,   324,   709,     0,
     325,   326,   327,     0,     0,   328,     0,     0,     0,   710,
     329,   330,   331,  3289,     0,     0,   332,     0,     0,     0,
     333,   334,     0,   335,   336,     0,     0,     0,   337,     0,
     338,     0,     0,   339,   340,     0,     0,   341,     0,   712,
     342,   343,     0,     0,     0,     0,     0,   713,   345,     0,
     346,     0,   347,     0,   348,   349,     0,     0,   714,     0,
       0,     0,     0,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   715,   372,   373,
     374,   375,   716,   376,   377,     0,     0,     0,     0,   378,
     379,   380,   381,   717,   383,     0,     0,   718,   385,   719,
     386,     0,   387,   720,   721,   722,   723,   724,   392,   393,
     394,   395,   396,     0,   725,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   726,   727,   728,   404,   405,     0,
     729,   730,   406,     0,   407,   408,     0,   409,   410,   411,
       0,     0,   412,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   413,   414,   415,   731,   416,     0,   417,     0,
     418,   419,   420,   421,   422,   423,   424,   732,   733,   427,
     734,   428,     0,   429,   430,   431,     0,   432,     0,   433,
     434,   435,   436,   437,     0,   735,   439,   440,     0,     0,
     441,     0,     0,     0,   442,   443,     0,   444,   445,     0,
       0,   446,   447,   448,   449,   450,     0,   451,   452,     0,
     453,   454,   455,   736,   737,   456,   457,   458,   459,   460,
     461,   462,   463,     0,   464,     0,   465,   466,     0,   467,
     468,   469,     0,   738,     0,   739,   471,   472,   473,   474,
       0,   475,   740,   741,   477,   478,   479,   480,     0,   742,
     482,     0,     0,     0,   483,   484,   485,   486,     0,     0,
       0,   487,     0,     0,     0,   488,     0,   489,   490,   491,
     492,     0,   493,   494,   495,   496,   497,     0,     0,     0,
       0,     0,   498,   499,   500,     0,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,   507,   508,
     509,   510,   743,   744,   511,   512,     0,     0,   513,   514,
     745,   516,   517,   518,   746,   747,   519,   520,   521,   522,
     748,   523,   524,     0,     0,   525,   526,   527,   528,     0,
     749,   529,   530,     0,   750,   751,   752,   753,     0,     0,
       0,     0,     0,   535,   536,     0,   754,   755,   756,   538,
     539,     0,   757,   540,   541,   758,   542,   543,     0,   544,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     759,   550,     0,     0,   760,   761,   762,   551,   763,   552,
       0,     0,   553,   764,     0,   765,   554,     0,   555,   556,
     766,   767,     0,     0,     0,     0,     0,     0,   559,   560,
     561,     0,   562,   563,   564,   565,     0,     0,   768,     0,
       0,   567,   568,   569,   570,   571,     0,   572,     0,     0,
       0,     0,     0,   769,   770,     0,   573,   574,   575,   771,
     576,   577,   578,     0,   579,   772,   773,   580,   774,   581,
       0,   775,   776,   777,   778,   779,   582,   583,     0,   780,
     584,   781,   585,   782,   586,   587,     0,     0,     0,   588,
     589,   590,   591,   592,   593,   594,   595,     0,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,     0,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,     0,   783,   631,   632,   633,   634,     0,
       0,     0,     0,     0,   784,   785,     0,     0,     0,     0,
     787,     0,   788,     0,     0,     0,   789,     0,     0,     0,
     790,   791,   199,   200,     0,   673,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     674,     0,   209,   210,   211,   212,   675,   214,     0,   215,
       0,     0,   676,   216,   677,   678,   679,   217,   680,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,   681,   682,   225,   226,     0,   227,   228,   683,   684,
     230,     0,   231,   232,   233,   234,   685,   236,     0,   686,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,   687,   688,   257,     0,     0,     0,   689,
     258,   690,     0,   259,   691,   692,     0,   260,   261,   262,
     693,   694,   695,     0,     0,     0,     0,   696,   265,   697,
       0,     0,   698,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,   699,     0,
     292,   293,   294,   295,   296,   700,   701,   297,   298,     0,
     299,   300,   301,   302,   303,   702,     0,   304,   305,     0,
       0,     0,   703,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   704,   312,   705,     0,   314,     0,   315,     0,
     706,     0,   316,   317,     0,   318,   707,     0,   319,   320,
       0,     0,     0,   708,   322,   323,   324,   709,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,   710,   329,
     330,   331,   711,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,   712,   342,
     343,     0,     0,     0,     0,     0,   713,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,   714,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   715,   372,   373,   374,
     375,   716,   376,   377,  5061,     0,     0,     0,   378,   379,
     380,   381,   717,   383,     0,     0,   718,   385,   719,   386,
       0,   387,   720,   721,   722,   723,   724,   392,   393,   394,
     395,   396,     0,   725,   397,   398,     0,     0,   399,   400,
     401,   402,   403,   726,     0,   728,   404,   405,     0,   729,
     730,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,   731,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   732,   733,   427,   734,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   735,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,   736,   737,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   738,     0,   739,   471,   472,   473,   474,     0,
     475,   740,   741,   477,   478,   479,   480,     0,   742,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,   743,   744,   511,   512,     0,     0,   513,   514,   745,
     516,   517,   518,   746,   747,   519,   520,   521,   522,   748,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   749,
     529,   530,     0,   750,   751,   752,   753,     0,     0,     0,
       0,     0,   535,   536,     0,   754,   755,   756,   538,   539,
       0,   757,   540,   541,   758,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   759,
     550,     0,     0,   760,   761,   762,   551,   763,   552,     0,
       0,   553,   764,     0,   765,   554,     0,   555,   556,   766,
     767,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   768,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,   769,   770,     0,   573,   574,   575,   771,   576,
     577,   578,     0,   579,   772,   773,   580,   774,   581,     0,
     775,   776,   777,   778,   779,   582,   583,     0,   780,   584,
     781,   585,   782,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   783,   631,   632,   633,   634,     0,     0,
       0,     0,     0,   784,   785,     0,     0,     0,     0,   787,
       0,   788,     0,     0,     0,   789,     0,     0,     0,   790,
     791,   199,   200,     0,   673,   202,   203,   204,   205,     0,
       0,   206,     0,     0,     0,     0,   207,     0,     0,   674,
       0,   209,   210,   211,   212,   675,   214,     0,   215,     0,
       0,   676,   216,   677,   678,   679,   217,   680,     0,   218,
     219,   220,     0,   221,     0,   222,   223,     0,     0,   224,
     681,   682,   225,   226,     0,   227,   228,   683,   684,   230,
       0,   231,   232,   233,   234,   685,   236,     0,   686,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,     0,   252,   253,   254,   255,
     256,     0,   687,   688,   257,     0,     0,     0,   689,   258,
     690,     0,   259,   691,   692,     0,   260,   261,   262,   693,
     694,   695,     0,     0,     0,     0,   696,   265,   697,     0,
       0,   698,   266,   267,     0,   268,     0,     0,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,   277,     0,     0,     0,   278,     0,
     279,   280,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   286,   287,   288,   289,   290,   291,   699,     0,   292,
     293,   294,   295,   296,   700,   701,   297,   298,     0,   299,
     300,   301,   302,   303,   702,     0,   304,   305,     0,     0,
       0,   703,   307,     0,   308,     0,     0,     0,   309,     0,
     310,   704,   312,   705,     0,   314,     0,   315,     0,   706,
       0,   316,   317,     0,   318,   707,     0,   319,   320,     0,
       0,     0,   708,   322,   323,   324,   709,     0,   325,   326,
     327,     0,     0,   328,     0,     0,     0,   710,   329,   330,
     331,   711,     0,     0,   332,     0,     0,     0,   333,   334,
       0,   335,   336,     0,     0,     0,   337,     0,   338,     0,
       0,   339,   340,     0,     0,   341,     0,   712,   342,   343,
       0,     0,     0,     0,     0,   713,   345,     0,   346,     0,
     347,     0,   348,   349,     0,     0,   714,     0,     0,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   715,   372,   373,   374,   375,
     716,   376,   377,     0,     0,     0,     0,   378,   379,   380,
     381,   717,   383,     0,     0,   718,   385,   719,   386,     0,
     387,   720,   721,   722,   723,   724,   392,   393,   394,   395,
     396,     0,   725,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   726,     0,   728,   404,   405,     0,   729,   730,
     406,     0,   407,   408,     0,   409,   410,   411,     0,     0,
     412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     413,   414,   415,   731,   416,     0,   417,     0,   418,   419,
     420,   421,   422,   423,   424,   732,   733,   427,   734,   428,
       0,   429,   430,   431,     0,   432,     0,   433,   434,   435,
     436,   437,     0,   735,   439,   440,     0,     0,   441,     0,
       0,     0,   442,   443,     0,   444,   445,     0,     0,   446,
     447,   448,   449,   450,     0,   451,   452,     0,   453,   454,
     455,   736,   737,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   464,     0,   465,   466,     0,   467,   468,   469,
       0,   738,     0,   739,   471,   472,   473,   474,     0,   475,
     740,   741,   477,   478,   479,   480,     0,   742,   482,     0,
       0,     0,   483,   484,   485,   486,     0,     0,     0,   487,
       0,     0,     0,   488,     0,   489,   490,   491,   492,     0,
     493,   494,   495,   496,   497,     0,     0,     0,     0,     0,
     498,   499,   500,     0,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,   507,   508,   509,   510,
     743,   744,   511,   512,     0,     0,   513,   514,   745,   516,
     517,   518,   746,   747,   519,   520,   521,   522,   748,   523,
     524,     0,     0,   525,   526,   527,   528,     0,   749,   529,
     530,     0,   750,   751,   752,   753,     0,     0,     0,     0,
       0,   535,   536,     0,   754,   755,   756,   538,   539,     0,
     757,   540,   541,   758,   542,   543,     0,   544,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   759,   550,
       0,     0,   760,   761,   762,   551,   763,   552,     0,     0,
     553,   764,     0,   765,   554,     0,   555,   556,   766,   767,
       0,     0,     0,     0,     0,     0,   559,   560,   561,     0,
     562,   563,   564,   565,     0,     0,   768,     0,     0,   567,
     568,   569,   570,   571,     0,   572,     0,     0,     0,     0,
       0,   769,   770,     0,   573,   574,   575,   771,   576,   577,
     578,     0,   579,   772,   773,   580,   774,   581,     0,   775,
     776,   777,   778,   779,   582,   583,     0,   780,   584,   781,
     585,   782,   586,   587,     0,     0,     0,   588,   589,   590,
     591,   592,   593,   594,   595,     0,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,     0,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,     0,   783,   631,   632,   633,   634,     0,     0,     0,
       0,     0,   784,   785,     0,     0,     0,     0,   787,     0,
     788,     0,     0,     0,   789,     0,     0,     0,   790,   791,
     199,   200,     0,   673,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   674,     0,
     209,   210,   211,   212,   675,   214,     0,   215,     0,     0,
     676,   216,   677,   678,   679,   217,   680,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,   681,
     682,   225,   226,     0,   227,   228,   683,   684,   230,     0,
     231,   232,   233,   234,   685,   236,     0,   686,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,   687,   688,   257,     0,     0,     0,   689,   258,   690,
       0,   259,   691,   692,     0,   260,   261,   262,   693,   694,
     695,     0,     0,     0,     0,   696,   265,   697,     0,     0,
     698,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,   699,     0,   292,   293,
     294,   295,   296,   700,   701,   297,   298,     0,   299,   300,
     301,   302,   303,   702,     0,   304,   305,     0,     0,     0,
     703,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     704,   312,   705,     0,   314,     0,   315,     0,   706,     0,
     316,   317,     0,   318,   707,     0,   319,   320,     0,     0,
       0,   708,   322,   323,   324,   709,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,   710,   329,   330,   331,
    1942,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,   712,   342,   343,     0,
       0,     0,     0,     0,   713,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,   714,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   715,   372,   373,   374,   375,   716,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     717,   383,     0,     0,   718,   385,   719,   386,     0,   387,
     720,   721,   722,   723,   724,   392,   393,   394,   395,   396,
       0,   725,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   726,     0,   728,   404,   405,     0,   729,   730,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   731,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   732,   733,   427,   734,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   735,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
     736,   737,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     738,     0,   739,   471,   472,   473,   474,     0,   475,   740,
     741,   477,   478,   479,   480,     0,   742,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,   743,
     744,   511,   512,     0,     0,   513,   514,   745,   516,   517,
     518,   746,   747,   519,   520,   521,   522,   748,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   749,   529,   530,
       0,   750,   751,   752,   753,     0,     0,     0,     0,     0,
     535,   536,     0,   754,   755,   756,   538,   539,     0,   757,
     540,   541,   758,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   759,   550,     0,
       0,   760,   761,   762,   551,   763,   552,     0,     0,   553,
     764,     0,   765,   554,     0,   555,   556,   766,   767,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   768,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
     769,   770,     0,   573,   574,   575,   771,   576,   577,   578,
       0,   579,   772,   773,   580,   774,   581,     0,   775,   776,
     777,   778,   779,   582,   583,     0,   780,   584,   781,   585,
     782,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   783,   631,   632,   633,   634,     0,     0,     0,     0,
       0,   784,   785,     0,     0,     0,     0,   787,     0,   788,
       0,     0,     0,   789,     0,     0,     0,   790,   791,   199,
     200,     0,   673,   202,   203,   204,   205,     0,     0,   206,
       0,     0,     0,     0,   207,     0,     0,   674,     0,   209,
     210,   211,   212,   675,   214,     0,   215,     0,     0,   676,
     216,   677,   678,   679,   217,   680,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,   681,   682,
     225,   226,     0,   227,   228,   683,   684,   230,     0,   231,
     232,   233,   234,   685,   236,     0,   686,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,     0,   252,   253,   254,   255,   256,     0,
     687,   688,   257,     0,     0,     0,   689,   258,   690,     0,
     259,   691,   692,     0,   260,   261,   262,   693,   694,   695,
       0,     0,     0,     0,   696,   265,   697,     0,     0,   698,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,   699,     0,   292,   293,   294,
     295,   296,   700,   701,   297,   298,     0,   299,   300,   301,
     302,   303,   702,     0,   304,   305,     0,     0,     0,   703,
     307,     0,   308,     0,     0,     0,   309,     0,   310,   704,
     312,   705,     0,   314,     0,   315,     0,   706,     0,   316,
     317,     0,   318,   707,     0,   319,   320,     0,     0,     0,
     708,   322,   323,   324,   709,     0,   325,   326,   327,     0,
       0,   328,     0,     0,     0,   710,   329,   330,   331,  1944,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,     0,     0,   339,
     340,     0,     0,   341,     0,   712,   342,   343,     0,     0,
       0,     0,     0,   713,   345,     0,   346,     0,   347,     0,
     348,   349,     0,     0,   714,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   715,   372,   373,   374,   375,   716,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   717,
     383,     0,     0,   718,   385,   719,   386,     0,   387,   720,
     721,   722,   723,   724,   392,   393,   394,   395,   396,     0,
     725,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     726,     0,   728,   404,   405,     0,   729,   730,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,   731,   416,     0,   417,     0,   418,   419,   420,   421,
     422,   423,   424,   732,   733,   427,   734,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   735,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,   736,
     737,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   738,
       0,   739,   471,   472,   473,   474,     0,   475,   740,   741,
     477,   478,   479,   480,     0,   742,   482,     0,     0,     0,
     483,   484,   485,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,   743,   744,
     511,   512,     0,     0,   513,   514,   745,   516,   517,   518,
     746,   747,   519,   520,   521,   522,   748,   523,   524,     0,
       0,   525,   526,   527,   528,     0,   749,   529,   530,     0,
     750,   751,   752,   753,     0,     0,     0,     0,     0,   535,
     536,     0,   754,   755,   756,   538,   539,     0,   757,   540,
     541,   758,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   759,   550,     0,     0,
     760,   761,   762,   551,   763,   552,     0,     0,   553,   764,
       0,   765,   554,     0,   555,   556,   766,   767,     0,     0,
       0,     0,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   768,     0,     0,   567,   568,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,   769,
     770,     0,   573,   574,   575,   771,   576,   577,   578,     0,
     579,   772,   773,   580,   774,   581,     0,   775,   776,   777,
     778,   779,   582,   583,     0,   780,   584,   781,   585,   782,
     586,   587,     0,     0,     0,   588,   589,   590,   591,   592,
     593,   594,   595,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,     0,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     783,   631,   632,   633,   634,     0,     0,     0,     0,     0,
     784,   785,     0,     0,     0,     0,   787,     0,   788,     0,
       0,     0,   789,     0,     0,     0,   790,   791,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,    42,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,    49,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,    54,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
      55,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,  2750,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,  2751,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,     0,     0,     0,     0,     0,   199,
     200,     0,   201,   202,   203,   204,   205,  2752,     0,   206,
       0,     0,     0,     0,   207,     0,  2753,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,     0,     0,
     216,     0,     0,     0,   217,     0,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,     0,     0,
     225,   226,     0,   227,   228,   229,     0,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,     0,   252,   253,   254,   255,   256,     0,
       0,     0,   257,     0,     0,     0,     0,   258,     0,     0,
     259,     0,     0,     0,   260,   261,   262,     0,     0,   263,
       0,     0,     0,     0,   264,   265,     0,     0,     0,     0,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,  2749,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,     0,     0,   292,   293,   294,
     295,   296,     0,     0,   297,   298,     0,   299,   300,   301,
     302,   303,     0,     0,   304,   305,     0,     0,     0,   306,
     307,     0,   308,     0,     0,     0,   309,     0,   310,   311,
     312,   313,     0,   314,     0,   315,     0,     0,     0,   316,
     317,     0,   318,     0,     0,   319,   320,     0,     0,     0,
     321,   322,   323,   324,     0,     0,   325,   326,   327,     0,
       0,   328,     0,     0,     0,     0,   329,   330,   331,     0,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,     0,     0,   339,
     340,     0,     0,   341,     0,     0,   342,   343,     0,     0,
       0,     0,     0,   344,   345,     0,   346,     0,   347,     0,
     348,   349,     0,     0,     0,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,     0,   372,   373,   374,   375,     0,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,     0,   384,   385,     0,   386,     0,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
       0,   397,   398,     0,     0,   399,   400,   401,   402,   403,
       0,     0,     0,   404,   405,     0,     0,     0,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,     0,   416,     0,   417,     0,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   438,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   470,
       0,     0,   471,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,     0,     0,     0,
     483,   484,   485,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,     0,     0,   513,   514,   515,   516,   517,   518,
       0,     0,   519,   520,   521,   522,     0,   523,   524,     0,
       0,   525,   526,   527,   528,     0,     0,   529,   530,     0,
     531,   532,   533,   534,     0,     0,     0,     0,     0,   535,
     536,     0,     0,     0,   537,   538,   539,     0,     0,   540,
     541,     0,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,     0,     0,
       0,     0,     0,   551,     0,   552,     0,     0,   553,     0,
       0,     0,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   566,     0,     0,   567,   568,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,   573,   574,   575,     0,   576,   577,   578,     0,
     579,     0,     0,   580,     0,   581,     0,     0,     0,     0,
       0,     0,   582,   583,     0,     0,   584,     0,   585,     0,
     586,   587,     0,     0,  2750,   588,   589,   590,   591,   592,
     593,   594,   595,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,  2751,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     630,   631,   632,   633,   634,     0,     0,     0,     0,     0,
     199,   200,     0,   201,   202,   203,   204,   205,  2752,     0,
     206,     0,     0,     0,     0,   207,     0,  2753,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,  2750,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,  2751,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,     0,     0,     0,     0,
     199,   200,     0,   201,   202,   203,   204,   205,     0,  2752,
     206,     0,     0,     0,     0,   207,     0,     0,  2753,     0,
     209,   210,   211,   212,   213,   214,     0,  -457,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,     0,     0,     0,     0,   224,  4898,
       0,   225,   226,     0,   227,   228,     0,     0,     0,     0,
     231,   232,   233,  4899,   235,   236,     0,   237,   238,     0,
     239,   240,     0,   242,     0,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,     0,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,     0,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,     0,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,     0,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,  4900,   299,   300,
     301,   302,   303,     0,     0,     0,     0,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
       0,   317,     0,     0,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,  4901,     0,   325,     0,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,     0,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,  4902,     0,     0,   337,     0,   338,     0,     0,
       0,   340,     0,     0,   341,  4903,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,  -412,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,     0,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,  4904,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,     0,     0,
       0,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,     0,   455,
    -412,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,     0,     0,   465,   466,     0,   467,   468,   469,  4905,
     470,     0,     0,     0,   472,   473,   474,     0,   475,     0,
     476,   477,     0,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,     0,     0,     0,   490,     0,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,     0,   507,   508,   509,   510,     0,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,     0,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,     0,     0,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,  -412,     0,     0,     0,   559,   560,   561,     0,   562,
       0,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,     0,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,     0,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,     0,   199,   200,     0,
     201,   202,   203,   204,   205,     0,     0,   206,     0,     0,
       0,     0,   207,     0,  5300,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,     0,     0,   216,   677,
       0,     0,   217,     0,     0,   218,   219,   220,     0,   221,
       0,   222,   223,     0,     0,   224,     0,     0,   225,   226,
       0,   227,   228,   229,     0,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,     0,   252,   253,   254,   255,   256,     0,     0,     0,
     257,     0,     0,     0,     0,   258,     0,     0,   259,     0,
       0,     0,   260,   261,   262,     0,     0,  2676,     0,     0,
       0,     0,   264,   265,   697,     0,     0,     0,   266,   267,
       0,   268,     0,     0,     0,     0,     0,   269,   270,   271,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
     277,     0,     0,     0,   278,     0,   279,   280,     0,   281,
     282,   283,     0,     0,   284,   285,     0,   286,   287,   288,
     289,   290,   291,     0,     0,   292,   293,   294,   295,   296,
       0,   701,   297,   298,     0,   299,   300,   301,   302,   303,
     702,     0,   304,   305,     0,     0,     0,   306,   307,     0,
     308,     0,     0,     0,   309,     0,   310,   311,   312,   313,
       0,   314,     0,   315,     0,     0,     0,   316,   317,     0,
     318,   707,     0,   319,   320,     0,     0,     0,   321,   322,
     323,   324,     0,     0,   325,   326,   327,     0,     0,   328,
       0,     0,     0,     0,   329,   330,   331,     0,     0,     0,
     332,     0,     0,     0,   333,   334,     0,   335,   336,     0,
       0,     0,   337,     0,   338,     0,     0,   339,   340,     0,
       0,   341,     0,     0,   342,   343,     0,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,     0,   348,   349,
       0,     0,   714,     0,     0,     0,     0,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,     0,   372,   373,   374,   375,     0,   376,   377,     0,
       0,     0,     0,   378,   379,   380,   381,   382,   383,     0,
       0,   384,   385,     0,   386,     0,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,   725,   397,
     398,     0,     0,   399,   400,   401,   402,   403,     0,     0,
       0,   404,   405,     0,   729,   730,   406,     0,   407,   408,
       0,   409,   410,   411,     0,     0,   412,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   413,   414,   415,     0,
     416,     0,   417,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   429,   430,   431,
       0,   432,     0,   433,   434,   435,   436,   437,     0,   438,
     439,   440,     0,     0,   441,     0,     0,     0,   442,   443,
       0,   444,   445,     0,     0,   446,   447,   448,   449,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,     0,   464,     0,
     465,   466,     0,   467,   468,   469,     0,   470,     0,     0,
     471,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,     0,     0,     0,   483,   484,
     485,   486,     0,     0,     0,   487,     0,     0,     0,   488,
       0,   489,   490,   491,   492,     0,   493,   494,   495,   496,
     497,     0,     0,     0,     0,     0,   498,   499,   500,     0,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
       0,     0,   513,   514,   515,   516,   517,   518,     0,     0,
     519,   520,   521,   522,     0,   523,   524,     0,     0,   525,
     526,   527,   528,     0,   749,   529,   530,     0,  2677,   532,
     533,  2678,     0,     0,     0,     0,     0,   535,   536,     0,
       0,   755,   537,   538,   539,     0,   757,   540,   541,   758,
     542,   543,     0,   544,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,     0,     0,     0,     0,
       0,   551,     0,   552,     0,     0,   553,     0,     0,     0,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,     0,   559,   560,   561,     0,   562,   563,   564,   565,
       0,     0,   566,     0,     0,   567,   568,   569,   570,   571,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
     573,   574,   575,     0,   576,   577,   578,     0,   579,     0,
       0,   580,     0,   581,     0,     0,     0,     0,     0,     0,
     582,   583,     0,     0,   584,     0,   585,     0,   586,   587,
       0,     0,     0,   588,   589,   590,   591,   592,   593,   594,
     595,     0,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,     0,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,     0,   630,   631,
     632,   633,   634,   199,   200,     0,   201,   202,   203,   204,
     205,     0,     0,   206,     0,     0,     0,     0,   207,     0,
     789,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,     0,     0,   216,     0,     0,     0,   217,     0,
       0,   218,   219,   220,     0,   221,     0,   222,   223,     0,
       0,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,     0,   252,   253,
     254,   255,   256,     0,     0,     0,   257,     0,     0,     0,
       0,   258,     0,     0,   259,     0,     0,     0,   260,   261,
     262,     0,     0,   263,     0,     0,     0,     0,   264,   265,
       0,     0,     0,     0,   266,   267,     0,   268,     0,     0,
       0,     0,     0,   269,   270,   271,   272,   273,     0,     0,
       0,   274,     0,     0,  1538,   276,   277,     0,     0,     0,
     278,     0,   279,   280,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,   287,   288,   289,   290,   291,     0,
       0,   292,   293,   294,   295,   296,     0,     0,   297,   298,
       0,   299,   300,   301,   302,   303,     0,     0,   304,   305,
       0,     0,     0,   306,   307,     0,   308,     0,     0,     0,
     309,     0,   310,   311,   312,   313,     0,   314,     0,   315,
       0,     0,     0,   316,   317,     0,   318,     0,     0,   319,
     320,     0,     0,     0,   321,   322,   323,   324,     0,     0,
     325,   326,   327,     0,     0,   328,     0,     0,     0,     0,
     329,   330,   331,     0,     0,     0,   332,     0,     0,     0,
     333,   334,     0,   335,   336,     0,     0,     0,   337,     0,
     338,     0,     0,   339,   340,     0,     0,   341,     0,     0,
     342,   343,  1013,     0,     0,     0,     0,   344,   345,     0,
     346,     0,   347,     0,   348,   349,     0,     0,     0,     0,
       0,     0,     0,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,     0,   372,   373,
     374,   375,     0,   376,   377,     0,     0,     0,     0,   378,
     379,   380,   381,   382,   383,     0,     0,   384,   385,     0,
     386,     0,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,     0,   397,   398,     0,     0,   399,
     400,   401,   402,   403,     0,     0,     0,   404,   405,     0,
       0,     0,   406,     0,   407,   408,     0,   409,   410,   411,
       0,     0,   412,     0,     0,     0,     0,     0,     0,     0,
    1539,     0,   413,   414,   415,     0,   416,     0,   417,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   429,   430,   431,     0,   432,     0,   433,
     434,   435,   436,   437,     0,   438,   439,   440,     0,     0,
     441,     0,     0,     0,   442,   443,     0,   444,   445,     0,
       0,   446,   447,   448,   449,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,     0,   464,     0,   465,   466,     0,   467,
     468,   469,     0,   470,     0,     0,   471,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,     0,     0,     0,   483,   484,   485,   486,     0,     0,
       0,   487,     0,     0,     0,   488,     0,   489,   490,   491,
     492,     0,   493,   494,   495,   496,   497,     0,     0,     0,
       0,     0,   498,   499,   500,     0,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,     0,     0,   513,   514,
     515,   516,   517,   518,     0,     0,   519,   520,   521,   522,
       0,   523,   524,     0,     0,   525,   526,   527,   528,     0,
     196,   529,   530,     0,   531,   532,   533,   534,     0,     0,
       0,     0,     0,   535,   536,     0,     0,     0,   537,   538,
     539,     0,     0,   540,   541,     0,   542,   543,     0,   544,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,     0,     0,     0,     0,     0,   551,     0,   552,
       0,     0,   553,     0,     0,     0,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,     0,   559,   560,
     561,     0,   562,   563,   564,   565,     0,     0,   566,     0,
       0,   567,   568,   569,   570,   571,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,   573,   574,   575,     0,
     576,   577,   578,     0,   579,     0,     0,   580,     0,   581,
       0,     0,     0,     0,     0,     0,   582,   583,     0,     0,
     584,     0,   585,     0,   586,   587,     0,     0,     0,   588,
     589,   590,   591,   592,   593,   594,   595,     0,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,     0,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,     0,   630,   631,   632,   633,   634,   199,
     200,     0,   201,   202,   203,   204,   205,     0,     0,   206,
       0,     0,     0,     0,   207,     0,  1540,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,     0,     0,
     216,     0,     0,     0,   217,     0,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,     0,     0,
     225,   226,     0,   227,   228,   937,   938,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,     0,   252,   253,   254,   255,   256,     0,
       0,     0,   257,     0,     0,     0,     0,   258,     0,     0,
     259,     0,     0,     0,   260,   261,   262,     0,     0,   263,
       0,     0,     0,     0,   264,   265,     0,     0,     0,   939,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,     0,     0,   292,   293,   294,
     295,   296,     0,     0,   297,   298,     0,   299,   300,   301,
     302,   303,     0,     0,   304,   305,     0,     0,     0,   306,
     307,     0,   308,     0,     0,     0,   309,     0,   310,   311,
     312,   313,     0,   940,     0,   315,     0,     0,     0,   316,
     317,     0,   318,     0,     0,   319,   320,     0,     0,     0,
     321,   322,   323,   324,     0,     0,   325,   326,   327,     0,
       0,   328,     0,     0,     0,     0,   329,   330,   331,     0,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,     0,     0,   339,
     340,     0,     0,   341,     0,     0,   342,   343,     0,     0,
       0,     0,     0,   344,   345,     0,   941,     0,   347,     0,
     348,   349,     0,     0,     0,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,     0,   372,   373,   374,   375,     0,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,     0,   384,   385,     0,   386,     0,   387,     0,
     388,   389,   390,   391,   392,   393,   942,   395,   396,     0,
       0,   397,   398,     0,     0,   399,   400,   401,   402,   403,
       0,     0,     0,   404,   405,     0,     0,     0,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,     0,   416,     0,   417,     0,   418,   419,   943,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   438,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   470,
       0,     0,   471,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,     0,     0,     0,
     483,   484,   944,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,     0,     0,   513,   514,   515,   516,   517,   518,
       0,     0,   519,   520,   521,   522,     0,   523,   524,     0,
       0,   525,   526,   527,   528,     0,     0,   529,   530,     0,
     531,   532,   533,   534,     0,     0,     0,     0,     0,   945,
     536,     0,     0,     0,   537,   538,   539,     0,     0,   540,
     541,     0,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,     0,     0,
       0,     0,     0,   551,     0,   552,     0,     0,   553,     0,
       0,     0,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   566,     0,     0,   946,   947,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,   573,   574,   575,     0,   948,   577,   578,     0,
     579,     0,     0,   580,     0,   581,     0,     0,     0,     0,
       0,     0,   582,   583,     0,     0,   584,     0,   585,     0,
     586,   587,     0,     0,     0,   588,   589,   590,   591,   592,
     593,   594,   949,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,     0,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     630,   631,   632,   633,   634,   199,   200,     0,   201,   202,
     203,   204,   205,     0,     0,   206,     0,     0,     0,     0,
     207,     0,   950,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,     0,     0,   216,     0,     0,     0,
     217,     0,     0,   218,   219,   220,     0,   221,     0,   222,
     223,     0,     0,   224,     0,     0,   225,   226,     0,   227,
     228,   229,     0,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,   255,   256,     0,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,   259,     0,     0,     0,
     260,   261,   262,     0,     0,   263,     0,     0,     0,     0,
     264,   265,     0,     0,     0,     0,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,   279,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
     291,     0,     0,   292,   293,   294,   295,   296,     0,     0,
     297,   298,     0,   299,   300,   301,   302,   303,     0,     0,
     304,   305,     0,     0,     0,   306,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   311,   312,   313,     0,   314,
       0,   315,     0,     0,     0,   316,   317,     0,   318,     0,
       0,   319,   320,     0,     0,     0,   321,   322,   323,   324,
       0,     0,   325,   326,   327,     0,     0,   328,     0,     0,
       0,     0,   329,   330,   331,     0,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,     0,     0,     0,
     337,     0,   338,     0,     0,   339,   340,     0,     0,   341,
       0,     0,   342,   343,  1013,     0,     0,     0,     0,   344,
     345,     0,   346,     0,   347,     0,   348,   349,     0,     0,
       0,     0,     0,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,     0,
     372,   373,   374,   375,     0,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   382,   383,     0,     0,   384,
     385,     0,   386,     0,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,     0,   397,   398,     0,
       0,   399,   400,   401,   402,   403,     0,     0,     0,   404,
     405,     0,     0,     0,   406,     0,   407,   408,     0,   409,
     410,   411,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,     0,   416,     0,
     417,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   429,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   438,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   464,     0,   465,   466,
       0,   467,   468,   469,     0,   470,     0,     0,   471,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,     0,     0,     0,   483,   484,   485,   486,
       0,     0,     0,   487,     0,     0,     0,   488,     0,   489,
     490,   491,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,     0,     0,
     513,   514,   515,   516,   517,   518,     0,     0,   519,   520,
     521,   522,     0,   523,   524,     0,     0,   525,   526,   527,
     528,     0,   196,   529,   530,     0,   531,   532,   533,   534,
       0,     0,     0,     0,     0,   535,   536,     0,     0,     0,
     537,   538,   539,     0,     0,   540,   541,     0,   542,   543,
       0,   544,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,     0,     0,     0,     0,     0,   551,
       0,   552,     0,     0,   553,     0,     0,     0,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,     0,
     559,   560,   561,     0,   562,   563,   564,   565,     0,     0,
     566,     0,     0,   567,   568,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,   573,   574,
     575,     0,   576,   577,   578,     0,   579,     0,     0,   580,
       0,   581,     0,     0,     0,     0,     0,     0,   582,   583,
       0,     0,   584,     0,   585,     0,   586,   587,     0,     0,
       0,   588,   589,   590,   591,   592,   593,   594,   595,     0,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
       0,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   630,   631,   632,   633,
     634,   199,   200,     0,   201,   202,   203,   204,   205,     0,
       0,   206,     0,     0,     0,     0,   207,     0,  1231,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
       0,     0,   216,     0,     0,     0,   217,     0,     0,   218,
     219,   220,     0,   221,     0,   222,   223,     0,     0,   224,
       0,     0,   225,   226,     0,   227,   228,   229,     0,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,     0,   252,   253,   254,   255,
     256,     0,     0,     0,   257,     0,     0,     0,     0,   258,
       0,     0,   259,     0,     0,     0,   260,   261,   262,     0,
       0,   263,     0,     0,     0,     0,   264,   265,     0,     0,
       0,     0,   266,   267,     0,   268,     0,     0,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,   277,     0,     0,     0,   278,     0,
     279,   280,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   286,   287,   288,   289,   290,   291,     0,     0,   292,
     293,   294,   295,   296,     0,     0,   297,   298,     0,   299,
     300,   301,   302,   303,     0,     0,   304,   305,     0,     0,
       0,   306,   307,     0,   308,     0,     0,     0,   309,     0,
     310,   311,   312,   313,     0,   314,     0,   315,     0,     0,
       0,   316,   317,     0,   318,     0,     0,   319,   320,     0,
       0,     0,   321,   322,   323,   324,     0,     0,   325,   326,
     327,     0,     0,   328,     0,     0,     0,     0,   329,   330,
     331,     0,     0,     0,   332,     0,     0,     0,   333,   334,
       0,   335,   336,     0,     0,     0,   337,     0,   338,     0,
       0,   339,   340,     0,     0,   341,     0,     0,   342,   343,
    1013,     0,     0,     0,     0,   344,   345,     0,   346,     0,
     347,     0,   348,   349,     0,     0,     0,     0,     0,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,     0,   372,   373,   374,   375,
       0,   376,   377,     0,     0,     0,     0,   378,   379,   380,
     381,   382,   383,     0,     0,   384,   385,     0,   386,     0,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,     0,   397,   398,     0,     0,   399,   400,   401,
     402,   403,     0,     0,     0,   404,   405,     0,     0,     0,
     406,     0,   407,   408,     0,   409,   410,   411,     0,     0,
     412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     413,   414,   415,     0,   416,     0,   417,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   429,   430,   431,     0,   432,     0,   433,   434,   435,
     436,   437,     0,   438,   439,   440,     0,     0,   441,     0,
       0,     0,   442,   443,     0,   444,   445,     0,     0,   446,
     447,   448,   449,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   464,     0,   465,   466,     0,   467,   468,   469,
       0,   470,     0,     0,   471,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,     0,
       0,     0,   483,   484,   485,   486,     0,     0,     0,   487,
       0,     0,     0,   488,     0,   489,   490,   491,   492,     0,
     493,   494,   495,   496,   497,     0,     0,     0,     0,     0,
     498,   499,   500,     0,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,     0,     0,   513,   514,   515,   516,
     517,   518,     0,     0,   519,   520,   521,   522,     0,   523,
     524,     0,     0,   525,   526,   527,   528,     0,   196,   529,
     530,     0,   531,   532,   533,   534,     0,     0,     0,     0,
       0,   535,   536,     0,     0,     0,   537,   538,   539,     0,
       0,   540,   541,     0,   542,   543,     0,   544,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
       0,     0,     0,     0,     0,   551,     0,   552,     0,     0,
     553,     0,     0,     0,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,     0,   559,   560,   561,     0,
     562,   563,   564,   565,     0,     0,   566,     0,     0,   567,
     568,   569,   570,   571,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,   573,   574,   575,     0,   576,   577,
     578,     0,   579,     0,     0,   580,     0,   581,     0,     0,
       0,     0,     0,     0,   582,   583,     0,     0,   584,     0,
     585,     0,   586,   587,     0,     0,     0,   588,   589,   590,
     591,   592,   593,   594,   595,     0,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,     0,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,     0,   630,   631,   632,   633,   634,   199,   200,     0,
     201,   202,   203,   204,   205,     0,     0,   206,     0,     0,
       0,     0,   207,     0,  1408,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,     0,     0,   216,     0,
       0,     0,   217,     0,     0,   218,   219,   220,     0,   221,
       0,   222,   223,     0,     0,   224,     0,     0,   225,   226,
       0,   227,   228,   937,   938,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,     0,   252,   253,   254,   255,   256,     0,     0,     0,
     257,     0,     0,     0,     0,   258,     0,     0,   259,     0,
       0,     0,   260,   261,   262,     0,     0,   263,     0,     0,
       0,     0,   264,   265,     0,     0,     0,  1416,   266,   267,
       0,   268,     0,     0,     0,     0,     0,   269,   270,   271,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
     277,     0,     0,     0,   278,     0,   279,   280,     0,   281,
     282,   283,     0,     0,   284,   285,     0,   286,   287,   288,
     289,   290,   291,     0,     0,   292,   293,   294,   295,   296,
       0,     0,   297,   298,     0,   299,   300,   301,   302,   303,
       0,     0,   304,   305,     0,     0,     0,   306,   307,     0,
     308,     0,     0,     0,   309,     0,   310,   311,   312,   313,
       0,   940,     0,   315,     0,     0,     0,   316,   317,     0,
     318,     0,     0,   319,   320,     0,     0,     0,   321,   322,
     323,   324,     0,     0,   325,   326,   327,     0,     0,   328,
       0,     0,     0,     0,   329,   330,   331,     0,     0,     0,
     332,     0,     0,     0,   333,   334,     0,   335,   336,     0,
       0,     0,   337,     0,   338,     0,     0,   339,   340,     0,
       0,   341,     0,     0,   342,   343,     0,     0,     0,     0,
       0,   344,   345,     0,   941,     0,   347,     0,   348,   349,
       0,     0,     0,     0,     0,     0,     0,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,     0,   372,   373,   374,   375,     0,   376,   377,     0,
       0,     0,     0,   378,   379,   380,   381,   382,   383,     0,
       0,   384,   385,     0,   386,     0,   387,     0,   388,   389,
     390,   391,   392,   393,   942,   395,   396,     0,     0,   397,
     398,     0,     0,   399,   400,   401,   402,   403,     0,     0,
       0,   404,   405,     0,     0,     0,   406,     0,   407,   408,
       0,   409,   410,   411,     0,     0,   412,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   413,   414,   415,     0,
     416,     0,   417,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   429,   430,   431,
       0,   432,     0,   433,   434,   435,   436,   437,     0,   438,
     439,   440,     0,     0,   441,     0,     0,     0,   442,   443,
       0,   444,   445,     0,     0,   446,   447,   448,   449,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,     0,   464,     0,
     465,   466,     0,   467,   468,   469,     0,   470,     0,     0,
     471,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,     0,     0,     0,   483,   484,
     944,   486,     0,     0,     0,   487,     0,     0,     0,   488,
       0,   489,   490,   491,   492,     0,   493,   494,   495,   496,
     497,     0,     0,     0,     0,     0,   498,   499,   500,     0,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
       0,     0,   513,   514,   515,   516,   517,   518,     0,     0,
     519,   520,   521,   522,     0,   523,   524,     0,     0,   525,
     526,   527,   528,     0,     0,   529,   530,     0,   531,   532,
     533,   534,     0,     0,     0,     0,     0,   535,   536,     0,
       0,     0,   537,   538,   539,     0,     0,   540,   541,     0,
     542,   543,     0,   544,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,     0,     0,     0,     0,
       0,   551,     0,   552,     0,     0,   553,     0,     0,     0,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,     0,   559,   560,   561,     0,   562,   563,   564,   565,
       0,     0,   566,     0,     0,   946,   568,   569,   570,   571,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
     573,   574,   575,     0,   948,   577,   578,     0,   579,     0,
       0,   580,     0,   581,     0,     0,     0,     0,     0,     0,
     582,   583,     0,     0,   584,     0,   585,     0,   586,   587,
       0,     0,     0,   588,   589,   590,   591,   592,   593,   594,
     595,     0,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,     0,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,     0,   630,   631,
     632,   633,   634,   199,   200,     0,   201,   202,   203,   204,
     205,     0,     0,   206,     0,     0,     0,     0,   207,     0,
     950,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,     0,     0,   216,     0,     0,     0,   217,     0,
       0,   218,   219,   220,     0,   221,     0,   222,   223,     0,
       0,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,     0,   252,   253,
     254,   255,   256,     0,     0,     0,   257,     0,     0,     0,
       0,   258,     0,     0,   259,     0,     0,     0,   260,   261,
     262,     0,     0,   263,     0,     0,     0,     0,   264,   265,
       0,     0,     0,     0,   266,   267,     0,   268,     0,     0,
       0,     0,     0,   269,   270,   271,   272,   273,     0,     0,
       0,   274,     0,     0,   275,   276,   277,     0,     0,     0,
     278,     0,   279,   280,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,   287,   288,   289,   290,   291,     0,
       0,   292,   293,   294,   295,   296,     0,     0,   297,   298,
       0,   299,   300,   301,   302,   303,     0,     0,   304,   305,
       0,     0,     0,   306,   307,     0,   308,     0,     0,     0,
     309,     0,   310,   311,   312,   313,     0,   314,     0,   315,
       0,     0,     0,   316,   317,     0,   318,     0,     0,   319,
     320,     0,     0,     0,   321,   322,   323,   324,     0,     0,
     325,   326,   327,     0,     0,   328,     0,     0,     0,     0,
     329,   330,   331,     0,     0,     0,   332,     0,     0,     0,
     333,   334,     0,   335,   336,     0,     0,     0,   337,     0,
     338,     0,     0,   339,   340,     0,     0,   341,     0,     0,
     342,   343,  1013,     0,     0,     0,     0,   344,   345,     0,
     346,     0,   347,     0,   348,   349,     0,     0,     0,     0,
       0,     0,     0,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,     0,   372,   373,
     374,   375,     0,   376,   377,     0,     0,     0,     0,   378,
     379,   380,   381,   382,   383,     0,     0,   384,   385,     0,
     386,     0,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,     0,   397,   398,     0,     0,   399,
     400,   401,   402,   403,     0,     0,     0,   404,   405,     0,
       0,     0,   406,     0,   407,   408,     0,   409,   410,   411,
       0,     0,   412,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   413,   414,   415,     0,   416,     0,   417,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   429,   430,   431,     0,   432,     0,   433,
     434,   435,   436,   437,     0,   438,   439,   440,     0,     0,
     441,     0,     0,     0,   442,   443,     0,   444,   445,     0,
       0,   446,   447,   448,   449,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,     0,   464,     0,   465,   466,     0,   467,
     468,   469,     0,   470,     0,     0,   471,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,     0,     0,     0,   483,   484,   485,   486,     0,     0,
       0,   487,     0,     0,     0,   488,     0,   489,   490,   491,
     492,     0,   493,   494,   495,   496,   497,     0,     0,     0,
       0,     0,   498,   499,   500,     0,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,     0,     0,   513,   514,
     515,   516,   517,   518,     0,     0,   519,   520,   521,   522,
       0,   523,   524,     0,     0,   525,   526,   527,   528,     0,
     196,   529,   530,     0,   531,   532,   533,   534,     0,     0,
       0,     0,     0,   535,   536,     0,     0,     0,   537,   538,
     539,     0,     0,   540,   541,     0,   542,   543,     0,   544,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,     0,     0,     0,     0,     0,   551,     0,   552,
       0,     0,   553,     0,     0,     0,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,     0,   559,   560,
     561,     0,   562,   563,   564,   565,     0,     0,   566,     0,
       0,   567,   568,   569,   570,   571,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,   573,   574,   575,     0,
     576,   577,   578,     0,   579,     0,     0,   580,     0,   581,
       0,     0,     0,     0,     0,     0,   582,   583,     0,     0,
     584,     0,   585,     0,   586,   587,     0,     0,     0,   588,
     589,   590,   591,   592,   593,   594,   595,     0,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,     0,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,     0,   630,   631,   632,   633,   634,   199,
     200,     0,   201,   202,   203,   204,   205,     0,     0,   206,
       0,     0,     0,     0,   207,     0,  1540,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,     0,     0,
     216,     0,     0,     0,   217,     0,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,     0,     0,
     225,   226,     0,   227,   228,   229,     0,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
    2003,   250,   251,     0,   252,   253,   254,   255,   256,     0,
       0,     0,   257,     0,     0,     0,     0,   258,     0,     0,
     259,     0,     0,     0,   260,   261,   262,     0,     0,   263,
       0,     0,     0,     0,   264,   265,     0,     0,     0,     0,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,     0,     0,   292,   293,   294,
     295,   296,     0,     0,   297,   298,     0,   299,   300,   301,
     302,   303,     0,     0,   304,   305,     0,     0,     0,   306,
     307,     0,   308,     0,     0,     0,   309,     0,   310,   311,
     312,   313,     0,   314,     0,   315,     0,     0,     0,   316,
     317,     0,   318,     0,     0,   319,   320,     0,     0,     0,
     321,   322,   323,   324,     0,     0,   325,   326,   327,     0,
       0,   328,     0,     0,     0,     0,   329,   330,   331,     0,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,     0,     0,   339,
     340,     0,     0,   341,     0,     0,   342,   343,     0,     0,
       0,     0,     0,   344,   345,     0,   346,     0,   347,     0,
     348,   349,     0,     0,     0,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,     0,   372,   373,   374,   375,     0,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,     0,   384,   385,     0,   386,     0,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
       0,   397,   398,     0,     0,   399,   400,   401,   402,   403,
       0,     0,     0,   404,   405,     0,     0,     0,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,     0,   416,     0,   417,     0,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   438,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   470,
       0,     0,   471,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,     0,     0,     0,
     483,   484,   485,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,     0,     0,   513,   514,   515,   516,   517,   518,
       0,     0,   519,   520,   521,   522,     0,   523,   524,     0,
       0,   525,   526,   527,   528,     0,     0,   529,   530,     0,
     531,   532,   533,   534,     0,     0,     0,     0,     0,   535,
     536,     0,     0,     0,   537,   538,   539,     0,     0,   540,
     541,     0,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,     0,     0,
       0,     0,     0,   551,     0,   552,     0,     0,   553,     0,
       0,     0,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   566,     0,     0,   567,   568,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,   573,   574,   575,     0,   576,   577,   578,     0,
     579,     0,     0,   580,     0,   581,     0,     0,     0,     0,
       0,     0,   582,   583,     0,     0,   584,     0,   585,     0,
     586,   587,     0,     0,     0,   588,   589,   590,   591,   592,
     593,   594,   595,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,     0,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     630,   631,   632,   633,   634,   199,   200,     0,   201,   202,
     203,   204,   205,     0,     0,   206,     0,     0,     0,     0,
     207,     0,  2004,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,     0,     0,   216,     0,     0,     0,
     217,     0,     0,   218,   219,   220,     0,   221,     0,   222,
     223,     0,     0,   224,     0,     0,   225,   226,     0,   227,
     228,   229,     0,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,   255,   256,     0,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,   259,     0,     0,     0,
     260,   261,   262,     0,     0,   263,     0,     0,     0,     0,
     264,   265,     0,     0,     0,     0,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,   279,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
     291,     0,     0,   292,   293,   294,   295,   296,     0,     0,
     297,   298,     0,   299,   300,   301,   302,   303,     0,     0,
     304,   305,     0,     0,     0,   306,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   311,   312,   313,     0,   314,
       0,   315,     0,     0,     0,   316,   317,     0,   318,     0,
       0,   319,   320,     0,     0,     0,   321,   322,   323,   324,
       0,     0,   325,   326,   327,     0,     0,   328,     0,     0,
       0,     0,   329,   330,   331,     0,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,     0,     0,     0,
     337,     0,   338,     0,     0,   339,   340,     0,     0,   341,
       0,     0,   342,   343,     0,     0,     0,     0,     0,   344,
     345,     0,   346,     0,   347,     0,   348,   349,     0,     0,
       0,     0,     0,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,     0,
     372,   373,   374,   375,     0,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   382,   383,     0,     0,   384,
     385,     0,   386,     0,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,     0,   397,   398,     0,
       0,   399,   400,   401,   402,   403,     0,     0,     0,   404,
     405,     0,     0,     0,   406,     0,   407,   408,     0,   409,
     410,   411,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,     0,   416,     0,
     417,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   429,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   438,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   464,     0,   465,   466,
       0,   467,   468,   469,     0,   470,     0,     0,   471,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,     0,     0,     0,   483,   484,   485,   486,
       0,     0,     0,   487,     0,     0,     0,   488,     0,   489,
     490,   491,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,     0,     0,
     513,   514,   515,   516,   517,   518,     0,     0,   519,   520,
     521,   522,     0,   523,   524,     0,     0,   525,   526,   527,
     528,     0,     0,   529,   530,     0,   531,   532,   533,   534,
       0,     0,     0,     0,     0,   535,   536,     0,     0,     0,
     537,   538,   539,     0,     0,   540,   541,     0,   542,   543,
       0,   544,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,     0,     0,     0,     0,     0,   551,
       0,   552,     0,     0,   553,     0,     0,     0,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,     0,
     559,   560,   561,     0,   562,   563,   564,   565,     0,     0,
     566,     0,     0,   567,   568,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,   573,   574,
     575,     0,   576,   577,   578,     0,   579,     0,     0,   580,
       0,   581,     0,     0,     0,     0,     0,     0,   582,   583,
       0,     0,   584,     0,   585,     0,   586,   587,     0,     0,
       0,   588,   589,   590,   591,   592,   593,   594,   595,     0,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
       0,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   630,   631,   632,   633,
     634,   199,   200,     0,   201,   202,   203,   204,   205,     0,
       0,   206,     0,     0,     0,  5238,   207,     0,  5239,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
       0,     0,   216,     0,     0,     0,   217,     0,     0,   218,
     219,   220,     0,   221,     0,   222,   223,     0,     0,   224,
       0,     0,   225,   226,     0,   227,   228,   229,     0,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,     0,   252,   253,   254,   255,
     256,     0,     0,     0,   257,     0,     0,     0,     0,   258,
       0,     0,   259,     0,     0,     0,   260,   261,   262,     0,
       0,   263,     0,     0,     0,     0,   264,   265,     0,     0,
       0,     0,   266,   267,     0,   268,     0,     0,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,   277,     0,     0,     0,   278,     0,
     279,   280,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   286,   287,   288,   289,   290,   291,     0,     0,   292,
     293,   294,   295,   296,     0,     0,   297,   298,     0,   299,
     300,   301,   302,   303,     0,     0,   304,   305,     0,     0,
       0,   306,   307,     0,   308,     0,     0,     0,   309,     0,
     310,   311,   312,   313,     0,   314,     0,   315,     0,     0,
       0,   316,   317,     0,   318,     0,     0,   319,   320,     0,
       0,     0,   321,   322,   323,   324,     0,     0,   325,   326,
     327,     0,     0,   328,     0,     0,     0,     0,   329,   330,
     331,     0,     0,     0,   332,     0,     0,     0,   333,   334,
       0,   335,   336,     0,     0,     0,   337,     0,   338,     0,
       0,   339,   340,     0,     0,   341,     0,     0,   342,   343,
       0,     0,     0,     0,     0,   344,   345,     0,   346,     0,
     347,     0,   348,   349,     0,     0,     0,     0,     0,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,     0,   372,   373,   374,   375,
       0,   376,   377,     0,     0,     0,     0,   378,   379,   380,
     381,   382,   383,     0,     0,   384,   385,     0,   386,     0,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,     0,   397,   398,     0,     0,   399,   400,   401,
     402,   403,     0,     0,     0,   404,   405,     0,     0,     0,
     406,     0,   407,   408,     0,   409,   410,   411,     0,     0,
     412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     413,   414,   415,     0,   416,     0,   417,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   429,   430,   431,     0,   432,     0,   433,   434,   435,
     436,   437,     0,   438,   439,   440,     0,     0,   441,     0,
       0,     0,   442,   443,     0,   444,   445,     0,     0,   446,
     447,   448,   449,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   464,     0,   465,   466,     0,   467,   468,   469,
       0,   470,     0,     0,   471,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,     0,
       0,     0,   483,   484,   485,   486,     0,     0,     0,   487,
       0,     0,     0,   488,     0,   489,   490,   491,   492,     0,
     493,   494,   495,   496,   497,     0,     0,     0,     0,     0,
     498,   499,   500,     0,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,     0,     0,   513,   514,   515,   516,
     517,   518,     0,     0,   519,   520,   521,   522,     0,   523,
     524,     0,     0,   525,   526,   527,   528,     0,     0,   529,
     530,     0,   531,   532,   533,   534,     0,     0,     0,     0,
       0,   535,   536,     0,     0,     0,   537,   538,   539,     0,
       0,   540,   541,     0,   542,   543,     0,   544,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
       0,     0,     0,     0,     0,   551,     0,   552,     0,     0,
     553,     0,     0,     0,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,     0,   559,   560,   561,     0,
     562,   563,   564,   565,     0,     0,   566,     0,     0,   567,
     568,   569,   570,   571,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,   573,   574,   575,     0,   576,   577,
     578,     0,   579,     0,     0,   580,     0,   581,     0,     0,
       0,     0,     0,     0,   582,   583,     0,     0,   584,     0,
     585,     0,   586,   587,     0,     0,     0,   588,   589,   590,
     591,   592,   593,   594,   595,     0,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,     0,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,     0,   630,   631,   632,   633,   634,   199,   200,     0,
     201,   202,   203,   204,   205,     0,     0,   206,     0,     0,
       0,     0,   207,     0,  2004,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,     0,     0,   216,     0,
       0,     0,   217,     0,     0,   218,   219,   220,     0,   221,
       0,   222,   223,     0,     0,   224,     0,     0,   225,   226,
       0,   227,   228,   229,     0,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,     0,   252,   253,   254,   255,   256,     0,     0,     0,
     257,     0,     0,     0,     0,   258,     0,     0,   259,     0,
       0,     0,   260,   261,   262,     0,     0,   263,     0,     0,
       0,     0,   264,   265,     0,     0,     0,     0,   266,   267,
       0,   268,     0,     0,     0,     0,     0,   269,   270,   271,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
     277,     0,     0,     0,   278,     0,   279,   280,     0,   281,
     282,   283,     0,     0,   284,   285,     0,   286,   287,   288,
     289,   290,   291,     0,     0,   292,   293,   294,   295,   296,
       0,     0,   297,   298,     0,   299,   300,   301,   302,   303,
       0,     0,   304,   305,     0,     0,     0,   306,   307,     0,
     308,     0,     0,     0,   309,     0,   310,   311,   312,   313,
       0,   314,     0,   315,     0,     0,     0,   316,   317,     0,
     318,     0,     0,   319,   320,     0,     0,     0,   321,   322,
     323,   324,     0,     0,   325,   326,   327,     0,     0,   328,
       0,     0,     0,     0,   329,   330,   331,     0,     0,     0,
     332,     0,     0,     0,   333,   334,     0,   335,   336,     0,
       0,     0,   337,     0,   338,     0,     0,   339,   340,     0,
       0,   341,     0,     0,   342,   343,     0,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,     0,   348,   349,
       0,     0,     0,     0,     0,     0,     0,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,     0,   372,   373,   374,   375,     0,   376,   377,     0,
       0,     0,     0,   378,   379,   380,   381,   382,   383,     0,
       0,   384,   385,     0,   386,     0,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,     0,   397,
     398,     0,     0,   399,   400,   401,   402,   403,     0,     0,
       0,   404,   405,     0,     0,     0,   406,     0,   407,   408,
       0,   409,   410,   411,     0,     0,   412,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   413,   414,   415,     0,
     416,     0,   417,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   429,   430,   431,
       0,   432,     0,   433,   434,   435,   436,   437,     0,   438,
     439,   440,     0,     0,   441,     0,     0,     0,   442,   443,
       0,   444,   445,     0,     0,   446,   447,   448,   449,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,     0,   464,     0,
     465,   466,     0,   467,   468,   469,     0,   470,     0,     0,
     471,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,     0,     0,     0,   483,   484,
     485,   486,     0,     0,     0,   487,     0,     0,     0,   488,
       0,   489,   490,   491,   492,     0,   493,   494,   495,   496,
     497,     0,     0,     0,     0,     0,   498,   499,   500,     0,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
       0,     0,   513,   514,   515,   516,   517,   518,     0,     0,
     519,   520,   521,   522,     0,   523,   524,     0,     0,   525,
     526,   527,   528,     0,     0,   529,   530,     0,   531,   532,
     533,   534,     0,     0,     0,     0,     0,   535,   536,     0,
       0,     0,   537,   538,   539,     0,     0,   540,   541,     0,
     542,   543,     0,   544,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,     0,     0,     0,     0,
       0,   551,     0,   552,     0,     0,   553,     0,     0,     0,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,     0,   559,   560,   561,     0,   562,   563,   564,   565,
       0,     0,   566,     0,     0,   567,   568,   569,   570,   571,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
     573,   574,   575,     0,   576,   577,   578,     0,   579,     0,
       0,   580,     0,   581,     0,     0,     0,     0,     0,     0,
     582,   583,     0,     0,   584,     0,   585,     0,   586,   587,
       0,     0,     0,   588,   589,   590,   591,   592,   593,   594,
     595,     0,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,     0,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,     0,   630,   631,
     632,   633,   634,   199,   200,     0,   201,   202,   203,   204,
     205,     0,     0,   206,     0,     0,     0,     0,   207,     0,
    5239,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,     0,     0,   216,     0,     0,     0,   217,     0,
       0,   218,   219,   220,     0,   221,     0,   222,   223,     0,
       0,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,     0,   252,   253,
     254,   255,   256,     0,     0,     0,   257,     0,     0,     0,
       0,   258,     0,     0,   259,     0,     0,     0,   260,   261,
     262,     0,     0,   263,     0,     0,     0,     0,   264,   265,
       0,     0,     0,     0,   266,   267,     0,   268,     0,     0,
       0,     0,     0,   269,   270,   271,   272,   273,     0,     0,
       0,   274,     0,     0,   275,   276,   277,     0,     0,     0,
     278,     0,   279,   280,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,   287,   288,   289,   290,   291,     0,
       0,   292,   293,   294,   295,   296,     0,     0,   297,   298,
       0,   299,   300,   301,   302,   303,     0,     0,   304,   305,
       0,     0,     0,   306,   307,     0,   308,     0,     0,     0,
     309,     0,   310,   311,   312,   313,     0,   314,     0,   315,
       0,     0,     0,   316,   317,     0,   318,     0,     0,   319,
     320,     0,     0,     0,   321,   322,   323,   324,     0,     0,
     325,   326,   327,     0,     0,   328,     0,     0,     0,     0,
     329,   330,   331,     0,     0,     0,   332,     0,     0,     0,
     333,   334,     0,   335,   336,     0,     0,     0,   337,     0,
     338,     0,     0,   339,   340,     0,     0,   341,     0,     0,
     342,   343,     0,     0,     0,     0,     0,   344,   345,     0,
     346,     0,   347,     0,   348,   349,     0,     0,     0,     0,
       0,     0,     0,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,     0,   372,   373,
     374,   375,     0,   376,   377,     0,     0,     0,     0,   378,
     379,   380,   381,   382,   383,     0,     0,   384,   385,     0,
     386,     0,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,     0,   397,   398,     0,     0,   399,
     400,   401,   402,   403,     0,     0,     0,   404,   405,     0,
       0,     0,   406,     0,   407,   408,     0,   409,   410,   411,
       0,     0,   412,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   413,   414,   415,     0,   416,     0,   417,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   429,   430,   431,     0,   432,     0,   433,
     434,   435,   436,   437,     0,   438,   439,   440,     0,     0,
     441,     0,     0,     0,   442,   443,     0,   444,   445,     0,
       0,   446,   447,   448,   449,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,     0,   464,     0,   465,   466,     0,   467,
     468,   469,     0,   470,     0,     0,   471,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,    42,     0,     0,   483,   484,   485,   486,     0,     0,
       0,   487,     0,     0,     0,   488,     0,   489,   490,   491,
     492,     0,   493,   494,   495,   496,   497,     0,     0,     0,
       0,     0,   498,   499,   500,     0,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,     0,     0,   513,   514,
     515,   516,   517,   518,     0,     0,   519,   520,   521,   522,
       0,   523,   524,     0,    49,   525,   526,   527,   528,     0,
       0,   529,   530,     0,   531,   532,   533,   534,     0,     0,
       0,     0,     0,   535,   536,     0,     0,     0,   537,   538,
     539,     0,     0,   540,   541,     0,   542,   543,     0,   544,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,     0,     0,     0,     0,     0,   551,    54,   552,
       0,     0,   553,     0,     0,     0,   554,     0,   555,   556,
     557,   558,     0,     0,     0,    55,     0,     0,   559,   560,
     561,     0,   562,   563,   564,   565,     0,     0,   566,     0,
       0,   567,   568,   569,   570,   571,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,   573,   574,   575,     0,
     576,   577,   578,     0,   579,     0,     0,   580,     0,   581,
       0,     0,     0,     0,     0,     0,   582,   583,     0,     0,
     584,     0,   585,     0,   586,   587,     0,     0,     0,   588,
     589,   590,   591,   592,   593,   594,   595,     0,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,     0,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,     0,   630,   631,   632,   633,   634,   199,
     200,     0,   201,   202,   203,   204,   205,     0,     0,   206,
       0,     0,   999,  3931,   207,     0,     0,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,     0,     0,
     216,     0,     0,     0,   217,     0,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,     0,     0,
     225,   226,     0,   227,   228,   229,     0,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,     0,   252,   253,   254,   255,   256,     0,
       0,     0,   257,     0,     0,     0,     0,   258,     0,     0,
     259,     0,     0,     0,   260,   261,   262,     0,     0,   263,
       0,     0,     0,     0,   264,   265,     0,     0,     0,     0,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,     0,     0,   292,   293,   294,
     295,   296,     0,     0,   297,   298,     0,   299,   300,   301,
     302,   303,     0,     0,   304,   305,     0,     0,     0,   306,
     307,     0,   308,     0,     0,     0,   309,     0,   310,   311,
     312,   313,     0,   314,     0,   315,     0,     0,     0,   316,
     317,     0,   318,     0,     0,   319,   320,     0,     0,     0,
     321,   322,   323,   324,     0,     0,   325,   326,   327,     0,
       0,   328,     0,     0,     0,     0,   329,   330,   331,     0,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,     0,     0,   339,
     340,     0,     0,   341,     0,     0,   342,   343,     0,     0,
       0,     0,     0,   344,   345,     0,   346,     0,   347,     0,
     348,   349,     0,     0,     0,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,     0,   372,   373,   374,   375,     0,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,     0,   384,   385,     0,   386,     0,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
       0,   397,   398,     0,     0,   399,   400,   401,   402,   403,
       0,     0,     0,   404,   405,     0,     0,     0,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,     0,   416,     0,   417,     0,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   438,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   470,
       0,     0,   471,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,     0,     0,     0,
     483,   484,   485,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,     0,     0,   513,   514,   515,   516,   517,   518,
       0,     0,   519,   520,   521,   522,     0,   523,   524,     0,
       0,   525,   526,   527,   528,     0,     0,   529,   530,     0,
     531,   532,   533,   534,     0,     0,     0,     0,     0,   535,
     536,     0,     0,     0,   537,   538,   539,     0,     0,   540,
     541,     0,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,     0,     0,
       0,     0,     0,   551,     0,   552,     0,     0,   553,     0,
       0,     0,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   566,     0,     0,   567,   568,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,   573,   574,   575,     0,   576,   577,   578,     0,
     579,     0,     0,   580,     0,   581,     0,     0,     0,     0,
       0,     0,   582,   583,     0,     0,   584,     0,   585,     0,
     586,   587,     0,     0,     0,   588,   589,   590,   591,   592,
     593,   594,   595,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,     0,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     630,   631,   632,   633,   634,   199,   200,     0,   201,   202,
     203,   204,   205,     0,     0,   206,     0,     0,     0,  4173,
     207,     0,     0,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,     0,     0,   216,     0,     0,     0,
     217,     0,     0,   218,   219,   220,     0,   221,     0,   222,
     223,     0,     0,   224,     0,     0,   225,   226,     0,   227,
     228,   229,     0,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,   255,   256,     0,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,   259,     0,     0,     0,
     260,   261,   262,     0,     0,   263,     0,     0,     0,     0,
     264,   265,     0,     0,     0,     0,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,   279,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
     291,     0,     0,   292,   293,   294,   295,   296,     0,     0,
     297,   298,     0,   299,   300,   301,   302,   303,     0,     0,
     304,   305,     0,     0,     0,   306,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   311,   312,   313,     0,   314,
       0,   315,     0,     0,     0,   316,   317,     0,   318,     0,
       0,   319,   320,     0,     0,     0,   321,   322,   323,   324,
       0,     0,   325,   326,   327,     0,     0,   328,     0,     0,
       0,     0,   329,   330,   331,     0,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,     0,     0,     0,
     337,     0,   338,     0,     0,   339,   340,     0,     0,   341,
       0,     0,   342,   343,     0,     0,     0,     0,     0,   344,
     345,     0,   346,     0,   347,     0,   348,   349,     0,     0,
       0,     0,     0,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,     0,
     372,   373,   374,   375,     0,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   382,   383,     0,     0,   384,
     385,     0,   386,     0,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,     0,   397,   398,     0,
       0,   399,   400,   401,   402,   403,     0,     0,     0,   404,
     405,     0,     0,     0,   406,     0,   407,   408,     0,   409,
     410,   411,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,     0,   416,     0,
     417,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   429,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   438,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   464,     0,   465,   466,
       0,   467,   468,   469,     0,   470,     0,     0,   471,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,     0,     0,     0,   483,   484,   485,   486,
       0,     0,     0,   487,     0,     0,     0,   488,     0,   489,
     490,   491,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,     0,     0,
     513,   514,   515,   516,   517,   518,     0,     0,   519,   520,
     521,   522,     0,   523,   524,     0,     0,   525,   526,   527,
     528,     0,     0,   529,   530,     0,   531,   532,   533,   534,
       0,     0,     0,     0,     0,   535,   536,     0,     0,     0,
     537,   538,   539,     0,     0,   540,   541,     0,   542,   543,
       0,   544,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,     0,     0,     0,     0,     0,   551,
       0,   552,     0,     0,   553,     0,     0,     0,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,     0,
     559,   560,   561,     0,   562,   563,   564,   565,     0,     0,
     566,     0,     0,   567,   568,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,   573,   574,
     575,     0,   576,   577,   578,     0,   579,     0,     0,   580,
       0,   581,     0,     0,     0,     0,     0,     0,   582,   583,
       0,     0,   584,     0,   585,     0,   586,   587,     0,     0,
       0,   588,   589,   590,   591,   592,   593,   594,   595,     0,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
       0,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   630,   631,   632,   633,
     634,   199,   200,     0,   201,   202,   203,   204,   205,     0,
       0,   206,     0,     0,     0,  4177,   207,     0,     0,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
       0,     0,   216,     0,     0,     0,   217,     0,     0,   218,
     219,   220,     0,   221,     0,   222,   223,     0,     0,   224,
       0,     0,   225,   226,     0,   227,   228,   229,     0,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,  2324,   252,   253,   254,   255,
     256,     0,     0,     0,   257,     0,     0,     0,     0,   258,
       0,     0,   259,     0,     0,     0,   260,   261,   262,     0,
       0,   263,     0,     0,     0,     0,   264,   265,     0,     0,
       0,     0,   266,   267,     0,   268,     0,     0,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,   277,     0,     0,     0,   278,     0,
     279,   280,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   286,   287,   288,   289,   290,   291,     0,     0,   292,
     293,   294,   295,   296,     0,     0,   297,   298,     0,   299,
     300,   301,   302,   303,     0,     0,   304,   305,     0,     0,
       0,   306,   307,     0,   308,  2325,     0,     0,   309,     0,
     310,   311,   312,   313,     0,   314,     0,   315,     0,     0,
       0,   316,   317,     0,   318,     0,     0,   319,   320,     0,
       0,     0,   321,   322,   323,   324,     0,     0,   325,   326,
     327,  1704,     0,   328,     0,     0,     0,     0,   329,   330,
     331,     0,     0,     0,   332,     0,     0,     0,   333,   334,
       0,   335,   336,     0,     0,     0,   337,     0,   338,  1705,
       0,   339,   340,     0,     0,   341,     0,     0,   342,   343,
       0,  3770,     0,     0,     0,   344,   345,     0,   346,     0,
     347,     0,   348,   349,     0,     0,     0,     0,     0,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,     0,   372,   373,   374,   375,
       0,   376,   377,     0,     0,     0,     0,   378,   379,   380,
     381,   382,   383,     0,     0,   384,   385,     0,   386,     0,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,     0,   397,   398,     0,     0,   399,   400,   401,
     402,   403,     0,     0,     0,   404,   405,     0,     0,     0,
     406,     0,   407,   408,     0,   409,   410,   411,     0,     0,
     412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     413,   414,   415,     0,   416,     0,   417,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   429,   430,   431,     0,   432,     0,   433,   434,   435,
     436,   437,     0,   438,   439,   440,     0,     0,   441,     0,
       0,     0,   442,   443,     0,   444,   445,     0,     0,   446,
     447,   448,   449,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   464,     0,   465,   466,     0,   467,   468,   469,
       0,   470,     0,     0,   471,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,    42,
       0,     0,   483,   484,   485,   486,     0,     0,     0,   487,
       0,     0,     0,   488,     0,   489,   490,   491,   492,     0,
     493,   494,   495,   496,   497,  2327,     0,     0,     0,     0,
     498,   499,   500,     0,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,     0,     0,   513,   514,   515,   516,
     517,   518,     0,     0,   519,   520,   521,   522,     0,   523,
     524,     0,    49,   525,   526,   527,   528,     0,     0,   529,
     530,     0,   531,   532,   533,   534,     0,     0,     0,     0,
       0,   535,   536,     0,     0,     0,   537,   538,   539,     0,
       0,   540,   541,     0,   542,   543,     0,   544,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
       0,     0,     0,     0,     0,   551,    54,   552,     0,     0,
     553,     0,     0,     0,   554,     0,   555,   556,   557,   558,
       0,     0,     0,    55,     0,     0,   559,   560,   561,     0,
     562,   563,   564,   565,     0,     0,   566,     0,     0,   567,
     568,   569,   570,   571,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,   573,   574,   575,     0,   576,   577,
     578,     0,   579,     0,     0,   580,     0,   581,     0,     0,
       0,     0,     0,     0,   582,   583,     0,     0,   584,     0,
     585,     0,   586,   587,     0,     0,     0,   588,   589,   590,
     591,   592,   593,   594,   595,     0,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,     0,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,     0,   630,   631,   632,   633,   634,   199,   200,     0,
     201,   202,   203,   204,   205,     0,     0,   206,     0,     0,
     999,     0,   207,     0,     0,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,     0,     0,   216,     0,
       0,     0,   217,     0,     0,   218,   219,   220,     0,   221,
       0,   222,   223,     0,     0,   224,     0,     0,   225,   226,
       0,   227,   228,   229,     0,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,     0,   252,   253,   254,   255,   256,     0,     0,     0,
     257,     0,     0,     0,     0,   258,     0,     0,   259,     0,
       0,     0,   260,   261,   262,     0,     0,   263,     0,     0,
       0,     0,   264,   265,     0,     0,     0,     0,   266,   267,
       0,   268,     0,     0,     0,     0,     0,   269,   270,   271,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
     277,     0,     0,     0,   278,     0,   279,   280,     0,   281,
     282,   283,     0,     0,   284,   285,     0,   286,   287,   288,
     289,   290,   291,     0,     0,   292,   293,   294,   295,   296,
       0,     0,   297,   298,     0,   299,   300,   301,   302,   303,
       0,     0,   304,   305,     0,     0,     0,   306,   307,     0,
     308,     0,     0,     0,   309,     0,   310,   311,   312,   313,
       0,   314,     0,   315,     0,     0,     0,   316,   317,     0,
     318,     0,     0,   319,   320,     0,     0,     0,   321,   322,
     323,   324,     0,     0,   325,   326,   327,     0,     0,   328,
       0,     0,     0,     0,   329,   330,   331,     0,     0,     0,
     332,     0,     0,     0,   333,   334,     0,   335,   336,     0,
       0,     0,   337,     0,   338,     0,     0,   339,   340,     0,
       0,   341,     0,     0,   342,   343,     0,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,     0,   348,   349,
       0,     0,     0,     0,     0,     0,     0,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,     0,   372,   373,   374,   375,     0,   376,   377,     0,
       0,     0,     0,   378,   379,   380,   381,   382,   383,     0,
       0,   384,   385,     0,   386,     0,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,     0,   397,
     398,     0,     0,   399,   400,   401,   402,   403,     0,     0,
       0,   404,   405,     0,     0,     0,   406,     0,   407,   408,
       0,   409,   410,   411,     0,     0,   412,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   413,   414,   415,     0,
     416,     0,   417,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   429,   430,   431,
       0,   432,     0,   433,   434,   435,   436,   437,     0,   438,
     439,   440,     0,     0,   441,     0,     0,     0,   442,   443,
       0,   444,   445,     0,     0,   446,   447,   448,   449,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,     0,   464,     0,
     465,   466,     0,   467,   468,   469,     0,   470,     0,     0,
     471,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,     0,     0,     0,   483,   484,
     485,   486,     0,     0,     0,   487,     0,     0,     0,   488,
       0,   489,   490,   491,   492,     0,   493,   494,   495,   496,
     497,     0,     0,     0,     0,     0,   498,   499,   500,     0,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
       0,     0,   513,   514,   515,   516,   517,   518,     0,     0,
     519,   520,   521,   522,     0,   523,   524,     0,     0,   525,
     526,   527,   528,     0,     0,   529,   530,     0,   531,   532,
     533,   534,     0,     0,     0,     0,     0,   535,   536,     0,
       0,     0,   537,   538,   539,     0,     0,   540,   541,     0,
     542,   543,     0,   544,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,     0,     0,     0,     0,
       0,   551,     0,   552,     0,     0,   553,     0,     0,     0,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,     0,   559,   560,   561,     0,   562,   563,   564,   565,
       0,     0,   566,     0,     0,   567,   568,   569,   570,   571,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
     573,   574,   575,     0,   576,   577,   578,     0,   579,     0,
       0,   580,     0,   581,     0,     0,     0,     0,     0,     0,
     582,   583,     0,     0,   584,     0,   585,     0,   586,   587,
       0,     0,  2750,   588,   589,   590,   591,   592,   593,   594,
     595,     0,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,  2751,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,     0,   630,   631,
     632,   633,   634,   199,   200,     0,   201,   202,   203,   204,
     205,     0,     0,   206,     0,     0,  2752,     0,   207,     0,
       0,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,     0,     0,   216,     0,     0,     0,   217,     0,
       0,   218,   219,   220,     0,   221,     0,   222,   223,     0,
       0,   224,     0,     0,   225,   226,     0,   227,   228,   229,
       0,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,     0,   252,   253,
     254,   255,   256,     0,     0,     0,   257,     0,     0,     0,
       0,   258,     0,     0,   259,     0,     0,     0,   260,   261,
     262,     0,     0,   263,     0,     0,     0,     0,   264,   265,
       0,     0,     0,     0,   266,   267,     0,   268,     0,     0,
       0,     0,     0,   269,   270,   271,   272,   273,     0,     0,
       0,   274,     0,     0,   275,   276,   277,     0,     0,     0,
     278,     0,   279,   280,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,   287,   288,   289,   290,   291,     0,
       0,   292,   293,   294,   295,   296,     0,     0,   297,   298,
       0,   299,   300,   301,   302,   303,     0,     0,   304,   305,
       0,     0,     0,   306,   307,     0,   308,     0,     0,     0,
     309,     0,   310,   311,   312,   313,     0,   314,     0,   315,
       0,     0,     0,   316,   317,     0,   318,     0,     0,   319,
     320,     0,     0,     0,   321,   322,   323,   324,     0,     0,
     325,   326,   327,     0,     0,   328,     0,     0,     0,     0,
     329,   330,   331,     0,     0,     0,   332,     0,     0,     0,
     333,   334,     0,   335,   336,     0,     0,     0,   337,     0,
     338,     0,     0,   339,   340,     0,     0,   341,     0,     0,
     342,   343,     0,     0,     0,     0,     0,   344,   345,     0,
     346,     0,   347,     0,   348,   349,     0,     0,     0,     0,
       0,     0,     0,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,     0,   372,   373,
     374,   375,     0,   376,   377,     0,     0,     0,     0,   378,
     379,   380,   381,   382,   383,     0,     0,   384,   385,     0,
     386,     0,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,     0,   397,   398,     0,     0,   399,
     400,   401,   402,   403,     0,     0,     0,   404,   405,     0,
       0,     0,   406,     0,   407,   408,     0,   409,   410,   411,
       0,     0,   412,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   413,   414,   415,     0,   416,     0,   417,     0,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   429,   430,   431,     0,   432,     0,   433,
     434,   435,   436,   437,     0,   438,   439,   440,     0,     0,
     441,     0,     0,     0,   442,   443,     0,   444,   445,     0,
       0,   446,   447,   448,   449,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,   457,   458,   459,   460,
     461,   462,   463,     0,   464,     0,   465,   466,     0,   467,
     468,   469,     0,   470,     0,     0,   471,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,     0,     0,     0,   483,   484,   485,   486,     0,     0,
       0,   487,     0,     0,     0,   488,     0,   489,   490,   491,
     492,     0,   493,   494,   495,   496,   497,     0,     0,     0,
       0,     0,   498,   499,   500,     0,   501,     0,     0,   502,
       0,     0,   503,     0,   504,     0,   505,   506,   507,   508,
     509,   510,     0,     0,   511,   512,     0,     0,   513,   514,
     515,   516,   517,   518,     0,     0,   519,   520,   521,   522,
       0,   523,   524,     0,     0,   525,   526,   527,   528,     0,
       0,   529,   530,     0,   531,   532,   533,   534,     0,     0,
       0,     0,     0,   535,   536,     0,     0,     0,   537,   538,
     539,     0,     0,   540,   541,     0,   542,   543,     0,   544,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,     0,     0,     0,     0,     0,   551,     0,   552,
       0,     0,   553,     0,     0,     0,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,     0,   559,   560,
     561,     0,   562,   563,   564,   565,     0,     0,   566,     0,
       0,   567,   568,   569,   570,   571,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,   573,   574,   575,     0,
     576,   577,   578,     0,   579,     0,     0,   580,     0,   581,
       0,     0,     0,     0,     0,     0,   582,   583,     0,     0,
     584,     0,   585,     0,   586,   587,     0,     0,     0,   588,
     589,   590,   591,   592,   593,   594,   595,     0,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,     0,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,     0,   630,   631,   632,   633,   634,   199,
     200,     0,   201,   202,   203,   204,   205,     0,     0,   206,
       0,     0,  1155,     0,   207,     0,     0,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,     0,     0,
     216,     0,     0,     0,   217,     0,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,     0,     0,
     225,   226,     0,   227,   228,   229,     0,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,     0,   252,   253,   254,   255,   256,     0,
       0,     0,   257,     0,     0,     0,     0,   258,     0,     0,
     259,     0,     0,     0,   260,   261,   262,     0,     0,   263,
       0,     0,     0,     0,   264,   265,     0,     0,     0,     0,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,     0,     0,   292,   293,   294,
     295,   296,     0,     0,   297,   298,     0,   299,   300,   301,
     302,   303,     0,     0,   304,   305,     0,     0,     0,   306,
     307,     0,   308,     0,     0,     0,   309,     0,   310,   311,
     312,   313,     0,   314,     0,   315,     0,     0,     0,   316,
     317,     0,   318,     0,     0,   319,   320,     0,     0,     0,
     321,   322,   323,   324,     0,     0,   325,   326,   327,     0,
       0,   328,     0,     0,     0,     0,   329,   330,   331,     0,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,     0,     0,   339,
     340,     0,     0,   341,     0,     0,   342,   343,     0,     0,
       0,     0,     0,   344,   345,     0,   346,     0,   347,     0,
     348,   349,     0,     0,     0,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,     0,   372,   373,   374,   375,     0,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,     0,   384,   385,     0,   386,     0,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
       0,   397,   398,     0,     0,   399,   400,   401,   402,   403,
       0,     0,     0,   404,   405,     0,     0,     0,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,     0,   416,     0,   417,     0,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   438,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   470,
       0,     0,   471,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,     0,     0,     0,
     483,   484,   485,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,     0,     0,   513,   514,   515,   516,   517,   518,
       0,     0,   519,   520,   521,   522,     0,   523,   524,     0,
       0,   525,   526,   527,   528,     0,     0,   529,   530,     0,
     531,   532,   533,   534,     0,     0,     0,     0,     0,   535,
     536,     0,     0,     0,   537,   538,   539,     0,     0,   540,
     541,     0,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,     0,     0,
       0,     0,     0,   551,     0,   552,     0,     0,   553,     0,
       0,     0,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   566,     0,     0,   567,   568,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,   573,   574,   575,     0,   576,   577,   578,     0,
     579,     0,     0,   580,     0,   581,     0,     0,     0,     0,
       0,     0,   582,   583,     0,     0,   584,     0,   585,     0,
     586,   587,     0,     0,     0,   588,   589,   590,   591,   592,
     593,   594,   595,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,     0,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     630,   631,   632,   633,   634,   199,   200,     0,   201,   202,
     203,   204,   205,     0,     0,   206,     0,     0,  3008,     0,
     207,     0,     0,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,     0,     0,   216,     0,     0,     0,
     217,     0,     0,   218,   219,   220,     0,   221,     0,   222,
     223,     0,     0,   224,     0,     0,   225,   226,     0,   227,
     228,   229,     0,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,     0,
     252,   253,   254,   255,   256,     0,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,   259,     0,     0,     0,
     260,   261,   262,     0,     0,   263,     0,     0,     0,     0,
     264,   265,     0,     0,     0,     0,   266,   267,     0,   268,
       0,     0,     0,     0,     0,   269,   270,   271,   272,   273,
       0,     0,     0,   274,     0,     0,   275,   276,   277,     0,
       0,     0,   278,     0,   279,   280,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,   287,   288,   289,   290,
     291,     0,     0,   292,   293,   294,   295,   296,     0,     0,
     297,   298,     0,   299,   300,   301,   302,   303,     0,     0,
     304,   305,     0,     0,     0,   306,   307,     0,   308,     0,
       0,     0,   309,     0,   310,   311,   312,   313,     0,   314,
       0,   315,     0,     0,     0,   316,   317,     0,   318,     0,
       0,   319,   320,     0,     0,     0,   321,   322,   323,   324,
       0,     0,   325,   326,   327,     0,     0,   328,     0,     0,
       0,     0,   329,   330,   331,     0,     0,     0,   332,     0,
       0,     0,   333,   334,     0,   335,   336,     0,     0,     0,
     337,     0,   338,     0,     0,   339,   340,     0,     0,   341,
       0,     0,   342,   343,     0,     0,     0,     0,     0,   344,
     345,     0,   346,     0,   347,     0,   348,   349,     0,     0,
       0,     0,     0,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,     0,
     372,   373,   374,   375,     0,   376,   377,     0,     0,     0,
       0,   378,   379,   380,   381,   382,   383,     0,     0,   384,
     385,     0,   386,     0,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,     0,   397,   398,     0,
       0,   399,   400,   401,   402,   403,     0,     0,     0,   404,
     405,     0,     0,     0,   406,     0,   407,   408,     0,   409,
     410,   411,     0,     0,   412,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   413,   414,   415,     0,   416,     0,
     417,     0,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   429,   430,   431,     0,   432,
       0,   433,   434,   435,   436,   437,     0,   438,   439,   440,
       0,     0,   441,     0,     0,     0,   442,   443,     0,   444,
     445,     0,     0,   446,   447,   448,   449,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,   457,   458,
     459,   460,   461,   462,   463,     0,   464,     0,   465,   466,
       0,   467,   468,   469,     0,   470,     0,     0,   471,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,     0,     0,     0,   483,   484,   485,   486,
       0,     0,     0,   487,     0,     0,     0,   488,     0,   489,
     490,   491,   492,     0,   493,   494,   495,   496,   497,     0,
       0,     0,     0,     0,   498,   499,   500,     0,   501,     0,
       0,   502,     0,     0,   503,     0,   504,     0,   505,   506,
     507,   508,   509,   510,     0,     0,   511,   512,     0,     0,
     513,   514,   515,   516,   517,   518,     0,     0,   519,   520,
     521,   522,     0,   523,   524,     0,     0,   525,   526,   527,
     528,     0,     0,   529,   530,     0,   531,   532,   533,   534,
       0,     0,     0,     0,     0,   535,   536,     0,     0,     0,
     537,   538,   539,     0,     0,   540,   541,     0,   542,   543,
       0,   544,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,     0,     0,     0,     0,     0,   551,
       0,   552,     0,     0,   553,     0,     0,     0,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,     0,
     559,   560,   561,     0,   562,   563,   564,   565,     0,     0,
     566,     0,     0,   567,   568,   569,   570,   571,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,   573,   574,
     575,     0,   576,   577,   578,     0,   579,     0,     0,   580,
       0,   581,     0,     0,     0,     0,     0,     0,   582,   583,
       0,     0,   584,     0,   585,     0,   586,   587,     0,     0,
       0,   588,   589,   590,   591,   592,   593,   594,   595,     0,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
       0,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,     0,   630,   631,   632,   633,
     634,   199,   200,     0,   201,   202,   203,   204,   205,     0,
       0,   206,     0,     0,  3314,     0,   207,     0,     0,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
       0,     0,   216,     0,     0,     0,   217,     0,     0,   218,
     219,   220,     0,   221,     0,   222,   223,     0,     0,   224,
       0,     0,   225,   226,     0,   227,   228,   229,     0,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,     0,   252,   253,   254,   255,
     256,     0,     0,     0,   257,     0,     0,     0,     0,   258,
       0,     0,   259,     0,     0,     0,   260,   261,   262,     0,
       0,   263,     0,     0,     0,     0,   264,   265,     0,     0,
       0,     0,   266,   267,     0,   268,     0,     0,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,   277,     0,     0,     0,   278,     0,
     279,   280,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   286,   287,   288,   289,   290,   291,     0,     0,   292,
     293,   294,   295,   296,     0,     0,   297,   298,     0,   299,
     300,   301,   302,   303,     0,     0,   304,   305,     0,     0,
       0,   306,   307,     0,   308,     0,     0,     0,   309,     0,
     310,   311,   312,   313,     0,   314,     0,   315,     0,     0,
       0,   316,   317,     0,   318,     0,     0,   319,   320,     0,
       0,     0,   321,   322,   323,   324,     0,     0,   325,   326,
     327,     0,     0,   328,     0,     0,     0,     0,   329,   330,
     331,     0,     0,     0,   332,     0,     0,     0,   333,   334,
       0,   335,   336,     0,     0,     0,   337,     0,   338,     0,
       0,   339,   340,     0,     0,   341,     0,     0,   342,   343,
       0,     0,     0,     0,     0,   344,   345,     0,   346,     0,
     347,     0,   348,   349,     0,     0,     0,     0,     0,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,     0,   372,   373,   374,   375,
       0,   376,   377,     0,     0,     0,     0,   378,   379,   380,
     381,   382,   383,     0,     0,   384,   385,     0,   386,     0,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,     0,   397,   398,     0,     0,   399,   400,   401,
     402,   403,     0,     0,     0,   404,   405,     0,     0,     0,
     406,     0,   407,   408,     0,   409,   410,   411,     0,     0,
     412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     413,   414,   415,     0,   416,     0,   417,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   429,   430,   431,     0,   432,     0,   433,   434,   435,
     436,   437,     0,   438,   439,   440,     0,     0,   441,     0,
       0,     0,   442,   443,     0,   444,   445,     0,     0,   446,
     447,   448,   449,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   464,     0,   465,   466,     0,   467,   468,   469,
       0,   470,     0,     0,   471,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,     0,
       0,     0,   483,   484,   485,   486,     0,     0,     0,   487,
       0,     0,     0,   488,     0,   489,   490,   491,   492,     0,
     493,   494,   495,   496,   497,     0,     0,     0,     0,     0,
     498,   499,   500,     0,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,     0,     0,   513,   514,   515,   516,
     517,   518,     0,     0,   519,   520,   521,   522,     0,   523,
     524,     0,     0,   525,   526,   527,   528,     0,     0,   529,
     530,     0,   531,   532,   533,   534,     0,     0,     0,     0,
       0,   535,   536,     0,     0,     0,   537,   538,   539,     0,
       0,   540,   541,     0,   542,   543,     0,   544,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
       0,     0,     0,     0,     0,   551,     0,   552,     0,     0,
     553,     0,     0,     0,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,     0,   559,   560,   561,     0,
     562,   563,   564,   565,     0,     0,   566,     0,     0,   567,
     568,   569,   570,   571,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,   573,   574,   575,     0,   576,   577,
     578,     0,   579,     0,     0,   580,     0,   581,     0,     0,
       0,     0,     0,     0,   582,   583,     0,     0,   584,     0,
     585,     0,   586,   587,     0,     0,     0,   588,   589,   590,
     591,   592,   593,   594,   595,     0,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,     0,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,     0,   630,   631,   632,   633,   634,   199,   200,     0,
     201,   202,   203,   204,   205,     0,     0,   206,     0,     0,
    4057,     0,   207,     0,     0,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,     0,     0,   216,     0,
       0,     0,   217,     0,     0,   218,   219,   220,     0,   221,
       0,   222,   223,     0,     0,   224,     0,     0,   225,   226,
       0,   227,   228,   229,     0,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,     0,   252,   253,   254,   255,   256,     0,     0,     0,
     257,     0,     0,     0,     0,   258,     0,     0,   259,     0,
       0,     0,   260,   261,   262,     0,     0,   263,     0,     0,
       0,     0,   264,   265,     0,     0,     0,     0,   266,   267,
       0,   268,     0,     0,     0,     0,     0,   269,   270,   271,
     272,   273,     0,     0,     0,   274,     0,     0,   275,   276,
     277,     0,     0,     0,   278,     0,   279,   280,     0,   281,
     282,   283,     0,     0,   284,   285,     0,   286,   287,   288,
     289,   290,   291,     0,     0,   292,   293,   294,   295,   296,
       0,     0,   297,   298,     0,   299,   300,   301,   302,   303,
       0,     0,   304,   305,     0,     0,     0,   306,   307,     0,
     308,     0,     0,     0,   309,     0,   310,   311,   312,   313,
       0,   314,     0,   315,     0,     0,     0,   316,   317,     0,
     318,     0,     0,   319,   320,     0,     0,     0,   321,   322,
     323,   324,     0,     0,   325,   326,   327,     0,     0,   328,
       0,     0,     0,     0,   329,   330,   331,     0,     0,     0,
     332,     0,     0,     0,   333,   334,     0,   335,   336,     0,
       0,     0,   337,     0,   338,     0,     0,   339,   340,     0,
       0,   341,     0,     0,   342,   343,     0,     0,     0,     0,
       0,   344,   345,     0,   346,     0,   347,     0,   348,   349,
       0,     0,     0,     0,     0,     0,     0,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,     0,   372,   373,   374,   375,     0,   376,   377,     0,
       0,     0,     0,   378,   379,   380,   381,   382,   383,     0,
       0,   384,   385,     0,   386,     0,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,     0,   397,
     398,     0,     0,   399,   400,   401,   402,   403,     0,     0,
       0,   404,   405,     0,     0,     0,   406,     0,   407,   408,
       0,   409,   410,   411,     0,     0,   412,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   413,   414,   415,     0,
     416,     0,   417,     0,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   429,   430,   431,
       0,   432,     0,   433,   434,   435,   436,   437,     0,   438,
     439,   440,     0,     0,   441,     0,     0,     0,   442,   443,
       0,   444,   445,     0,     0,   446,   447,   448,   449,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
     457,   458,   459,   460,   461,   462,   463,     0,   464,     0,
     465,   466,     0,   467,   468,   469,     0,   470,     0,     0,
     471,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,     0,     0,     0,   483,   484,
     485,   486,     0,     0,     0,   487,     0,     0,     0,   488,
       0,   489,   490,   491,   492,     0,   493,   494,   495,   496,
     497,     0,     0,     0,     0,     0,   498,   499,   500,     0,
     501,     0,     0,   502,     0,     0,   503,     0,   504,     0,
     505,   506,   507,   508,   509,   510,     0,     0,   511,   512,
       0,     0,   513,   514,   515,   516,   517,   518,     0,     0,
     519,   520,   521,   522,     0,   523,   524,     0,     0,   525,
     526,   527,   528,     0,     0,   529,   530,     0,   531,   532,
     533,   534,     0,     0,     0,     0,     0,   535,   536,     0,
       0,     0,   537,   538,   539,     0,     0,   540,   541,     0,
     542,   543,     0,   544,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,     0,     0,     0,     0,
       0,   551,     0,   552,     0,     0,   553,     0,     0,     0,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,     0,   559,   560,   561,     0,   562,   563,   564,   565,
       0,     0,   566,     0,     0,   567,   568,   569,   570,   571,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
     573,   574,   575,     0,   576,   577,   578,     0,   579,     0,
       0,   580,     0,   581,     0,     0,     0,     0,     0,     0,
     582,   583,     0,     0,   584,     0,   585,     0,   586,   587,
       0,     0,     0,   588,   589,   590,   591,   592,   593,   594,
     595,     0,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,     0,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,     0,   630,   631,
     632,   633,   634,     0,     0,     0,     0,     0,   199,   200,
    1962,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,     0,     0,     0,     0,     0,   199,
     200,  2691,   201,   202,   203,   204,   205,     0,     0,   206,
       0,     0,     0,     0,   207,     0,     0,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,     0,     0,
     216,     0,     0,     0,   217,     0,     0,   218,   219,   220,
       0,   221,     0,   222,   223,     0,     0,   224,     0,     0,
     225,   226,     0,   227,   228,   229,     0,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,     0,   252,   253,   254,   255,   256,     0,
       0,     0,   257,     0,     0,     0,     0,   258,     0,     0,
     259,     0,     0,     0,   260,   261,   262,     0,     0,   263,
       0,     0,     0,     0,   264,   265,     0,     0,     0,     0,
     266,   267,     0,   268,     0,     0,     0,     0,     0,   269,
     270,   271,   272,   273,     0,     0,     0,   274,     0,     0,
     275,   276,   277,     0,     0,     0,   278,     0,   279,   280,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
     287,   288,   289,   290,   291,     0,     0,   292,   293,   294,
     295,   296,     0,     0,   297,   298,     0,   299,   300,   301,
     302,   303,     0,     0,   304,   305,     0,     0,     0,   306,
     307,     0,   308,     0,     0,     0,   309,     0,   310,   311,
     312,   313,     0,   314,     0,   315,     0,     0,     0,   316,
     317,     0,   318,     0,     0,   319,   320,     0,     0,     0,
     321,   322,   323,   324,     0,     0,   325,   326,   327,     0,
       0,   328,     0,     0,     0,     0,   329,   330,   331,     0,
       0,     0,   332,     0,     0,     0,   333,   334,     0,   335,
     336,     0,     0,     0,   337,     0,   338,     0,     0,   339,
     340,     0,     0,   341,     0,     0,   342,   343,     0,     0,
       0,     0,     0,   344,   345,     0,   346,     0,   347,     0,
     348,   349,     0,     0,     0,     0,     0,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,     0,   372,   373,   374,   375,     0,   376,
     377,     0,     0,     0,     0,   378,   379,   380,   381,   382,
     383,     0,     0,   384,   385,     0,   386,     0,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
       0,   397,   398,     0,     0,   399,   400,   401,   402,   403,
       0,     0,     0,   404,   405,     0,     0,     0,   406,     0,
     407,   408,     0,   409,   410,   411,     0,     0,   412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   413,   414,
     415,     0,   416,     0,   417,     0,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   429,
     430,   431,     0,   432,     0,   433,   434,   435,   436,   437,
       0,   438,   439,   440,     0,     0,   441,     0,     0,     0,
     442,   443,     0,   444,   445,     0,     0,   446,   447,   448,
     449,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,     0,   465,   466,     0,   467,   468,   469,     0,   470,
       0,     0,   471,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,     0,     0,     0,
     483,   484,   485,   486,     0,     0,     0,   487,     0,     0,
       0,   488,     0,   489,   490,   491,   492,     0,   493,   494,
     495,   496,   497,     0,     0,     0,     0,     0,   498,   499,
     500,     0,   501,     0,     0,   502,     0,     0,   503,     0,
     504,     0,   505,   506,   507,   508,   509,   510,     0,     0,
     511,   512,     0,     0,   513,   514,   515,   516,   517,   518,
       0,     0,   519,   520,   521,   522,     0,   523,   524,     0,
       0,   525,   526,   527,   528,     0,     0,   529,   530,     0,
     531,   532,   533,   534,     0,     0,     0,     0,     0,   535,
     536,     0,     0,     0,   537,   538,   539,     0,     0,   540,
     541,     0,   542,   543,     0,   544,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,     0,     0,
       0,     0,     0,   551,     0,   552,     0,     0,   553,     0,
       0,     0,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,     0,   559,   560,   561,     0,   562,   563,
     564,   565,     0,     0,   566,     0,     0,   567,   568,   569,
     570,   571,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,   573,   574,   575,     0,   576,   577,   578,     0,
     579,     0,     0,   580,     0,   581,     0,     0,     0,     0,
       0,     0,   582,   583,     0,     0,   584,     0,   585,     0,
     586,   587,     0,     0,     0,   588,   589,   590,   591,   592,
     593,   594,   595,     0,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,     0,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,     0,
     630,   631,   632,   633,   634,     0,     0,     0,     0,     0,
     199,   200,  3346,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,     0,     0,     0,     0,
       0,   199,   200,  3528,   201,   202,   203,   204,   205,     0,
       0,   206,     0,     0,     0,     0,   207,     0,     0,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
       0,     0,   216,     0,     0,     0,   217,     0,     0,   218,
     219,   220,     0,   221,     0,   222,   223,     0,     0,   224,
       0,     0,   225,   226,     0,   227,   228,   229,     0,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,     0,   252,   253,   254,   255,
     256,     0,     0,     0,   257,     0,     0,     0,     0,   258,
       0,     0,   259,     0,     0,     0,   260,   261,   262,     0,
       0,   263,     0,     0,     0,     0,   264,   265,     0,     0,
       0,     0,   266,   267,     0,   268,     0,     0,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,     0,   274,
       0,     0,   275,   276,   277,     0,     0,     0,   278,     0,
     279,   280,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   286,   287,   288,   289,   290,   291,     0,     0,   292,
     293,   294,   295,   296,     0,     0,   297,   298,     0,   299,
     300,   301,   302,   303,     0,     0,   304,   305,     0,     0,
       0,   306,   307,     0,   308,     0,     0,     0,   309,     0,
     310,   311,   312,   313,     0,   314,     0,   315,     0,     0,
       0,   316,   317,     0,   318,     0,     0,   319,   320,     0,
       0,     0,   321,   322,   323,   324,     0,     0,   325,   326,
     327,     0,     0,   328,     0,     0,     0,     0,   329,   330,
     331,     0,     0,     0,   332,     0,     0,     0,   333,   334,
       0,   335,   336,     0,     0,     0,   337,     0,   338,     0,
       0,   339,   340,     0,     0,   341,     0,     0,   342,   343,
       0,     0,     0,     0,     0,   344,   345,     0,   346,     0,
     347,     0,   348,   349,     0,     0,     0,     0,     0,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,     0,   372,   373,   374,   375,
       0,   376,   377,     0,     0,     0,     0,   378,   379,   380,
     381,   382,   383,     0,     0,   384,   385,     0,   386,     0,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,     0,   397,   398,     0,     0,   399,   400,   401,
     402,   403,     0,     0,     0,   404,   405,     0,     0,     0,
     406,     0,   407,   408,     0,   409,   410,   411,     0,     0,
     412,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     413,   414,   415,     0,   416,     0,   417,     0,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   429,   430,   431,     0,   432,     0,   433,   434,   435,
     436,   437,     0,   438,   439,   440,     0,     0,   441,     0,
       0,     0,   442,   443,     0,   444,   445,     0,     0,   446,
     447,   448,   449,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,   457,   458,   459,   460,   461,   462,
     463,     0,   464,     0,   465,   466,     0,   467,   468,   469,
       0,   470,     0,     0,   471,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,     0,
       0,     0,   483,   484,   485,   486,     0,     0,     0,   487,
       0,     0,     0,   488,     0,   489,   490,   491,   492,     0,
     493,   494,   495,   496,   497,     0,     0,     0,     0,     0,
     498,   499,   500,     0,   501,     0,     0,   502,     0,     0,
     503,     0,   504,     0,   505,   506,   507,   508,   509,   510,
       0,     0,   511,   512,     0,     0,   513,   514,   515,   516,
     517,   518,     0,     0,   519,   520,   521,   522,     0,   523,
     524,     0,     0,   525,   526,   527,   528,     0,     0,   529,
     530,     0,   531,   532,   533,   534,     0,     0,     0,     0,
       0,   535,   536,     0,     0,     0,   537,   538,   539,     0,
       0,   540,   541,     0,   542,   543,     0,   544,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
       0,     0,     0,     0,     0,   551,     0,   552,     0,     0,
     553,     0,     0,     0,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,     0,   559,   560,   561,     0,
     562,   563,   564,   565,     0,     0,   566,     0,     0,   567,
     568,   569,   570,   571,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,   573,   574,   575,     0,   576,   577,
     578,     0,   579,     0,     0,   580,     0,   581,     0,     0,
       0,     0,     0,     0,   582,   583,     0,     0,   584,     0,
     585,     0,   586,   587,     0,     0,     0,   588,   589,   590,
     591,   592,   593,   594,   595,     0,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,     0,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,     0,   630,   631,   632,   633,   634,     0,     0,     0,
       0,     0,   199,   200,  3907,   201,   202,   203,   204,   205,
     847,   848,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,   849,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,   850,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,   851,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   852,   289,   290,   853,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     854,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,   855,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,   856,     0,   328,     0,     0,     0,   857,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,   858,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,   859,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,     0,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   860,   434,
     435,   436,   861,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,   862,     0,
     446,   447,   448,   449,   450,     0,   863,   452,     0,   453,
     454,   455,     0,     0,   864,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     865,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,   866,   867,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   868,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,   869,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,   870,   548,   871,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,     0,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,   919,   848,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,   849,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,   850,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,   851,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     852,   289,   290,   853,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   854,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,   855,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,   856,     0,
     328,     0,     0,     0,   857,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,   858,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,   859,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,     0,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   860,   434,   435,   436,   920,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,   862,     0,   446,   447,   448,   449,
     450,     0,   863,   452,     0,   453,   454,   455,     0,     0,
     864,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   865,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,   866,
     867,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   868,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   196,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
     869,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,   870,   548,   871,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,     0,     0,   596,   597,   598,     0,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,     0,   848,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,   849,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,   850,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,   851,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   852,   289,   290,   853,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   854,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,   855,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,   856,     0,   328,     0,     0,     0,
     857,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,   858,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,   859,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,     0,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     860,   434,   435,   436,     0,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
     862,     0,   446,   447,   448,   449,   450,     0,   863,   452,
       0,   453,   454,   455,     0,     0,   864,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   865,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,   866,   867,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   868,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   196,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,   869,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,   870,   548,
     871,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,     0,     0,   596,
     597,   598,     0,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,  2902,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,  2903,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,  2904,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,  2905,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,  1262,  1263,     0,   404,   405,     0,     0,  2906,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,  5288,   914,  5289,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,  2907,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,  1236,
    1237,   207,  1238,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,  1239,     0,
       0,  1240,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,  1241,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,  1242,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,  1385,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,  1386,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,  1387,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,  1013,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,  1388,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,  2324,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,  2325,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,  1704,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,  1705,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,  2327,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,  1410,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,  1411,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,  1013,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   196,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,  1555,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,  1556,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,   731,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,  1557,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,  1385,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,  3645,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,  1013,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,   196,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,  1012,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,  1013,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,  1014,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,  1012,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,  1013,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   196,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,  1482,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,  1483,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,  1281,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,  2145,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,  1013,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   196,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,  2772,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,  1013,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,   196,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,  1013,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,  3086,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,  1385,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,  1013,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   196,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,  1013,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,  3711,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   196,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,  1013,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   196,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,  5209,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,  5210,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,   914,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,   982,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,  1053,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,  1054,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,  1241,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,  2287,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,  2420,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,  3010,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,  3022,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
    3051,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,  3116,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,   291,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,   488,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,   291,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,   299,   300,   301,  2025,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,  2026,   402,   403,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
     488,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,   291,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,   299,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,   488,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
    4960,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
    1416,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,   291,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,   299,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,     0,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,     0,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,     0,   486,     0,     0,     0,   487,     0,
       0,     0,   488,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
    1417,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,     0,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,     0,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,  1416,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,   291,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,   299,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
       0,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,     0,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,     0,
     486,     0,     0,     0,   487,     0,     0,     0,   488,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,     0,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,     0,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
    1401,     0,   206,     0,     0,     0,     0,   207,     0,     0,
     208,     0,   209,   210,   211,   212,   213,   214,     0,   215,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,   222,   223,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,   229,     0,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
     255,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,   265,     0,
       0,     0,  1402,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
     274,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,   279,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,     0,   289,   290,     0,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
       0,   300,   301,   302,   303,     0,     0,   304,   305,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,   316,   317,     0,   318,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
     326,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,   331,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,   339,   340,     0,     0,   341,     0,     0,   342,
     343,   858,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,  1403,     0,     0,     0,   404,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   429,   430,   431,     0,   432,     0,     0,   434,
     435,   436,     0,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,     0,   452,     0,   453,
     454,   455,     0,     0,     0,   457,   458,   459,   460,   461,
     462,   463,     0,   464,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,   471,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,     0,     0,   489,   490,   491,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,   506,   507,   508,   509,
     510,     0,     0,   511,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,     0,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,   196,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,   537,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,   544,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,   563,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,   579,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,     0,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,  5042,     0,   206,     0,
       0,     0,     0,   207,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   214,     0,   215,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,   222,   223,     0,     0,   224,     0,     0,   225,
     226,     0,   227,   228,   229,     0,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,   255,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,   265,     0,     0,     0,  5043,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,   274,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,   279,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
       0,   289,   290,     0,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,     0,     0,   300,   301,   302,
     303,     0,     0,   304,   305,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,   316,   317,
       0,   318,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,     0,     0,   325,   326,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,   331,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
       0,     0,     0,   337,     0,   338,     0,     0,   339,   340,
       0,     0,   341,     0,     0,   342,   343,   858,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,     0,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,  5044,     0,
       0,     0,   404,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,   411,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   429,   430,
     431,     0,   432,     0,     0,   434,   435,   436,     0,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,     0,   452,     0,   453,   454,   455,     0,     0,
       0,   457,   458,   459,   460,   461,   462,   463,     0,   464,
       0,   465,   466,     0,   467,   468,   469,     0,   470,     0,
       0,   471,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
       0,     0,   489,   490,   491,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,   506,   507,   508,   509,   510,     0,     0,   511,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,     0,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,   196,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,   537,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,   544,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,     0,   559,   560,   561,     0,   562,   563,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,   579,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,     0,     0,   596,   597,   598,     0,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,  2084,     0,   206,     0,     0,     0,     0,   207,
       0,     0,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,   222,   223,
       0,     0,   224,     0,     0,   225,   226,     0,   227,   228,
     229,     0,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,   255,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
     265,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,   274,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,   279,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,     0,   289,   290,     0,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,     0,     0,   300,   301,   302,   303,     0,     0,   304,
     305,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,   316,   317,     0,   318,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,     0,
       0,   325,   326,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,   331,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,     0,     0,     0,   337,
       0,   338,     0,     0,   339,   340,     0,     0,   341,     0,
       0,   342,   343,   858,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,     0,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,  2085,     0,     0,     0,   404,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
     411,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   429,   430,   431,     0,   432,     0,
       0,   434,   435,   436,     0,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,     0,   452,
       0,   453,   454,   455,     0,     0,     0,   457,   458,   459,
     460,   461,   462,   463,     0,   464,     0,   465,   466,     0,
     467,   468,   469,     0,   470,     0,     0,   471,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,     0,     0,   489,   490,
     491,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,   506,   507,
     508,   509,   510,     0,     0,   511,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,     0,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,   196,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,   537,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
     544,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,     0,   559,
     560,   561,     0,   562,   563,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,   579,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,     0,     0,   596,
     597,   598,     0,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,  2868,     0,
     206,     0,     0,     0,     0,   207,     0,     0,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,   222,   223,     0,     0,   224,     0,
       0,   225,   226,     0,   227,   228,   229,     0,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,   255,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,   265,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,   274,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,   279,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,     0,   289,   290,     0,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,     0,     0,   300,
     301,   302,   303,     0,     0,   304,   305,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
     316,   317,     0,   318,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,     0,     0,   325,   326,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,   331,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,     0,     0,     0,   337,     0,   338,     0,     0,
     339,   340,     0,     0,   341,     0,     0,   342,   343,   858,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,     0,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
    2869,     0,     0,     0,   404,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,   411,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     429,   430,   431,     0,   432,     0,     0,   434,   435,   436,
       0,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,     0,   452,     0,   453,   454,   455,
       0,     0,     0,   457,   458,   459,   460,   461,   462,   463,
       0,   464,     0,   465,   466,     0,   467,   468,   469,     0,
     470,     0,     0,   471,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,     0,     0,   489,   490,   491,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,   506,   507,   508,   509,   510,     0,
       0,   511,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,     0,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,   196,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,   537,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,   544,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,     0,   559,   560,   561,     0,   562,
     563,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,   579,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,     0,     0,   596,   597,   598,     0,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
     222,   223,     0,     0,   224,     0,     0,   225,   226,     0,
     227,   228,   229,     0,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,   255,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,   265,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,   274,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,   279,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,     0,   289,
     290,     0,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,     0,     0,   300,   301,   302,   303,     0,
       0,   304,   305,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,   316,   317,     0,   318,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,     0,     0,   325,   326,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,   331,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,     0,     0,
       0,   337,     0,   338,     0,     0,   339,   340,     0,     0,
     341,     0,     0,   342,   343,   858,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,     0,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,     0,     0,     0,     0,
     404,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,   411,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   429,   430,   431,     0,
     432,     0,     0,   434,   435,   436,     0,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
       0,   452,     0,   453,   454,   455,     0,     0,     0,   457,
     458,   459,   460,   461,   462,   463,     0,   464,     0,   465,
     466,     0,   467,   468,   469,     0,   470,     0,     0,   471,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,     0,     0,
     489,   490,   491,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
     506,   507,   508,   509,   510,     0,     0,   511,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,     0,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,   196,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,   537,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,   544,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
       0,   559,   560,   561,     0,   562,   563,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,   579,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,     0,
       0,   596,   597,   598,     0,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
       0,     0,   209,   210,   211,   212,   213,   214,     0,  -457,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,     0,     0,     0,     0,
     224,  4898,     0,   225,   226,     0,   227,   228,     0,     0,
       0,     0,   231,   232,   233,  4899,   235,   236,     0,   237,
     238,     0,   239,   240,     0,   242,     0,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
       0,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,     0,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
       0,     0,     0,   275,   276,   277,     0,  -427,  -427,   278,
       0,  -427,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,     0,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,  4900,
     299,   300,   301,   302,   303,     0,     0,     0,     0,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,     0,   317,     0,     0,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,  4901,     0,   325,
       0,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,     0,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,  4902,     0,     0,   337,     0,   338,
       0,     0,     0,   340,     0,     0,   341,  4903,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,  -412,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,  4904,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
       0,     0,     0,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
       0,   455,  -412,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,   465,   466,     0,   467,   468,
     469,  4905,   470,     0,     0,     0,   472,   473,   474,     0,
     475,     0,   476,   477,     0,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,     0,     0,     0,   490,     0,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,     0,   507,   508,   509,
     510,     0,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,     0,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,  -412,     0,     0,     0,   559,   560,   561,
       0,   562,     0,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,     0,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,     0,     0,   209,   210,
     211,   212,   213,   214,     0,  -457,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,     0,     0,     0,     0,   224,  4898,     0,   225,
     226,     0,   227,   228,     0,     0,     0,     0,   231,   232,
     233,  4899,   235,   236,     0,   237,   238,     0,   239,   240,
       0,   242,     0,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,     0,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,     0,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,     0,     0,     0,   275,
     276,   277,     0,  -448,     0,   278,     0,  -448,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,     0,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,  4900,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,     0,   317,
       0,     0,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,  4901,     0,   325,     0,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,     0,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
    4902,     0,     0,   337,     0,   338,     0,     0,     0,   340,
       0,     0,   341,  4903,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,  -412,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,     0,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,  4904,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,     0,     0,     0,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,     0,   455,  -412,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,     0,
       0,   465,   466,     0,   467,   468,   469,  4905,   470,     0,
       0,     0,   472,   473,   474,     0,   475,     0,   476,   477,
       0,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
       0,     0,     0,   490,     0,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,     0,   507,   508,   509,   510,     0,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,     0,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,     0,     0,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,  -448,     0,  -412,
       0,     0,     0,   559,   560,   561,     0,   562,     0,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,     0,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,     0,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,     0,     0,   209,   210,   211,   212,   213,   214,
       0,  -457,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,     0,     0,
       0,     0,   224,  4898,     0,   225,   226,     0,   227,   228,
       0,     0,     0,     0,   231,   232,   233,  4899,   235,   236,
       0,   237,   238,     0,   239,   240,     0,   242,     0,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,     0,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
       0,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,     0,     0,     0,   275,   276,   277,     0,  -445,
       0,   278,     0,  -445,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,     0,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,  4900,   299,   300,   301,   302,   303,     0,     0,     0,
       0,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,     0,   317,     0,     0,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,  4901,
       0,   325,     0,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,     0,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,  4902,     0,     0,   337,
       0,   338,     0,     0,     0,   340,     0,     0,   341,  4903,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,  -412,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,     0,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
    4904,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,     0,     0,     0,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,     0,   455,  -412,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,     0,     0,   465,   466,     0,
     467,   468,   469,  4905,   470,     0,     0,     0,   472,   473,
     474,     0,   475,     0,   476,   477,     0,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,     0,     0,     0,   490,
       0,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,     0,   507,
     508,   509,   510,     0,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,     0,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
       0,     0,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,  -445,     0,  -412,     0,     0,     0,   559,
     560,   561,     0,   562,     0,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,     0,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,     0,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,     0,     0,
     209,   210,   211,   212,   213,   214,     0,  -457,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,     0,     0,     0,     0,   224,  4898,
       0,   225,   226,     0,   227,   228,     0,     0,     0,     0,
     231,   232,   233,  4899,   235,   236,     0,   237,   238,     0,
     239,   240,     0,   242,     0,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,     0,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,     0,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,  5153,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,     0,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,  4900,   299,   300,
     301,   302,   303,     0,     0,     0,     0,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
       0,   317,     0,     0,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,  4901,     0,   325,     0,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,     0,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,  4902,     0,     0,   337,     0,   338,     0,     0,
       0,   340,     0,     0,   341,  4903,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,  -412,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,     0,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,  4904,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,     0,     0,
       0,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,     0,   455,
    -412,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,     0,     0,   465,   466,     0,   467,   468,   469,  4905,
     470,     0,     0,     0,   472,   473,   474,     0,   475,     0,
     476,   477,     0,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,     0,     0,     0,   490,     0,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,     0,   507,   508,   509,   510,     0,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,     0,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,     0,     0,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,  -412,     0,     0,     0,   559,   560,   561,     0,   562,
       0,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,     0,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,     0,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,     0,     0,   209,   210,   211,   212,
     213,   214,     0,  -457,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
       0,     0,     0,     0,   224,  4898,     0,   225,   226,     0,
     227,   228,     0,     0,     0,     0,   231,   232,   233,  4899,
     235,   236,     0,   237,   238,     0,   239,   240,     0,   242,
       0,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,     0,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,     0,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,     0,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,  -450,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,     0,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,  4900,   299,   300,   301,   302,   303,     0,
       0,     0,     0,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,     0,   317,     0,     0,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,  4901,     0,   325,     0,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,     0,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,  4902,     0,
       0,   337,     0,   338,     0,     0,     0,   340,     0,     0,
     341,  4903,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,  -412,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
       0,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,  4904,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,     0,     0,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,     0,   455,  -412,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,     0,     0,   465,
     466,     0,   467,   468,   469,  4905,   470,     0,     0,     0,
     472,   473,   474,     0,   475,     0,   476,   477,     0,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,     0,     0,
       0,   490,     0,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
       0,   507,   508,   509,   510,     0,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,     0,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,     0,     0,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,  -412,     0,     0,
       0,   559,   560,   561,     0,   562,     0,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,     0,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,     0,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
       0,     0,   209,   210,   211,   212,   213,   214,     0,  -457,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,     0,     0,     0,     0,
     224,  4898,     0,   225,   226,     0,   227,   228,     0,     0,
       0,     0,   231,   232,   233,  4899,   235,   236,     0,   237,
     238,     0,   239,   240,     0,   242,     0,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
       0,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,     0,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
       0,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,  5214,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,     0,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,  4900,
     299,   300,   301,   302,   303,     0,     0,     0,     0,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,     0,   317,     0,     0,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,  4901,     0,   325,
       0,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,     0,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,  4902,     0,     0,   337,     0,   338,
       0,     0,     0,   340,     0,     0,   341,  4903,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,  -412,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,  4904,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
       0,     0,     0,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
       0,   455,  -412,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,   465,   466,     0,   467,   468,
     469,  4905,   470,     0,     0,     0,   472,   473,   474,     0,
     475,     0,   476,   477,     0,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,     0,     0,     0,   490,     0,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,     0,   507,   508,   509,
     510,     0,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,     0,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,  -412,     0,     0,     0,   559,   560,   561,
       0,   562,     0,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,     0,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634,   199,   200,
       0,   201,   202,   203,   204,   205,     0,     0,   206,     0,
       0,     0,     0,   207,     0,     0,     0,     0,   209,   210,
     211,   212,   213,   214,     0,  -457,     0,     0,     0,   216,
       0,     0,     0,   217,     0,     0,   218,   219,   220,     0,
     221,     0,     0,     0,     0,     0,   224,  4898,     0,   225,
     226,     0,   227,   228,     0,     0,     0,     0,   231,   232,
     233,  4899,   235,   236,     0,   237,   238,     0,   239,   240,
       0,   242,     0,   244,   245,   246,   247,   248,   249,     0,
     250,   251,     0,   252,   253,   254,     0,   256,     0,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,   259,
       0,     0,     0,   260,   261,   262,     0,     0,   263,     0,
       0,     0,     0,   264,     0,     0,     0,     0,     0,   266,
     267,     0,   268,     0,     0,     0,     0,     0,   269,   270,
     271,   272,   273,     0,     0,     0,     0,     0,     0,   275,
     276,   277,     0,     0,     0,   278,     0,  5254,   280,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,   287,
     288,   289,   290,     0,     0,     0,   292,   293,   294,   295,
     296,     0,     0,   297,   298,  4900,   299,   300,   301,   302,
     303,     0,     0,     0,     0,     0,     0,     0,   306,   307,
       0,   308,     0,     0,     0,   309,     0,   310,   311,   312,
     313,     0,   314,     0,   315,     0,     0,     0,     0,   317,
       0,     0,     0,     0,   319,   320,     0,     0,     0,   321,
     322,   323,   324,  4901,     0,   325,     0,   327,     0,     0,
     328,     0,     0,     0,     0,   329,   330,     0,     0,     0,
       0,   332,     0,     0,     0,   333,   334,     0,   335,   336,
    4902,     0,     0,   337,     0,   338,     0,     0,     0,   340,
       0,     0,   341,  4903,     0,   342,   343,     0,     0,     0,
       0,     0,   344,   345,     0,   346,     0,   347,     0,   348,
     349,     0,     0,     0,     0,  -412,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,     0,   372,   373,   374,   375,     0,   376,   377,
       0,     0,     0,     0,   378,   379,   380,   381,   382,   383,
       0,     0,   384,   385,     0,   386,     0,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,     0,
     397,   398,     0,     0,   399,   400,   401,   402,   403,     0,
       0,     0,     0,   405,     0,     0,     0,   406,     0,   407,
     408,     0,   409,   410,  4904,     0,     0,   412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   413,   414,   415,
       0,   416,     0,   417,     0,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,     0,     0,     0,   430,
     431,     0,   432,     0,   433,   434,   435,   436,   437,     0,
     438,   439,   440,     0,     0,   441,     0,     0,     0,   442,
     443,     0,   444,   445,     0,     0,   446,   447,   448,   449,
     450,     0,   451,   452,     0,   453,     0,   455,  -412,     0,
     456,   457,   458,   459,   460,   461,   462,   463,     0,     0,
       0,   465,   466,     0,   467,   468,   469,  4905,   470,     0,
       0,     0,   472,   473,   474,     0,   475,     0,   476,   477,
       0,   479,   480,     0,   481,   482,     0,     0,     0,   483,
     484,   485,   486,     0,     0,     0,   487,     0,     0,     0,
       0,     0,     0,   490,     0,   492,     0,   493,   494,   495,
     496,   497,     0,     0,     0,     0,     0,   498,   499,   500,
       0,   501,     0,     0,   502,     0,     0,   503,     0,   504,
       0,   505,     0,   507,   508,   509,   510,     0,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,   519,   520,   521,   522,     0,   523,   524,     0,     0,
     525,   526,   527,   528,     0,     0,   529,   530,     0,   531,
     532,   533,   534,     0,     0,     0,     0,     0,   535,   536,
       0,     0,     0,     0,   538,   539,     0,     0,   540,   541,
       0,   542,   543,     0,     0,     0,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,     0,     0,     0,
       0,     0,   551,     0,   552,     0,     0,   553,     0,     0,
       0,   554,     0,   555,   556,   557,   558,     0,     0,  -412,
       0,     0,     0,   559,   560,   561,     0,   562,     0,   564,
     565,     0,     0,   566,     0,     0,   567,   568,   569,   570,
     571,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,   573,   574,   575,     0,   576,   577,   578,     0,     0,
       0,     0,   580,     0,   581,     0,     0,     0,     0,     0,
       0,   582,   583,     0,     0,   584,     0,   585,     0,   586,
     587,     0,     0,     0,   588,   589,   590,   591,   592,   593,
     594,   595,     0,   596,   597,   598,     0,   600,   601,   602,
     603,   604,   605,     0,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,     0,   630,
     631,   632,   633,   634,   199,   200,     0,   201,   202,   203,
     204,   205,     0,     0,   206,     0,     0,     0,     0,   207,
       0,     0,     0,     0,   209,   210,   211,   212,   213,   214,
       0,  -457,     0,     0,     0,   216,     0,     0,     0,   217,
       0,     0,   218,   219,   220,     0,   221,     0,     0,     0,
       0,     0,   224,  4898,     0,   225,   226,     0,   227,   228,
       0,     0,     0,     0,   231,   232,   233,  4899,   235,   236,
       0,   237,   238,     0,   239,   240,     0,   242,     0,   244,
     245,   246,   247,   248,   249,     0,   250,   251,     0,   252,
     253,   254,     0,   256,     0,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,   259,     0,     0,     0,   260,
     261,   262,     0,     0,   263,     0,     0,     0,     0,   264,
       0,     0,     0,     0,     0,   266,   267,     0,   268,     0,
       0,     0,     0,     0,   269,   270,   271,   272,   273,     0,
       0,     0,     0,     0,     0,   275,   276,   277,     0,     0,
       0,   278,     0,  -431,   280,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,   287,   288,   289,   290,     0,
       0,     0,   292,   293,   294,   295,   296,     0,     0,   297,
     298,  4900,   299,   300,   301,   302,   303,     0,     0,     0,
       0,     0,     0,     0,   306,   307,     0,   308,     0,     0,
       0,   309,     0,   310,   311,   312,   313,     0,   314,     0,
     315,     0,     0,     0,     0,   317,     0,     0,     0,     0,
     319,   320,     0,     0,     0,   321,   322,   323,   324,  4901,
       0,   325,     0,   327,     0,     0,   328,     0,     0,     0,
       0,   329,   330,     0,     0,     0,     0,   332,     0,     0,
       0,   333,   334,     0,   335,   336,  4902,     0,     0,   337,
       0,   338,     0,     0,     0,   340,     0,     0,   341,  4903,
       0,   342,   343,     0,     0,     0,     0,     0,   344,   345,
       0,   346,     0,   347,     0,   348,   349,     0,     0,     0,
       0,  -412,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,     0,   372,
     373,   374,   375,     0,   376,   377,     0,     0,     0,     0,
     378,   379,   380,   381,   382,   383,     0,     0,   384,   385,
       0,   386,     0,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,     0,   397,   398,     0,     0,
     399,   400,   401,   402,   403,     0,     0,     0,     0,   405,
       0,     0,     0,   406,     0,   407,   408,     0,   409,   410,
    4904,     0,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   413,   414,   415,     0,   416,     0,   417,
       0,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,     0,     0,     0,   430,   431,     0,   432,     0,
     433,   434,   435,   436,   437,     0,   438,   439,   440,     0,
       0,   441,     0,     0,     0,   442,   443,     0,   444,   445,
       0,     0,   446,   447,   448,   449,   450,     0,   451,   452,
       0,   453,     0,   455,  -412,     0,   456,   457,   458,   459,
     460,   461,   462,   463,     0,     0,     0,   465,   466,     0,
     467,   468,   469,  4905,   470,     0,     0,     0,   472,   473,
     474,     0,   475,     0,   476,   477,     0,   479,   480,     0,
     481,   482,     0,     0,     0,   483,   484,   485,   486,     0,
       0,     0,   487,     0,     0,     0,     0,     0,     0,   490,
       0,   492,     0,   493,   494,   495,   496,   497,     0,     0,
       0,     0,     0,   498,   499,   500,     0,   501,     0,     0,
     502,     0,     0,   503,     0,   504,     0,   505,     0,   507,
     508,   509,   510,     0,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,   519,   520,   521,
     522,     0,   523,   524,     0,     0,   525,   526,   527,   528,
       0,     0,   529,   530,     0,   531,   532,   533,   534,     0,
       0,     0,     0,     0,   535,   536,     0,     0,     0,     0,
     538,   539,     0,     0,   540,   541,     0,   542,   543,     0,
       0,     0,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,     0,     0,     0,     0,     0,   551,     0,
     552,     0,     0,   553,     0,     0,     0,   554,     0,   555,
     556,   557,   558,     0,     0,  -412,     0,     0,     0,   559,
     560,   561,     0,   562,     0,   564,   565,     0,     0,   566,
       0,     0,   567,   568,   569,   570,   571,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,   573,   574,   575,
       0,   576,   577,   578,     0,     0,     0,     0,   580,     0,
     581,     0,     0,     0,     0,     0,     0,   582,   583,     0,
       0,   584,     0,   585,     0,   586,   587,     0,     0,     0,
     588,   589,   590,   591,   592,   593,   594,   595,     0,   596,
     597,   598,     0,   600,   601,   602,   603,   604,   605,     0,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,     0,   630,   631,   632,   633,   634,
     199,   200,     0,   201,   202,   203,   204,   205,     0,     0,
     206,     0,     0,     0,     0,   207,     0,     0,     0,     0,
     209,   210,   211,   212,   213,   214,     0,  -457,     0,     0,
       0,   216,     0,     0,     0,   217,     0,     0,   218,   219,
     220,     0,   221,     0,     0,     0,     0,     0,   224,  4898,
       0,   225,   226,     0,   227,   228,     0,     0,     0,     0,
     231,   232,   233,  4899,   235,   236,     0,   237,   238,     0,
     239,   240,     0,   242,     0,   244,   245,   246,   247,   248,
     249,     0,   250,   251,     0,   252,   253,   254,     0,   256,
       0,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,   259,     0,     0,     0,   260,   261,   262,     0,     0,
     263,     0,     0,     0,     0,   264,     0,     0,     0,     0,
       0,   266,   267,     0,   268,     0,     0,     0,     0,     0,
     269,   270,   271,   272,   273,     0,     0,     0,     0,     0,
       0,   275,   276,   277,     0,     0,     0,   278,     0,     0,
     280,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,   287,   288,   289,   290,     0,     0,     0,   292,   293,
     294,   295,   296,     0,     0,   297,   298,  4900,   299,   300,
     301,   302,   303,     0,     0,     0,     0,     0,     0,     0,
     306,   307,     0,   308,     0,     0,     0,   309,     0,   310,
     311,   312,   313,     0,   314,     0,   315,     0,     0,     0,
       0,   317,     0,     0,     0,     0,   319,   320,     0,     0,
       0,   321,   322,   323,   324,  4901,     0,   325,     0,   327,
       0,     0,   328,     0,     0,     0,     0,   329,   330,     0,
       0,     0,     0,   332,     0,     0,     0,   333,   334,     0,
     335,   336,  4902,     0,     0,   337,     0,   338,     0,     0,
       0,   340,     0,     0,   341,  4903,     0,   342,   343,     0,
       0,     0,     0,     0,   344,   345,     0,   346,     0,   347,
       0,   348,   349,     0,     0,     0,     0,  -412,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,     0,   372,   373,   374,   375,     0,
     376,   377,     0,     0,     0,     0,   378,   379,   380,   381,
     382,   383,     0,     0,   384,   385,     0,   386,     0,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,     0,   397,   398,     0,     0,   399,   400,   401,   402,
     403,     0,     0,     0,     0,   405,     0,     0,     0,   406,
       0,   407,   408,     0,   409,   410,  4904,     0,     0,   412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   413,
     414,   415,     0,   416,     0,   417,     0,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,     0,     0,
       0,   430,   431,     0,   432,     0,   433,   434,   435,   436,
     437,     0,   438,   439,   440,     0,     0,   441,     0,     0,
       0,   442,   443,     0,   444,   445,     0,     0,   446,   447,
     448,   449,   450,     0,   451,   452,     0,   453,     0,   455,
    -412,     0,   456,   457,   458,   459,   460,   461,   462,   463,
       0,     0,     0,   465,   466,     0,   467,   468,   469,  4905,
     470,     0,     0,     0,   472,   473,   474,     0,   475,     0,
     476,   477,     0,   479,   480,     0,   481,   482,     0,     0,
       0,   483,   484,   485,   486,     0,     0,     0,   487,     0,
       0,     0,     0,     0,     0,   490,     0,   492,     0,   493,
     494,   495,   496,   497,     0,     0,     0,     0,     0,   498,
     499,   500,     0,   501,     0,     0,   502,     0,     0,   503,
       0,   504,     0,   505,     0,   507,   508,   509,   510,     0,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,   519,   520,   521,   522,     0,   523,   524,
       0,     0,   525,   526,   527,   528,     0,     0,   529,   530,
       0,   531,   532,   533,   534,     0,     0,     0,     0,     0,
     535,   536,     0,     0,     0,     0,   538,   539,     0,     0,
     540,   541,     0,   542,   543,     0,     0,     0,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,     0,
       0,     0,     0,     0,   551,     0,   552,     0,     0,   553,
       0,     0,     0,   554,     0,   555,   556,   557,   558,     0,
       0,  -412,     0,     0,     0,   559,   560,   561,     0,   562,
       0,   564,   565,     0,     0,   566,     0,     0,   567,   568,
     569,   570,   571,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,   573,   574,   575,     0,   576,   577,   578,
       0,     0,     0,     0,   580,     0,   581,     0,     0,     0,
       0,     0,     0,   582,   583,     0,     0,   584,     0,   585,
       0,   586,   587,     0,     0,     0,   588,   589,   590,   591,
     592,   593,   594,   595,     0,   596,   597,   598,     0,   600,
     601,   602,   603,   604,   605,     0,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
       0,   630,   631,   632,   633,   634,   199,   200,     0,   201,
     202,   203,   204,   205,     0,     0,   206,     0,     0,     0,
       0,   207,     0,     0,     0,     0,   209,   210,   211,   212,
     213,   214,     0,  -457,     0,     0,     0,   216,     0,     0,
       0,   217,     0,     0,   218,   219,   220,     0,   221,     0,
       0,     0,     0,     0,   224,  4898,     0,   225,   226,     0,
     227,   228,     0,     0,     0,     0,   231,   232,   233,  4899,
     235,   236,     0,   237,   238,     0,   239,   240,     0,   242,
       0,   244,   245,   246,   247,   248,   249,     0,   250,   251,
       0,   252,   253,   254,     0,   256,     0,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,   259,     0,     0,
       0,   260,   261,   262,     0,     0,   263,     0,     0,     0,
       0,   264,     0,     0,     0,     0,     0,   266,   267,     0,
     268,     0,     0,     0,     0,     0,   269,   270,   271,   272,
     273,     0,     0,     0,     0,     0,     0,   275,   276,   277,
       0,     0,     0,   278,     0,     0,   280,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,   287,   288,   289,
     290,     0,     0,     0,   292,   293,   294,   295,   296,     0,
       0,   297,   298,  4900,   299,   300,   301,   302,   303,     0,
       0,     0,     0,     0,     0,     0,   306,   307,     0,   308,
       0,     0,     0,   309,     0,   310,   311,   312,   313,     0,
     314,     0,   315,     0,     0,     0,     0,   317,     0,     0,
       0,     0,   319,   320,     0,     0,     0,   321,   322,   323,
     324,  4901,     0,   325,     0,   327,     0,     0,   328,     0,
       0,     0,     0,   329,   330,     0,     0,     0,     0,   332,
       0,     0,     0,   333,   334,     0,   335,   336,  4902,     0,
       0,   337,     0,   338,     0,     0,     0,   340,     0,     0,
     341,  4903,     0,   342,   343,     0,     0,     0,     0,     0,
     344,   345,     0,   346,     0,   347,     0,   348,   349,     0,
       0,     0,     0,  -412,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
       0,   372,   373,   374,   375,     0,   376,   377,     0,     0,
       0,     0,   378,   379,   380,   381,   382,   383,     0,     0,
     384,   385,     0,   386,     0,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,     0,   397,   398,
       0,     0,   399,   400,   401,   402,   403,     0,     0,     0,
       0,   405,     0,     0,     0,   406,     0,   407,   408,     0,
     409,   410,  4904,     0,     0,   412,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   413,   414,   415,     0,   416,
       0,   417,     0,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,     0,     0,   430,   431,     0,
     432,     0,   433,   434,   435,   436,   437,     0,   438,   439,
     440,     0,     0,   441,     0,     0,     0,   442,   443,     0,
     444,   445,     0,     0,   446,   447,   448,   449,   450,     0,
     451,   452,     0,   453,     0,   455,  -412,     0,   456,   457,
     458,   459,   460,   461,   462,   463,     0,     0,     0,   465,
     466,     0,   467,   468,   469,  4905,   470,     0,     0,     0,
     472,   473,   474,     0,   475,     0,   476,   477,     0,   479,
     480,     0,   481,   482,     0,     0,     0,   483,   484,   485,
     486,     0,     0,     0,   487,     0,     0,     0,     0,     0,
       0,   490,     0,   492,     0,   493,   494,   495,   496,   497,
       0,     0,     0,     0,     0,   498,   499,   500,     0,   501,
       0,     0,   502,     0,     0,   503,     0,   504,     0,   505,
       0,   507,   508,   509,   510,     0,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,   519,
     520,   521,   522,     0,   523,   524,     0,     0,   525,   526,
     527,   528,     0,     0,   529,   530,     0,   531,   532,   533,
     534,     0,     0,     0,     0,     0,   535,   536,     0,     0,
       0,     0,   538,   539,     0,     0,   540,   541,     0,   542,
     543,     0,     0,     0,     0,     0,   546,     0,     0,  5156,
       0,   548,     0,   549,   550,     0,     0,     0,     0,     0,
     551,     0,   552,     0,     0,   553,     0,     0,     0,   554,
       0,   555,   556,   557,   558,     0,     0,  -412,     0,     0,
       0,   559,   560,   561,     0,   562,     0,   564,   565,     0,
       0,   566,     0,     0,   567,   568,   569,   570,   571,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,   573,
     574,   575,     0,   576,   577,   578,     0,     0,     0,     0,
     580,     0,   581,     0,     0,     0,     0,     0,     0,   582,
     583,     0,     0,   584,     0,   585,     0,   586,   587,     0,
       0,     0,   588,   589,   590,   591,   592,   593,   594,   595,
       0,   596,   597,   598,     0,   600,   601,   602,   603,   604,
     605,     0,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,     0,   630,   631,   632,
     633,   634,   199,   200,     0,   201,   202,   203,   204,   205,
       0,     0,   206,     0,     0,     0,     0,   207,     0,     0,
       0,     0,   209,   210,   211,   212,   213,   214,     0,     0,
       0,     0,     0,   216,     0,     0,     0,   217,     0,     0,
     218,   219,   220,     0,   221,     0,     0,     0,     0,     0,
     224,     0,     0,   225,   226,     0,   227,   228,     0,     0,
       0,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,     0,   239,   240,     0,   242,     0,   244,   245,   246,
     247,   248,   249,     0,   250,   251,     0,   252,   253,   254,
       0,   256,     0,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,   259,     0,     0,     0,   260,   261,   262,
       0,     0,   263,     0,     0,     0,     0,   264,     0,     0,
       0,     0,     0,   266,   267,     0,   268,     0,     0,     0,
       0,     0,   269,   270,   271,   272,   273,     0,     0,     0,
       0,     0,     0,   275,   276,   277,     0,     0,     0,   278,
       0,     0,   280,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,   287,   288,   289,   290,     0,     0,     0,
     292,   293,   294,   295,   296,     0,     0,   297,   298,     0,
     299,   300,   301,   302,   303,     0,     0,     0,     0,     0,
       0,     0,   306,   307,     0,   308,     0,     0,     0,   309,
       0,   310,   311,   312,   313,     0,   314,     0,   315,     0,
       0,     0,     0,   317,     0,     0,     0,     0,   319,   320,
       0,     0,     0,   321,   322,   323,   324,     0,     0,   325,
       0,   327,     0,     0,   328,     0,     0,     0,     0,   329,
     330,     0,     0,     0,     0,   332,     0,     0,     0,   333,
     334,     0,   335,   336,     0,     0,     0,   337,     0,   338,
       0,     0,     0,   340,     0,     0,   341,     0,     0,   342,
     343,     0,     0,     0,     0,     0,   344,   345,     0,   346,
       0,   347,     0,   348,   349,     0,     0,     0,     0,     0,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,     0,   372,   373,   374,
     375,     0,   376,   377,     0,     0,     0,     0,   378,   379,
     380,   381,   382,   383,     0,     0,   384,   385,     0,   386,
       0,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,     0,   397,   398,     0,     0,   399,   400,
     401,   402,   403,     0,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,     0,   409,   410,   411,     0,
       0,   412,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   413,   414,   415,     0,   416,     0,   417,     0,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
       0,     0,     0,   430,   431,     0,   432,     0,   433,   434,
     435,   436,   437,     0,   438,   439,   440,     0,     0,   441,
       0,     0,     0,   442,   443,     0,   444,   445,     0,     0,
     446,   447,   448,   449,   450,     0,   451,   452,     0,   453,
       0,   455,     0,     0,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,   465,   466,     0,   467,   468,
     469,     0,   470,     0,     0,     0,   472,   473,   474,     0,
     475,     0,   476,   477,     0,   479,   480,     0,   481,   482,
       0,     0,     0,   483,   484,   485,   486,     0,     0,     0,
     487,     0,     0,     0,     0,     0,     0,   490,     0,   492,
       0,   493,   494,   495,   496,   497,     0,     0,     0,     0,
       0,   498,   499,   500,     0,   501,     0,     0,   502,     0,
       0,   503,     0,   504,     0,   505,     0,   507,   508,   509,
     510,     0,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,   519,   520,   521,   522,     0,
     523,   524,     0,     0,   525,   526,   527,   528,     0,     0,
     529,   530,     0,   531,   532,   533,   534,     0,     0,     0,
       0,     0,   535,   536,     0,     0,     0,     0,   538,   539,
       0,     0,   540,   541,     0,   542,   543,     0,     0,     0,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,     0,     0,     0,     0,     0,   551,     0,   552,     0,
       0,   553,     0,     0,     0,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,     0,   559,   560,   561,
       0,   562,     0,   564,   565,     0,     0,   566,     0,     0,
     567,   568,   569,   570,   571,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,   573,   574,   575,     0,   576,
     577,   578,     0,     0,     0,     0,   580,     0,   581,     0,
       0,     0,     0,     0,     0,   582,   583,     0,     0,   584,
       0,   585,     0,   586,   587,     0,     0,     0,   588,   589,
     590,   591,   592,   593,   594,   595,     0,   596,   597,   598,
       0,   600,   601,   602,   603,   604,   605,     0,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,     0,   630,   631,   632,   633,   634
};

static const yytype_int16 yycheck[] =
{
       6,   799,    43,     0,    57,   812,   942,   943,     0,    15,
       0,  1056,    18,  1057,   963,  1203,    22,    96,  1106,  1045,
    1049,  1203,  1152,    21,  1539,    31,   962,  1125,  1126,   115,
    1047,  2038,    38,     6,   676,    41,  2618,   115,   715,  1295,
      46,    39,  1038,    49,  2609,    43,  1295,    53,    60,    55,
    2846,  1677,    43,  2281,  2282,  2789,  1154,  2400,  2401,  1429,
    1331,  1619,  1072,  2484,  1708,  2174,  1256,    60,  1166,  1167,
    1168,    63,  2711,    63,  1172,  2003,  1005,  1072,  2234,  3060,
    2735,  1639,  1452,  1892,  1893,  2520,  2611,  2003,  2357,  2524,
      96,  1900,  1901,  1902,  2316,  2317,    59,  1589,  2928,  1657,
    1589,  2081,  1145,  1589,  3112,  1376,  2313,  3625,  2094,  2316,
    2317,  1040,  3479,  1211,  2487,  1619,  2028,  3090,  1377,   662,
     663,  2525,  3530,  2518,    19,  2859,  2765,  2117,   120,  1032,
    2525,  2518,    21,  1621,  1975,    30,  2779,  1625,  2525,  2743,
      35,   147,   784,   785,  2076,   787,  3625,  2487,  2487,  2256,
      39,  1639,  2261,  2680,  2338,  2889,  2890,  2487,   800,  2487,
     648,   649,  2292,  1651,  3167,  3167,  3645,  3646,   960,  2081,
     176,  4277,   178,  2324,  2495,   181,   182,   183,   184,  1602,
    1118,  1119,  1120,  1519,  1520,  1521,  2370,  2371,  3726,  2157,
    4277,  1129,   198,  3399,    21,   120,  4221,    21,  2295,    18,
      19,    35,  3598,  3599,  2605,   178,  3602,  2175,   181,  4187,
      73,    22,  1300,  2181,  2752,    73,    52,     5,   125,  2187,
     156,    68,  1160,    71,  3620,  1163,    77,    21,    18,    19,
    2651,  2874,  2339,   125,  2341,    11,    18,    19,    71,    21,
      18,    19,   156,  2350,  1182,  1183,    18,    19,  1186,  2327,
    1110,  1111,    21,   194,    71,    48,     9,    18,    19,   176,
     125,  2368,    71,   144,   156,  3056,  1204,  1205,   194,    31,
     158,  1209,  1210,   125,    19,   162,    29,  2484,  3529,   194,
    4161,    34,   150,  2390,   194,   122,   160,  2394,    18,    19,
     249,   156,  3026,   197,   230,  1383,    81,  1095,   669,  1228,
      70,    48,   826,   827,   828,    18,    19,   831,   832,    18,
      19,   835,   125,   837,   838,   839,  2737,   373,   156,  1742,
     131,   197,   259,    21,   373,   327,    67,    87,   197,   373,
      18,    19,   156,   402,  3996,   156,    18,    19,    23,  2663,
      73,    39,  1038,   156,   285,    43,   276,   103,    21,   388,
      35,  2460,   377,   237,    18,    19,  2511,  2512,  2513,   158,
     103,  2470,   156,    52,    49,    62,    39,   156,    18,    19,
     246,    57,  2527,    18,    19,   204,    61,    62,   484,    37,
      18,    19,    18,    19,   100,  4306,    18,    19,   912,   690,
    4106,    18,    19,   156,   456,    43,   407,  2552,   456,    18,
      19,  2556,  3798,   194,    35,   231,   380,    23,   501,   388,
     473,   111,   258,   407,  1431,   109,   238,  2572,  2573,   197,
    4993,    77,   572,  2578,  3428,    53,  3434,   372,    85,   380,
     572,    12,    21,   433,  1451,    37,    64,   316,   276,  2594,
    2595,   194,    26,   278,  2651,    61,    62,   125,  2603,   271,
     156,    73,   139,   290,  1252,   276,   212,   176,   388,   760,
      25,   635,    21,   316,  1141,   156,    59,   197,   654,   509,
      18,    19,   246,  1409,   378,   138,  1283,  1284,  1155,    18,
      19,    73,   276,   138,  1420,  2920,   370,   239,    18,    19,
     282,  4100,    13,  2600,   285,    18,    19,   249,   194,  4649,
      84,    78,   194,   156,   150,  3913,   194,  1503,   235,   235,
      18,    19,   429,   433,   369,   150,  4106,    18,    19,   537,
     681,    73,   238,  4501,   293,   227,    86,   229,  4137,    70,
    2737,   692,   235,   197,   454,   235,   373,   263,    18,    19,
      65,   389,   258,    18,    19,   105,  4136,  1564,  1565,  3204,
     246,   572,  1548,   571,   246,   271,   389,   163,   156,  3421,
    3422,   219,  2671,  4713,  1371,   228,  1109,   607,   387,  3431,
    3432,   390,   389,   228,   158,   130,   496,  1219,  3143,   371,
     389,  1223,   231,   176,   770,   566,   433,   180,    22,   285,
    2963,   733,  1080,   285,   388,   769,  3031,   387,  5171,  5172,
     390,   194,  4120,   168,   457,   387,   262,   401,   390,   387,
     130,   651,   390,   369,   764,    49,   404,   219,  1260,   140,
    2776,  2777,  2752,    23,   603,   471,   387,   572,   502,   390,
     456,  2740,   511,  4000,   470,    35,   293,   637,  1280,   355,
      19,   393,   648,   649,   203,   332,   198,   482,   659,    49,
     656,  3931,   658,   237,   282,   477,  3091,   387,   764,   547,
     390,    61,    62,   547,   433,   659,   728,  4588,   428,   643,
     728,    18,    19,   603,   387,   192,   769,   390,   387,  4075,
     535,   390,   511,   369,  1380,   316,    65,   699,   191,  4085,
     160,  1789,   643,    64,   372,   764,  4721,  4093,   182,   387,
     756,  4404,   390,   488,   285,   387,   699,   770,   390,   715,
     429,  1012,  1968,   147,   231,   652,   765,  3041,    77,  1968,
    4698,  4699,   637,   387,  3379,   769,   390,  2707,   609,  1978,
     769,   256,  4128,  1831,    18,    19,  4452,   387,   331,   323,
     390,  1112,   387,   176,   769,   390,   630,  3168,   547,   387,
     184,   387,   390,    23,   390,   387,  2863,   594,   390,  2766,
     387,   477,   764,   390,   198,    35,   634,  2325,   387,  2327,
     511,   390,  3506,   543,  2881,  2882,  2883,  2884,  1302,    49,
    2150,   470,  4033,   789,  2154,   791,   370,  3578,  2768,  2159,
     796,    61,    62,   536,  3167,  2707,   788,   635,   788,  3324,
    3069,  3326,  4827,  2295,  2934,  2614,  2295,  1503,  1906,  2295,
     769,  1299,   699,  2654,   635,  2743,    18,    19,  2188,  2189,
    4482,   583,   193,   829,   765,  3559,   905,  2743,   834,   648,
     563,   767,    21,   549,  4715,   765,   429,  1775,   583,   387,
    1700,   635,   390,   769,   637,  2996,  3489,  2998,   387,  3492,
    3641,   390,   769,   767,   615,   769,  2768,   387,   648,   769,
     390,  2968,   769,  1351,   387,   769,   648,   390,    18,    19,
     648,   723,  2498,  1361,   643,   767,   648,   256,   884,   387,
    2866,   769,   390,  3421,   890,  3524,   387,   648,   769,   390,
     637,    18,    19,   769,   613,   671,   770,   748,   904,   905,
     769,   764,   767,   262,   493,  1843,   764,   387,  1904,  1847,
     390,  1771,   387,  3314,   572,   390,   601,  2253,   648,  2255,
    1006,   769,   963,   770,  3002,  2932,   623,   933,  1006,   767,
     764,  1869,   765,   769,   628,   648,   942,  3945,  4963,   648,
     696,   626,   769,   767,   950,   951,   767,   647,   765,   947,
     572,   739,   740,   764,   767,   774,   765,  4935,  3962,  3963,
     648,  3168,   960,   547,  1050,  4503,   648,   973,   974,   960,
     572,   563,  1050,   767,   765,   765,   982,   566,   767,   769,
     769,   637,  1061,   765,   648,   601,  2478,   769,   634,  2478,
     717,   769,  2478,    18,    19,   769,   429,  3827,   648,   634,
     656,   657,   543,   648,   767,  1011,   769,   999,   769,   999,
     648,   563,   648,   765,  2102,  1007,   648,  3124,   595,  3126,
    3127,   648,  3756,  3130,  3131,   631,  1105,   575,   553,   648,
    1036,   620,   502,  3140,  3141,   765,  3192,  4317,  3145,  1045,
     387,  3148,   231,   390,  3151,   694,   630,   418,   637,   765,
     769,  1057,   765,  4532,   609,  1061,   769,  1063,  1064,  1056,
    1066,   767,  1068,   769,  1056,  2488,  1056,  1073,  3165,   765,
    1076,  1077,  2716,   765,  1080,  3230,   767,   765,   769,   764,
    4061,  1087,  1007,   765,  3946,   174,  4789,   769,   841,   609,
    1096,  1097,  1098,   749,   750,  1101,   219,   614,  1104,  1105,
     648,  1107,  1108,   387,  1077,  3260,   390,  3262,  1106,   648,
      18,    19,  4318,   583,   767,   765,   769,   641,   648,   769,
    1173,  3276,  4941,  3278,   769,   648,  3395,   765,   158,   765,
    4103,   769,  3866,   769,  5221,  1141,   367,   769,  3293,   130,
     648,  5247,   769,  1229,  2232,    52,   765,   648,   901,  1155,
     769,  1229,   144,   615,   907,  2091,   127,    18,    19,  1151,
     275,  1151,   487,  2207,  1841,   749,   194,   670,   648,   767,
     191,   769,   656,   648,   553,   764,   769,   583,   179,   126,
     613,    18,    19,   158,    71,   387,  2374,  5212,   390,   372,
    4193,  4193,  2374,    18,    19,   975,   255,  1203,  1741,    18,
      19,   601,  2717,   123,  1257,  1258,     9,   237,  1261,   222,
    1753,  1264,  1265,  1266,   648,   649,  1269,  1270,  1271,  1272,
    1273,  1274,  1275,  1276,   977,   653,   765,    18,    19,  1235,
     769,  2487,  1238,   604,   285,   765,   122,   387,  2487,   769,
     390,  1320,   112,    65,  3978,   115,   769,  1259,    71,   947,
     241,  3572,  3573,    18,    19,  2281,  2282,    18,    19,   153,
     387,   769,   960,   390,   639,  3999,  1259,   456,   769,  4665,
     164,  4667,  3456,  1279,   947,   566,  3931,   248,   165,  4013,
    1286,  1287,  1288,  1289,  4018,  1291,  1292,  1293,   378,   769,
    1296,  1297,  1298,  1299,   769,  1301,  1375,   656,   657,  1305,
     111,   648,  1300,   465,   493,   789,   204,   769,    47,   209,
    1952,  1317,   960,  1392,  1320,  1288,   160,    18,    19,  1292,
    2112,    71,  1328,  1296,  2131,  1331,  2003,   247,  2120,  1335,
    1336,   601,  3975,  3976,  1332,  3491,  3940,  3178,   353,  3495,
     370,   369,   160,  5162,  1350,  1351,    44,    18,    19,  2864,
     194,  4830,   622,   623,  1360,  1361,  2259,  1363,  1364,   292,
    4003,  4004,   387,   769,   648,   390,  4009,  3474,  4011,  1375,
    1376,   372,   378,  3214,   433,  3902,   465,   566,  1384,   293,
    1421,   572,   282,   186,  3757,  1383,  1392,   243,    18,    19,
     749,   750,   413,  3523,   769,   370,  2652,   243,  2408,  2409,
     884,  1407,  3252,  2652,   290,    18,    19,  3414,  1106,  1415,
    3679,  3680,  3563,  2408,  2409,   165,   484,  3757,  3757,  2690,
    1499,    33,   769,  1421,  1430,   200,  3433,  3757,  2687,  3757,
    1421,   620,   572,  1106,   256,    18,    19,  3369,  1517,   572,
    4848,  2631,   276,  1332,  3002,  2543,   648,  1971,   637,   572,
    3008,   401,   612,  2823,    40,  3441,  3442,   404,   942,    18,
      19,  4940,   369,  3453,  2834,  2835,   950,   951,  2838,  3095,
      18,    19,  2570,  1479,  1480,  2746,   122,   216,  3410,   387,
    3884,  2123,   390,    18,    19,   769,  2745,   373,  1494,  3884,
    4463,   103,   386,  1499,   125,  4862,  1984,  3884,   648,   730,
    3468,  3469,   389,   198,  3490,  1511,  2636,  2637,  2844,   501,
     122,  1517,  3321,    18,    19,   435,  3325,   547,  4314,   433,
     635,   648,   455,    18,    19,   374,   387,    18,    19,   390,
     543,   162,  3754,  3755,  1540,  3093,  3094,    18,    19,   973,
      21,   724,   188,   365,   764,   197,  3526,  3754,  3755,   709,
     387,  1304,  1036,   390,   388,   606,    18,    19,  1338,    26,
    1552,  5079,   387,   470,  1570,   390,   389,   769,   387,  1575,
    1562,   390,   547,  5052,   765,   764,   188,   583,  3685,    11,
     333,  4589,  1066,  2609,    18,    19,  1592,  1593,   589,  3093,
     137,    18,    19,  2136,   501,    22,   387,   122,   498,   390,
     630,   156,  1300,  2646,   605,   152,  3094,   769,   141,   195,
    3451,    18,    19,   511,  3526,   704,   705,    84,   609,   769,
      18,    19,   387,   648,   764,   390,   387,  1300,   167,   390,
     550,    18,    19,   245,  1332,   768,   485,    18,    19,   389,
    1681,  4076,   769,   125,   290,   420,  1080,    18,    19,   197,
    3208,    33,   742,   743,   465,   630,   637,   355,   502,  1332,
     356,   200,  4317,   188,  2602,   612,   231,   100,   572,  4650,
      18,    19,  4045,  3165,    18,    19,  3165,   571,   290,  3165,
     162,  2769,  2770,  2771,   502,  1383,   387,   585,   128,   390,
      18,    19,  2709,  4114,   219,  4106,  1702,  1703,   122,   714,
     715,   716,  3543,   636,   131,   400,   576,  2963,   594,   579,
    1383,   363,  1718,   535,  2963,  3870,   387,   563,   637,   390,
     566,  1684,  4552,  1421,   635,  4136,   757,   373,   293,   643,
    4373,   553,  4375,   572,   765,   167,  3586,  3381,  3103,   583,
     648,   372,   370,  4325,   769,  1751,  4271,   486,  1754,  1755,
    1756,   397,  5231,   653,     0,    18,    19,   387,  1764,   422,
     390,   373,  3869,   769,   188,   290,  3616,  3617,   200,   603,
     237,  3735,   672,  1421,   387,   122,   572,   390,   125,   415,
     220,    21,  1755,  1756,   608,   397,  3750,   648,   769,  3125,
     197,   566,  3128,  3129,   125,  1279,  3132,  3133,  3134,  3135,
    3136,  3137,  3138,  3139,   387,   238,  3142,   390,  3144,  1293,
    3146,   648,   345,  2830,  3150,   510,  4797,   570,  4867,    21,
    4193,  4870,   644,   648,   401,   258,  3191,  3668,   387,   648,
     194,   390,    18,    19,    74,  1841,  1842,   209,   271,   387,
    4495,   188,   390,   596,  1328,   128,    18,    19,   373,  4005,
     769,  2352,   387,   293,  3103,   390,   323,   648,   769,  2795,
     764,   769,  4273,  2364,   429,  1299,   290,   249,    18,    19,
      18,    19,   219,   637,    18,    19,   572,   125,  4443,  4444,
     127,   420,   387,   648,  1937,   390,  4126,   648,   287,  4129,
     372,   139,   387,   275,  2395,   390,   387,  1950,  3739,   390,
    1953,   597,   449,   370,  1910,   744,   387,  4114,   769,   390,
     282,  3167,    77,   637,   245,  1927,  1350,  1351,  3167,   547,
     160,   285,   355,   586,  2425,   387,  1360,  1361,   390,  1363,
    4902,  4903,   769,   480,  1927,   572,   235,   733,  1930,  1951,
    1930,   572,  3191,   290,   769,   401,  1430,   648,   594,   373,
     769,   350,  1958,   387,   156,    22,   390,   186,  1951,   764,
     387,  1967,   572,   390,   263,   770,    13,  2046,  2047,  4191,
    4192,  2613,    13,   401,   765,    18,    19,   648,  1984,   369,
     387,  4416,   594,   390,  4191,  4192,  4629,   564,   420,   387,
     501,  2633,   390,  2635,   533,   235,  2002,  2003,  2004,   572,
     387,   248,   630,   390,   769,   769,   387,  3987,   769,   390,
     293,  5060,  3940,  2019,    18,    19,   387,  2023,   648,   390,
     160,   212,   450,   263,  3940,  2031,   373,  1511,  2034,   231,
     361,    18,    19,   160,  3241,   648,  2042,   266,   430,   387,
    2046,  2047,   390,   387,   477,   769,   390,  3254,   587,   366,
     367,  4031,  4032,  4209,    13,   615,  1540,  4037,   448,   387,
     442,   212,   390,  2142,   131,   648,  2743,   258,   769,   594,
    2076,  3880,  2078,  3882,  2080,  3987,  2155,    18,    19,   141,
     547,   186,  2088,  4047,   332,   697,  4241,  2080,  4052,   648,
     482,  1575,  4056,   140,   765,    13,   733,   262,  2104,   140,
     648,   533,   401,  3374,  2102,  3354,  3194,  2105,   564,  4748,
     503,    18,    19,   648,  2112,   626,   549,  4460,  4461,  4031,
    4032,  2112,  2120,   733,   387,  4037,   498,   390,    80,  2120,
      82,  2137,  2138,  2139,  2140,  2141,  2142,  2143,   615,   769,
     369,  3412,  4876,   648,   543,  2151,   447,  2153,  3774,  2155,
     564,  3341,  2158,   648,   367,   587,   769,   648,    13,   243,
     733,   266,    13,   630,  2137,  2138,  2139,   648,  2141,   230,
     594,  4736,   697,   125,    18,    19,    18,    19,     9,  4419,
    2153,   140,   765,   239,   493,  2158,   648,  5159,  5160,  3460,
     212,    18,    19,   249,  2206,   764,   148,   388,   282,   401,
      31,   387,   563,   416,   390,   566,   765,   127,  3396,   769,
     770,  3399,   167,  2206,   648,   387,   609,  3399,   390,   108,
    4376,   648,   140,   756,   757,   758,   759,   760,   761,  2235,
     765,  2272,   764,   534,  2232,   187,   768,   387,  3336,   387,
     390,   648,   390,   387,   197,     7,   390,   594,  4212,  4358,
     648,   612,   543,   770,   456,    18,    19,   566,  2264,  2300,
     765,   648,    18,    19,    26,   583,   125,   648,  2274,  1703,
     765,  4836,   216,  3917,   765,  2281,  2282,   648,    19,   138,
     615,  2287,   749,   345,  1718,   140,  2292,  3216,    32,   140,
     682,   493,   769,   770,    18,    19,   249,   185,   548,  2292,
     648,  4701,   230,   765,   648,   277,  4706,  2348,   280,    18,
      19,   620,  2318,    18,    19,   212,   592,  1751,  2324,   263,
     648,  5055,    84,  4303,  2330,  2331,  2332,  2333,  2334,  2335,
    2336,   765,   221,   624,  2340,    79,  2342,   393,  4607,   615,
    4609,  3351,  3530,   583,   387,    35,  2352,   390,  2354,  2355,
     235,  2357,   493,  2359,  2360,  3350,  2362,  2363,  2364,  3376,
    3003,    18,    19,  2369,   566,   220,  2372,   765,  2374,   228,
    3013,  3014,    62,  2379,    21,  3582,  2382,  2383,   765,   629,
      18,    19,   144,   387,   765,   648,   390,  2393,    21,  2395,
    3421,  4303,  4499,  2399,   765,   564,   216,    18,    19,  3430,
     387,    48,  4823,   390,  2102,   122,  4510,  2105,  3615,  2415,
     154,  4515,  2491,   249,  2112,    48,  3623,   765,   620,  2425,
    2426,   765,  2120,  3630,  4824,   566,  1910,   592,  1552,  2102,
     765,  2326,  2105,   757,   769,   637,   272,   765,  1562,    18,
      19,   765,  2337,   263,    18,    19,   387,   125,  2343,   390,
     615,  4794,  4795,  4874,  4875,   764,    18,    19,   430,   764,
    4567,   456,   648,   765,  2112,   770,  5048,   769,  3656,  5034,
     148,   188,  2120,  2479,  3656,   237,   648,  2483,  2373,   620,
     387,   212,  2377,   390,   493,  2491,   141,  5283,   440,  2384,
    2385,   656,   657,  2499,  2500,  2548,   637,   235,   648,   194,
     648,  3757,   765,   566,   648,   394,  2498,  4065,  3757,   187,
      18,    19,    18,    19,  2520,   404,  3017,   137,  2524,    59,
    2004,   764,   411,  3330,    18,    19,  2264,  2500,    18,    19,
      18,    19,   152,  1967,  2232,    18,    19,   137,  4642,    18,
      19,  4769,  4646,   387,   681,   387,   390,   764,   390,  2287,
    1984,   246,   152,    18,    19,   692,  3057,   566,  2042,  2232,
     387,   323,   764,   390,  3065,   767,    38,   769,  2002,  3070,
     764,    64,   563,   290,    46,   566,    18,    19,  2657,   765,
      19,    74,   300,   301,   749,   750,   234,   235,  4214,    12,
     285,   681,    19,   765,   718,   719,    89,  2031,  4702,  2605,
    2034,    21,   692,  4707,  2088,   648,    18,    19,   370,    61,
      62,   620,   621,   261,  5196,   765,  4823,   765,  3988,    71,
    2104,   765,   681,   764,   387,   764,   515,   390,   637,    61,
      62,   387,   141,   692,   390,  3244,   176,  3246,   764,    71,
     180,  2647,  2648,   764,   648,   988,   989,  2639,   991,  2639,
     993,  2657,    84,   108,   194,   765,   373,   764,  2664,   769,
    3790,   648,  5011,   387,   572,   765,   390,  4874,  4875,   769,
    3941,   415,   527,   528,  2680,   530,   531,   532,   387,  2685,
     100,   390,   387,  2689,  2690,   390,  4793,    61,    62,   451,
     345,  3821,  3822,   437,   549,   764,   758,   759,   760,   761,
     193,  3343,   141,   769,  3511,  3512,  2140,   648,   493,  2143,
     320,   321,   167,  2719,   141,   325,   326,  3847,   764,    64,
    2726,  2727,   765,   612,  4607,  3913,  4609,   445,   446,    74,
     387,   656,   657,   390,   478,  3833,   156,  2743,   764,  2751,
    2746,   648,   235,  2735,    89,   200,  2752,   764,   765,   387,
    4130,  2235,   390,  4133,  4134,   764,   764,  2798,  2751,  2752,
    2752,   765,  2752,   765,  4573,   764,   387,   769,   728,   390,
     263,  2769,  2770,  2771,   194,   212,   765,   770,   765,  3775,
     769,   566,  4340,  4341,  3828,   547,   150,   151,   748,  4045,
    2274,   331,   212,  3891,   764,   539,  4045,   217,  5147,  2805,
    2798,   761,   762,  2856,   648,  2858,   648,  2798,   387,   300,
     301,   390,   575,   387,   862,    26,   390,   865,   238,   765,
     103,   648,   870,   769,   765,   387,   246,   875,   390,   122,
    2836,  2837,   212,   765,   764,   620,   345,   769,   258,   122,
     623,   765,  2848,   626,  4851,   769,   141,  2853,   764,   504,
     505,   271,   637,  2287,    77,   764,   276,  5206,   765,  5208,
     764,  4197,  4198,  4199,  4200,   285,    77,   765,   630,   764,
      93,   769,   765,    84,   179,  5224,   769,   594,  2362,   387,
     764,   387,   390,   765,   390,   648,   764,   769,   637,   429,
     235,   640,   648,   387,   765,   188,   390,   387,   769,   387,
     390,   668,   390,   670,   387,   188,   345,   390,   387,   765,
     764,   390,   765,   769,  2920,  2399,   769,   764,   345,  5268,
    5269,   765,   717,   765,   648,   418,   219,   765,  2934,  2935,
    2936,   769,  2388,  2389,   227,   355,   229,  4193,   765,   648,
     764,  2934,   765,   648,  4193,   387,   769,   158,   390,  2383,
    2408,  2409,   765,  2959,   445,   446,   769,   765,   378,   765,
     764,   769,   245,   769,  3981,   420,   177,   764,   388,  3986,
     194,  3580,  3581,   184,   764,   387,  3585,   764,   390,   764,
      12,  2415,  1190,  1191,   765,   765,  2992,   749,   769,   769,
    2996,   648,  2998,   764,  3930,   504,   505,   290,  3004,   564,
     765,   765,  3008,    21,   769,   769,   764,   290,   135,   765,
     648,  3017,  3621,   764,  3020,  2185,  2186,   241,  3627,  3628,
    3629,   764,   122,  3632,   764,  3031,   237,   648,  4299,   764,
     764,  3037,   764,   524,   525,   526,  2520,  4081,   419,   765,
    2524,   765,   265,   769,   764,  2479,   481,   654,  4092,  2483,
     345,  3057,   764,  4324,   764,   122,   765,   477,   125,  3065,
     765,   366,   367,  3069,  3070,   504,   505,   372,   764,   648,
     764,  2769,  2770,  2771,   648,   764,   108,   504,   505,  3085,
     373,   501,   100,   765,  3090,  3091,   648,   769,   188,   765,
     373,   667,   668,   769,   670,   127,  2769,  2770,  2771,   764,
    2798,   756,   757,   758,   759,   760,   761,   385,   765,   765,
     764,   566,   323,   769,   397,  3121,   563,   378,   764,   219,
     343,   188,   765,   381,   765,  4313,   769,   765,   769,   549,
    4318,  3217,   587,   120,   764,   764,  4318,   765,   156,  3217,
     648,   769,   648,  3149,   765,   764,   369,   764,   764,   764,
    2798,  5258,   219,   364,   648,   764,   764,   612,   648,   370,
     648,   197,   765,  3169,   246,   648,   769,  5274,   200,   648,
     231,   765,   764,   628,   192,   769,   194,   765,   481,   764,
    2664,   769,   764,   603,   194,   765,   765,  3193,   141,   769,
     290,   765,   764,  5300,   212,   615,  3194,  3203,   764,   217,
    3206,   765,  3208,   765,   764,   769,   648,   764,   431,   504,
     505,   243,  3204,   231,   764,   635,  3208,   637,  3208,   764,
     238,  3213,  3214,   290,   197,   246,   765,  3219,   246,   765,
     769,   765,   456,   769,   493,   769,   648,   765,   764,   226,
     258,   769,   501,   764,   764,   754,   755,   756,   757,   758,
     759,   760,   761,   271,   286,   621,   765,   765,   276,   765,
     765,   564,   764,  3940,   769,   764,   569,   285,   764,   493,
     765,   765,   141,   373,   769,   765,   765,   765,   698,   765,
     769,   501,   765,   769,   589,  2719,   765,   156,   764,   378,
     765,   764,  2726,  2727,   769,   141,   764,   501,   765,   765,
     605,   594,   769,   769,   764,   764,   373,   566,  3314,   612,
     533,   594,  3391,   764,   764,   754,   755,   756,   757,   758,
     759,   760,   761,   765,   764,   628,  3332,   754,   755,   756,
     757,   758,   759,   760,   761,   765,   547,   355,   764,   769,
    4384,  4385,   566,  4387,   764,   765,    77,   767,   335,   769,
     764,   654,   339,   765,   774,   764,   764,   764,  4488,   346,
     378,   620,   621,  3369,   764,  4394,  4395,  3373,  3374,   765,
     388,   764,   141,   769,  3380,    77,   765,   765,   637,   765,
     769,   769,    33,   769,   212,  3391,   764,  3379,   420,  3395,
    3396,   100,   345,  3399,   770,   770,   620,   769,   769,   764,
     769,   764,  2836,  2837,  3410,    96,  3412,  3399,   770,  3399,
     764,    48,   156,   637,   697,  3421,  3422,   156,   197,   630,
     767,    26,    37,   111,  3430,  3431,  3432,   158,  3421,  3422,
     765,  3484,   764,   160,   768,   160,  2920,  3430,  3431,  3432,
     427,    21,   160,   769,   612,   249,    48,    27,   160,   161,
     276,   293,   195,   160,  3460,   747,  4971,   384,    37,   477,
     755,   756,   757,   758,   759,   760,   761,   499,   171,   533,
     519,  3477,    77,  3479,   193,    21,   345,   709,     7,    84,
      71,    13,   634,   501,    64,   765,   765,   122,   140,   201,
     141,    71,    10,   769,   594,    75,  3194,    77,   770,   345,
     115,   765,   214,   765,   491,   764,   237,   122,  2992,    89,
     458,   459,   460,   461,   462,   463,   464,  3523,   765,  3525,
     765,  3194,   765,   765,  3530,   765,   502,   594,   764,   238,
    3523,   549,   564,   275,   566,   237,   115,   667,   749,   378,
     764,   615,   254,   122,   709,   125,   563,  3031,   516,   258,
     769,   504,   505,   188,   100,   267,    50,  3563,   282,    30,
     122,   287,   271,   125,   179,  3571,   769,   583,   600,   769,
    4587,   769,   177,   188,   487,    71,   345,   733,   572,   184,
     612,    27,   294,   273,   219,   603,   769,   769,   658,   768,
    4634,   769,  4636,  4637,   770,   166,   614,   615,   249,   194,
     179,   764,   543,   563,   219,   166,  3090,  3091,   543,   188,
     156,   287,   157,    88,   769,   769,   122,   635,    64,   637,
     194,    21,  4666,   203,   275,    71,   188,   769,   379,    75,
     559,    77,   237,   364,   646,   504,   505,  3643,   136,   370,
     219,   156,   765,    89,   729,   632,   355,   359,   194,    48,
    3656,  3085,   654,  3659,  3660,   290,   729,   219,   504,   505,
    4848,   160,   364,   650,   769,   637,   212,   160,   370,   378,
     160,   217,   141,  3679,  3680,   290,   708,  3683,   160,   125,
     698,   160,   188,   263,   160,  3169,   160,   404,   100,   572,
     769,   503,   238,    13,   345,  4644,    87,    37,   125,   316,
     246,     7,   764,   110,   583,   158,   493,   401,   439,  3193,
    4736,   290,   258,   219,   501,   366,   367,  3723,   323,    74,
    3726,   401,   401,    43,   583,   271,   136,   261,   290,  3735,
     276,   261,   401,   136,   401,   504,   505,   439,   373,   285,
      48,   356,   401,  4769,  3750,   401,  3752,   765,   401,   767,
     585,   769,   401,   368,   122,   619,   774,   372,   373,   364,
     769,   619,   769,   501,  3770,   370,   710,   628,   477,  3203,
     492,   764,  3206,  3779,    94,   115,   764,   356,    98,   566,
     249,   765,   122,   769,   290,   610,   366,   367,    12,    57,
     448,   442,   372,   372,   373,  4602,   171,   378,   378,     7,
     717,   754,   755,   756,   757,   758,   759,   760,   761,   355,
    4836,   373,   765,   111,   378,   614,   547,   263,     7,   228,
     188,  4951,   592,   200,   197,   765,   238,   765,   765,   765,
     769,   765,   378,   620,   621,  4784,   757,   765,   418,   179,
     549,   765,   388,   765,   764,   547,   258,   765,   188,   765,
     637,   219,   690,   504,   505,   765,   765,   765,   769,   271,
     765,   765,   769,   765,   765,   761,   517,   373,   599,  4957,
     769,   122,   770,    64,   125,   770,   345,   770,   764,   219,
     764,   769,   764,    74,   108,   754,   755,   756,   757,   758,
     759,   760,   761,   765,   770,   769,  3902,   599,    89,   630,
     192,   768,  5032,   127,   287,   287,   615,  3913,   754,   755,
     756,   757,   758,   759,   760,   761,   287,   497,   287,   765,
     366,   367,   290,   287,   287,   769,   372,   160,   630,   769,
     378,   477,   378,   253,  3940,  3941,   583,   188,   635,  3931,
    3946,    15,   547,   355,   583,   236,  3380,    21,    64,   769,
     290,   769,   769,  3946,   401,   501,   583,   572,    74,   594,
      13,   576,   769,   160,   579,    39,   378,   547,   219,    43,
     210,   197,   418,    89,   589,   199,   378,   764,   197,   594,
     583,   255,   597,    57,    58,   754,   755,   756,   757,   758,
     759,   760,   761,   572,  4000,   141,   765,   576,   583,   456,
     579,   433,   193,   549,   194,   373,   770,   770,  5034,   770,
     589,   235,   332,   770,   770,   594,   356,   769,   597,   249,
     252,   758,   561,   181,   604,   630,   194,   514,   769,    60,
    4071,  5219,   594,   373,   769,   504,   505,  5219,   405,   290,
     194,  4047,   765,  4049,   235,   402,  4052,   572,   404,   572,
    4056,   497,   404,    64,   160,  5243,   771,   603,   160,  4065,
     572,  5243,   286,    74,   126,   477,   342,    60,   669,   615,
    4076,   722,   263,   769,  5262,   770,   396,   193,    89,   263,
    5262,   478,   598,   199,   186,   263,   263,   764,   594,   635,
      77,   637,   403,  4099,  5282,   707,   378,  4103,   673,   201,
    5282,   547,   249,   754,   755,   756,   757,   758,   759,   760,
     761,   160,   214,   673,   160,   160,   160,   141,  5067,   235,
     160,  5165,   373,   160,   111,   160,   706,   160,   160,   642,
     160,   160,   160,   160,   160,  4141,  4142,   549,   160,    35,
     160,   756,   757,  4941,   749,   160,   160,   263,   160,   764,
     730,   160,   698,   160,   522,   160,  4162,   160,   604,   160,
     160,   160,   160,   160,   266,   267,   390,   709,   160,   749,
     750,   158,   160,   286,   160,   160,   160,   756,   757,   160,
     160,  4187,   193,   160,   160,   764,   654,   465,   199,  4162,
     378,   764,   294,    14,   154,   765,    17,   765,   518,   345,
     765,   770,   245,   615,   245,   583,  4212,   765,   765,   765,
     401,   765,   572,   572,   769,    36,   655,    35,  4224,   765,
     770,   767,  4214,   769,   235,   249,   594,   418,   774,    50,
      51,   572,   572,   770,   770,  5280,   576,    58,   764,   579,
     560,   769,    63,    64,    62,   583,   770,   764,   235,   589,
     385,   197,   263,   764,   594,   769,   212,   597,    79,   731,
     706,   363,   158,   733,   728,   197,   162,   433,   765,   615,
     336,   428,   156,   764,   769,   499,   764,    12,    99,   764,
     555,   404,   456,   404,   730,   754,   755,   756,   757,   758,
     759,   760,   761,  4299,   112,   519,   160,   115,   406,  4305,
     121,    73,   418,   749,   750,   123,   202,  4313,   769,   492,
     131,   132,  4318,  4319,   378,   417,   533,   533,  4324,   533,
    5127,   345,   143,   144,   142,  4317,   222,   533,   533,  5265,
     764,   764,   263,   263,   615,   322,  3770,   592,   769,   564,
     564,   637,   566,   594,  4350,   569,   367,   769,   583,   170,
     373,   564,   583,   340,   451,   769,  4362,   765,   504,   505,
     378,   378,   212,   764,  5162,    62,   473,   765,   764,   190,
     764,   189,   764,   247,   764,   764,   600,   364,   764,   764,
     604,   247,   721,   764,   764,   764,    48,   208,   612,   210,
     401,   287,   495,   108,   215,   414,   572,   218,  4404,   765,
     765,   688,  4408,   519,   765,   688,   764,   418,   285,    12,
    4416,   547,   233,   160,  5221,   769,   756,   757,   765,   769,
     241,   765,   758,   244,   769,   231,   385,   282,   643,   764,
     654,   160,   197,    27,    28,   769,   765,   765,   765,   765,
     765,   258,   260,   264,   258,   103,   391,    48,   217,   373,
      48,   764,   167,   160,    18,    19,   103,  4463,   228,   764,
     281,   245,   278,   770,   285,   160,   111,    61,    62,    63,
     111,   369,   162,   401,   764,   764,  5274,    71,   730,   764,
     504,   505,   125,    77,   708,   200,   441,   383,   604,    83,
      84,   764,   764,    87,   764,  4501,   125,  4503,  4504,   566,
     765,   583,  5300,  4495,   384,   404,  4585,   756,   519,   378,
     764,   378,   516,   373,   401,   765,   197,   111,   765,   765,
     235,   765,   637,   419,   765,  4531,   765,   433,   583,    21,
     210,   125,   378,   269,  4540,   129,   354,   246,   765,   357,
     769,   197,   770,   698,   258,   258,   769,   443,   258,   277,
     404,    48,   116,   117,   118,   119,   120,   404,    48,    48,
     547,   382,   774,   774,   158,   774,   153,    48,   478,   764,
      35,   286,   468,   758,    35,   626,   125,   564,   730,  4585,
     263,    64,   203,    35,   609,   263,  4592,   373,   373,   764,
     373,   416,  4076,   604,   415,    77,   378,   378,    21,   770,
     764,  4607,   676,  4609,   765,   426,   488,   681,   754,   755,
     756,   757,   758,   759,   760,   761,   512,   435,   769,  4103,
     765,   516,   765,   765,   765,   765,   765,   448,   765,   265,
     451,   765,   453,   428,   342,   456,   769,   711,   769,    48,
     388,   235,   175,   765,   378,   466,   467,   543,   242,   210,
     285,    21,   385,   727,   147,   476,   765,   478,   566,   223,
     224,   225,   226,  4669,   764,  4099,   487,   563,   262,   258,
     566,   764,   493,   258,   765,   769,   120,   120,   378,    48,
     501,    48,    48,   388,   620,   506,   507,   508,   373,   764,
      15,   509,  4698,  4699,   368,   621,   769,    21,    81,   511,
     415,   143,   373,   764,   769,   420,  4759,  4141,   228,   765,
     784,   785,   404,   787,   788,   769,   194,   342,   539,   373,
     173,    48,   385,   765,   263,   546,   800,   378,   322,    21,
     754,   755,   756,   757,   758,   759,   760,   761,   194,   276,
     162,   319,    48,   637,   149,   566,   340,   674,   398,   473,
     162,   637,  4758,   609,   770,   765,   769,   765,   764,   136,
     136,   579,   764,  4769,   574,   136,   158,   378,   764,   590,
     765,   335,   538,   337,   338,   339,   765,    56,   769,   769,
     484,   602,   346,  4789,   499,   606,   765,    66,   484,   607,
    4224,   765,   764,   614,   764,   764,   764,    76,   764,   620,
     764,   395,   765,   692,   519,   654,   679,   692,  4849,   692,
     404,    90,    91,    92,    48,    48,   637,   535,   555,   155,
     894,   764,   771,   387,   645,   634,   390,   106,    32,    64,
     385,    19,    64,   482,   554,   703,   765,   634,   197,    32,
      56,   385,  4848,   385,  4850,   765,   143,   134,   692,   564,
      66,  4857,  4858,   484,   569,   676,  4862,   689,   465,   933,
      76,   702,     6,   427,   228,   378,   378,   246,   154,    48,
     767,  4877,   587,   947,    90,    91,    92,   171,   609,   130,
     634,   154,   230,  4889,   292,   600,   960,   124,   767,   483,
     106,   231,   713,  4899,    54,   771,   703,   612,  4904,   575,
     143,   373,   767,   764,   154,   575,   116,   117,   118,   119,
     120,   769,  4909,   628,   215,   767,    54,  4909,   501,  4909,
     194,   455,   194,  4976,   154,   194,   490,   491,   125,  4935,
     636,   575,  4416,   769,   196,   699,  3358,   378,  4909,   654,
    3162,  3156,    77,   764,  3158,   539,   540,   541,   542,  4503,
    3160,  3748,  3153,   547,  4499,  4506,  4514,  3556,    93,  4957,
    4529,  1111,  4939,    15,  4825,  5113,  1597,  5114,  4531,  4720,
     564,  5300,  5258,   567,    46,  3902,  2742,  2685,  5270,  4463,
    4811,  4987,   964,  4811,  4990,  5174,  4811,  5083,  4811,  5174,
    5160,  4811,  5109,   708,  5108,  4811,  4811,  5003,  3757,   134,
    2315,  4811,  1071,  4811,  4811,  4811,  4811,  4811,  2321,   603,
    4045,  1085,  3354,   223,   224,   225,   226,  4193,  2480,  4214,
    3219,  3214,  3995,  3213,  5030,  5057,  4623,  4401,  5136,  4784,
    5067,  5069,  1106,  2478,  3777,  2408,  4065,  3208,  4117,  4066,
    1114,  1115,  3599,  3632,  5050,  4430,  3631,  4120,  5079,  1123,
    1124,  1125,  1126,  1127,  1128,   334,  3310,  4788,  4702,  4642,
    4646,  4656,  1136,  1137,  4707,  1139,  1140,  3004,   632,  1750,
    1144,  1145,   351,  3015,  1148,  1149,  1150,  1151,  4849,  1153,
    1154,  4408,  4092,  5136,   648,   649,   650,  1161,  1162,  4210,
    1164,  1165,  1166,  1167,  1168,  3763,  2892,  1171,  1172,  1173,
    1174,  1175,  1176,  1177,  1178,  1179,  2885,  1181,  3196,  2409,
    1184,  1185,  4480,  4811,  2408,  1189,    35,  1572,   334,  1193,
    1194,  1195,  2409,  2194,   969,   335,  3662,   337,   338,   339,
     265,   725,  1206,  1207,  1208,   351,   346,  1211,  4811,  2190,
    1214,  1215,  1216,  1217,  1218,  1219,  1522,  3023,  2732,  1223,
    1728,  2726,  1703,  3121,  3380,   749,   750,  2716,  4592,    63,
    1234,  1235,  3918,  4811,  2083,  2267,   934,  1235,  1242,  1958,
    1244,  1245,   933,  5179,  2645,  4757,  1897,  3323,  5034,  4736,
    5186,  2752,  1256,  1257,  1258,  2752,  1260,  1261,  1155,  2752,
    1264,  1265,  1266,   472,  2752,  1269,  1270,  1271,  1272,  1273,
    1274,  1275,  1276,  5127,  4902,  4903,  1280,  5050,   343,  4611,
     489,  1285,  5221,  5219,  5247,  4343,  4857,   427,  3683,  5225,
    1129,  4858,  3974,   982,  5230,  4758,  1300,  4352,  3437,  4902,
    4903,   366,   367,  5239,   369,  4568,  1479,  5243,  3656,   158,
    4731,  4640,    16,   162,  2274,  1056,  2652,  3379,  1968,  3379,
    1340,  1056,  4321,  3937,  4902,  4903,  5262,  1477,  1332,  4957,
    3377,  4304,  1056,  4313,  1052,  1056,  2146,  1571,  5274,   963,
    2831,  2673,   551,   489,  1053,  2172,  5282,  2832,  3085,  2056,
     490,   491,  3383,   202,  4957,  4027,  5126,  4391,  5280,   568,
    5280,  4273,  5262,  5047,  5300,  5282,   431,  4614,  4136,  4318,
    2935,  1238,  4208,   222,  3149,  2105,  5042,  1419,    43,  1383,
      27,    28,  5010,  5011,  2798,     4,  1390,  2120,    43,  1417,
    2100,  2719,  2098,   919,    39,  2491,  2880,  4582,  2492,  5027,
    1517,  4741,    21,    11,   922,   551,    11,  5010,  5011,  4152,
    1379,  5058,  4211,  1046,  1111,  3766,    63,  1421,  1111,  1423,
      39,  1111,   568,  4524,  5027,    -1,    -1,  1332,  3673,    -1,
      77,    -1,  5010,  5011,    -1,    -1,    83,    84,   287,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5027,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5090,    -1,   111,    -1,    -1,    -1,   533,    -1,
      -1,    -1,  1476,    -1,    -1,    -1,    -1,  5105,   125,    -1,
      -1,    -1,   129,    -1,    -1,    -1,    -1,  5090,    -1,    -1,
    5118,  1495,   632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5105,    -1,    -1,    -1,    -1,    -1,    -1,   649,
     650,   158,  5090,    -1,    -1,  5118,    -1,    -1,    -1,  5147,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5105,    -1,    -1,
      -1,  5159,  5160,    -1,   383,    -1,    -1,    -1,    -1,    -1,
    5118,    -1,    -1,    -1,  5147,  1549,    -1,    -1,    -1,  5177,
      -1,    -1,    -1,    -1,    -1,    -1,  5159,  5160,    -1,  5187,
      -1,  5027,    -1,    -1,  5192,    -1,    -1,    -1,    -1,  5147,
     419,    -1,    -1,  4987,  5177,    -1,  4990,    -1,  5206,    -1,
    5208,  5159,  5160,    -1,  5187,    -1,    -1,    -1,   235,  5192,
      -1,    -1,    -1,    -1,   443,   242,  5224,    -1,  5226,  5177,
    5228,    -1,    -1,  5206,    -1,  5208,    -1,    -1,    -1,  5187,
      -1,    -1,    -1,    -1,  5192,   262,  5030,    -1,    -1,   468,
      -1,  5224,  5250,  5226,  5090,  5228,    -1,    -1,  5206,    -1,
    5208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5105,
    5268,  5269,    -1,    -1,    -1,    -1,  5224,  5250,  5226,    -1,
    5228,    -1,  5118,    -1,    -1,    -1,    -1,  5285,  5286,    -1,
      -1,    -1,  5290,   512,    -1,  5268,  5269,    -1,    -1,    -1,
      -1,    -1,  5250,    -1,    -1,   322,    -1,    -1,    -1,    -1,
      -1,    -1,  5285,  5286,    -1,    -1,    -1,  5290,    -1,    -1,
    5268,  5269,    -1,   340,   543,    -1,    -1,    -1,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5285,  5286,    -1,
      -1,  5177,  5290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5187,    -1,    -1,    -1,    -1,  5192,    -1,    -1,   711,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   727,    -1,    -1,   395,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,    -1,    -1,
    5226,    -1,  5228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1777,    -1,    -1,    -1,  1781,    -1,    -1,
      -1,    -1,    -1,    -1,  5250,  1789,    -1,  1791,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   788,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5285,
    5286,    -1,    -1,    -1,  5290,  5239,    -1,  1831,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1875,  1876,  1877,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   539,   540,   541,   542,    -1,    -1,    -1,    -1,
     547,    -1,  1906,    -1,    -1,    -1,    -1,  1911,    -1,    -1,
      -1,    -1,   894,    -1,    -1,    -1,    -1,   564,    -1,    -1,
     567,    -1,    -1,    -1,    -1,    -1,  1930,    -1,    -1,    -1,
      -1,    -1,    -1,  1937,    -1,    -1,    -1,    -1,  1942,    -1,
    1944,    -1,    -1,    -1,    -1,    -1,  1950,    -1,  1952,  1953,
      -1,   933,    -1,    -1,    -1,    -1,   603,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1601,    -1,  1603,  1604,    -1,    -1,    -1,
    1608,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1620,    -1,    -1,  1623,  1624,    -1,  1626,    -1,
      -1,  1629,  1630,  1631,  1632,    -1,    -1,    -1,  1636,    -1,
      -1,    -1,    -1,  1641,    -1,    -1,    -1,    -1,  1646,  1647,
    1648,  1649,  1650,    -1,    -1,    -1,  1654,  1655,    -1,    -1,
      -1,    -1,  1660,    -1,  1662,  1663,  1664,    -1,  1666,  1667,
      -1,  1669,    -1,    -1,  1672,    -1,    -1,  1675,  1676,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   725,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2102,    -1,
      -1,  2105,   749,   750,    -1,    -1,    -1,    -1,  2112,  2113,
      -1,    -1,    -1,  2117,    -1,    -1,  2120,    -1,    -1,  2123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2132,    -1,
      -1,    -1,  1114,  1115,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1123,  1124,    -1,    -1,  1127,  1128,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1136,  1137,    -1,  1139,  1140,    -1,
      -1,    -1,  1144,    -1,    -1,    -1,  1148,  1149,  1150,  1151,
      -1,  1153,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1161,
    1162,    -1,  1164,  1165,    -1,    -1,    -1,    -1,    -1,  1171,
      -1,    -1,  1174,  1175,  1176,  1177,  1178,  1179,    -1,  1181,
      -1,    -1,  1184,  1185,    -1,    -1,    -1,  1189,    -1,    -1,
      -1,  1193,  1194,  1195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1206,  1207,  1208,    -1,  2232,    -1,
      -1,    -1,  1214,  1215,  1216,  1217,  1218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1234,  1235,    -1,    -1,    14,    -1,    -1,    17,
    1242,    -1,  1244,  1245,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   891,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    50,    51,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,  1285,    -1,    63,    64,    -1,    -1,  2313,
      -1,    -1,  2316,  2317,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,   947,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   975,    -1,    -1,    -1,
      -1,    -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   131,   132,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   143,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1390,    -1,
      -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2429,    -1,    -1,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1423,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,   210,    -1,    -1,    -1,    -1,   215,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   241,    -1,    -1,   244,  1106,    -1,    -1,
      -1,    -1,    -1,    -1,  1476,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2506,    -1,    -1,    -1,   264,    -1,    -1,    -1,
      -1,  2515,  2516,  1495,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,    -1,    -1,    -1,   285,    -1,    -1,
      -1,  2535,  2536,    -1,  2538,    -1,    -1,  2541,  2542,  2543,
    2544,  2545,    -1,    -1,  2548,    -1,    -1,    -1,    21,    -1,
      -1,    -1,    -1,  2557,    27,    28,    -1,    -1,  2562,    -1,
    2564,    -1,  2566,  2567,    -1,  2569,  2570,  1549,    -1,    -1,
    2574,  2575,  2576,    -1,    -1,    -1,  2580,  2581,  2582,    -1,
    2584,    -1,  2586,    -1,  2588,    -1,  2590,    -1,  2592,    -1,
      63,    -1,    -1,  2597,    -1,    -1,  2224,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,  2613,
      83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   382,    -1,    -1,  2631,    -1,  2633,
      -1,  2635,    -1,    -1,    -1,  2639,    -1,    -1,   111,    -1,
      -1,  2645,  2646,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   125,    -1,    -1,    -1,   129,   415,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   426,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1300,    -1,   156,    -1,   158,    -1,    -1,    -1,    -1,
     448,    -1,    -1,   451,  2322,   453,    -1,    -1,   456,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,   467,
      -1,    -1,    -1,  1332,    -1,    -1,    -1,  2721,   476,  1338,
     478,  2349,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,
      -1,    -1,    -1,  1352,    -1,   493,    -1,    -1,  2366,    -1,
      -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,   506,   507,
     508,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,
      -1,    -1,   235,    -1,  1383,  2769,  2770,  2771,    -1,   242,
      -1,    -1,    -1,    -1,    -1,  2403,  2404,    -1,    -1,    -1,
      -1,   539,    -1,  2411,    -1,    -1,    -1,    -1,   546,   262,
      -1,    -1,    -1,    -1,  2798,  1777,    -1,    -1,    -1,  1781,
      -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,   566,  1791,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2846,    -1,   602,    -1,    -1,    -1,   606,   322,
      -1,    -1,  2856,    -1,  2858,    -1,   614,    -1,    -1,    -1,
      -1,    -1,   620,    -1,    -1,  2493,    -1,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   645,    -1,    -1,
      -1,    -1,    -1,  1875,  1876,  1877,    -1,    -1,    -1,    -1,
    1519,  1520,  1521,   661,   662,   663,   664,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   676,    -1,
      -1,    -1,   395,    -1,  2928,    -1,    -1,    -1,   401,  1911,
      -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1930,    -1,
      -1,    -1,    -1,    -1,    -1,   713,    -1,    -1,    -1,    -1,
    1942,    -1,  1944,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    -1,    -1,    -1,    -1,    -1,    27,
      28,    -1,    -1,   456,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   764,    -1,    -1,    -1,
     483,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,
     493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   111,    -1,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,    -1,   547,    -1,    -1,   125,    -1,    -1,
      -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   564,    -1,   566,   567,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,
     158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     603,  2113,    -1,    -1,    -1,  2117,    -1,    -1,    -1,    -1,
      -1,    -1,    35,    36,    -1,    -1,    -1,   620,    -1,    -1,
    2132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   637,    -1,    -1,    -1,    61,    62,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,
      73,    -1,    -1,   231,    -1,    -1,    -1,   235,    -1,    -1,
    3194,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    97,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,   109,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3236,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   725,    -1,    -1,    -1,    -1,    -1,    -1,  3263,
    3264,    -1,    -1,    -1,   157,   158,    -1,    -1,    -1,    -1,
     163,    -1,    -1,   166,   322,    -1,   749,   750,    -1,    -1,
      -1,    -1,    -1,   176,    -1,  3289,    -1,    -1,    -1,    -1,
      -1,   764,   340,    -1,   767,  3299,    -1,  3301,    -1,  3303,
     232,    -1,    -1,    -1,    -1,   198,    -1,   200,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   209,    -1,   211,    -1,
      -1,  2949,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3336,    -1,    -1,    -1,    -1,  3341,    -1,  3343,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,
      -1,    -1,    -1,   401,    -1,    -1,   404,    -1,    -1,    -1,
      -1,    -1,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,  3377,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,    -1,    -1,   282,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   456,  3413,
      -1,    -1,    -1,  2032,  2033,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   316,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   493,    -1,  2429,    -1,  3453,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3105,    -1,    -1,
    3484,    -1,    -1,  2102,    -1,    -1,  2105,    -1,   381,    -1,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,    -1,   547,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,   408,   564,    -1,   566,   567,
      -1,    -1,    -1,    -1,  2506,    -1,   419,   420,    -1,   422,
     423,   424,    -1,  2515,  2516,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3173,  3174,  3175,  3176,    -1,
      -1,   444,    -1,  2535,  2536,   603,  2538,    -1,  3562,  2541,
    2542,  2543,  2544,  2545,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   620,    -1,    -1,  2557,    -1,    -1,    -1,    -1,
    2562,    -1,  2564,    -1,  2566,  2567,    -1,  2569,    -1,   637,
      -1,    -1,  2574,  2575,  2576,    -1,    -1,    -1,  2580,  2581,
    2582,    -1,  2584,    -1,  2586,   498,  2588,    -1,  2590,    -1,
    2592,    -1,    -1,  2232,    -1,  2597,    -1,    -1,   511,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2253,    -1,  2255,    -1,  2257,  2258,
      -1,  2260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     543,    -1,    -1,    -1,   547,    -1,    -1,  2639,    -1,    -1,
      -1,    -1,    -1,  2645,    -1,    -1,    -1,    -1,    -1,    -1,
     563,    -1,    -1,   566,    -1,    -1,    -1,   725,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2310,    -1,   586,    -1,  2314,    -1,    -1,    -1,    -1,
    2319,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   764,    -1,    -1,   767,
      -1,    -1,    -1,    -1,    -1,  2344,  2345,  2346,  2347,    -1,
      -1,   624,    -1,    -1,    -1,    -1,    -1,    -1,   631,  2721,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3754,  3755,    -1,    -1,    -1,    -1,    -1,  2376,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   711,
     712,  2400,  2401,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3794,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     732,    -1,   734,   735,   736,   737,   738,    -1,    -1,   741,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3825,    -1,  3827,    -1,    -1,  3830,  3831,    -1,  3833,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     7,
    3844,    -1,    -1,    -1,    12,  3849,    14,    -1,  3852,    17,
      -1,  3855,  3856,    -1,    -1,    -1,    -1,    -1,    -1,    27,
      28,    -1,    -1,    -1,  2846,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3877,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3891,    -1,    -1,
      58,    -1,    -1,    61,    62,    63,    64,    -1,    -1,    -1,
      -1,    69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,
      -1,    -1,    -1,  3937,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   111,    -1,    -1,  2928,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,
      -1,   129,    -1,    -1,    -1,    -1,    -1,  3971,  3972,   137,
     138,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,
     158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4057,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,    -1,   235,    -1,    -1,
      -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2722,    -1,    -1,    -1,    -1,  3736,  3737,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2769,  2770,  2771,    -1,   322,  4159,  4160,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   340,    -1,    -1,     7,   344,    -1,    -1,    -1,
      12,  2800,    14,    -1,    -1,    -1,    -1,  4191,  4192,    -1,
      -1,    -1,    -1,    -1,    -1,    27,    28,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,
     388,    -1,    -1,    -1,    -1,  2844,    58,   395,    -1,    -1,
      -1,    63,    -1,    -1,    -1,    -1,   404,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    77,  3228,    -1,    -1,    -1,
      -1,    83,    84,    -1,  3236,    87,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    96,    -1,    -1,    -1,   436,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,
      -1,  3263,  3264,   451,   452,   453,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   125,    -1,  2914,    -1,   129,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   137,    -1,  3289,    -1,    -1,
    4314,    -1,   144,    -1,    -1,   483,    -1,  3299,    -1,  3301,
     152,  3303,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,
    4334,  2950,  4336,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2962,    -1,  2964,  2965,  2966,  2967,    -1,
    2969,  2970,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,    -1,   547,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3377,   564,    -1,    -1,   567,
      -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,
     242,    -1,    -1,  3032,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   590,    -1,    -1,    -1,  3045,    -1,    -1,    -1,
     262,  3413,    -1,    -1,    -1,   603,    -1,    -1,    -1,    -1,
      -1,  4445,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,
      -1,  3453,   640,  4477,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4115,  4116,    -1,
     322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3125,    -1,   340,  3128,
    3129,    -1,   344,  3132,  3133,  3134,  3135,  3136,  3137,  3138,
    3139,    -1,    -1,  3142,    -1,  3144,    -1,  3146,  3147,    -1,
      -1,  3150,     7,    -1,    -1,    -1,    -1,    12,    -1,    14,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,  4552,    -1,
      -1,  4555,    27,    28,    -1,    -1,   388,   725,   726,   727,
      -1,    -1,    -1,   395,  4568,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   404,    -1,    -1,  3194,    -1,    -1,    -1,    -1,
    3562,   749,   750,    58,    -1,    -1,    -1,    -1,    63,    64,
      -1,    -1,    -1,    -1,    69,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
    4614,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,   451,
      -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,   483,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,    -1,   547,    -1,   192,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4731,    -1,    -1,
      -1,    -1,   564,    -1,    -1,   567,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4759,    -1,    -1,   233,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4806,    -1,    -1,   637,    -1,  4811,   640,    -1,
     285,    -1,  3794,  4817,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4838,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3825,    -1,  3827,    -1,   322,  3830,  3831,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3844,    -1,    -1,   340,    -1,  3849,    -1,   344,
    3852,    -1,    -1,  3855,  3856,  3494,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4896,   725,    -1,  3877,    -1,  3516,  4902,  4903,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   382,    -1,    -1,
      -1,    -1,  3531,   388,    -1,    -1,    -1,   749,   750,    -1,
     395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4944,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4957,    -1,  3937,    -1,    -1,    -1,    -1,
      -1,   436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4976,    -1,    34,    35,   451,   452,   453,    -1,
      40,    -1,    42,    -1,    44,    45,    -1,    -1,    -1,  3971,
    3972,    -1,  4996,    -1,  4998,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    62,    -1,  5008,    -1,  5010,  5011,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5027,  4652,  4653,  4654,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   123,   539,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,  4057,    -1,    -1,    -1,    -1,
      -1,    -1,   142,    -1,  5088,    -1,  5090,    -1,    -1,   564,
      -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,   159,
      -1,  5105,  5106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3729,    -1,    -1,    -1,  5118,   590,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   187,   603,   189,
      -1,    -1,  5136,    -1,  3753,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5146,  5147,    -1,   205,   206,    -1,  4776,    -1,
      -1,  4779,  4780,  4781,  4782,  5159,  5160,    -1,    -1,    -1,
      -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5177,    -1,    -1,    -1,  4159,  4160,    -1,
    5184,    -1,    -1,  5187,    -1,    -1,    -1,   247,  5192,    -1,
      -1,    -1,    -1,    -1,    -1,  5199,    -1,    -1,    -1,    -1,
     260,    -1,  5206,    -1,  5208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
    5224,    -1,  5226,    -1,  5228,    -1,    -1,    -1,   288,   289,
      -1,   291,    -1,    -1,    -1,  4863,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4872,  4873,  5250,    -1,    -1,    -1,
     725,   726,   727,  4881,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5268,  5269,    -1,    -1,   328,   329,
     330,  5275,    -1,    -1,   749,   750,    -1,    -1,    -1,  5283,
      -1,  5285,  5286,    -1,    -1,    -1,  5290,   347,   348,   349,
      -1,    -1,    -1,    -1,   354,    -1,    -1,   357,    -1,    -1,
      -1,    34,    35,    -1,    -1,    -1,    -1,    40,    -1,    42,
      -1,    44,    45,    -1,    -1,   375,   376,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,
      -1,    -1,  4314,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   409,
     410,    -1,  4334,    -1,  4336,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4022,    -1,    -1,    -1,    -1,    -1,   142,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    -1,    -1,
      -1,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   513,   187,    -1,   189,    -1,    -1,    -1,
      -1,   194,    -1,  4445,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4105,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4477,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   573,   247,    -1,   576,    -1,    -1,   579,
     580,   581,   582,    -1,    -1,    -1,    -1,   260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,
      -1,    -1,   622,   623,    -1,    -1,    -1,    -1,    -1,    -1,
    4552,    -1,    -1,  4555,    -1,    -1,    -1,    -1,  4197,  4198,
    4199,  4200,    -1,    -1,    -1,    -1,  4568,    -1,    -1,  4208,
     650,    -1,    -1,    -1,    -1,   328,   329,   330,    -1,    -1,
      -1,    -1,    -1,  4222,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    34,    35,   347,   348,   349,    -1,    40,    -1,
      42,   354,    44,    45,   357,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4614,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      62,    -1,   375,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   409,   410,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   123,   435,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4731,
      -1,  4370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   497,   187,    -1,   189,   501,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     513,    -1,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4806,   247,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,
     573,  4460,  4461,   576,    -1,    -1,   579,   580,   581,   582,
      -1,    -1,    -1,    -1,    -1,    -1,  4838,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   288,   289,    -1,   291,
      -1,    -1,    -1,    -1,  4493,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4506,    -1,   622,
     623,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   328,   329,   330,  4528,
      -1,    -1,    -1,    -1,  4896,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   347,   348,   349,    -1,    -1,
      -1,    -1,   354,    -1,    -1,   357,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4944,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   409,   410,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   435,  4996,    -1,  4998,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5008,    -1,    -1,    -1,
      -1,    -1,  4651,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,    -1,    -1,    -1,   501,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   513,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5088,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5106,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   573,    -1,    -1,   576,    -1,    -1,   579,   580,   581,
     582,    -1,    -1,    -1,  5146,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4794,  4795,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     622,   623,  5184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5199,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4871,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5275,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5283,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4957,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,  4981,  4982,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,   493,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,   566,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,   637,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,   756,   757,    -1,
      -1,    -1,    -1,   762,    -1,   764,    -1,    -1,    -1,   768,
      -1,    -1,    -1,   772,   773,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    46,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,   268,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,   584,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,   756,   757,    -1,    -1,
      -1,    -1,   762,    -1,   764,    -1,    -1,    -1,   768,    -1,
      -1,    -1,   772,   773,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,   756,   757,    -1,    -1,    -1,
      -1,   762,    -1,   764,    -1,    -1,    -1,   768,    -1,    -1,
      -1,   772,   773,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,   756,   757,   758,    -1,    -1,    -1,
     762,    -1,   764,    -1,    -1,    -1,   768,    -1,    -1,    -1,
     772,   773,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,   756,   757,   758,    -1,    -1,    -1,   762,
      -1,   764,    -1,    -1,    -1,   768,    -1,    -1,    -1,   772,
     773,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,   756,   757,    -1,    -1,    -1,    -1,   762,    -1,
     764,    -1,    -1,    -1,   768,    -1,    -1,    -1,   772,   773,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,   756,   757,    -1,    -1,    -1,    -1,   762,    -1,   764,
      -1,    -1,    -1,   768,    -1,    -1,    -1,   772,   773,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
     756,   757,    -1,    -1,    -1,    -1,   762,    -1,   764,    -1,
      -1,    -1,   768,    -1,    -1,    -1,   772,   773,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,   756,
     757,    -1,    -1,    -1,    -1,   762,    -1,   764,    -1,    -1,
      -1,   768,    -1,    -1,    -1,   772,   773,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,    -1,    -1,    -1,    -1,    -1,   756,   757,
      -1,    -1,    -1,    -1,   762,    -1,   764,    -1,    -1,    -1,
     768,    -1,    -1,    -1,   772,   773,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,   756,   757,    -1,
      -1,    -1,    -1,   762,    -1,   764,    -1,    -1,    -1,   768,
      -1,    -1,    -1,   772,   773,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,   756,   757,    -1,    -1,
      -1,    -1,   762,    -1,   764,    -1,    -1,    -1,   768,    -1,
      -1,    -1,   772,   773,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,   756,   757,    -1,    -1,    -1,
      -1,   762,    -1,   764,    -1,    -1,    -1,   768,    -1,    -1,
      -1,   772,   773,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,   756,   757,    -1,    -1,    -1,    -1,
     762,    -1,   764,    -1,    -1,    -1,   768,    -1,    -1,    -1,
     772,   773,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,   756,   757,    -1,    -1,    -1,    -1,   762,
      -1,   764,    -1,    -1,    -1,   768,    -1,    -1,    -1,   772,
     773,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,   756,   757,    -1,    -1,    -1,    -1,   762,    -1,
     764,    -1,    -1,    -1,   768,    -1,    -1,    -1,   772,   773,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,   756,   757,    -1,    -1,    -1,    -1,   762,    -1,   764,
      -1,    -1,    -1,   768,    -1,    -1,    -1,   772,   773,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
     756,   757,    -1,    -1,    -1,    -1,   762,    -1,   764,    -1,
      -1,    -1,   768,    -1,    -1,    -1,   772,   773,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,   493,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,   620,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
     637,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,   764,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   773,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,   145,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,   764,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   773,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,   764,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,   773,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   769,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     768,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   768,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   768,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   768,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   768,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     768,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   768,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   768,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   765,    20,    -1,   768,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   768,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     768,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,   566,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,   620,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,   637,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,   764,   765,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   765,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   765,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,   199,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,   263,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,   275,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,   566,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,   620,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
     764,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,   764,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,    -1,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,   764,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,   764,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,    -1,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,   764,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
     764,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,    -1,   746,   747,
     748,   749,   750,    -1,    -1,    -1,    -1,    -1,     5,     6,
     758,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,     5,
       6,   758,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,    -1,
     746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
       5,     6,   758,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,     5,     6,   758,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,    -1,   746,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,     5,     6,   758,     8,     9,    10,    11,    12,
      13,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,   210,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,   506,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,   587,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,   609,   610,   611,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    14,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,   493,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,   506,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
     587,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,   609,   610,   611,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,    -1,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    14,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    99,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,   130,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,   144,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,   210,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,   285,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,   493,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,   506,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,   587,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,   609,   610,
     611,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,    -1,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,    -1,    -1,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,   521,   522,   523,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,   594,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    18,
      19,    20,    21,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,   387,    -1,
      -1,   390,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,   648,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,   502,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,   199,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,   519,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,   594,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,   372,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    95,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,   522,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,   660,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    17,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,   418,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,    -1,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
      -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,    -1,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,
     423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,   452,
     453,   454,    -1,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
      -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,    -1,   422,   423,   424,    -1,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,   452,   453,   454,    -1,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,    -1,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
      -1,   422,   423,   424,    -1,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,    -1,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,    -1,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,    -1,   422,   423,   424,
      -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,    -1,   450,    -1,   452,   453,   454,
      -1,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,    -1,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,    -1,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,    -1,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,   150,   151,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,   469,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,   634,    -1,   636,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,   634,    -1,   636,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
     469,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,   469,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,   636,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,    -1,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,    -1,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
      -1,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
     469,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,    -1,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
      -1,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,    -1,   746,   747,   748,   749,   750
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   566,
     590,   602,   606,   614,   620,   637,   645,   661,   662,   663,
     664,   676,   713,   764,   776,   777,   780,   781,   782,   783,
     784,   786,   791,   793,   818,   819,   820,   821,   823,   826,
     848,   870,   877,   878,  1111,  1112,  1114,  1116,  1118,  1121,
    1123,  1124,  1125,  1126,  1127,  1129,  1130,  1165,  1166,  1173,
    1174,  1177,  1191,  1193,  1197,  1200,  1201,  1205,  1207,  1212,
    1216,  1222,  1223,  1224,  1225,  1226,  1227,  1228,  1233,  1234,
    1358,  1391,  1392,  1393,  1394,  1395,  1396,  1397,  1398,  1399,
    1400,  1401,  1402,  1403,  1404,  1405,  1406,  1407,  1415,  1416,
    1437,  1438,  1442,  1446,  1452,  1468,  1469,  1471,  1475,  1484,
    1493,  1497,  1499,  1500,  1568,  1570,  1572,  1594,  1600,  1602,
    1603,  1604,  1606,  1610,  1612,  1638,  1644,  1645,  1646,  1647,
    1683,  1690,  1691,  1693,  1694,    12,   108,   127,   200,   243,
     286,   420,   499,   564,   566,   600,   612,   708,  1657,  1658,
    1659,  1662,   282,   371,  1206,  1639,   572,  1543,   235,     5,
       6,     8,     9,    10,    11,    12,    15,    20,    23,    25,
      26,    27,    28,    29,    30,    32,    36,    40,    43,    44,
      45,    47,    49,    50,    53,    56,    57,    59,    60,    61,
      63,    65,    66,    67,    68,    69,    70,    72,    73,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      87,    88,    90,    91,    92,    93,    94,    98,   103,   106,
     110,   111,   112,   115,   120,   121,   126,   127,   129,   135,
     136,   137,   138,   139,   143,   146,   147,   148,   152,   154,
     155,   157,   158,   159,   162,   163,   165,   166,   167,   168,
     169,   170,   173,   174,   175,   176,   177,   180,   181,   183,
     184,   185,   186,   187,   190,   191,   195,   196,   198,   202,
     204,   205,   206,   207,   209,   211,   215,   216,   218,   221,
     222,   226,   227,   228,   229,   232,   233,   234,   237,   242,
     243,   244,   248,   252,   253,   255,   256,   260,   262,   265,
     266,   269,   272,   273,   279,   280,   282,   284,   286,   287,
     295,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   316,
     317,   318,   320,   321,   322,   323,   325,   326,   331,   332,
     333,   334,   335,   336,   339,   340,   342,   344,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   357,   358,   361,
     362,   363,   364,   365,   369,   370,   374,   376,   377,   379,
     380,   381,   384,   394,   395,   396,   398,   400,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   413,   415,
     416,   417,   419,   421,   422,   423,   424,   425,   427,   428,
     429,   432,   436,   437,   439,   440,   443,   444,   445,   446,
     447,   449,   450,   452,   453,   454,   457,   458,   459,   460,
     461,   462,   463,   464,   466,   468,   469,   471,   472,   473,
     475,   478,   479,   480,   481,   483,   485,   486,   487,   488,
     489,   491,   492,   496,   497,   498,   499,   503,   507,   509,
     510,   511,   512,   514,   515,   516,   517,   518,   524,   525,
     526,   528,   531,   534,   536,   538,   539,   540,   541,   542,
     543,   546,   547,   550,   551,   552,   553,   554,   555,   558,
     559,   560,   561,   563,   564,   567,   568,   569,   570,   573,
     574,   576,   577,   578,   579,   585,   586,   590,   591,   592,
     595,   596,   598,   599,   601,   602,   605,   608,   610,   612,
     613,   619,   621,   624,   628,   630,   631,   632,   633,   640,
     641,   642,   644,   645,   646,   647,   650,   653,   654,   655,
     656,   657,   659,   668,   669,   670,   672,   673,   674,   676,
     679,   681,   688,   689,   692,   694,   696,   697,   701,   702,
     703,   704,   705,   706,   707,   708,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     746,   747,   748,   749,   750,   842,  1540,  1549,  1559,  1560,
    1561,  1563,  1564,  1567,   316,   457,   563,   566,  1596,  1596,
     641,  1640,   108,   199,   286,   390,   499,   519,   564,   569,
     600,   604,   612,   654,   708,  1088,  1411,  1654,  1658,  1659,
    1660,  1661,  1662,     8,    23,    29,    35,    37,    38,    39,
      41,    54,    55,    61,    62,    69,    72,    96,    97,   102,
     104,   107,   108,   113,   114,   115,   120,   122,   125,   171,
     178,   179,   188,   195,   205,   207,   213,   219,   226,   230,
     241,   245,   271,   279,   290,   319,   324,   335,   339,   341,
     345,   346,   347,   348,   349,   356,   366,   367,   368,   372,
     373,   397,   409,   410,   412,   427,   455,   456,   475,   477,
     484,   485,   491,   544,   545,   552,   556,   557,   562,   572,
     576,   577,   578,   579,   588,   589,   590,   594,   597,   612,
     616,   617,   618,   620,   625,   627,   632,   633,   650,   665,
     666,   671,   677,   678,   680,   683,   684,   685,   686,   687,
     691,   693,   695,   746,   756,   757,   758,   762,   764,   768,
     772,   773,  1061,  1226,  1244,  1245,  1248,  1249,  1250,  1252,
    1256,  1259,  1261,  1262,  1264,  1265,  1266,  1273,  1274,  1275,
    1296,  1297,  1521,  1523,  1526,  1527,  1528,  1529,  1530,  1532,
    1535,  1537,  1540,  1549,  1649,  1651,   108,   167,   200,   235,
     286,   420,   499,   519,   564,   587,   600,   612,   628,   654,
     708,  1411,  1549,  1206,   103,   536,   879,    13,    14,    99,
     130,   144,   167,   170,   183,   210,   235,   241,   274,   285,
     421,   425,   441,   449,   457,   493,   506,   507,   558,   587,
     609,   611,  1540,  1543,  1550,  1554,  1561,  1564,  1565,  1567,
    1616,  1617,  1538,  1549,   792,   566,   128,   220,   293,  1417,
     407,   659,    87,   428,  1498,   111,   235,   647,  1501,   243,
    1596,  1206,  1549,  1494,   487,   612,  1596,  1206,   128,   293,
    1418,  1441,   653,  1485,   522,   867,   871,   872,  1549,    13,
     425,  1616,  1640,  1549,    13,   140,   220,   527,   528,   530,
     531,   532,   549,  1235,  1236,  1237,  1652,    61,    62,   125,
     209,   282,   352,   404,   498,   585,   653,   654,   672,   708,
     768,  1063,  1540,  1552,  1560,  1561,  1563,  1564,  1566,  1569,
    1579,  1584,  1585,  1453,   871,   204,   511,   585,   204,   511,
    1538,  1549,   566,  1447,   407,   659,   243,  1601,  1549,   484,
    1427,  1431,   660,  1359,  1360,  1549,    32,    79,   154,   415,
     437,   478,   539,  1686,  1252,  1549,  1540,   401,   982,   764,
    1650,  1651,   243,   282,  1223,  1224,  1226,  1358,     0,   156,
     778,   415,   104,   274,   612,  1138,  1543,  1549,  1553,  1555,
    1556,  1628,  1630,   126,   404,   612,  1167,  1168,  1169,  1170,
    1171,  1172,   608,  1175,  1189,   194,   246,   285,  1238,  1239,
    1389,   388,   603,  1371,  1372,   276,   603,  1372,  1377,  1225,
    1226,   130,   609,    17,   195,  1472,  1473,  1538,   160,  1142,
    1549,   160,   842,   137,   152,   449,   480,  1605,   212,   842,
    1553,  1549,  1538,   564,   230,  1410,   212,   167,  1120,  1657,
    1596,  1640,  1213,  1214,  1538,   764,   849,   770,   583,   185,
    1408,  1538,  1408,    19,  1641,   230,  1011,   235,   212,   456,
    1553,   235,   717,  1549,   564,  1011,  1011,   212,   235,   566,
    1653,  1653,  1657,  1662,   764,   764,   764,  1259,   764,   764,
     764,  1248,  1309,   764,   764,   764,   764,   764,   764,   764,
     764,  1247,  1247,   764,  1049,   764,   764,   764,   572,   764,
     764,   764,  1650,   764,   764,   764,   764,   764,   764,   764,
     764,   764,  1248,   764,   764,   764,  1307,  1308,  1535,  1549,
     764,   764,   764,   764,   764,   764,   764,   764,   764,  1248,
    1049,   764,   764,   764,   764,   764,   764,   764,   764,   764,
     764,   764,   764,   764,   764,   764,   764,  1049,   572,   764,
     764,   764,   572,   764,   764,   764,    37,   219,   572,   764,
    1247,  1049,  1049,   764,   764,   764,   764,   764,   764,   764,
     764,   764,   764,   764,   764,   764,   764,   764,   764,   764,
     764,   764,   764,   764,  1259,  1259,  1259,   620,  1224,  1226,
    1248,   768,  1298,  1553,  1549,   769,    18,    19,    21,   387,
     390,   572,   648,  1246,  1253,  1254,  1548,  1549,   160,   161,
     201,   214,   254,   267,   294,   359,  1257,    33,   141,   249,
     275,   345,   366,   367,   442,   504,   505,   517,   722,   754,
     755,   756,   757,   758,   759,   760,   761,  1255,  1259,    71,
     389,   572,  1544,   259,   652,   764,   770,  1410,  1410,  1410,
    1549,   212,  1410,  1410,   717,  1549,  1410,   564,  1410,  1410,
    1410,   212,  1596,   787,  1476,   135,   419,  1615,   481,   481,
     564,   569,   612,   628,   654,   654,   385,   764,  1631,   563,
     378,  1631,    67,   511,  1631,   109,   628,  1631,   768,  1631,
     378,   583,   769,   381,    68,   433,   770,  1553,   197,   231,
    1161,  1549,  1543,  1692,  1248,   246,    85,   293,  1503,   194,
    1595,  1596,   197,    35,   316,  1458,  1495,  1549,  1209,  1556,
    1208,  1596,   246,  1419,  1410,  1487,   316,   511,  1486,  1488,
     621,   868,   501,   873,  1615,   378,   197,   378,   583,  1641,
    1244,  1237,   501,   654,   770,    35,   125,   160,   502,  1064,
    1428,  1553,   194,   583,  1428,   255,   433,  1586,  1587,  1589,
    1591,    13,   125,   365,  1554,  1557,  1624,   212,   768,  1553,
      35,   125,  1066,  1067,  1553,   770,   125,   585,  1575,  1583,
    1585,   769,  1576,  1428,    36,    61,    72,    97,    99,   109,
     158,   163,   166,   176,   198,   200,   209,   211,   282,   316,
     381,   408,   419,   420,   423,   424,   444,   498,   511,   547,
     566,   631,  1063,  1454,  1458,  1459,  1461,  1462,  1463,  1580,
     873,   447,   534,  1186,  1187,  1188,   433,   637,  1178,  1179,
    1180,  1186,  1538,  1549,  1692,  1596,   764,   769,  1359,   769,
     764,  1361,    37,   219,  1522,  1544,  1685,  1685,  1685,    96,
    1684,  1685,  1685,   156,   770,   764,    48,   156,   156,   197,
     111,   765,   765,  1238,   765,   767,  1549,  1247,   764,   138,
     228,   768,   125,   138,   228,  1626,   465,   769,  1633,   160,
     160,   160,   769,   300,   301,   445,   446,   524,   525,   526,
     816,  1190,   612,  1181,  1182,   503,   609,  1240,   146,   392,
     768,  1387,  1388,  1390,  1553,   249,  1239,  1389,  1238,    48,
      13,   140,  1648,  1376,  1377,   290,   373,   594,  1378,  1379,
    1523,  1549,  1648,  1376,  1371,  1372,  1377,   231,   293,   429,
    1444,  1445,  1441,   195,  1472,   160,   194,  1222,  1415,  1416,
    1437,  1442,  1470,  1474,  1522,  1549,   333,   570,   596,  1113,
    1556,  1117,  1549,  1549,   747,  1553,  1549,  1115,   384,     7,
      26,    84,   144,   237,   323,   370,   451,   630,   749,   950,
     951,   964,   965,   966,   972,   974,   975,   976,  1459,     7,
      12,    14,    17,    27,    28,    58,    63,    64,    69,    77,
      83,    84,    87,    96,   111,   125,   129,   137,   138,   144,
     152,   158,   169,   192,   233,   235,   242,   262,   285,   322,
     340,   344,   382,   388,   395,   404,   436,   451,   452,   453,
     483,   539,   540,   541,   542,   547,   564,   567,   590,   603,
     637,   640,   725,   726,   727,   749,   750,  1012,  1015,  1017,
    1018,  1070,  1143,  1144,  1146,  1147,  1149,  1151,  1152,  1153,
    1154,  1156,  1158,  1549,   171,  1549,   842,   533,  1663,  1664,
    1119,  1408,   249,   769,   235,   263,   401,  1085,  1219,  1220,
    1248,  1305,  1306,  1549,   794,   795,   176,   429,   769,  1192,
      59,   176,   180,   194,   331,   429,  1202,  1203,  1204,    57,
     369,   369,   448,  1642,  1255,  1549,  1549,  1549,   519,   193,
    1549,   709,     7,   944,  1549,  1556,  1627,  1629,  1624,  1549,
    1549,  1011,    11,   167,   200,   420,   587,   829,  1656,  1664,
    1670,  1672,  1673,  1678,   200,   829,  1655,  1664,  1670,  1673,
    1678,  1653,  1248,  1248,    13,   140,  1303,  1354,  1303,  1303,
    1303,   634,  1311,  1248,  1248,  1306,  1306,  1248,  1248,   140,
    1303,  1354,   765,   373,   765,   765,  1248,  1248,  1248,  1248,
    1535,   116,   117,   118,   119,   120,   223,   224,   225,   226,
     335,   337,   338,   339,   346,   427,   490,   491,   632,   649,
     650,  1349,  1350,  1248,  1305,   112,   115,   576,   579,  1351,
     140,  1299,  1248,  1248,  1248,  1248,  1349,  1248,  1306,  1308,
      10,   769,   770,   140,  1303,  1248,  1248,   140,  1303,  1248,
    1248,  1306,  1306,  1306,  1248,  1306,  1252,  1248,  1248,  1248,
    1248,  1248,  1248,   765,  1248,  1303,  1303,  1248,  1248,   140,
    1303,  1248,  1350,  1350,  1248,    46,   268,   584,  1248,  1248,
     765,  1536,  1537,  1549,  1303,  1303,  1248,  1248,  1248,  1303,
    1303,  1306,   765,   765,  1248,  1248,  1248,  1248,  1248,  1259,
     765,   765,   765,  1259,  1238,   765,   769,   209,   282,   498,
    1581,   502,  1248,  1245,  1548,  1549,  1248,  1248,  1248,   179,
     372,   589,   605,  1255,    13,    20,  1250,  1258,  1252,  1252,
     764,  1650,  1259,  1252,  1252,  1252,  1252,   275,   667,  1251,
    1252,  1252,   245,  1252,   245,  1252,  1252,  1252,  1252,  1252,
      33,   249,   275,   442,  1553,  1259,  1544,  1544,  1248,  1270,
    1271,  1272,   758,  1549,  1549,   842,  1549,   378,  1549,   842,
    1553,   709,   972,   974,  1412,  1413,  1414,   842,  1549,  1556,
    1623,  1408,  1624,  1549,  1410,   615,   788,    35,   158,   162,
     202,   222,   287,   383,   419,   443,   468,   512,   543,  1477,
    1481,  1482,  1596,    86,   768,   880,   881,   882,   883,  1549,
    1613,   563,  1549,  1632,  1556,  1553,   200,   420,   566,  1614,
    1623,  1617,    21,  1352,  1353,   186,   363,  1549,  1607,  1549,
    1692,  1419,   516,   769,    50,   282,  1502,    30,  1538,  1597,
    1598,  1408,   768,   785,  1543,   287,   769,   583,  1210,  1211,
    1538,  1408,  1538,  1549,  1490,  1489,   769,  1544,    56,    66,
      76,    90,    91,    92,   106,   334,   351,   489,   551,   568,
     874,   876,   769,  1611,  1556,  1623,  1614,   487,  1643,  1642,
     197,  1229,  1230,  1389,    13,   365,  1624,  1549,    71,  1069,
    1248,  1556,   733,   572,  1546,   273,   380,   643,   769,  1590,
     769,  1588,   658,  1571,   768,   769,  1549,   209,   282,   498,
     653,   672,  1582,  1428,  1549,  1586,  1576,  1428,  1577,  1578,
    1579,  1584,    13,    35,   125,   378,   484,   709,  1248,  1593,
     166,   275,   635,  1356,  1467,   764,   108,   167,   200,   420,
     566,   587,   612,   628,  1467,    13,  1553,  1376,   197,   249,
    1460,  1464,   198,    70,   543,   194,   543,   563,    70,   543,
      13,    43,    94,    98,   253,   332,   396,   518,   560,  1448,
    1449,  1450,   166,   222,   543,   543,  1376,  1467,   287,   157,
     422,   586,   234,   235,   261,  1087,    73,   563,   543,   624,
     769,   380,   643,    88,   769,   194,   817,   125,  1248,  1432,
    1433,  1434,  1431,  1360,  1362,  1549,    21,   769,   379,  1688,
     559,  1689,   646,   258,   471,  1687,  1549,  1248,   277,   280,
     430,   983,   984,  1556,   136,   765,   156,   779,   765,   729,
      48,  1553,   654,   729,    48,   637,    65,   256,   365,   535,
     553,   644,  1620,  1621,  1556,  1628,   637,  1135,  1541,  1543,
    1541,  1541,  1169,   160,   160,   160,   160,   160,   160,   769,
     160,  1176,   404,  1183,   667,   668,   670,  1241,  1242,  1243,
     572,  1545,  1545,  1553,   769,   503,  1248,  1373,  1533,  1226,
    1227,   377,   769,  1226,  1227,  1376,  1376,   197,  1409,  1539,
    1549,  1444,  1161,  1553,    87,  1009,  1010,  1017,  1018,  1019,
    1070,   843,  1549,  1549,   194,   369,   316,     7,   843,   764,
     110,   961,  1428,  1429,  1429,   961,  1429,  1429,   583,  1429,
     769,  1014,   158,    74,    89,   199,   401,   519,  1027,  1029,
    1085,  1160,  1429,    64,    89,   235,  1160,   401,  1429,  1429,
    1160,  1429,   401,   401,  1429,  1429,  1429,  1429,   583,   136,
    1429,   261,   401,   564,    64,    89,   193,   401,   418,  1085,
    1160,   261,  1429,   401,   401,   564,   136,  1429,  1429,  1429,
    1429,  1429,  1160,   401,    48,  1429,  1429,   401,    21,    74,
     160,   583,  1085,  1164,   401,   401,  1429,   585,  1429,  1429,
    1429,   139,   332,  1429,  1429,   401,  1429,   619,   619,  1429,
    1429,  1429,  1015,    71,  1063,   450,   982,  1145,   769,   769,
     501,   710,  1698,  1122,   492,   628,  1664,   144,   609,  1199,
     125,  1215,  1549,  1214,  1538,   764,   764,  1220,   765,   769,
     232,   295,   296,   297,   298,   299,   302,   303,   304,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   317,
     318,   711,   712,   732,   734,   735,   736,   737,   738,   741,
     809,   810,   816,   458,   459,   460,   461,   462,   463,   464,
     796,   797,  1538,   610,  1203,    57,   448,   171,   822,   378,
       7,   717,   111,   378,  1011,   961,   614,   945,     7,   228,
     125,   769,   825,   592,   592,   615,  1100,  1101,  1538,   200,
    1011,   842,  1549,   842,   842,  1664,   769,   765,  1303,   765,
    1248,   765,   765,   765,  1248,   150,   634,  1310,    21,   765,
     615,   765,   765,   765,   615,   769,  1306,   765,   758,   765,
     769,   769,   765,   765,   765,   197,   769,   765,   769,  1306,
     765,   769,   769,   769,   757,   769,   765,   765,   764,  1535,
    1549,  1303,   765,   765,   765,  1303,   765,   769,   765,   765,
     765,   765,   769,   765,   249,   765,   769,   769,   765,   769,
     769,   765,   765,   765,   769,   197,   769,  1303,   765,   765,
     769,   769,   769,   765,   197,  1248,   197,  1248,   197,  1248,
     197,   765,   769,   765,   765,   765,   765,   769,    21,   765,
     769,   765,   769,   765,   765,   690,  1281,  1281,   765,   769,
    1276,   765,  1276,   769,   765,  1281,  1281,  1281,   769,  1306,
     770,   770,   770,  1553,  1248,   774,   179,   372,   589,   605,
    1650,    19,  1248,   165,  1252,   764,  1248,  1248,  1252,   764,
    1650,  1259,  1252,  1246,   765,   769,   764,   770,   770,  1538,
    1412,  1410,  1014,   952,   953,   954,   972,   769,    52,   470,
    1162,   192,  1704,  1408,   768,   789,   790,   287,   287,   287,
     287,   287,   287,   769,  1408,  1483,   115,   576,   579,   875,
     885,  1297,  1528,  1535,  1553,   769,   160,   378,   765,   769,
     583,   758,  1549,  1558,  1622,   637,  1618,  1549,   160,   186,
     201,   214,   266,   267,   294,   363,   417,  1608,  1609,  1355,
    1356,  1538,  1543,  1543,  1217,  1218,  1538,   236,  1353,   769,
    1553,    31,   583,  1496,  1556,  1556,   769,   583,   176,   429,
     613,  1194,  1195,  1196,   401,  1320,  1321,   583,  1492,    13,
    1491,  1488,   769,   160,   210,   378,   197,  1622,  1549,   145,
     700,   720,   764,   773,  1231,  1232,  1312,  1314,  1322,  1323,
    1324,  1325,  1326,  1327,  1328,  1538,  1650,  1355,  1229,   583,
     583,   583,    35,  1068,  1553,   583,  1428,   456,  1128,  1128,
     433,   454,   496,  1592,  1589,  1587,  1624,  1553,  1557,   194,
     770,   770,   770,   770,   770,  1585,  1248,  1593,   769,  1583,
     249,  1465,  1544,  1248,   758,  1011,   842,   842,   842,  1538,
     842,  1556,  1538,   287,   350,   543,  1457,  1457,  1467,  1549,
     842,  1467,  1556,  1460,   842,  1467,   252,   561,   181,   194,
    1451,   769,  1465,   817,  1460,  1460,  1464,  1464,  1460,  1467,
    1467,  1188,   514,  1180,    60,   765,   769,   765,   769,  1650,
    1522,   405,   194,   770,   765,    73,   764,    73,   764,   402,
     986,   216,   263,   771,  1429,   404,   572,   733,    13,   365,
    1624,   404,   572,   733,  1546,  1553,   572,   572,   572,    19,
    1619,   320,   321,   325,   326,  1136,  1137,     5,   404,   739,
     740,  1132,  1133,  1134,  1541,   122,   188,   290,   373,   594,
    1383,  1541,   122,   188,   219,   290,   373,   594,  1381,  1543,
    1543,   816,  1543,   817,   160,   126,  1184,  1409,   669,  1242,
    1063,  1065,  1388,   342,    22,   131,  1374,  1375,   769,  1379,
    1379,  1409,  1538,  1549,   197,   769,   770,  1443,  1232,   122,
     188,   219,   290,   373,   594,  1382,  1385,  1386,  1010,    84,
      77,    93,   265,   343,   369,   431,   533,   845,   847,    60,
     478,   263,   598,   963,   108,   221,   394,   404,   411,   515,
     612,   827,   828,  1543,   949,   950,   219,   290,   373,   594,
     977,  1384,  1385,  1540,  1543,   949,   977,   977,  1549,  1543,
    1705,   951,  1429,  1108,  1549,  1085,  1086,  1206,  1086,    64,
     193,   418,   604,  1028,  1084,  1099,  1108,  1549,   764,  1549,
     125,  1157,  1549,  1549,  1549,  1549,  1549,  1206,  1383,  1381,
    1549,  1381,    13,  1150,  1348,  1549,  1206,  1543,  1543,  1543,
    1543,  1063,  1429,  1381,  1150,  1549,  1549,   263,  1348,   263,
    1549,  1549,  1553,  1549,  1150,  1429,   186,   266,   369,  1021,
    1381,   125,  1159,  1549,  1383,  1383,  1549,  1206,  1369,  1370,
    1536,   125,  1016,  1381,  1543,  1206,  1549,  1549,  1538,  1206,
    1206,    80,    82,   125,   148,   187,   440,  1020,  1016,  1016,
     125,  1381,  1549,  1381,  1150,   764,   372,  1553,  1705,  1705,
    1429,  1429,   403,     7,   144,  1012,  1153,  1154,  1147,  1151,
    1154,   718,   719,   962,  1429,   707,  1702,   378,   837,  1139,
     127,   248,  1538,   673,   673,  1150,   418,  1344,  1345,  1346,
    1549,   249,  1248,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   769,   817,   160,   160,   160,   160,   160,
     160,   160,   769,   817,  1008,  1009,  1538,   963,   709,   642,
    1538,  1384,   286,    77,   177,   184,   364,   946,   947,   948,
     964,   965,   966,   967,   970,   971,   972,   973,   974,   975,
     976,   961,    48,   637,   654,  1627,  1633,  1429,    47,   216,
     486,  1103,  1103,   378,    21,   231,   275,   456,   764,   978,
     979,   980,   981,   982,  1013,  1015,  1224,  1226,  1424,  1505,
    1549,   842,   764,   473,  1679,     9,    31,   942,   245,  1248,
     765,  1280,  1281,  1280,  1280,  1280,   575,  1248,  1248,   154,
      35,    62,   112,   115,   123,   142,   189,   260,   354,   357,
     435,   509,   579,   607,  1038,  1042,  1304,  1064,  1064,  1304,
     765,  1280,   765,   245,   245,  1248,  1248,  1248,   388,  1301,
    1248,  1248,  1248,  1248,  1248,  1252,   765,  1280,   765,  1280,
    1248,  1248,  1248,  1248,  1248,  1248,  1306,  1280,  1280,   245,
    1248,  1248,  1248,   765,  1280,  1248,  1248,  1248,  1248,   197,
    1248,   197,  1248,   197,  1248,  1248,  1280,  1280,  1248,    35,
      62,  1381,  1303,  1280,   764,  1282,  1283,  1284,  1549,   231,
     694,  1278,  1523,  1529,   765,  1278,   765,  1259,  1281,   597,
    1521,   765,   770,  1109,  1250,   765,   769,  1259,  1259,  1349,
    1349,    19,  1248,   165,  1272,  1305,   758,  1549,  1549,  1155,
    1156,  1158,  1384,  1414,  1014,  1556,  1162,  1553,   769,   817,
    1482,  1478,   883,   886,   887,   882,   374,   485,   884,  1614,
    1549,  1623,   770,   770,   583,   655,  1355,   764,  1376,  1320,
     769,  1219,  1220,  1545,   293,   433,   643,  1599,  1598,  1248,
    1543,   583,  1211,  1538,  1196,   764,   501,   620,   621,   764,
    1420,  1421,  1423,  1424,  1425,  1384,   817,   876,   875,   385,
    1614,  1623,   197,   764,  1650,  1232,  1314,  1323,  1324,  1325,
    1326,   731,   769,   100,   238,   258,   271,   355,   477,   549,
    1315,  1316,  1317,  1320,  1353,   212,  1366,  1355,  1624,  1624,
    1624,   733,  1546,  1546,   728,  1625,  1625,    78,   595,   433,
    1382,  1573,  1574,  1428,  1578,  1543,   197,  1466,   765,  1549,
     615,  1467,   428,  1376,  1450,  1466,  1467,  1467,  1538,  1538,
    1467,  1541,  1434,  1549,   769,   336,   156,   764,  1252,   764,
    1252,  1382,   555,   987,   764,    12,   985,  1381,  1545,  1128,
     404,   456,   404,  1625,    21,    48,  1620,  1381,  1381,  1381,
    1381,  1137,   285,   606,   174,   465,   704,   705,   697,  1382,
    1382,    77,   748,  1131,  1134,  1543,   160,   406,  1185,  1064,
      73,  1506,  1533,   615,  1353,   770,  1232,  1539,   758,  1549,
     501,  1429,  1543,   533,   533,   533,   533,   533,   492,  1549,
     378,  1543,   958,   959,   960,   964,   972,   974,  1543,  1543,
    1543,  1543,  1381,  1543,  1543,   765,   769,  1553,  1108,   402,
     764,  1108,   764,   263,   263,  1086,   367,  1030,  1031,  1032,
    1099,   764,   615,   592,  1023,  1024,  1025,  1027,  1549,    34,
      35,    40,    42,    44,    45,    62,   112,   115,   123,   159,
     187,   189,   205,   206,   247,   260,   279,   288,   289,   291,
     328,   329,   330,   347,   348,   349,   354,   357,   375,   376,
     409,   410,   497,   501,   513,   573,   576,   579,   580,   581,
     582,   622,   623,   650,  1033,  1036,  1037,  1038,  1039,  1040,
    1041,  1042,  1044,  1032,  1032,   656,   657,  1102,   144,   501,
    1150,  1549,  1202,   769,  1382,   125,  1064,  1543,   564,  1549,
    1162,   637,   564,  1543,  1033,  1150,   769,  1374,  1150,   583,
     583,  1348,  1150,  1483,  1068,  1064,   952,   373,  1699,  1700,
    1429,   137,   152,  1703,    81,   488,   451,  1140,  1361,   378,
     378,   765,   765,   769,  1215,   764,  1381,  1541,  1381,  1381,
    1541,  1541,  1381,  1381,  1541,  1541,  1541,  1541,  1541,  1541,
    1541,  1541,  1381,  1381,  1541,  1529,  1541,  1381,  1541,  1543,
    1381,   372,   813,  1555,   372,   815,  1541,  1381,   378,   742,
     743,   814,   810,   764,   798,   798,   764,   803,   803,   764,
     806,   806,   764,   801,   797,   764,   439,   599,   955,   956,
     957,   964,   968,   969,   970,   971,   972,   974,  1384,  1553,
     764,   824,   212,  1429,  1429,  1429,  1429,  1014,   952,   733,
    1546,  1553,  1624,  1135,   612,   709,  1697,  1538,  1424,  1538,
     275,  1023,   980,   979,  1014,  1238,   981,   473,   830,  1674,
     123,   247,   435,   550,  1022,   764,   130,   241,   609,   943,
    1248,   765,  1280,  1248,   575,   764,  1053,  1054,  1054,   764,
    1048,   764,  1046,  1047,  1053,   414,  1043,  1045,  1053,    62,
     247,  1048,   247,  1054,   721,  1260,   765,   765,   765,  1280,
    1280,  1248,  1248,   765,   765,   769,   765,    48,   495,  1300,
     769,   769,   765,   769,   765,   249,  1267,  1268,  1280,  1280,
     765,   765,   765,   765,   769,   765,   765,  1248,   765,   194,
     765,   765,   769,  1280,   765,   769,   769,   765,  1248,   765,
    1248,   765,  1248,   765,   765,   765,   764,  1075,  1075,   769,
     765,  1283,  1285,  1286,   688,   688,  1281,   769,  1277,  1277,
    1278,  1281,  1278,   765,   744,  1263,  1549,  1306,   765,  1250,
     765,   769,  1259,   765,  1158,  1156,   954,   790,   194,   637,
    1479,   160,   769,  1622,   637,  1635,   758,   758,  1549,  1623,
     385,  1376,  1433,   501,  1420,  1421,  1218,  1538,  1220,   231,
    1221,  1504,  1505,   643,   282,  1556,  1347,  1348,  1439,  1440,
    1536,   765,  1422,  1531,  1532,  1536,  1549,   764,  1426,  1430,
     160,   197,  1622,  1623,  1248,  1353,   769,   765,   765,   765,
     765,   765,  1312,  1313,  1314,  1322,  1312,   258,   258,   391,
    1319,   238,   271,   477,  1318,  1319,  1322,  1312,  1312,  1353,
    1361,    48,   217,  1357,  1366,  1128,  1128,   103,  1014,  1593,
    1383,  1455,   163,   631,  1623,   373,  1456,  1460,  1460,  1381,
     989,  1549,   765,   989,   765,    48,   764,   991,  1252,   160,
     764,   228,  1625,  1128,  1546,   456,  1625,   219,  1543,  1547,
     733,  1546,   125,   245,   361,   103,   125,  1382,   245,  1544,
    1544,  1543,   160,   153,   164,   386,   571,  1507,  1508,   278,
    1509,  1232,  1320,  1549,  1355,   770,  1443,  1439,  1543,   111,
     111,   127,   248,   369,   162,  1014,   828,   764,  1382,   401,
     992,   993,   764,  1248,  1108,   730,   764,   764,  1105,  1106,
    1107,  1549,  1103,  1103,   765,   769,  1033,  1053,  1053,  1054,
      23,    35,    49,   601,   626,  1053,  1063,  1071,  1072,  1073,
    1048,   764,  1073,    62,   622,  1039,  1073,  1073,    62,   623,
     623,   626,   764,  1054,  1048,  1048,  1073,  1053,  1054,   441,
    1026,  1078,    27,    71,    75,    77,   125,   367,   372,   378,
     418,   497,   547,   604,   706,   749,   750,  1029,  1032,  1056,
    1057,  1058,  1069,  1077,  1255,    35,  1053,  1074,  1053,  1053,
    1054,   764,  1047,  1055,  1046,   125,   125,  1033,  1549,  1069,
    1069,   566,     9,   186,  1163,  1370,  1549,  1549,   246,  1194,
     765,   756,  1014,   373,   756,  1701,  1704,   367,   416,    25,
     168,   831,   583,   137,   152,   833,  1665,  1348,  1348,  1345,
     811,   812,  1381,   765,   799,   800,  1549,   765,   804,   805,
    1549,  1558,   765,   807,   808,  1541,  1542,   764,   765,   802,
    1106,  1429,  1429,  1014,   824,   384,  1106,   353,   714,   715,
     716,  1549,  1543,   977,   977,  1382,   948,   404,    21,    48,
    1132,  1698,   764,  1538,   765,  1015,  1022,   378,   850,   851,
     852,  1549,   516,  1680,   378,  1349,  1248,   122,   290,   373,
     594,  1073,   373,   373,   765,  1349,  1349,  1248,  1302,  1533,
    1522,   765,  1248,  1248,  1306,    44,   355,   765,   637,  1269,
    1248,  1349,  1248,  1248,  1248,  1248,   765,   765,   765,  1382,
     765,   765,  1381,  1280,   765,   401,  1287,  1248,  1281,  1281,
     197,  1279,  1304,   125,   162,   372,  1333,  1335,  1336,  1337,
     765,  1306,  1480,   433,    56,    66,    76,    90,    91,    92,
     106,   334,   351,   472,   489,   551,   568,   888,   887,   583,
     210,   637,  1634,   765,  1439,    21,  1435,   378,  1436,  1221,
     269,   246,   765,   769,  1428,  1423,  1424,   765,   769,   770,
    1432,   769,   875,  1623,   197,   769,  1361,  1312,   774,   258,
    1319,  1319,   258,   258,   378,   615,   378,   615,   192,   231,
     614,  1339,  1340,  1341,  1342,  1343,  1248,  1367,  1534,  1248,
     698,  1363,  1357,  1625,  1625,   404,  1382,  1376,  1376,  1355,
    1467,   765,   769,   765,   984,   992,   765,  1382,   988,   989,
      48,  1625,  1625,  1546,  1625,   404,   456,  1625,  1382,   125,
     723,   125,  1382,  1543,    48,    48,   153,    48,  1508,   537,
     571,  1510,  1511,  1355,  1355,  1355,   478,   960,  1106,  1549,
     765,   769,  1106,   765,   764,  1106,  1248,   765,   769,   764,
    1374,  1024,  1026,    35,    23,   601,  1063,    35,  1073,  1064,
    1110,  1522,  1073,   626,  1110,  1073,   509,   607,   651,  1050,
    1051,  1052,  1538,  1163,  1068,   125,   148,   187,  1059,  1543,
     115,   576,   579,   756,   757,   764,  1061,  1062,  1524,  1525,
    1526,  1527,   609,   125,   125,   139,   332,  1060,   263,  1384,
    1429,  1429,  1028,    71,  1058,   203,  1034,   263,   372,   724,
    1074,  1073,  1074,  1050,   373,  1050,  1050,   764,  1525,  1163,
    1538,  1549,   764,   373,  1700,   373,   416,  1248,  1248,   378,
     837,   842,   378,    77,   838,    21,   637,  1198,   765,   769,
     765,   769,   765,   769,   770,   765,   769,   800,   765,   769,
     765,   977,   977,   957,   764,   765,  1541,  1541,  1541,  1541,
    1547,   733,  1546,  1131,  1702,  1106,   765,   978,   516,   488,
     765,   769,  1036,  1543,   239,   249,   393,   853,   854,   855,
     856,  1538,   765,   765,   765,   765,   765,   765,   769,   765,
     765,   765,   769,  1280,   765,   769,   765,   342,   265,   428,
     765,   765,   765,   765,   765,   765,  1076,   769,    48,   388,
    1288,   186,   266,  1278,  1524,   765,  1336,  1337,   378,   765,
     175,   285,  1623,   385,   210,    21,  1637,  1355,  1435,  1549,
    1436,   147,   566,  1440,  1434,  1423,  1424,  1531,  1549,   765,
    1430,  1623,  1521,   765,   258,   258,  1248,   764,  1248,   764,
    1085,  1085,  1340,   639,   769,  1368,  1283,  1364,  1365,  1363,
     817,  1549,   216,   263,   765,   765,  1543,  1625,  1625,  1546,
     120,   120,  1522,  1522,    48,  1522,    48,    48,  1511,  1371,
    1371,   378,   765,   620,   994,   993,   765,  1104,  1105,   765,
     765,    77,   262,   749,   750,  1095,  1096,  1097,  1098,  1101,
    1102,  1107,   373,  1064,  1074,   765,   769,   765,  1052,   764,
    1079,  1529,  1529,  1248,  1061,   621,  1705,  1705,  1068,    15,
      21,  1248,  1148,  1149,   992,  1349,   511,  1543,   143,  1141,
    1424,  1666,   373,   812,   800,   805,  1549,   808,   769,   764,
     637,  1089,  1090,  1091,  1098,   827,  1092,  1093,  1094,  1098,
     228,   404,  1703,   765,  1543,   831,  1675,   852,  1069,   765,
     769,  1549,   194,   373,  1533,  1248,   342,   173,   765,  1381,
    1367,    48,   430,   482,   682,  1289,  1295,  1281,   378,   162,
     699,  1634,   385,  1556,  1376,  1436,  1361,   263,  1538,    73,
    1329,  1347,  1347,   194,  1338,  1338,  1534,    21,   769,   764,
     985,   111,   465,  1695,  1696,  1625,  1522,  1522,  1522,   276,
    1380,  1380,   162,  1089,   249,   272,    77,   111,   235,   322,
     340,   364,   564,  1005,  1006,  1007,  1459,  1092,   765,   769,
    1095,  1374,  1543,  1429,  1429,  1429,  1097,   765,  1073,  1522,
    1073,  1080,  1549,   319,  1081,   765,   764,   765,   765,   832,
     839,   840,   637,  1667,   674,   800,   800,   398,  1155,  1091,
     765,  1155,  1094,    48,  1095,   836,   837,   473,  1681,   855,
    1036,   149,   765,   765,   765,  1373,    33,   103,   245,   697,
    1290,  1291,  1292,  1523,  1529,  1637,   637,  1636,   609,  1320,
     764,   765,   765,   765,   212,   258,   388,   764,   764,  1284,
    1365,  1252,   764,   136,   369,   535,  1379,   764,   996,   998,
     574,  1429,   136,   136,  1429,  1429,  1429,  1429,   764,  1002,
    1007,   158,  1078,  1105,  1381,  1705,  1705,  1374,   765,   769,
     198,   400,   510,   378,  1082,  1248,   538,   834,    54,    68,
     182,   230,   257,   270,   381,   474,   841,   892,   894,   895,
     896,   898,   899,   900,   901,   902,   903,   905,   913,   914,
     917,   928,   931,   933,   934,  1540,  1551,  1562,  1563,  1564,
    1567,    53,    64,   282,   765,   769,  1540,  1384,  1155,   833,
    1036,   844,  1069,   484,   245,   697,  1291,  1293,  1523,  1529,
     484,  1248,   692,   679,  1294,   692,   692,   654,  1439,  1065,
     701,  1330,  1331,  1549,  1353,    48,    48,  1344,  1346,   765,
     989,  1429,   535,   764,   997,   998,   999,   327,   995,   998,
    1543,  1429,  1429,  1384,  1384,  1382,  1549,   555,  1003,  1004,
    1429,  1549,   130,   609,   765,  1248,   155,   835,   915,   918,
    1549,   197,   363,   906,   893,  1551,  1551,  1549,   897,   781,
     292,   455,   636,   937,    32,   935,   771,    64,   385,    64,
     800,   838,  1069,   134,   845,   846,  1255,  1682,   191,   413,
    1668,  1669,  1248,   681,    19,   681,   681,  1349,   103,   212,
     369,   696,    13,   125,   365,  1624,   482,  1512,   703,   765,
     769,   194,  1036,   765,   765,   554,   990,   765,  1545,   765,
     769,   327,  1000,  1001,  1252,  1543,  1543,  1553,   765,   769,
    1553,    52,   369,   470,   501,  1083,  1083,   548,   629,  1035,
    1248,  1248,   634,   920,   924,   197,  1549,   908,   909,  1248,
     858,   891,   892,   894,   896,   898,   900,   901,   902,   903,
     905,   913,   928,   931,   933,   858,   938,   936,   929,   932,
     385,   385,   765,   143,  1676,   134,   891,  1553,  1671,  1349,
    1293,   692,   484,   689,  1571,   228,  1506,  1521,  1331,   702,
    1069,  1382,   990,  1696,   998,   765,   769,  1005,  1004,     6,
     125,   372,   378,   378,  1056,   916,   925,   150,   924,   927,
     246,   154,  1248,   154,   891,   767,   608,  1248,   859,   937,
     935,   839,   844,   891,   681,    48,  1509,  1329,   171,  1332,
    1001,   609,   130,   634,   919,   921,  1248,   858,   154,   904,
     230,   910,   292,   767,   940,   939,   124,   857,   860,   930,
    1551,   930,  1677,  1522,   231,  1513,   703,  1083,  1083,   922,
     921,   927,   926,    54,   907,  1549,   575,  1248,   143,    95,
     172,   863,   889,  1549,   154,   891,   767,   891,   373,   764,
    1515,  1521,  1248,   154,   575,   769,   858,   941,   858,   215,
     769,  1036,    86,   105,   767,   278,   482,  1514,   765,   768,
    1516,  1517,  1536,   501,  1518,  1333,  1334,  1336,   923,    54,
     858,  1549,   911,   154,   154,   194,  1549,  1069,   194,   194,
    1553,   765,   769,  1519,  1520,  1536,  1335,  1337,   575,   150,
     151,   912,   455,   636,   861,   125,   890,   866,   867,  1381,
     862,  1517,   769,  1428,   378,   858,   858,   908,   521,   523,
     864,   865,   866,   869,  1255,  1549,  1248,  1222,  1520,  1434,
     769,   891,   196,   865
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   775,   776,   776,   776,   776,   776,   777,   778,   777,
     777,   779,   779,   780,   780,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   782,   783,   783,   784,
     785,   785,   787,   786,   788,   788,   789,   789,   790,   792,
     791,   794,   793,   795,   793,   796,   796,   797,   797,   797,
     797,   797,   797,   797,   798,   798,   799,   799,   800,   801,
     801,   802,   802,   803,   803,   804,   804,   805,   806,   806,
     807,   807,   808,   809,   809,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   811,   811,   811,   812,
     813,   813,   814,   814,   814,   815,   815,   816,   816,   816,
     816,   817,   817,   818,   818,   818,   818,   819,   820,   822,
     821,   821,   821,   821,   821,   821,   821,   823,   823,   824,
     824,   824,   824,   824,   825,   825,   826,   826,   826,   827,
     827,   828,   828,   828,   828,   828,   828,   828,   830,   829,
     832,   831,   831,   833,   833,   833,   833,   834,   834,   835,
     835,   836,   836,   837,   837,   838,   838,   840,   839,   841,
     841,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   841,   842,   842,   843,   843,   844,   844,   845,   845,
     845,   845,   845,   845,   845,   846,   846,   846,   847,   847,
     848,   849,   849,   850,   850,   851,   851,   852,   853,   853,
     854,   854,   855,   856,   856,   856,   856,   857,   857,   858,
     858,   859,   859,   860,   860,   861,   860,   862,   860,   863,
     863,   864,   864,   865,   866,   866,   867,   868,   868,   869,
     869,   869,   869,   869,   870,   871,   871,   872,   872,   873,
     873,   874,   874,   875,   875,   875,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   877,   878,
     879,   879,   879,   880,   880,   881,   881,   882,   883,   883,
     884,   884,   885,   886,   886,   887,   888,   888,   888,   888,
     888,   888,   888,   888,   888,   888,   888,   888,   888,   889,
     889,   890,   890,   891,   891,   891,   891,   891,   891,   891,
     891,   891,   891,   891,   891,   891,   893,   892,   895,   894,
     897,   896,   899,   898,   900,   901,   902,   904,   903,   905,
     906,   906,   906,   907,   907,   909,   910,   911,   908,   912,
     912,   912,   913,   913,   915,   916,   914,   918,   917,   919,
     919,   920,   920,   922,   923,   921,   925,   926,   924,   927,
     927,   929,   928,   930,   930,   932,   931,   934,   933,   936,
     935,   937,   938,   939,   937,   940,   941,   937,   942,   942,
     943,   943,   943,   944,   944,   945,   945,   946,   946,   947,
     947,   948,   948,   948,   948,   948,   948,   948,   948,   948,
     948,   948,   949,   949,   950,   950,   951,   951,   951,   951,
     951,   951,   951,   952,   952,   953,   953,   954,   955,   955,
     956,   956,   957,   957,   957,   957,   957,   957,   957,   958,
     958,   959,   959,   960,   960,   960,   961,   962,   962,   963,
     964,   965,   966,   967,   968,   969,   970,   971,   972,   973,
     974,   974,   975,   976,   977,   977,   978,   978,   979,   979,
     980,   980,   980,   981,   981,   982,   983,   983,   983,   983,
     983,   983,   984,   984,   985,   985,   986,   986,   987,   987,
     987,   988,   988,   989,   989,   990,   990,   991,   991,   992,
     992,   993,   994,   994,   994,   995,   995,   996,   996,   997,
     997,   999,   998,  1000,  1000,  1001,  1001,  1002,  1002,  1003,
    1003,  1004,  1005,  1005,  1006,  1006,  1007,  1007,  1007,  1007,
    1007,  1007,  1007,  1007,  1008,  1008,  1009,  1009,  1010,  1010,
    1010,  1011,  1011,  1012,  1012,  1013,  1013,  1014,  1014,  1015,
    1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,
    1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,
    1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,
    1015,  1015,  1015,  1016,  1016,  1017,  1018,  1019,  1020,  1020,
    1020,  1020,  1020,  1020,  1021,  1021,  1021,  1022,  1022,  1022,
    1022,  1023,  1023,  1024,  1024,  1025,  1026,  1026,  1027,  1027,
    1027,  1027,  1027,  1027,  1028,  1029,  1029,  1030,  1030,  1031,
    1031,  1032,  1033,  1033,  1034,  1034,  1035,  1035,  1035,  1036,
    1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,
    1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,
    1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,
    1036,  1036,  1036,  1036,  1036,  1036,  1037,  1037,  1037,  1037,
    1037,  1037,  1037,  1037,  1038,  1038,  1039,  1039,  1040,  1040,
    1040,  1040,  1040,  1041,  1041,  1041,  1041,  1041,  1042,  1042,
    1043,  1043,  1044,  1044,  1044,  1044,  1045,  1045,  1046,  1046,
    1046,  1047,  1048,  1048,  1049,  1049,  1049,  1050,  1050,  1051,
    1051,  1052,  1052,  1052,  1053,  1053,  1053,  1053,  1054,  1054,
    1055,  1055,  1056,  1056,  1057,  1057,  1058,  1058,  1058,  1058,
    1058,  1058,  1058,  1058,  1058,  1058,  1058,  1058,  1058,  1058,
    1058,  1058,  1058,  1058,  1058,  1058,  1059,  1059,  1059,  1060,
    1060,  1060,  1061,  1062,  1062,  1063,  1063,  1064,  1064,  1065,
    1065,  1066,  1066,  1067,  1067,  1068,  1068,  1069,  1069,  1070,
    1070,  1071,  1071,  1071,  1072,  1072,  1072,  1073,  1073,  1073,
    1073,  1073,  1073,  1073,  1074,  1074,  1076,  1075,  1077,  1077,
    1078,  1079,  1079,  1080,  1080,  1081,  1081,  1081,  1081,  1082,
    1082,  1082,  1082,  1082,  1083,  1083,  1083,  1083,  1083,  1084,
    1084,  1085,  1085,  1086,  1086,  1087,  1087,  1087,  1088,  1088,
    1089,  1089,  1090,  1090,  1091,  1091,  1092,  1092,  1093,  1093,
    1094,  1095,  1095,  1096,  1096,  1097,  1097,  1098,  1098,  1098,
    1098,  1098,  1099,  1099,  1099,  1100,  1100,  1101,  1101,  1102,
    1102,  1103,  1103,  1103,  1104,  1104,  1105,  1105,  1106,  1106,
    1107,  1107,  1108,  1108,  1109,  1109,  1110,  1110,  1111,  1111,
    1113,  1112,  1115,  1114,  1117,  1116,  1119,  1118,  1120,  1118,
    1122,  1121,  1123,  1124,  1124,  1124,  1124,  1125,  1126,  1127,
    1127,  1127,  1127,  1127,  1127,  1127,  1128,  1128,  1129,  1130,
    1131,  1131,  1131,  1132,  1132,  1133,  1133,  1134,  1134,  1134,
    1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,
    1134,  1134,  1134,  1135,  1135,  1136,  1136,  1137,  1137,  1137,
    1137,  1138,  1139,  1139,  1139,  1139,  1140,  1140,  1141,  1141,
    1142,  1142,  1143,  1143,  1144,  1144,  1145,  1145,  1146,  1146,
    1146,  1146,  1147,  1147,  1147,  1147,  1147,  1147,  1147,  1147,
    1147,  1147,  1147,  1147,  1147,  1147,  1147,  1147,  1147,  1147,
    1147,  1147,  1148,  1148,  1149,  1149,  1150,  1150,  1151,  1151,
    1151,  1151,  1151,  1152,  1152,  1153,  1153,  1153,  1153,  1153,
    1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,
    1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,
    1153,  1154,  1154,  1154,  1155,  1155,  1155,  1155,  1155,  1156,
    1157,  1157,  1158,  1159,  1159,  1160,  1160,  1161,  1161,  1162,
    1162,  1162,  1163,  1163,  1163,  1164,  1164,  1164,  1164,  1165,
    1165,  1166,  1167,  1167,  1168,  1168,  1169,  1169,  1169,  1170,
    1171,  1172,  1173,  1173,  1174,  1176,  1175,  1177,  1178,  1178,
    1179,  1179,  1180,  1180,  1180,  1181,  1182,  1182,  1183,  1183,
    1184,  1184,  1185,  1185,  1186,  1186,  1187,  1187,  1188,  1188,
    1189,  1189,  1190,  1190,  1190,  1190,  1190,  1191,  1192,  1192,
    1192,  1193,  1194,  1194,  1195,  1195,  1196,  1196,  1196,  1197,
    1198,  1198,  1199,  1199,  1199,  1200,  1201,  1202,  1202,  1203,
    1203,  1204,  1204,  1204,  1204,  1204,  1204,  1205,  1206,  1206,
    1206,  1208,  1207,  1207,  1209,  1209,  1210,  1210,  1211,  1212,
    1212,  1213,  1213,  1214,  1215,  1215,  1216,  1216,  1217,  1217,
    1218,  1219,  1220,  1220,  1221,  1221,  1222,  1222,  1222,  1222,
    1223,  1223,  1223,  1223,  1224,  1224,  1224,  1224,  1224,  1224,
    1224,  1225,  1225,  1225,  1225,  1225,  1226,  1226,  1226,  1227,
    1227,  1227,  1228,  1228,  1229,  1229,  1230,  1231,  1231,  1232,
    1232,  1233,  1234,  1235,  1235,  1236,  1236,  1237,  1237,  1238,
    1238,  1239,  1239,  1239,  1240,  1240,  1241,  1242,  1242,  1243,
    1243,  1244,  1244,  1244,  1245,  1245,  1246,  1246,  1246,  1246,
    1246,  1247,  1247,  1248,  1248,  1248,  1248,  1248,  1248,  1248,
    1248,  1248,  1248,  1248,  1249,  1249,  1249,  1249,  1249,  1250,
    1250,  1250,  1250,  1250,  1250,  1250,  1250,  1250,  1250,  1250,
    1250,  1250,  1250,  1250,  1250,  1250,  1251,  1251,  1252,  1252,
    1252,  1252,  1252,  1252,  1252,  1252,  1252,  1252,  1252,  1252,
    1252,  1252,  1252,  1253,  1253,  1254,  1254,  1255,  1255,  1256,
    1256,  1257,  1257,  1257,  1257,  1257,  1257,  1257,  1258,  1258,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,
    1259,  1259,  1259,  1260,  1260,  1261,  1261,  1261,  1261,  1261,
    1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,
    1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,  1261,
    1261,  1261,  1261,  1262,  1262,  1262,  1262,  1262,  1262,  1262,
    1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,  1262,
    1262,  1262,  1262,  1262,  1262,  1263,  1263,  1264,  1264,  1264,
    1264,  1264,  1264,  1264,  1264,  1264,  1264,  1264,  1264,  1264,
    1264,  1264,  1264,  1264,  1264,  1264,  1264,  1264,  1264,  1264,
    1265,  1265,  1265,  1265,  1265,  1265,  1265,  1266,  1266,  1267,
    1267,  1268,  1268,  1269,  1269,  1270,  1270,  1271,  1271,  1272,
    1273,  1273,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,
    1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,  1274,
    1274,  1274,  1274,  1275,  1275,  1275,  1275,  1275,  1275,  1275,
    1275,  1275,  1275,  1275,  1276,  1276,  1276,  1277,  1277,  1278,
    1278,  1278,  1279,  1279,  1279,  1280,  1280,  1281,  1282,  1282,
    1283,  1284,  1285,  1286,  1286,  1287,  1287,  1288,  1288,  1289,
    1289,  1290,  1290,  1291,  1291,  1291,  1291,  1291,  1292,  1293,
    1293,  1293,  1293,  1293,  1294,  1294,  1294,  1294,  1294,  1295,
    1295,  1295,  1296,  1297,  1298,  1298,  1298,  1299,  1299,  1300,
    1300,  1301,  1301,  1302,  1302,  1303,  1304,  1304,  1304,  1304,
    1304,  1304,  1304,  1304,  1304,  1304,  1304,  1304,  1304,  1304,
    1305,  1305,  1306,  1306,  1307,  1307,  1308,  1308,  1309,  1309,
    1310,  1310,  1311,  1311,  1312,  1312,  1312,  1313,  1313,  1314,
    1314,  1314,  1314,  1314,  1314,  1315,  1315,  1315,  1316,  1316,
    1316,  1316,  1317,  1317,  1318,  1318,  1319,  1319,  1320,  1320,
    1321,  1322,  1322,  1322,  1322,  1322,  1322,  1323,  1323,  1324,
    1324,  1325,  1326,  1326,  1327,  1327,  1328,  1329,  1330,  1330,
    1331,  1331,  1331,  1332,  1332,  1333,  1333,  1333,  1333,  1334,
    1334,  1335,  1336,  1337,  1337,  1337,  1338,  1338,  1338,  1338,
    1339,  1339,  1340,  1340,  1341,  1341,  1342,  1342,  1343,  1344,
    1344,  1345,  1345,  1346,  1346,  1347,  1348,  1348,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,
    1350,  1350,  1350,  1350,  1350,  1350,  1350,  1350,  1350,  1351,
    1351,  1351,  1351,  1352,  1352,  1353,  1353,  1354,  1354,  1355,
    1355,  1356,  1357,  1357,  1358,  1358,  1359,  1359,  1360,  1361,
    1361,  1362,  1362,  1363,  1363,  1364,  1364,  1365,  1366,  1366,
    1367,  1367,  1368,  1368,  1369,  1369,  1370,  1371,  1371,  1372,
    1373,  1373,  1374,  1374,  1375,  1375,  1376,  1376,  1377,  1378,
    1378,  1378,  1379,  1379,  1379,  1379,  1379,  1380,  1380,  1381,
    1381,  1381,  1381,  1381,  1381,  1382,  1382,  1382,  1382,  1382,
    1383,  1383,  1383,  1383,  1383,  1384,  1384,  1384,  1384,  1384,
    1385,  1386,  1386,  1387,  1387,  1388,  1388,  1389,  1390,  1390,
    1390,  1391,  1392,  1393,  1394,  1395,  1395,  1396,  1397,  1398,
    1399,  1400,  1401,  1402,  1403,  1404,  1405,  1406,  1407,  1408,
    1408,  1409,  1409,  1410,  1410,  1411,  1411,  1412,  1412,  1413,
    1413,  1414,  1414,  1415,  1415,  1415,  1416,  1416,  1416,  1417,
    1417,  1417,  1417,  1418,  1418,  1419,  1419,  1420,  1420,  1420,
    1421,  1421,  1421,  1422,  1422,  1423,  1424,  1424,  1424,  1425,
    1425,  1426,  1426,  1427,  1427,  1428,  1428,  1429,  1429,  1430,
    1431,  1432,  1432,  1433,  1433,  1434,  1434,  1435,  1435,  1436,
    1436,  1437,  1438,  1438,  1439,  1439,  1440,  1441,  1441,  1442,
    1442,  1442,  1443,  1443,  1444,  1444,  1445,  1445,  1445,  1446,
    1447,  1447,  1448,  1448,  1449,  1449,  1450,  1450,  1450,  1450,
    1450,  1450,  1450,  1450,  1450,  1451,  1451,  1453,  1452,  1454,
    1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,
    1454,  1455,  1454,  1456,  1454,  1454,  1454,  1454,  1454,  1454,
    1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,
    1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,  1454,
    1454,  1454,  1454,  1454,  1454,  1454,  1457,  1457,  1457,  1458,
    1458,  1459,  1459,  1460,  1460,  1461,  1461,  1462,  1462,  1463,
    1463,  1463,  1463,  1464,  1464,  1465,  1465,  1466,  1466,  1467,
    1467,  1467,  1468,  1469,  1470,  1470,  1470,  1470,  1470,  1470,
    1471,  1471,  1472,  1472,  1473,  1473,  1474,  1474,  1474,  1476,
    1475,  1478,  1477,  1477,  1479,  1479,  1480,  1479,  1481,  1481,
    1482,  1482,  1482,  1482,  1482,  1482,  1482,  1482,  1482,  1482,
    1482,  1482,  1483,  1483,  1485,  1484,  1484,  1486,  1486,  1487,
    1487,  1489,  1488,  1490,  1488,  1491,  1491,  1492,  1492,  1494,
    1493,  1495,  1496,  1496,  1497,  1498,  1498,  1498,  1499,  1500,
    1501,  1501,  1502,  1502,  1503,  1503,  1503,  1504,  1504,  1505,
    1505,  1506,  1506,  1507,  1507,  1508,  1508,  1508,  1508,  1509,
    1509,  1510,  1510,  1511,  1511,  1512,  1512,  1513,  1513,  1514,
    1514,  1515,  1515,  1515,  1516,  1516,  1517,  1517,  1518,  1518,
    1519,  1519,  1520,  1521,  1521,  1521,  1521,  1522,  1522,  1522,
    1523,  1524,  1524,  1524,  1525,  1525,  1526,  1527,  1527,  1527,
    1527,  1527,  1527,  1527,  1527,  1527,  1528,  1528,  1529,  1529,
    1529,  1529,  1529,  1530,  1530,  1530,  1531,  1531,  1532,  1532,
    1533,  1534,  1535,  1535,  1536,  1536,  1537,  1537,  1538,  1538,
    1539,  1539,  1540,  1540,  1541,  1542,  1543,  1544,  1545,  1546,
    1547,  1547,  1548,  1549,  1549,  1550,  1550,  1551,  1551,  1552,
    1552,  1553,  1553,  1553,  1554,  1554,  1554,  1555,  1555,  1556,
    1556,  1557,  1557,  1558,  1559,  1559,  1559,  1559,  1559,  1560,
    1560,  1560,  1561,  1561,  1561,  1561,  1561,  1561,  1561,  1561,
    1561,  1561,  1561,  1561,  1561,  1561,  1561,  1561,  1561,  1561,
    1561,  1561,  1561,  1561,  1561,  1561,  1561,  1561,  1561,  1561,
    1561,  1561,  1561,  1561,  1561,  1561,  1561,  1562,  1562,  1562,
    1563,  1563,  1563,  1563,  1563,  1563,  1563,  1563,  1563,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,  1564,
    1564,  1565,  1565,  1565,  1566,  1566,  1566,  1566,  1567,  1567,
    1567,  1567,  1567,  1568,  1569,  1569,  1569,  1569,  1569,  1569,
    1569,  1570,  1570,  1570,  1570,  1570,  1570,  1570,  1571,  1571,
    1572,  1572,  1573,  1573,  1574,  1575,  1575,  1576,  1576,  1577,
    1577,  1578,  1578,  1579,  1579,  1579,  1579,  1579,  1580,  1580,
    1580,  1580,  1581,  1581,  1581,  1581,  1582,  1582,  1582,  1582,
    1582,  1582,  1583,  1584,  1584,  1584,  1584,  1584,  1584,  1584,
    1585,  1585,  1585,  1586,  1586,  1587,  1588,  1588,  1589,  1590,
    1590,  1591,  1591,  1592,  1592,  1592,  1592,  1593,  1593,  1593,
    1593,  1593,  1593,  1593,  1595,  1594,  1594,  1596,  1596,  1597,
    1597,  1598,  1599,  1599,  1599,  1599,  1601,  1600,  1600,  1602,
    1603,  1604,  1605,  1605,  1605,  1605,  1605,  1605,  1605,  1606,
    1606,  1606,  1606,  1606,  1607,  1607,  1608,  1608,  1608,  1608,
    1609,  1609,  1609,  1609,  1609,  1610,  1610,  1611,  1610,  1610,
    1610,  1612,  1612,  1613,  1612,  1612,  1614,  1614,  1614,  1614,
    1615,  1615,  1616,  1616,  1617,  1617,  1617,  1617,  1617,  1617,
    1617,  1617,  1617,  1617,  1617,  1617,  1617,  1617,  1617,  1617,
    1617,  1617,  1617,  1617,  1617,  1617,  1617,  1617,  1617,  1617,
    1617,  1617,  1617,  1617,  1617,  1617,  1617,  1617,  1618,  1618,
    1619,  1619,  1620,  1620,  1621,  1621,  1621,  1622,  1622,  1622,
    1622,  1622,  1623,  1623,  1624,  1624,  1625,  1625,  1626,  1626,
    1627,  1627,  1627,  1627,  1627,  1627,  1627,  1628,  1628,  1628,
    1628,  1628,  1628,  1628,  1628,  1628,  1628,  1629,  1629,  1630,
    1630,  1631,  1631,  1632,  1632,  1633,  1633,  1633,  1633,  1633,
    1634,  1634,  1635,  1635,  1636,  1636,  1636,  1636,  1636,  1637,
    1637,  1639,  1638,  1640,  1640,  1641,  1641,  1641,  1642,  1642,
    1642,  1643,  1643,  1644,  1645,  1645,  1646,  1647,  1648,  1648,
    1648,  1649,  1650,  1651,  1652,  1652,  1652,  1652,  1652,  1652,
    1652,  1652,  1653,  1654,  1654,  1654,  1655,  1655,  1655,  1655,
    1655,  1656,  1656,  1656,  1656,  1656,  1656,  1657,  1657,  1658,
    1659,  1660,  1660,  1660,  1661,  1662,  1662,  1662,  1663,  1663,
    1663,  1665,  1664,  1666,  1667,  1667,  1667,  1667,  1668,  1668,
    1669,  1669,  1671,  1670,  1672,  1672,  1674,  1675,  1676,  1677,
    1673,  1679,  1680,  1681,  1682,  1678,  1683,  1683,  1683,  1683,
    1683,  1683,  1684,  1684,  1685,  1685,  1685,  1686,  1686,  1687,
    1687,  1687,  1688,  1688,  1689,  1689,  1689,  1690,  1690,  1691,
    1691,  1692,  1692,  1693,  1694,  1694,  1695,  1695,  1696,  1696,
    1696,  1697,  1697,  1698,  1698,  1699,  1699,  1700,  1700,  1701,
    1701,  1702,  1702,  1703,  1703,  1703,  1704,  1704,  1705
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     4,
       1,     2,     0,     4,     0,     2,     3,     1,     2,     0,
       3,     0,     6,     0,     6,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     3,     1,     3,     1,     2,
       3,     5,     7,     2,     3,     1,     3,     3,     2,     3,
       1,     3,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     5,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     3,     9,     6,     7,     9,     4,    10,     0,
       6,     2,     9,     7,     6,     7,    11,     8,     7,     0,
       3,     3,     6,     3,     0,     3,    12,    11,    11,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     0,    12,
       0,     6,     2,     0,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     3,     4,     0,     2,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     1,     1,     2,     3,     3,
       3,     0,     3,     0,     1,     3,     1,     3,     0,     1,
       3,     1,     4,     0,     1,     1,     1,     0,     3,     2,
       3,     0,     3,     5,     5,     0,     7,     0,     6,     1,
       1,     1,     3,     1,     1,     1,     3,     0,     1,     1,
       1,     1,     2,     1,     3,     1,     1,     0,     1,     0,
       2,     3,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     4,
       0,     1,     1,     1,     3,     1,     3,     3,     1,     2,
       1,     1,     1,     1,     3,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     5,     0,     2,
       0,     3,     0,     2,     2,     2,     2,     0,     6,     2,
       0,     2,     1,     1,     3,     0,     0,     0,     7,     0,
       2,     2,     1,     1,     0,     0,     8,     0,     6,     1,
       2,     1,     2,     0,     0,     6,     0,     0,     6,     0,
       2,     0,     5,     0,     1,     0,     5,     0,     2,     0,
       5,     4,     0,     0,     8,     0,     0,     8,     1,     1,
       1,     1,     1,     0,     2,     0,     4,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     1,     0,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     3,
       1,     1,     3,     3,     1,     1,     2,     1,     2,     1,
       0,     2,     1,     2,     1,     6,     6,     5,     4,     5,
       4,     5,     0,     1,     0,     3,     0,     2,     0,     8,
       9,     0,     1,     1,     3,     0,     2,     0,     3,     1,
       3,     5,     0,     4,     3,     1,     1,     1,     3,     1,
       3,     0,     4,     1,     3,     1,     1,     0,     3,     1,
       3,     3,     0,     1,     2,     1,     3,     4,     3,     3,
       3,     4,     4,     3,     0,     1,     1,     2,     1,     1,
       1,     0,     3,     1,     2,     1,     3,     0,     1,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       1,     1,     3,     4,     4,     3,     2,     2,     3,     3,
       2,     3,     3,     1,     1,     4,     4,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     3,     0,     1,     6,     7,
       7,     7,     8,     3,     4,     0,     2,     0,     1,     0,
       1,     2,     2,     9,     0,     2,     0,     1,     1,     3,
       3,     3,     1,     2,     1,     1,     3,     2,     3,     2,
       2,     1,     3,     3,     2,     3,     1,     2,     2,     2,
       1,     2,     1,     1,     1,     2,     3,     2,     3,     2,
       2,     5,     5,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     2,     1,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     2,
       0,     1,     1,     1,     1,     1,     0,     1,     0,     1,
       1,     5,     0,     3,     0,     2,     3,     0,     1,     2,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     1,
       0,     1,     0,     1,     2,     1,     1,     2,     2,     2,
       4,     3,     1,     3,     2,     1,     2,     2,     2,     2,
       2,     2,     2,     1,     3,     3,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     2,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     1,     0,     2,     0,
       1,     1,     2,     2,     1,     2,     2,     0,     1,     1,
       1,     3,     1,     3,     0,     1,     0,     4,     0,     1,
       5,     0,     3,     3,     1,     0,     2,     2,     2,     0,
       3,     3,     6,     6,     1,     1,     2,     2,     2,     2,
       2,     1,     1,     0,     1,     1,     1,     1,     0,     1,
       0,     1,     1,     2,     1,     3,     0,     1,     1,     2,
       1,     0,     1,     1,     2,     1,     1,     3,     2,     1,
       3,     3,     1,     3,     3,     0,     1,     2,     2,     1,
       1,     1,     1,     1,     3,     1,     2,     5,     3,     1,
       1,     4,     0,     1,     0,     2,     1,     3,     4,     4,
       0,     5,     0,     5,     0,     5,     0,     5,     0,     4,
       0,    10,     7,     6,     6,     6,     4,     7,     7,     6,
       8,     7,     5,     5,     5,     5,     0,     2,     8,     3,
       0,     2,     2,     0,     1,     1,     2,     2,     2,     2,
       5,     3,     3,     3,     3,     5,     4,     3,     4,     4,
       2,     2,     2,     0,     2,     2,     1,     2,     2,     2,
       2,     3,     0,     3,     1,     4,     0,     3,     0,     2,
       0,     1,     1,     2,     1,     3,     1,     2,     0,     1,
       1,     3,     2,     2,     3,     6,     5,     3,     4,     4,
       4,     4,     5,     4,     3,     3,     8,     7,     4,     4,
       1,     1,     0,     1,     2,     2,     1,     1,     1,     3,
       3,     1,     3,     1,     3,     6,     5,     2,     6,     5,
       4,     4,     3,     3,     3,     3,     2,     2,     6,     8,
       5,     4,     4,     4,     3,     5,     5,     5,     5,     1,
       3,     1,     1,     1,     0,     1,     1,     2,     2,     3,
       1,     1,     3,     1,     1,     0,     1,     0,     1,     0,
       1,     1,     0,     2,     1,     0,     1,     1,     1,     2,
       2,     2,     0,     1,     1,     3,     1,     1,     1,     3,
       3,     3,     2,     4,     3,     0,     4,     3,     0,     1,
       1,     3,     3,     2,     2,     4,     0,     3,     0,     3,
       0,     3,     0,     3,     0,     1,     1,     3,     1,     1,
       0,     2,     1,     3,     3,     3,     1,     4,     0,     1,
       1,     5,     0,     1,     1,     2,     1,     1,     1,     5,
       0,     3,     0,     5,     4,     2,     4,     0,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     4,     0,     1,
       1,     0,     4,     3,     3,     5,     1,     3,     3,     5,
       7,     1,     3,     2,     1,     1,     8,     5,     1,     3,
       3,     4,     0,     4,     0,     2,     1,     2,     1,     1,
       3,     2,     3,     3,     3,     4,     3,     4,     2,     3,
       2,     1,     4,     4,     4,     4,     3,     3,     4,     1,
       1,     1,     9,     8,     0,     1,     2,     1,     1,     1,
       3,     2,     2,     0,     1,     2,     1,     1,     1,     2,
       1,     3,     4,     4,     1,     1,     2,     0,     1,     2,
       1,     3,     1,     1,     1,     2,     0,     2,     2,     1,
       1,     0,     2,     3,     3,     3,     2,     3,     4,     3,
       4,     3,     4,     1,     3,     4,     3,     4,     1,     3,
       4,     5,     7,     6,     8,     6,     5,     6,     4,     3,
       5,     4,     6,     3,     4,     1,     1,     0,     3,     3,
       3,     3,     3,     3,     5,     5,     3,     3,     3,     3,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     3,     2,     2,     2,     2,     1,     3,     5,     6,
       2,     4,     7,     2,     7,     5,     6,     6,     4,     4,
       5,     3,     3,     0,     1,     4,     6,     2,     4,     4,
       4,    10,     6,     8,     8,     6,     4,     4,     6,     4,
       4,     4,     6,     4,     7,     7,     7,     6,     6,     6,
       6,     3,     4,     6,     8,     2,     2,     8,     8,     6,
       6,     1,     6,     6,     8,     8,     6,     8,     6,     2,
       8,     8,     2,     2,     2,     0,     2,     4,     4,     4,
       4,     3,     8,     6,     8,     4,     6,     4,     6,     8,
       4,     3,     6,     4,     6,     4,     7,     7,    10,     1,
       4,     4,     4,     4,     4,     6,     4,     4,     6,     2,
       3,     0,     4,     0,     3,     0,     1,     1,     3,     2,
       1,     1,     5,     6,     5,     5,     5,     7,     5,     6,
       5,     6,     5,     6,     5,     6,     5,     5,     5,     5,
       5,     6,     8,     4,     4,     4,     4,     4,     5,     7,
       7,     6,     6,     9,     0,     3,     3,     0,     2,     0,
       2,     2,     0,     2,     2,     0,     1,     2,     1,     1,
       1,     3,     4,     0,     1,     0,     3,     0,     3,     0,
       3,     1,     1,     2,     2,     2,     4,     2,     4,     1,
       2,     2,     2,     4,     0,     3,     2,     2,     3,     1,
       1,     1,     4,     2,     3,     1,     4,     0,     1,     0,
       2,     0,     3,     3,     1,     2,     2,     3,     2,     1,
       2,     1,     2,     1,     2,     2,     2,     1,     1,     2,
       0,     1,     1,     3,     1,     3,     1,     3,     0,     1,
       0,     2,     4,     5,     1,     1,     4,     1,     1,     5,
       7,     5,     7,     3,     3,     3,     4,     4,     1,     2,
       2,     1,     3,     3,     0,     1,     0,     1,     0,     1,
       4,     1,     1,     1,     1,     1,     1,     3,     5,     3,
       3,     4,     3,     3,     3,     4,     8,     4,     1,     3,
       3,     7,     4,     0,     1,     0,     1,     1,     2,     1,
       2,     3,     3,     1,     1,     2,     0,     2,     3,     3,
       1,     1,     6,     6,     1,     2,     0,     1,     1,     0,
       1,     1,     1,     1,     3,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     0,     2,     0,     1,     0,
       1,     2,     0,     2,     2,     3,     3,     1,     4,     0,
       3,     1,     3,     0,     2,     1,     3,     3,     0,     4,
       3,     1,     0,     1,     3,     1,     2,     0,     1,     3,
       3,     1,     0,     1,     1,     1,     0,     1,     2,     1,
       3,     3,     1,     1,     1,     1,     1,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     2,     1,     2,     5,     2,
       1,     2,     6,     6,     4,     6,     4,     5,     4,     4,
       5,     4,     4,     4,     5,     5,     4,     6,     4,     1,
       3,     1,     3,     0,     2,     0,     1,     0,     1,     1,
       3,     1,     1,     9,    10,     8,     6,     7,     6,     0,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     4,
       1,     3,     4,     3,     1,     2,     1,     2,     1,     1,
       1,     3,     1,     3,     1,     1,     1,     0,     1,     3,
       4,     0,     1,     3,     1,     1,     1,     0,     3,     0,
       5,    10,     0,     1,     3,     1,     3,     0,     1,    10,
       7,     8,     0,     2,     0,     2,     1,     1,     1,     3,
       0,     1,     0,     1,     1,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     0,     3,     0,     3,     2,
       4,     4,     3,     4,     4,     1,     3,     3,     6,     2,
       2,     0,     6,     0,     7,     6,     2,     5,     5,     2,
       2,     1,     4,     3,     2,     3,     2,     2,     1,     1,
       3,     5,     4,     3,     3,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     1,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     0,     1,     0,
       1,     1,     2,     1,     1,     0,     2,     0,     2,     0,
       2,     1,     3,     3,     1,     1,     1,     1,     1,     3,
       1,     1,     0,     3,     2,     1,     0,     1,     1,     0,
       4,     0,     4,     1,     0,     3,     0,     3,     3,     1,
       2,     2,     2,     2,     2,     3,     1,     1,     1,     1,
       1,     1,     0,     1,     0,     3,     3,     3,     1,     0,
       2,     0,     4,     0,     3,     0,     1,     0,     2,     0,
       3,     3,     2,     2,     3,     0,     1,     1,     2,    18,
       1,     1,     0,     1,     0,     1,     1,     0,     1,     1,
       1,     0,     2,     2,     1,     3,     4,     3,     3,     0,
       2,     2,     1,     3,     3,     0,     4,     0,     3,     1,
       1,     0,     3,     2,     3,     1,     1,     2,     0,     2,
       3,     1,     3,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     2,     1,     1,     3,     5,
       2,     1,     1,     1,     1,     1,     3,     5,     1,     3,
       2,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       2,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     2,     2,     5,     5,     7,
       7,     3,     3,     3,     6,     6,     6,     4,     0,     2,
       4,     6,     1,     3,     1,     2,     2,     0,     2,     1,
       3,     2,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     1,     0,     2,     2,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     4,     6,     2,     3,     3,     2,
       1,     3,     3,     2,     2,     1,     0,     2,     3,     0,
       2,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     4,     4,     1,     1,     1,
       3,     3,     1,     1,     2,     2,     0,     3,     2,     1,
       1,     3,     4,     2,     6,     5,     9,     3,     3,     4,
       3,     6,     7,    10,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     7,     0,     9,     8,
       6,     5,     9,     0,    11,     7,     0,     1,     1,     1,
       0,     1,     1,     3,     2,     3,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     2,     2,     2,     0,     3,
       0,     1,     3,     1,     2,     2,     2,     1,     3,     3,
       1,     3,     1,     3,     1,     3,     0,     3,     0,     3,
       4,     5,     4,     6,     6,     7,     1,     7,     9,     5,
       6,     8,     4,     7,     7,     8,     2,     1,     3,     1,
       3,     0,     3,     1,     3,     0,     2,     2,     2,     2,
       0,     3,     0,     3,     0,     3,     4,     3,     3,     0,
       3,     0,     3,     0,     1,     0,     3,     2,     0,     1,
       2,     0,     1,     4,     4,     5,     2,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     3,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     1,     2,     1,     2,     3,     3,     3,     0,     3,
       3,     0,     7,     2,     0,     3,     4,     4,     1,     1,
       0,     2,     0,    12,     7,     6,     0,     0,     0,     0,
      14,     0,     0,     0,     0,    11,     4,     4,     3,     4,
       3,     3,     0,     2,     1,     3,     5,     1,     1,     0,
       1,     1,     0,     2,     0,     1,     3,     5,     3,     3,
       3,     1,     3,     4,     6,    10,     1,     5,     0,     2,
       3,     1,     1,     0,     3,     1,     3,     1,     3,     1,
       2,     0,     3,     0,     1,     1,     0,     1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 23288 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 23302 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 23324 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 23332 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 23348 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 23375 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 10:
#line 2083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 23384 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 13:
#line 2095 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 23390 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 15:
#line 2101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23396 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23402 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23408 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 19:
#line 2105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23414 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2106 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23420 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 22:
#line 2108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23426 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23432 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23438 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 26:
#line 2112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23444 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23450 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 29:
#line 2115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23456 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 31:
#line 2117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23462 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 33:
#line 2119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23468 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2120 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23474 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23480 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23486 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 42:
#line 2128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23492 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 46:
#line 2132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23498 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23504 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23510 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 50:
#line 2136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23516 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23522 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 54:
#line 2140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23528 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 56:
#line 2142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23534 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23540 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23546 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23552 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23558 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23564 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23570 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 64:
#line 2150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23576 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23582 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23588 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23594 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 2155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23600 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2156 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23606 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23612 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23618 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2161 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23624 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23630 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23636 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23642 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23648 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23654 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23660 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 2174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23666 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23672 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23678 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 23684 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2181 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23690 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23696 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23702 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23708 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2187 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23714 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2188 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23720 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23726 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2191 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23732 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23743 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 23764 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 110:
#line 2231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 23775 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 23786 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23797 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2255 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23803 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 23814 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 119:
#line 2282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 23826 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 23836 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 23851 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2312 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23857 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 23871 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2324 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23877 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 23888 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 23899 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 23910 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 23921 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 23932 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 23944 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 23955 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 23965 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 23973 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 23984 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 23993 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 24004 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24014 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24022 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 24034 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 24044 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24054 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24062 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24073 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24082 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 24095 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24105 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24113 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24124 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24133 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 24144 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 24152 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 24160 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 24168 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 24176 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 24190 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 24198 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 24206 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24215 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 24230 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24239 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 24247 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24255 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 24263 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 24271 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 24279 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 24287 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24296 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 24304 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24312 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 24320 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24330 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24368 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 24376 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 24384 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 24392 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24402 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) != 0 && (yyvsp[0].ulong_num) != 1) {
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
            else {
              Lex->mi.require_row_format = (yyvsp[0].ulong_num);
            }
          }
#line 24416 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 24424 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 24434 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 24444 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 24452 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 24460 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 24468 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 24477 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 24486 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24494 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 24514 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24522 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 24533 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2793 "sql_yacc.yy" /* yacc.c:1646  */
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
#line 24542 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2798 "sql_yacc.yy" /* yacc.c:1646  */
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[0].lexer.lex_str).str);
         Lex->mi.channel= (yyvsp[0].lexer.lex_str).str;
         Lex->mi.for_channel= true;
       }
#line 24558 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24571 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24584 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 24592 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 24600 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 24608 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 24618 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 24630 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24641 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2880 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24647 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24661 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24684 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24706 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24729 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 24746 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 24754 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 24762 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 24772 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24788 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24804 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 24821 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24837 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 24845 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 24853 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24864 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24875 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24886 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 24894 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 24902 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 24910 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 24918 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 24927 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 24935 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 24943 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 24963 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 24975 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 24986 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 24996 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25002 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25012 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25022 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25032 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 25043 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 25053 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 25063 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3216 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25069 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 25079 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 25089 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25095 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 25104 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 25154 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 25168 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 25186 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 25206 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3352 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25212 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3353 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25218 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3357 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25224 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3358 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25230 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3364 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 25236 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3366 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 25242 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3368 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 25248 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3370 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 25254 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3372 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 25260 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3374 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 25266 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3376 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25272 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3381 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 25278 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3382 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 25284 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3383 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 25290 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 25298 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 25306 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 25314 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 25320 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3407 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 25328 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 25380 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 25431 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25437 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25443 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 25449 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 25455 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3543 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25461 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3548 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25467 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25475 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 25500 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3586 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25599 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 25620 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 25665 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 25703 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3776 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 25716 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3785 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 25781 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3848 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 25787 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3849 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 25793 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3855 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25799 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 25805 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 25829 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3885 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25844 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3900 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25867 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3921 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25873 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3922 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25879 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 25887 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 25904 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25914 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25924 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25934 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25948 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 25978 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 4004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 25984 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 4009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 25990 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 4011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 25996 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 4016 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 26002 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 4018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 26008 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 4023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26018 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 4030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26028 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 4042 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26034 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 4044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 26058 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 4064 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26064 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 4070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 26070 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 4072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 26076 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 4074 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 26082 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 4076 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 26088 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 4078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 26094 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 4080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 26100 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 4082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 26106 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 4084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 26112 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 4086 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 26118 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 26124 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 26130 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4092 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 26136 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26151 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26168 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26174 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26180 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 26186 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26196 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26206 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 26216 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 26226 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26236 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 26268 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 26277 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 26283 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4212 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 26289 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 26295 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 26305 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 26315 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26325 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 26331 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 26337 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 26343 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4255 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 26349 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 26355 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 26361 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4261 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 26367 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4263 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 26373 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4265 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 26379 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 26385 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 4269 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 26391 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4271 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 26397 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 26403 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 4278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 26427 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 4298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 26451 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 4321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 26460 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 4326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 26469 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 4350 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 26475 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 4352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 26485 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 4360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 26498 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26550 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4420 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26562 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4428 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26612 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4476 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 26627 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 26640 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26698 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26746 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26770 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26794 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4646 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26800 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26824 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 26846 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 26868 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4718 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26880 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4726 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26921 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4764 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 26943 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4782 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 26956 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4805 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 26970 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4815 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27016 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4860 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 27024 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 27032 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 27040 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4891 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27052 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4899 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27097 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4941 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27106 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4949 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27118 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4957 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27159 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4995 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27168 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 5003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27186 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 27208 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 27229 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 5058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 27235 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 27241 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 27261 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 5080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 27280 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5097 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 27295 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 27304 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5116 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 27321 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 27355 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27372 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5178 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27384 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 5186 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27426 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 5227 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 27445 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5244 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27457 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 5252 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 27499 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 5295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 27505 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 5297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 27511 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 5302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 27517 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 5304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 27523 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 5306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 27529 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 5320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27535 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 5322 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 27543 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 5328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27549 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 5330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 27557 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 5336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27563 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 5342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27573 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 5348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27583 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 5370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27589 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 5376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27599 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 5382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27609 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 5400 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27615 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 5406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27625 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 5412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27635 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 5424 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27641 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 5430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27651 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 5436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27661 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 5454 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27667 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27677 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27687 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27693 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 27699 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5485 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 27705 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5489 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27711 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 27719 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 27727 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 27735 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 27743 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27751 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27759 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 27767 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 27775 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 27783 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 27791 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 5564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 27799 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 27807 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 27815 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 27823 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 27829 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 27879 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 27888 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 27897 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 27908 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 27919 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 27930 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 27936 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5709 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 27942 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 27950 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 27958 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 27966 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 27974 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 27982 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 27990 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 27998 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5758 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28004 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28010 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5764 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 28016 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 28034 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28040 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28053 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5796 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 28059 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 28067 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 28075 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5811 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 28081 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28091 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28101 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28107 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28120 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5846 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 28126 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5847 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 28132 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28142 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28152 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 28161 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 28169 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 28178 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 28187 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5891 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 28193 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 28201 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 28209 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28220 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28230 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 28245 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 28253 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28263 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28273 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 28279 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 5957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 28285 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 5962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 28291 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 5963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 28297 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28307 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 5974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28317 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 28325 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5989 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 28331 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 5995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28341 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 6001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28351 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 6010 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 28357 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 6012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 28363 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 6014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 28369 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 6016 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 28375 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 6018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 28381 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 6020 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 28387 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 6022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 28393 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 6024 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 28399 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 6032 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28405 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 6033 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28411 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6037 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28417 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 6038 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28423 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28432 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28441 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 6053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 28457 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 6067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28463 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 6068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28469 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 6073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28479 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 6079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28489 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 6088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28499 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 6094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28509 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28517 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 6112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 28525 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28533 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28541 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28549 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 28557 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28565 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 28573 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 28581 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
          }
#line 28589 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 28597 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 28605 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 28613 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 28621 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 28642 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 28650 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28658 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28666 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 28674 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 28682 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 28690 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 28698 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 28706 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 28714 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28722 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28730 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28738 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 28746 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 28754 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 28762 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 28770 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 28778 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 28786 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 28794 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 28812 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 28818 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 28824 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 28830 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 28836 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6289 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 28842 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 28848 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6291 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 28854 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6292 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 28860 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 28866 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 28872 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 28878 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 28884 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 28890 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6304 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 28896 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6305 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 28902 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6306 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 28908 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6307 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 28914 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 28924 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 28934 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 28940 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 28946 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 28954 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 28960 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 28969 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28978 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28987 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28995 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29008 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 29020 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 29029 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 29035 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6394 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 29041 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6395 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29047 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6399 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29053 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6400 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29059 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29065 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 29071 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 29077 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 29085 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 29106 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6444 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29112 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29118 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 29124 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 29132 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 29140 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 29148 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 29156 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 29164 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29172 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29180 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29189 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29198 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29211 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29224 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29232 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 29240 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29249 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29262 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29270 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 29297 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 29305 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 29313 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 29321 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 29329 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 29337 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 29345 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29353 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 29361 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29369 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29378 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29387 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29396 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29405 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29414 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29422 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29430 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29439 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 29447 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 29455 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6642 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 29461 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 29467 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 29473 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6648 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 29479 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6650 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 29485 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 29491 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 29497 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6656 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 29503 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6660 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29509 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6661 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29515 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6665 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29521 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6666 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29527 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6670 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29533 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6671 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29539 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6672 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29545 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6673 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29551 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6674 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29557 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6678 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 29563 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6679 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 29569 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6680 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 29575 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 29581 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 29587 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 29596 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6692 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 29602 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 29608 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29614 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29620 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6704 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29626 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 29635 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 29644 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 29653 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 29662 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 29671 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 29677 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6745 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29683 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29689 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6750 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29695 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6752 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 29704 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29710 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 29718 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29724 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6773 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 29730 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 29741 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29747 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29753 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29759 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29765 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6789 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 29771 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 29780 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 29786 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 29809 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 29829 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 29837 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 29845 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 29853 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 29861 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 29869 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 29877 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 29885 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 29893 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 29901 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 29909 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 29917 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 6891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29925 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 29933 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format));
          }
#line 29941 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 29949 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 29962 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 29970 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 29978 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29986 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29994 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6944 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 30000 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6945 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 30006 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 30012 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 30018 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 30024 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 30030 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30038 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 30046 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 30059 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30065 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 30071 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6989 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30077 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 30090 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30096 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 30102 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 30108 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 30118 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30124 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 30130 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30136 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7026 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30142 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7027 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30148 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7032 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 30154 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 30163 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 30172 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 30184 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 30194 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 30204 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30213 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30222 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30231 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30240 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30251 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 30261 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30273 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30279 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 30288 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7120 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 30300 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 30306 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 30318 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 30324 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 30330 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30341 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30352 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 30358 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 30364 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 30370 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 30376 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30385 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30394 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30403 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30412 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 30421 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7211 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 30427 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7212 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 30433 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7213 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 30439 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 30445 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7215 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 30451 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 30457 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 30463 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7224 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30469 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7225 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30475 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7229 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30481 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7234 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30487 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7235 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30493 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7236 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30499 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 30505 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 30511 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30517 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30527 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30537 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30552 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30558 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30568 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30578 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30584 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30594 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30604 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30610 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30616 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 30622 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30630 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 30638 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30646 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30654 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 30660 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7368 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30666 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30672 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 30678 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30684 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7379 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30690 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 30696 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 30702 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 30708 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 30714 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 30720 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 30730 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 30741 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30751 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 30767 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 30777 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 30788 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30798 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7457 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 30804 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 30810 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30816 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 30826 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 30835 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 30849 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 30863 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 30875 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 30888 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 30903 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 30914 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 30929 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 30940 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 30955 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7582 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30961 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 30977 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7601 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30983 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31003 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31020 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31043 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31065 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31088 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31100 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31123 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31147 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 31159 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 31177 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 31194 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 31204 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 31220 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 31236 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 31251 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7842 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 31257 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 31263 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 31272 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 31282 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 31292 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 31303 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 31314 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7888 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31320 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 31330 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 31340 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31352 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31371 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31383 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31395 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 31406 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 31417 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 31428 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 31439 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 31449 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 31459 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 31469 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 31485 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 8008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 31501 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 8020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 31511 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 8028 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31517 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 8033 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31523 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 8034 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31529 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 8039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 31539 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 8045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 31549 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 8051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 31559 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 8057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 31569 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 8066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 31584 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 8079 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31590 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 8080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31596 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 8081 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31602 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 8082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31608 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 8086 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31614 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 8088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 31627 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 8099 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31633 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 8100 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31639 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 8104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 31645 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 8105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31651 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 8111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31667 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 8126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31676 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 8131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31685 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 31693 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 31701 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 31710 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 8155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 31719 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 8161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 31729 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 31737 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 8174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 31745 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 31753 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 31761 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 8193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 31769 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 8197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 31777 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31785 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31793 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 8212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31801 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31810 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 8223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31819 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 31827 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 31835 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 31843 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 31851 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 31859 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 31867 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 31875 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 31883 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 31891 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 31897 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 31905 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 31913 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 31919 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31930 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31939 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 31947 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 31956 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 31968 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 31977 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 31985 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 31993 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 32001 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32009 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32017 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 32026 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 32034 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 32042 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 32050 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 32058 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 32066 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 32074 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 32082 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 32090 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 32098 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 32106 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 32114 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 32122 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 32130 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 32138 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 32146 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 32154 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 32162 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 32172 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 32180 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 32188 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32197 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32206 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 32215 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 32221 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32230 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32239 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32249 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32259 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 32265 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 32273 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32291 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 32297 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 32305 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32323 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32329 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 32335 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 32341 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 32347 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 32353 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 32359 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8557 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 32365 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8558 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 32371 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8562 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32377 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8563 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32383 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8564 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32389 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8565 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32395 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 32404 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 32414 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 32427 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 32441 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 32449 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8635 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32455 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8637 "sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[-1].num);
        }
#line 32466 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 32481 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 32502 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 32519 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32527 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32535 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32543 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32551 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 32559 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 32567 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 32575 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32583 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 32591 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32599 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 32608 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32616 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 32624 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32632 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 32640 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32648 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32656 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32664 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32672 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 32680 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 32688 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 32697 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 32723 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 32732 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 32741 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 32749 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 32764 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32770 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8877 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 32776 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8878 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 32782 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32791 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8891 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 32797 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 32806 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 32812 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8906 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 32818 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 32824 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 32834 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8921 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 32840 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 32859 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 32869 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 32880 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 32891 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 32900 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32909 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 32915 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 32924 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 32930 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 32936 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 32942 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 9000 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 32948 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 9002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 32954 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 32960 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 32968 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 32974 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9016 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32980 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32986 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 32994 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9026 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33000 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 33008 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 33017 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 33026 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 33040 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 33048 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 33057 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 33067 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 33077 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 33085 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9100 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33091 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 33097 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 33105 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 33113 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 33123 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 33133 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 33141 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 33149 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 33155 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 33166 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 33172 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 33178 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 33186 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 33195 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 33203 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 33211 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 33219 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 33227 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 33235 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33243 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33251 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33259 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33267 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33275 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33283 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 9301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 33291 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 33299 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33307 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33315 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 33323 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 33331 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 33337 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 33343 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 33351 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 33360 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 33368 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 33381 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 33399 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 33417 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 33423 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 33429 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 33435 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 33445 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 33455 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 33463 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 33475 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 33483 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 33492 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 33500 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 33510 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33520 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33530 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 33538 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 33546 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 33554 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 33560 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 33566 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9519 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 33572 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9523 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 33578 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 33584 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9529 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 33590 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 33600 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 33610 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 33621 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33627 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33635 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9564 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 33641 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33647 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9566 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33653 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9567 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33659 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33665 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9572 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33671 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9573 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33677 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33687 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33696 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33706 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 33714 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 33722 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 33730 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 33738 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 33746 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 33754 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 33762 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 33770 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 33778 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 33786 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 33803 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 33811 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 33820 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 33828 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 33839 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 33847 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 33858 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 33866 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 33874 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 33882 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 33894 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item), nullptr);
          }
#line 33902 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33910 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item), nullptr);
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 33919 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 33928 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 33940 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 33952 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33960 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33968 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33976 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33984 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33992 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34000 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 34008 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 34016 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34024 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34032 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34040 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34048 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34056 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34064 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9817 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 34072 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9828 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 34078 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 34084 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 34090 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 34096 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9836 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 34102 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9837 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 34108 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9838 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 34114 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 34120 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 34126 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9844 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 34132 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 34140 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 34146 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34154 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 34162 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 34170 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 34178 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 34186 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 9883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 34194 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 9886 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 34200 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 9888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 34208 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 34216 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 9896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 34224 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 9900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 34232 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 9904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 34240 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 9908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 34248 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 9912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 34256 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 9916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 34264 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 34272 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 9924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 34280 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 9928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 34288 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 9932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 34296 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 9937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 34304 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 9941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 34315 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 9948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 34327 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 9958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 34333 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 9959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 34339 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 9970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 34347 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 9974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 34355 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 9978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 34363 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 9982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 34371 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 9986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 34379 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 9990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 34387 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 9994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34395 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 9998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34403 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 34411 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 34421 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34429 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 34437 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 34445 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34453 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 34461 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 34469 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 34477 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 34485 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 34494 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 34503 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 34512 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 34520 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 34528 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 34536 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 34544 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 34553 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 34561 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 34569 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 34577 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34585 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 34593 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34601 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34609 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34617 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 34625 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 34633 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34642 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 34650 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 34658 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34666 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34674 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34682 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34690 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34698 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34707 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 34715 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 34723 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 34731 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34739 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34747 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 34755 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 34763 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 34771 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 34779 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 34787 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 34795 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 34803 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34811 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34819 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34827 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 34835 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34843 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 34851 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34859 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34867 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 34875 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 34883 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 34891 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 10281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 34899 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34907 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 34915 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 34923 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 34931 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 34939 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 34949 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 34959 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 34969 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 34979 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 34989 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34997 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 35007 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 35015 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 35023 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 10372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 35029 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 10374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 35043 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10386 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35049 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 10387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35055 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 35061 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 10392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 35067 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 10396 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 35073 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10397 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 35079 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 10402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35089 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35099 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 35107 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 35115 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 35123 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35131 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35139 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 35153 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 35167 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35175 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 35183 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35191 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 35199 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35207 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35215 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35223 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35231 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 35239 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 35247 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 35255 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 35263 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 35271 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 35279 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 35287 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 35295 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 35303 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 35311 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 35319 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 35327 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35335 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35350 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35365 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35373 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35381 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35394 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 35403 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item_num);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35412 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].param_marker);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35421 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 35429 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 35437 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 35445 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 35453 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 35461 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 35469 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 35477 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 35485 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 35493 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35501 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35509 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 35517 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35525 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 35533 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 35541 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10708 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 35559 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 35567 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 35575 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35583 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35591 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35599 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35607 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 35615 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 35623 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 35632 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 35640 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 35648 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 35656 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 35664 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35672 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 35680 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 35688 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 35696 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 35704 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 35712 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 35720 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35728 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 35736 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 35744 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 35752 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 35760 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 35767 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 35773 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 35779 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 35785 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 35793 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10870 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35799 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 35810 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 35818 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 35826 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10892 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 35832 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10893 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 35838 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 35848 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10903 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 35854 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 35860 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10908 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 35866 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 35875 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 35886 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 35894 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 35905 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 35928 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 35940 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35951 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35962 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35973 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35984 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35995 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 36006 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 36017 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 36028 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36039 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 36051 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 36062 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11049 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 36068 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36078 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36088 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11069 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 36094 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 36100 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36110 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36120 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11089 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36126 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36132 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11094 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36138 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11095 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36144 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 36156 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 36166 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 36172 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 36178 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 36192 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 36198 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 36204 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 36212 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 36220 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 36228 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 36236 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 36249 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 36257 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11247 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 36263 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 36269 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 36275 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36281 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36287 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11255 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36293 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 36299 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 36305 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 36311 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 36317 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 36325 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 36331 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 36337 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 36343 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 36349 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 36355 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 36365 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36371 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36377 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 36385 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36391 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36397 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36414 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36426 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 36442 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 36450 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 36460 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 36470 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 36478 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 36491 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 36499 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 36507 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 36515 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 36524 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 36533 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 36542 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 36551 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11470 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 36557 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 36569 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11482 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 36575 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11485 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 36581 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 36589 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 36597 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 36605 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 36613 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11507 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 36619 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 36625 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 36631 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 36637 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 36643 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36652 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36661 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 36670 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 36676 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 36687 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36697 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36707 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36717 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36726 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 36739 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 36752 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11616 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36758 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11617 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 36764 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 36770 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 36776 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 36782 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11621 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 36788 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11622 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 36794 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11623 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 36800 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 36806 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11625 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 36812 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11626 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 36818 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11627 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 36824 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 36830 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11632 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 36836 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 36842 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 36848 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 36854 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11636 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 36860 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 36866 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11638 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 36872 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11639 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 36878 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11643 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 36884 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11644 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 36890 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11645 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 36896 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11646 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 36902 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11655 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 36908 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11656 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 36914 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11665 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 36920 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11670 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 36926 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11674 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36932 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 36940 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 36948 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 36956 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 36965 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 36975 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 36992 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 37005 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 37013 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 37023 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 37033 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 37041 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 37049 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 37059 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 37069 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 37080 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11794 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 37086 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 37094 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37103 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37114 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 37120 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 37126 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37135 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37146 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 37154 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11856 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 37160 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 37168 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37177 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37188 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11883 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 37194 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 37200 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 37206 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11893 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 37212 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 37220 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 37230 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 37240 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 37250 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)), (yylsp[0]).raw);
          }
#line 37258 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 37266 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37274 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37282 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37290 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 37296 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 37302 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11954 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37308 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11955 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37314 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11956 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37320 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11957 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37326 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11958 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37332 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11959 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37338 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11963 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37344 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11964 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37350 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11965 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37356 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11966 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37362 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11967 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37368 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 11971 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37374 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 11972 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37380 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11973 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37386 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11974 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37392 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11975 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37398 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 11979 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37404 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 11980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37410 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11981 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37416 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 11982 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37422 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 11983 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37428 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 11988 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 37434 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 11998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 37444 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 37454 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 37462 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 37470 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 37478 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 37486 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 37494 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 37500 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 37510 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37527 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 37537 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 37548 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37575 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37611 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 37619 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 37635 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12177 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 37646 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37662 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 37672 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 37684 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37706 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37729 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37752 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 37761 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 37769 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 37777 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 37787 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 37797 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 37807 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 37817 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 37823 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 37829 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 37835 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 37841 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 37847 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 37857 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 37867 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 37883 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 37898 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 37910 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37922 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37937 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37949 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 37955 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12481 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 37961 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12483 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 37974 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 37980 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12495 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 37986 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12497 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 37999 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38008 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38017 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38026 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38035 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38044 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38053 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38063 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38073 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 38081 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12571 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 38087 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 38095 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12576 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 38101 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38110 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38120 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38129 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38139 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38145 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12628 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38151 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 38161 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38171 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38181 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 38189 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 38198 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 38212 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 38221 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 38229 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 38238 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 38244 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12715 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 38250 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 38261 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 38274 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 38283 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 38289 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12747 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 38295 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 38303 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38311 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38319 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12795 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38325 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12796 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 38331 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12800 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 38337 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12801 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 38343 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 38349 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 38357 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12827 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 38365 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12831 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 38373 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12835 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 38381 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12839 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 38389 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12843 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 38397 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12847 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 38405 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12851 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 38413 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12855 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 38421 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12859 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 38429 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12866 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->show_profile_query_id= 0;
    }
#line 38437 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12870 "sql_yacc.yy" /* yacc.c:1646  */
    {
      int error;
      Lex->show_profile_query_id=
        static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
#line 38449 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 38460 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12894 "sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38473 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12903 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);

             MAKE_CMD(p);
           }
#line 38483 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12909 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[-3].is_not_empty);
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38499 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12921 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38514 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12932 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[0].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
#line 38529 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->set_wild((yyvsp[0].wild_or_where).wild)) {
              MYSQL_YYABORT; // OOM
            }
            if ((yyvsp[0].wild_or_where).where != nullptr) {
              ITEMIZE((yyvsp[0].wild_or_where).where, &(yyvsp[0].wild_or_where).where);
              Select->set_where_cond((yyvsp[0].wild_or_where).where);
            }
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 38548 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 38559 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, to_lex_cstring((yyvsp[-1].lexer.lex_str)), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
#line 38571 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12973 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info->db_type= NULL; }
#line 38577 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            Item *where= (yyvsp[0].wild_or_where).where;
            LEX_STRING wild= (yyvsp[0].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
#line 38599 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 38607 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 13002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 38615 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 13006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 38624 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 13011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));
          }
#line 38633 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 13016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 38642 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 13021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[-1].limit_clause));
          }
#line 38651 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 13031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
#line 38668 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 13044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 38679 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 13051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38691 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 13059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38703 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 13067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
#line 38715 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 13075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
#line 38727 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 13083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 38739 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 13091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 38753 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 13101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 38779 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[-1].is_not_empty);
          }
#line 38788 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 38814 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38827 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38840 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
#line 38850 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0);
            MAKE_CMD(tmp);
          }
#line 38859 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0);
            MAKE_CMD(tmp);
          }
#line 38868 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 38877 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 38887 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
#line 38900 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 38912 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 38920 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 38928 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 38939 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 38950 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 38960 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38974 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38988 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 38997 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 39006 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 39015 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[0].lex_user);
          }
#line 39025 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13284 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 39031 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13286 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 39037 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13288 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 39043 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 39049 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 39055 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13307 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 39061 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13308 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 39067 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 39073 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 39079 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 39085 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 39091 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 39097 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 39103 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13329 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 39109 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13330 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str; }
#line 39115 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13334 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 39121 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13335 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 39127 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 39133 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 39139 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 39145 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 39153 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 39161 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 39169 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 39177 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 39195 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=JSON with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 39217 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 39228 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 39234 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 39243 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 39254 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13446 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39260 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39277 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13463 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39283 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13468 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39289 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 39305 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 39317 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 39333 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13506 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39339 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13511 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 39345 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13513 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 39351 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13515 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 39357 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13517 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 39363 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13519 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 39369 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13521 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 39375 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13523 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 39381 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13525 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 39387 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13527 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 39393 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13529 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 39399 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13531 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 39405 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13533 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 39411 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 39417 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 39426 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13548 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39432 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 39443 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 39453 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39463 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13579 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 39469 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 39489 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13601 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 39495 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13602 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 39501 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13606 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39507 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 39522 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 39532 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13628 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39538 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 39546 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 39559 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 39572 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13666 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39578 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13667 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39584 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13668 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 39590 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 39600 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 39623 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13724 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 39629 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13725 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 39635 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13729 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39641 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13730 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39647 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13734 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 39653 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13735 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 39659 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13736 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 39665 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13740 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 39671 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13745 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 39677 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 39683 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13750 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 39689 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13751 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 39695 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 39704 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 39713 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 39723 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 39732 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 39741 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13788 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 39747 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13789 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 39753 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 39762 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 39771 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 39780 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13815 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 39786 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13816 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 39792 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 39798 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13821 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 39804 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13830 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 39810 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13831 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 39816 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13832 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 39822 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 39832 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 39842 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39850 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 39856 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13860 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 39862 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 39874 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 39895 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 39915 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 39924 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 39934 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 39943 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 39952 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 39963 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 39974 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 39985 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 40005 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 40011 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 40022 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 40038 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 14012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 40044 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 14013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 40050 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 14016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 40058 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 14020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 40066 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40074 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 14028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40082 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40090 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40098 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40106 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40114 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40122 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 40130 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 14064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40138 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 40146 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 40154 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 40162 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 40170 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 40181 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 40189 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 40197 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40205 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40213 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 40221 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 40231 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 40241 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 40253 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 40263 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 40275 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14189 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 40281 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40312 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 40326 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 40340 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40357 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40374 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40392 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 40400 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 40417 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 40423 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40435 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 14337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40446 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 40452 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40464 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40475 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40481 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40487 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40493 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 40502 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 40511 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 40519 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 40534 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 40543 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 40552 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 40562 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 14978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 40570 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 14987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 40578 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 14991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 40586 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 14995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 40594 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 14999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 40605 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 15006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 40617 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 15014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 40629 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 15022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 40642 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 15034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 40650 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 15038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40659 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 15043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40668 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 15048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 40677 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 15053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 40686 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 40695 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40704 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 40710 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 40716 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 40724 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 40732 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 15087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 40742 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 15093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 40752 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 15101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 40758 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 40769 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 40779 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15123 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 40785 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 40791 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 40799 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 15134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 40807 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 15142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 40815 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 15145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 40821 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 15149 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40827 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 40833 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 40839 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40845 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40851 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 15157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40857 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 15158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40863 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 15159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40869 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 15160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40875 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 15164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 40881 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 15165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40887 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40893 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40899 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 40905 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 40911 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 15173 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 40917 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 15174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40923 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 15175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40929 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 15176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40935 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 15182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 40943 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 40951 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 40959 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 40967 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 40975 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 40986 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 15216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 40994 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 15220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 41002 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41010 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 15231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41018 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 15235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 41026 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 15242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 41034 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 15246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 41042 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 15253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 41050 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 15259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 41056 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 15260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 41062 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 15265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 41070 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 15271 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 41076 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 15272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 41082 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 15276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 41088 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 15277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 41094 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 15281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 41100 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 15282 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 41106 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 15283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 41112 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 15284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 41118 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 15289 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 41124 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 15291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 41132 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 15295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 41140 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 15299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 41148 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 15303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 41156 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 15307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 41164 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 15316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 41179 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 15327 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41185 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 15329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41196 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2731:
#line 15349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 41225 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 15376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 41231 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2733:
#line 15377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 41237 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 15379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 41246 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 15383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 41252 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 15388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 41267 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 15399 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41273 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2738:
#line 15401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41284 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2739:
#line 15412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 41293 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2740:
#line 15420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 41301 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2741:
#line 15427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 41310 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2742:
#line 15434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 41330 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 15450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"));
          }
#line 41338 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 15454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"));
          }
#line 41346 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 15457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41354 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 15460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)));
          }
#line 41362 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 15464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 41381 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 15479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 41400 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 15501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 41408 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 15505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 41416 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 15514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41424 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 15524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41433 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 15536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41443 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 15544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 41449 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 15545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 41455 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 15549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 41461 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2757:
#line 15550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 41467 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2758:
#line 15551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 41473 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 15552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 41479 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 15556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 41485 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 15557 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 41491 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 15558 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 41497 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 15559 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 41503 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 15560 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 41509 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2765:
#line 15567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 41518 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 15572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 41537 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 15587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 41546 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 15592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 41564 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 15606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 41573 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2770:
#line 15611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 41585 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2771:
#line 15622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 41594 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2772:
#line 15628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41613 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2773:
#line 15643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 41622 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2774:
#line 15648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41638 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2775:
#line 15660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 41652 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2776:
#line 15672 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41658 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2777:
#line 15673 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41664 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2778:
#line 15674 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 41670 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2779:
#line 15675 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 41676 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2782:
#line 15685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 41686 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2783:
#line 15691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 41696 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2784:
#line 15700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 41707 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 15707 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 41713 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 15709 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41719 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 15711 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41725 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2788:
#line 15713 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41731 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2789:
#line 15715 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41737 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 15717 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 41743 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 15719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 41749 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2792:
#line 15721 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 41755 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2793:
#line 15723 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 41761 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2794:
#line 15725 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 41767 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2795:
#line 15727 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 41773 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 15729 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 41779 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 15731 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 41785 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2798:
#line 15733 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 41791 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 15735 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 41797 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 15737 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 41803 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2801:
#line 15739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 41812 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2802:
#line 15744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 41818 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2803:
#line 15746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 41836 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2804:
#line 15760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 41842 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 15762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 41848 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 15764 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 41854 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 15766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 41860 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 15768 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 41866 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 15770 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 41872 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 15772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 41878 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 15774 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 41884 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 15776 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 41890 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15778 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 41896 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15780 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 41902 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 15782 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 41908 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 15784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 41914 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 15786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 41920 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 15790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41926 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41932 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 41946 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 41960 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 41974 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41992 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42008 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 15865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42024 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 15877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 42040 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 15889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 42058 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42068 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 15912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42078 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 15921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42088 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42098 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42104 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15936 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42110 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42116 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42122 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 42137 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 42152 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 42167 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 15978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 42184 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 15991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 42202 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 16005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 42218 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 16017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 42230 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 16028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42248 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 16043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42269 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 16060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42284 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 16071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42299 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 16082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 42317 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 16096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 42332 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 16108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 42349 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 16122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 42367 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 16137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 42383 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 16149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 42395 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 16160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42404 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 16165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42413 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 16173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 42422 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 16178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42431 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 16185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 42437 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 16186 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 42443 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 16191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 42453 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 16197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 42463 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 16207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 42471 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 16211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 42479 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 16215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 42487 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 16219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 42495 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 16225 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42501 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 16227 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 42507 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 16231 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42513 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 16232 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42519 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 16236 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 42525 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 16238 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 42533 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 16242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 42542 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 16247 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 42548 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 16249 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 42554 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 16253 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 42560 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 16255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 42569 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 16262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 42579 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 16267 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42585 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 16271 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42591 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 16272 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42597 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 16277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42603 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 16278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42609 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 16279 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42615 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 16284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42621 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 16285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42627 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 16286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42633 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 16290 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42639 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 16291 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42645 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42658 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42671 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42681 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 16327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42691 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 16336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42701 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 16349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 42707 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 16350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 42713 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 42719 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 42727 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 42733 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 42739 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 42745 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 42751 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16374 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 42757 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16375 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 42763 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 42774 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 42780 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 42791 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16403 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42797 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16405 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42803 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16407 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42809 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 42824 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 42832 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16467 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42838 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16469 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42844 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16471 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42850 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16476 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 42856 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16481 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 42862 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16483 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 42868 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16485 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 42874 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16490 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 42880 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16492 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 42886 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16494 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 42892 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 42932 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 42984 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16589 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 42990 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16590 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 42996 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16591 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 43002 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 43008 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 43014 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 43020 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16610 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 43029 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16616 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 43038 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16633 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 43074 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16665 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 43105 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 43126 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 43147 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16742 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 43174 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16766 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 43182 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16772 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 43227 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16813 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 43239 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 43298 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16880 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 43322 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16900 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 43330 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16905 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 43342 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16913 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 43354 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16921 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 43367 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43376 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43385 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 43394 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43403 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 43412 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 43421 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43427 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43433 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 43446 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 43460 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 43479 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 17008 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43485 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 17009 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43491 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 17013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43497 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 17014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 43503 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 17015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 43509 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 17019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43515 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 17020 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 43521 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 17025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43527 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 17027 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 43533 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 17029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 43539 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 17034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 43549 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 17040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 43559 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 17049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43569 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 17055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 43579 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 17064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43589 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 17070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43599 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 17079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 43612 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 17097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43623 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 17107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43645 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 17128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 43653 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 17132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 43661 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 17139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 43669 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2999:
#line 17143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 43677 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 17147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 43685 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3001:
#line 17153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 43691 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3002:
#line 17154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 43697 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 17159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 43708 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 17165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 43714 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 17170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 43725 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 17177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 43736 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 17187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 43747 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 17194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 43761 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 17206 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 43767 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 17207 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 43773 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 17211 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 43779 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 17213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 43788 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 17220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 43794 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 17222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 43803 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 17227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 43812 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 17234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 43818 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 17235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 43824 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 17241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 43841 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 43845 "/export/home2/pb2/build/sb_4-39697340-1592325428.65/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
